2020-11-19 11:18:29.383 INFO  jdbc.sqltiming Line:373 - select bookfieldf0_.entity_id as entity_i1_6_, bookfieldf0_.bundle as bundle2_6_, bookfieldf0_.delta 
as delta3_6_, bookfieldf0_.field_fsid_value as field_fs4_6_, bookfieldf0_.langcode as langcode5_6_, 
bookfieldf0_.revision_id as revision6_6_ from node__field_fsid bookfieldf0_ where bookfieldf0_.field_fsid_value='708978153660401' 
 {executed in 0 msec}
2020-11-19 11:18:29.384 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------|---------|------------|
|entity_id |bundle |delta |field_fsid_value |langcode |revision_id |
|----------|-------|------|-----------------|---------|------------|
|----------|-------|------|-----------------|---------|------------|

2020-11-19 11:18:29.385 INFO  jdbc.sqltiming Line:373 - insert into node_revision (langcode, nid, revision_default, revision_timestamp, revision_uid) 
values ('zh-hans', 0, 1, 1605755909, 1) 
 {executed in 0 msec}
2020-11-19 11:18:29.386 INFO  jdbc.sqltiming Line:373 - getGeneratedKeys on query: insert into node_revision (langcode, nid, revision_default, revision_timestamp, 
revision_uid) values ('zh-hans', 0, 1, 1605755909, 1) 
 {executed in 0 msec}
2020-11-19 11:18:29.386 INFO  jdbc.resultsettable Line:610 - 
|--------------|
|generated_key |
|--------------|
|30            |
|--------------|

2020-11-19 11:18:29.390 INFO  jdbc.sqltiming Line:373 - insert into node (langcode, type, uuid, vid) values ('zh-hans', 'book', 'db13164a-56ee-4e5c-93fa-9919f6fe989c', 
30) 
 {executed in 0 msec}
2020-11-19 11:18:29.390 INFO  jdbc.sqltiming Line:373 - getGeneratedKeys on query: insert into node (langcode, type, uuid, vid) values ('zh-hans', 
'book', 'db13164a-56ee-4e5c-93fa-9919f6fe989c', 30) 
 {executed in 0 msec}
2020-11-19 11:18:29.391 INFO  jdbc.resultsettable Line:610 - 
|--------------|
|generated_key |
|--------------|
|30            |
|--------------|

2020-11-19 11:18:29.396 INFO  jdbc.sqltiming Line:373 - update node_revision set langcode='zh-hans', nid=30, revision_default=1, revision_timestamp=1605755909, 
revision_uid=1 where vid=30 
 {executed in 0 msec}
2020-11-19 11:18:29.399 INFO  jdbc.sqltiming Line:373 - select bookfieldf0_.entity_id as entity_i1_6_0_, bookfieldf0_.bundle as bundle2_6_0_, bookfieldf0_.delta 
as delta3_6_0_, bookfieldf0_.field_fsid_value as field_fs4_6_0_, bookfieldf0_.langcode as langcode5_6_0_, 
bookfieldf0_.revision_id as revision6_6_0_ from node__field_fsid bookfieldf0_ where bookfieldf0_.entity_id=30 
 {executed in 0 msec}
2020-11-19 11:18:29.400 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------|---------|------------|
|entity_id |bundle |delta |field_fsid_value |langcode |revision_id |
|----------|-------|------|-----------------|---------|------------|
|----------|-------|------|-----------------|---------|------------|

2020-11-19 11:18:29.401 INFO  jdbc.sqltiming Line:373 - insert into node__field_fsid (bundle, delta, field_fsid_value, langcode, revision_id, entity_id) 
values ('book', 0, '708978153660401', 'zh-hans', 30, 30) 
 {executed in 0 msec}
2020-11-19 11:18:29.403 INFO  jdbc.sqltiming Line:373 - select nodefieldf0_.entity_id as entity_i1_15_0_, nodefieldf0_.bundle as bundle2_15_0_, nodefieldf0_.delta 
as delta3_15_0_, nodefieldf0_.field_fsid_value as field_fs4_15_0_, nodefieldf0_.langcode as 
langcode5_15_0_, nodefieldf0_.revision_id as revision6_15_0_ from node_revision__field_fsid 
nodefieldf0_ where nodefieldf0_.entity_id=30 
 {executed in 0 msec}
2020-11-19 11:18:29.404 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------|---------|------------|
|entity_id |bundle |delta |field_fsid_value |langcode |revision_id |
|----------|-------|------|-----------------|---------|------------|
|----------|-------|------|-----------------|---------|------------|

2020-11-19 11:18:29.406 INFO  jdbc.sqltiming Line:373 - insert into node_revision__field_fsid (bundle, delta, field_fsid_value, langcode, revision_id, 
entity_id) values ('book', 0, '708978153660401', 'zh-hans', 30, 30) 
 {executed in 1 msec}
2020-11-19 11:18:29.408 INFO  jdbc.sqltiming Line:373 - select bookentity0_.nid as nid1_1_, bookentity0_.bid as bid2_1_, bookentity0_.depth as depth3_1_, 
bookentity0_.has_children as has_chil4_1_, bookentity0_.p1 as p5_1_, bookentity0_.p2 as p6_1_, 
bookentity0_.p3 as p7_1_, bookentity0_.p4 as p8_1_, bookentity0_.p5 as p9_1_, bookentity0_.pid 
as pid10_1_, bookentity0_.weight as weight11_1_ from book bookentity0_ where bookentity0_.nid=30 
 {executed in 0 msec}
2020-11-19 11:18:29.409 INFO  jdbc.resultsettable Line:610 - 
|----|----|------|-------------|---|---|---|---|---|----|-------|
|nid |bid |depth |has_children |p1 |p2 |p3 |p4 |p5 |pid |weight |
|----|----|------|-------------|---|---|---|---|---|----|-------|
|----|----|------|-------------|---|---|---|---|---|----|-------|

2020-11-19 11:18:29.410 INFO  jdbc.sqltiming Line:373 - select bookentity0_.nid as nid1_1_0_, bookentity0_.bid as bid2_1_0_, bookentity0_.depth as 
depth3_1_0_, bookentity0_.has_children as has_chil4_1_0_, bookentity0_.p1 as p5_1_0_, bookentity0_.p2 
as p6_1_0_, bookentity0_.p3 as p7_1_0_, bookentity0_.p4 as p8_1_0_, bookentity0_.p5 as p9_1_0_, 
bookentity0_.pid as pid10_1_0_, bookentity0_.weight as weight11_1_0_ from book bookentity0_ 
where bookentity0_.nid=30 
 {executed in 0 msec}
2020-11-19 11:18:29.410 INFO  jdbc.resultsettable Line:610 - 
|----|----|------|-------------|---|---|---|---|---|----|-------|
|nid |bid |depth |has_children |p1 |p2 |p3 |p4 |p5 |pid |weight |
|----|----|------|-------------|---|---|---|---|---|----|-------|
|----|----|------|-------------|---|---|---|---|---|----|-------|

2020-11-19 11:18:29.412 INFO  jdbc.sqltiming Line:373 - insert into book (bid, depth, has_children, p1, p2, p3, p4, p5, pid, weight, nid) values (1, 
3, 0, 1, 27, 30, 0, 0, 27, 0, 30) 
 {executed in 0 msec}
2020-11-19 11:18:29.415 INFO  jdbc.sqltiming Line:373 - select nodebodyen0_.entity_id as entity_i1_3_, nodebodyen0_.body_value as body_val2_3_, nodebodyen0_.body_summary 
as body_sum3_3_, nodebodyen0_.bundle as bundle4_3_, nodebodyen0_.delta as delta5_3_, nodebodyen0_.body_format 
as body_for6_3_, nodebodyen0_.langcode as langcode7_3_, nodebodyen0_.revision_id as revision8_3_ 
from node__body nodebodyen0_ where nodebodyen0_.entity_id=30 
 {executed in 0 msec}
2020-11-19 11:18:29.416 INFO  jdbc.resultsettable Line:610 - 
|----------|-----------|-------------|-------|------|------------|---------|------------|
|entity_id |body_value |body_summary |bundle |delta |body_format |langcode |revision_id |
|----------|-----------|-------------|-------|------|------------|---------|------------|
|----------|-----------|-------------|-------|------|------------|---------|------------|

2020-11-19 11:18:29.417 INFO  jdbc.sqltiming Line:373 - select nodebodyre0_.entity_id as entity_i1_12_0_, nodebodyre0_.body_value as body_val2_12_0_, 
nodebodyre0_.body_summary as body_sum3_12_0_, nodebodyre0_.bundle as bundle4_12_0_, nodebodyre0_.delta 
as delta5_12_0_, nodebodyre0_.body_format as body_for6_12_0_, nodebodyre0_.langcode as langcode7_12_0_, 
nodebodyre0_.revision_id as revision8_12_0_ from node_revision__body nodebodyre0_ where nodebodyre0_.entity_id=30 
 {executed in 1 msec}
2020-11-19 11:18:29.417 INFO  jdbc.resultsettable Line:610 - 
|----------|-----------|-------------|-------|------|------------|---------|------------|
|entity_id |body_value |body_summary |bundle |delta |body_format |langcode |revision_id |
|----------|-----------|-------------|-------|------|------------|---------|------------|
|----------|-----------|-------------|-------|------|------------|---------|------------|

2020-11-19 11:18:29.420 INFO  jdbc.sqltiming Line:373 - insert into node_revision__body (body_value, body_summary, bundle, delta, body_format, langcode, 
revision_id, entity_id) values ('<p>你好，我是四火。</p> <p>随着大数据和数据分析趋势的流行，数据可视化变得越来越重要，而许多全栈的学习材料并没有跟上节奏，去介绍这方面的技术。这一讲中，我们将介绍数据可视化的基本概念和原理，以及几个常用的 
JavaScript 用来实现数据可视化的库。</p> <p>数据可视化，即 Data Visualization，是指使用具备视觉表现力的图形和表格等工具，向用户传达数据信息的方式。在我工作过的每个大型团队中，数据可视化技术都有着其不可替代的用武之地。</p> 
<p>在大数据分析团队，数据库可视化技术被用来分析数据变化，验证机器学习算法的效果；在高可用服务团队，数据可视化技术被用来了解和监视服务的运行状况，了解系统的压力和负载；在分布式平台团队，数据可视化技术用来俯瞰一个个异步任务的执行情况，以获知任务执行的健康状况……事实上，只要有工程的地方，数据可视化就扮演着举足轻重的角色。</p> 
<h2>Web 绘图标准</h2> <p>在前端绘图，是数据可视化里面很常见的一个需求，我们常见的有位图和矢量图这样两种。</p> <p>通常我们谈论的图片，绝大多数都是位图。位图又叫栅格图像，<strong>无论位图采用何种压缩算法，它本质就是点阵</strong>，它对于图像本身更具备普适性，无论图像的形状如何，都可以很容易分解为一个二维的点阵，更大的图，或者更高的分辨率，只是需要更密集的点阵而已。</p><!-- 
[[[read_end]]] --> <p>你可能已经听说过矢量图。<strong>矢量图是使用点、线段或者多边形等基于数学方程的几何形状来表示的图像</strong>。将一个复杂图像使用矢量的方式来表达，显然要比位图困难得多，但是矢量图可以无损放大，因为它的本质是一组基于数学方程的几何形状的集合，因此无论放大多少倍，形状都不会发生失真或扭曲。并且图像越大，就越能比相应的位图节约空间，因为矢量图的大小和实际图像大小无关。倘若再采用独立的压缩算法进行压缩，矢量图可以基于文本压缩，从而获得很大的压缩比。</p> 
<p>在早些年的项目中，在后端使用 Python 等语言预生成绘制图像的场景还比较多，但是如今已经少见一些了，大多数的图形生成都被搬到了前端。而这种情况也成为了前后端分离，以及数据和展示分离的典型场景，后端同步或异步生成不同维度的数据，浏览器则通过统一的 
API 根据用户需求获取相应的数据；前端根据这些取得的数据在浏览器中现场绘制图像。关于服务端和客户端聚合的知识，如有遗忘，请回看 <a href="https://time.geekbang.org/column/article/141817">[第 
09 讲]</a>。</p> <p>总的来看，前端绘图，和后端比起来，有这样几个显著的优势。</p> <ul> <li><strong>前端生成的图形图像具有天然的交互性。</strong>前端生成的图像不仅仅意味着一张“图”，还意味着它能够和 
HTML 这样的呈现结构紧密地结合起来，而图像上的组成部分都可以响应用户的行为。</li> <li><strong>图像的生成可能需要显著的资源消耗，放到前端可以减轻服务器压力。</strong>这里的消耗既包括 
CPU、内存等物理资源消耗，还有用户的等待时间消耗，在前端可以更好地给用户提供渲染过程的反馈。</li> <li><strong>图形图像的设计和规划本就属于呈现层，系统架构上把它放到前端更容易实现前后端分离，组织结构上能让擅长视觉处理的前端工程师和 
UX 设计师更自然地工作。</strong>有了数据，就可以对前端的图像生成逻辑进行设计和测试，工程师和设计师只需要专注于前端的通用技能就可以较为独立地完成工作。</li> </ul> 
<p>我们较常听到的 Web 绘图标准包括 VML、SVG 和 Canvas，其中 VML 是微软最初参与制定的标准，一直以来只有 IE 等少数浏览器支持，从 2012 年的 IE 
10 开始它逐渐被废弃了；但是剩余两个，SVG 和 Canvas 有一定互补性，且如今都非常流行，下面我来介绍一下。</p> <h3>1. SVG</h3> <p>SVG 即 Scalable 
Vector Graphics，可缩放矢量图形。它是基于可扩展标记语言（XML），用于描述二维矢量图形的一种图形格式。在它之前，微软曾经向 W3C 交过 VML 的提议，但被拒绝了。之后才有了 
SVG，由 W3C 制定，是一个开放标准，当时在 W3C 自己看来，SVG 的竞争对手应该主要是 Flash。</p> <p>SVG 格式和前面提到的 VML 一样，支持脚本，容易被搜索引擎索引。SVG 
可以嵌入外部对象，比如文字、PNG、JPG，也可以嵌入外部的 SVG。它在移动设备上存在两个子版本，分别叫做 SVG Basic 和 SVG Tiny。SVG 很快获得了各种浏览器的支持，一开始 
IE 还坚守着自家的 VML 不放，但后来也慢慢被迫转移到了 SVG 的阵营，从 IE 9 才开始对 SVG 部分支持。</p> <p>SVG 支持三种格式的图形：矢量图形、栅格图像和文本。所以你看，<strong>SVG 
并不只是一个矢量图的简单表示规范，而是尝试把矢量图、位图和文字统一起来的标准</strong>。我们来亲自写一个 SVG 的小例子，在你的工作文件夹中建立 example.svg，并用文本编辑器打开，录入如下文字：</p> 
<pre style="position: relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> &lt;?xml version="1.0" encoding="UTF-8"?&gt; </div></td> </tr> <tr> 
<td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> &lt;svg xmlns="http://www.w3.org/2000/svg" 
version="1.1" width="300" height="300"&gt; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> &lt;rect x="60" y="60" width="200" height="200" fill="red" stroke="black" 
stroke-width="2px" /&gt; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="4"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
&lt;/svg&gt; </div></td> </tr> </tbody> </table></code> <div class="richcontent-pre-copy"> 
<span class="iconfont"></span>复制代码 </div></pre> <p>我来对上述 XML 做个简单的解释：第一行了指明 XML 的版本和编码；第二行是一个 
svg 的根节点，指明了协议和版本号，图像画布的大小（500 x 500），其中只包含一个矩形（rect），这个矩形的起始位置是（x, y），宽和高都为 200，填充红色，并使用 2px 
宽的黑色线条来描边。</p> <p>接着使用 Chrome 来打开这个文件，你将看到这样的效果：</p> <p><img src="https://static001.geekbang.org/resource/image/3f/86/3f4e7698378c4cf109730d7c5ee2f086.png" 
alt=""></p> <p>接着我们另建立一个 HTML 文件：svg.html，加上 html 标签，并拷贝 XML 中的 svg 标签到这个 HTML 文件中：</p> <pre 
style="position: relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> &lt;!DOCTYPE html&gt; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> &lt;html&gt; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> &lt;body&gt; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> &lt;svg xmlns="http://www.w3.org/2000/svg" version="1.1" width="300" 
height="300"&gt; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="5"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
&lt;rect x="60" y="60" width="200" height="200" fill="red" stroke="black" stroke-width="2px" 
/&gt; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" 
data-line-number="6"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> &lt;/svg&gt; 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="7"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> &lt;/body&gt; </div></td> </tr> <tr> <td 
class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="8"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> &lt;/html&gt; </div></td> </tr> </tbody> 
</table></code> <div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 </div></pre> 
<p>用 Chrome 打开看看效果——嗯，再次展示了这个红色方块。反复点击 Chrome 的 View 菜单下的 Zoom In 选项，将图像放到最大，观察矩形的边角，没有任何模糊和失真，这证明了它确实是矢量图。</p> 
<p><img src="https://static001.geekbang.org/resource/image/d9/5c/d9b9e454a6379295c47133231096bd5c.png" 
alt=""></p> <p>最后打开 Chrome 的开发者工具，在控制台键入：</p> <pre style="position: relative;"><code> <table 
class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" 
data-line-number="1"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> $("svg&gt;rect").setAttribute("fill", 
"green"); </div></td> </tr> </tbody> </table></code> <div class="richcontent-pre-copy"> <span 
class="iconfont"></span>复制代码 </div></pre> <p>你会看到这个矢量图从红色变成了绿色。这充分说明，svg 就是普普通通的 HTML 标签，它可以响应 
JavaScript 的控制。自此，图像对于天天和 HTML 打交道的程序员来说，再也不是一个“二进制黑盒”了。</p> <h3>2. Canvas</h3> <p>Canvas 标签是 
HTML 5 的标签之一，标签可以定义一片区域，允许 JavaScript 动态渲染图像。开始由苹果推出，自家的 Safari 率先支持，IE 从 IE 9 开始支持。</p> <p>Canvas 
和 SVG 有相当程度的互补之处，我们来实现一个 Canvas 的例子，体会下这一点。请在任何工作文件夹中，建立 canvas.html，并写入：</p> <pre style="position: 
relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
&lt;!DOCTYPE html&gt; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="2"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
&lt;html&gt; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" 
data-line-number="3"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> &lt;body&gt; 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> &lt;canvas width="300" height="300"&gt;&lt;/canvas&gt; 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> &lt;script type="text/javascript"&gt; 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> var canvas = document.getElementsByTagName(''canvas'')[0]; 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="7"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> var ctx = canvas.getContext(''2d''); </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="8"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> ctx.rect(60,60,200,200); </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="9"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="10"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> ctx.fillStyle = ''RED''; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="11"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> ctx.fill(); </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="12"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="13"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
ctx.strokeStyle = ''BLACK''; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="14"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
ctx.stroke(); </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="15"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
&lt;/script&gt; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="16"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
&lt;/body&gt; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="17"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
&lt;/html&gt; </div></td> </tr> </tbody> </table></code> <div class="richcontent-pre-copy"> 
<span class="iconfont"></span>复制代码 </div></pre> <p>代码很容易理解，获取到 canvas 节点以后，获取一个 2D 上下文，接着设置好矩形的位置和大小，分别进行填充和描线的操作。接着使用 
Chrome 打开，你会发现效果和 SVG 的例子一样，展示了这个具备黑色边框的红色方块。</p> <p><img src="https://static001.geekbang.org/resource/image/ea/c9/ea7cd35069fdf2216eb490cfa8ef72c9.png" 
alt=""></p> <p>看起来和 SVG 差不多对不对？我们也来执行相同的操作，反复点击 Chrome 的 View 菜单下的 Zoom In 选项，将图像放到最大：</p> 
<p><img src="https://static001.geekbang.org/resource/image/5b/f6/5bda99bcbf2f4eddbddd5361440185f6.png" 
alt=""></p> <p>你看，矩形的边角不再清晰，这说明这种方式绘制的不是矢量图，而是位图。再使用 Chrome 的开发者工具，点击左上角的 DOM 选择箭头，选中这个矩形，我们发现，和 
SVG 不同的是，这个 canvas 节点内部并没有任何 DOM 结构。</p> <p><img src="https://static001.geekbang.org/resource/image/55/c8/5584741d7f3bbab26690d46a0ce2e8c8.jpg" 
alt=""></p> <p>虽然这是一个小小的例子，但足以看出 Canvas 和 SVG 之间的明显差异和互补性了。</p> <p>总的来说，从图片描述过程上来说，SVG 是 HTML 
标签原生支持的，因此就可以使用这种<strong>声明式的语言</strong>来描述图片，它更加直观、形象、具体，每一个图形组成的 DOM 都可以很方便地绑定和用户交互的事件。<strong>这种在渲染技术上通过提供一套完整的图像绘制模型来实现的方式叫做 
<a href="https://en.wikipedia.org/wiki/Retained_mode">Retained Mode</a>。</strong></p> <p>Canvas 
则是藉由 JavaScript 的<strong>命令式的语言</strong>对既定 API 的调用，来完成图像的绘制，canvas 标签的内部，并没有任何 DOM 结构，这让它无法使用传统的 
DOM 对象绑定的方式来和图像内部的元素进行互动，但它更直接、可编程性强，在浏览器内存中不需要为了图形维护一棵巨大的 DOM 树，这也让它在遇到大量的密集对象时，拥有更高的渲染性能。<strong>这种在渲染技术上通过直接调用图形对象的绘制命令接口来实现的方式叫做 
<a href="https://en.wikipedia.org/wiki/Immediate_mode_(computer_graphics)">Immediate Mode</a>。</strong></p> 
<p>讲到这里，不知道你是否联想到了我们之前反复提到过的，声明式编程和命令式编程在全栈技术中的应用，如果你忘记了，可以回看 <a href="https://time.geekbang.org/column/article/140196">[第 
07 讲]</a> 中的介绍。所以，我想再次说，技术都是相通的。</p> <p><img src="https://static001.geekbang.org/resource/image/41/76/41df55e850904a275a28708e94d4fa76.jpg" 
alt="">（上图来自 <a href="https://docs.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/samples/gg193983(v=vs.85)">SVG 
vs canvas: how to choose</a>，比较了 SVG 和 Canvas 其中的一些优劣）</p> <p>我们从这些例子中可以看出来，无论选用哪一种技术，HTML 
5 的出现，都给了浏览器底气。以往由于其自身能力的限制，浏览器的很多领土都被播放器控件、Flash 等蚕食了，HTML 5 正助其将领土重新夺回来（你可能已经听说了，Chrome 已经开始用提示条警告：从 
2020 年 12 月起 Chrome 将不再支持 Flash）。</p> <p>使用这种方式，以往浏览器内的这些插件和扩展的“黑盒”全部通过原生的 HTML 标签完成替换支持，少了一个软件“层”，多了一分透明，视频、音频等媒体由浏览器底层直接支持，性能会更加出色，交互性更好。</p> 
<h2>数据可视化的 JavaScript 库</h2> <p>数据可视化的 JavaScript 库有很多，我想它们可以简单分为两类：绝大多数都比较专精，完成某一类的图表绘制工作，比如 
<a href="http://www.flotcharts.org/">Flot</a>；但是也有一些相对通用而强大，比如 <a href="https://d3js.org/">D3.js</a>。</p> 
<h3>1. Flot</h3> <p>Flot 是一个非常简单的图表绘制的 jQuery 插件，这样类似的库有很多，它们绝大多数包含这样两个特点：</p> <ul> <li>在使用上都包含 
DOM 选择、选项设置、数据绑定、行为绑定等几个常见步骤，简单、直接，没有特定的领域语言，也没有复杂的模式套用；</li> <li>它们往往针对性解决特定的、狭窄领域的问题，比如就是用来绘制二维坐标图，或者就是用来生成二维表格。</li> 
</ul> <p>我们拿 Flot 举例，来感受一下这两个特点，比如下面这个例子，绘制一条正弦曲线，代码非常得简洁。</p> <p>首先在 HTML 页面中建立一个 div：</p> 
<pre style="position: relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> &lt;div id="plot"&gt;&lt;/div&gt; </div></td> </tr> </tbody> </table></code> 
<div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 </div></pre> <p>接着在 
JavaScript 中，写入如下代码：</p> <pre style="position: relative;"><code> <table class="hljs-ln"> <tbody> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> let data = $.map([...Array(1000).keys()], 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> (x, i) =&gt; [[i, Math.sin(x/100)]]); 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> $.plot("#plot", [{ data }], { </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> xaxis: { ticks: [ </div></td> </tr> <tr> 
<td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> 0, </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> [ 100 * Math.PI, "Pi" ], </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="7"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> [ 200 * Math.PI, "2Pi" ], </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="8"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> [ 300 * Math.PI, "3Pi" ] </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="9"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> ]} </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="10"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
}); </div></td> </tr> </tbody> </table></code> <div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 
</div></pre> <p>按照前面说的常见步骤，我来简单解释一下。</p> <ul> <li>DOM 选择：“#plot”是 jQuery 的选择器，取得了 id 为 plot 
的 DOM；</li> <li>数据绑定：从 0 到 1000 的数中，给每一个数除以 100，再取它的正弦，将结果和数的序号捆绑起来放到入参 data 中；</li> <li>行为绑定：这里没有显示绑定行为，有一些默认的响应行为由库实现；</li> 
<li>选项设置：后面跟着的参数，其中包含 xaxis 用于设置 x 轴的坐标显示。</li> </ul> <p>通过这样简单的代码，就可以得到如下效果：</p> <p><img src="https://static001.geekbang.org/resource/image/bc/7b/bc4af845f71bd7f97c5ae97fd5abf57b.png" 
alt=""></p> <p>如果你考察生成的对象，你会发现它是使用 Canvas 来绘制的。</p> <h3>2. D3.js</h3> <p>第二类可视化 JavaScript 
库相对较为通用。D3.js 是一个基于数据的操作文档的 JavaScript 库，可以让你绑定任何数据到 DOM，支持 DIV 这类常规 DOM 进行的图案生成，也支持 SVG 这种图案的生成。D3 
帮助你屏蔽了浏览器差异，并且<strong>通过基于容器和数据匹配状态变更的解耦设计，这种方式对于绘制某些动态变化的、画布元素根据数据按照一定规则变动的图像，代码会非常得清晰简洁。</strong></p> 
<p>这种方法就是 “Enter and Exit” 机制，下面我们来着重理解一下它。</p> <p>这种机制建立在容器节点和数据映射的关系上，即“一个萝卜一个坑”，数据项就是萝卜，容器节点就是坑。在数据变动的过程中，通过每个节点位置和每个数据项的匹配，发生如下三种行为之一：</p> 
<ul> <li>如果数据项能够找到它所属的节点，发生 update 事件；</li> <li>如果数据项更多，节点数量不够，对于无法找到节点的数据项，发生 enter 事件；</li> 
<li>如果数据项减少，即原有的数据项离开了节点，发生 exit 事件。</li> </ul> <p><img src="https://static001.geekbang.org/resource/image/b7/1c/b7855ee66e852299334da11e6d9b6e1c.png" 
alt="">（来自 <a href="http://vis.stanford.edu/files/2011-D3-InfoVis.pdf">D3: Data-Driven Documents</a>）</p> 
<p>下面，我们还是让代码说话，用一个简单的小例子，来展示这个过程。HTML 中有这样一个 DOM，作为画布，准备用 D3.js 在上面作画：</p> <pre style="position: 
relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
&lt;svg&gt;&lt;/svg&gt; </div></td> </tr> </tbody> </table></code> <div class="richcontent-pre-copy"> 
<span class="iconfont"></span>复制代码 </div></pre> <p>定义一个作画方法 render，任何时候我们希望针对改变的数据，重新更新画布，只需要调用下面定义的 
render 方法：</p> <pre style="position: relative;"><code> <table class="hljs-ln"> <tbody> <tr> 
<td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> let render = (data) =&gt; { </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> // 选择节点 </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> var circles = d3 </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> .select(''svg'') </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> .selectAll(''circle''); </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="7"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
// 默认行为，对应于 update </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="8"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
circles.data(data) </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="9"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
.attr(''r'', 20) </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="10"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
.attr(''cx'', (d, i) =&gt; { return i * 50 + 20; }) </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="11"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> .attr(''cy'', (d, i) =&gt; { return 20; }) </div></td> </tr> <tr> 
<td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="12"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> .style(''fill'', ''BLUE'') </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="13"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="14"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> // 新 data 加入，对应于 enter </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="15"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> circles.data(data) </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="16"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> .enter() </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div 
class="hljs-ln-line hljs-ln-n" data-line-number="17"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> .append(''circle'') </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="18"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> .attr(''r'', 20) </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="19"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> .attr(''cx'', (d, i) =&gt; { return i * 50 + 20; }) </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="20"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> .attr(''cy'', (d, i) =&gt; { return 20; 
}) </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" 
data-line-number="21"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> .style(''opacity'', 
0) </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" 
data-line-number="22"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> .style(''fill'', 
''RED'') </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" 
data-line-number="23"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> .transition() 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="24"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> .duration(1000) </div></td> </tr> <tr> 
<td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="25"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> .style(''opacity'', 1) </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="26"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="27"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> // 旧 data 离开，对应于 exit </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="28"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> circles.data(data) </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="29"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> .exit() </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div 
class="hljs-ln-line hljs-ln-n" data-line-number="30"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> .transition() </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="31"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> .duration(1000) </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="32"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> .style(''opacity'',0) </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="33"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> .remove(); </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div 
class="hljs-ln-line hljs-ln-n" data-line-number="34"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> }; </div></td> </tr> </tbody> </table></code> <div class="richcontent-pre-copy"> 
<span class="iconfont"></span>复制代码 </div></pre> <p>你看，render 方法包含了这样几步：</p> <ul> <li>首先，选择节点，即“萝卜坑”，在最开始的时候，一个坑也没有，即 
svg 节点内没有任何 circle 节点；</li> <li>第二步，定义了默认的 update 行为，在数据项，即萝卜保持占据萝卜坑的时候，进行的操作，在这里就是绘制蓝色的坑；</li> 
<li>第三步，定义 enter 行为，即对于新来的萝卜，无法找到相应萝卜坑的时候，进行的操作，例子中就是建立新的红色的坑；</li> <li>第四步，定义 exit 行为，当有萝卜要离开萝卜坑的时候，需要进行的操作，例子中就是删掉原有的坑。</li> 
</ul> <p>其中链式调用中的 transition() 定义了在执行某些过程时，以过渡动画的方式来进行，例子中无论是“挖坑”还是“填坑”，都通过透明度渐变的方法来实现过渡。</p> 
<p>最后，我们在第 0 秒的时候种下了 3 个萝卜，由于之前没有萝卜坑，于是发生了三次 enter 行为；第 2 秒的时候我们将萝卜减少到了 2 个，于是发生了一次 exit 行为；在第 
4 秒的时候我们将萝卜数量变为 4 个，于是发生两次 enter 行为：</p> <pre style="position: relative;"><code> <table class="hljs-ln"> 
<tbody> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> render([1, 2, 3]); </div></td> </tr> <tr> 
<td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> setTimeout(() =&gt; { render([1, 2]); 
}, 2000); </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" 
data-line-number="3"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> setTimeout(() 
=&gt; { render([1, 2, 3, 4]); }, 4000); </div></td> </tr> </tbody> </table></code> <div class="richcontent-pre-copy"> 
<span class="iconfont"></span>复制代码 </div></pre> <p>效果如下：</p> <p><img src="https://static001.geekbang.org/resource/image/52/72/525f4372f828ff85078c68d4dc28d372.gif" 
alt=""></p> <p>不知道你是否还记得我们在 <a href="https://time.geekbang.org/column/article/151127">[第 16 
讲]</a> 中介绍过的 Redux，D3.js 的这种机制和 Redux 的状态管理有着相似和相通之处。<strong>状态都在统一的地方维护，而状态的改变，都通过事件的发生和响应机制来进行，且都将事件的响应逻辑（回调）交给用户来完成。</strong>其实，这是一种很常见的“套路”，我们在后面的学习中，还将见到它的实现。</p> 
<h2>总结思考</h2> <p>今天，我们学习了 Web 绘图标准的基础知识，比较了 SVG 和 Canvas 这两种具备互补性的技术实现；同时，我们也学习了 Flot 和 D3.js 
这两个差异很大，但都具备代表性的可视化 JavaScript 库。</p> <p>希望你除了这两项同类技术之间孰优孰劣的比较以外，还掌握了不同类型技术之间联系比较的方法。随着学习的进行，对不同类型技术慢慢具备“深入”和“浅出”两个方向的理解，逐渐将充满关联的知识体系网状结构建立起来。</p> 
<p>最后，我来提两个问题，供你思考一下吧：</p> <ul> <li>思考一下你经历过的比较大的项目，你是否在项目中使用过数据可视化技术，如果给你一个机会，你觉得该怎样使用呢？</li> 
<li>相信你用过 Google 地图或 Baidu 地图吧，那么，你觉得地图应用应该是用 SVG 还是 Canvas 来实现呢，为什么？</li> </ul> <h2>扩展阅读</h2> 
<ul> <li>对于 SVG 和 Canvas 技术上的详细类比，我推荐你阅读 <a href="https://docs.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/samples/gg193983(v=vs.85)">SVG 
vs canvas: how to choose</a> 这篇文章。</li> <li>学习数据可视化的技术有一个学习的小窍门，就是在掌握最基本的原理之后，可以直接跳到例子中去学习。作为可视化的库，对于其视觉上反馈迅速的特点，我们可以利用起来。比如文中提到的这两个库，Flot 
提供了一些<a href="http://www.flotcharts.org/flot/examples/">实用的例子</a>，而 <a href="https://github.com/d3/d3/wiki/Gallery">D3.js 
的例子</a>则是非常震撼。</li> </ul> <p><img src="https://static001.geekbang.org/resource/image/11/8b/1181246bbd51ce348d5729696d1dc28b.jpg" 
alt="unpreview"></p>', '', 'book', 0, 'full_html', 'zh-hans', 30, 30) 
 {executed in 1 msec}
2020-11-19 11:18:29.425 INFO  jdbc.sqltiming Line:373 - select nodebodyen0_.entity_id as entity_i1_3_0_, nodebodyen0_.body_value as body_val2_3_0_, 
nodebodyen0_.body_summary as body_sum3_3_0_, nodebodyen0_.bundle as bundle4_3_0_, nodebodyen0_.delta 
as delta5_3_0_, nodebodyen0_.body_format as body_for6_3_0_, nodebodyen0_.langcode as langcode7_3_0_, 
nodebodyen0_.revision_id as revision8_3_0_ from node__body nodebodyen0_ where nodebodyen0_.entity_id=30 
 {executed in 0 msec}
2020-11-19 11:18:29.425 INFO  jdbc.resultsettable Line:610 - 
|----------|-----------|-------------|-------|------|------------|---------|------------|
|entity_id |body_value |body_summary |bundle |delta |body_format |langcode |revision_id |
|----------|-----------|-------------|-------|------|------------|---------|------------|
|----------|-----------|-------------|-------|------|------------|---------|------------|

2020-11-19 11:18:29.428 INFO  jdbc.sqltiming Line:373 - insert into node__body (body_value, body_summary, bundle, delta, body_format, langcode, revision_id, 
entity_id) values ('<p>你好，我是四火。</p> <p>随着大数据和数据分析趋势的流行，数据可视化变得越来越重要，而许多全栈的学习材料并没有跟上节奏，去介绍这方面的技术。这一讲中，我们将介绍数据可视化的基本概念和原理，以及几个常用的 
JavaScript 用来实现数据可视化的库。</p> <p>数据可视化，即 Data Visualization，是指使用具备视觉表现力的图形和表格等工具，向用户传达数据信息的方式。在我工作过的每个大型团队中，数据可视化技术都有着其不可替代的用武之地。</p> 
<p>在大数据分析团队，数据库可视化技术被用来分析数据变化，验证机器学习算法的效果；在高可用服务团队，数据可视化技术被用来了解和监视服务的运行状况，了解系统的压力和负载；在分布式平台团队，数据可视化技术用来俯瞰一个个异步任务的执行情况，以获知任务执行的健康状况……事实上，只要有工程的地方，数据可视化就扮演着举足轻重的角色。</p> 
<h2>Web 绘图标准</h2> <p>在前端绘图，是数据可视化里面很常见的一个需求，我们常见的有位图和矢量图这样两种。</p> <p>通常我们谈论的图片，绝大多数都是位图。位图又叫栅格图像，<strong>无论位图采用何种压缩算法，它本质就是点阵</strong>，它对于图像本身更具备普适性，无论图像的形状如何，都可以很容易分解为一个二维的点阵，更大的图，或者更高的分辨率，只是需要更密集的点阵而已。</p><!-- 
[[[read_end]]] --> <p>你可能已经听说过矢量图。<strong>矢量图是使用点、线段或者多边形等基于数学方程的几何形状来表示的图像</strong>。将一个复杂图像使用矢量的方式来表达，显然要比位图困难得多，但是矢量图可以无损放大，因为它的本质是一组基于数学方程的几何形状的集合，因此无论放大多少倍，形状都不会发生失真或扭曲。并且图像越大，就越能比相应的位图节约空间，因为矢量图的大小和实际图像大小无关。倘若再采用独立的压缩算法进行压缩，矢量图可以基于文本压缩，从而获得很大的压缩比。</p> 
<p>在早些年的项目中，在后端使用 Python 等语言预生成绘制图像的场景还比较多，但是如今已经少见一些了，大多数的图形生成都被搬到了前端。而这种情况也成为了前后端分离，以及数据和展示分离的典型场景，后端同步或异步生成不同维度的数据，浏览器则通过统一的 
API 根据用户需求获取相应的数据；前端根据这些取得的数据在浏览器中现场绘制图像。关于服务端和客户端聚合的知识，如有遗忘，请回看 <a href="https://time.geekbang.org/column/article/141817">[第 
09 讲]</a>。</p> <p>总的来看，前端绘图，和后端比起来，有这样几个显著的优势。</p> <ul> <li><strong>前端生成的图形图像具有天然的交互性。</strong>前端生成的图像不仅仅意味着一张“图”，还意味着它能够和 
HTML 这样的呈现结构紧密地结合起来，而图像上的组成部分都可以响应用户的行为。</li> <li><strong>图像的生成可能需要显著的资源消耗，放到前端可以减轻服务器压力。</strong>这里的消耗既包括 
CPU、内存等物理资源消耗，还有用户的等待时间消耗，在前端可以更好地给用户提供渲染过程的反馈。</li> <li><strong>图形图像的设计和规划本就属于呈现层，系统架构上把它放到前端更容易实现前后端分离，组织结构上能让擅长视觉处理的前端工程师和 
UX 设计师更自然地工作。</strong>有了数据，就可以对前端的图像生成逻辑进行设计和测试，工程师和设计师只需要专注于前端的通用技能就可以较为独立地完成工作。</li> </ul> 
<p>我们较常听到的 Web 绘图标准包括 VML、SVG 和 Canvas，其中 VML 是微软最初参与制定的标准，一直以来只有 IE 等少数浏览器支持，从 2012 年的 IE 
10 开始它逐渐被废弃了；但是剩余两个，SVG 和 Canvas 有一定互补性，且如今都非常流行，下面我来介绍一下。</p> <h3>1. SVG</h3> <p>SVG 即 Scalable 
Vector Graphics，可缩放矢量图形。它是基于可扩展标记语言（XML），用于描述二维矢量图形的一种图形格式。在它之前，微软曾经向 W3C 交过 VML 的提议，但被拒绝了。之后才有了 
SVG，由 W3C 制定，是一个开放标准，当时在 W3C 自己看来，SVG 的竞争对手应该主要是 Flash。</p> <p>SVG 格式和前面提到的 VML 一样，支持脚本，容易被搜索引擎索引。SVG 
可以嵌入外部对象，比如文字、PNG、JPG，也可以嵌入外部的 SVG。它在移动设备上存在两个子版本，分别叫做 SVG Basic 和 SVG Tiny。SVG 很快获得了各种浏览器的支持，一开始 
IE 还坚守着自家的 VML 不放，但后来也慢慢被迫转移到了 SVG 的阵营，从 IE 9 才开始对 SVG 部分支持。</p> <p>SVG 支持三种格式的图形：矢量图形、栅格图像和文本。所以你看，<strong>SVG 
并不只是一个矢量图的简单表示规范，而是尝试把矢量图、位图和文字统一起来的标准</strong>。我们来亲自写一个 SVG 的小例子，在你的工作文件夹中建立 example.svg，并用文本编辑器打开，录入如下文字：</p> 
<pre style="position: relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> &lt;?xml version="1.0" encoding="UTF-8"?&gt; </div></td> </tr> <tr> 
<td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> &lt;svg xmlns="http://www.w3.org/2000/svg" 
version="1.1" width="300" height="300"&gt; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> &lt;rect x="60" y="60" width="200" height="200" fill="red" stroke="black" 
stroke-width="2px" /&gt; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="4"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
&lt;/svg&gt; </div></td> </tr> </tbody> </table></code> <div class="richcontent-pre-copy"> 
<span class="iconfont"></span>复制代码 </div></pre> <p>我来对上述 XML 做个简单的解释：第一行了指明 XML 的版本和编码；第二行是一个 
svg 的根节点，指明了协议和版本号，图像画布的大小（500 x 500），其中只包含一个矩形（rect），这个矩形的起始位置是（x, y），宽和高都为 200，填充红色，并使用 2px 
宽的黑色线条来描边。</p> <p>接着使用 Chrome 来打开这个文件，你将看到这样的效果：</p> <p><img src="https://static001.geekbang.org/resource/image/3f/86/3f4e7698378c4cf109730d7c5ee2f086.png" 
alt=""></p> <p>接着我们另建立一个 HTML 文件：svg.html，加上 html 标签，并拷贝 XML 中的 svg 标签到这个 HTML 文件中：</p> <pre 
style="position: relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> &lt;!DOCTYPE html&gt; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> &lt;html&gt; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> &lt;body&gt; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> &lt;svg xmlns="http://www.w3.org/2000/svg" version="1.1" width="300" 
height="300"&gt; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="5"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
&lt;rect x="60" y="60" width="200" height="200" fill="red" stroke="black" stroke-width="2px" 
/&gt; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" 
data-line-number="6"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> &lt;/svg&gt; 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="7"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> &lt;/body&gt; </div></td> </tr> <tr> <td 
class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="8"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> &lt;/html&gt; </div></td> </tr> </tbody> 
</table></code> <div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 </div></pre> 
<p>用 Chrome 打开看看效果——嗯，再次展示了这个红色方块。反复点击 Chrome 的 View 菜单下的 Zoom In 选项，将图像放到最大，观察矩形的边角，没有任何模糊和失真，这证明了它确实是矢量图。</p> 
<p><img src="https://static001.geekbang.org/resource/image/d9/5c/d9b9e454a6379295c47133231096bd5c.png" 
alt=""></p> <p>最后打开 Chrome 的开发者工具，在控制台键入：</p> <pre style="position: relative;"><code> <table 
class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" 
data-line-number="1"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> $("svg&gt;rect").setAttribute("fill", 
"green"); </div></td> </tr> </tbody> </table></code> <div class="richcontent-pre-copy"> <span 
class="iconfont"></span>复制代码 </div></pre> <p>你会看到这个矢量图从红色变成了绿色。这充分说明，svg 就是普普通通的 HTML 标签，它可以响应 
JavaScript 的控制。自此，图像对于天天和 HTML 打交道的程序员来说，再也不是一个“二进制黑盒”了。</p> <h3>2. Canvas</h3> <p>Canvas 标签是 
HTML 5 的标签之一，标签可以定义一片区域，允许 JavaScript 动态渲染图像。开始由苹果推出，自家的 Safari 率先支持，IE 从 IE 9 开始支持。</p> <p>Canvas 
和 SVG 有相当程度的互补之处，我们来实现一个 Canvas 的例子，体会下这一点。请在任何工作文件夹中，建立 canvas.html，并写入：</p> <pre style="position: 
relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
&lt;!DOCTYPE html&gt; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="2"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
&lt;html&gt; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" 
data-line-number="3"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> &lt;body&gt; 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> &lt;canvas width="300" height="300"&gt;&lt;/canvas&gt; 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> &lt;script type="text/javascript"&gt; 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> var canvas = document.getElementsByTagName(''canvas'')[0]; 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="7"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> var ctx = canvas.getContext(''2d''); </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="8"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> ctx.rect(60,60,200,200); </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="9"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="10"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> ctx.fillStyle = ''RED''; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="11"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> ctx.fill(); </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="12"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="13"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
ctx.strokeStyle = ''BLACK''; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="14"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
ctx.stroke(); </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="15"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
&lt;/script&gt; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="16"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
&lt;/body&gt; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="17"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
&lt;/html&gt; </div></td> </tr> </tbody> </table></code> <div class="richcontent-pre-copy"> 
<span class="iconfont"></span>复制代码 </div></pre> <p>代码很容易理解，获取到 canvas 节点以后，获取一个 2D 上下文，接着设置好矩形的位置和大小，分别进行填充和描线的操作。接着使用 
Chrome 打开，你会发现效果和 SVG 的例子一样，展示了这个具备黑色边框的红色方块。</p> <p><img src="https://static001.geekbang.org/resource/image/ea/c9/ea7cd35069fdf2216eb490cfa8ef72c9.png" 
alt=""></p> <p>看起来和 SVG 差不多对不对？我们也来执行相同的操作，反复点击 Chrome 的 View 菜单下的 Zoom In 选项，将图像放到最大：</p> 
<p><img src="https://static001.geekbang.org/resource/image/5b/f6/5bda99bcbf2f4eddbddd5361440185f6.png" 
alt=""></p> <p>你看，矩形的边角不再清晰，这说明这种方式绘制的不是矢量图，而是位图。再使用 Chrome 的开发者工具，点击左上角的 DOM 选择箭头，选中这个矩形，我们发现，和 
SVG 不同的是，这个 canvas 节点内部并没有任何 DOM 结构。</p> <p><img src="https://static001.geekbang.org/resource/image/55/c8/5584741d7f3bbab26690d46a0ce2e8c8.jpg" 
alt=""></p> <p>虽然这是一个小小的例子，但足以看出 Canvas 和 SVG 之间的明显差异和互补性了。</p> <p>总的来说，从图片描述过程上来说，SVG 是 HTML 
标签原生支持的，因此就可以使用这种<strong>声明式的语言</strong>来描述图片，它更加直观、形象、具体，每一个图形组成的 DOM 都可以很方便地绑定和用户交互的事件。<strong>这种在渲染技术上通过提供一套完整的图像绘制模型来实现的方式叫做 
<a href="https://en.wikipedia.org/wiki/Retained_mode">Retained Mode</a>。</strong></p> <p>Canvas 
则是藉由 JavaScript 的<strong>命令式的语言</strong>对既定 API 的调用，来完成图像的绘制，canvas 标签的内部，并没有任何 DOM 结构，这让它无法使用传统的 
DOM 对象绑定的方式来和图像内部的元素进行互动，但它更直接、可编程性强，在浏览器内存中不需要为了图形维护一棵巨大的 DOM 树，这也让它在遇到大量的密集对象时，拥有更高的渲染性能。<strong>这种在渲染技术上通过直接调用图形对象的绘制命令接口来实现的方式叫做 
<a href="https://en.wikipedia.org/wiki/Immediate_mode_(computer_graphics)">Immediate Mode</a>。</strong></p> 
<p>讲到这里，不知道你是否联想到了我们之前反复提到过的，声明式编程和命令式编程在全栈技术中的应用，如果你忘记了，可以回看 <a href="https://time.geekbang.org/column/article/140196">[第 
07 讲]</a> 中的介绍。所以，我想再次说，技术都是相通的。</p> <p><img src="https://static001.geekbang.org/resource/image/41/76/41df55e850904a275a28708e94d4fa76.jpg" 
alt="">（上图来自 <a href="https://docs.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/samples/gg193983(v=vs.85)">SVG 
vs canvas: how to choose</a>，比较了 SVG 和 Canvas 其中的一些优劣）</p> <p>我们从这些例子中可以看出来，无论选用哪一种技术，HTML 
5 的出现，都给了浏览器底气。以往由于其自身能力的限制，浏览器的很多领土都被播放器控件、Flash 等蚕食了，HTML 5 正助其将领土重新夺回来（你可能已经听说了，Chrome 已经开始用提示条警告：从 
2020 年 12 月起 Chrome 将不再支持 Flash）。</p> <p>使用这种方式，以往浏览器内的这些插件和扩展的“黑盒”全部通过原生的 HTML 标签完成替换支持，少了一个软件“层”，多了一分透明，视频、音频等媒体由浏览器底层直接支持，性能会更加出色，交互性更好。</p> 
<h2>数据可视化的 JavaScript 库</h2> <p>数据可视化的 JavaScript 库有很多，我想它们可以简单分为两类：绝大多数都比较专精，完成某一类的图表绘制工作，比如 
<a href="http://www.flotcharts.org/">Flot</a>；但是也有一些相对通用而强大，比如 <a href="https://d3js.org/">D3.js</a>。</p> 
<h3>1. Flot</h3> <p>Flot 是一个非常简单的图表绘制的 jQuery 插件，这样类似的库有很多，它们绝大多数包含这样两个特点：</p> <ul> <li>在使用上都包含 
DOM 选择、选项设置、数据绑定、行为绑定等几个常见步骤，简单、直接，没有特定的领域语言，也没有复杂的模式套用；</li> <li>它们往往针对性解决特定的、狭窄领域的问题，比如就是用来绘制二维坐标图，或者就是用来生成二维表格。</li> 
</ul> <p>我们拿 Flot 举例，来感受一下这两个特点，比如下面这个例子，绘制一条正弦曲线，代码非常得简洁。</p> <p>首先在 HTML 页面中建立一个 div：</p> 
<pre style="position: relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> &lt;div id="plot"&gt;&lt;/div&gt; </div></td> </tr> </tbody> </table></code> 
<div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 </div></pre> <p>接着在 
JavaScript 中，写入如下代码：</p> <pre style="position: relative;"><code> <table class="hljs-ln"> <tbody> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> let data = $.map([...Array(1000).keys()], 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> (x, i) =&gt; [[i, Math.sin(x/100)]]); 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> $.plot("#plot", [{ data }], { </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> xaxis: { ticks: [ </div></td> </tr> <tr> 
<td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> 0, </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> [ 100 * Math.PI, "Pi" ], </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="7"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> [ 200 * Math.PI, "2Pi" ], </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="8"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> [ 300 * Math.PI, "3Pi" ] </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="9"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> ]} </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="10"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
}); </div></td> </tr> </tbody> </table></code> <div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 
</div></pre> <p>按照前面说的常见步骤，我来简单解释一下。</p> <ul> <li>DOM 选择：“#plot”是 jQuery 的选择器，取得了 id 为 plot 
的 DOM；</li> <li>数据绑定：从 0 到 1000 的数中，给每一个数除以 100，再取它的正弦，将结果和数的序号捆绑起来放到入参 data 中；</li> <li>行为绑定：这里没有显示绑定行为，有一些默认的响应行为由库实现；</li> 
<li>选项设置：后面跟着的参数，其中包含 xaxis 用于设置 x 轴的坐标显示。</li> </ul> <p>通过这样简单的代码，就可以得到如下效果：</p> <p><img src="https://static001.geekbang.org/resource/image/bc/7b/bc4af845f71bd7f97c5ae97fd5abf57b.png" 
alt=""></p> <p>如果你考察生成的对象，你会发现它是使用 Canvas 来绘制的。</p> <h3>2. D3.js</h3> <p>第二类可视化 JavaScript 
库相对较为通用。D3.js 是一个基于数据的操作文档的 JavaScript 库，可以让你绑定任何数据到 DOM，支持 DIV 这类常规 DOM 进行的图案生成，也支持 SVG 这种图案的生成。D3 
帮助你屏蔽了浏览器差异，并且<strong>通过基于容器和数据匹配状态变更的解耦设计，这种方式对于绘制某些动态变化的、画布元素根据数据按照一定规则变动的图像，代码会非常得清晰简洁。</strong></p> 
<p>这种方法就是 “Enter and Exit” 机制，下面我们来着重理解一下它。</p> <p>这种机制建立在容器节点和数据映射的关系上，即“一个萝卜一个坑”，数据项就是萝卜，容器节点就是坑。在数据变动的过程中，通过每个节点位置和每个数据项的匹配，发生如下三种行为之一：</p> 
<ul> <li>如果数据项能够找到它所属的节点，发生 update 事件；</li> <li>如果数据项更多，节点数量不够，对于无法找到节点的数据项，发生 enter 事件；</li> 
<li>如果数据项减少，即原有的数据项离开了节点，发生 exit 事件。</li> </ul> <p><img src="https://static001.geekbang.org/resource/image/b7/1c/b7855ee66e852299334da11e6d9b6e1c.png" 
alt="">（来自 <a href="http://vis.stanford.edu/files/2011-D3-InfoVis.pdf">D3: Data-Driven Documents</a>）</p> 
<p>下面，我们还是让代码说话，用一个简单的小例子，来展示这个过程。HTML 中有这样一个 DOM，作为画布，准备用 D3.js 在上面作画：</p> <pre style="position: 
relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
&lt;svg&gt;&lt;/svg&gt; </div></td> </tr> </tbody> </table></code> <div class="richcontent-pre-copy"> 
<span class="iconfont"></span>复制代码 </div></pre> <p>定义一个作画方法 render，任何时候我们希望针对改变的数据，重新更新画布，只需要调用下面定义的 
render 方法：</p> <pre style="position: relative;"><code> <table class="hljs-ln"> <tbody> <tr> 
<td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> let render = (data) =&gt; { </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> // 选择节点 </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> var circles = d3 </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> .select(''svg'') </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> .selectAll(''circle''); </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="7"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
// 默认行为，对应于 update </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="8"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
circles.data(data) </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="9"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
.attr(''r'', 20) </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="10"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
.attr(''cx'', (d, i) =&gt; { return i * 50 + 20; }) </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="11"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> .attr(''cy'', (d, i) =&gt; { return 20; }) </div></td> </tr> <tr> 
<td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="12"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> .style(''fill'', ''BLUE'') </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="13"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="14"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> // 新 data 加入，对应于 enter </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="15"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> circles.data(data) </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="16"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> .enter() </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div 
class="hljs-ln-line hljs-ln-n" data-line-number="17"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> .append(''circle'') </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="18"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> .attr(''r'', 20) </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="19"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> .attr(''cx'', (d, i) =&gt; { return i * 50 + 20; }) </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="20"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> .attr(''cy'', (d, i) =&gt; { return 20; 
}) </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" 
data-line-number="21"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> .style(''opacity'', 
0) </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" 
data-line-number="22"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> .style(''fill'', 
''RED'') </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" 
data-line-number="23"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> .transition() 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="24"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> .duration(1000) </div></td> </tr> <tr> 
<td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="25"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> .style(''opacity'', 1) </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="26"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="27"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> // 旧 data 离开，对应于 exit </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="28"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> circles.data(data) </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="29"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> .exit() </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div 
class="hljs-ln-line hljs-ln-n" data-line-number="30"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> .transition() </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="31"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> .duration(1000) </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="32"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> .style(''opacity'',0) </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="33"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> .remove(); </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div 
class="hljs-ln-line hljs-ln-n" data-line-number="34"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> }; </div></td> </tr> </tbody> </table></code> <div class="richcontent-pre-copy"> 
<span class="iconfont"></span>复制代码 </div></pre> <p>你看，render 方法包含了这样几步：</p> <ul> <li>首先，选择节点，即“萝卜坑”，在最开始的时候，一个坑也没有，即 
svg 节点内没有任何 circle 节点；</li> <li>第二步，定义了默认的 update 行为，在数据项，即萝卜保持占据萝卜坑的时候，进行的操作，在这里就是绘制蓝色的坑；</li> 
<li>第三步，定义 enter 行为，即对于新来的萝卜，无法找到相应萝卜坑的时候，进行的操作，例子中就是建立新的红色的坑；</li> <li>第四步，定义 exit 行为，当有萝卜要离开萝卜坑的时候，需要进行的操作，例子中就是删掉原有的坑。</li> 
</ul> <p>其中链式调用中的 transition() 定义了在执行某些过程时，以过渡动画的方式来进行，例子中无论是“挖坑”还是“填坑”，都通过透明度渐变的方法来实现过渡。</p> 
<p>最后，我们在第 0 秒的时候种下了 3 个萝卜，由于之前没有萝卜坑，于是发生了三次 enter 行为；第 2 秒的时候我们将萝卜减少到了 2 个，于是发生了一次 exit 行为；在第 
4 秒的时候我们将萝卜数量变为 4 个，于是发生两次 enter 行为：</p> <pre style="position: relative;"><code> <table class="hljs-ln"> 
<tbody> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> render([1, 2, 3]); </div></td> </tr> <tr> 
<td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> setTimeout(() =&gt; { render([1, 2]); 
}, 2000); </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" 
data-line-number="3"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> setTimeout(() 
=&gt; { render([1, 2, 3, 4]); }, 4000); </div></td> </tr> </tbody> </table></code> <div class="richcontent-pre-copy"> 
<span class="iconfont"></span>复制代码 </div></pre> <p>效果如下：</p> <p><img src="https://static001.geekbang.org/resource/image/52/72/525f4372f828ff85078c68d4dc28d372.gif" 
alt=""></p> <p>不知道你是否还记得我们在 <a href="https://time.geekbang.org/column/article/151127">[第 16 
讲]</a> 中介绍过的 Redux，D3.js 的这种机制和 Redux 的状态管理有着相似和相通之处。<strong>状态都在统一的地方维护，而状态的改变，都通过事件的发生和响应机制来进行，且都将事件的响应逻辑（回调）交给用户来完成。</strong>其实，这是一种很常见的“套路”，我们在后面的学习中，还将见到它的实现。</p> 
<h2>总结思考</h2> <p>今天，我们学习了 Web 绘图标准的基础知识，比较了 SVG 和 Canvas 这两种具备互补性的技术实现；同时，我们也学习了 Flot 和 D3.js 
这两个差异很大，但都具备代表性的可视化 JavaScript 库。</p> <p>希望你除了这两项同类技术之间孰优孰劣的比较以外，还掌握了不同类型技术之间联系比较的方法。随着学习的进行，对不同类型技术慢慢具备“深入”和“浅出”两个方向的理解，逐渐将充满关联的知识体系网状结构建立起来。</p> 
<p>最后，我来提两个问题，供你思考一下吧：</p> <ul> <li>思考一下你经历过的比较大的项目，你是否在项目中使用过数据可视化技术，如果给你一个机会，你觉得该怎样使用呢？</li> 
<li>相信你用过 Google 地图或 Baidu 地图吧，那么，你觉得地图应用应该是用 SVG 还是 Canvas 来实现呢，为什么？</li> </ul> <h2>扩展阅读</h2> 
<ul> <li>对于 SVG 和 Canvas 技术上的详细类比，我推荐你阅读 <a href="https://docs.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/samples/gg193983(v=vs.85)">SVG 
vs canvas: how to choose</a> 这篇文章。</li> <li>学习数据可视化的技术有一个学习的小窍门，就是在掌握最基本的原理之后，可以直接跳到例子中去学习。作为可视化的库，对于其视觉上反馈迅速的特点，我们可以利用起来。比如文中提到的这两个库，Flot 
提供了一些<a href="http://www.flotcharts.org/flot/examples/">实用的例子</a>，而 <a href="https://github.com/d3/d3/wiki/Gallery">D3.js 
的例子</a>则是非常震撼。</li> </ul> <p><img src="https://static001.geekbang.org/resource/image/11/8b/1181246bbd51ce348d5729696d1dc28b.jpg" 
alt="unpreview"></p>', '', 'book', 0, 'full_html', 'zh-hans', 30, 30) 
 {executed in 1 msec}
2020-11-19 11:18:29.433 INFO  jdbc.sqltiming Line:373 - select nodefiledd0_.nid as nid1_9_, nodefiledd0_.changed as changed2_9_, nodefiledd0_.created 
as created3_9_, nodefiledd0_.default_langcode as default_4_9_, nodefiledd0_.langcode as langcode5_9_, 
nodefiledd0_.promote as promote6_9_, nodefiledd0_.revision_translation_affected as revision7_9_, 
nodefiledd0_.status as status8_9_, nodefiledd0_.sticky as sticky9_9_, nodefiledd0_.title as 
title10_9_, nodefiledd0_.type as type11_9_, nodefiledd0_.uid as uid12_9_, nodefiledd0_.vid 
as vid13_9_ from node_field_data nodefiledd0_ where nodefiledd0_.nid=30 
 {executed in 1 msec}
2020-11-19 11:18:29.433 INFO  jdbc.resultsettable Line:610 - 
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|-----|----|----|
|nid |changed |created |default_langcode |langcode |promote |revision_translation_affected |status |sticky |title |type |uid |vid |
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|-----|----|----|
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|-----|----|----|

2020-11-19 11:18:29.434 INFO  jdbc.sqltiming Line:373 - select nodefieldr0_.nid as nid1_10_0_, nodefieldr0_.changed as changed2_10_0_, nodefieldr0_.created 
as created3_10_0_, nodefieldr0_.default_langcode as default_4_10_0_, nodefieldr0_.langcode 
as langcode5_10_0_, nodefieldr0_.promote as promote6_10_0_, nodefieldr0_.revision_translation_affected 
as revision7_10_0_, nodefieldr0_.status as status8_10_0_, nodefieldr0_.sticky as sticky9_10_0_, 
nodefieldr0_.title as title10_10_0_, nodefieldr0_.uid as uid11_10_0_, nodefieldr0_.vid as vid12_10_0_ 
from node_field_revision nodefieldr0_ where nodefieldr0_.nid=30 
 {executed in 0 msec}
2020-11-19 11:18:29.434 INFO  jdbc.resultsettable Line:610 - 
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|----|----|
|nid |changed |created |default_langcode |langcode |promote |revision_translation_affected |status |sticky |title |uid |vid |
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|----|----|
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|----|----|

2020-11-19 11:18:29.435 INFO  jdbc.sqltiming Line:373 - insert into node_field_revision (changed, created, default_langcode, langcode, promote, revision_translation_affected, 
status, sticky, title, uid, vid, nid) values (1605755909, 1605755909, 1, 'zh-hans', 0, 1, 1, 
0, '18丨千言万语不及一幅画：谈谈数据可视化', 1, 30, 30) 
 {executed in 0 msec}
2020-11-19 11:18:29.439 INFO  jdbc.sqltiming Line:373 - select nodefiledd0_.nid as nid1_9_0_, nodefiledd0_.changed as changed2_9_0_, nodefiledd0_.created 
as created3_9_0_, nodefiledd0_.default_langcode as default_4_9_0_, nodefiledd0_.langcode as 
langcode5_9_0_, nodefiledd0_.promote as promote6_9_0_, nodefiledd0_.revision_translation_affected 
as revision7_9_0_, nodefiledd0_.status as status8_9_0_, nodefiledd0_.sticky as sticky9_9_0_, 
nodefiledd0_.title as title10_9_0_, nodefiledd0_.type as type11_9_0_, nodefiledd0_.uid as uid12_9_0_, 
nodefiledd0_.vid as vid13_9_0_ from node_field_data nodefiledd0_ where nodefiledd0_.nid=30 
 {executed in 0 msec}
2020-11-19 11:18:29.439 INFO  jdbc.resultsettable Line:610 - 
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|-----|----|----|
|nid |changed |created |default_langcode |langcode |promote |revision_translation_affected |status |sticky |title |type |uid |vid |
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|-----|----|----|
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|-----|----|----|

2020-11-19 11:18:29.440 INFO  jdbc.sqltiming Line:373 - insert into node_field_data (changed, created, default_langcode, langcode, promote, revision_translation_affected, 
status, sticky, title, type, uid, vid, nid) values (1605755909, 1605755909, 1, 'zh-hans', 0, 
1, 1, 0, '18丨千言万语不及一幅画：谈谈数据可视化', 'book', 1, 30, 30) 
 {executed in 0 msec}
2020-11-19 11:18:29.444 INFO  jdbc.sqltiming Line:373 - select bookfieldm0_.entity_id as entity_i1_7_, bookfieldm0_.bundle as bundle2_7_, bookfieldm0_.delta 
as delta3_7_, bookfieldm0_.langcode as langcode4_7_, bookfieldm0_.field_media_value as field_me5_7_, 
bookfieldm0_.revision_id as revision6_7_ from node__field_media bookfieldm0_ where bookfieldm0_.entity_id=30 
 {executed in 0 msec}
2020-11-19 11:18:29.445 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------------|------------|
|entity_id |bundle |delta |langcode |field_media_value |revision_id |
|----------|-------|------|---------|------------------|------------|
|----------|-------|------|---------|------------------|------------|

2020-11-19 11:18:29.445 INFO  jdbc.sqltiming Line:373 - select bookfieldm0_.entity_id as entity_i1_7_0_, bookfieldm0_.bundle as bundle2_7_0_, bookfieldm0_.delta 
as delta3_7_0_, bookfieldm0_.langcode as langcode4_7_0_, bookfieldm0_.field_media_value as 
field_me5_7_0_, bookfieldm0_.revision_id as revision6_7_0_ from node__field_media bookfieldm0_ 
where bookfieldm0_.entity_id=30 
 {executed in 0 msec}
2020-11-19 11:18:29.446 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------------|------------|
|entity_id |bundle |delta |langcode |field_media_value |revision_id |
|----------|-------|------|---------|------------------|------------|
|----------|-------|------|---------|------------------|------------|

2020-11-19 11:18:29.447 INFO  jdbc.sqltiming Line:373 - insert into node__field_media (bundle, delta, langcode, field_media_value, revision_id, entity_id) 
values ('book', 0, 'zh-hans', 'https://qdall01.baidupcs.com/file/7a563ddabb56a5096d152b34439dd1de?bkt=en-06f5c65000af0ed6db40bb7b24bd01451f23b5830fd9de47526444b2163930fb161c9f81f4ea72b1&fid=3757516097-778750-74090905837149&time=1605755908&sign=FDTAXUGERLQlBHSKfWqir-DCb740ccc5511e5e8fedcff06b081203-WeF5kAEpwKKED2qwaBZxmoo%2FU7k%3D&to=92&size=16220465&sta_dx=16220465&sta_cs=3504&sta_ft=m4a&sta_ct=7&sta_mt=0&fm2=MH%2CYangquan%2CAnywhere%2C%2Cshanghai%2Cct&ctime=1571655940&mtime=1605754778&resv0=-1&resv1=0&resv2=rlim&resv3=2&resv4=16220465&vuk=3757516097&iv=0&htype=&randtype=em&newver=1&newfm=1&secfm=1&flow_ver=3&pkey=en-9fa97d1671ee21cadea6d823144517c4c5ce313cb8b9347eecc0b256568a58c252523bcb1e3562c6&sl=76480590&expires=8h&rt=pr&r=523464624&mlogid=7502209316865924288&vbdid=2247232042&fin=18%E4%B8%A8%E5%8D%83%E8%A8%80%E4%B8%87%E8%AF%AD%E4%B8%8D%E5%8F%8A%E4%B8%80%E5%B9%85%E7%94%BB%EF%BC%9A%E8%B0%88%E8%B0%88%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96.m4a&bflag=92,34-92&rtype=1&dp-logid=7502209316865924288&dp-callid=0.1.1&hps=1&tsl=80&csl=80&fsl=-1&csign=yVzLQPCt4DblfMLqd2BCjd2RnqQ%3D&so=0&ut=6&uter=0&serv=0&uc=1458616558&ti=9d46d1303ead72daa4e6ac8fc977fa30404bf108248dd6f6&hflag=30&adg=c_15d187590626c675056c89c8026cfc17&reqlabel=778750_l_1bf9445f27094ab64c9f1cb0bdf7ccfa_-1_dd2c452b8e51a0c74130d7cf32c48a2d&ibp=1&by=themis&filename=18%E4%B8%A8%E5%8D%83%E8%A8%80%E4%B8%87%E8%AF%AD%E4%B8%8D%E5%8F%8A%E4%B8%80%E5%B9%85%E7%94%BB%EF%BC%9A%E8%B0%88%E8%B0%88%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96.m4a', 
30, 30) 
 {executed in 0 msec}
2020-11-19 11:18:29.451 INFO  jdbc.sqltiming Line:373 - select nodefieldm0_.entity_id as entity_i1_16_0_, nodefieldm0_.bundle as bundle2_16_0_, nodefieldm0_.delta 
as delta3_16_0_, nodefieldm0_.langcode as langcode4_16_0_, nodefieldm0_.field_media_value as 
field_me5_16_0_, nodefieldm0_.revision_id as revision6_16_0_ from node_revision__field_media 
nodefieldm0_ where nodefieldm0_.entity_id=30 
 {executed in 0 msec}
2020-11-19 11:18:29.452 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------------|------------|
|entity_id |bundle |delta |langcode |field_media_value |revision_id |
|----------|-------|------|---------|------------------|------------|
|----------|-------|------|---------|------------------|------------|

2020-11-19 11:18:29.453 INFO  jdbc.sqltiming Line:373 - insert into node_revision__field_media (bundle, delta, langcode, field_media_value, revision_id, 
entity_id) values ('book', 0, 'zh-hans', 'https://qdall01.baidupcs.com/file/7a563ddabb56a5096d152b34439dd1de?bkt=en-06f5c65000af0ed6db40bb7b24bd01451f23b5830fd9de47526444b2163930fb161c9f81f4ea72b1&fid=3757516097-778750-74090905837149&time=1605755908&sign=FDTAXUGERLQlBHSKfWqir-DCb740ccc5511e5e8fedcff06b081203-WeF5kAEpwKKED2qwaBZxmoo%2FU7k%3D&to=92&size=16220465&sta_dx=16220465&sta_cs=3504&sta_ft=m4a&sta_ct=7&sta_mt=0&fm2=MH%2CYangquan%2CAnywhere%2C%2Cshanghai%2Cct&ctime=1571655940&mtime=1605754778&resv0=-1&resv1=0&resv2=rlim&resv3=2&resv4=16220465&vuk=3757516097&iv=0&htype=&randtype=em&newver=1&newfm=1&secfm=1&flow_ver=3&pkey=en-9fa97d1671ee21cadea6d823144517c4c5ce313cb8b9347eecc0b256568a58c252523bcb1e3562c6&sl=76480590&expires=8h&rt=pr&r=523464624&mlogid=7502209316865924288&vbdid=2247232042&fin=18%E4%B8%A8%E5%8D%83%E8%A8%80%E4%B8%87%E8%AF%AD%E4%B8%8D%E5%8F%8A%E4%B8%80%E5%B9%85%E7%94%BB%EF%BC%9A%E8%B0%88%E8%B0%88%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96.m4a&bflag=92,34-92&rtype=1&dp-logid=7502209316865924288&dp-callid=0.1.1&hps=1&tsl=80&csl=80&fsl=-1&csign=yVzLQPCt4DblfMLqd2BCjd2RnqQ%3D&so=0&ut=6&uter=0&serv=0&uc=1458616558&ti=9d46d1303ead72daa4e6ac8fc977fa30404bf108248dd6f6&hflag=30&adg=c_15d187590626c675056c89c8026cfc17&reqlabel=778750_l_1bf9445f27094ab64c9f1cb0bdf7ccfa_-1_dd2c452b8e51a0c74130d7cf32c48a2d&ibp=1&by=themis&filename=18%E4%B8%A8%E5%8D%83%E8%A8%80%E4%B8%87%E8%AF%AD%E4%B8%8D%E5%8F%8A%E4%B8%80%E5%B9%85%E7%94%BB%EF%BC%9A%E8%B0%88%E8%B0%88%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96.m4a', 
30, 30) 
 {executed in 0 msec}
2020-11-19 11:18:29.457 INFO  jdbc.sqltiming Line:373 - select bookfieldc0_.entity_id as entity_i1_4_, bookfieldc0_.bundle as bundle2_4_, bookfieldc0_.field_comment_value 
as field_co3_4_, bookfieldc0_.delta as delta4_4_, bookfieldc0_.field_comment_format as field_co5_4_, 
bookfieldc0_.langcode as langcode6_4_, bookfieldc0_.revision_id as revision7_4_ from node__field_comment 
bookfieldc0_ where bookfieldc0_.entity_id=30 
 {executed in 1 msec}
2020-11-19 11:18:29.457 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|--------------------|------|---------------------|---------|------------|
|entity_id |bundle |field_comment_value |delta |field_comment_format |langcode |revision_id |
|----------|-------|--------------------|------|---------------------|---------|------------|
|----------|-------|--------------------|------|---------------------|---------|------------|

2020-11-19 11:18:29.458 INFO  jdbc.sqltiming Line:373 - select bookfieldc0_.entity_id as entity_i1_4_0_, bookfieldc0_.bundle as bundle2_4_0_, bookfieldc0_.field_comment_value 
as field_co3_4_0_, bookfieldc0_.delta as delta4_4_0_, bookfieldc0_.field_comment_format as 
field_co5_4_0_, bookfieldc0_.langcode as langcode6_4_0_, bookfieldc0_.revision_id as revision7_4_0_ 
from node__field_comment bookfieldc0_ where bookfieldc0_.entity_id=30 
 {executed in 1 msec}
2020-11-19 11:18:29.458 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|--------------------|------|---------------------|---------|------------|
|entity_id |bundle |field_comment_value |delta |field_comment_format |langcode |revision_id |
|----------|-------|--------------------|------|---------------------|---------|------------|
|----------|-------|--------------------|------|---------------------|---------|------------|

2020-11-19 11:18:29.459 INFO  jdbc.sqltiming Line:373 - insert into node__field_comment (bundle, field_comment_value, delta, field_comment_format, 
langcode, revision_id, entity_id) values ('book', '<li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/12/1d/d6/76fe5259.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>Dream.</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2019-10-21 </div> </div> <!----> 
</div> <div> <div class="_3M6kV3zb_0"> #1思考一下你经历过的比较大的项目，你是否在项目中使用过数据可视化技术，如果给你一个机会，你觉得该怎样使用呢？ 
<br> <br>数据可视化，关键是将用户关注，并且值得分析的数据展示给用户。比如业务系统的业务量，运维系统的监控状态等等。 <br> <br>相信你用过 Google 地图或 Baidu 
地图吧，那么，你觉得地图应用应该是用 SVG 还是 Canvas 来实现呢，为什么？ <br> <br>地图最好还是采用svg来实现，svg可以很好的支撑地图缩放功能，保证缩放时地图保持原样。如果换成Canvas，放大了会模糊，缩太小了会因为点阵过于密集而造成图像扭曲 
</div> <div class="_2r3UB1GX_0"> <span>展开</span><i class="iconfont"></i> </div> <!----> <div 
class="_1w8H0ktn_0 _2A421P4G_0"> <div class="_2jsFl-X0_0"> <i class="iconfont"></i> <span></span> 
</div> <div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class=""></span> </div> <!----> 
</div> </div> </div></li>', 0, 'full_html', 'zh-hans', 30, 30) 
 {executed in 0 msec}
2020-11-19 11:18:29.463 INFO  jdbc.sqltiming Line:373 - select nodefieldc0_.entity_id as entity_i1_13_0_, nodefieldc0_.bundle as bundle2_13_0_, nodefieldc0_.field_comment_value 
as field_co3_13_0_, nodefieldc0_.delta as delta4_13_0_, nodefieldc0_.field_comment_format as 
field_co5_13_0_, nodefieldc0_.langcode as langcode6_13_0_, nodefieldc0_.revision_id as revision7_13_0_ 
from node_revision__field_comment nodefieldc0_ where nodefieldc0_.entity_id=30 
 {executed in 0 msec}
2020-11-19 11:18:29.463 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|--------------------|------|---------------------|---------|------------|
|entity_id |bundle |field_comment_value |delta |field_comment_format |langcode |revision_id |
|----------|-------|--------------------|------|---------------------|---------|------------|
|----------|-------|--------------------|------|---------------------|---------|------------|

2020-11-19 11:18:29.465 INFO  jdbc.sqltiming Line:373 - insert into node_revision__field_comment (bundle, field_comment_value, delta, field_comment_format, 
langcode, revision_id, entity_id) values ('book', '<li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/12/1d/d6/76fe5259.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>Dream.</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2019-10-21 </div> </div> <!----> 
</div> <div> <div class="_3M6kV3zb_0"> #1思考一下你经历过的比较大的项目，你是否在项目中使用过数据可视化技术，如果给你一个机会，你觉得该怎样使用呢？ 
<br> <br>数据可视化，关键是将用户关注，并且值得分析的数据展示给用户。比如业务系统的业务量，运维系统的监控状态等等。 <br> <br>相信你用过 Google 地图或 Baidu 
地图吧，那么，你觉得地图应用应该是用 SVG 还是 Canvas 来实现呢，为什么？ <br> <br>地图最好还是采用svg来实现，svg可以很好的支撑地图缩放功能，保证缩放时地图保持原样。如果换成Canvas，放大了会模糊，缩太小了会因为点阵过于密集而造成图像扭曲 
</div> <div class="_2r3UB1GX_0"> <span>展开</span><i class="iconfont"></i> </div> <!----> <div 
class="_1w8H0ktn_0 _2A421P4G_0"> <div class="_2jsFl-X0_0"> <i class="iconfont"></i> <span></span> 
</div> <div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class=""></span> </div> <!----> 
</div> </div> </div></li>', 0, 'full_html', 'zh-hans', 30, 30) 
 {executed in 1 msec}
2020-11-19 11:18:29.468 INFO  jdbc.sqltiming Line:373 - select bookfieldt0_.entity_id as entity_i1_8_, bookfieldt0_.bundle as bundle2_8_, bookfieldt0_.delta 
as delta3_8_, bookfieldt0_.langcode as langcode4_8_, bookfieldt0_.revision_id as revision5_8_, 
bookfieldt0_.field_thumb_value as field_th6_8_ from node__field_thumb bookfieldt0_ where bookfieldt0_.entity_id=30 
 {executed in 0 msec}
2020-11-19 11:18:29.469 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------|------------------|
|entity_id |bundle |delta |langcode |revision_id |field_thumb_value |
|----------|-------|------|---------|------------|------------------|
|----------|-------|------|---------|------------|------------------|

2020-11-19 11:18:29.469 INFO  jdbc.sqltiming Line:373 - select bookfieldt0_.entity_id as entity_i1_8_0_, bookfieldt0_.bundle as bundle2_8_0_, bookfieldt0_.delta 
as delta3_8_0_, bookfieldt0_.langcode as langcode4_8_0_, bookfieldt0_.revision_id as revision5_8_0_, 
bookfieldt0_.field_thumb_value as field_th6_8_0_ from node__field_thumb bookfieldt0_ where 
bookfieldt0_.entity_id=30 
 {executed in 0 msec}
2020-11-19 11:18:29.469 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------|------------------|
|entity_id |bundle |delta |langcode |revision_id |field_thumb_value |
|----------|-------|------|---------|------------|------------------|
|----------|-------|------|---------|------------|------------------|

2020-11-19 11:18:29.471 INFO  jdbc.sqltiming Line:373 - insert into node__field_thumb (bundle, delta, langcode, revision_id, field_thumb_value, entity_id) 
values ('book', 0, 'zh-hans', 30, 'https://static001.geekbang.org/resource/image/02/b9/022272ea310623ba7708994e570072b9.jpg', 
30) 
 {executed in 1 msec}
2020-11-19 11:18:29.474 INFO  jdbc.sqltiming Line:373 - select nodefieldt0_.entity_id as entity_i1_17_0_, nodefieldt0_.bundle as bundle2_17_0_, nodefieldt0_.delta 
as delta3_17_0_, nodefieldt0_.langcode as langcode4_17_0_, nodefieldt0_.revision_id as revision5_17_0_, 
nodefieldt0_.field_thumb_value as field_th6_17_0_ from node_revision__field_thumb nodefieldt0_ 
where nodefieldt0_.entity_id=30 
 {executed in 0 msec}
2020-11-19 11:18:29.474 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------|------------------|
|entity_id |bundle |delta |langcode |revision_id |field_thumb_value |
|----------|-------|------|---------|------------|------------------|
|----------|-------|------|---------|------------|------------------|

2020-11-19 11:18:29.476 INFO  jdbc.sqltiming Line:373 - insert into node_revision__field_thumb (bundle, delta, langcode, revision_id, field_thumb_value, 
entity_id) values ('book', 0, 'zh-hans', 30, 'https://static001.geekbang.org/resource/image/02/b9/022272ea310623ba7708994e570072b9.jpg', 
30) 
 {executed in 1 msec}
2020-11-19 11:18:29.479 INFO  jdbc.sqltiming Line:373 - select bookfieldf0_.entity_id as entity_i1_5_0_, bookfieldf0_.bundle as bundle2_5_0_, bookfieldf0_.delta 
as delta3_5_0_, bookfieldf0_.field_fenlei_target_id as field_fe4_5_0_, bookfieldf0_.langcode 
as langcode5_5_0_, bookfieldf0_.revision_id as revision6_5_0_ from node__field_fenlei bookfieldf0_ 
where bookfieldf0_.entity_id=30 
 {executed in 0 msec}
2020-11-19 11:18:29.480 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------------|---------|------------|
|entity_id |bundle |delta |field_fenlei_target_id |langcode |revision_id |
|----------|-------|------|-----------------------|---------|------------|
|----------|-------|------|-----------------------|---------|------------|

2020-11-19 11:18:29.481 INFO  jdbc.sqltiming Line:373 - insert into node__field_fenlei (bundle, delta, field_fenlei_target_id, langcode, revision_id, 
entity_id) values ('book', 0, 1, 'zh-hans', 30, 30) 
 {executed in 0 msec}
2020-11-19 11:18:29.485 INFO  jdbc.sqltiming Line:373 - select nodefieldf0_.entity_id as entity_i1_14_0_, nodefieldf0_.bundle as bundle2_14_0_, nodefieldf0_.delta 
as delta3_14_0_, nodefieldf0_.field_fenlei_target_id as field_fe4_14_0_, nodefieldf0_.langcode 
as langcode5_14_0_, nodefieldf0_.revision_id as revision6_14_0_ from node_revision__field_fenlei 
nodefieldf0_ where nodefieldf0_.entity_id=30 
 {executed in 0 msec}
2020-11-19 11:18:29.485 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------------|---------|------------|
|entity_id |bundle |delta |field_fenlei_target_id |langcode |revision_id |
|----------|-------|------|-----------------------|---------|------------|
|----------|-------|------|-----------------------|---------|------------|

2020-11-19 11:18:29.486 INFO  jdbc.sqltiming Line:373 - insert into node_revision__field_fenlei (bundle, delta, field_fenlei_target_id, langcode, revision_id, 
entity_id) values ('book', 0, 1, 'zh-hans', 30, 30) 
 {executed in 0 msec}
2020-11-19 11:19:19.393 INFO  jdbc.sqltiming Line:373 - select bookfieldf0_.entity_id as entity_i1_6_, bookfieldf0_.bundle as bundle2_6_, bookfieldf0_.delta 
as delta3_6_, bookfieldf0_.field_fsid_value as field_fs4_6_, bookfieldf0_.langcode as langcode5_6_, 
bookfieldf0_.revision_id as revision6_6_ from node__field_fsid bookfieldf0_ where bookfieldf0_.field_fsid_value='507724466199032' 
 {executed in 0 msec}
2020-11-19 11:19:19.394 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------|---------|------------|
|entity_id |bundle |delta |field_fsid_value |langcode |revision_id |
|----------|-------|------|-----------------|---------|------------|
|----------|-------|------|-----------------|---------|------------|

2020-11-19 11:19:19.395 INFO  jdbc.sqltiming Line:373 - insert into node_revision (langcode, nid, revision_default, revision_timestamp, revision_uid) 
values ('zh-hans', 0, 1, 1605755959, 1) 
 {executed in 0 msec}
2020-11-19 11:19:19.396 INFO  jdbc.sqltiming Line:373 - getGeneratedKeys on query: insert into node_revision (langcode, nid, revision_default, revision_timestamp, 
revision_uid) values ('zh-hans', 0, 1, 1605755959, 1) 
 {executed in 0 msec}
2020-11-19 11:19:19.397 INFO  jdbc.resultsettable Line:610 - 
|--------------|
|generated_key |
|--------------|
|31            |
|--------------|

2020-11-19 11:19:19.402 INFO  jdbc.sqltiming Line:373 - insert into node (langcode, type, uuid, vid) values ('zh-hans', 'book', 'bf153783-dd22-4495-9459-55223cc8b171', 
31) 
 {executed in 0 msec}
2020-11-19 11:19:19.402 INFO  jdbc.sqltiming Line:373 - getGeneratedKeys on query: insert into node (langcode, type, uuid, vid) values ('zh-hans', 
'book', 'bf153783-dd22-4495-9459-55223cc8b171', 31) 
 {executed in 0 msec}
2020-11-19 11:19:19.403 INFO  jdbc.resultsettable Line:610 - 
|--------------|
|generated_key |
|--------------|
|31            |
|--------------|

2020-11-19 11:19:19.408 INFO  jdbc.sqltiming Line:373 - update node_revision set langcode='zh-hans', nid=31, revision_default=1, revision_timestamp=1605755959, 
revision_uid=1 where vid=31 
 {executed in 0 msec}
2020-11-19 11:19:19.412 INFO  jdbc.sqltiming Line:373 - select bookfieldf0_.entity_id as entity_i1_6_0_, bookfieldf0_.bundle as bundle2_6_0_, bookfieldf0_.delta 
as delta3_6_0_, bookfieldf0_.field_fsid_value as field_fs4_6_0_, bookfieldf0_.langcode as langcode5_6_0_, 
bookfieldf0_.revision_id as revision6_6_0_ from node__field_fsid bookfieldf0_ where bookfieldf0_.entity_id=31 
 {executed in 1 msec}
2020-11-19 11:19:19.412 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------|---------|------------|
|entity_id |bundle |delta |field_fsid_value |langcode |revision_id |
|----------|-------|------|-----------------|---------|------------|
|----------|-------|------|-----------------|---------|------------|

2020-11-19 11:19:19.414 INFO  jdbc.sqltiming Line:373 - insert into node__field_fsid (bundle, delta, field_fsid_value, langcode, revision_id, entity_id) 
values ('book', 0, '507724466199032', 'zh-hans', 31, 31) 
 {executed in 0 msec}
2020-11-19 11:19:19.417 INFO  jdbc.sqltiming Line:373 - select nodefieldf0_.entity_id as entity_i1_15_0_, nodefieldf0_.bundle as bundle2_15_0_, nodefieldf0_.delta 
as delta3_15_0_, nodefieldf0_.field_fsid_value as field_fs4_15_0_, nodefieldf0_.langcode as 
langcode5_15_0_, nodefieldf0_.revision_id as revision6_15_0_ from node_revision__field_fsid 
nodefieldf0_ where nodefieldf0_.entity_id=31 
 {executed in 0 msec}
2020-11-19 11:19:19.417 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------|---------|------------|
|entity_id |bundle |delta |field_fsid_value |langcode |revision_id |
|----------|-------|------|-----------------|---------|------------|
|----------|-------|------|-----------------|---------|------------|

2020-11-19 11:19:19.419 INFO  jdbc.sqltiming Line:373 - insert into node_revision__field_fsid (bundle, delta, field_fsid_value, langcode, revision_id, 
entity_id) values ('book', 0, '507724466199032', 'zh-hans', 31, 31) 
 {executed in 0 msec}
2020-11-19 11:19:19.421 INFO  jdbc.sqltiming Line:373 - select bookentity0_.nid as nid1_1_, bookentity0_.bid as bid2_1_, bookentity0_.depth as depth3_1_, 
bookentity0_.has_children as has_chil4_1_, bookentity0_.p1 as p5_1_, bookentity0_.p2 as p6_1_, 
bookentity0_.p3 as p7_1_, bookentity0_.p4 as p8_1_, bookentity0_.p5 as p9_1_, bookentity0_.pid 
as pid10_1_, bookentity0_.weight as weight11_1_ from book bookentity0_ where bookentity0_.nid=31 
 {executed in 0 msec}
2020-11-19 11:19:19.422 INFO  jdbc.resultsettable Line:610 - 
|----|----|------|-------------|---|---|---|---|---|----|-------|
|nid |bid |depth |has_children |p1 |p2 |p3 |p4 |p5 |pid |weight |
|----|----|------|-------------|---|---|---|---|---|----|-------|
|----|----|------|-------------|---|---|---|---|---|----|-------|

2020-11-19 11:19:19.422 INFO  jdbc.sqltiming Line:373 - select bookentity0_.nid as nid1_1_0_, bookentity0_.bid as bid2_1_0_, bookentity0_.depth as 
depth3_1_0_, bookentity0_.has_children as has_chil4_1_0_, bookentity0_.p1 as p5_1_0_, bookentity0_.p2 
as p6_1_0_, bookentity0_.p3 as p7_1_0_, bookentity0_.p4 as p8_1_0_, bookentity0_.p5 as p9_1_0_, 
bookentity0_.pid as pid10_1_0_, bookentity0_.weight as weight11_1_0_ from book bookentity0_ 
where bookentity0_.nid=31 
 {executed in 0 msec}
2020-11-19 11:19:19.423 INFO  jdbc.resultsettable Line:610 - 
|----|----|------|-------------|---|---|---|---|---|----|-------|
|nid |bid |depth |has_children |p1 |p2 |p3 |p4 |p5 |pid |weight |
|----|----|------|-------------|---|---|---|---|---|----|-------|
|----|----|------|-------------|---|---|---|---|---|----|-------|

2020-11-19 11:19:19.424 INFO  jdbc.sqltiming Line:373 - insert into book (bid, depth, has_children, p1, p2, p3, p4, p5, pid, weight, nid) values (1, 
3, 0, 1, 27, 31, 0, 0, 27, 0, 31) 
 {executed in 0 msec}
2020-11-19 11:19:19.427 INFO  jdbc.sqltiming Line:373 - select nodebodyen0_.entity_id as entity_i1_3_, nodebodyen0_.body_value as body_val2_3_, nodebodyen0_.body_summary 
as body_sum3_3_, nodebodyen0_.bundle as bundle4_3_, nodebodyen0_.delta as delta5_3_, nodebodyen0_.body_format 
as body_for6_3_, nodebodyen0_.langcode as langcode7_3_, nodebodyen0_.revision_id as revision8_3_ 
from node__body nodebodyen0_ where nodebodyen0_.entity_id=31 
 {executed in 0 msec}
2020-11-19 11:19:19.428 INFO  jdbc.resultsettable Line:610 - 
|----------|-----------|-------------|-------|------|------------|---------|------------|
|entity_id |body_value |body_summary |bundle |delta |body_format |langcode |revision_id |
|----------|-----------|-------------|-------|------|------------|---------|------------|
|----------|-----------|-------------|-------|------|------------|---------|------------|

2020-11-19 11:19:19.428 INFO  jdbc.sqltiming Line:373 - select nodebodyre0_.entity_id as entity_i1_12_0_, nodebodyre0_.body_value as body_val2_12_0_, 
nodebodyre0_.body_summary as body_sum3_12_0_, nodebodyre0_.bundle as bundle4_12_0_, nodebodyre0_.delta 
as delta5_12_0_, nodebodyre0_.body_format as body_for6_12_0_, nodebodyre0_.langcode as langcode7_12_0_, 
nodebodyre0_.revision_id as revision8_12_0_ from node_revision__body nodebodyre0_ where nodebodyre0_.entity_id=31 
 {executed in 0 msec}
2020-11-19 11:19:19.429 INFO  jdbc.resultsettable Line:610 - 
|----------|-----------|-------------|-------|------|------------|---------|------------|
|entity_id |body_value |body_summary |bundle |delta |body_format |langcode |revision_id |
|----------|-----------|-------------|-------|------|------------|---------|------------|
|----------|-----------|-------------|-------|------|------------|---------|------------|

2020-11-19 11:19:19.431 INFO  jdbc.sqltiming Line:373 - insert into node_revision__body (body_value, body_summary, bundle, delta, body_format, langcode, 
revision_id, entity_id) values ('<p>你好，我是四火。</p> <p>前几讲我们一直在 JavaScript 的代码中游走，这一讲我们来换换脑子，聊一聊界面设计，讲一讲交互和布局。这部分对于基于 
Web 的全栈工程师来说，不只是技术栈特殊的一部分，还是一个能够给个人发展格局带来更多可能的部分。</p> <h2>1. 单页面应用</h2> <p>SPA，Single-Page 
Application，即单页应用，是一种互联网应用在用户交互方面的模型。</p> <p>用户打开一个页面，大部分操作都在单个页面里面完成。和传统的 MPA（Multiple-Page 
Application）相比，用户体验上，SPA 省去了页面跳转的突兀感受和等待时间，用户体验更加桌面化，操作迅速、切换无缝；软件架构上，SPA 可以更彻底地落实前后端分离，后端彻底变成了一个只暴露 
API 的服务，将不同终端的视图层的工作，特别是页面聚合搬到前端来完成（如有遗忘请回看 <a href="https://time.geekbang.org/column/article/141817">[第 
09 讲]</a>）。</p> <p>对于许多大型应用，SPA 和 MPA 往往是在一定程度上结合起来使用的，比如新浪微博的网页版，用户可以浏览时间线，并作出一些转发评论、媒体播放等等操作，但是也可以跳到单独的单条微博的页面去。</p> 
<p>但 SPA 也有着先天的缺陷。比如说，网页的 SEO（Search Engine Optimization）就是一个例子，单页应用上的操作，引起页面的状态改变，很难被搜索引擎敏锐地捕获到，并使之成为“可搜索到的”，因此 
SPA 页面的 SEO 需要做额外的工作，关于这部分我会在第五章中介绍一些相关知识。</p><!-- [[[read_end]]] --> <p>再比如，浏览器上网页操纵的功能，像前进、后退的功能，也需要一些特别的技巧才能支持，毕竟，和互联网整体翻天覆地的改变相比，浏览器的核心设计一直以来都变化缓慢，而地址栏、页面控制功能等等可都不是为着 
SPA 考虑的。最后，SPA 通常会伴随着大大增加的在线应用复杂程度。</p> <h2>2. 渐进式增强</h2> <p><strong>渐进式增强，即 Progressive Enhancement，强调的是可访问性，即允许不同能力的设备都能够访问网页的基本内容，使用网页的基本功能；但是，当用户使用更加先进的设备时，它能够给用户带来更强大的功能和更好的体验。</strong></p> 
<p>举一个小例子，对于非常极端和基础的设备，网页可以只加载 HTML；更高级一点的设备，则可以加载 CSS；而对于多数高级设备，则还需加载 JavaScript。这三种设备都可以使用网站的核心功能，但是只有最后一类设备可以使用全部功能。当然，实际的增强效果递进未必会那么极端，对于每一个递进，可以只是部分样式，部分标签，部分脚本等等。</p> 
<p>渐进式增强的理念不仅仅可以对不同设备的访问带来普适性，对低端设备的访问更为友好，它还有一些其它优势。比如说，立足于网页基础的 HTML，可以让网页对于搜索引擎更加友好，因为 CSS 
样式和 JavaScript 行为不一定能被搜索引擎解释执行并收录。</p> <p>在这个过程中，HTML 的语义化变得越来越重要。语义化，指的就是让 HTML 页面体现出内容的结构性，即让 
HTML 具备自解释能力，而不是一堆冷冰冰的缺乏语义的标签。你看下面的例子：</p> <pre style="position: relative;"><code> <table class="hljs-ln"> 
<tbody> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> &lt;article&gt; </div></td> </tr> <tr> 
<td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> &lt;h1&gt;Article Title&lt;/h1&gt; </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> &lt;p&gt;This is the content. Please read 
&lt;em&gt;carefully&lt;/em&gt;.&lt;/p&gt; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> &lt;/article&gt; </div></td> </tr> </tbody> </table></code> <div 
class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 </div></pre> <p>其中的 article 
标签，就是具备语义的，表示着其中的内容是一篇文章，我们当然可以使用没有语义的 div 标签来代替，但 article 标签可以让阅读代码的人，浏览器，以及搜索引擎理解这部分的内容。h1 
标签表示标题，p 标签表示段落，而其中的 em 标签表示的是需要强调（如果想使用无语义的标签，可以使用斜体标签 i 来代替），这些用在这里都是具备恰当语义的。</p> <p><strong>和渐进式增强一起谈论的，还有一个相反过程的设计理念，叫做优雅降级，Graceful 
Degradation，本质上它们说的是一个事儿。</strong></p> <p>优雅降级指的是，当高级特性和增强内容无法在用户的设备上展现的时候，依然能够给用户提供一个具备基本功能的，可以工作的应用版本。值得注意的是，优雅降级并非一定发生在用户设备的能力不匹配时，还有可能发生在服务器端资源出现瓶颈的时候，比如某些访问量特别大或者系统出现问题的时刻，资源紧张，服务端可以关闭某一些次要功能，降低一些用户体验，用几种核心资源来保证基础功能的正常运行。</p> 
<p>关于渐进增强和优雅降级，我来举一个 Amazon 网站设计的例子，希望它能帮助你进一步理解。如果你使用先进的 Web 浏览器访问 <a href="https://www.amazon.com/">amazon.com</a>，你会看到完整的功能：</p> 
<p><img src="https://static001.geekbang.org/resource/image/e0/6d/e0e9042739354cd257c0a4c5562c1b6d.png" 
alt=""></p> <p>点击左上角三横线的菜单图标，你将能看到利用 JavaScript 做出的弹出层的效果：</p> <p><img src="https://static001.geekbang.org/resource/image/8a/ab/8a0207fda0c53029c7e42fea22163bab.jpg" 
alt=""></p> <p>现在，我们点击 Chrome 地址栏的锁图标，点击 Site Settings，在设置中关闭对网站的 JavaScript 支持，刷新页面，显示还差不多。但是如果点击左上角的菜单图标，你就会发现，由于没有了 
JavaScript，无法使用弹出层效果，它变成了一个链接，跳转到了商品分类：</p> <p><img src="https://static001.geekbang.org/resource/image/22/47/22487f4e20e1879283feac0fc757ef47.jpg" 
alt=""></p> <p>你看，虽然没有了 JavaScript，遵循这种设计理念，在损失一部分用户体验的情况下 ，你可以继续使用网站，并且可以继续购物，其中的核心功能并没有丢失。</p> 
<p>此外，还有一种可以拿来类比的设计理念，叫做<strong>回归增强</strong>，Regressive Enhancement。它要求为系统的特性设定基线，并应用到较老的设备和浏览器中。于是在设计网页特性时，我们可以按照高级设备的能力来进行，但是在实际开发的实施过程中，对于较低级的设备，提供一些其它的替代方法，让它们也模拟支持这些新特性。</p> 
<p>比方说，HTML 5 的一些特性在偏老的 IE 浏览器中不支持，那么就可以使用 JavaScript 等替代方案实现出相似的效果。我们提到过的类库 jQuery 就遵循着回归增强的设计理念，在一定程度上屏蔽了不同浏览器的差异性。</p> 
<p>举个实际例子，input 标签如果在偏老的浏览器中不支持 placeholder 属性，我们可以利用灰度字体的样式在 input 标签中显示实际内容来模拟这个功能。当用户将输入焦点移到 
input 标签中，再将其从 input 中清空，以便用户能输入实际内容。</p> <p><img src="https://static001.geekbang.org/resource/image/2a/b9/2a2fcffed3b03c5873f069a6c3c6d8b9.jpg" 
alt=""></p> <p>无论是渐进式增强、优雅降级，还是回归增强，都是为了在一定程度上照顾更多的不同能力的设备和浏览器，给用户带来“尽量好”的体验。但是我们在应用这样的设计理念时，需要把握这个度，毕竟，它不是无代价的，而是会增加前端设计开发的复杂性。</p> 
<h2>3. 响应式布局</h2> <p>响应式网页设计，即 RWD，Responsive Web Design，也有称之为<strong>自适应性网页设计</strong>，Adaptive 
Web Design，是一种网页设计方法，<strong>目的是使得同一份网页，在不同的设备上有合适的展现。</strong>几乎页面上所有的元素都可以遵循响应式布局，在不同的设备上产生不同的呈现，包括字体和图像等，但是我们讨论得最多的，却是布局。</p> 
<p>我记得我刚参加工作的那几年，我们对于同一个页面在不同设备上的展示，考虑的最多的问题还是终端适配，并且这种适配还是基于协议的。例如，服务端是返回 Web 页面，<a href="https://zh.wikipedia.org/wiki/%E6%97%A0%E7%BA%BF%E5%BA%94%E7%94%A8%E5%8D%8F%E8%AE%AE">WAP</a> 
1.0 页面（WML 语言描述），还是 WAP 2.0 页面（XHTML 语言描述）？那时候我们还很难去谈论用户体验有多么“合适”，对于这些低端的移动设备，我们充其量只能关心功能的实现是否能保证。</p> 
<p>这部分，我们改变一下学习策略，来动动手，实现下简单的响应式布局页面。假如说我们需要实现一个具有 header、footer 的页面，并且他们需要填满宽度。而中间的主页面部分采用三列布局，左边列定宽，右边列也定宽，中间列宽度自由设置，但是要保证这三列排列起来也填满浏览器的宽度。</p> 
<p>在往下阅读之前，你能否先想想，这该如何实现？</p> <p>现在，我们在任意的工作文件夹下建立一个 responsive layout.html 文件，填写如下内容：</p> 
<pre style="position: relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> &lt;!DOCTYPE html&gt; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> &lt;html&gt; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> &lt;head&gt; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> &lt;link href="style.css" type="text/css" rel="stylesheet"&gt; </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> &lt;/head&gt; </div></td> </tr> <tr> <td 
class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> &lt;body&gt; </div></td> </tr> <tr> <td 
class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="7"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> &lt;header&gt;header&lt;/header&gt; </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="8"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> &lt;aside class="left"&gt;aside&lt;/aside&gt; 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="9"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> &lt;aside class="right"&gt;aside&lt;/aside&gt; 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="10"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> &lt;main class="middle"&gt;main&lt;/main&gt; 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="11"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> &lt;footer&gt;footer&lt;/footer&gt; </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="12"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> &lt;/body&gt; </div></td> </tr> <tr> <td 
class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="13"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> &lt;/html&gt; </div></td> </tr> </tbody> 
</table></code> <div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 </div></pre> 
<p>你看，这个文件结构是很简单的，但是具备了我们所需要的要素，包括 header、中间三列以及 footer。这个页面将引入 style.css，因此，我们在同一目录下，建立 style.css：</p> 
<pre style="position: relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> * { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="2"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
height: 100px; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="3"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
margin: 10px; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="4"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
} </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> header, footer { </div></td> </tr> <tr> 
<td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> background-color: YELLOW; </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="7"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> } </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="8"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> main { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div 
class="hljs-ln-line hljs-ln-n" data-line-number="9"></div></td> <td class="hljs-ln-code"> <div 
class="hljs-ln-line"> background-color: BLUE; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="10"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> } </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="11"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
aside { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" 
data-line-number="12"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> background-color: 
GREEN; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" 
data-line-number="13"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> } </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="14"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="15"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> .left { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div 
class="hljs-ln-line hljs-ln-n" data-line-number="16"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> width: 200px; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="17"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> float: left; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="18"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> } </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="19"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
.middle { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" 
data-line-number="20"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> margin: 
20px 230px 20px 230px; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="21"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
} </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="22"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> .right { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="23"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> width: 200px; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="24"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> float: right; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="25"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> } </div></td> </tr> </tbody> </table></code> <div class="richcontent-pre-copy"> 
<span class="iconfont"></span>复制代码 </div></pre> <p>我来简单解读一下这个 CSS 文件。为了演示效果，所有的 DOM 对象都具备 
100px 的高度，左边栏向左侧浮动排列，右边栏向右侧浮动排列，中间一列使用 margin 的方式给左右边栏留足位置。在排列这三列时，DOM 的顺序是左边栏 - 右边栏 - 中间栏，原因是，左右边栏是浮动样式，需要给他们排好以后，中间栏位无浮动，自动填满所有剩余空间。</p> 
<p>看看效果吧，你可以拖动浏览器的边界，调整窗口的宽度，来模拟不同宽度的浏览器窗口下的效果。在较宽的浏览器下，它是这样的：</p> <p><img src="https://static001.geekbang.org/resource/image/2f/da/2f070ea33f80d6baf856b1c5e8238ada.jpg" 
alt=""></p> <p>而在较窄的浏览器下，它是这样的：</p> <p><img src="https://static001.geekbang.org/resource/image/69/5c/6985655142435ed1b24352d0d1ea885c.jpg" 
alt=""></p> <p>注意这里的图片有缩放，但是每个矩形的高度实际上都是 100px。也就是说，中间蓝色的区域可以根据实际的宽度需要进行自适应的横向缩放，但是布局始终保持填满浏览器的宽度，也就是说，绿色的部分，始终是固定不变的。</p> 
<p>但是，这样的显示有一个问题，在屏幕宽度较小时，比如手机屏幕，中间的蓝色区域会被挤得看不见。因此，我们希望在浏览器宽度小到一定程度的时候，显示成多行格式，而不进行左中右栏位的划分了，即从上到下包含 
5 行：header、left aside、main、right aside 和 footer。</p> <p>那么，这又该怎么实现？</p> <p>其实也不难，我们需要先在 HTML 
的头部增加：</p> <pre style="position: relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td 
class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> &lt;meta name="viewport" content="width=device-width, 
initial-scale=1.0, maximum-scale=1.0, user-scalable=no"&gt; </div></td> </tr> </tbody> </table></code> 
<div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 </div></pre> <p>这个 meta 
标签指定了视口（View Port）的宽度为设备宽度，避免了任何手机端自动缩放的可能，同时也关闭了用户手动缩放的功能，这样网页会更像一个原生 app。</p> <p>接着，需要把现有的 
css 中 .left, .right, .middle 三个样式放到屏幕宽度大于 640px 的条件下启用，而在宽度小于 640px 的条件下，我们将启用另外三组样式，这三组是将现有的三列以行的方式来展示：</p> 
<pre style="position: relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> @media screen and (min-width: 640px) { </div></td> </tr> <tr> <td 
class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> .left { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> width: 200px; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> float: left; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> } </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="6"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
.middle { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" 
data-line-number="7"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> margin: 
20px 230px 20px 230px; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="8"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
} </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="9"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> .right { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="10"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> width: 200px; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="11"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> float: right; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="12"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> } </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="13"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
} </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="14"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="15"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> @media screen and (max-width: 640px) { </div></td> </tr> <tr> <td 
class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="16"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> .middle { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="17"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> margin: auto; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="18"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> } </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="19"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
.left, .right { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="20"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
width: auto; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" 
data-line-number="21"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> float: 
none; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" 
data-line-number="22"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> } </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="23"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> } </div></td> </tr> </tbody> </table></code> 
<div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 </div></pre> <p>完工，我们一起看看效果。调整浏览器的右侧边界，逐渐缩小宽度，直到其低于 
640px，你将看到如下效果：</p> <p><img src="https://static001.geekbang.org/resource/image/84/82/847dfb9c0c534d521bc0351303761382.jpg" 
alt=""></p> <h2>总结思考</h2> <p>今天我们学习了一些网页交互设计的理念，知道了怎样通过渐进式增强来照顾到尽可能多的设备和浏览器，也通过例子实际动手了解了怎样实现网页的响应式布局，希望你有所收获。</p> 
<p>现在，我来提两个问题吧：</p> <ul> <li>在你的实际工作中，是否有考虑过不同能力的设备和浏览器的兼容适配问题，你又是怎样解决这样的问题呢？</li> <li>给你这样几个 
HTML 标签，你能否说出哪些是有语义的，哪些是无语义的呢？div、section、span、nav、summary、b。</li> </ul> <p>好，今天就到这里，感谢你的阅读和思考，期待你的打卡！</p> 
<h2>扩展阅读</h2> <ul> <li>【基础】对于 CSS 不熟悉的程序员朋友，可以通过 <a href="https://developer.mozilla.org/zh-CN/docs/Web/Guide/CSS/Getting_started">MDN 
上的 CSS 教程</a>进行系统地学习。</li> <li>文中提到了 SPA 环境下，对于浏览器的前进、后退功能，需要一些特别的技巧才能实现，其中一个技巧就是使用内嵌 iFrame，这个机制的原理在 
<a href="http://www.webdeveasy.com/back-button-behavior-on-a-page-with-an-iframe/">Back Button 
Behavior on a Page With an iframe</a> 这篇文章中有介绍（虽然这个机制本身当时给作者带来的是一个问题而不是一个解决方法），文中还附带了一个可尝试的<a 
href="http://www.webdeveasy.com/code/back-button-behavior-on-a-page-with-an-iframe/problem/page2.html">小例子</a>，另外的一个技巧我们将在第五章学到。</li> 
<li>文中介绍了渐进增强和优雅降级的概念，在 <a href="https://www.mavenecommerce.com/2017/10/31/progressive-enhancement-vs-graceful-degradation/">Progressive 
Enhancement vs Graceful Degradation</a> 这篇文章中，我们可以看到对它的进一步形象的阐释；而 <a href="https://www.zhangxinxu.com/wordpress/2010/04/css-%E6%B8%90%E8%BF%9B%E5%A2%9E%E5%BC%BA%E5%9C%A8web%E5%88%B6%E4%BD%9C%E4%B8%AD%E5%B8%B8%E8%A7%81%E5%BA%94%E7%94%A8%E4%B8%BE%E4%BE%8B/">CSS 
“渐进增强”在 web 制作中常见应用举例</a>一文则举了几个 CSS 具体应用渐进增强的例子。</li> <li>对于 HTML 语义的介绍，<a href="http://justineo.github.io/slideshows/semantic-html/#/">Semantic 
HTML</a> 是一个非常好的用于介绍基础知识的胶片。</li> </ul> <p><img src="https://static001.geekbang.org/resource/image/11/8b/1181246bbd51ce348d5729696d1dc28b.jpg" 
alt="unpreview"></p>', '', 'book', 0, 'full_html', 'zh-hans', 31, 31) 
 {executed in 1 msec}
2020-11-19 11:19:19.439 INFO  jdbc.sqltiming Line:373 - select nodebodyen0_.entity_id as entity_i1_3_0_, nodebodyen0_.body_value as body_val2_3_0_, 
nodebodyen0_.body_summary as body_sum3_3_0_, nodebodyen0_.bundle as bundle4_3_0_, nodebodyen0_.delta 
as delta5_3_0_, nodebodyen0_.body_format as body_for6_3_0_, nodebodyen0_.langcode as langcode7_3_0_, 
nodebodyen0_.revision_id as revision8_3_0_ from node__body nodebodyen0_ where nodebodyen0_.entity_id=31 
 {executed in 1 msec}
2020-11-19 11:19:19.439 INFO  jdbc.resultsettable Line:610 - 
|----------|-----------|-------------|-------|------|------------|---------|------------|
|entity_id |body_value |body_summary |bundle |delta |body_format |langcode |revision_id |
|----------|-----------|-------------|-------|------|------------|---------|------------|
|----------|-----------|-------------|-------|------|------------|---------|------------|

2020-11-19 11:19:19.441 INFO  jdbc.sqltiming Line:373 - insert into node__body (body_value, body_summary, bundle, delta, body_format, langcode, revision_id, 
entity_id) values ('<p>你好，我是四火。</p> <p>前几讲我们一直在 JavaScript 的代码中游走，这一讲我们来换换脑子，聊一聊界面设计，讲一讲交互和布局。这部分对于基于 
Web 的全栈工程师来说，不只是技术栈特殊的一部分，还是一个能够给个人发展格局带来更多可能的部分。</p> <h2>1. 单页面应用</h2> <p>SPA，Single-Page 
Application，即单页应用，是一种互联网应用在用户交互方面的模型。</p> <p>用户打开一个页面，大部分操作都在单个页面里面完成。和传统的 MPA（Multiple-Page 
Application）相比，用户体验上，SPA 省去了页面跳转的突兀感受和等待时间，用户体验更加桌面化，操作迅速、切换无缝；软件架构上，SPA 可以更彻底地落实前后端分离，后端彻底变成了一个只暴露 
API 的服务，将不同终端的视图层的工作，特别是页面聚合搬到前端来完成（如有遗忘请回看 <a href="https://time.geekbang.org/column/article/141817">[第 
09 讲]</a>）。</p> <p>对于许多大型应用，SPA 和 MPA 往往是在一定程度上结合起来使用的，比如新浪微博的网页版，用户可以浏览时间线，并作出一些转发评论、媒体播放等等操作，但是也可以跳到单独的单条微博的页面去。</p> 
<p>但 SPA 也有着先天的缺陷。比如说，网页的 SEO（Search Engine Optimization）就是一个例子，单页应用上的操作，引起页面的状态改变，很难被搜索引擎敏锐地捕获到，并使之成为“可搜索到的”，因此 
SPA 页面的 SEO 需要做额外的工作，关于这部分我会在第五章中介绍一些相关知识。</p><!-- [[[read_end]]] --> <p>再比如，浏览器上网页操纵的功能，像前进、后退的功能，也需要一些特别的技巧才能支持，毕竟，和互联网整体翻天覆地的改变相比，浏览器的核心设计一直以来都变化缓慢，而地址栏、页面控制功能等等可都不是为着 
SPA 考虑的。最后，SPA 通常会伴随着大大增加的在线应用复杂程度。</p> <h2>2. 渐进式增强</h2> <p><strong>渐进式增强，即 Progressive Enhancement，强调的是可访问性，即允许不同能力的设备都能够访问网页的基本内容，使用网页的基本功能；但是，当用户使用更加先进的设备时，它能够给用户带来更强大的功能和更好的体验。</strong></p> 
<p>举一个小例子，对于非常极端和基础的设备，网页可以只加载 HTML；更高级一点的设备，则可以加载 CSS；而对于多数高级设备，则还需加载 JavaScript。这三种设备都可以使用网站的核心功能，但是只有最后一类设备可以使用全部功能。当然，实际的增强效果递进未必会那么极端，对于每一个递进，可以只是部分样式，部分标签，部分脚本等等。</p> 
<p>渐进式增强的理念不仅仅可以对不同设备的访问带来普适性，对低端设备的访问更为友好，它还有一些其它优势。比如说，立足于网页基础的 HTML，可以让网页对于搜索引擎更加友好，因为 CSS 
样式和 JavaScript 行为不一定能被搜索引擎解释执行并收录。</p> <p>在这个过程中，HTML 的语义化变得越来越重要。语义化，指的就是让 HTML 页面体现出内容的结构性，即让 
HTML 具备自解释能力，而不是一堆冷冰冰的缺乏语义的标签。你看下面的例子：</p> <pre style="position: relative;"><code> <table class="hljs-ln"> 
<tbody> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> &lt;article&gt; </div></td> </tr> <tr> 
<td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> &lt;h1&gt;Article Title&lt;/h1&gt; </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> &lt;p&gt;This is the content. Please read 
&lt;em&gt;carefully&lt;/em&gt;.&lt;/p&gt; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> &lt;/article&gt; </div></td> </tr> </tbody> </table></code> <div 
class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 </div></pre> <p>其中的 article 
标签，就是具备语义的，表示着其中的内容是一篇文章，我们当然可以使用没有语义的 div 标签来代替，但 article 标签可以让阅读代码的人，浏览器，以及搜索引擎理解这部分的内容。h1 
标签表示标题，p 标签表示段落，而其中的 em 标签表示的是需要强调（如果想使用无语义的标签，可以使用斜体标签 i 来代替），这些用在这里都是具备恰当语义的。</p> <p><strong>和渐进式增强一起谈论的，还有一个相反过程的设计理念，叫做优雅降级，Graceful 
Degradation，本质上它们说的是一个事儿。</strong></p> <p>优雅降级指的是，当高级特性和增强内容无法在用户的设备上展现的时候，依然能够给用户提供一个具备基本功能的，可以工作的应用版本。值得注意的是，优雅降级并非一定发生在用户设备的能力不匹配时，还有可能发生在服务器端资源出现瓶颈的时候，比如某些访问量特别大或者系统出现问题的时刻，资源紧张，服务端可以关闭某一些次要功能，降低一些用户体验，用几种核心资源来保证基础功能的正常运行。</p> 
<p>关于渐进增强和优雅降级，我来举一个 Amazon 网站设计的例子，希望它能帮助你进一步理解。如果你使用先进的 Web 浏览器访问 <a href="https://www.amazon.com/">amazon.com</a>，你会看到完整的功能：</p> 
<p><img src="https://static001.geekbang.org/resource/image/e0/6d/e0e9042739354cd257c0a4c5562c1b6d.png" 
alt=""></p> <p>点击左上角三横线的菜单图标，你将能看到利用 JavaScript 做出的弹出层的效果：</p> <p><img src="https://static001.geekbang.org/resource/image/8a/ab/8a0207fda0c53029c7e42fea22163bab.jpg" 
alt=""></p> <p>现在，我们点击 Chrome 地址栏的锁图标，点击 Site Settings，在设置中关闭对网站的 JavaScript 支持，刷新页面，显示还差不多。但是如果点击左上角的菜单图标，你就会发现，由于没有了 
JavaScript，无法使用弹出层效果，它变成了一个链接，跳转到了商品分类：</p> <p><img src="https://static001.geekbang.org/resource/image/22/47/22487f4e20e1879283feac0fc757ef47.jpg" 
alt=""></p> <p>你看，虽然没有了 JavaScript，遵循这种设计理念，在损失一部分用户体验的情况下 ，你可以继续使用网站，并且可以继续购物，其中的核心功能并没有丢失。</p> 
<p>此外，还有一种可以拿来类比的设计理念，叫做<strong>回归增强</strong>，Regressive Enhancement。它要求为系统的特性设定基线，并应用到较老的设备和浏览器中。于是在设计网页特性时，我们可以按照高级设备的能力来进行，但是在实际开发的实施过程中，对于较低级的设备，提供一些其它的替代方法，让它们也模拟支持这些新特性。</p> 
<p>比方说，HTML 5 的一些特性在偏老的 IE 浏览器中不支持，那么就可以使用 JavaScript 等替代方案实现出相似的效果。我们提到过的类库 jQuery 就遵循着回归增强的设计理念，在一定程度上屏蔽了不同浏览器的差异性。</p> 
<p>举个实际例子，input 标签如果在偏老的浏览器中不支持 placeholder 属性，我们可以利用灰度字体的样式在 input 标签中显示实际内容来模拟这个功能。当用户将输入焦点移到 
input 标签中，再将其从 input 中清空，以便用户能输入实际内容。</p> <p><img src="https://static001.geekbang.org/resource/image/2a/b9/2a2fcffed3b03c5873f069a6c3c6d8b9.jpg" 
alt=""></p> <p>无论是渐进式增强、优雅降级，还是回归增强，都是为了在一定程度上照顾更多的不同能力的设备和浏览器，给用户带来“尽量好”的体验。但是我们在应用这样的设计理念时，需要把握这个度，毕竟，它不是无代价的，而是会增加前端设计开发的复杂性。</p> 
<h2>3. 响应式布局</h2> <p>响应式网页设计，即 RWD，Responsive Web Design，也有称之为<strong>自适应性网页设计</strong>，Adaptive 
Web Design，是一种网页设计方法，<strong>目的是使得同一份网页，在不同的设备上有合适的展现。</strong>几乎页面上所有的元素都可以遵循响应式布局，在不同的设备上产生不同的呈现，包括字体和图像等，但是我们讨论得最多的，却是布局。</p> 
<p>我记得我刚参加工作的那几年，我们对于同一个页面在不同设备上的展示，考虑的最多的问题还是终端适配，并且这种适配还是基于协议的。例如，服务端是返回 Web 页面，<a href="https://zh.wikipedia.org/wiki/%E6%97%A0%E7%BA%BF%E5%BA%94%E7%94%A8%E5%8D%8F%E8%AE%AE">WAP</a> 
1.0 页面（WML 语言描述），还是 WAP 2.0 页面（XHTML 语言描述）？那时候我们还很难去谈论用户体验有多么“合适”，对于这些低端的移动设备，我们充其量只能关心功能的实现是否能保证。</p> 
<p>这部分，我们改变一下学习策略，来动动手，实现下简单的响应式布局页面。假如说我们需要实现一个具有 header、footer 的页面，并且他们需要填满宽度。而中间的主页面部分采用三列布局，左边列定宽，右边列也定宽，中间列宽度自由设置，但是要保证这三列排列起来也填满浏览器的宽度。</p> 
<p>在往下阅读之前，你能否先想想，这该如何实现？</p> <p>现在，我们在任意的工作文件夹下建立一个 responsive layout.html 文件，填写如下内容：</p> 
<pre style="position: relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> &lt;!DOCTYPE html&gt; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> &lt;html&gt; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> &lt;head&gt; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> &lt;link href="style.css" type="text/css" rel="stylesheet"&gt; </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> &lt;/head&gt; </div></td> </tr> <tr> <td 
class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> &lt;body&gt; </div></td> </tr> <tr> <td 
class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="7"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> &lt;header&gt;header&lt;/header&gt; </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="8"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> &lt;aside class="left"&gt;aside&lt;/aside&gt; 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="9"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> &lt;aside class="right"&gt;aside&lt;/aside&gt; 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="10"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> &lt;main class="middle"&gt;main&lt;/main&gt; 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="11"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> &lt;footer&gt;footer&lt;/footer&gt; </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="12"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> &lt;/body&gt; </div></td> </tr> <tr> <td 
class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="13"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> &lt;/html&gt; </div></td> </tr> </tbody> 
</table></code> <div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 </div></pre> 
<p>你看，这个文件结构是很简单的，但是具备了我们所需要的要素，包括 header、中间三列以及 footer。这个页面将引入 style.css，因此，我们在同一目录下，建立 style.css：</p> 
<pre style="position: relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> * { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="2"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
height: 100px; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="3"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
margin: 10px; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="4"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
} </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> header, footer { </div></td> </tr> <tr> 
<td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> background-color: YELLOW; </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="7"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> } </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="8"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> main { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div 
class="hljs-ln-line hljs-ln-n" data-line-number="9"></div></td> <td class="hljs-ln-code"> <div 
class="hljs-ln-line"> background-color: BLUE; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="10"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> } </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="11"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
aside { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" 
data-line-number="12"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> background-color: 
GREEN; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" 
data-line-number="13"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> } </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="14"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="15"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> .left { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div 
class="hljs-ln-line hljs-ln-n" data-line-number="16"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> width: 200px; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="17"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> float: left; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="18"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> } </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="19"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
.middle { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" 
data-line-number="20"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> margin: 
20px 230px 20px 230px; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="21"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
} </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="22"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> .right { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="23"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> width: 200px; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="24"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> float: right; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="25"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> } </div></td> </tr> </tbody> </table></code> <div class="richcontent-pre-copy"> 
<span class="iconfont"></span>复制代码 </div></pre> <p>我来简单解读一下这个 CSS 文件。为了演示效果，所有的 DOM 对象都具备 
100px 的高度，左边栏向左侧浮动排列，右边栏向右侧浮动排列，中间一列使用 margin 的方式给左右边栏留足位置。在排列这三列时，DOM 的顺序是左边栏 - 右边栏 - 中间栏，原因是，左右边栏是浮动样式，需要给他们排好以后，中间栏位无浮动，自动填满所有剩余空间。</p> 
<p>看看效果吧，你可以拖动浏览器的边界，调整窗口的宽度，来模拟不同宽度的浏览器窗口下的效果。在较宽的浏览器下，它是这样的：</p> <p><img src="https://static001.geekbang.org/resource/image/2f/da/2f070ea33f80d6baf856b1c5e8238ada.jpg" 
alt=""></p> <p>而在较窄的浏览器下，它是这样的：</p> <p><img src="https://static001.geekbang.org/resource/image/69/5c/6985655142435ed1b24352d0d1ea885c.jpg" 
alt=""></p> <p>注意这里的图片有缩放，但是每个矩形的高度实际上都是 100px。也就是说，中间蓝色的区域可以根据实际的宽度需要进行自适应的横向缩放，但是布局始终保持填满浏览器的宽度，也就是说，绿色的部分，始终是固定不变的。</p> 
<p>但是，这样的显示有一个问题，在屏幕宽度较小时，比如手机屏幕，中间的蓝色区域会被挤得看不见。因此，我们希望在浏览器宽度小到一定程度的时候，显示成多行格式，而不进行左中右栏位的划分了，即从上到下包含 
5 行：header、left aside、main、right aside 和 footer。</p> <p>那么，这又该怎么实现？</p> <p>其实也不难，我们需要先在 HTML 
的头部增加：</p> <pre style="position: relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td 
class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> &lt;meta name="viewport" content="width=device-width, 
initial-scale=1.0, maximum-scale=1.0, user-scalable=no"&gt; </div></td> </tr> </tbody> </table></code> 
<div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 </div></pre> <p>这个 meta 
标签指定了视口（View Port）的宽度为设备宽度，避免了任何手机端自动缩放的可能，同时也关闭了用户手动缩放的功能，这样网页会更像一个原生 app。</p> <p>接着，需要把现有的 
css 中 .left, .right, .middle 三个样式放到屏幕宽度大于 640px 的条件下启用，而在宽度小于 640px 的条件下，我们将启用另外三组样式，这三组是将现有的三列以行的方式来展示：</p> 
<pre style="position: relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> @media screen and (min-width: 640px) { </div></td> </tr> <tr> <td 
class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> .left { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> width: 200px; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> float: left; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> } </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="6"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
.middle { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" 
data-line-number="7"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> margin: 
20px 230px 20px 230px; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="8"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
} </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="9"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> .right { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="10"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> width: 200px; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="11"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> float: right; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="12"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> } </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="13"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
} </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="14"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="15"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> @media screen and (max-width: 640px) { </div></td> </tr> <tr> <td 
class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="16"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> .middle { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="17"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> margin: auto; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="18"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> } </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="19"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
.left, .right { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="20"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
width: auto; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" 
data-line-number="21"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> float: 
none; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" 
data-line-number="22"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> } </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="23"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> } </div></td> </tr> </tbody> </table></code> 
<div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 </div></pre> <p>完工，我们一起看看效果。调整浏览器的右侧边界，逐渐缩小宽度，直到其低于 
640px，你将看到如下效果：</p> <p><img src="https://static001.geekbang.org/resource/image/84/82/847dfb9c0c534d521bc0351303761382.jpg" 
alt=""></p> <h2>总结思考</h2> <p>今天我们学习了一些网页交互设计的理念，知道了怎样通过渐进式增强来照顾到尽可能多的设备和浏览器，也通过例子实际动手了解了怎样实现网页的响应式布局，希望你有所收获。</p> 
<p>现在，我来提两个问题吧：</p> <ul> <li>在你的实际工作中，是否有考虑过不同能力的设备和浏览器的兼容适配问题，你又是怎样解决这样的问题呢？</li> <li>给你这样几个 
HTML 标签，你能否说出哪些是有语义的，哪些是无语义的呢？div、section、span、nav、summary、b。</li> </ul> <p>好，今天就到这里，感谢你的阅读和思考，期待你的打卡！</p> 
<h2>扩展阅读</h2> <ul> <li>【基础】对于 CSS 不熟悉的程序员朋友，可以通过 <a href="https://developer.mozilla.org/zh-CN/docs/Web/Guide/CSS/Getting_started">MDN 
上的 CSS 教程</a>进行系统地学习。</li> <li>文中提到了 SPA 环境下，对于浏览器的前进、后退功能，需要一些特别的技巧才能实现，其中一个技巧就是使用内嵌 iFrame，这个机制的原理在 
<a href="http://www.webdeveasy.com/back-button-behavior-on-a-page-with-an-iframe/">Back Button 
Behavior on a Page With an iframe</a> 这篇文章中有介绍（虽然这个机制本身当时给作者带来的是一个问题而不是一个解决方法），文中还附带了一个可尝试的<a 
href="http://www.webdeveasy.com/code/back-button-behavior-on-a-page-with-an-iframe/problem/page2.html">小例子</a>，另外的一个技巧我们将在第五章学到。</li> 
<li>文中介绍了渐进增强和优雅降级的概念，在 <a href="https://www.mavenecommerce.com/2017/10/31/progressive-enhancement-vs-graceful-degradation/">Progressive 
Enhancement vs Graceful Degradation</a> 这篇文章中，我们可以看到对它的进一步形象的阐释；而 <a href="https://www.zhangxinxu.com/wordpress/2010/04/css-%E6%B8%90%E8%BF%9B%E5%A2%9E%E5%BC%BA%E5%9C%A8web%E5%88%B6%E4%BD%9C%E4%B8%AD%E5%B8%B8%E8%A7%81%E5%BA%94%E7%94%A8%E4%B8%BE%E4%BE%8B/">CSS 
“渐进增强”在 web 制作中常见应用举例</a>一文则举了几个 CSS 具体应用渐进增强的例子。</li> <li>对于 HTML 语义的介绍，<a href="http://justineo.github.io/slideshows/semantic-html/#/">Semantic 
HTML</a> 是一个非常好的用于介绍基础知识的胶片。</li> </ul> <p><img src="https://static001.geekbang.org/resource/image/11/8b/1181246bbd51ce348d5729696d1dc28b.jpg" 
alt="unpreview"></p>', '', 'book', 0, 'full_html', 'zh-hans', 31, 31) 
 {executed in 1 msec}
2020-11-19 11:19:19.445 INFO  jdbc.sqltiming Line:373 - select nodefiledd0_.nid as nid1_9_, nodefiledd0_.changed as changed2_9_, nodefiledd0_.created 
as created3_9_, nodefiledd0_.default_langcode as default_4_9_, nodefiledd0_.langcode as langcode5_9_, 
nodefiledd0_.promote as promote6_9_, nodefiledd0_.revision_translation_affected as revision7_9_, 
nodefiledd0_.status as status8_9_, nodefiledd0_.sticky as sticky9_9_, nodefiledd0_.title as 
title10_9_, nodefiledd0_.type as type11_9_, nodefiledd0_.uid as uid12_9_, nodefiledd0_.vid 
as vid13_9_ from node_field_data nodefiledd0_ where nodefiledd0_.nid=31 
 {executed in 0 msec}
2020-11-19 11:19:19.446 INFO  jdbc.resultsettable Line:610 - 
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|-----|----|----|
|nid |changed |created |default_langcode |langcode |promote |revision_translation_affected |status |sticky |title |type |uid |vid |
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|-----|----|----|
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|-----|----|----|

2020-11-19 11:19:19.446 INFO  jdbc.sqltiming Line:373 - select nodefieldr0_.nid as nid1_10_0_, nodefieldr0_.changed as changed2_10_0_, nodefieldr0_.created 
as created3_10_0_, nodefieldr0_.default_langcode as default_4_10_0_, nodefieldr0_.langcode 
as langcode5_10_0_, nodefieldr0_.promote as promote6_10_0_, nodefieldr0_.revision_translation_affected 
as revision7_10_0_, nodefieldr0_.status as status8_10_0_, nodefieldr0_.sticky as sticky9_10_0_, 
nodefieldr0_.title as title10_10_0_, nodefieldr0_.uid as uid11_10_0_, nodefieldr0_.vid as vid12_10_0_ 
from node_field_revision nodefieldr0_ where nodefieldr0_.nid=31 
 {executed in 0 msec}
2020-11-19 11:19:19.447 INFO  jdbc.resultsettable Line:610 - 
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|----|----|
|nid |changed |created |default_langcode |langcode |promote |revision_translation_affected |status |sticky |title |uid |vid |
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|----|----|
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|----|----|

2020-11-19 11:19:19.448 INFO  jdbc.sqltiming Line:373 - insert into node_field_revision (changed, created, default_langcode, langcode, promote, revision_translation_affected, 
status, sticky, title, uid, vid, nid) values (1605755959, 1605755959, 1, 'zh-hans', 0, 1, 1, 
0, '17丨不一样的体验：交互设计和页面布局', 1, 31, 31) 
 {executed in 0 msec}
2020-11-19 11:19:19.452 INFO  jdbc.sqltiming Line:373 - select nodefiledd0_.nid as nid1_9_0_, nodefiledd0_.changed as changed2_9_0_, nodefiledd0_.created 
as created3_9_0_, nodefiledd0_.default_langcode as default_4_9_0_, nodefiledd0_.langcode as 
langcode5_9_0_, nodefiledd0_.promote as promote6_9_0_, nodefiledd0_.revision_translation_affected 
as revision7_9_0_, nodefiledd0_.status as status8_9_0_, nodefiledd0_.sticky as sticky9_9_0_, 
nodefiledd0_.title as title10_9_0_, nodefiledd0_.type as type11_9_0_, nodefiledd0_.uid as uid12_9_0_, 
nodefiledd0_.vid as vid13_9_0_ from node_field_data nodefiledd0_ where nodefiledd0_.nid=31 
 {executed in 1 msec}
2020-11-19 11:19:19.452 INFO  jdbc.resultsettable Line:610 - 
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|-----|----|----|
|nid |changed |created |default_langcode |langcode |promote |revision_translation_affected |status |sticky |title |type |uid |vid |
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|-----|----|----|
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|-----|----|----|

2020-11-19 11:19:19.453 INFO  jdbc.sqltiming Line:373 - insert into node_field_data (changed, created, default_langcode, langcode, promote, revision_translation_affected, 
status, sticky, title, type, uid, vid, nid) values (1605755959, 1605755959, 1, 'zh-hans', 0, 
1, 1, 0, '17丨不一样的体验：交互设计和页面布局', 'book', 1, 31, 31) 
 {executed in 0 msec}
2020-11-19 11:19:19.457 INFO  jdbc.sqltiming Line:373 - select bookfieldm0_.entity_id as entity_i1_7_, bookfieldm0_.bundle as bundle2_7_, bookfieldm0_.delta 
as delta3_7_, bookfieldm0_.langcode as langcode4_7_, bookfieldm0_.field_media_value as field_me5_7_, 
bookfieldm0_.revision_id as revision6_7_ from node__field_media bookfieldm0_ where bookfieldm0_.entity_id=31 
 {executed in 0 msec}
2020-11-19 11:19:19.457 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------------|------------|
|entity_id |bundle |delta |langcode |field_media_value |revision_id |
|----------|-------|------|---------|------------------|------------|
|----------|-------|------|---------|------------------|------------|

2020-11-19 11:19:19.458 INFO  jdbc.sqltiming Line:373 - select bookfieldm0_.entity_id as entity_i1_7_0_, bookfieldm0_.bundle as bundle2_7_0_, bookfieldm0_.delta 
as delta3_7_0_, bookfieldm0_.langcode as langcode4_7_0_, bookfieldm0_.field_media_value as 
field_me5_7_0_, bookfieldm0_.revision_id as revision6_7_0_ from node__field_media bookfieldm0_ 
where bookfieldm0_.entity_id=31 
 {executed in 0 msec}
2020-11-19 11:19:19.458 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------------|------------|
|entity_id |bundle |delta |langcode |field_media_value |revision_id |
|----------|-------|------|---------|------------------|------------|
|----------|-------|------|---------|------------------|------------|

2020-11-19 11:19:19.463 INFO  jdbc.sqltiming Line:373 - insert into node__field_media (bundle, delta, langcode, field_media_value, revision_id, entity_id) 
values ('book', 0, 'zh-hans', 'https://qdall01.baidupcs.com/file/18117fc83d6d8d73056f3ea8b7b87ccc?bkt=en-07c9b0a504a370600a7287672d603ef69afb731282c20e287a58db1a9676332cb31bc9906e07c2c0&fid=3757516097-778750-265111303410177&time=1605755958&sign=FDTAXUGERLQlBHSKfWqir-DCb740ccc5511e5e8fedcff06b081203-GfO9sLluS54B1p3%2FAtEEGK4wVas%3D&to=92&size=12071843&sta_dx=12071843&sta_cs=3517&sta_ft=m4a&sta_ct=7&sta_mt=0&fm2=MH%2CYangquan%2CAnywhere%2C%2Cshanghai%2Cct&ctime=1571655925&mtime=1605754778&resv0=-1&resv1=0&resv2=rlim&resv3=2&resv4=12071843&vuk=3757516097&iv=0&htype=&randtype=em&newver=1&newfm=1&secfm=1&flow_ver=3&pkey=en-bca7bb006dd36cb1157846ed65ad986c1ca870a309cf699e21f7089716017e1c18a4d0d6e12a1f4f&sl=76480590&expires=8h&rt=pr&r=974454576&mlogid=7502222776008744968&vbdid=2247232042&fin=17%E4%B8%A8%E4%B8%8D%E4%B8%80%E6%A0%B7%E7%9A%84%E4%BD%93%E9%AA%8C%EF%BC%9A%E4%BA%A4%E4%BA%92%E8%AE%BE%E8%AE%A1%E5%92%8C%E9%A1%B5%E9%9D%A2%E5%B8%83%E5%B1%80.m4a&bflag=92,34-92&rtype=1&dp-logid=7502222776008744968&dp-callid=0.1.1&hps=1&tsl=80&csl=80&fsl=-1&csign=yVzLQPCt4DblfMLqd2BCjd2RnqQ%3D&so=0&ut=6&uter=0&serv=0&uc=1458616558&ti=548236dbf16cf8fadb217f827e29be01a48bf4aeb17f8604&hflag=30&adg=c_15d187590626c675056c89c8026cfc17&reqlabel=778750_l_1bf9445f27094ab64c9f1cb0bdf7ccfa_-1_dd2c452b8e51a0c74130d7cf32c48a2d&ibp=1&by=themis&filename=17%E4%B8%A8%E4%B8%8D%E4%B8%80%E6%A0%B7%E7%9A%84%E4%BD%93%E9%AA%8C%EF%BC%9A%E4%BA%A4%E4%BA%92%E8%AE%BE%E8%AE%A1%E5%92%8C%E9%A1%B5%E9%9D%A2%E5%B8%83%E5%B1%80.m4a', 
31, 31) 
 {executed in 4 msec}
2020-11-19 11:19:19.470 INFO  jdbc.sqltiming Line:373 - select nodefieldm0_.entity_id as entity_i1_16_0_, nodefieldm0_.bundle as bundle2_16_0_, nodefieldm0_.delta 
as delta3_16_0_, nodefieldm0_.langcode as langcode4_16_0_, nodefieldm0_.field_media_value as 
field_me5_16_0_, nodefieldm0_.revision_id as revision6_16_0_ from node_revision__field_media 
nodefieldm0_ where nodefieldm0_.entity_id=31 
 {executed in 1 msec}
2020-11-19 11:19:19.470 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------------|------------|
|entity_id |bundle |delta |langcode |field_media_value |revision_id |
|----------|-------|------|---------|------------------|------------|
|----------|-------|------|---------|------------------|------------|

2020-11-19 11:19:19.474 INFO  jdbc.sqltiming Line:373 - insert into node_revision__field_media (bundle, delta, langcode, field_media_value, revision_id, 
entity_id) values ('book', 0, 'zh-hans', 'https://qdall01.baidupcs.com/file/18117fc83d6d8d73056f3ea8b7b87ccc?bkt=en-07c9b0a504a370600a7287672d603ef69afb731282c20e287a58db1a9676332cb31bc9906e07c2c0&fid=3757516097-778750-265111303410177&time=1605755958&sign=FDTAXUGERLQlBHSKfWqir-DCb740ccc5511e5e8fedcff06b081203-GfO9sLluS54B1p3%2FAtEEGK4wVas%3D&to=92&size=12071843&sta_dx=12071843&sta_cs=3517&sta_ft=m4a&sta_ct=7&sta_mt=0&fm2=MH%2CYangquan%2CAnywhere%2C%2Cshanghai%2Cct&ctime=1571655925&mtime=1605754778&resv0=-1&resv1=0&resv2=rlim&resv3=2&resv4=12071843&vuk=3757516097&iv=0&htype=&randtype=em&newver=1&newfm=1&secfm=1&flow_ver=3&pkey=en-bca7bb006dd36cb1157846ed65ad986c1ca870a309cf699e21f7089716017e1c18a4d0d6e12a1f4f&sl=76480590&expires=8h&rt=pr&r=974454576&mlogid=7502222776008744968&vbdid=2247232042&fin=17%E4%B8%A8%E4%B8%8D%E4%B8%80%E6%A0%B7%E7%9A%84%E4%BD%93%E9%AA%8C%EF%BC%9A%E4%BA%A4%E4%BA%92%E8%AE%BE%E8%AE%A1%E5%92%8C%E9%A1%B5%E9%9D%A2%E5%B8%83%E5%B1%80.m4a&bflag=92,34-92&rtype=1&dp-logid=7502222776008744968&dp-callid=0.1.1&hps=1&tsl=80&csl=80&fsl=-1&csign=yVzLQPCt4DblfMLqd2BCjd2RnqQ%3D&so=0&ut=6&uter=0&serv=0&uc=1458616558&ti=548236dbf16cf8fadb217f827e29be01a48bf4aeb17f8604&hflag=30&adg=c_15d187590626c675056c89c8026cfc17&reqlabel=778750_l_1bf9445f27094ab64c9f1cb0bdf7ccfa_-1_dd2c452b8e51a0c74130d7cf32c48a2d&ibp=1&by=themis&filename=17%E4%B8%A8%E4%B8%8D%E4%B8%80%E6%A0%B7%E7%9A%84%E4%BD%93%E9%AA%8C%EF%BC%9A%E4%BA%A4%E4%BA%92%E8%AE%BE%E8%AE%A1%E5%92%8C%E9%A1%B5%E9%9D%A2%E5%B8%83%E5%B1%80.m4a', 
31, 31) 
 {executed in 3 msec}
2020-11-19 11:19:19.481 INFO  jdbc.sqltiming Line:373 - select bookfieldc0_.entity_id as entity_i1_4_, bookfieldc0_.bundle as bundle2_4_, bookfieldc0_.field_comment_value 
as field_co3_4_, bookfieldc0_.delta as delta4_4_, bookfieldc0_.field_comment_format as field_co5_4_, 
bookfieldc0_.langcode as langcode6_4_, bookfieldc0_.revision_id as revision7_4_ from node__field_comment 
bookfieldc0_ where bookfieldc0_.entity_id=31 
 {executed in 0 msec}
2020-11-19 11:19:19.481 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|--------------------|------|---------------------|---------|------------|
|entity_id |bundle |field_comment_value |delta |field_comment_format |langcode |revision_id |
|----------|-------|--------------------|------|---------------------|---------|------------|
|----------|-------|--------------------|------|---------------------|---------|------------|

2020-11-19 11:19:19.482 INFO  jdbc.sqltiming Line:373 - select bookfieldc0_.entity_id as entity_i1_4_0_, bookfieldc0_.bundle as bundle2_4_0_, bookfieldc0_.field_comment_value 
as field_co3_4_0_, bookfieldc0_.delta as delta4_4_0_, bookfieldc0_.field_comment_format as 
field_co5_4_0_, bookfieldc0_.langcode as langcode6_4_0_, bookfieldc0_.revision_id as revision7_4_0_ 
from node__field_comment bookfieldc0_ where bookfieldc0_.entity_id=31 
 {executed in 0 msec}
2020-11-19 11:19:19.482 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|--------------------|------|---------------------|---------|------------|
|entity_id |bundle |field_comment_value |delta |field_comment_format |langcode |revision_id |
|----------|-------|--------------------|------|---------------------|---------|------------|
|----------|-------|--------------------|------|---------------------|---------|------------|

2020-11-19 11:19:19.484 INFO  jdbc.sqltiming Line:373 - insert into node__field_comment (bundle, field_comment_value, delta, field_comment_format, 
langcode, revision_id, entity_id) values ('book', '<li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/10/61/61/677e8f92.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>xianhai</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2019-10-20 </div> </div> <!----> 
</div> <div> <div class="_3M6kV3zb_0"> bootstrap是不是响应式布局的银弹？ </div> <div class="_2r3UB1GX_0"> 
<span>展开</span><i class="iconfont"></i> </div> <!----> <div class="_1w8H0ktn_0 _2A421P4G_0"> 
<div class="_2jsFl-X0_0"> <i class="iconfont"></i> <span></span> </div> <div class="_2P4B1Hdm_0"> 
<i class="iconfont"></i> <span class=""></span> </div> <!----> </div> </div> </div></li> <li 
class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/10/5b/8f/4b0ab5db.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>hedeqiang</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2019-10-19 </div> </div> <!----> 
</div> <div> <div class="_3M6kV3zb_0"> 这篇收获很大 </div> <div class="_2r3UB1GX_0"> <span>展开</span><i 
class="iconfont"></i> </div> <!----> <div class="_1w8H0ktn_0 _2A421P4G_0"> <div class="_2jsFl-X0_0"> 
<i class="iconfont"></i> <span></span> </div> <div class="_2P4B1Hdm_0"> <i class="iconfont"></i> 
<span class=""></span> </div> <!----> </div> </div> </div></li> <li class="reJj6Thl_0"><img 
src="https://static001.geekbang.org/account/avatar/00/13/db/26/54f2c164.jpg" class="_2273kGdT_0"> 
<div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> <span>靠人品去赢</span> 
<!----> </div> <div class="_1H1Z49Dr_0"> 2019-10-18 </div> </div> <!----> </div> <div> <div 
class="_3M6kV3zb_0"> 这个适配的问题，我看很多种方案都是先拿到宽度，然后定个数比如是100得到单位长度，然后不管多大分辨率，都可以标准化，老师有没有更好的适配方案，还有现在回头用原生的JS写页面好难受，不知道什么原因赋值不成功，不起作用很难受。 
<br> </div> <div class="_2r3UB1GX_0"> <span>展开</span><i class="iconfont"></i> </div> <!----> 
<div class="_1w8H0ktn_0 _2A421P4G_0"> <div class="_2jsFl-X0_0"> <i class="iconfont"></i> <span></span> 
</div> <div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class=""></span> </div> <!----> 
</div> </div> </div></li> <li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/14/34/df/64e3d533.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>leslie</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2019-10-18 </div> </div> <!----> 
</div> <div> <div class="_3M6kV3zb_0"> 我记得样式和加载不同：有时会听到开发PM抱怨用户用小众型的浏览器，甚至许多都是根本不曾听闻的，导致效果不一致缺东西。 
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;其实这块最大的坑在于有时不知缺啥且做了个性化导致：个性化其实有时导致的兼容性问题。 </div> 
<div class="_2r3UB1GX_0"> <span>展开</span><i class="iconfont"></i> </div> <!----> <div class="_1w8H0ktn_0 
_2A421P4G_0"> <div class="_2jsFl-X0_0"> <i class="iconfont"></i> <span></span> </div> <div 
class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class=""></span> </div> <!----> </div> 
</div> </div></li>', 0, 'full_html', 'zh-hans', 31, 31) 
 {executed in 0 msec}
2020-11-19 11:19:19.487 INFO  jdbc.sqltiming Line:373 - select nodefieldc0_.entity_id as entity_i1_13_0_, nodefieldc0_.bundle as bundle2_13_0_, nodefieldc0_.field_comment_value 
as field_co3_13_0_, nodefieldc0_.delta as delta4_13_0_, nodefieldc0_.field_comment_format as 
field_co5_13_0_, nodefieldc0_.langcode as langcode6_13_0_, nodefieldc0_.revision_id as revision7_13_0_ 
from node_revision__field_comment nodefieldc0_ where nodefieldc0_.entity_id=31 
 {executed in 0 msec}
2020-11-19 11:19:19.488 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|--------------------|------|---------------------|---------|------------|
|entity_id |bundle |field_comment_value |delta |field_comment_format |langcode |revision_id |
|----------|-------|--------------------|------|---------------------|---------|------------|
|----------|-------|--------------------|------|---------------------|---------|------------|

2020-11-19 11:19:19.489 INFO  jdbc.sqltiming Line:373 - insert into node_revision__field_comment (bundle, field_comment_value, delta, field_comment_format, 
langcode, revision_id, entity_id) values ('book', '<li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/10/61/61/677e8f92.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>xianhai</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2019-10-20 </div> </div> <!----> 
</div> <div> <div class="_3M6kV3zb_0"> bootstrap是不是响应式布局的银弹？ </div> <div class="_2r3UB1GX_0"> 
<span>展开</span><i class="iconfont"></i> </div> <!----> <div class="_1w8H0ktn_0 _2A421P4G_0"> 
<div class="_2jsFl-X0_0"> <i class="iconfont"></i> <span></span> </div> <div class="_2P4B1Hdm_0"> 
<i class="iconfont"></i> <span class=""></span> </div> <!----> </div> </div> </div></li> <li 
class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/10/5b/8f/4b0ab5db.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>hedeqiang</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2019-10-19 </div> </div> <!----> 
</div> <div> <div class="_3M6kV3zb_0"> 这篇收获很大 </div> <div class="_2r3UB1GX_0"> <span>展开</span><i 
class="iconfont"></i> </div> <!----> <div class="_1w8H0ktn_0 _2A421P4G_0"> <div class="_2jsFl-X0_0"> 
<i class="iconfont"></i> <span></span> </div> <div class="_2P4B1Hdm_0"> <i class="iconfont"></i> 
<span class=""></span> </div> <!----> </div> </div> </div></li> <li class="reJj6Thl_0"><img 
src="https://static001.geekbang.org/account/avatar/00/13/db/26/54f2c164.jpg" class="_2273kGdT_0"> 
<div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> <span>靠人品去赢</span> 
<!----> </div> <div class="_1H1Z49Dr_0"> 2019-10-18 </div> </div> <!----> </div> <div> <div 
class="_3M6kV3zb_0"> 这个适配的问题，我看很多种方案都是先拿到宽度，然后定个数比如是100得到单位长度，然后不管多大分辨率，都可以标准化，老师有没有更好的适配方案，还有现在回头用原生的JS写页面好难受，不知道什么原因赋值不成功，不起作用很难受。 
<br> </div> <div class="_2r3UB1GX_0"> <span>展开</span><i class="iconfont"></i> </div> <!----> 
<div class="_1w8H0ktn_0 _2A421P4G_0"> <div class="_2jsFl-X0_0"> <i class="iconfont"></i> <span></span> 
</div> <div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class=""></span> </div> <!----> 
</div> </div> </div></li> <li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/14/34/df/64e3d533.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>leslie</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2019-10-18 </div> </div> <!----> 
</div> <div> <div class="_3M6kV3zb_0"> 我记得样式和加载不同：有时会听到开发PM抱怨用户用小众型的浏览器，甚至许多都是根本不曾听闻的，导致效果不一致缺东西。 
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;其实这块最大的坑在于有时不知缺啥且做了个性化导致：个性化其实有时导致的兼容性问题。 </div> 
<div class="_2r3UB1GX_0"> <span>展开</span><i class="iconfont"></i> </div> <!----> <div class="_1w8H0ktn_0 
_2A421P4G_0"> <div class="_2jsFl-X0_0"> <i class="iconfont"></i> <span></span> </div> <div 
class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class=""></span> </div> <!----> </div> 
</div> </div></li>', 0, 'full_html', 'zh-hans', 31, 31) 
 {executed in 0 msec}
2020-11-19 11:19:19.493 INFO  jdbc.sqltiming Line:373 - select bookfieldt0_.entity_id as entity_i1_8_, bookfieldt0_.bundle as bundle2_8_, bookfieldt0_.delta 
as delta3_8_, bookfieldt0_.langcode as langcode4_8_, bookfieldt0_.revision_id as revision5_8_, 
bookfieldt0_.field_thumb_value as field_th6_8_ from node__field_thumb bookfieldt0_ where bookfieldt0_.entity_id=31 
 {executed in 1 msec}
2020-11-19 11:19:19.493 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------|------------------|
|entity_id |bundle |delta |langcode |revision_id |field_thumb_value |
|----------|-------|------|---------|------------|------------------|
|----------|-------|------|---------|------------|------------------|

2020-11-19 11:19:19.494 INFO  jdbc.sqltiming Line:373 - select bookfieldt0_.entity_id as entity_i1_8_0_, bookfieldt0_.bundle as bundle2_8_0_, bookfieldt0_.delta 
as delta3_8_0_, bookfieldt0_.langcode as langcode4_8_0_, bookfieldt0_.revision_id as revision5_8_0_, 
bookfieldt0_.field_thumb_value as field_th6_8_0_ from node__field_thumb bookfieldt0_ where 
bookfieldt0_.entity_id=31 
 {executed in 1 msec}
2020-11-19 11:19:19.494 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------|------------------|
|entity_id |bundle |delta |langcode |revision_id |field_thumb_value |
|----------|-------|------|---------|------------|------------------|
|----------|-------|------|---------|------------|------------------|

2020-11-19 11:19:19.495 INFO  jdbc.sqltiming Line:373 - insert into node__field_thumb (bundle, delta, langcode, revision_id, field_thumb_value, entity_id) 
values ('book', 0, 'zh-hans', 31, 'https://static001.geekbang.org/resource/image/35/d2/35bf5835a04ac1888866948314f0cad2.jpg', 
31) 
 {executed in 0 msec}
2020-11-19 11:19:19.498 INFO  jdbc.sqltiming Line:373 - select nodefieldt0_.entity_id as entity_i1_17_0_, nodefieldt0_.bundle as bundle2_17_0_, nodefieldt0_.delta 
as delta3_17_0_, nodefieldt0_.langcode as langcode4_17_0_, nodefieldt0_.revision_id as revision5_17_0_, 
nodefieldt0_.field_thumb_value as field_th6_17_0_ from node_revision__field_thumb nodefieldt0_ 
where nodefieldt0_.entity_id=31 
 {executed in 0 msec}
2020-11-19 11:19:19.498 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------|------------------|
|entity_id |bundle |delta |langcode |revision_id |field_thumb_value |
|----------|-------|------|---------|------------|------------------|
|----------|-------|------|---------|------------|------------------|

2020-11-19 11:19:19.499 INFO  jdbc.sqltiming Line:373 - insert into node_revision__field_thumb (bundle, delta, langcode, revision_id, field_thumb_value, 
entity_id) values ('book', 0, 'zh-hans', 31, 'https://static001.geekbang.org/resource/image/35/d2/35bf5835a04ac1888866948314f0cad2.jpg', 
31) 
 {executed in 0 msec}
2020-11-19 11:19:19.502 INFO  jdbc.sqltiming Line:373 - select bookfieldf0_.entity_id as entity_i1_5_0_, bookfieldf0_.bundle as bundle2_5_0_, bookfieldf0_.delta 
as delta3_5_0_, bookfieldf0_.field_fenlei_target_id as field_fe4_5_0_, bookfieldf0_.langcode 
as langcode5_5_0_, bookfieldf0_.revision_id as revision6_5_0_ from node__field_fenlei bookfieldf0_ 
where bookfieldf0_.entity_id=31 
 {executed in 0 msec}
2020-11-19 11:19:19.503 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------------|---------|------------|
|entity_id |bundle |delta |field_fenlei_target_id |langcode |revision_id |
|----------|-------|------|-----------------------|---------|------------|
|----------|-------|------|-----------------------|---------|------------|

2020-11-19 11:19:19.504 INFO  jdbc.sqltiming Line:373 - insert into node__field_fenlei (bundle, delta, field_fenlei_target_id, langcode, revision_id, 
entity_id) values ('book', 0, 1, 'zh-hans', 31, 31) 
 {executed in 0 msec}
2020-11-19 11:19:19.507 INFO  jdbc.sqltiming Line:373 - select nodefieldf0_.entity_id as entity_i1_14_0_, nodefieldf0_.bundle as bundle2_14_0_, nodefieldf0_.delta 
as delta3_14_0_, nodefieldf0_.field_fenlei_target_id as field_fe4_14_0_, nodefieldf0_.langcode 
as langcode5_14_0_, nodefieldf0_.revision_id as revision6_14_0_ from node_revision__field_fenlei 
nodefieldf0_ where nodefieldf0_.entity_id=31 
 {executed in 1 msec}
2020-11-19 11:19:19.507 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------------|---------|------------|
|entity_id |bundle |delta |field_fenlei_target_id |langcode |revision_id |
|----------|-------|------|-----------------------|---------|------------|
|----------|-------|------|-----------------------|---------|------------|

2020-11-19 11:19:19.508 INFO  jdbc.sqltiming Line:373 - insert into node_revision__field_fenlei (bundle, delta, field_fenlei_target_id, langcode, revision_id, 
entity_id) values ('book', 0, 1, 'zh-hans', 31, 31) 
 {executed in 0 msec}
2020-11-19 11:19:49.848 INFO  jdbc.sqltiming Line:373 - select bookfieldf0_.entity_id as entity_i1_6_, bookfieldf0_.bundle as bundle2_6_, bookfieldf0_.delta 
as delta3_6_, bookfieldf0_.field_fsid_value as field_fs4_6_, bookfieldf0_.langcode as langcode5_6_, 
bookfieldf0_.revision_id as revision6_6_ from node__field_fsid bookfieldf0_ where bookfieldf0_.field_fsid_value='59024556127114' 
 {executed in 0 msec}
2020-11-19 11:19:49.849 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------|---------|------------|
|entity_id |bundle |delta |field_fsid_value |langcode |revision_id |
|----------|-------|------|-----------------|---------|------------|
|----------|-------|------|-----------------|---------|------------|

2020-11-19 11:19:49.850 INFO  jdbc.sqltiming Line:373 - insert into node_revision (langcode, nid, revision_default, revision_timestamp, revision_uid) 
values ('zh-hans', 0, 1, 1605755989, 1) 
 {executed in 0 msec}
2020-11-19 11:19:49.851 INFO  jdbc.sqltiming Line:373 - getGeneratedKeys on query: insert into node_revision (langcode, nid, revision_default, revision_timestamp, 
revision_uid) values ('zh-hans', 0, 1, 1605755989, 1) 
 {executed in 0 msec}
2020-11-19 11:19:49.851 INFO  jdbc.resultsettable Line:610 - 
|--------------|
|generated_key |
|--------------|
|32            |
|--------------|

2020-11-19 11:19:49.859 INFO  jdbc.sqltiming Line:373 - insert into node (langcode, type, uuid, vid) values ('zh-hans', 'book', 'f1365da4-a51d-40c4-87e3-e0d2b0cf925f', 
32) 
 {executed in 0 msec}
2020-11-19 11:19:49.860 INFO  jdbc.sqltiming Line:373 - getGeneratedKeys on query: insert into node (langcode, type, uuid, vid) values ('zh-hans', 
'book', 'f1365da4-a51d-40c4-87e3-e0d2b0cf925f', 32) 
 {executed in 0 msec}
2020-11-19 11:19:49.860 INFO  jdbc.resultsettable Line:610 - 
|--------------|
|generated_key |
|--------------|
|32            |
|--------------|

2020-11-19 11:19:49.864 INFO  jdbc.sqltiming Line:373 - update node_revision set langcode='zh-hans', nid=32, revision_default=1, revision_timestamp=1605755989, 
revision_uid=1 where vid=32 
 {executed in 0 msec}
2020-11-19 11:19:49.868 INFO  jdbc.sqltiming Line:373 - select bookfieldf0_.entity_id as entity_i1_6_0_, bookfieldf0_.bundle as bundle2_6_0_, bookfieldf0_.delta 
as delta3_6_0_, bookfieldf0_.field_fsid_value as field_fs4_6_0_, bookfieldf0_.langcode as langcode5_6_0_, 
bookfieldf0_.revision_id as revision6_6_0_ from node__field_fsid bookfieldf0_ where bookfieldf0_.entity_id=32 
 {executed in 1 msec}
2020-11-19 11:19:49.868 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------|---------|------------|
|entity_id |bundle |delta |field_fsid_value |langcode |revision_id |
|----------|-------|------|-----------------|---------|------------|
|----------|-------|------|-----------------|---------|------------|

2020-11-19 11:19:49.869 INFO  jdbc.sqltiming Line:373 - insert into node__field_fsid (bundle, delta, field_fsid_value, langcode, revision_id, entity_id) 
values ('book', 0, '59024556127114', 'zh-hans', 32, 32) 
 {executed in 0 msec}
2020-11-19 11:19:49.873 INFO  jdbc.sqltiming Line:373 - select nodefieldf0_.entity_id as entity_i1_15_0_, nodefieldf0_.bundle as bundle2_15_0_, nodefieldf0_.delta 
as delta3_15_0_, nodefieldf0_.field_fsid_value as field_fs4_15_0_, nodefieldf0_.langcode as 
langcode5_15_0_, nodefieldf0_.revision_id as revision6_15_0_ from node_revision__field_fsid 
nodefieldf0_ where nodefieldf0_.entity_id=32 
 {executed in 1 msec}
2020-11-19 11:19:49.873 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------|---------|------------|
|entity_id |bundle |delta |field_fsid_value |langcode |revision_id |
|----------|-------|------|-----------------|---------|------------|
|----------|-------|------|-----------------|---------|------------|

2020-11-19 11:19:49.874 INFO  jdbc.sqltiming Line:373 - insert into node_revision__field_fsid (bundle, delta, field_fsid_value, langcode, revision_id, 
entity_id) values ('book', 0, '59024556127114', 'zh-hans', 32, 32) 
 {executed in 0 msec}
2020-11-19 11:19:49.878 INFO  jdbc.sqltiming Line:373 - select bookentity0_.nid as nid1_1_, bookentity0_.bid as bid2_1_, bookentity0_.depth as depth3_1_, 
bookentity0_.has_children as has_chil4_1_, bookentity0_.p1 as p5_1_, bookentity0_.p2 as p6_1_, 
bookentity0_.p3 as p7_1_, bookentity0_.p4 as p8_1_, bookentity0_.p5 as p9_1_, bookentity0_.pid 
as pid10_1_, bookentity0_.weight as weight11_1_ from book bookentity0_ where bookentity0_.nid=32 
 {executed in 0 msec}
2020-11-19 11:19:49.878 INFO  jdbc.resultsettable Line:610 - 
|----|----|------|-------------|---|---|---|---|---|----|-------|
|nid |bid |depth |has_children |p1 |p2 |p3 |p4 |p5 |pid |weight |
|----|----|------|-------------|---|---|---|---|---|----|-------|
|----|----|------|-------------|---|---|---|---|---|----|-------|

2020-11-19 11:19:49.879 INFO  jdbc.sqltiming Line:373 - select bookentity0_.nid as nid1_1_0_, bookentity0_.bid as bid2_1_0_, bookentity0_.depth as 
depth3_1_0_, bookentity0_.has_children as has_chil4_1_0_, bookentity0_.p1 as p5_1_0_, bookentity0_.p2 
as p6_1_0_, bookentity0_.p3 as p7_1_0_, bookentity0_.p4 as p8_1_0_, bookentity0_.p5 as p9_1_0_, 
bookentity0_.pid as pid10_1_0_, bookentity0_.weight as weight11_1_0_ from book bookentity0_ 
where bookentity0_.nid=32 
 {executed in 0 msec}
2020-11-19 11:19:49.879 INFO  jdbc.resultsettable Line:610 - 
|----|----|------|-------------|---|---|---|---|---|----|-------|
|nid |bid |depth |has_children |p1 |p2 |p3 |p4 |p5 |pid |weight |
|----|----|------|-------------|---|---|---|---|---|----|-------|
|----|----|------|-------------|---|---|---|---|---|----|-------|

2020-11-19 11:19:49.880 INFO  jdbc.sqltiming Line:373 - insert into book (bid, depth, has_children, p1, p2, p3, p4, p5, pid, weight, nid) values (1, 
3, 0, 1, 27, 32, 0, 0, 27, 0, 32) 
 {executed in 0 msec}
2020-11-19 11:19:49.884 INFO  jdbc.sqltiming Line:373 - select nodebodyen0_.entity_id as entity_i1_3_, nodebodyen0_.body_value as body_val2_3_, nodebodyen0_.body_summary 
as body_sum3_3_, nodebodyen0_.bundle as bundle4_3_, nodebodyen0_.delta as delta5_3_, nodebodyen0_.body_format 
as body_for6_3_, nodebodyen0_.langcode as langcode7_3_, nodebodyen0_.revision_id as revision8_3_ 
from node__body nodebodyen0_ where nodebodyen0_.entity_id=32 
 {executed in 0 msec}
2020-11-19 11:19:49.884 INFO  jdbc.resultsettable Line:610 - 
|----------|-----------|-------------|-------|------|------------|---------|------------|
|entity_id |body_value |body_summary |bundle |delta |body_format |langcode |revision_id |
|----------|-----------|-------------|-------|------|------------|---------|------------|
|----------|-----------|-------------|-------|------|------------|---------|------------|

2020-11-19 11:19:49.885 INFO  jdbc.sqltiming Line:373 - select nodebodyre0_.entity_id as entity_i1_12_0_, nodebodyre0_.body_value as body_val2_12_0_, 
nodebodyre0_.body_summary as body_sum3_12_0_, nodebodyre0_.bundle as bundle4_12_0_, nodebodyre0_.delta 
as delta5_12_0_, nodebodyre0_.body_format as body_for6_12_0_, nodebodyre0_.langcode as langcode7_12_0_, 
nodebodyre0_.revision_id as revision8_12_0_ from node_revision__body nodebodyre0_ where nodebodyre0_.entity_id=32 
 {executed in 0 msec}
2020-11-19 11:19:49.885 INFO  jdbc.resultsettable Line:610 - 
|----------|-----------|-------------|-------|------|------------|---------|------------|
|entity_id |body_value |body_summary |bundle |delta |body_format |langcode |revision_id |
|----------|-----------|-------------|-------|------|------------|---------|------------|
|----------|-----------|-------------|-------|------|------------|---------|------------|

2020-11-19 11:19:49.887 INFO  jdbc.sqltiming Line:373 - insert into node_revision__body (body_value, body_summary, bundle, delta, body_format, langcode, 
revision_id, entity_id) values ('<p>你好，我是四火。</p> <p>我在上一章讲到了 MVC 的原理，今天我来讲讲前端的 MVC 框架。这部分发展很快，它们比后端 
MVC 框架出现得更晚，但是社区普遍更活跃。</p> <p>我们在学习的过程中，需要继续保持深度和广度的均衡，既要对自己熟悉的那一款框架做深入了解，知道它的核心特性，明白其基本实现原理，对于其优劣有自己的想法；也要多了解了解这个技术的百花园，看看别的框架是什么，想想有什么优势和缺点，拓宽视野，为自己能够做出合理的技术选型而打下扎实的基础。</p> 
<h2>前端 MVC 的变革</h2> <p>让我们来回想一下，在 <a href="https://time.geekbang.org/column/article/140196">[第 
07 讲]</a> 中，介绍过的 MVC 架构。实际上，我们可以把前端的部分大致归纳到视图层内，可它本身，却还可以按照 MVC 的基本思想继续划分。这个划分，有些遵循着 MVC 两个常见形式之一，有些则遵循着 
MVC 的某种变体，比如 MVVM。</p> <p>我们都知道前端技术的基础是 HTML、CSS 和 JavaScript，可随着技术的发展，它们在前端技术分层中的位置是不断变化的。</p> 
<p>在前端技术发展的早期，Ajax 技术尚未被发明或引进，页面是一次性从服务端生成的，即便有视图层的解耦，页面聚合也是在服务端生成的（如果忘记了服务端的页面聚合，请回看 <a href="https://time.geekbang.org/column/article/141817">[第 
09 讲]</a>）。也就是说，整个页面一旦生成，就可以认为是静态的了。</p><!-- [[[read_end]]] --> <p>在这种情况下，如果单独把前端代码的组织也按照 MVC 
架构来划分，你觉得 HTML 到底算模型层还是视图层？</p> <ul> <li>有人说 ，是模型层，因为它承载了具备业务含义的文本和图像等资源，是数据模型的载体，它们是前端的血和肉；</li> 
<li>有人说，是视图层，因为它决定了用户最后看到的样子，至于 CSS，它可以决定展示的“部分”效果，但却不是必须的（即便没有 CSS，页面一样可以展示）。</li> </ul> <p>其实，这两种说法都部分正确。毕竟，如果采用服务端聚合，等浏览器收到了响应报文，从前端的角度来看，模型和呈现实际已经融合在一起了，很难分得清楚。</p> 
<p>等到 Ajax 技术成熟，客户端聚合发展起来了，情况忽然就不一样了。代表视图的 HTML 模板和代表数据的 JSON 报文，分别依次抵达浏览器，JavaScript 再把数据和模板聚合起来展示，这时候这个过程的 
MVC 分层就很清晰了。</p> <p>曾经 jQuery 是最流行的 JavaScript 库，但是如今随着前端业务的复杂性剧增，一个单纯的库已经不能很好地解决问题，而框架开始扮演更重要的地位，比如大家常常耳闻的前端新三驾马车 
Vue.js, Anuglar 和 React。</p> <h2>Angular</h2> <p>对于现代 MVC 框架的介绍，我将用两个框架来举例。前端框架那么多，希望你的学习不仅仅是知识的堆砌，而是可以领会一些有代表性的玩法，能有自己的解读。第一个是 
Angular，我们来看看它的几个特性。</p> <h3>1. 双向绑定</h3> <p>曾经，写前端代码的时候，数据绑定都是用类似于 <a href="https://jquery.com/">jQuery</a> 
绑定的方式来完成的，但是，<strong>有时候视图页面的数值变更和前端模型的数据变更，这两个变更所需的数据绑定是双向的，这就会引发非常啰嗦的状态同步：</strong></p> <ul> 
<li><strong>数据对象发生变更以后，要及时更新 DOM 树；</strong></li> <li><strong>用户操作改变 DOM 树以后，要回头更新数据对象。</strong></li> 
</ul> <p>比方说，在 JavaScript 中有这样一个数据对象，一本书：</p> <pre style="position: relative;"><code> <table 
class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" 
data-line-number="1"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> book 
= {name: "Steve Jobs Biography"} </div></td> </tr> </tbody> </table></code> <div class="richcontent-pre-copy"> 
<span class="iconfont"></span>复制代码 </div></pre> <p>在 HTML 中有这样的 DOM 元素：</p> <pre style="position: 
relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
&lt;input id="book-input" type="text" ... /&gt; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> &lt;label id="book-label" ...&gt;&lt;/label&gt; </div></td> </tr> 
</tbody> </table></code> <div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 
</div></pre> <p>我们需要把数据绑定到这样的 DOM 对象上去，这样，在数据对象变更的时候，下面这两个 DOM 对象也会得到变更，从而保证一致性：</p> <pre style="position: 
relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
$("#book-input").val(book.name); </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="2"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
$("#book-label").text(book.name); </div></td> </tr> </tbody> </table></code> <div class="richcontent-pre-copy"> 
<span class="iconfont"></span>复制代码 </div></pre> <p>相应地，我们还需要些绑定语句来响应用户对 book-input 这个输入框的变更，同步到 
book-label 和 JavaScript 的 book 对象上去：</p> <pre style="position: relative;"><code> <table class="hljs-ln"> 
<tbody> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> $("#book-input").keydown(function(){ </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> var data = $(this).val(); </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> $("book-label").text(data); </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> book.name = data; </div></td> </tr> <tr> 
<td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> }); </div></td> </tr> </tbody> </table></code> 
<div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 </div></pre> <p>你可以想象，当这样的关联变更很多的时候，类似的样板代码该有多少，复杂度和恶心程度该有多高。</p> 
<p>于是 Angular 跳出来说，让我们来使用双向绑定解决这个问题吧。无论我们“主动”改变模型层的业务对象（book 对象），还是视图层的这个业务对象的展示（input 标签），都可以自动完成模型层和视图层的同步。</p> 
<p>实现方法呢，其实只有两步而已。首先模型层需要告知 DOM 受到哪个控制器控制，比如这里的 BookController，然后使用模板的方式来完成从模型到视图的绑定：</p> <pre 
style="position: relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> &lt;div ng-app ng-controller="BookController"&gt; </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> &lt;input type="text" value="{{book.name}}" 
/&gt; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" 
data-line-number="3"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> &lt;label&gt;{{book.name}}&lt;/label&gt; 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> &lt;/div&gt; </div></td> </tr> </tbody> 
</table></code> <div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 </div></pre> 
<p>接着在 JavaScript 代码中定义控制器 BookController，将业务对象 book 绑定到 $scope 以暴露出去：</p> <pre style="position: 
relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
function BookController($scope) { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div 
class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> <td class="hljs-ln-code"> <div 
class="hljs-ln-line"> $scope.book = {name : "Steve Jobs Biography"}; </div></td> </tr> <tr> 
<td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> } </div></td> </tr> </tbody> </table></code> 
<div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 </div></pre> <p>你看，这样 
label、input 和 $scope.book 这三者就同步了，这三者任一改变，另两者会自动同步，保持一致。<strong>这大大简化了复杂绑定行为的代码，尽可能地将绑定的命令式代码移除出去，而使用声明式代码来完成绑定的关联关系的定义。</strong></p> 
<h3>2. 依赖注入</h3> <p>你可能还记得我们在 <a href="https://time.geekbang.org/column/article/143882">[第 
11 讲]</a> 中介绍过依赖注入，在前端，借助 Angular 我们也可以做到，比如下面的例子：</p> <pre style="position: relative;"><code> 
<table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
function BookController($scope, $http) { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> $http.get(''/books'').success(function(data) { </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> $scope.books = data; </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> }); </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> } </div></td> </tr> </tbody> </table></code> <div class="richcontent-pre-copy"> 
<span class="iconfont"></span>复制代码 </div></pre> <p>你看，无论是 <code>$scope</code> 还是 <code>$http</code> 
模块，写业务代码的程序员都不需要关心，只需要直接使用即可，它们被 Angular 管理起来并在此注入。这个方法，是不是很像我们介绍过的 Spring 对对象的管理和注入？</p> <h3>3. 
过滤器</h3> <p>注意，这是 Angular 的过滤器，并不是我们之前讲到的 Servlet Filter。</p> <p>过滤器是个很有趣的特性，让人想起了管道编程。你大概也发现 
Angular 真是一个到处“抄袭”，哦不，是“借鉴”各种概念和范型的东西，比如依赖注入抄 Spring，标签定义抄 Flex，过滤器抄 Linux 的管道。从一定角度来说，还是那句话，技术都是相通的。比如：</p> 
<pre style="position: relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> {{ book.name | uppercase | replace:'' '':''_'' }} </div></td> </tr> 
</tbody> </table></code> <div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 
</div></pre> <p>你看，这就是把书名全转成大写，再把空格用下划线替换。我觉得这”管道“用得就很酷了。<strong>它的一大意义是，业务对象到视图对象的转换，被这样简单而清晰的方式精巧地解决了。</strong></p> 
<h2>React + Redux</h2> <p>这两个放到一起说，是因为 <a href="https://reactjs.org/">React</a> 其实只是一个用户界面的库，它的组件化做得特别出色，但本身的贡献主要还是在视图层；而 
<a href="https://redux.js.org/">Redux</a> 是一个 JavaScript 状态容器，提供可预测的状态管理能力。有了 Redux，才能谈整个 MVC 
框架。</p> <h3>1. JSX</h3> <p>没有 JSX 的话 React 也能工作，但是如果没有 JSX，React 会变得索然无味许多，JSX 是 React 带来的最有变革意义的部分。比如这样一个简单的 
JSX 文件：</p> <pre style="position: relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td 
class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> class BookInfo extends React.Component 
{ </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> render() { </div></td> </tr> <tr> <td 
class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> return ( </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> &lt;div&gt;{this.props.name}&lt;/div&gt; </div></td> </tr> <tr> 
<td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> ); </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> } </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="7"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
} </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="8"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="9"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> ReactDOM.render( </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="10"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> &lt;BookInfo name="Steve Jobs Biography" /&gt;, </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="11"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> document.getElementById(''book-info'') 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="12"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> ); </div></td> </tr> </tbody> </table></code> 
<div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 </div></pre> <p>前半部分定义了一个输出图书信息的组件 
BookInfo，内容很容易理解；后半部分则是将这个组件渲染到指定的 DOM 节点上。&lt;div&gt;{this.props.name}&lt;/div&gt; 这个东西，如果你初次见到，可能会感到新奇：</p> 
<ul> <li>看起来像是 HTML，可是居然放在 JavaScript 代码里返回了；</li> <li>也没有使用双引号，因此看起来也不像是单纯的字符串。</li> </ul> 
<p>没错，它二者都不是，而是 JavaScript 的一种语法扩展。</p> <p>我们总在说解耦，于是我们把用于呈现的模板放到 HTML 里，把和模板有关的交互逻辑和数据准备放到 
JavaScript 里（这被称为“标记和逻辑的分离”）。</p> <p>可是越来越多的程序员发现，<strong>这样的解耦未必总能带来“简化”，原因就在呈现模板本身，还有为了最终呈现而写的渲染逻辑，二者有着紧密的联系，脱离开模板本身的渲染逻辑，没有存在的价值，也难以被阅读和理解。</strong></p> 
<p>既然这样，那为什么还要把它们分开呢？</p> <p>原来，它们分开的原因并不仅仅是为了分层解耦本身，还因为当时承载技术发展的限制。还记得我们谈到过的声明式和命令式代码的区别吗？两种不同的编程范式，由于技术等种种限制，就仿佛井水不犯河水，二者采用的技术是分别发展的。</p> 
<p>如今，大胆的 JSX 反其道而行，把呈现和渲染逻辑放在了一起，并且，它还没有丢掉二者自身的优点。比如说，整体看 JSX 内跑的是 JavaScript 代码，但是嵌入在 JSX 
中的 HTML 标签依然可以以它原生的结构存放，支持 JSX 的开发工具也可以实时编译并告知 HTML 标签内的错误。换言之，JSX 中的“HTML 标签”它依然是具有结构属性的 HTML，而不是普通字符串！</p> 
<p>并且，这两者放到一起以后，带来了除了内聚性增强以外的其它好处。比如说，测试更加方便，所有的呈现代码都可以作为 JavaScript 的一部分进行测试了，这大大简化了原本需要针对 
HTML 而进行单独的打桩、替换、变化捕获而变得复杂的测试过程。</p> <h3>2. Redux 对状态的管理</h3> <p>复杂前端程序的一大难题是对于状态的管理，本质上这种状态的不可预知性是由前端天然的事件驱动模型造成的（如有遗忘，请回看 
<a href="https://time.geekbang.org/column/article/145875">[第 14 讲]</a>），它试图用一种统一的模式和机制来简化状态管理的复杂性，达到复杂系统状态变化“可预测”的目的。</p> 
<p>下面我通过一个最简单的例子，结合图示，来把这个大致过程讲清楚。</p> <p><img src="https://static001.geekbang.org/resource/image/01/f8/0156ed94391b73d3e2fb79c5956802f8.png" 
alt=""></p> <p>首先，最核心的部分，是图中右侧是 Store，它是唯一一个存储状态的数据来源，要获知整个系统的状态，只要把握住 Store 的状态就可以了。假设一开始存放了两本书。</p> 
<p>在图中的最下方，由 View 来展现数据，这部分我们已经很熟悉了，根据 Store 的状态，视图会展示相应的内容。一旦 Store 的状态有了更新，View 上会体现出来，这个数据绑定后的同步由框架完成。一开始，展示的是书的数量 
2。</p> <p>这时，用户在 View 上点击了一个添加书本的按钮，一个如下添加书本的 Action 对象生成，发送（dispatch）给 Reducer：</p> <pre style="position: 
relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
{ type: ''ADD_BOOK'', amount: 1 } </div></td> </tr> </tbody> </table></code> <div class="richcontent-pre-copy"> 
<span class="iconfont"></span>复制代码 </div></pre> <p>Reducer 根据 Action 和 Store 中老的状态，来生成新的状态。它接收两个参数，一个是当前 
Store 中的状态 state，再一个就是上面的这个 action，返回新的 state：</p> <pre style="position: relative;"><code> 
<table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
(state = 0, action) =&gt; { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="2"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
switch (action.type) { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="3"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
case ''ADD_BOOK'': </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="4"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
return state + action.amount; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="5"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
default: </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" 
data-line-number="6"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> return 
state; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" 
data-line-number="7"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> } </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="8"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> }; </div></td> </tr> </tbody> </table></code> 
<div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 </div></pre> <p>于是，Store 
中的 state 由 2 变成了 3，相应地，View 展示的图书数量也得到了更新。</p> <p>那为什么 Redux 能将复杂的状态简化？我觉得有这么几个原因：</p> <ul> 
<li>整个流程中<strong>数据是单向流动的，状态被隔离，严格地管理起来了</strong>，只有 Store 有状态，这就避免了散落的状态混乱而互相影响。</li> <li>无论多么复杂的 
View 上的操作或者事件，都会统一转换成若干个 Redux 系统能够识别的 Action。换句话说，<strong>不同的操作，只不过引起 Action 的 type 不同，或者上面承载的业务数据不同。</strong></li> 
<li>Reducer 是无状态的，它是一个纯函数，但它的职责是根据 Action 和 Store 中老的状态来生成新的状态。这样，<strong>Store 中状态的改变也只有一个来源，就是 
Reducer 的操作。</strong></li> </ul> <h2>总结思考</h2> <p>今天我们学习了从前端的角度怎样理解 MVC 架构，特别学习了 Angular 和 
React + Redux 两个实际框架的具有代表性的特性。</p> <p>下面，留两个思考题给你：</p> <p><strong>问题一：</strong>你在项目中是否使用过前端 
MVC 框架，你觉得它带来了什么好处和坏处？</p> <p><strong>问题二：</strong>案例判断。</p> <p>我们曾经学过要解耦，把行为从 HTML 中分离出去，比如这样的代码：</p> 
<pre style="position: relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> &lt;img onclick="setImage()"&gt; </div></td> </tr> </tbody> </table></code> 
<div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 </div></pre> <p>我们说它“不好”，因为点击行为和视图展现耦合在一起了，因此我们使用 
jQuery 等工具在 JavaScript 中完成绑定，才最终把它移除出去，完成了“解耦”。</p> <p>可是，作为现代的 JavaScript 框架，Angular 却又让类似的代码回来了：</p> 
<pre style="position: relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> &lt;img ng-click="setImage()"&gt; </div></td> </tr> </tbody> </table></code> 
<div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 </div></pre> <p>对此，你怎么看，你觉得它会让代码结构和层次变得更好，还是更糟？</p> 
<p>好，今天就到这里，欢迎你打卡，把你的总结或者思考题的答案，分享到留言区，我们一起讨论。</p> <h2>扩展阅读</h2> <ul> <li>和其它技术相比，<a href="https://angular.cn/">Angular 
的中文站</a>做得非常出色，关于 Angular 的中文教程到上面去找就好了。</li> <li>对于 React 的学习，<a href="https://zh-hans.reactjs.org/docs/getting-started.html">官方的中文翻译文档</a>是非常适合的起点；对于 
Redux 的学习，请参考 <a href="https://cn.redux.js.org/">Redux 中文文档</a>。</li> <li>【基础】文中提到了 jQuery，我相信很多前端程序员对它很熟悉了，它在前端开发中的地位无可替代，它是如此之好用和通用，以至于让一些程序员患上了“jQuery 
依赖症”，离开了它就不会写 JavaScript 来操纵 DOM 了。我们当然不鼓励任何形式的“依赖症”，但我们确实需要学好 jQuery，廖雪峰的网站上有一个<a href="https://www.liaoxuefeng.com/wiki/1022910821149312/1023022609723552">简短的入门</a>。</li> 
<li><a href="https://github.com/GoogleChrome/devtools-docs/blob/master/docs/commandline-api.md">Chrome 
开发者工具的命令行 API</a>，熟知其中的一些常用命令，可以非常方便地在 Chrome 中定位前端问题，其中选择器的语法和 jQuery 非常相似。</li> </ul> <p><img 
src="https://static001.geekbang.org/resource/image/11/8b/1181246bbd51ce348d5729696d1dc28b.jpg" 
alt="unpreview"></p>', '', 'book', 0, 'full_html', 'zh-hans', 32, 32) 
 {executed in 0 msec}
2020-11-19 11:19:49.891 INFO  jdbc.sqltiming Line:373 - select nodebodyen0_.entity_id as entity_i1_3_0_, nodebodyen0_.body_value as body_val2_3_0_, 
nodebodyen0_.body_summary as body_sum3_3_0_, nodebodyen0_.bundle as bundle4_3_0_, nodebodyen0_.delta 
as delta5_3_0_, nodebodyen0_.body_format as body_for6_3_0_, nodebodyen0_.langcode as langcode7_3_0_, 
nodebodyen0_.revision_id as revision8_3_0_ from node__body nodebodyen0_ where nodebodyen0_.entity_id=32 
 {executed in 0 msec}
2020-11-19 11:19:49.892 INFO  jdbc.resultsettable Line:610 - 
|----------|-----------|-------------|-------|------|------------|---------|------------|
|entity_id |body_value |body_summary |bundle |delta |body_format |langcode |revision_id |
|----------|-----------|-------------|-------|------|------------|---------|------------|
|----------|-----------|-------------|-------|------|------------|---------|------------|

2020-11-19 11:19:49.894 INFO  jdbc.sqltiming Line:373 - insert into node__body (body_value, body_summary, bundle, delta, body_format, langcode, revision_id, 
entity_id) values ('<p>你好，我是四火。</p> <p>我在上一章讲到了 MVC 的原理，今天我来讲讲前端的 MVC 框架。这部分发展很快，它们比后端 MVC 
框架出现得更晚，但是社区普遍更活跃。</p> <p>我们在学习的过程中，需要继续保持深度和广度的均衡，既要对自己熟悉的那一款框架做深入了解，知道它的核心特性，明白其基本实现原理，对于其优劣有自己的想法；也要多了解了解这个技术的百花园，看看别的框架是什么，想想有什么优势和缺点，拓宽视野，为自己能够做出合理的技术选型而打下扎实的基础。</p> 
<h2>前端 MVC 的变革</h2> <p>让我们来回想一下，在 <a href="https://time.geekbang.org/column/article/140196">[第 
07 讲]</a> 中，介绍过的 MVC 架构。实际上，我们可以把前端的部分大致归纳到视图层内，可它本身，却还可以按照 MVC 的基本思想继续划分。这个划分，有些遵循着 MVC 两个常见形式之一，有些则遵循着 
MVC 的某种变体，比如 MVVM。</p> <p>我们都知道前端技术的基础是 HTML、CSS 和 JavaScript，可随着技术的发展，它们在前端技术分层中的位置是不断变化的。</p> 
<p>在前端技术发展的早期，Ajax 技术尚未被发明或引进，页面是一次性从服务端生成的，即便有视图层的解耦，页面聚合也是在服务端生成的（如果忘记了服务端的页面聚合，请回看 <a href="https://time.geekbang.org/column/article/141817">[第 
09 讲]</a>）。也就是说，整个页面一旦生成，就可以认为是静态的了。</p><!-- [[[read_end]]] --> <p>在这种情况下，如果单独把前端代码的组织也按照 MVC 
架构来划分，你觉得 HTML 到底算模型层还是视图层？</p> <ul> <li>有人说 ，是模型层，因为它承载了具备业务含义的文本和图像等资源，是数据模型的载体，它们是前端的血和肉；</li> 
<li>有人说，是视图层，因为它决定了用户最后看到的样子，至于 CSS，它可以决定展示的“部分”效果，但却不是必须的（即便没有 CSS，页面一样可以展示）。</li> </ul> <p>其实，这两种说法都部分正确。毕竟，如果采用服务端聚合，等浏览器收到了响应报文，从前端的角度来看，模型和呈现实际已经融合在一起了，很难分得清楚。</p> 
<p>等到 Ajax 技术成熟，客户端聚合发展起来了，情况忽然就不一样了。代表视图的 HTML 模板和代表数据的 JSON 报文，分别依次抵达浏览器，JavaScript 再把数据和模板聚合起来展示，这时候这个过程的 
MVC 分层就很清晰了。</p> <p>曾经 jQuery 是最流行的 JavaScript 库，但是如今随着前端业务的复杂性剧增，一个单纯的库已经不能很好地解决问题，而框架开始扮演更重要的地位，比如大家常常耳闻的前端新三驾马车 
Vue.js, Anuglar 和 React。</p> <h2>Angular</h2> <p>对于现代 MVC 框架的介绍，我将用两个框架来举例。前端框架那么多，希望你的学习不仅仅是知识的堆砌，而是可以领会一些有代表性的玩法，能有自己的解读。第一个是 
Angular，我们来看看它的几个特性。</p> <h3>1. 双向绑定</h3> <p>曾经，写前端代码的时候，数据绑定都是用类似于 <a href="https://jquery.com/">jQuery</a> 
绑定的方式来完成的，但是，<strong>有时候视图页面的数值变更和前端模型的数据变更，这两个变更所需的数据绑定是双向的，这就会引发非常啰嗦的状态同步：</strong></p> <ul> 
<li><strong>数据对象发生变更以后，要及时更新 DOM 树；</strong></li> <li><strong>用户操作改变 DOM 树以后，要回头更新数据对象。</strong></li> 
</ul> <p>比方说，在 JavaScript 中有这样一个数据对象，一本书：</p> <pre style="position: relative;"><code> <table 
class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" 
data-line-number="1"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> book 
= {name: "Steve Jobs Biography"} </div></td> </tr> </tbody> </table></code> <div class="richcontent-pre-copy"> 
<span class="iconfont"></span>复制代码 </div></pre> <p>在 HTML 中有这样的 DOM 元素：</p> <pre style="position: 
relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
&lt;input id="book-input" type="text" ... /&gt; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> &lt;label id="book-label" ...&gt;&lt;/label&gt; </div></td> </tr> 
</tbody> </table></code> <div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 
</div></pre> <p>我们需要把数据绑定到这样的 DOM 对象上去，这样，在数据对象变更的时候，下面这两个 DOM 对象也会得到变更，从而保证一致性：</p> <pre style="position: 
relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
$("#book-input").val(book.name); </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="2"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
$("#book-label").text(book.name); </div></td> </tr> </tbody> </table></code> <div class="richcontent-pre-copy"> 
<span class="iconfont"></span>复制代码 </div></pre> <p>相应地，我们还需要些绑定语句来响应用户对 book-input 这个输入框的变更，同步到 
book-label 和 JavaScript 的 book 对象上去：</p> <pre style="position: relative;"><code> <table class="hljs-ln"> 
<tbody> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> $("#book-input").keydown(function(){ </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> var data = $(this).val(); </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> $("book-label").text(data); </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> book.name = data; </div></td> </tr> <tr> 
<td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> }); </div></td> </tr> </tbody> </table></code> 
<div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 </div></pre> <p>你可以想象，当这样的关联变更很多的时候，类似的样板代码该有多少，复杂度和恶心程度该有多高。</p> 
<p>于是 Angular 跳出来说，让我们来使用双向绑定解决这个问题吧。无论我们“主动”改变模型层的业务对象（book 对象），还是视图层的这个业务对象的展示（input 标签），都可以自动完成模型层和视图层的同步。</p> 
<p>实现方法呢，其实只有两步而已。首先模型层需要告知 DOM 受到哪个控制器控制，比如这里的 BookController，然后使用模板的方式来完成从模型到视图的绑定：</p> <pre 
style="position: relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> &lt;div ng-app ng-controller="BookController"&gt; </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> &lt;input type="text" value="{{book.name}}" 
/&gt; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" 
data-line-number="3"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> &lt;label&gt;{{book.name}}&lt;/label&gt; 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> &lt;/div&gt; </div></td> </tr> </tbody> 
</table></code> <div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 </div></pre> 
<p>接着在 JavaScript 代码中定义控制器 BookController，将业务对象 book 绑定到 $scope 以暴露出去：</p> <pre style="position: 
relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
function BookController($scope) { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div 
class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> <td class="hljs-ln-code"> <div 
class="hljs-ln-line"> $scope.book = {name : "Steve Jobs Biography"}; </div></td> </tr> <tr> 
<td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> } </div></td> </tr> </tbody> </table></code> 
<div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 </div></pre> <p>你看，这样 
label、input 和 $scope.book 这三者就同步了，这三者任一改变，另两者会自动同步，保持一致。<strong>这大大简化了复杂绑定行为的代码，尽可能地将绑定的命令式代码移除出去，而使用声明式代码来完成绑定的关联关系的定义。</strong></p> 
<h3>2. 依赖注入</h3> <p>你可能还记得我们在 <a href="https://time.geekbang.org/column/article/143882">[第 
11 讲]</a> 中介绍过依赖注入，在前端，借助 Angular 我们也可以做到，比如下面的例子：</p> <pre style="position: relative;"><code> 
<table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
function BookController($scope, $http) { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> $http.get(''/books'').success(function(data) { </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> $scope.books = data; </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> }); </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> } </div></td> </tr> </tbody> </table></code> <div class="richcontent-pre-copy"> 
<span class="iconfont"></span>复制代码 </div></pre> <p>你看，无论是 <code>$scope</code> 还是 <code>$http</code> 
模块，写业务代码的程序员都不需要关心，只需要直接使用即可，它们被 Angular 管理起来并在此注入。这个方法，是不是很像我们介绍过的 Spring 对对象的管理和注入？</p> <h3>3. 
过滤器</h3> <p>注意，这是 Angular 的过滤器，并不是我们之前讲到的 Servlet Filter。</p> <p>过滤器是个很有趣的特性，让人想起了管道编程。你大概也发现 
Angular 真是一个到处“抄袭”，哦不，是“借鉴”各种概念和范型的东西，比如依赖注入抄 Spring，标签定义抄 Flex，过滤器抄 Linux 的管道。从一定角度来说，还是那句话，技术都是相通的。比如：</p> 
<pre style="position: relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> {{ book.name | uppercase | replace:'' '':''_'' }} </div></td> </tr> 
</tbody> </table></code> <div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 
</div></pre> <p>你看，这就是把书名全转成大写，再把空格用下划线替换。我觉得这”管道“用得就很酷了。<strong>它的一大意义是，业务对象到视图对象的转换，被这样简单而清晰的方式精巧地解决了。</strong></p> 
<h2>React + Redux</h2> <p>这两个放到一起说，是因为 <a href="https://reactjs.org/">React</a> 其实只是一个用户界面的库，它的组件化做得特别出色，但本身的贡献主要还是在视图层；而 
<a href="https://redux.js.org/">Redux</a> 是一个 JavaScript 状态容器，提供可预测的状态管理能力。有了 Redux，才能谈整个 MVC 
框架。</p> <h3>1. JSX</h3> <p>没有 JSX 的话 React 也能工作，但是如果没有 JSX，React 会变得索然无味许多，JSX 是 React 带来的最有变革意义的部分。比如这样一个简单的 
JSX 文件：</p> <pre style="position: relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td 
class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> class BookInfo extends React.Component 
{ </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> render() { </div></td> </tr> <tr> <td 
class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> return ( </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> &lt;div&gt;{this.props.name}&lt;/div&gt; </div></td> </tr> <tr> 
<td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> ); </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> } </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="7"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
} </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="8"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="9"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> ReactDOM.render( </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="10"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> &lt;BookInfo name="Steve Jobs Biography" /&gt;, </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="11"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> document.getElementById(''book-info'') 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="12"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> ); </div></td> </tr> </tbody> </table></code> 
<div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 </div></pre> <p>前半部分定义了一个输出图书信息的组件 
BookInfo，内容很容易理解；后半部分则是将这个组件渲染到指定的 DOM 节点上。&lt;div&gt;{this.props.name}&lt;/div&gt; 这个东西，如果你初次见到，可能会感到新奇：</p> 
<ul> <li>看起来像是 HTML，可是居然放在 JavaScript 代码里返回了；</li> <li>也没有使用双引号，因此看起来也不像是单纯的字符串。</li> </ul> 
<p>没错，它二者都不是，而是 JavaScript 的一种语法扩展。</p> <p>我们总在说解耦，于是我们把用于呈现的模板放到 HTML 里，把和模板有关的交互逻辑和数据准备放到 
JavaScript 里（这被称为“标记和逻辑的分离”）。</p> <p>可是越来越多的程序员发现，<strong>这样的解耦未必总能带来“简化”，原因就在呈现模板本身，还有为了最终呈现而写的渲染逻辑，二者有着紧密的联系，脱离开模板本身的渲染逻辑，没有存在的价值，也难以被阅读和理解。</strong></p> 
<p>既然这样，那为什么还要把它们分开呢？</p> <p>原来，它们分开的原因并不仅仅是为了分层解耦本身，还因为当时承载技术发展的限制。还记得我们谈到过的声明式和命令式代码的区别吗？两种不同的编程范式，由于技术等种种限制，就仿佛井水不犯河水，二者采用的技术是分别发展的。</p> 
<p>如今，大胆的 JSX 反其道而行，把呈现和渲染逻辑放在了一起，并且，它还没有丢掉二者自身的优点。比如说，整体看 JSX 内跑的是 JavaScript 代码，但是嵌入在 JSX 
中的 HTML 标签依然可以以它原生的结构存放，支持 JSX 的开发工具也可以实时编译并告知 HTML 标签内的错误。换言之，JSX 中的“HTML 标签”它依然是具有结构属性的 HTML，而不是普通字符串！</p> 
<p>并且，这两者放到一起以后，带来了除了内聚性增强以外的其它好处。比如说，测试更加方便，所有的呈现代码都可以作为 JavaScript 的一部分进行测试了，这大大简化了原本需要针对 
HTML 而进行单独的打桩、替换、变化捕获而变得复杂的测试过程。</p> <h3>2. Redux 对状态的管理</h3> <p>复杂前端程序的一大难题是对于状态的管理，本质上这种状态的不可预知性是由前端天然的事件驱动模型造成的（如有遗忘，请回看 
<a href="https://time.geekbang.org/column/article/145875">[第 14 讲]</a>），它试图用一种统一的模式和机制来简化状态管理的复杂性，达到复杂系统状态变化“可预测”的目的。</p> 
<p>下面我通过一个最简单的例子，结合图示，来把这个大致过程讲清楚。</p> <p><img src="https://static001.geekbang.org/resource/image/01/f8/0156ed94391b73d3e2fb79c5956802f8.png" 
alt=""></p> <p>首先，最核心的部分，是图中右侧是 Store，它是唯一一个存储状态的数据来源，要获知整个系统的状态，只要把握住 Store 的状态就可以了。假设一开始存放了两本书。</p> 
<p>在图中的最下方，由 View 来展现数据，这部分我们已经很熟悉了，根据 Store 的状态，视图会展示相应的内容。一旦 Store 的状态有了更新，View 上会体现出来，这个数据绑定后的同步由框架完成。一开始，展示的是书的数量 
2。</p> <p>这时，用户在 View 上点击了一个添加书本的按钮，一个如下添加书本的 Action 对象生成，发送（dispatch）给 Reducer：</p> <pre style="position: 
relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
{ type: ''ADD_BOOK'', amount: 1 } </div></td> </tr> </tbody> </table></code> <div class="richcontent-pre-copy"> 
<span class="iconfont"></span>复制代码 </div></pre> <p>Reducer 根据 Action 和 Store 中老的状态，来生成新的状态。它接收两个参数，一个是当前 
Store 中的状态 state，再一个就是上面的这个 action，返回新的 state：</p> <pre style="position: relative;"><code> 
<table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
(state = 0, action) =&gt; { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="2"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
switch (action.type) { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="3"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
case ''ADD_BOOK'': </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="4"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
return state + action.amount; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="5"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
default: </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" 
data-line-number="6"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> return 
state; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" 
data-line-number="7"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> } </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="8"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> }; </div></td> </tr> </tbody> </table></code> 
<div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 </div></pre> <p>于是，Store 
中的 state 由 2 变成了 3，相应地，View 展示的图书数量也得到了更新。</p> <p>那为什么 Redux 能将复杂的状态简化？我觉得有这么几个原因：</p> <ul> 
<li>整个流程中<strong>数据是单向流动的，状态被隔离，严格地管理起来了</strong>，只有 Store 有状态，这就避免了散落的状态混乱而互相影响。</li> <li>无论多么复杂的 
View 上的操作或者事件，都会统一转换成若干个 Redux 系统能够识别的 Action。换句话说，<strong>不同的操作，只不过引起 Action 的 type 不同，或者上面承载的业务数据不同。</strong></li> 
<li>Reducer 是无状态的，它是一个纯函数，但它的职责是根据 Action 和 Store 中老的状态来生成新的状态。这样，<strong>Store 中状态的改变也只有一个来源，就是 
Reducer 的操作。</strong></li> </ul> <h2>总结思考</h2> <p>今天我们学习了从前端的角度怎样理解 MVC 架构，特别学习了 Angular 和 
React + Redux 两个实际框架的具有代表性的特性。</p> <p>下面，留两个思考题给你：</p> <p><strong>问题一：</strong>你在项目中是否使用过前端 
MVC 框架，你觉得它带来了什么好处和坏处？</p> <p><strong>问题二：</strong>案例判断。</p> <p>我们曾经学过要解耦，把行为从 HTML 中分离出去，比如这样的代码：</p> 
<pre style="position: relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> &lt;img onclick="setImage()"&gt; </div></td> </tr> </tbody> </table></code> 
<div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 </div></pre> <p>我们说它“不好”，因为点击行为和视图展现耦合在一起了，因此我们使用 
jQuery 等工具在 JavaScript 中完成绑定，才最终把它移除出去，完成了“解耦”。</p> <p>可是，作为现代的 JavaScript 框架，Angular 却又让类似的代码回来了：</p> 
<pre style="position: relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> &lt;img ng-click="setImage()"&gt; </div></td> </tr> </tbody> </table></code> 
<div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 </div></pre> <p>对此，你怎么看，你觉得它会让代码结构和层次变得更好，还是更糟？</p> 
<p>好，今天就到这里，欢迎你打卡，把你的总结或者思考题的答案，分享到留言区，我们一起讨论。</p> <h2>扩展阅读</h2> <ul> <li>和其它技术相比，<a href="https://angular.cn/">Angular 
的中文站</a>做得非常出色，关于 Angular 的中文教程到上面去找就好了。</li> <li>对于 React 的学习，<a href="https://zh-hans.reactjs.org/docs/getting-started.html">官方的中文翻译文档</a>是非常适合的起点；对于 
Redux 的学习，请参考 <a href="https://cn.redux.js.org/">Redux 中文文档</a>。</li> <li>【基础】文中提到了 jQuery，我相信很多前端程序员对它很熟悉了，它在前端开发中的地位无可替代，它是如此之好用和通用，以至于让一些程序员患上了“jQuery 
依赖症”，离开了它就不会写 JavaScript 来操纵 DOM 了。我们当然不鼓励任何形式的“依赖症”，但我们确实需要学好 jQuery，廖雪峰的网站上有一个<a href="https://www.liaoxuefeng.com/wiki/1022910821149312/1023022609723552">简短的入门</a>。</li> 
<li><a href="https://github.com/GoogleChrome/devtools-docs/blob/master/docs/commandline-api.md">Chrome 
开发者工具的命令行 API</a>，熟知其中的一些常用命令，可以非常方便地在 Chrome 中定位前端问题，其中选择器的语法和 jQuery 非常相似。</li> </ul> <p><img 
src="https://static001.geekbang.org/resource/image/11/8b/1181246bbd51ce348d5729696d1dc28b.jpg" 
alt="unpreview"></p>', '', 'book', 0, 'full_html', 'zh-hans', 32, 32) 
 {executed in 1 msec}
2020-11-19 11:19:49.898 INFO  jdbc.sqltiming Line:373 - select nodefiledd0_.nid as nid1_9_, nodefiledd0_.changed as changed2_9_, nodefiledd0_.created 
as created3_9_, nodefiledd0_.default_langcode as default_4_9_, nodefiledd0_.langcode as langcode5_9_, 
nodefiledd0_.promote as promote6_9_, nodefiledd0_.revision_translation_affected as revision7_9_, 
nodefiledd0_.status as status8_9_, nodefiledd0_.sticky as sticky9_9_, nodefiledd0_.title as 
title10_9_, nodefiledd0_.type as type11_9_, nodefiledd0_.uid as uid12_9_, nodefiledd0_.vid 
as vid13_9_ from node_field_data nodefiledd0_ where nodefiledd0_.nid=32 
 {executed in 0 msec}
2020-11-19 11:19:49.898 INFO  jdbc.resultsettable Line:610 - 
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|-----|----|----|
|nid |changed |created |default_langcode |langcode |promote |revision_translation_affected |status |sticky |title |type |uid |vid |
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|-----|----|----|
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|-----|----|----|

2020-11-19 11:19:49.899 INFO  jdbc.sqltiming Line:373 - select nodefieldr0_.nid as nid1_10_0_, nodefieldr0_.changed as changed2_10_0_, nodefieldr0_.created 
as created3_10_0_, nodefieldr0_.default_langcode as default_4_10_0_, nodefieldr0_.langcode 
as langcode5_10_0_, nodefieldr0_.promote as promote6_10_0_, nodefieldr0_.revision_translation_affected 
as revision7_10_0_, nodefieldr0_.status as status8_10_0_, nodefieldr0_.sticky as sticky9_10_0_, 
nodefieldr0_.title as title10_10_0_, nodefieldr0_.uid as uid11_10_0_, nodefieldr0_.vid as vid12_10_0_ 
from node_field_revision nodefieldr0_ where nodefieldr0_.nid=32 
 {executed in 0 msec}
2020-11-19 11:19:49.899 INFO  jdbc.resultsettable Line:610 - 
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|----|----|
|nid |changed |created |default_langcode |langcode |promote |revision_translation_affected |status |sticky |title |uid |vid |
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|----|----|
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|----|----|

2020-11-19 11:19:49.901 INFO  jdbc.sqltiming Line:373 - insert into node_field_revision (changed, created, default_langcode, langcode, promote, revision_translation_affected, 
status, sticky, title, uid, vid, nid) values (1605755989, 1605755989, 1, 'zh-hans', 0, 1, 1, 
0, '16丨百花齐放，百家争鸣：前端MVC框架', 1, 32, 32) 
 {executed in 1 msec}
2020-11-19 11:19:49.907 INFO  jdbc.sqltiming Line:373 - select nodefiledd0_.nid as nid1_9_0_, nodefiledd0_.changed as changed2_9_0_, nodefiledd0_.created 
as created3_9_0_, nodefiledd0_.default_langcode as default_4_9_0_, nodefiledd0_.langcode as 
langcode5_9_0_, nodefiledd0_.promote as promote6_9_0_, nodefiledd0_.revision_translation_affected 
as revision7_9_0_, nodefiledd0_.status as status8_9_0_, nodefiledd0_.sticky as sticky9_9_0_, 
nodefiledd0_.title as title10_9_0_, nodefiledd0_.type as type11_9_0_, nodefiledd0_.uid as uid12_9_0_, 
nodefiledd0_.vid as vid13_9_0_ from node_field_data nodefiledd0_ where nodefiledd0_.nid=32 
 {executed in 0 msec}
2020-11-19 11:19:49.908 INFO  jdbc.resultsettable Line:610 - 
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|-----|----|----|
|nid |changed |created |default_langcode |langcode |promote |revision_translation_affected |status |sticky |title |type |uid |vid |
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|-----|----|----|
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|-----|----|----|

2020-11-19 11:19:49.909 INFO  jdbc.sqltiming Line:373 - insert into node_field_data (changed, created, default_langcode, langcode, promote, revision_translation_affected, 
status, sticky, title, type, uid, vid, nid) values (1605755989, 1605755989, 1, 'zh-hans', 0, 
1, 1, 0, '16丨百花齐放，百家争鸣：前端MVC框架', 'book', 1, 32, 32) 
 {executed in 0 msec}
2020-11-19 11:19:49.913 INFO  jdbc.sqltiming Line:373 - select bookfieldm0_.entity_id as entity_i1_7_, bookfieldm0_.bundle as bundle2_7_, bookfieldm0_.delta 
as delta3_7_, bookfieldm0_.langcode as langcode4_7_, bookfieldm0_.field_media_value as field_me5_7_, 
bookfieldm0_.revision_id as revision6_7_ from node__field_media bookfieldm0_ where bookfieldm0_.entity_id=32 
 {executed in 1 msec}
2020-11-19 11:19:49.913 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------------|------------|
|entity_id |bundle |delta |langcode |field_media_value |revision_id |
|----------|-------|------|---------|------------------|------------|
|----------|-------|------|---------|------------------|------------|

2020-11-19 11:19:49.913 INFO  jdbc.sqltiming Line:373 - select bookfieldm0_.entity_id as entity_i1_7_0_, bookfieldm0_.bundle as bundle2_7_0_, bookfieldm0_.delta 
as delta3_7_0_, bookfieldm0_.langcode as langcode4_7_0_, bookfieldm0_.field_media_value as 
field_me5_7_0_, bookfieldm0_.revision_id as revision6_7_0_ from node__field_media bookfieldm0_ 
where bookfieldm0_.entity_id=32 
 {executed in 0 msec}
2020-11-19 11:19:49.914 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------------|------------|
|entity_id |bundle |delta |langcode |field_media_value |revision_id |
|----------|-------|------|---------|------------------|------------|
|----------|-------|------|---------|------------------|------------|

2020-11-19 11:19:49.915 INFO  jdbc.sqltiming Line:373 - insert into node__field_media (bundle, delta, langcode, field_media_value, revision_id, entity_id) 
values ('book', 0, 'zh-hans', 'https://qdall01.baidupcs.com/file/167f01c074a5e43a3ffa0bc7e30abaac?bkt=en-1df98aeb722e81f5fd9728eea3da5c53a6033cdbcc8b08a33f91c00739a5522f176c20e710c35c1a&fid=3757516097-778750-354593317304736&time=1605755988&sign=FDTAXUGERLQlBHSKfWqir-DCb740ccc5511e5e8fedcff06b081203-aR6R0jxuVMf6Jk4LNlxJsgOOmOc%3D&to=92&size=13083973&sta_dx=13083973&sta_cs=3508&sta_ft=m4a&sta_ct=7&sta_mt=0&fm2=MH%2CYangquan%2CAnywhere%2C%2Cshanghai%2Cct&ctime=1571655930&mtime=1605754778&resv0=-1&resv1=0&resv2=rlim&resv3=2&resv4=13083973&vuk=3757516097&iv=0&htype=&randtype=em&newver=1&newfm=1&secfm=1&flow_ver=3&pkey=en-3b065a773e80f5a54c9031abf07dc9714c7e208afebeb081897be497934d051b2f64dde8bb036c4c&sl=76480590&expires=8h&rt=pr&r=368778615&mlogid=7502230955979520612&vbdid=2247232042&fin=16%E4%B8%A8%E7%99%BE%E8%8A%B1%E9%BD%90%E6%94%BE%EF%BC%8C%E7%99%BE%E5%AE%B6%E4%BA%89%E9%B8%A3%EF%BC%9A%E5%89%8D%E7%AB%AFMVC%E6%A1%86%E6%9E%B6.m4a&bflag=92,34-92&rtype=1&dp-logid=7502230955979520612&dp-callid=0.1.1&hps=1&tsl=80&csl=80&fsl=-1&csign=yVzLQPCt4DblfMLqd2BCjd2RnqQ%3D&so=0&ut=6&uter=0&serv=0&uc=1458616558&ti=16c8192e22ea32f59b634a4fe130acd85e6a8d33f251557b&hflag=30&adg=c_15d187590626c675056c89c8026cfc17&reqlabel=778750_l_1bf9445f27094ab64c9f1cb0bdf7ccfa_-1_dd2c452b8e51a0c74130d7cf32c48a2d&ibp=1&by=themis&filename=16%E4%B8%A8%E7%99%BE%E8%8A%B1%E9%BD%90%E6%94%BE%EF%BC%8C%E7%99%BE%E5%AE%B6%E4%BA%89%E9%B8%A3%EF%BC%9A%E5%89%8D%E7%AB%AFMVC%E6%A1%86%E6%9E%B6.m4a', 
32, 32) 
 {executed in 0 msec}
2020-11-19 11:19:49.919 INFO  jdbc.sqltiming Line:373 - select nodefieldm0_.entity_id as entity_i1_16_0_, nodefieldm0_.bundle as bundle2_16_0_, nodefieldm0_.delta 
as delta3_16_0_, nodefieldm0_.langcode as langcode4_16_0_, nodefieldm0_.field_media_value as 
field_me5_16_0_, nodefieldm0_.revision_id as revision6_16_0_ from node_revision__field_media 
nodefieldm0_ where nodefieldm0_.entity_id=32 
 {executed in 0 msec}
2020-11-19 11:19:49.919 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------------|------------|
|entity_id |bundle |delta |langcode |field_media_value |revision_id |
|----------|-------|------|---------|------------------|------------|
|----------|-------|------|---------|------------------|------------|

2020-11-19 11:19:49.920 INFO  jdbc.sqltiming Line:373 - insert into node_revision__field_media (bundle, delta, langcode, field_media_value, revision_id, 
entity_id) values ('book', 0, 'zh-hans', 'https://qdall01.baidupcs.com/file/167f01c074a5e43a3ffa0bc7e30abaac?bkt=en-1df98aeb722e81f5fd9728eea3da5c53a6033cdbcc8b08a33f91c00739a5522f176c20e710c35c1a&fid=3757516097-778750-354593317304736&time=1605755988&sign=FDTAXUGERLQlBHSKfWqir-DCb740ccc5511e5e8fedcff06b081203-aR6R0jxuVMf6Jk4LNlxJsgOOmOc%3D&to=92&size=13083973&sta_dx=13083973&sta_cs=3508&sta_ft=m4a&sta_ct=7&sta_mt=0&fm2=MH%2CYangquan%2CAnywhere%2C%2Cshanghai%2Cct&ctime=1571655930&mtime=1605754778&resv0=-1&resv1=0&resv2=rlim&resv3=2&resv4=13083973&vuk=3757516097&iv=0&htype=&randtype=em&newver=1&newfm=1&secfm=1&flow_ver=3&pkey=en-3b065a773e80f5a54c9031abf07dc9714c7e208afebeb081897be497934d051b2f64dde8bb036c4c&sl=76480590&expires=8h&rt=pr&r=368778615&mlogid=7502230955979520612&vbdid=2247232042&fin=16%E4%B8%A8%E7%99%BE%E8%8A%B1%E9%BD%90%E6%94%BE%EF%BC%8C%E7%99%BE%E5%AE%B6%E4%BA%89%E9%B8%A3%EF%BC%9A%E5%89%8D%E7%AB%AFMVC%E6%A1%86%E6%9E%B6.m4a&bflag=92,34-92&rtype=1&dp-logid=7502230955979520612&dp-callid=0.1.1&hps=1&tsl=80&csl=80&fsl=-1&csign=yVzLQPCt4DblfMLqd2BCjd2RnqQ%3D&so=0&ut=6&uter=0&serv=0&uc=1458616558&ti=16c8192e22ea32f59b634a4fe130acd85e6a8d33f251557b&hflag=30&adg=c_15d187590626c675056c89c8026cfc17&reqlabel=778750_l_1bf9445f27094ab64c9f1cb0bdf7ccfa_-1_dd2c452b8e51a0c74130d7cf32c48a2d&ibp=1&by=themis&filename=16%E4%B8%A8%E7%99%BE%E8%8A%B1%E9%BD%90%E6%94%BE%EF%BC%8C%E7%99%BE%E5%AE%B6%E4%BA%89%E9%B8%A3%EF%BC%9A%E5%89%8D%E7%AB%AFMVC%E6%A1%86%E6%9E%B6.m4a', 
32, 32) 
 {executed in 0 msec}
2020-11-19 11:19:49.924 INFO  jdbc.sqltiming Line:373 - select bookfieldc0_.entity_id as entity_i1_4_, bookfieldc0_.bundle as bundle2_4_, bookfieldc0_.field_comment_value 
as field_co3_4_, bookfieldc0_.delta as delta4_4_, bookfieldc0_.field_comment_format as field_co5_4_, 
bookfieldc0_.langcode as langcode6_4_, bookfieldc0_.revision_id as revision7_4_ from node__field_comment 
bookfieldc0_ where bookfieldc0_.entity_id=32 
 {executed in 0 msec}
2020-11-19 11:19:49.924 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|--------------------|------|---------------------|---------|------------|
|entity_id |bundle |field_comment_value |delta |field_comment_format |langcode |revision_id |
|----------|-------|--------------------|------|---------------------|---------|------------|
|----------|-------|--------------------|------|---------------------|---------|------------|

2020-11-19 11:19:49.925 INFO  jdbc.sqltiming Line:373 - select bookfieldc0_.entity_id as entity_i1_4_0_, bookfieldc0_.bundle as bundle2_4_0_, bookfieldc0_.field_comment_value 
as field_co3_4_0_, bookfieldc0_.delta as delta4_4_0_, bookfieldc0_.field_comment_format as 
field_co5_4_0_, bookfieldc0_.langcode as langcode6_4_0_, bookfieldc0_.revision_id as revision7_4_0_ 
from node__field_comment bookfieldc0_ where bookfieldc0_.entity_id=32 
 {executed in 0 msec}
2020-11-19 11:19:49.925 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|--------------------|------|---------------------|---------|------------|
|entity_id |bundle |field_comment_value |delta |field_comment_format |langcode |revision_id |
|----------|-------|--------------------|------|---------------------|---------|------------|
|----------|-------|--------------------|------|---------------------|---------|------------|

2020-11-19 11:19:49.927 INFO  jdbc.sqltiming Line:373 - insert into node__field_comment (bundle, field_comment_value, delta, field_comment_format, 
langcode, revision_id, entity_id) values ('book', '<li class="reJj6Thl_0"><img src="http://thirdwx.qlogo.cn/mmopen/vi_32/ibZVAmmdAibBeVpUjzwId8ibgRzNk7fkuR5pgVicB5mFSjjmt2eNadlykVLKCyGA0GxGffbhqLsHnhDRgyzxcKUhjg/132" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>pyhhou</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2019-10-17 </div> </div> <!----> 
</div> <div> <div class="_3M6kV3zb_0"> 1. 使用过 React，前端的 MVC 框架的出现带动了整个前端的发展，现在前端可以和后端分离开来设计与实现，对比之前，前端页面的聚合需要后端，这些框架的出现，在大的层面上看也算是进行了一次前后端的解耦吧；不好的地方就是前端的技术变得非常的多，而且杂，并且很多前端技术的生命周期都很短，这增加了普通工程师的学习难度的同时，前端在技术层面上也没有一个大的 
“统一” <br> <br>2. 这让我回想起了我们之前讲过的一个话题，就是 “MVC 框架的控制逻辑的配置是写在单一的文件中，还是利用注解的方式写在控制逻辑处？”，放在这里也是可以类比的，把行为从 
HTML 里面分离出去，单独管理，可以使得行为和 HTML 显示分开，达到解耦，同样，以 Angular 这种方式，让行为跟着具体的 HTML 显示模块走，让行为和 HTML 显示对照起来，这也是解耦，只不过前者是代码横向分层解耦，后者是代码纵向分层解耦，不能完全说哪一个好，还是得具体场景，具体分析。 
<br> <br>这里有一个小问题，就是上面提到说 “Reducer 是无状态的，它是一个纯函数”，我们上一篇文章中提到纯函数是安全的，也是幂等的，但是这里 Reducer 是会改变 
store 的，而且对一个 Reducer 一次调用和多次调用会导致 store 里面的状态变得不一样，或者说我这里是不是误解了什么，还请老师指教 <br> <br>PS: 过滤器标题下面那句话有 
typo，Angular 写成了 React </div> <div class="_2r3UB1GX_0"> <span>展开</span><i class="iconfont"></i> 
</div> <div class="_2xNIY4NG_0"> <p class="_33BLbmw4_0">作者回复: 第2点讲得非常好，👍。<br>关于你的问题，Reducer返回的是新状态，而不是改变原有状态（新状态会放到这个store里面），这点请注意，你可以参见 
https://redux.js.org/basics/reducers#handling-actions。<br>typo 我已经知会编辑修改，感谢！</p> </div> <div 
class="_1w8H0ktn_0 _2A421P4G_0"> <div class="_2jsFl-X0_0"> <i class="iconfont"></i> <span></span> 
</div> <div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class="">2</span> </div> <!----> 
</div> </div> </div></li> <li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/18/28/d9/78dfd983.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>sky</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2019-10-21 </div> </div> <!----> 
</div> <div> <div class="_3M6kV3zb_0 _3D2NkqD6_0"> 我是直接从使用vue开始前端之路的。总体上来说感觉还是利大于弊的。 </div> 
<!----> <!----> <div class="_1w8H0ktn_0 _2A421P4G_0"> <div class="_2jsFl-X0_0"> <i class="iconfont"></i> 
<span></span> </div> <div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class=""></span> 
</div> <!----> </div> </div> </div></li> <li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/18/28/d9/78dfd983.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>sky</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2019-10-21 </div> </div> <!----> 
</div> <div> <div class="_3M6kV3zb_0 _3D2NkqD6_0"> 三驾马车没有讲vue，老师对这个框架没有什么想说的吗？ </div> <!----> 
<!----> <div class="_1w8H0ktn_0 _2A421P4G_0"> <div class="_2jsFl-X0_0"> <i class="iconfont"></i> 
<span></span> </div> <div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class=""></span> 
</div> <!----> </div> </div> </div></li> <li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/19/31/bc/4e679d81.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>没带就是没写</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2019-10-16 </div> </div> <!----> 
</div> <div> <div class="_3M6kV3zb_0"> jquery现在已经不流行了，除非是维护老项目。开发比较大的新项目用不到，但是它的理念是很有启发性的，write 
less,do more. </div> <div class="_2r3UB1GX_0"> <span>展开</span><i class="iconfont"></i> </div> 
<!----> <div class="_1w8H0ktn_0 _2A421P4G_0"> <div class="_2jsFl-X0_0"> <i class="iconfont"></i> 
<span></span> </div> <div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class=""></span> 
</div> <!----> </div> </div> </div></li> <li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/13/db/26/54f2c164.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>靠人品去赢</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2019-10-16 </div> </div> <!----> 
</div> <div> <div class="_3M6kV3zb_0"> 我觉得是更好，看到这个我就知道这个被绑定了，找后面的代码处理逻辑也好找。 <br>JQuery确实是解耦了，你定义好属性，后面各种选择器对应起来，但是感觉不好管理。根据ID我不小心又加了两个逻辑和之前的逻辑有冲突，可能达不到你之前预想。类选择器更是坑爹，可能我只是要个样式而已，结果你还顺便帮忙做了点别的。 
</div> <div class="_2r3UB1GX_0"> <span>展开</span><i class="iconfont"></i> </div> <!----> <div 
class="_1w8H0ktn_0 _2A421P4G_0"> <div class="_2jsFl-X0_0"> <i class="iconfont"></i> <span></span> 
</div> <div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class=""></span> </div> <!----> 
</div> </div> </div></li> <li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/14/34/df/64e3d533.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>leslie</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2019-10-16 </div> </div> <!----> 
</div> <div> <div class="_3M6kV3zb_0 _3D2NkqD6_0"> 打卡吧：程序的东西学起来太苦了，现在的框架完全不是早年的那些了、、、慢慢实践慢慢补、、、 
</div> <!----> <!----> <div class="_1w8H0ktn_0 _2A421P4G_0"> <div class="_2jsFl-X0_0"> <i class="iconfont"></i> 
<span></span> </div> <div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class=""></span> 
</div> <!----> </div> </div> </div></li> <li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/11/5a/55/411f95a8.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>我叫徐小晋</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2019-10-16 </div> </div> <!----> 
</div> <div> <div class="_3M6kV3zb_0 _3D2NkqD6_0"> 一直以来没有用框架。都是用jquery。。。老师如果要选择一个框架。那个入门会好一点？ 
</div> <!----> <!----> <div class="_1w8H0ktn_0 _2A421P4G_0"> <div class="_2jsFl-X0_0"> <i class="iconfont"></i> 
<span>1</span> </div> <div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class=""></span> 
</div> <!----> </div> </div> </div></li>', 0, 'full_html', 'zh-hans', 32, 32) 
 {executed in 1 msec}
2020-11-19 11:19:49.933 INFO  jdbc.sqltiming Line:373 - select nodefieldc0_.entity_id as entity_i1_13_0_, nodefieldc0_.bundle as bundle2_13_0_, nodefieldc0_.field_comment_value 
as field_co3_13_0_, nodefieldc0_.delta as delta4_13_0_, nodefieldc0_.field_comment_format as 
field_co5_13_0_, nodefieldc0_.langcode as langcode6_13_0_, nodefieldc0_.revision_id as revision7_13_0_ 
from node_revision__field_comment nodefieldc0_ where nodefieldc0_.entity_id=32 
 {executed in 0 msec}
2020-11-19 11:19:49.934 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|--------------------|------|---------------------|---------|------------|
|entity_id |bundle |field_comment_value |delta |field_comment_format |langcode |revision_id |
|----------|-------|--------------------|------|---------------------|---------|------------|
|----------|-------|--------------------|------|---------------------|---------|------------|

2020-11-19 11:19:49.935 INFO  jdbc.sqltiming Line:373 - insert into node_revision__field_comment (bundle, field_comment_value, delta, field_comment_format, 
langcode, revision_id, entity_id) values ('book', '<li class="reJj6Thl_0"><img src="http://thirdwx.qlogo.cn/mmopen/vi_32/ibZVAmmdAibBeVpUjzwId8ibgRzNk7fkuR5pgVicB5mFSjjmt2eNadlykVLKCyGA0GxGffbhqLsHnhDRgyzxcKUhjg/132" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>pyhhou</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2019-10-17 </div> </div> <!----> 
</div> <div> <div class="_3M6kV3zb_0"> 1. 使用过 React，前端的 MVC 框架的出现带动了整个前端的发展，现在前端可以和后端分离开来设计与实现，对比之前，前端页面的聚合需要后端，这些框架的出现，在大的层面上看也算是进行了一次前后端的解耦吧；不好的地方就是前端的技术变得非常的多，而且杂，并且很多前端技术的生命周期都很短，这增加了普通工程师的学习难度的同时，前端在技术层面上也没有一个大的 
“统一” <br> <br>2. 这让我回想起了我们之前讲过的一个话题，就是 “MVC 框架的控制逻辑的配置是写在单一的文件中，还是利用注解的方式写在控制逻辑处？”，放在这里也是可以类比的，把行为从 
HTML 里面分离出去，单独管理，可以使得行为和 HTML 显示分开，达到解耦，同样，以 Angular 这种方式，让行为跟着具体的 HTML 显示模块走，让行为和 HTML 显示对照起来，这也是解耦，只不过前者是代码横向分层解耦，后者是代码纵向分层解耦，不能完全说哪一个好，还是得具体场景，具体分析。 
<br> <br>这里有一个小问题，就是上面提到说 “Reducer 是无状态的，它是一个纯函数”，我们上一篇文章中提到纯函数是安全的，也是幂等的，但是这里 Reducer 是会改变 
store 的，而且对一个 Reducer 一次调用和多次调用会导致 store 里面的状态变得不一样，或者说我这里是不是误解了什么，还请老师指教 <br> <br>PS: 过滤器标题下面那句话有 
typo，Angular 写成了 React </div> <div class="_2r3UB1GX_0"> <span>展开</span><i class="iconfont"></i> 
</div> <div class="_2xNIY4NG_0"> <p class="_33BLbmw4_0">作者回复: 第2点讲得非常好，👍。<br>关于你的问题，Reducer返回的是新状态，而不是改变原有状态（新状态会放到这个store里面），这点请注意，你可以参见 
https://redux.js.org/basics/reducers#handling-actions。<br>typo 我已经知会编辑修改，感谢！</p> </div> <div 
class="_1w8H0ktn_0 _2A421P4G_0"> <div class="_2jsFl-X0_0"> <i class="iconfont"></i> <span></span> 
</div> <div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class="">2</span> </div> <!----> 
</div> </div> </div></li> <li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/18/28/d9/78dfd983.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>sky</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2019-10-21 </div> </div> <!----> 
</div> <div> <div class="_3M6kV3zb_0 _3D2NkqD6_0"> 我是直接从使用vue开始前端之路的。总体上来说感觉还是利大于弊的。 </div> 
<!----> <!----> <div class="_1w8H0ktn_0 _2A421P4G_0"> <div class="_2jsFl-X0_0"> <i class="iconfont"></i> 
<span></span> </div> <div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class=""></span> 
</div> <!----> </div> </div> </div></li> <li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/18/28/d9/78dfd983.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>sky</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2019-10-21 </div> </div> <!----> 
</div> <div> <div class="_3M6kV3zb_0 _3D2NkqD6_0"> 三驾马车没有讲vue，老师对这个框架没有什么想说的吗？ </div> <!----> 
<!----> <div class="_1w8H0ktn_0 _2A421P4G_0"> <div class="_2jsFl-X0_0"> <i class="iconfont"></i> 
<span></span> </div> <div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class=""></span> 
</div> <!----> </div> </div> </div></li> <li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/19/31/bc/4e679d81.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>没带就是没写</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2019-10-16 </div> </div> <!----> 
</div> <div> <div class="_3M6kV3zb_0"> jquery现在已经不流行了，除非是维护老项目。开发比较大的新项目用不到，但是它的理念是很有启发性的，write 
less,do more. </div> <div class="_2r3UB1GX_0"> <span>展开</span><i class="iconfont"></i> </div> 
<!----> <div class="_1w8H0ktn_0 _2A421P4G_0"> <div class="_2jsFl-X0_0"> <i class="iconfont"></i> 
<span></span> </div> <div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class=""></span> 
</div> <!----> </div> </div> </div></li> <li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/13/db/26/54f2c164.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>靠人品去赢</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2019-10-16 </div> </div> <!----> 
</div> <div> <div class="_3M6kV3zb_0"> 我觉得是更好，看到这个我就知道这个被绑定了，找后面的代码处理逻辑也好找。 <br>JQuery确实是解耦了，你定义好属性，后面各种选择器对应起来，但是感觉不好管理。根据ID我不小心又加了两个逻辑和之前的逻辑有冲突，可能达不到你之前预想。类选择器更是坑爹，可能我只是要个样式而已，结果你还顺便帮忙做了点别的。 
</div> <div class="_2r3UB1GX_0"> <span>展开</span><i class="iconfont"></i> </div> <!----> <div 
class="_1w8H0ktn_0 _2A421P4G_0"> <div class="_2jsFl-X0_0"> <i class="iconfont"></i> <span></span> 
</div> <div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class=""></span> </div> <!----> 
</div> </div> </div></li> <li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/14/34/df/64e3d533.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>leslie</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2019-10-16 </div> </div> <!----> 
</div> <div> <div class="_3M6kV3zb_0 _3D2NkqD6_0"> 打卡吧：程序的东西学起来太苦了，现在的框架完全不是早年的那些了、、、慢慢实践慢慢补、、、 
</div> <!----> <!----> <div class="_1w8H0ktn_0 _2A421P4G_0"> <div class="_2jsFl-X0_0"> <i class="iconfont"></i> 
<span></span> </div> <div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class=""></span> 
</div> <!----> </div> </div> </div></li> <li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/11/5a/55/411f95a8.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>我叫徐小晋</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2019-10-16 </div> </div> <!----> 
</div> <div> <div class="_3M6kV3zb_0 _3D2NkqD6_0"> 一直以来没有用框架。都是用jquery。。。老师如果要选择一个框架。那个入门会好一点？ 
</div> <!----> <!----> <div class="_1w8H0ktn_0 _2A421P4G_0"> <div class="_2jsFl-X0_0"> <i class="iconfont"></i> 
<span>1</span> </div> <div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class=""></span> 
</div> <!----> </div> </div> </div></li>', 0, 'full_html', 'zh-hans', 32, 32) 
 {executed in 0 msec}
2020-11-19 11:19:49.939 INFO  jdbc.sqltiming Line:373 - select bookfieldt0_.entity_id as entity_i1_8_, bookfieldt0_.bundle as bundle2_8_, bookfieldt0_.delta 
as delta3_8_, bookfieldt0_.langcode as langcode4_8_, bookfieldt0_.revision_id as revision5_8_, 
bookfieldt0_.field_thumb_value as field_th6_8_ from node__field_thumb bookfieldt0_ where bookfieldt0_.entity_id=32 
 {executed in 0 msec}
2020-11-19 11:19:49.939 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------|------------------|
|entity_id |bundle |delta |langcode |revision_id |field_thumb_value |
|----------|-------|------|---------|------------|------------------|
|----------|-------|------|---------|------------|------------------|

2020-11-19 11:19:49.940 INFO  jdbc.sqltiming Line:373 - select bookfieldt0_.entity_id as entity_i1_8_0_, bookfieldt0_.bundle as bundle2_8_0_, bookfieldt0_.delta 
as delta3_8_0_, bookfieldt0_.langcode as langcode4_8_0_, bookfieldt0_.revision_id as revision5_8_0_, 
bookfieldt0_.field_thumb_value as field_th6_8_0_ from node__field_thumb bookfieldt0_ where 
bookfieldt0_.entity_id=32 
 {executed in 0 msec}
2020-11-19 11:19:49.940 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------|------------------|
|entity_id |bundle |delta |langcode |revision_id |field_thumb_value |
|----------|-------|------|---------|------------|------------------|
|----------|-------|------|---------|------------|------------------|

2020-11-19 11:19:49.942 INFO  jdbc.sqltiming Line:373 - insert into node__field_thumb (bundle, delta, langcode, revision_id, field_thumb_value, entity_id) 
values ('book', 0, 'zh-hans', 32, 'https://static001.geekbang.org/resource/image/f5/2c/f5808b3f10516b9342e9de07de48fd2c.jpg', 
32) 
 {executed in 1 msec}
2020-11-19 11:19:49.946 INFO  jdbc.sqltiming Line:373 - select nodefieldt0_.entity_id as entity_i1_17_0_, nodefieldt0_.bundle as bundle2_17_0_, nodefieldt0_.delta 
as delta3_17_0_, nodefieldt0_.langcode as langcode4_17_0_, nodefieldt0_.revision_id as revision5_17_0_, 
nodefieldt0_.field_thumb_value as field_th6_17_0_ from node_revision__field_thumb nodefieldt0_ 
where nodefieldt0_.entity_id=32 
 {executed in 0 msec}
2020-11-19 11:19:49.946 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------|------------------|
|entity_id |bundle |delta |langcode |revision_id |field_thumb_value |
|----------|-------|------|---------|------------|------------------|
|----------|-------|------|---------|------------|------------------|

2020-11-19 11:19:49.948 INFO  jdbc.sqltiming Line:373 - insert into node_revision__field_thumb (bundle, delta, langcode, revision_id, field_thumb_value, 
entity_id) values ('book', 0, 'zh-hans', 32, 'https://static001.geekbang.org/resource/image/f5/2c/f5808b3f10516b9342e9de07de48fd2c.jpg', 
32) 
 {executed in 0 msec}
2020-11-19 11:19:49.951 INFO  jdbc.sqltiming Line:373 - select bookfieldf0_.entity_id as entity_i1_5_0_, bookfieldf0_.bundle as bundle2_5_0_, bookfieldf0_.delta 
as delta3_5_0_, bookfieldf0_.field_fenlei_target_id as field_fe4_5_0_, bookfieldf0_.langcode 
as langcode5_5_0_, bookfieldf0_.revision_id as revision6_5_0_ from node__field_fenlei bookfieldf0_ 
where bookfieldf0_.entity_id=32 
 {executed in 1 msec}
2020-11-19 11:19:49.951 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------------|---------|------------|
|entity_id |bundle |delta |field_fenlei_target_id |langcode |revision_id |
|----------|-------|------|-----------------------|---------|------------|
|----------|-------|------|-----------------------|---------|------------|

2020-11-19 11:19:49.952 INFO  jdbc.sqltiming Line:373 - insert into node__field_fenlei (bundle, delta, field_fenlei_target_id, langcode, revision_id, 
entity_id) values ('book', 0, 1, 'zh-hans', 32, 32) 
 {executed in 0 msec}
2020-11-19 11:19:49.957 INFO  jdbc.sqltiming Line:373 - select nodefieldf0_.entity_id as entity_i1_14_0_, nodefieldf0_.bundle as bundle2_14_0_, nodefieldf0_.delta 
as delta3_14_0_, nodefieldf0_.field_fenlei_target_id as field_fe4_14_0_, nodefieldf0_.langcode 
as langcode5_14_0_, nodefieldf0_.revision_id as revision6_14_0_ from node_revision__field_fenlei 
nodefieldf0_ where nodefieldf0_.entity_id=32 
 {executed in 1 msec}
2020-11-19 11:19:49.957 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------------|---------|------------|
|entity_id |bundle |delta |field_fenlei_target_id |langcode |revision_id |
|----------|-------|------|-----------------------|---------|------------|
|----------|-------|------|-----------------------|---------|------------|

2020-11-19 11:19:49.958 INFO  jdbc.sqltiming Line:373 - insert into node_revision__field_fenlei (bundle, delta, field_fenlei_target_id, langcode, revision_id, 
entity_id) values ('book', 0, 1, 'zh-hans', 32, 32) 
 {executed in 0 msec}
2020-11-19 11:20:20.408 INFO  org.apache.http.impl.execchain.RetryExec Line:97  - I/O exception (org.apache.http.NoHttpResponseException) caught when processing request to {}->http://pcs.baidu.com:80: The target server failed to respond
2020-11-19 11:20:20.411 INFO  org.apache.http.impl.execchain.RetryExec Line:113 - Retrying request to {}->http://pcs.baidu.com:80
2020-11-19 11:20:20.855 INFO  jdbc.sqltiming Line:373 - select bookfieldf0_.entity_id as entity_i1_6_, bookfieldf0_.bundle as bundle2_6_, bookfieldf0_.delta 
as delta3_6_, bookfieldf0_.field_fsid_value as field_fs4_6_, bookfieldf0_.langcode as langcode5_6_, 
bookfieldf0_.revision_id as revision6_6_ from node__field_fsid bookfieldf0_ where bookfieldf0_.field_fsid_value='320295675806015' 
 {executed in 1 msec}
2020-11-19 11:20:20.856 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------|---------|------------|
|entity_id |bundle |delta |field_fsid_value |langcode |revision_id |
|----------|-------|------|-----------------|---------|------------|
|----------|-------|------|-----------------|---------|------------|

2020-11-19 11:20:20.857 INFO  jdbc.sqltiming Line:373 - insert into node_revision (langcode, nid, revision_default, revision_timestamp, revision_uid) 
values ('zh-hans', 0, 1, 1605756020, 1) 
 {executed in 0 msec}
2020-11-19 11:20:20.858 INFO  jdbc.sqltiming Line:373 - getGeneratedKeys on query: insert into node_revision (langcode, nid, revision_default, revision_timestamp, 
revision_uid) values ('zh-hans', 0, 1, 1605756020, 1) 
 {executed in 0 msec}
2020-11-19 11:20:20.859 INFO  jdbc.resultsettable Line:610 - 
|--------------|
|generated_key |
|--------------|
|33            |
|--------------|

2020-11-19 11:20:20.870 INFO  jdbc.sqltiming Line:373 - insert into node (langcode, type, uuid, vid) values ('zh-hans', 'book', 'b2ec3831-fd87-4c55-a8d1-79887c60d7ed', 
33) 
 {executed in 0 msec}
2020-11-19 11:20:20.871 INFO  jdbc.sqltiming Line:373 - getGeneratedKeys on query: insert into node (langcode, type, uuid, vid) values ('zh-hans', 
'book', 'b2ec3831-fd87-4c55-a8d1-79887c60d7ed', 33) 
 {executed in 0 msec}
2020-11-19 11:20:20.872 INFO  jdbc.resultsettable Line:610 - 
|--------------|
|generated_key |
|--------------|
|33            |
|--------------|

2020-11-19 11:20:20.881 INFO  jdbc.sqltiming Line:373 - update node_revision set langcode='zh-hans', nid=33, revision_default=1, revision_timestamp=1605756020, 
revision_uid=1 where vid=33 
 {executed in 0 msec}
2020-11-19 11:20:20.885 INFO  jdbc.sqltiming Line:373 - select bookfieldf0_.entity_id as entity_i1_6_0_, bookfieldf0_.bundle as bundle2_6_0_, bookfieldf0_.delta 
as delta3_6_0_, bookfieldf0_.field_fsid_value as field_fs4_6_0_, bookfieldf0_.langcode as langcode5_6_0_, 
bookfieldf0_.revision_id as revision6_6_0_ from node__field_fsid bookfieldf0_ where bookfieldf0_.entity_id=33 
 {executed in 0 msec}
2020-11-19 11:20:20.886 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------|---------|------------|
|entity_id |bundle |delta |field_fsid_value |langcode |revision_id |
|----------|-------|------|-----------------|---------|------------|
|----------|-------|------|-----------------|---------|------------|

2020-11-19 11:20:20.889 INFO  jdbc.sqltiming Line:373 - insert into node__field_fsid (bundle, delta, field_fsid_value, langcode, revision_id, entity_id) 
values ('book', 0, '320295675806015', 'zh-hans', 33, 33) 
 {executed in 0 msec}
2020-11-19 11:20:20.894 INFO  jdbc.sqltiming Line:373 - select nodefieldf0_.entity_id as entity_i1_15_0_, nodefieldf0_.bundle as bundle2_15_0_, nodefieldf0_.delta 
as delta3_15_0_, nodefieldf0_.field_fsid_value as field_fs4_15_0_, nodefieldf0_.langcode as 
langcode5_15_0_, nodefieldf0_.revision_id as revision6_15_0_ from node_revision__field_fsid 
nodefieldf0_ where nodefieldf0_.entity_id=33 
 {executed in 1 msec}
2020-11-19 11:20:20.894 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------|---------|------------|
|entity_id |bundle |delta |field_fsid_value |langcode |revision_id |
|----------|-------|------|-----------------|---------|------------|
|----------|-------|------|-----------------|---------|------------|

2020-11-19 11:20:20.896 INFO  jdbc.sqltiming Line:373 - insert into node_revision__field_fsid (bundle, delta, field_fsid_value, langcode, revision_id, 
entity_id) values ('book', 0, '320295675806015', 'zh-hans', 33, 33) 
 {executed in 0 msec}
2020-11-19 11:20:20.900 INFO  jdbc.sqltiming Line:373 - select bookentity0_.nid as nid1_1_, bookentity0_.bid as bid2_1_, bookentity0_.depth as depth3_1_, 
bookentity0_.has_children as has_chil4_1_, bookentity0_.p1 as p5_1_, bookentity0_.p2 as p6_1_, 
bookentity0_.p3 as p7_1_, bookentity0_.p4 as p8_1_, bookentity0_.p5 as p9_1_, bookentity0_.pid 
as pid10_1_, bookentity0_.weight as weight11_1_ from book bookentity0_ where bookentity0_.nid=33 
 {executed in 0 msec}
2020-11-19 11:20:20.901 INFO  jdbc.resultsettable Line:610 - 
|----|----|------|-------------|---|---|---|---|---|----|-------|
|nid |bid |depth |has_children |p1 |p2 |p3 |p4 |p5 |pid |weight |
|----|----|------|-------------|---|---|---|---|---|----|-------|
|----|----|------|-------------|---|---|---|---|---|----|-------|

2020-11-19 11:20:20.902 INFO  jdbc.sqltiming Line:373 - select bookentity0_.nid as nid1_1_0_, bookentity0_.bid as bid2_1_0_, bookentity0_.depth as 
depth3_1_0_, bookentity0_.has_children as has_chil4_1_0_, bookentity0_.p1 as p5_1_0_, bookentity0_.p2 
as p6_1_0_, bookentity0_.p3 as p7_1_0_, bookentity0_.p4 as p8_1_0_, bookentity0_.p5 as p9_1_0_, 
bookentity0_.pid as pid10_1_0_, bookentity0_.weight as weight11_1_0_ from book bookentity0_ 
where bookentity0_.nid=33 
 {executed in 1 msec}
2020-11-19 11:20:20.902 INFO  jdbc.resultsettable Line:610 - 
|----|----|------|-------------|---|---|---|---|---|----|-------|
|nid |bid |depth |has_children |p1 |p2 |p3 |p4 |p5 |pid |weight |
|----|----|------|-------------|---|---|---|---|---|----|-------|
|----|----|------|-------------|---|---|---|---|---|----|-------|

2020-11-19 11:20:20.904 INFO  jdbc.sqltiming Line:373 - insert into book (bid, depth, has_children, p1, p2, p3, p4, p5, pid, weight, nid) values (1, 
3, 0, 1, 27, 33, 0, 0, 27, 0, 33) 
 {executed in 0 msec}
2020-11-19 11:20:20.908 INFO  jdbc.sqltiming Line:373 - select nodebodyen0_.entity_id as entity_i1_3_, nodebodyen0_.body_value as body_val2_3_, nodebodyen0_.body_summary 
as body_sum3_3_, nodebodyen0_.bundle as bundle4_3_, nodebodyen0_.delta as delta5_3_, nodebodyen0_.body_format 
as body_for6_3_, nodebodyen0_.langcode as langcode7_3_, nodebodyen0_.revision_id as revision8_3_ 
from node__body nodebodyen0_ where nodebodyen0_.entity_id=33 
 {executed in 0 msec}
2020-11-19 11:20:20.908 INFO  jdbc.resultsettable Line:610 - 
|----------|-----------|-------------|-------|------|------------|---------|------------|
|entity_id |body_value |body_summary |bundle |delta |body_format |langcode |revision_id |
|----------|-----------|-------------|-------|------|------------|---------|------------|
|----------|-----------|-------------|-------|------|------------|---------|------------|

2020-11-19 11:20:20.909 INFO  jdbc.sqltiming Line:373 - select nodebodyre0_.entity_id as entity_i1_12_0_, nodebodyre0_.body_value as body_val2_12_0_, 
nodebodyre0_.body_summary as body_sum3_12_0_, nodebodyre0_.bundle as bundle4_12_0_, nodebodyre0_.delta 
as delta5_12_0_, nodebodyre0_.body_format as body_for6_12_0_, nodebodyre0_.langcode as langcode7_12_0_, 
nodebodyre0_.revision_id as revision8_12_0_ from node_revision__body nodebodyre0_ where nodebodyre0_.entity_id=33 
 {executed in 0 msec}
2020-11-19 11:20:20.909 INFO  jdbc.resultsettable Line:610 - 
|----------|-----------|-------------|-------|------|------------|---------|------------|
|entity_id |body_value |body_summary |bundle |delta |body_format |langcode |revision_id |
|----------|-----------|-------------|-------|------|------------|---------|------------|
|----------|-----------|-------------|-------|------|------------|---------|------------|

2020-11-19 11:20:20.912 INFO  jdbc.sqltiming Line:373 - insert into node_revision__body (body_value, body_summary, bundle, delta, body_format, langcode, 
revision_id, entity_id) values ('<p>你好，我是四火。</p> <p>JavaScript 的设计和编程能力可以说是前端工程师的修养之一，而 JavaScript 
面向对象就是其中的一个重要组成部分。</p> <p>我相信对于后端开发来说，面向对象的编程能力是一个程序员必须要熟练掌握的基本技能；而对于前端开发，很多项目，甚至在很多知名互联网公司的项目中，很遗憾，这部分都是缺失的，于是我们看到大量的一个一个散落的方法，以及一堆一堆难以理解的全局变量，这对系统的扩展和维护简直是噩梦。</p> 
<p>“好的软件质量是设计出来的”，这个设计既包括宏观的架构和组件设计，也包括微观的代码层面的设计。在这一讲中，我们将学习 JavaScript 面向对象的基本知识和技巧，提升代码层面的面向对象设计和编码能力。</p> 
<p>首先，我们将通过面向对象的三大特征，结合实例，介绍 JavaScript 面向对象的知识：封装、继承以及多态。</p> <h2>1. 封装</h2> <p>在面向对象编程中，封装（Encapsulation）说的是一种通过接口抽象将具体实现包装并隐藏起来的方法。具体来说，封装的机制包括两大部分：</p> 
<ul> <li><strong>限制对对象内部组件直接访问的机制；</strong></li> <li><strong>将数据和方法绑定起来，对外提供方法，从而改变对象状态的机制。</strong></li> 
</ul> <p>在 Java 中，在类中通过 private 或 public 这样的修饰符，能够实现对对象属性或方法不同级别的访问权限控制。但是，在 JavaScript 中并没有这样的关键字，但是，通过一点小的技巧，就能让 
JavaScript 代码支持封装。</p><!-- [[[read_end]]] --> <p>直到 ES6（<a href="http://es6-features.org">ECMAScript 
6</a>）以前，类（class）这个概念在 JavaScript 中其实不存在，但是 JavaScript 对函数（function）有着比一般静态语言强大得多的支持，我们经常利用它来模拟类的概念。现在，请你打开 
Chrome 的开发者工具，在控制台上贴上如下代码：</p> <pre style="position: relative;"><code> <table class="hljs-ln"> 
<tbody> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> function Book(name) { </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> this.name = name; </div></td> </tr> <tr> 
<td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> } </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> console.log(new Book("Life").name); </div></td> </tr> </tbody> </table></code> 
<div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 </div></pre> <p>你将看到控制台输出了 
“Life”。从代码中可以看到，name 作为了 Book 这个类的构造函数传入，并赋值给了自己的 name 属性（它和入参 name 重名，但却不是同一个东西）。这样，在使用“Life”作为入参来实例化 
Book 对象的时候，就能访问对象的 name 属性并输出了。</p> <p>但是，这样的 name 属性，其实相当于公有属性，因为外部可以访问到，那么，我们能够实现私有属性吗？当然，请看这段代码 
：</p> <pre style="position: relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> function Book(name) { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> this.getName = () =&gt; { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> return name; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> }; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="5"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
this.setName = (newName) =&gt; { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="6"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
name = newName; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="7"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
}; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" 
data-line-number="8"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> } </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="9"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> let book = new Book("Life"); </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="10"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> book.setName("Time"); </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="11"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> console.log(book.getName()); // Time </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="12"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> console.log(book.name); // 无法访问私有属性 name 
的值 </div></td> </tr> </tbody> </table></code> <div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 
</div></pre> <p>上面的代码中，有两处变化，一个是使用了 () =&gt; {} 这样的语法代替了 function 关键字，使得其定义看起来更加简洁，但是表达的含义依然是函数定义，没有区别；第二个是增加了 
getName() 和 setName() 这样的存取方法，并且利用闭包的特性，将 name 封装在 Book 类的对象中，你无法通过任何其它方法访问到私有属性 name 的值。</p> 
<p>这里介绍闭包（Closure），我想你应该听说过这个概念。<strong>闭包简单说，就是引用了自由变量的函数。这里的关键是“自由变量”，其实这个自由变量，扮演的作用是为这个函数调用提供了一个“上下文”</strong>，而上下文的不同，将对入参相同的函数调用造成不同的影响，它包括：</p> 
<ul> <li>函数的行为不同，即函数调用改变其上下文中的其它变量，如例子中的 setName()；</li> <li>函数的返回值不同，如例子中的 getName()。</li> 
</ul> <p><strong>和闭包相对的，是一种称为“纯函数”（Pure Function）的东西，即函数不允许引用任何自由变量。</strong>因此，和上面两条“影响”对应，纯函数的调用必须满足如下特性：</p> 
<ul> <li>函数的调用不允许改变其所属的上下文；</li> <li>相同入参的函数调用一定能得到相同的返回值。</li> </ul> <p>读到这里，你是否想到了 <a href="https://time.geekbang.org/column/article/136795">[第 
04 讲]</a> 中我们将 HTTP 的请求从两个维度进行划分，即是否幂等，是否安全；在 <a href="https://time.geekbang.org/column/article/141679">[第 
08 讲]</a> 中我们对 CQRS 依然从这样两个维度进行划分，并作了分析。今天，我们还做相同的划分。</p> <ul> <li>闭包的调用是不安全的，因为它可能改变对象的内部属性（闭包的上下文）；同时它也不是幂等的，因为一次调用和多次调用可能产生不同的结果。</li> 
<li>纯函数的调用是安全的，也是幂等的。</li> </ul> <p>于是，我们又一次发现，技术是相通，是可以联想和类比的。<strong>本质上，它们围绕的都是一个方法（函数）是否引用和改变外部状态的问题。</strong>闭包本身是一个很简单的机制，但是，它可以带来丰富的语言高级功能特性，比如<a 
href="https://zh.wikipedia.org/wiki/%E9%AB%98%E9%98%B6%E5%87%BD%E6%95%B0">高阶函数</a>。</p> <h2>2. 
继承</h2> <p>在面向对象编程中，继承（Inheritance）指的是一个对象或者类能够自动保持另一个对象或者类的实现的一种机制。我们经常讲的子类具备父类的所有特性，只是继承中的一种，叫做类继承；其实还有另一种，对象继承，这种继承只需要对象，不需要类。</p> 
<p>在 ES6 以前，没有继承（extends）关键字，JavaScript 最常见的继承方式叫做<strong>原型链继承</strong>。原型（prototype）是 JavaScript 
函数的一个内置属性，指向另外的一个对象，而那个对象的所有属性和方法，都会被这个函数的所有实例自动继承。</p> <p>因此，当我们对那个原型指向的对象做出任何改变，这个函数的所有实例也将发生相同的改变。这样原型的设计在常见的静态语言中并不常见。当然，它在实现的效果上和静态语言中的“类属性 
/ 类方法”有一点儿相似。</p> <pre style="position: relative;"><code> <table class="hljs-ln"> <tbody> <tr> 
<td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> function Base(name) { </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> this.name = name; </div></td> </tr> <tr> 
<td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> } </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> function Child(name) { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> this.name = name; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> } </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="7"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
Child.prototype = new Base(); </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="8"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="9"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> var c = new Child("Life"); </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="10"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> console.log(c.name); // "Life" </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="11"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> console.log(c instanceof Base); // true 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="12"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> console.log(c instanceof Child); // true 
</div></td> </tr> </tbody> </table></code> <div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 
</div></pre> <p>请看上面的例子，通过将子类 Child 的原型 prototype 设置为父类的对象，就完成了 Child 继承 Base 的关联，之后我们再判断 Child 
的对象 c，就发现它也是 Base 的对象。请注意这样两个要点：</p> <ul> <li>设置 prototype 的语句一定要放到 Base 和 Child 两个构造器之外；</li> 
<li>并且要放在实例化任何子类之前。</li> </ul> <p>上面这两条原则非常重要，缺一不可。如果违背第一个要点，即把 prototype 的设置放到子类的里面，变成这样：</p> 
<pre style="position: relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> function Child(name) { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> Child.prototype = new Base(); </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> this.name = name; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> } </div></td> </tr> </tbody> </table></code> <div class="richcontent-pre-copy"> 
<span class="iconfont"></span>复制代码 </div></pre> <p>这是完全错误的，每次 Child 在构建的过程中，原型被破坏并重建一次，这可不只是一个资源浪费、状态丢失的问题。由于原型是实例辨识运算 
instanceof 的依据，因此它还会影响 JavaScript 引擎对 instanceof 的判断：</p> <pre style="position: relative;"><code> 
<table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
var c = new Child("Life"); </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="2"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
console.log(c instanceof Base); // false </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> console.log(c instanceof Child); // false </div></td> </tr> </tbody> 
</table></code> <div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 </div></pre> 
<p>你看，c 现在不但不是 Base 的实例，甚至也不是 Child 的了。</p> <p>还有些程序员违反了上面说的第二个要点，即搞错了顺序：</p> <pre style="position: 
relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
var c = new Child("Life"); </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="2"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
Child.prototype = new Base(); </div></td> </tr> </tbody> </table></code> <div class="richcontent-pre-copy"> 
<span class="iconfont"></span>复制代码 </div></pre> <p>后面的判断也出现了错误：</p> <pre style="position: 
relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
console.log(c instanceof Base); // false </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> console.log(c instanceof Child); // false </div></td> </tr> </tbody> 
</table></code> <div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 </div></pre> 
<p>因为 Child 的原型在 c 生成之后发生了破坏并重建，因此无论 Base 还是 Child，都已经和 c 没有关联了。</p> <p>你再仔细想想的话，你还会发现原型链继承有一个解决不了的问题，即父类的构造方法如果包含参数，就无法被完美地继承下来。比如上例中的 
name 构造参数，传入后赋值给对象的操作不得不在子类中重做了一遍。于是，我们引出另一种常见的 JavaScript 实现继承的方式——<strong>构造继承</strong>。</p> 
<pre style="position: relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> function Base1(name) { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> this.name = name; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> } </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="4"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
function Base2(type) { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="5"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
this.type = type; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="6"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
} </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="7"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> function Child(name, type) { </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="8"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> Base1.call(this, name); // 让 this 去调用 
Base1，并传入参数 name </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="9"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
Base2.call(this, type); </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="10"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
} </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="11"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="12"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> var c = new Child("Life", "book"); </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="13"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> console.log(c.name); // "Life" </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="14"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> console.log(c instanceof Base1); // false </div></td> </tr> <tr> 
<td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="15"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> console.log(c instanceof Child); // true 
</div></td> </tr> </tbody> </table></code> <div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 
</div></pre> <p>你看，这种方法就能够保留父类对于构造器参数的处理逻辑，并且，我们居然还不知不觉地实现了<strong>多重继承</strong>！但是，缺点也很明显，使用 
instanceof 方法判断的时候，发现子类对象 c 并非父类实例，并且，当父类的 prototype 还有额外属性和方法的时候，它们也无法通过构造继承被自动搬到子类里来。</p> 
<h2>3. 多态</h2> <p>在面向对象编程中，多态（Polymorphism）指的是同样的接口，有着不同的实现。在 JavaScript 中没有用来表示接口的关键字，但是通过在不同实现类中定义同名的方法，我们可以轻易做到多态的效果，即同名方法在不同的类中有不同的实现。而由于没有类型和参数的强约束，它的灵活性远大于 
Java 等静态语言。</p> <h2>理解对象创建</h2> <p>在对面向对象的三大特征有了一定的理解之后，我们再来看看实际的对象创建。你可能会说，对象创建不是一件很简单的事儿吗，有什么可讲的？</p> 
<p>别急，JavaScript 和一般的静态语言在对象创建上有着明显的不同，JavaScript 奇怪的行为特别多，还是让我们来看看吧。</p> <p>在 Java 等多数静态语言中，是使用 
new 关键字加基于类名的方法调用来创建对象，但是如果不使用 new 关键字，只使用基于类名的方法调用，则什么都不是，编译器直接报错。但是 JavaScript 不同，我们对于类的概念完全是通过强大的函数特性来实现的，先看下面这个容易混淆函数调用和对象创建的例子：</p> 
<pre style="position: relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> function Book(name) { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> this.name = name; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> return this; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> } </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="5"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
console.log(new Book("Life").name); // 输出 Life </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> console.log(Book("Life").name); // 也输出 Life </div></td> </tr> </tbody> 
</table></code> <div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 </div></pre> 
<p>你看，在 Book() 中，我们最终返回了 this，这就让它变得模糊，这个 Book() 到底是类的定义，还是普通函数（方法）定义？</p> <ul> <li>代码中使用 this 
关键字来给对象自己赋值，看起来 Book 应该是类，那么 Book() 其实就是类的构造器，而这个赋值是完成对象创建的一部分；</li> <li>可是它居然又有返回（return 语句），那么从这个角度看，Book 
应该是普通函数定义，函数调用显式返回了一个对象。</li> </ul> <p>于是，我们从上述最下面的两行代码中看到，无论使用 new 来创建对象，还是不使用 new，把它当成普通方法调用，都能够获得对象 
name 属性的值“Life”，因此看起来用不用 new 似乎没有区别嘛？</p> <p>其实不然，没有区别只是一个假象。JavaScript 是一个特别善于创造错觉的编程语言，有许多古怪无比“坑”等着你去踩，而这只是其中一个。我们要来进一步理解它，就必须去理解代码中的 
this，众所周知 this 可以看做是对象对于它自己的引用，那么我们在执行上述两步操作时，this 分别是什么呢？</p> <pre style="position: relative;"><code> 
<table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
function Book(name) { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="2"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
console.log(this); </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="3"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
this.name = name; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="4"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
return this; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" 
data-line-number="5"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> } </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> new Book("Life"); // 打印 Book {} </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="7"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> Book("Life"); // 打印 Window { ... } </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="8"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> window.Book("Life") // 打印 Window { ... 
} </div></td> </tr> </tbody> </table></code> <div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 
</div></pre> <p>在这段代码中，我在 Book() 内部把 this 打印出来了。原来，在使用 new 的时候，this 是创建的对象自己；而在不使用 new 的时候，this 
是浏览器的内置对象 window，并且，这个效果和使用 window 调用 Book() 是一样的。也就是说，<strong>当我们定义了一个“没有归属”的全局函数的时候，这个函数的默认宿主就是 
window</strong>。</p> <p>实际上，上述例子在使用 new 这个关键字的时候，JavaScript 引擎就帮我们做了这样几件事情。</p> <p>第一件，创建一个 
Book 的对象，我们把它叫做 x 吧。<br> 第二件，绑定原型：x.<strong>proto</strong> = Book.prototype。<br> 第三件，指定对象自己：this 
= x，并调用构造方法，相当于执行了 x.Book()。<br> 第四件，对于构造器中的 return 语句，根据 typeof x === ‘object’ 的结果来决定它实际的返回：</p> 
<ul> <li>如果 return 语句返回基本数据类型（如 string、boolean 等），这种情况 typeof x 就不是“object”，那么 new 的时候构造器的返回会被强制指定为 
x；</li> <li>如果 return 语句返回其它类型，即对象类型，这种情况 typeof x 就是“object”，那么 new 的时候会遵循构造器的实际 return 语句来返回。</li> 
</ul> <p>前面三件其实很好理解，我们的试验代码也验证了；但是第四件，简直令人崩溃对不对？这是什么鬼设计，<strong>难道创建对象的时候，还要根据这个 return 值的类型来决定 
new 的行为？</strong></p> <p>很遗憾，说对了……我们来执行下面的代码：</p> <pre style="position: relative;"><code> <table 
class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" 
data-line-number="1"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> function 
Book1(name) { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="2"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
this.name = name; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="3"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
return 1; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" 
data-line-number="4"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> } </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> console.log(new Book1("Life")); // 打印 
Book1 {name: "Life"} </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="6"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="7"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> function Book2(name) { </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="8"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> this.name = name; </div></td> </tr> <tr> 
<td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="9"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> return []; </div></td> </tr> <tr> <td 
class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="10"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> } </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="11"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> console.log(new Book2("Life")); // 打印 [] </div></td> </tr> </tbody> 
</table></code> <div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 </div></pre> 
<p>你看，Book1 的构造器返回一个基本数据类型的数值 1，new 返回的就是 Book1 的实例对象本身；而 Book2 的构造器返回一个非基本数值类型 []（数组），new 
返回的就是这个数组了。</p> <p>正是因为这样那样的问题，ES5 开始提供了严格模式（Strict Mode），可以让代码对一些可能造成不良后果的不严谨、有歧义的用法报错。</p> 
<p>在实际项目中，我们应当开启严格模式，或是使用 <a href="https://www.typescriptlang.org/">TypeScript</a> 这样的 JavaScript 
超集等等替代方案。写 JavaScript 代码的时候，心中要非常明确自己使用 function 的目的，是创建一个类，是创建某个对象的方法，还是创建一个普通的函数，并且在命名的时候，根据项目的约定给予清晰明确的名字，看到名字就立即可以知道它是什么，而不需要联系上下文去推导，甚至猜测。</p> 
<p>正确的代码是写给机器看的，但是优秀的代码是写给别的程序员看的。</p> <h2>总结思考</h2> <p>今天我们学习了 JavaScript 面向对象的实现方式和相关的重要特性，希望你能够掌握介绍到的知识点，通过思考和吸收，最终可以在项目中写出易于维护的高质量代码。现在，我想提两个问题，请你挑战一下：</p> 
<ul> <li>在你经历的项目中，是否使用过面向对象来进行 JavaScript 编码，项目的代码质量是怎样的？</li> <li>和静态语言不同的是，JavaScript 有好多种不同的方式来实现继承效果，除了文中介绍的原型链继承和构造继承以外，你是否还知道其它的 
JavaScript 继承实现方式？</li> </ul> <p>好，今天的内容就到这里。欢迎你在留言区和我讨论，也欢迎你把文章分享出去，和朋友一起阅读。</p> <h2>选修课堂：当函数成为一等公民</h2> 
<p>众所周知，有一种经典的学习一门新语言的方法是类比法，比如从 C 迁入 JavaScript 的程序员，就会不由自主地比较这两门语言的语法映射，从而快速掌握新语言的写法。</p> 
<p>但是，<strong>仅仅通过语法映射的学习而训练出来的程序员，只是能写出符合 JavaScript 语法的 C 语言而已，本质上写的代码依然是 C</strong>。因此，在类比以外，我们还要思考和使用 
JavaScript 不一样的核心特性，比如接下去要介绍的函数“一等公民”地位。</p> <p>首先，我们需要理解，何为“函数成为一等公民”。这指的是，<strong>函数可以不依附于任何类或对象等实体而独立存在，它可以单独作为参数、变量或返回值在程序中传递。</strong></p> 
<p>回想 Java 语言，如果 Book 这个类，有一个方法 getName()，这个方法必须依附于 Book 而存在，一般情况下必须使用 Book 或它的对象才能调用。这就是说，Java 
中的函数或方法，无法成为一等公民。可 JavaScript 完全不同了，你可能还记得上文中出现了这样的调用：</p> <pre style="position: relative;"><code> 
<table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
Base1.call(this, name); </div></td> </tr> </tbody> </table></code> <div class="richcontent-pre-copy"> 
<span class="iconfont"></span>复制代码 </div></pre> <p>Base1 实际是一个函数，而函数的宿主对象 this 被当作参数传进去了，后面的 
name 则是调用参数，这种以函数为核心的方法调用，在许多传统的静态语言中是很难见到的。我们来看一个更完整的例子：</p> <pre style="position: relative;"><code> 
<table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
function getName() { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="2"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
return this.name; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="3"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
} </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> function Book(name) { </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> this.name = name; </div></td> </tr> <tr> 
<td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> } </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="7"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="8"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
let book = new Book("Life"); </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="9"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
console.log(getName.call(book, getName)); // "Life" </div></td> </tr> </tbody> </table></code> 
<div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 </div></pre> <p>你看，同样使用 
function 关键字，getName 是函数（方法），Book 是书这个类，实例化得到 book 以后，通过 call 关键字调用，把 book 作为 getName() 的宿主，即其中的 
this 传入，得到了我们期望的值“Life”。</p> <p>上面就是对于函数成为一等公民的一个简单诠释：以往我们只能先指定宿主对象，再来调用函数；现在可以反过来，先指定函数，再来选择宿主对象，完成调用。请注意，函数的调用必须要有宿主对象，如果你使用 
null 或者 undefined 这样不存在的对象，window 会取而代之，被指定为默认的宿主对象。</p> <h2>扩展阅读</h2> <ul> <li>对于系统地学习 ES 
6，推荐阅读阮一峰的翻译作品 <a href="http://es6.ruanyifeng.com/">ECMAScript 6 入门</a>。</li> <li>文中介绍了严格模式（Strict 
Mode），感兴趣的话可以看看 <a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Strict_mode">MDN 
的介绍</a>。</li> <li>文章多次提到了静态语言和动态语言，我曾经写过一篇文章<a href="https://www.raychase.net/2310">编程范型：工具的选择</a>，对它们做了介绍，供你参考。</li> 
<li>对于文中提到的 instanceof 运算符，如果你想了解它是怎样实现的，它和对象原型有何关系，请参阅 <a href="https://www.ibm.com/developerworks/cn/web/1306_jiangjj_jsinstanceof/index.html">JavaScript 
instanceof 运算符深入剖析</a>。</li> </ul> <p><img src="https://static001.geekbang.org/resource/image/11/8b/1181246bbd51ce348d5729696d1dc28b.jpg" 
alt="unpreview"></p>', '', 'book', 0, 'full_html', 'zh-hans', 33, 33) 
 {executed in 1 msec}
2020-11-19 11:20:20.916 INFO  jdbc.sqltiming Line:373 - select nodebodyen0_.entity_id as entity_i1_3_0_, nodebodyen0_.body_value as body_val2_3_0_, 
nodebodyen0_.body_summary as body_sum3_3_0_, nodebodyen0_.bundle as bundle4_3_0_, nodebodyen0_.delta 
as delta5_3_0_, nodebodyen0_.body_format as body_for6_3_0_, nodebodyen0_.langcode as langcode7_3_0_, 
nodebodyen0_.revision_id as revision8_3_0_ from node__body nodebodyen0_ where nodebodyen0_.entity_id=33 
 {executed in 0 msec}
2020-11-19 11:20:20.917 INFO  jdbc.resultsettable Line:610 - 
|----------|-----------|-------------|-------|------|------------|---------|------------|
|entity_id |body_value |body_summary |bundle |delta |body_format |langcode |revision_id |
|----------|-----------|-------------|-------|------|------------|---------|------------|
|----------|-----------|-------------|-------|------|------------|---------|------------|

2020-11-19 11:20:20.919 INFO  jdbc.sqltiming Line:373 - insert into node__body (body_value, body_summary, bundle, delta, body_format, langcode, revision_id, 
entity_id) values ('<p>你好，我是四火。</p> <p>JavaScript 的设计和编程能力可以说是前端工程师的修养之一，而 JavaScript 面向对象就是其中的一个重要组成部分。</p> 
<p>我相信对于后端开发来说，面向对象的编程能力是一个程序员必须要熟练掌握的基本技能；而对于前端开发，很多项目，甚至在很多知名互联网公司的项目中，很遗憾，这部分都是缺失的，于是我们看到大量的一个一个散落的方法，以及一堆一堆难以理解的全局变量，这对系统的扩展和维护简直是噩梦。</p> 
<p>“好的软件质量是设计出来的”，这个设计既包括宏观的架构和组件设计，也包括微观的代码层面的设计。在这一讲中，我们将学习 JavaScript 面向对象的基本知识和技巧，提升代码层面的面向对象设计和编码能力。</p> 
<p>首先，我们将通过面向对象的三大特征，结合实例，介绍 JavaScript 面向对象的知识：封装、继承以及多态。</p> <h2>1. 封装</h2> <p>在面向对象编程中，封装（Encapsulation）说的是一种通过接口抽象将具体实现包装并隐藏起来的方法。具体来说，封装的机制包括两大部分：</p> 
<ul> <li><strong>限制对对象内部组件直接访问的机制；</strong></li> <li><strong>将数据和方法绑定起来，对外提供方法，从而改变对象状态的机制。</strong></li> 
</ul> <p>在 Java 中，在类中通过 private 或 public 这样的修饰符，能够实现对对象属性或方法不同级别的访问权限控制。但是，在 JavaScript 中并没有这样的关键字，但是，通过一点小的技巧，就能让 
JavaScript 代码支持封装。</p><!-- [[[read_end]]] --> <p>直到 ES6（<a href="http://es6-features.org">ECMAScript 
6</a>）以前，类（class）这个概念在 JavaScript 中其实不存在，但是 JavaScript 对函数（function）有着比一般静态语言强大得多的支持，我们经常利用它来模拟类的概念。现在，请你打开 
Chrome 的开发者工具，在控制台上贴上如下代码：</p> <pre style="position: relative;"><code> <table class="hljs-ln"> 
<tbody> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> function Book(name) { </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> this.name = name; </div></td> </tr> <tr> 
<td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> } </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> console.log(new Book("Life").name); </div></td> </tr> </tbody> </table></code> 
<div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 </div></pre> <p>你将看到控制台输出了 
“Life”。从代码中可以看到，name 作为了 Book 这个类的构造函数传入，并赋值给了自己的 name 属性（它和入参 name 重名，但却不是同一个东西）。这样，在使用“Life”作为入参来实例化 
Book 对象的时候，就能访问对象的 name 属性并输出了。</p> <p>但是，这样的 name 属性，其实相当于公有属性，因为外部可以访问到，那么，我们能够实现私有属性吗？当然，请看这段代码 
：</p> <pre style="position: relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> function Book(name) { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> this.getName = () =&gt; { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> return name; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> }; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="5"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
this.setName = (newName) =&gt; { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="6"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
name = newName; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="7"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
}; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" 
data-line-number="8"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> } </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="9"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> let book = new Book("Life"); </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="10"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> book.setName("Time"); </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="11"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> console.log(book.getName()); // Time </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="12"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> console.log(book.name); // 无法访问私有属性 name 
的值 </div></td> </tr> </tbody> </table></code> <div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 
</div></pre> <p>上面的代码中，有两处变化，一个是使用了 () =&gt; {} 这样的语法代替了 function 关键字，使得其定义看起来更加简洁，但是表达的含义依然是函数定义，没有区别；第二个是增加了 
getName() 和 setName() 这样的存取方法，并且利用闭包的特性，将 name 封装在 Book 类的对象中，你无法通过任何其它方法访问到私有属性 name 的值。</p> 
<p>这里介绍闭包（Closure），我想你应该听说过这个概念。<strong>闭包简单说，就是引用了自由变量的函数。这里的关键是“自由变量”，其实这个自由变量，扮演的作用是为这个函数调用提供了一个“上下文”</strong>，而上下文的不同，将对入参相同的函数调用造成不同的影响，它包括：</p> 
<ul> <li>函数的行为不同，即函数调用改变其上下文中的其它变量，如例子中的 setName()；</li> <li>函数的返回值不同，如例子中的 getName()。</li> 
</ul> <p><strong>和闭包相对的，是一种称为“纯函数”（Pure Function）的东西，即函数不允许引用任何自由变量。</strong>因此，和上面两条“影响”对应，纯函数的调用必须满足如下特性：</p> 
<ul> <li>函数的调用不允许改变其所属的上下文；</li> <li>相同入参的函数调用一定能得到相同的返回值。</li> </ul> <p>读到这里，你是否想到了 <a href="https://time.geekbang.org/column/article/136795">[第 
04 讲]</a> 中我们将 HTTP 的请求从两个维度进行划分，即是否幂等，是否安全；在 <a href="https://time.geekbang.org/column/article/141679">[第 
08 讲]</a> 中我们对 CQRS 依然从这样两个维度进行划分，并作了分析。今天，我们还做相同的划分。</p> <ul> <li>闭包的调用是不安全的，因为它可能改变对象的内部属性（闭包的上下文）；同时它也不是幂等的，因为一次调用和多次调用可能产生不同的结果。</li> 
<li>纯函数的调用是安全的，也是幂等的。</li> </ul> <p>于是，我们又一次发现，技术是相通，是可以联想和类比的。<strong>本质上，它们围绕的都是一个方法（函数）是否引用和改变外部状态的问题。</strong>闭包本身是一个很简单的机制，但是，它可以带来丰富的语言高级功能特性，比如<a 
href="https://zh.wikipedia.org/wiki/%E9%AB%98%E9%98%B6%E5%87%BD%E6%95%B0">高阶函数</a>。</p> <h2>2. 
继承</h2> <p>在面向对象编程中，继承（Inheritance）指的是一个对象或者类能够自动保持另一个对象或者类的实现的一种机制。我们经常讲的子类具备父类的所有特性，只是继承中的一种，叫做类继承；其实还有另一种，对象继承，这种继承只需要对象，不需要类。</p> 
<p>在 ES6 以前，没有继承（extends）关键字，JavaScript 最常见的继承方式叫做<strong>原型链继承</strong>。原型（prototype）是 JavaScript 
函数的一个内置属性，指向另外的一个对象，而那个对象的所有属性和方法，都会被这个函数的所有实例自动继承。</p> <p>因此，当我们对那个原型指向的对象做出任何改变，这个函数的所有实例也将发生相同的改变。这样原型的设计在常见的静态语言中并不常见。当然，它在实现的效果上和静态语言中的“类属性 
/ 类方法”有一点儿相似。</p> <pre style="position: relative;"><code> <table class="hljs-ln"> <tbody> <tr> 
<td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> function Base(name) { </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> this.name = name; </div></td> </tr> <tr> 
<td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> } </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> function Child(name) { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> this.name = name; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> } </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="7"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
Child.prototype = new Base(); </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="8"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="9"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> var c = new Child("Life"); </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="10"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> console.log(c.name); // "Life" </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="11"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> console.log(c instanceof Base); // true 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="12"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> console.log(c instanceof Child); // true 
</div></td> </tr> </tbody> </table></code> <div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 
</div></pre> <p>请看上面的例子，通过将子类 Child 的原型 prototype 设置为父类的对象，就完成了 Child 继承 Base 的关联，之后我们再判断 Child 
的对象 c，就发现它也是 Base 的对象。请注意这样两个要点：</p> <ul> <li>设置 prototype 的语句一定要放到 Base 和 Child 两个构造器之外；</li> 
<li>并且要放在实例化任何子类之前。</li> </ul> <p>上面这两条原则非常重要，缺一不可。如果违背第一个要点，即把 prototype 的设置放到子类的里面，变成这样：</p> 
<pre style="position: relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> function Child(name) { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> Child.prototype = new Base(); </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> this.name = name; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> } </div></td> </tr> </tbody> </table></code> <div class="richcontent-pre-copy"> 
<span class="iconfont"></span>复制代码 </div></pre> <p>这是完全错误的，每次 Child 在构建的过程中，原型被破坏并重建一次，这可不只是一个资源浪费、状态丢失的问题。由于原型是实例辨识运算 
instanceof 的依据，因此它还会影响 JavaScript 引擎对 instanceof 的判断：</p> <pre style="position: relative;"><code> 
<table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
var c = new Child("Life"); </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="2"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
console.log(c instanceof Base); // false </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> console.log(c instanceof Child); // false </div></td> </tr> </tbody> 
</table></code> <div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 </div></pre> 
<p>你看，c 现在不但不是 Base 的实例，甚至也不是 Child 的了。</p> <p>还有些程序员违反了上面说的第二个要点，即搞错了顺序：</p> <pre style="position: 
relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
var c = new Child("Life"); </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="2"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
Child.prototype = new Base(); </div></td> </tr> </tbody> </table></code> <div class="richcontent-pre-copy"> 
<span class="iconfont"></span>复制代码 </div></pre> <p>后面的判断也出现了错误：</p> <pre style="position: 
relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
console.log(c instanceof Base); // false </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> console.log(c instanceof Child); // false </div></td> </tr> </tbody> 
</table></code> <div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 </div></pre> 
<p>因为 Child 的原型在 c 生成之后发生了破坏并重建，因此无论 Base 还是 Child，都已经和 c 没有关联了。</p> <p>你再仔细想想的话，你还会发现原型链继承有一个解决不了的问题，即父类的构造方法如果包含参数，就无法被完美地继承下来。比如上例中的 
name 构造参数，传入后赋值给对象的操作不得不在子类中重做了一遍。于是，我们引出另一种常见的 JavaScript 实现继承的方式——<strong>构造继承</strong>。</p> 
<pre style="position: relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> function Base1(name) { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> this.name = name; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> } </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="4"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
function Base2(type) { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="5"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
this.type = type; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="6"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
} </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="7"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> function Child(name, type) { </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="8"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> Base1.call(this, name); // 让 this 去调用 
Base1，并传入参数 name </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="9"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
Base2.call(this, type); </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="10"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
} </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="11"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="12"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> var c = new Child("Life", "book"); </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="13"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> console.log(c.name); // "Life" </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="14"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> console.log(c instanceof Base1); // false </div></td> </tr> <tr> 
<td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="15"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> console.log(c instanceof Child); // true 
</div></td> </tr> </tbody> </table></code> <div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 
</div></pre> <p>你看，这种方法就能够保留父类对于构造器参数的处理逻辑，并且，我们居然还不知不觉地实现了<strong>多重继承</strong>！但是，缺点也很明显，使用 
instanceof 方法判断的时候，发现子类对象 c 并非父类实例，并且，当父类的 prototype 还有额外属性和方法的时候，它们也无法通过构造继承被自动搬到子类里来。</p> 
<h2>3. 多态</h2> <p>在面向对象编程中，多态（Polymorphism）指的是同样的接口，有着不同的实现。在 JavaScript 中没有用来表示接口的关键字，但是通过在不同实现类中定义同名的方法，我们可以轻易做到多态的效果，即同名方法在不同的类中有不同的实现。而由于没有类型和参数的强约束，它的灵活性远大于 
Java 等静态语言。</p> <h2>理解对象创建</h2> <p>在对面向对象的三大特征有了一定的理解之后，我们再来看看实际的对象创建。你可能会说，对象创建不是一件很简单的事儿吗，有什么可讲的？</p> 
<p>别急，JavaScript 和一般的静态语言在对象创建上有着明显的不同，JavaScript 奇怪的行为特别多，还是让我们来看看吧。</p> <p>在 Java 等多数静态语言中，是使用 
new 关键字加基于类名的方法调用来创建对象，但是如果不使用 new 关键字，只使用基于类名的方法调用，则什么都不是，编译器直接报错。但是 JavaScript 不同，我们对于类的概念完全是通过强大的函数特性来实现的，先看下面这个容易混淆函数调用和对象创建的例子：</p> 
<pre style="position: relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> function Book(name) { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> this.name = name; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> return this; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> } </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="5"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
console.log(new Book("Life").name); // 输出 Life </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> console.log(Book("Life").name); // 也输出 Life </div></td> </tr> </tbody> 
</table></code> <div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 </div></pre> 
<p>你看，在 Book() 中，我们最终返回了 this，这就让它变得模糊，这个 Book() 到底是类的定义，还是普通函数（方法）定义？</p> <ul> <li>代码中使用 this 
关键字来给对象自己赋值，看起来 Book 应该是类，那么 Book() 其实就是类的构造器，而这个赋值是完成对象创建的一部分；</li> <li>可是它居然又有返回（return 语句），那么从这个角度看，Book 
应该是普通函数定义，函数调用显式返回了一个对象。</li> </ul> <p>于是，我们从上述最下面的两行代码中看到，无论使用 new 来创建对象，还是不使用 new，把它当成普通方法调用，都能够获得对象 
name 属性的值“Life”，因此看起来用不用 new 似乎没有区别嘛？</p> <p>其实不然，没有区别只是一个假象。JavaScript 是一个特别善于创造错觉的编程语言，有许多古怪无比“坑”等着你去踩，而这只是其中一个。我们要来进一步理解它，就必须去理解代码中的 
this，众所周知 this 可以看做是对象对于它自己的引用，那么我们在执行上述两步操作时，this 分别是什么呢？</p> <pre style="position: relative;"><code> 
<table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
function Book(name) { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="2"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
console.log(this); </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="3"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
this.name = name; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="4"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
return this; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" 
data-line-number="5"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> } </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> new Book("Life"); // 打印 Book {} </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="7"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> Book("Life"); // 打印 Window { ... } </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="8"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> window.Book("Life") // 打印 Window { ... 
} </div></td> </tr> </tbody> </table></code> <div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 
</div></pre> <p>在这段代码中，我在 Book() 内部把 this 打印出来了。原来，在使用 new 的时候，this 是创建的对象自己；而在不使用 new 的时候，this 
是浏览器的内置对象 window，并且，这个效果和使用 window 调用 Book() 是一样的。也就是说，<strong>当我们定义了一个“没有归属”的全局函数的时候，这个函数的默认宿主就是 
window</strong>。</p> <p>实际上，上述例子在使用 new 这个关键字的时候，JavaScript 引擎就帮我们做了这样几件事情。</p> <p>第一件，创建一个 
Book 的对象，我们把它叫做 x 吧。<br> 第二件，绑定原型：x.<strong>proto</strong> = Book.prototype。<br> 第三件，指定对象自己：this 
= x，并调用构造方法，相当于执行了 x.Book()。<br> 第四件，对于构造器中的 return 语句，根据 typeof x === ‘object’ 的结果来决定它实际的返回：</p> 
<ul> <li>如果 return 语句返回基本数据类型（如 string、boolean 等），这种情况 typeof x 就不是“object”，那么 new 的时候构造器的返回会被强制指定为 
x；</li> <li>如果 return 语句返回其它类型，即对象类型，这种情况 typeof x 就是“object”，那么 new 的时候会遵循构造器的实际 return 语句来返回。</li> 
</ul> <p>前面三件其实很好理解，我们的试验代码也验证了；但是第四件，简直令人崩溃对不对？这是什么鬼设计，<strong>难道创建对象的时候，还要根据这个 return 值的类型来决定 
new 的行为？</strong></p> <p>很遗憾，说对了……我们来执行下面的代码：</p> <pre style="position: relative;"><code> <table 
class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" 
data-line-number="1"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> function 
Book1(name) { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="2"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
this.name = name; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="3"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
return 1; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" 
data-line-number="4"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> } </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> console.log(new Book1("Life")); // 打印 
Book1 {name: "Life"} </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="6"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="7"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> function Book2(name) { </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="8"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> this.name = name; </div></td> </tr> <tr> 
<td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="9"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> return []; </div></td> </tr> <tr> <td 
class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="10"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> } </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="11"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> console.log(new Book2("Life")); // 打印 [] </div></td> </tr> </tbody> 
</table></code> <div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 </div></pre> 
<p>你看，Book1 的构造器返回一个基本数据类型的数值 1，new 返回的就是 Book1 的实例对象本身；而 Book2 的构造器返回一个非基本数值类型 []（数组），new 
返回的就是这个数组了。</p> <p>正是因为这样那样的问题，ES5 开始提供了严格模式（Strict Mode），可以让代码对一些可能造成不良后果的不严谨、有歧义的用法报错。</p> 
<p>在实际项目中，我们应当开启严格模式，或是使用 <a href="https://www.typescriptlang.org/">TypeScript</a> 这样的 JavaScript 
超集等等替代方案。写 JavaScript 代码的时候，心中要非常明确自己使用 function 的目的，是创建一个类，是创建某个对象的方法，还是创建一个普通的函数，并且在命名的时候，根据项目的约定给予清晰明确的名字，看到名字就立即可以知道它是什么，而不需要联系上下文去推导，甚至猜测。</p> 
<p>正确的代码是写给机器看的，但是优秀的代码是写给别的程序员看的。</p> <h2>总结思考</h2> <p>今天我们学习了 JavaScript 面向对象的实现方式和相关的重要特性，希望你能够掌握介绍到的知识点，通过思考和吸收，最终可以在项目中写出易于维护的高质量代码。现在，我想提两个问题，请你挑战一下：</p> 
<ul> <li>在你经历的项目中，是否使用过面向对象来进行 JavaScript 编码，项目的代码质量是怎样的？</li> <li>和静态语言不同的是，JavaScript 有好多种不同的方式来实现继承效果，除了文中介绍的原型链继承和构造继承以外，你是否还知道其它的 
JavaScript 继承实现方式？</li> </ul> <p>好，今天的内容就到这里。欢迎你在留言区和我讨论，也欢迎你把文章分享出去，和朋友一起阅读。</p> <h2>选修课堂：当函数成为一等公民</h2> 
<p>众所周知，有一种经典的学习一门新语言的方法是类比法，比如从 C 迁入 JavaScript 的程序员，就会不由自主地比较这两门语言的语法映射，从而快速掌握新语言的写法。</p> 
<p>但是，<strong>仅仅通过语法映射的学习而训练出来的程序员，只是能写出符合 JavaScript 语法的 C 语言而已，本质上写的代码依然是 C</strong>。因此，在类比以外，我们还要思考和使用 
JavaScript 不一样的核心特性，比如接下去要介绍的函数“一等公民”地位。</p> <p>首先，我们需要理解，何为“函数成为一等公民”。这指的是，<strong>函数可以不依附于任何类或对象等实体而独立存在，它可以单独作为参数、变量或返回值在程序中传递。</strong></p> 
<p>回想 Java 语言，如果 Book 这个类，有一个方法 getName()，这个方法必须依附于 Book 而存在，一般情况下必须使用 Book 或它的对象才能调用。这就是说，Java 
中的函数或方法，无法成为一等公民。可 JavaScript 完全不同了，你可能还记得上文中出现了这样的调用：</p> <pre style="position: relative;"><code> 
<table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
Base1.call(this, name); </div></td> </tr> </tbody> </table></code> <div class="richcontent-pre-copy"> 
<span class="iconfont"></span>复制代码 </div></pre> <p>Base1 实际是一个函数，而函数的宿主对象 this 被当作参数传进去了，后面的 
name 则是调用参数，这种以函数为核心的方法调用，在许多传统的静态语言中是很难见到的。我们来看一个更完整的例子：</p> <pre style="position: relative;"><code> 
<table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
function getName() { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="2"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
return this.name; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="3"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
} </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> function Book(name) { </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> this.name = name; </div></td> </tr> <tr> 
<td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> } </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="7"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="8"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
let book = new Book("Life"); </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="9"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
console.log(getName.call(book, getName)); // "Life" </div></td> </tr> </tbody> </table></code> 
<div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 </div></pre> <p>你看，同样使用 
function 关键字，getName 是函数（方法），Book 是书这个类，实例化得到 book 以后，通过 call 关键字调用，把 book 作为 getName() 的宿主，即其中的 
this 传入，得到了我们期望的值“Life”。</p> <p>上面就是对于函数成为一等公民的一个简单诠释：以往我们只能先指定宿主对象，再来调用函数；现在可以反过来，先指定函数，再来选择宿主对象，完成调用。请注意，函数的调用必须要有宿主对象，如果你使用 
null 或者 undefined 这样不存在的对象，window 会取而代之，被指定为默认的宿主对象。</p> <h2>扩展阅读</h2> <ul> <li>对于系统地学习 ES 
6，推荐阅读阮一峰的翻译作品 <a href="http://es6.ruanyifeng.com/">ECMAScript 6 入门</a>。</li> <li>文中介绍了严格模式（Strict 
Mode），感兴趣的话可以看看 <a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Strict_mode">MDN 
的介绍</a>。</li> <li>文章多次提到了静态语言和动态语言，我曾经写过一篇文章<a href="https://www.raychase.net/2310">编程范型：工具的选择</a>，对它们做了介绍，供你参考。</li> 
<li>对于文中提到的 instanceof 运算符，如果你想了解它是怎样实现的，它和对象原型有何关系，请参阅 <a href="https://www.ibm.com/developerworks/cn/web/1306_jiangjj_jsinstanceof/index.html">JavaScript 
instanceof 运算符深入剖析</a>。</li> </ul> <p><img src="https://static001.geekbang.org/resource/image/11/8b/1181246bbd51ce348d5729696d1dc28b.jpg" 
alt="unpreview"></p>', '', 'book', 0, 'full_html', 'zh-hans', 33, 33) 
 {executed in 1 msec}
2020-11-19 11:20:20.924 INFO  jdbc.sqltiming Line:373 - select nodefiledd0_.nid as nid1_9_, nodefiledd0_.changed as changed2_9_, nodefiledd0_.created 
as created3_9_, nodefiledd0_.default_langcode as default_4_9_, nodefiledd0_.langcode as langcode5_9_, 
nodefiledd0_.promote as promote6_9_, nodefiledd0_.revision_translation_affected as revision7_9_, 
nodefiledd0_.status as status8_9_, nodefiledd0_.sticky as sticky9_9_, nodefiledd0_.title as 
title10_9_, nodefiledd0_.type as type11_9_, nodefiledd0_.uid as uid12_9_, nodefiledd0_.vid 
as vid13_9_ from node_field_data nodefiledd0_ where nodefiledd0_.nid=33 
 {executed in 0 msec}
2020-11-19 11:20:20.925 INFO  jdbc.resultsettable Line:610 - 
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|-----|----|----|
|nid |changed |created |default_langcode |langcode |promote |revision_translation_affected |status |sticky |title |type |uid |vid |
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|-----|----|----|
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|-----|----|----|

2020-11-19 11:20:20.925 INFO  jdbc.sqltiming Line:373 - select nodefieldr0_.nid as nid1_10_0_, nodefieldr0_.changed as changed2_10_0_, nodefieldr0_.created 
as created3_10_0_, nodefieldr0_.default_langcode as default_4_10_0_, nodefieldr0_.langcode 
as langcode5_10_0_, nodefieldr0_.promote as promote6_10_0_, nodefieldr0_.revision_translation_affected 
as revision7_10_0_, nodefieldr0_.status as status8_10_0_, nodefieldr0_.sticky as sticky9_10_0_, 
nodefieldr0_.title as title10_10_0_, nodefieldr0_.uid as uid11_10_0_, nodefieldr0_.vid as vid12_10_0_ 
from node_field_revision nodefieldr0_ where nodefieldr0_.nid=33 
 {executed in 0 msec}
2020-11-19 11:20:20.926 INFO  jdbc.resultsettable Line:610 - 
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|----|----|
|nid |changed |created |default_langcode |langcode |promote |revision_translation_affected |status |sticky |title |uid |vid |
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|----|----|
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|----|----|

2020-11-19 11:20:20.927 INFO  jdbc.sqltiming Line:373 - insert into node_field_revision (changed, created, default_langcode, langcode, promote, revision_translation_affected, 
status, sticky, title, uid, vid, nid) values (1605756020, 1605756020, 1, 'zh-hans', 0, 1, 1, 
0, '15丨重剑无锋，大巧不工：JavaScript面向对象', 1, 33, 33) 
 {executed in 0 msec}
2020-11-19 11:20:20.930 INFO  jdbc.sqltiming Line:373 - select nodefiledd0_.nid as nid1_9_0_, nodefiledd0_.changed as changed2_9_0_, nodefiledd0_.created 
as created3_9_0_, nodefiledd0_.default_langcode as default_4_9_0_, nodefiledd0_.langcode as 
langcode5_9_0_, nodefiledd0_.promote as promote6_9_0_, nodefiledd0_.revision_translation_affected 
as revision7_9_0_, nodefiledd0_.status as status8_9_0_, nodefiledd0_.sticky as sticky9_9_0_, 
nodefiledd0_.title as title10_9_0_, nodefiledd0_.type as type11_9_0_, nodefiledd0_.uid as uid12_9_0_, 
nodefiledd0_.vid as vid13_9_0_ from node_field_data nodefiledd0_ where nodefiledd0_.nid=33 
 {executed in 0 msec}
2020-11-19 11:20:20.931 INFO  jdbc.resultsettable Line:610 - 
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|-----|----|----|
|nid |changed |created |default_langcode |langcode |promote |revision_translation_affected |status |sticky |title |type |uid |vid |
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|-----|----|----|
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|-----|----|----|

2020-11-19 11:20:20.932 INFO  jdbc.sqltiming Line:373 - insert into node_field_data (changed, created, default_langcode, langcode, promote, revision_translation_affected, 
status, sticky, title, type, uid, vid, nid) values (1605756020, 1605756020, 1, 'zh-hans', 0, 
1, 1, 0, '15丨重剑无锋，大巧不工：JavaScript面向对象', 'book', 1, 33, 33) 
 {executed in 0 msec}
2020-11-19 11:20:20.936 INFO  jdbc.sqltiming Line:373 - select bookfieldm0_.entity_id as entity_i1_7_, bookfieldm0_.bundle as bundle2_7_, bookfieldm0_.delta 
as delta3_7_, bookfieldm0_.langcode as langcode4_7_, bookfieldm0_.field_media_value as field_me5_7_, 
bookfieldm0_.revision_id as revision6_7_ from node__field_media bookfieldm0_ where bookfieldm0_.entity_id=33 
 {executed in 1 msec}
2020-11-19 11:20:20.936 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------------|------------|
|entity_id |bundle |delta |langcode |field_media_value |revision_id |
|----------|-------|------|---------|------------------|------------|
|----------|-------|------|---------|------------------|------------|

2020-11-19 11:20:20.937 INFO  jdbc.sqltiming Line:373 - select bookfieldm0_.entity_id as entity_i1_7_0_, bookfieldm0_.bundle as bundle2_7_0_, bookfieldm0_.delta 
as delta3_7_0_, bookfieldm0_.langcode as langcode4_7_0_, bookfieldm0_.field_media_value as 
field_me5_7_0_, bookfieldm0_.revision_id as revision6_7_0_ from node__field_media bookfieldm0_ 
where bookfieldm0_.entity_id=33 
 {executed in 1 msec}
2020-11-19 11:20:20.937 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------------|------------|
|entity_id |bundle |delta |langcode |field_media_value |revision_id |
|----------|-------|------|---------|------------------|------------|
|----------|-------|------|---------|------------------|------------|

2020-11-19 11:20:20.938 INFO  jdbc.sqltiming Line:373 - insert into node__field_media (bundle, delta, langcode, field_media_value, revision_id, entity_id) 
values ('book', 0, 'zh-hans', 'https://qdall01.baidupcs.com/file/80868a164655d3b00ec4cd7c29c02141?bkt=en-2e2b5030dd6ff0378e24780db089b5465bd1b9cba0c33fa65e4872337401c67643136368f52b65fa&fid=3757516097-778750-626663225562656&time=1605756019&sign=FDTAXUGERLQlBHSKfWqir-DCb740ccc5511e5e8fedcff06b081203-WaCQ9hpP%2FRLqEcl186hTy8va2%2Fg%3D&to=92&size=16088760&sta_dx=16088760&sta_cs=3672&sta_ft=m4a&sta_ct=7&sta_mt=0&fm2=MH%2CYangquan%2CAnywhere%2C%2Cshanghai%2Cct&ctime=1571030261&mtime=1605754778&resv0=-1&resv1=0&resv2=rlim&resv3=2&resv4=16088760&vuk=3757516097&iv=0&htype=&randtype=em&newver=1&newfm=1&secfm=1&flow_ver=3&pkey=en-acabb6aef81065b8dac364c289e91dcecfd9ccb6e97f23aa44356524b7fcbfc82b5610f4c8aa6834&sl=76480590&expires=8h&rt=pr&r=816509086&mlogid=7502239272403649565&vbdid=2247232042&fin=15%E4%B8%A8%E9%87%8D%E5%89%91%E6%97%A0%E9%94%8B%EF%BC%8C%E5%A4%A7%E5%B7%A7%E4%B8%8D%E5%B7%A5%EF%BC%9AJavaScript%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1.m4a&bflag=92,34-92&rtype=1&dp-logid=7502239272403649565&dp-callid=0.1.1&hps=1&tsl=80&csl=80&fsl=-1&csign=yVzLQPCt4DblfMLqd2BCjd2RnqQ%3D&so=0&ut=6&uter=0&serv=0&uc=1458616558&ti=c4d909716469fa07336d4468a91324519c45df85c496a599&hflag=30&adg=c_15d187590626c675056c89c8026cfc17&reqlabel=778750_l_1bf9445f27094ab64c9f1cb0bdf7ccfa_-1_dd2c452b8e51a0c74130d7cf32c48a2d&ibp=1&by=themis&filename=15%E4%B8%A8%E9%87%8D%E5%89%91%E6%97%A0%E9%94%8B%EF%BC%8C%E5%A4%A7%E5%B7%A7%E4%B8%8D%E5%B7%A5%EF%BC%9AJavaScript%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1.m4a', 
33, 33) 
 {executed in 0 msec}
2020-11-19 11:20:20.942 INFO  jdbc.sqltiming Line:373 - select nodefieldm0_.entity_id as entity_i1_16_0_, nodefieldm0_.bundle as bundle2_16_0_, nodefieldm0_.delta 
as delta3_16_0_, nodefieldm0_.langcode as langcode4_16_0_, nodefieldm0_.field_media_value as 
field_me5_16_0_, nodefieldm0_.revision_id as revision6_16_0_ from node_revision__field_media 
nodefieldm0_ where nodefieldm0_.entity_id=33 
 {executed in 0 msec}
2020-11-19 11:20:20.943 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------------|------------|
|entity_id |bundle |delta |langcode |field_media_value |revision_id |
|----------|-------|------|---------|------------------|------------|
|----------|-------|------|---------|------------------|------------|

2020-11-19 11:20:20.944 INFO  jdbc.sqltiming Line:373 - insert into node_revision__field_media (bundle, delta, langcode, field_media_value, revision_id, 
entity_id) values ('book', 0, 'zh-hans', 'https://qdall01.baidupcs.com/file/80868a164655d3b00ec4cd7c29c02141?bkt=en-2e2b5030dd6ff0378e24780db089b5465bd1b9cba0c33fa65e4872337401c67643136368f52b65fa&fid=3757516097-778750-626663225562656&time=1605756019&sign=FDTAXUGERLQlBHSKfWqir-DCb740ccc5511e5e8fedcff06b081203-WaCQ9hpP%2FRLqEcl186hTy8va2%2Fg%3D&to=92&size=16088760&sta_dx=16088760&sta_cs=3672&sta_ft=m4a&sta_ct=7&sta_mt=0&fm2=MH%2CYangquan%2CAnywhere%2C%2Cshanghai%2Cct&ctime=1571030261&mtime=1605754778&resv0=-1&resv1=0&resv2=rlim&resv3=2&resv4=16088760&vuk=3757516097&iv=0&htype=&randtype=em&newver=1&newfm=1&secfm=1&flow_ver=3&pkey=en-acabb6aef81065b8dac364c289e91dcecfd9ccb6e97f23aa44356524b7fcbfc82b5610f4c8aa6834&sl=76480590&expires=8h&rt=pr&r=816509086&mlogid=7502239272403649565&vbdid=2247232042&fin=15%E4%B8%A8%E9%87%8D%E5%89%91%E6%97%A0%E9%94%8B%EF%BC%8C%E5%A4%A7%E5%B7%A7%E4%B8%8D%E5%B7%A5%EF%BC%9AJavaScript%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1.m4a&bflag=92,34-92&rtype=1&dp-logid=7502239272403649565&dp-callid=0.1.1&hps=1&tsl=80&csl=80&fsl=-1&csign=yVzLQPCt4DblfMLqd2BCjd2RnqQ%3D&so=0&ut=6&uter=0&serv=0&uc=1458616558&ti=c4d909716469fa07336d4468a91324519c45df85c496a599&hflag=30&adg=c_15d187590626c675056c89c8026cfc17&reqlabel=778750_l_1bf9445f27094ab64c9f1cb0bdf7ccfa_-1_dd2c452b8e51a0c74130d7cf32c48a2d&ibp=1&by=themis&filename=15%E4%B8%A8%E9%87%8D%E5%89%91%E6%97%A0%E9%94%8B%EF%BC%8C%E5%A4%A7%E5%B7%A7%E4%B8%8D%E5%B7%A5%EF%BC%9AJavaScript%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1.m4a', 
33, 33) 
 {executed in 0 msec}
2020-11-19 11:20:20.947 INFO  jdbc.sqltiming Line:373 - select bookfieldc0_.entity_id as entity_i1_4_, bookfieldc0_.bundle as bundle2_4_, bookfieldc0_.field_comment_value 
as field_co3_4_, bookfieldc0_.delta as delta4_4_, bookfieldc0_.field_comment_format as field_co5_4_, 
bookfieldc0_.langcode as langcode6_4_, bookfieldc0_.revision_id as revision7_4_ from node__field_comment 
bookfieldc0_ where bookfieldc0_.entity_id=33 
 {executed in 0 msec}
2020-11-19 11:20:20.948 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|--------------------|------|---------------------|---------|------------|
|entity_id |bundle |field_comment_value |delta |field_comment_format |langcode |revision_id |
|----------|-------|--------------------|------|---------------------|---------|------------|
|----------|-------|--------------------|------|---------------------|---------|------------|

2020-11-19 11:20:20.948 INFO  jdbc.sqltiming Line:373 - select bookfieldc0_.entity_id as entity_i1_4_0_, bookfieldc0_.bundle as bundle2_4_0_, bookfieldc0_.field_comment_value 
as field_co3_4_0_, bookfieldc0_.delta as delta4_4_0_, bookfieldc0_.field_comment_format as 
field_co5_4_0_, bookfieldc0_.langcode as langcode6_4_0_, bookfieldc0_.revision_id as revision7_4_0_ 
from node__field_comment bookfieldc0_ where bookfieldc0_.entity_id=33 
 {executed in 0 msec}
2020-11-19 11:20:20.949 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|--------------------|------|---------------------|---------|------------|
|entity_id |bundle |field_comment_value |delta |field_comment_format |langcode |revision_id |
|----------|-------|--------------------|------|---------------------|---------|------------|
|----------|-------|--------------------|------|---------------------|---------|------------|

2020-11-19 11:20:20.950 INFO  jdbc.sqltiming Line:373 - insert into node__field_comment (bundle, field_comment_value, delta, field_comment_format, 
langcode, revision_id, entity_id) values ('book', '<li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/0f/4d/fd/0aa0e39f.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>许童童</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2019-10-14 </div> </div> <!----> 
</div> <div> <div class="_3M6kV3zb_0 _3D2NkqD6_0"> 老师你好，问个问题，对象继承是什么，有相关的资料可以看一下吗？ </div> <!----> 
<!----> <div class="_1w8H0ktn_0 _2A421P4G_0"> <div class="_2jsFl-X0_0"> <i class="iconfont"></i> 
<span></span> </div> <div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class=""></span> 
</div> <!----> </div> </div> </div></li> <li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/16/e7/a0/9a962a74.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>joker</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2019-10-14 </div> </div> <!----> 
</div> <div> <div class="_3M6kV3zb_0"> 面试有问原型链的，老师您能给讲一下不 </div> <div class="_2r3UB1GX_0"> 
<span>展开</span><i class="iconfont"></i> </div> <!----> <div class="_1w8H0ktn_0 _2A421P4G_0"> 
<div class="_2jsFl-X0_0"> <i class="iconfont"></i> <span></span> </div> <div class="_2P4B1Hdm_0"> 
<i class="iconfont"></i> <span class=""></span> </div> <!----> </div> </div> </div></li>', 
0, 'full_html', 'zh-hans', 33, 33) 
 {executed in 0 msec}
2020-11-19 11:20:20.954 INFO  jdbc.sqltiming Line:373 - select nodefieldc0_.entity_id as entity_i1_13_0_, nodefieldc0_.bundle as bundle2_13_0_, nodefieldc0_.field_comment_value 
as field_co3_13_0_, nodefieldc0_.delta as delta4_13_0_, nodefieldc0_.field_comment_format as 
field_co5_13_0_, nodefieldc0_.langcode as langcode6_13_0_, nodefieldc0_.revision_id as revision7_13_0_ 
from node_revision__field_comment nodefieldc0_ where nodefieldc0_.entity_id=33 
 {executed in 0 msec}
2020-11-19 11:20:20.954 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|--------------------|------|---------------------|---------|------------|
|entity_id |bundle |field_comment_value |delta |field_comment_format |langcode |revision_id |
|----------|-------|--------------------|------|---------------------|---------|------------|
|----------|-------|--------------------|------|---------------------|---------|------------|

2020-11-19 11:20:20.956 INFO  jdbc.sqltiming Line:373 - insert into node_revision__field_comment (bundle, field_comment_value, delta, field_comment_format, 
langcode, revision_id, entity_id) values ('book', '<li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/0f/4d/fd/0aa0e39f.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>许童童</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2019-10-14 </div> </div> <!----> 
</div> <div> <div class="_3M6kV3zb_0 _3D2NkqD6_0"> 老师你好，问个问题，对象继承是什么，有相关的资料可以看一下吗？ </div> <!----> 
<!----> <div class="_1w8H0ktn_0 _2A421P4G_0"> <div class="_2jsFl-X0_0"> <i class="iconfont"></i> 
<span></span> </div> <div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class=""></span> 
</div> <!----> </div> </div> </div></li> <li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/16/e7/a0/9a962a74.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>joker</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2019-10-14 </div> </div> <!----> 
</div> <div> <div class="_3M6kV3zb_0"> 面试有问原型链的，老师您能给讲一下不 </div> <div class="_2r3UB1GX_0"> 
<span>展开</span><i class="iconfont"></i> </div> <!----> <div class="_1w8H0ktn_0 _2A421P4G_0"> 
<div class="_2jsFl-X0_0"> <i class="iconfont"></i> <span></span> </div> <div class="_2P4B1Hdm_0"> 
<i class="iconfont"></i> <span class=""></span> </div> <!----> </div> </div> </div></li>', 
0, 'full_html', 'zh-hans', 33, 33) 
 {executed in 1 msec}
2020-11-19 11:20:20.958 INFO  jdbc.sqltiming Line:373 - select bookfieldt0_.entity_id as entity_i1_8_, bookfieldt0_.bundle as bundle2_8_, bookfieldt0_.delta 
as delta3_8_, bookfieldt0_.langcode as langcode4_8_, bookfieldt0_.revision_id as revision5_8_, 
bookfieldt0_.field_thumb_value as field_th6_8_ from node__field_thumb bookfieldt0_ where bookfieldt0_.entity_id=33 
 {executed in 0 msec}
2020-11-19 11:20:20.959 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------|------------------|
|entity_id |bundle |delta |langcode |revision_id |field_thumb_value |
|----------|-------|------|---------|------------|------------------|
|----------|-------|------|---------|------------|------------------|

2020-11-19 11:20:20.959 INFO  jdbc.sqltiming Line:373 - select bookfieldt0_.entity_id as entity_i1_8_0_, bookfieldt0_.bundle as bundle2_8_0_, bookfieldt0_.delta 
as delta3_8_0_, bookfieldt0_.langcode as langcode4_8_0_, bookfieldt0_.revision_id as revision5_8_0_, 
bookfieldt0_.field_thumb_value as field_th6_8_0_ from node__field_thumb bookfieldt0_ where 
bookfieldt0_.entity_id=33 
 {executed in 0 msec}
2020-11-19 11:20:20.960 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------|------------------|
|entity_id |bundle |delta |langcode |revision_id |field_thumb_value |
|----------|-------|------|---------|------------|------------------|
|----------|-------|------|---------|------------|------------------|

2020-11-19 11:20:20.961 INFO  jdbc.sqltiming Line:373 - insert into node__field_thumb (bundle, delta, langcode, revision_id, field_thumb_value, entity_id) 
values ('book', 0, 'zh-hans', 33, 'https://static001.geekbang.org/resource/image/b9/b5/b9d1220d1c3331869dbeb88d1c49e7b5.jpg', 
33) 
 {executed in 0 msec}
2020-11-19 11:20:20.963 INFO  jdbc.sqltiming Line:373 - select nodefieldt0_.entity_id as entity_i1_17_0_, nodefieldt0_.bundle as bundle2_17_0_, nodefieldt0_.delta 
as delta3_17_0_, nodefieldt0_.langcode as langcode4_17_0_, nodefieldt0_.revision_id as revision5_17_0_, 
nodefieldt0_.field_thumb_value as field_th6_17_0_ from node_revision__field_thumb nodefieldt0_ 
where nodefieldt0_.entity_id=33 
 {executed in 0 msec}
2020-11-19 11:20:20.964 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------|------------------|
|entity_id |bundle |delta |langcode |revision_id |field_thumb_value |
|----------|-------|------|---------|------------|------------------|
|----------|-------|------|---------|------------|------------------|

2020-11-19 11:20:20.965 INFO  jdbc.sqltiming Line:373 - insert into node_revision__field_thumb (bundle, delta, langcode, revision_id, field_thumb_value, 
entity_id) values ('book', 0, 'zh-hans', 33, 'https://static001.geekbang.org/resource/image/b9/b5/b9d1220d1c3331869dbeb88d1c49e7b5.jpg', 
33) 
 {executed in 0 msec}
2020-11-19 11:20:20.967 INFO  jdbc.sqltiming Line:373 - select bookfieldf0_.entity_id as entity_i1_5_0_, bookfieldf0_.bundle as bundle2_5_0_, bookfieldf0_.delta 
as delta3_5_0_, bookfieldf0_.field_fenlei_target_id as field_fe4_5_0_, bookfieldf0_.langcode 
as langcode5_5_0_, bookfieldf0_.revision_id as revision6_5_0_ from node__field_fenlei bookfieldf0_ 
where bookfieldf0_.entity_id=33 
 {executed in 0 msec}
2020-11-19 11:20:20.968 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------------|---------|------------|
|entity_id |bundle |delta |field_fenlei_target_id |langcode |revision_id |
|----------|-------|------|-----------------------|---------|------------|
|----------|-------|------|-----------------------|---------|------------|

2020-11-19 11:20:20.969 INFO  jdbc.sqltiming Line:373 - insert into node__field_fenlei (bundle, delta, field_fenlei_target_id, langcode, revision_id, 
entity_id) values ('book', 0, 1, 'zh-hans', 33, 33) 
 {executed in 0 msec}
2020-11-19 11:20:20.972 INFO  jdbc.sqltiming Line:373 - select nodefieldf0_.entity_id as entity_i1_14_0_, nodefieldf0_.bundle as bundle2_14_0_, nodefieldf0_.delta 
as delta3_14_0_, nodefieldf0_.field_fenlei_target_id as field_fe4_14_0_, nodefieldf0_.langcode 
as langcode5_14_0_, nodefieldf0_.revision_id as revision6_14_0_ from node_revision__field_fenlei 
nodefieldf0_ where nodefieldf0_.entity_id=33 
 {executed in 0 msec}
2020-11-19 11:20:20.972 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------------|---------|------------|
|entity_id |bundle |delta |field_fenlei_target_id |langcode |revision_id |
|----------|-------|------|-----------------------|---------|------------|
|----------|-------|------|-----------------------|---------|------------|

2020-11-19 11:20:20.974 INFO  jdbc.sqltiming Line:373 - insert into node_revision__field_fenlei (bundle, delta, field_fenlei_target_id, langcode, revision_id, 
entity_id) values ('book', 0, 1, 'zh-hans', 33, 33) 
 {executed in 1 msec}
2020-11-19 11:21:04.708 INFO  jdbc.sqltiming Line:373 - select bookfieldf0_.entity_id as entity_i1_6_, bookfieldf0_.bundle as bundle2_6_, bookfieldf0_.delta 
as delta3_6_, bookfieldf0_.field_fsid_value as field_fs4_6_, bookfieldf0_.langcode as langcode5_6_, 
bookfieldf0_.revision_id as revision6_6_ from node__field_fsid bookfieldf0_ where bookfieldf0_.field_fsid_value='505968262876985' 
 {executed in 1 msec}
2020-11-19 11:21:04.709 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------|---------|------------|
|entity_id |bundle |delta |field_fsid_value |langcode |revision_id |
|----------|-------|------|-----------------|---------|------------|
|----------|-------|------|-----------------|---------|------------|

2020-11-19 11:21:04.711 INFO  jdbc.sqltiming Line:373 - insert into node_revision (langcode, nid, revision_default, revision_timestamp, revision_uid) 
values ('zh-hans', 0, 1, 1605756064, 1) 
 {executed in 0 msec}
2020-11-19 11:21:04.711 INFO  jdbc.sqltiming Line:373 - getGeneratedKeys on query: insert into node_revision (langcode, nid, revision_default, revision_timestamp, 
revision_uid) values ('zh-hans', 0, 1, 1605756064, 1) 
 {executed in 0 msec}
2020-11-19 11:21:04.712 INFO  jdbc.resultsettable Line:610 - 
|--------------|
|generated_key |
|--------------|
|34            |
|--------------|

2020-11-19 11:21:04.720 INFO  jdbc.sqltiming Line:373 - insert into node (langcode, type, uuid, vid) values ('zh-hans', 'book', 'e216dd9f-ef55-4af8-acb2-b255e4f2673f', 
34) 
 {executed in 1 msec}
2020-11-19 11:21:04.720 INFO  jdbc.sqltiming Line:373 - getGeneratedKeys on query: insert into node (langcode, type, uuid, vid) values ('zh-hans', 
'book', 'e216dd9f-ef55-4af8-acb2-b255e4f2673f', 34) 
 {executed in 0 msec}
2020-11-19 11:21:04.721 INFO  jdbc.resultsettable Line:610 - 
|--------------|
|generated_key |
|--------------|
|34            |
|--------------|

2020-11-19 11:21:04.726 INFO  jdbc.sqltiming Line:373 - update node_revision set langcode='zh-hans', nid=34, revision_default=1, revision_timestamp=1605756064, 
revision_uid=1 where vid=34 
 {executed in 0 msec}
2020-11-19 11:21:04.729 INFO  jdbc.sqltiming Line:373 - select bookfieldf0_.entity_id as entity_i1_6_0_, bookfieldf0_.bundle as bundle2_6_0_, bookfieldf0_.delta 
as delta3_6_0_, bookfieldf0_.field_fsid_value as field_fs4_6_0_, bookfieldf0_.langcode as langcode5_6_0_, 
bookfieldf0_.revision_id as revision6_6_0_ from node__field_fsid bookfieldf0_ where bookfieldf0_.entity_id=34 
 {executed in 0 msec}
2020-11-19 11:21:04.729 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------|---------|------------|
|entity_id |bundle |delta |field_fsid_value |langcode |revision_id |
|----------|-------|------|-----------------|---------|------------|
|----------|-------|------|-----------------|---------|------------|

2020-11-19 11:21:04.731 INFO  jdbc.sqltiming Line:373 - insert into node__field_fsid (bundle, delta, field_fsid_value, langcode, revision_id, entity_id) 
values ('book', 0, '505968262876985', 'zh-hans', 34, 34) 
 {executed in 0 msec}
2020-11-19 11:21:04.736 INFO  jdbc.sqltiming Line:373 - select nodefieldf0_.entity_id as entity_i1_15_0_, nodefieldf0_.bundle as bundle2_15_0_, nodefieldf0_.delta 
as delta3_15_0_, nodefieldf0_.field_fsid_value as field_fs4_15_0_, nodefieldf0_.langcode as 
langcode5_15_0_, nodefieldf0_.revision_id as revision6_15_0_ from node_revision__field_fsid 
nodefieldf0_ where nodefieldf0_.entity_id=34 
 {executed in 1 msec}
2020-11-19 11:21:04.736 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------|---------|------------|
|entity_id |bundle |delta |field_fsid_value |langcode |revision_id |
|----------|-------|------|-----------------|---------|------------|
|----------|-------|------|-----------------|---------|------------|

2020-11-19 11:21:04.738 INFO  jdbc.sqltiming Line:373 - insert into node_revision__field_fsid (bundle, delta, field_fsid_value, langcode, revision_id, 
entity_id) values ('book', 0, '505968262876985', 'zh-hans', 34, 34) 
 {executed in 0 msec}
2020-11-19 11:21:04.742 INFO  jdbc.sqltiming Line:373 - select bookentity0_.nid as nid1_1_, bookentity0_.bid as bid2_1_, bookentity0_.depth as depth3_1_, 
bookentity0_.has_children as has_chil4_1_, bookentity0_.p1 as p5_1_, bookentity0_.p2 as p6_1_, 
bookentity0_.p3 as p7_1_, bookentity0_.p4 as p8_1_, bookentity0_.p5 as p9_1_, bookentity0_.pid 
as pid10_1_, bookentity0_.weight as weight11_1_ from book bookentity0_ where bookentity0_.nid=34 
 {executed in 0 msec}
2020-11-19 11:21:04.743 INFO  jdbc.resultsettable Line:610 - 
|----|----|------|-------------|---|---|---|---|---|----|-------|
|nid |bid |depth |has_children |p1 |p2 |p3 |p4 |p5 |pid |weight |
|----|----|------|-------------|---|---|---|---|---|----|-------|
|----|----|------|-------------|---|---|---|---|---|----|-------|

2020-11-19 11:21:04.744 INFO  jdbc.sqltiming Line:373 - select bookentity0_.nid as nid1_1_0_, bookentity0_.bid as bid2_1_0_, bookentity0_.depth as 
depth3_1_0_, bookentity0_.has_children as has_chil4_1_0_, bookentity0_.p1 as p5_1_0_, bookentity0_.p2 
as p6_1_0_, bookentity0_.p3 as p7_1_0_, bookentity0_.p4 as p8_1_0_, bookentity0_.p5 as p9_1_0_, 
bookentity0_.pid as pid10_1_0_, bookentity0_.weight as weight11_1_0_ from book bookentity0_ 
where bookentity0_.nid=34 
 {executed in 1 msec}
2020-11-19 11:21:04.744 INFO  jdbc.resultsettable Line:610 - 
|----|----|------|-------------|---|---|---|---|---|----|-------|
|nid |bid |depth |has_children |p1 |p2 |p3 |p4 |p5 |pid |weight |
|----|----|------|-------------|---|---|---|---|---|----|-------|
|----|----|------|-------------|---|---|---|---|---|----|-------|

2020-11-19 11:21:04.746 INFO  jdbc.sqltiming Line:373 - insert into book (bid, depth, has_children, p1, p2, p3, p4, p5, pid, weight, nid) values (1, 
3, 0, 1, 27, 34, 0, 0, 27, 0, 34) 
 {executed in 0 msec}
2020-11-19 11:21:04.750 INFO  jdbc.sqltiming Line:373 - select nodebodyen0_.entity_id as entity_i1_3_, nodebodyen0_.body_value as body_val2_3_, nodebodyen0_.body_summary 
as body_sum3_3_, nodebodyen0_.bundle as bundle4_3_, nodebodyen0_.delta as delta5_3_, nodebodyen0_.body_format 
as body_for6_3_, nodebodyen0_.langcode as langcode7_3_, nodebodyen0_.revision_id as revision8_3_ 
from node__body nodebodyen0_ where nodebodyen0_.entity_id=34 
 {executed in 0 msec}
2020-11-19 11:21:04.750 INFO  jdbc.resultsettable Line:610 - 
|----------|-----------|-------------|-------|------|------------|---------|------------|
|entity_id |body_value |body_summary |bundle |delta |body_format |langcode |revision_id |
|----------|-----------|-------------|-------|------|------------|---------|------------|
|----------|-----------|-------------|-------|------|------------|---------|------------|

2020-11-19 11:21:04.751 INFO  jdbc.sqltiming Line:373 - select nodebodyre0_.entity_id as entity_i1_12_0_, nodebodyre0_.body_value as body_val2_12_0_, 
nodebodyre0_.body_summary as body_sum3_12_0_, nodebodyre0_.bundle as bundle4_12_0_, nodebodyre0_.delta 
as delta5_12_0_, nodebodyre0_.body_format as body_for6_12_0_, nodebodyre0_.langcode as langcode7_12_0_, 
nodebodyre0_.revision_id as revision8_12_0_ from node_revision__body nodebodyre0_ where nodebodyre0_.entity_id=34 
 {executed in 0 msec}
2020-11-19 11:21:04.751 INFO  jdbc.resultsettable Line:610 - 
|----------|-----------|-------------|-------|------|------------|---------|------------|
|entity_id |body_value |body_summary |bundle |delta |body_format |langcode |revision_id |
|----------|-----------|-------------|-------|------|------------|---------|------------|
|----------|-----------|-------------|-------|------|------------|---------|------------|

2020-11-19 11:21:04.753 INFO  jdbc.sqltiming Line:373 - insert into node_revision__body (body_value, body_summary, bundle, delta, body_format, langcode, 
revision_id, entity_id) values ('<p>你好，我是四火。</p> <p>前两章我们分别介绍了网络协议和 Web 接口的知识，以及网站等应用的 MVC 
架构和其衍生发展而来的各种设计模式。以上希望你已经充分消化吸收了，今天我们将迈入第三大基于 Web 的全栈技能领域——前端。</p> <h2>为什么要学习前端技术？</h2> <p>“前端”简简单单两个字，背后却有着纷繁的故事和复杂的情感。这也促使我产生了想多聊一聊这个话题的想法，一般的技术在“为什么要学”的方面我往往简言述之，但对于前端技术我想为此破例。</p> 
<p>前端一直以来是一个颇具争议的领域，有人极其喜爱，有人避而远之，和多数“天下太平”的技术相比，这确实有些令人费解，但我认为这其中的原因至少包括这样两点。</p> <p>第一，某些技术人员或管理者单项技术进步，但思想却依然陈旧迂腐，停留在“前端就是改改页面”这样老旧的思维程度，认为前端没有技术含量且无法创造显著价值。</p> 
<p>第二，相对于软件领域的通用技术，前端极低的入门门槛，导致号称“懂前端”的工程师技术水准严重参差不齐，这反向影响了整个技术群体的形象。</p> <p>如果你志在学习全栈工程，前端就自然是你无法避开，且还需努力驾驭的领域。但即便你的长期目标不在此，也应该学习前端技术，因为它能给你带来的好处是多方面，且是别的技术所不可替代的。具体包括这样几个方面。</p><!-- 
[[[read_end]]] --> <p><strong>首先，它可以帮助你开阔眼界，为你的思维模式带来新的选项，整个全栈技术都有这样的特点，但是前端技术在这方面尤其明显。</strong>前端技术的结构和软件其它领域有着显著的不同，技术发展极其迅速，技术之水深不见底，开源社区百花齐放。我们也将在本章中体会到前端领域所需要的不同的思维模式。</p> 
<p><strong>其次，它可以帮助你形成快速原型、即时验证和独立展示演示的优势，在迅捷的反馈中设计和编程。</strong>在我参与过的 Hackthon（黑客马拉松）数天的短期竞赛中，产品经理、程序员和数据科学家被认为是最合理的一组搭配，懂前端技术的程序员总是对互联网的用户交互、数据采集等方面特别有经验，在展示环节还可以快速地做出非常优秀的效果来。</p> 
<p><strong>再次，它可以帮助你建立产品思维。</strong>有人认为它能用来解决用户的核心问题，但实际上往往不是，解决核心问题主要还是靠后端的代码，但是前端的代码却是和用户最贴近和交互的部分，一个优秀的前端工程师总是具备非常强烈的产品属性。</p> 
<p>我记得以前在一个团队中负责一个 portal，有别的团队的同事私下里抱怨，说我们做的东西被 portal 一展示，用户都说好用 ，结果都默认是做 portal 的团队做的了。其实这是一个很现实的问题，无论产品的功和过，即便它的组件分层再深，用户的眼光往往只到很浅的层次就断了。有句话叫，“没有声音，再好的戏也出不来”，如果说，产品的功能性能是它的硬实力，是这出戏的画面，那么前端带来的用户体验在很多情况下就是这出戏的声音。</p> 
<p><strong>最后，前端技术是全栈工程的必备技能。</strong>它可以让你拍着胸脯对用户说，“这个可以做”，“这个不能做”，而不是说，“我去和前端确认一下这个交互能不能实现”。产品做出来，也不至于成为一个号称装着高性能引擎，却裹着破布毯子的“豪车”。</p> 
<p>遗憾的是，现实中有不少迈入职场没有几年，却已经给自己打上“前端工程师”“后端工程师”等标签的程序员朋友。我觉得他们可能是受到了某些万恶的职业生涯规划鸡汤的影响，这些标签会让他们在面对新技术和新机遇的时候，觉得身处“不属于自己的领域”而选择封闭自己。</p> 
<p>因此我的建议是：<strong>职业生涯不宜过早做过细的规划，除了技术深度，也需要在技术广度上积累，等到一定程度以后再来选择自己的发展分支路线。</strong>而且，某些特定技术领域，在程序员给自己打标签的时候，压根还没有发展成熟，等到发展起来，时机真正到来的时候，只有那些原本“不偏食”的优秀的程序员才能够脱颖而出。</p> 
<h2>思维模式的转变</h2> <p>如果你具备后端开发的经验，刚刚开始从后端转向前端，你可能会发现，有很多想当然的理解，不再适用，有很多想当然的解决方法，也不再有效。</p> <h3>1. 
应用事件驱动编程</h3> <p>来看这样一段 JavaScript 代码：</p> <pre style="position: relative;"><code> <table class="hljs-ln"> 
<tbody> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> console.log("1"); </div></td> </tr> <tr> 
<td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> setTimeout(function timeout() { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> console.log("2"); </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> }, 0); </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div 
class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></td> <td class="hljs-ln-code"> <div 
class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="7"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
setTimeout(function timeout() { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="8"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
console.log("3"); </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="9"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
}, 5000); </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" 
data-line-number="10"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="11"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> console.log("4"); </div></td> </tr> </tbody> 
</table></code> <div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 </div></pre> 
<p>代码中有四处打印，setTimeout 接受两个参数，第一个参数表示调用逻辑，第二个参数表示等待多少毫秒后再来执行该调用逻辑。</p> <p>你觉得打印结果应该是什么？</p> 
<p>是 1 -&gt; 2 -&gt; 4 -&gt; 3 吗？先别急着回答，我们好久没动手了，让我们来动动手看看结果吧。</p> <p>在 Chrome 中，任意一个页面打开浏览器的开发者工具，在 
Console 标签下，把上面的代码复制粘贴进去，于是我们看到这样的输出：</p> <pre style="position: relative;"><code> <table class="hljs-ln"> 
<tbody> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> 1 </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> 4 </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="3"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
undefined </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" 
data-line-number="4"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 2 </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> 3 </div></td> </tr> </tbody> </table></code> 
<div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 </div></pre> <p>这是为什么，上面的 
undefined 又是什么？</p> <p>为了回答上面的问题，我们需要了解 JavaScript 执行机制中的 Event Loop（事件循环）来理解上面的代码。</p> <p>在写后端代码的时候，你可能已经习惯了使用进程（process）或者线程（thread）来对付需要并行处理的逻辑，Java 
如此，Python 也如此。进程或线程可以说是“真并行”，虽然微观地看，它们可能会顺序占用 CPU 时间片，但宏观地看，代码在二者中执行互不阻塞，是并行执行的。</p> <p>而在 
JavaScript 中，在浏览器中，你看到眼花缭乱的效果和变化，却是“假并行”，是一个彻头彻尾的“骗局”。为什么这么说？</p> <p>因为浏览器中 JavaScript 代码的执行通常是单线程的（对于 
<a href="https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API/Using_web_workers">Web 
Worker</a> 这样的“例外”我们暂不讨论）——一个线程，一个调用栈，一次只做一件事。</p> <p>具体说来，在整个 JavaScript 的世界里，引起代码运行的行为是通过事件驱动的，并且<strong>全部是通过这唯一的一个勤奋的工作线程来执行的。那么当有事件产生的时候，这个工作线程不一定空闲，这就需要一个机制来让新产生的事件排队“等一等”</strong>，等当前的工作完成之后，再来处理它。这个机制就是 
Event Loop，这个等一等的事件，就被放在一个被称为事件（回调）队列的数据结构中。</p> <p>于是上面的代码，实际在运行的时候，从事件队列的角度看，是这样的：</p> <p><img 
src="https://static001.geekbang.org/resource/image/75/ff/757fe02c8910fe1d02be6d159ccf3cff.png" 
alt=""></p> <p>工作线程不断地从整个事件队列的右侧取得新的事件来处理执行，而新的事件只会从左侧放入：</p> <p>主代码最先被执行，从上往下顺序执行，因此顺序是：</p> 
<ul> <li>先打印 1；</li> <li>在遇到第一个 setTimeout 的时候，告知浏览器，请在 0 秒之后往事件队列内放入执行打印 2 的事件；</li> <li>在遇到第二个 
setTimeout 的时候，告知浏览器，请在 5 秒之后往事件队列内放入执行打印 3 的事件；</li> <li>再打印 4；</li> <li>主代码执行完毕，Chrome 的控制台打印这段代码的返回值，但因为它没有返回值，于是就打印 
undefined。</li> </ul> <p>浏览器老老实实地按照要求放入了打印 2 的事件，虽然是第 0 秒就放入，但是因为放入的时候主代码还在执行，因此只能等待，它等到主代码执行完毕后才得到执行，打印了 
2。</p> <p>5 秒钟后，浏览器按照要求往队列里放入了打印 3 的事件，于是 3 被打印出来。</p> <p>你看，通过这种方式，JavaScript 可以让不同的任务在一个线程中完成，而整个任务编排的机制，<strong>从代码的角度看，所有的逻辑都是通过七七八八的“异步回调”来完成的；而从程序员思维方式的角度看，以往基于线程的编程，变成了事件驱动的编程</strong>。</p> 
<p><img src="https://static001.geekbang.org/resource/image/8f/b9/8f475ade881eeaa7e49a442e80af2db9.jpg" 
alt=""></p> <p>上图来自 <a href="http://berb.github.io/diploma-thesis/original/043_threadsevents.html">The 
Case of Threads vs. Events</a>，很好地对比了两者的不同之处，其中：</p> <p>对于逻辑的触发，基于线程编程需要不断地由监视线程去查询被监视线程的某一个状态，如果状态满足某个条件，则触发相应的逻辑；而事件驱动则通过事件处理器，在事件发生时执行挂载的回调逻辑。不知你是否联想起了 
<a href="https://time.geekbang.org/column/article/136587">[第 03 讲]</a> 中我介绍的 push 和 pull，在这里，前者正类似于 
pull 的形式，而后者则类似于 push 的形式。</p> <p>基于线程的方式可以阻塞线程，等待时间或某个条件满足后再继续执行；而事件驱动则相反，发送一条消息后无阻塞等待回调的发生。阻塞线程的方式对资源的消耗往往更加显著，因为无论是否执行线程都被占用，但从人直观理解的角度来说，代码更直白，更符合人对顺序执行的理解；而事件驱动的方式则相反，资源消耗上更优，但是代码的执行顺序，以及由此产生的系统状态判断变得难以预知。</p> 
<p>请注意的是，在 JavaScript 中我们通常无法使用基于线程的编程，但是在很多情况下，例如 Java 和 Python 这些传统的后端编程语言中，我们可以混合使用基于线程和事件驱动的编程，它们是互不矛盾的。</p> 
<p>最后，为什么 JavaScript 要被设计成单线程的，多线程难道就不行吗？最重要的原因，就是为了让整个模型简单。如果引入多线程，这里有很多问题需要解决，例如事件处理的依赖关系（多线程的事件处理就不再是简单队列的挨个处理了），例如资源的共享和修改（无锁编程不再有效，必须要考虑同步等加锁机制了），整个系统会变得极其复杂，不只是对于浏览器的开发者而言，对前端的开发者也一样。</p> 
<p>另外，需要说明的是，浏览器的 JavaScript 执行是单线程的，但不代表浏览器是单线程的。浏览器通常还包含其它线程，比如说：</p> <ul> <li>界面（GUI）渲染线程，这个线程的执行和上述的 
JavaScript 工作线程是互斥的，即二者不可同时执行；</li> <li>事件触发线程，这个也很好理解，我们介绍过有一个神秘人物帮着往队列中放入事件（例子中的回调打印 2 和回调打印 
3），这个神秘人物就是事件触发线程。</li> </ul> <h3>2. 学写声明式代码</h3> <p>习惯于设计和书写大量的声明式代码，也是一个很重要的思维转变。</p> <p>我们在 
<a href="https://time.geekbang.org/column/article/140196">[第 07 讲]</a> 中讲过什么是声明式代码，为什么我们在写视图层的时候会大量使用声明式代码。HTML、CSS 
和 JavaScript，前端的三驾马车，两架是用声明式代码写的，我们应当记得自己做的是前端开发，而不是一个单纯的 JavaScript 写手。</p> <p><strong>声明式代码和命令式代码一样，都需要设计，且都需要测试。</strong>我见过不少工程师能够写出优秀的命令式代码，甚至已经习惯了，但是在写声明式代码的时候，却缺乏条理。</p> 
<p>举例来说，设计页面的时候，要先设计布局，抓住整棵 DOM 树中核心的部分，自上而下地去划分区域，哪些是静态的区域，哪些是动态生成的，并合理设计可重用组件。再比如说，使用声明式代码处理模板中呈现数据的格式转换，使得呈现部分的代码更纯粹、自然，具体请参看 
[第 16 讲] 中的过滤器。</p> <h3>3. 培养交互思维</h3> <p>前端工程师必须具备敏感的交互思维。通常来说，前端的代码，兼具着“甲方”和“乙方”的角色：</p> 
<ul> <li>对用户和前端的交互来说，客户是甲方，享受服务；前端就是乙方，提供服务。</li> <li>对和服务端的交互来说，前端就是甲方，从服务端获得数据和服务；服务端就是乙方，提供数据和服务。</li> 
</ul> <p>而无论是和用户，还是和服务端的交互，都是学习前端技术中需要领会的部分。<strong>和用户的交互要求开发前端的程序员具备产品思维，而和服务端的交互则要求开发前端的程序员具备工程思维。</strong></p> 
<p>一头是用户，另一头是后端工程师，前端的开发人员，在整个庞大的研发体系中，既像粘合剂，又像润滑剂，要从产品和工程两个视角去思考问题，作出判断；不但要交付实实在在的功能，要引导好的工程架构，还要给用户带来优秀的产品体验。</p> 
<h2>总结思考</h2> <p>今天我们首先强调了对于基于 Web 的全栈学习来说，学习前端技术的重要性，接着我们介绍了前端思维的几个转变，特别是事件驱动编程。希望你已经了解了 JavaScript 
的单线程运行机制，并能够慢慢习惯不断在代码中与异步和回调打交道。</p> <p>下面留两个思考问题：</p> <ul> <li>你在技术团队中主要扮演什么角色，你对前端技术的认识是怎样的？</li> 
<li>为什么 JavaScript 中，没有像 Java 或 Python 一样的 sleep 方法？毕竟，我就是想让当前执行过程稍等一下，再继续后面的逻辑，有 sleep 的话多方便啊。</li> 
</ul> <p>最后，我想说的是，以前有句话叫做，“狗拿耗子，多管闲事”，但是我们在学习前端技术的时候，却要反过来，我们不但要多管闲事，还要“越管越多”，要多去想想类似的后端技术是怎样实现的。那在学习后端技术的时候，道理也是一样的，也要联想。</p> 
<p>无论是早些年的 <a href="http://www.gwtproject.org/">GWT</a>，后端 Java 程序员写出了优秀的基于 Ajax 的跨浏览器应用；还是这些年的 
<a href="https://nodejs.org/en/">Node.js</a>，利用强大的 V8 引擎把数不清的 JavaScript 异步回调也写到后端去……技术是没有边界的，前端和后端的技术当然也包括在内。</p> 
<p>好，今天的内容就到这里，欢迎你和我讨论，也欢迎你邀请你的朋友一起阅读、学习。</p> <h2>扩展阅读</h2> <ul> <li>你可能听过这样一句话，“任何能用 JavaScript 
写的应用，最终都会用 JavaScript 来实现。”这句话最初来自 <a href="https://blog.codinghorror.com/the-principle-of-least-power/">The 
Principle of Least Power</a> 这篇文章，写于 2007 年。</li> <li>有位工程师做了一个<a href="http://latentflip.com/loupe/?code=Y29uc29sZS5sb2coIjEiKTsKCnNldFRpbWVvdXQoZnVuY3Rpb24gdGltZW91dCgpIHsKICAgIGNvbnNvbGUubG9nKCIyIik7Cn0sIDApOwoKc2V0VGltZW91dChmdW5jdGlvbiB0aW1lb3V0KCkgewogICAgY29uc29sZS5sb2coIjMiKTsKfSwgNTAwMCk7Cgpjb25zb2xlLmxvZygiNCIpOw%3D%3D!!!PGJ1dHRvbj5DbGljayBtZSE8L2J1dHRvbj4%3D">名为 
Loupe 的网站</a>，用动画来形象地展示事件循环的过程，本文的例子也可以在它上面运行。</li> <li>为什么浏览器中 JavaScript 代码的执行设计成单线程的，还有一个文中没有提到的原因，就是多线程的 
GUI 特别容易死锁。这篇文章 <a href="https://community.oracle.com/blogs/kgh/2004/10/19/multithreaded-toolkits-failed-dream">Multithreaded 
toolkits: A failed dream?</a> 描述了其中的缘由，大致是说 GUI 的行为大多都是从更高层的抽象一层一层往下调用到更低层的抽象、具体工具类实现，再到操作系统；而事件则是反过来，从下往上冒泡。结果就是两个方向相反的行为在碰头，给资源加锁的时候一个正序，一个逆序，极其容易出现互相等待而饿死的情况，而这种情况下要彻底解决这一问题的难度无异于“逆转潮汐”。</li> 
<li><a href="https://www.html5rocks.com/zh/tutorials/internals/howbrowserswork/">浏览器的工作原理：新式网络浏览器幕后揭秘</a>，这可能是在互联网上流传最广泛地介绍浏览器工作原理的中文文章，非常推荐。</li> 
</ul> <p><img src="https://static001.geekbang.org/resource/image/11/8b/1181246bbd51ce348d5729696d1dc28b.jpg" 
alt="unpreview"></p>', '', 'book', 0, 'full_html', 'zh-hans', 34, 34) 
 {executed in 0 msec}
2020-11-19 11:21:04.757 INFO  jdbc.sqltiming Line:373 - select nodebodyen0_.entity_id as entity_i1_3_0_, nodebodyen0_.body_value as body_val2_3_0_, 
nodebodyen0_.body_summary as body_sum3_3_0_, nodebodyen0_.bundle as bundle4_3_0_, nodebodyen0_.delta 
as delta5_3_0_, nodebodyen0_.body_format as body_for6_3_0_, nodebodyen0_.langcode as langcode7_3_0_, 
nodebodyen0_.revision_id as revision8_3_0_ from node__body nodebodyen0_ where nodebodyen0_.entity_id=34 
 {executed in 0 msec}
2020-11-19 11:21:04.758 INFO  jdbc.resultsettable Line:610 - 
|----------|-----------|-------------|-------|------|------------|---------|------------|
|entity_id |body_value |body_summary |bundle |delta |body_format |langcode |revision_id |
|----------|-----------|-------------|-------|------|------------|---------|------------|
|----------|-----------|-------------|-------|------|------------|---------|------------|

2020-11-19 11:21:04.760 INFO  jdbc.sqltiming Line:373 - insert into node__body (body_value, body_summary, bundle, delta, body_format, langcode, revision_id, 
entity_id) values ('<p>你好，我是四火。</p> <p>前两章我们分别介绍了网络协议和 Web 接口的知识，以及网站等应用的 MVC 架构和其衍生发展而来的各种设计模式。以上希望你已经充分消化吸收了，今天我们将迈入第三大基于 
Web 的全栈技能领域——前端。</p> <h2>为什么要学习前端技术？</h2> <p>“前端”简简单单两个字，背后却有着纷繁的故事和复杂的情感。这也促使我产生了想多聊一聊这个话题的想法，一般的技术在“为什么要学”的方面我往往简言述之，但对于前端技术我想为此破例。</p> 
<p>前端一直以来是一个颇具争议的领域，有人极其喜爱，有人避而远之，和多数“天下太平”的技术相比，这确实有些令人费解，但我认为这其中的原因至少包括这样两点。</p> <p>第一，某些技术人员或管理者单项技术进步，但思想却依然陈旧迂腐，停留在“前端就是改改页面”这样老旧的思维程度，认为前端没有技术含量且无法创造显著价值。</p> 
<p>第二，相对于软件领域的通用技术，前端极低的入门门槛，导致号称“懂前端”的工程师技术水准严重参差不齐，这反向影响了整个技术群体的形象。</p> <p>如果你志在学习全栈工程，前端就自然是你无法避开，且还需努力驾驭的领域。但即便你的长期目标不在此，也应该学习前端技术，因为它能给你带来的好处是多方面，且是别的技术所不可替代的。具体包括这样几个方面。</p><!-- 
[[[read_end]]] --> <p><strong>首先，它可以帮助你开阔眼界，为你的思维模式带来新的选项，整个全栈技术都有这样的特点，但是前端技术在这方面尤其明显。</strong>前端技术的结构和软件其它领域有着显著的不同，技术发展极其迅速，技术之水深不见底，开源社区百花齐放。我们也将在本章中体会到前端领域所需要的不同的思维模式。</p> 
<p><strong>其次，它可以帮助你形成快速原型、即时验证和独立展示演示的优势，在迅捷的反馈中设计和编程。</strong>在我参与过的 Hackthon（黑客马拉松）数天的短期竞赛中，产品经理、程序员和数据科学家被认为是最合理的一组搭配，懂前端技术的程序员总是对互联网的用户交互、数据采集等方面特别有经验，在展示环节还可以快速地做出非常优秀的效果来。</p> 
<p><strong>再次，它可以帮助你建立产品思维。</strong>有人认为它能用来解决用户的核心问题，但实际上往往不是，解决核心问题主要还是靠后端的代码，但是前端的代码却是和用户最贴近和交互的部分，一个优秀的前端工程师总是具备非常强烈的产品属性。</p> 
<p>我记得以前在一个团队中负责一个 portal，有别的团队的同事私下里抱怨，说我们做的东西被 portal 一展示，用户都说好用 ，结果都默认是做 portal 的团队做的了。其实这是一个很现实的问题，无论产品的功和过，即便它的组件分层再深，用户的眼光往往只到很浅的层次就断了。有句话叫，“没有声音，再好的戏也出不来”，如果说，产品的功能性能是它的硬实力，是这出戏的画面，那么前端带来的用户体验在很多情况下就是这出戏的声音。</p> 
<p><strong>最后，前端技术是全栈工程的必备技能。</strong>它可以让你拍着胸脯对用户说，“这个可以做”，“这个不能做”，而不是说，“我去和前端确认一下这个交互能不能实现”。产品做出来，也不至于成为一个号称装着高性能引擎，却裹着破布毯子的“豪车”。</p> 
<p>遗憾的是，现实中有不少迈入职场没有几年，却已经给自己打上“前端工程师”“后端工程师”等标签的程序员朋友。我觉得他们可能是受到了某些万恶的职业生涯规划鸡汤的影响，这些标签会让他们在面对新技术和新机遇的时候，觉得身处“不属于自己的领域”而选择封闭自己。</p> 
<p>因此我的建议是：<strong>职业生涯不宜过早做过细的规划，除了技术深度，也需要在技术广度上积累，等到一定程度以后再来选择自己的发展分支路线。</strong>而且，某些特定技术领域，在程序员给自己打标签的时候，压根还没有发展成熟，等到发展起来，时机真正到来的时候，只有那些原本“不偏食”的优秀的程序员才能够脱颖而出。</p> 
<h2>思维模式的转变</h2> <p>如果你具备后端开发的经验，刚刚开始从后端转向前端，你可能会发现，有很多想当然的理解，不再适用，有很多想当然的解决方法，也不再有效。</p> <h3>1. 
应用事件驱动编程</h3> <p>来看这样一段 JavaScript 代码：</p> <pre style="position: relative;"><code> <table class="hljs-ln"> 
<tbody> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> console.log("1"); </div></td> </tr> <tr> 
<td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> setTimeout(function timeout() { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> console.log("2"); </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> }, 0); </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div 
class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></td> <td class="hljs-ln-code"> <div 
class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="7"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
setTimeout(function timeout() { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="8"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
console.log("3"); </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="9"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
}, 5000); </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" 
data-line-number="10"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="11"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> console.log("4"); </div></td> </tr> </tbody> 
</table></code> <div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 </div></pre> 
<p>代码中有四处打印，setTimeout 接受两个参数，第一个参数表示调用逻辑，第二个参数表示等待多少毫秒后再来执行该调用逻辑。</p> <p>你觉得打印结果应该是什么？</p> 
<p>是 1 -&gt; 2 -&gt; 4 -&gt; 3 吗？先别急着回答，我们好久没动手了，让我们来动动手看看结果吧。</p> <p>在 Chrome 中，任意一个页面打开浏览器的开发者工具，在 
Console 标签下，把上面的代码复制粘贴进去，于是我们看到这样的输出：</p> <pre style="position: relative;"><code> <table class="hljs-ln"> 
<tbody> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> 1 </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> 4 </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="3"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
undefined </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" 
data-line-number="4"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 2 </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> 3 </div></td> </tr> </tbody> </table></code> 
<div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 </div></pre> <p>这是为什么，上面的 
undefined 又是什么？</p> <p>为了回答上面的问题，我们需要了解 JavaScript 执行机制中的 Event Loop（事件循环）来理解上面的代码。</p> <p>在写后端代码的时候，你可能已经习惯了使用进程（process）或者线程（thread）来对付需要并行处理的逻辑，Java 
如此，Python 也如此。进程或线程可以说是“真并行”，虽然微观地看，它们可能会顺序占用 CPU 时间片，但宏观地看，代码在二者中执行互不阻塞，是并行执行的。</p> <p>而在 
JavaScript 中，在浏览器中，你看到眼花缭乱的效果和变化，却是“假并行”，是一个彻头彻尾的“骗局”。为什么这么说？</p> <p>因为浏览器中 JavaScript 代码的执行通常是单线程的（对于 
<a href="https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API/Using_web_workers">Web 
Worker</a> 这样的“例外”我们暂不讨论）——一个线程，一个调用栈，一次只做一件事。</p> <p>具体说来，在整个 JavaScript 的世界里，引起代码运行的行为是通过事件驱动的，并且<strong>全部是通过这唯一的一个勤奋的工作线程来执行的。那么当有事件产生的时候，这个工作线程不一定空闲，这就需要一个机制来让新产生的事件排队“等一等”</strong>，等当前的工作完成之后，再来处理它。这个机制就是 
Event Loop，这个等一等的事件，就被放在一个被称为事件（回调）队列的数据结构中。</p> <p>于是上面的代码，实际在运行的时候，从事件队列的角度看，是这样的：</p> <p><img 
src="https://static001.geekbang.org/resource/image/75/ff/757fe02c8910fe1d02be6d159ccf3cff.png" 
alt=""></p> <p>工作线程不断地从整个事件队列的右侧取得新的事件来处理执行，而新的事件只会从左侧放入：</p> <p>主代码最先被执行，从上往下顺序执行，因此顺序是：</p> 
<ul> <li>先打印 1；</li> <li>在遇到第一个 setTimeout 的时候，告知浏览器，请在 0 秒之后往事件队列内放入执行打印 2 的事件；</li> <li>在遇到第二个 
setTimeout 的时候，告知浏览器，请在 5 秒之后往事件队列内放入执行打印 3 的事件；</li> <li>再打印 4；</li> <li>主代码执行完毕，Chrome 的控制台打印这段代码的返回值，但因为它没有返回值，于是就打印 
undefined。</li> </ul> <p>浏览器老老实实地按照要求放入了打印 2 的事件，虽然是第 0 秒就放入，但是因为放入的时候主代码还在执行，因此只能等待，它等到主代码执行完毕后才得到执行，打印了 
2。</p> <p>5 秒钟后，浏览器按照要求往队列里放入了打印 3 的事件，于是 3 被打印出来。</p> <p>你看，通过这种方式，JavaScript 可以让不同的任务在一个线程中完成，而整个任务编排的机制，<strong>从代码的角度看，所有的逻辑都是通过七七八八的“异步回调”来完成的；而从程序员思维方式的角度看，以往基于线程的编程，变成了事件驱动的编程</strong>。</p> 
<p><img src="https://static001.geekbang.org/resource/image/8f/b9/8f475ade881eeaa7e49a442e80af2db9.jpg" 
alt=""></p> <p>上图来自 <a href="http://berb.github.io/diploma-thesis/original/043_threadsevents.html">The 
Case of Threads vs. Events</a>，很好地对比了两者的不同之处，其中：</p> <p>对于逻辑的触发，基于线程编程需要不断地由监视线程去查询被监视线程的某一个状态，如果状态满足某个条件，则触发相应的逻辑；而事件驱动则通过事件处理器，在事件发生时执行挂载的回调逻辑。不知你是否联想起了 
<a href="https://time.geekbang.org/column/article/136587">[第 03 讲]</a> 中我介绍的 push 和 pull，在这里，前者正类似于 
pull 的形式，而后者则类似于 push 的形式。</p> <p>基于线程的方式可以阻塞线程，等待时间或某个条件满足后再继续执行；而事件驱动则相反，发送一条消息后无阻塞等待回调的发生。阻塞线程的方式对资源的消耗往往更加显著，因为无论是否执行线程都被占用，但从人直观理解的角度来说，代码更直白，更符合人对顺序执行的理解；而事件驱动的方式则相反，资源消耗上更优，但是代码的执行顺序，以及由此产生的系统状态判断变得难以预知。</p> 
<p>请注意的是，在 JavaScript 中我们通常无法使用基于线程的编程，但是在很多情况下，例如 Java 和 Python 这些传统的后端编程语言中，我们可以混合使用基于线程和事件驱动的编程，它们是互不矛盾的。</p> 
<p>最后，为什么 JavaScript 要被设计成单线程的，多线程难道就不行吗？最重要的原因，就是为了让整个模型简单。如果引入多线程，这里有很多问题需要解决，例如事件处理的依赖关系（多线程的事件处理就不再是简单队列的挨个处理了），例如资源的共享和修改（无锁编程不再有效，必须要考虑同步等加锁机制了），整个系统会变得极其复杂，不只是对于浏览器的开发者而言，对前端的开发者也一样。</p> 
<p>另外，需要说明的是，浏览器的 JavaScript 执行是单线程的，但不代表浏览器是单线程的。浏览器通常还包含其它线程，比如说：</p> <ul> <li>界面（GUI）渲染线程，这个线程的执行和上述的 
JavaScript 工作线程是互斥的，即二者不可同时执行；</li> <li>事件触发线程，这个也很好理解，我们介绍过有一个神秘人物帮着往队列中放入事件（例子中的回调打印 2 和回调打印 
3），这个神秘人物就是事件触发线程。</li> </ul> <h3>2. 学写声明式代码</h3> <p>习惯于设计和书写大量的声明式代码，也是一个很重要的思维转变。</p> <p>我们在 
<a href="https://time.geekbang.org/column/article/140196">[第 07 讲]</a> 中讲过什么是声明式代码，为什么我们在写视图层的时候会大量使用声明式代码。HTML、CSS 
和 JavaScript，前端的三驾马车，两架是用声明式代码写的，我们应当记得自己做的是前端开发，而不是一个单纯的 JavaScript 写手。</p> <p><strong>声明式代码和命令式代码一样，都需要设计，且都需要测试。</strong>我见过不少工程师能够写出优秀的命令式代码，甚至已经习惯了，但是在写声明式代码的时候，却缺乏条理。</p> 
<p>举例来说，设计页面的时候，要先设计布局，抓住整棵 DOM 树中核心的部分，自上而下地去划分区域，哪些是静态的区域，哪些是动态生成的，并合理设计可重用组件。再比如说，使用声明式代码处理模板中呈现数据的格式转换，使得呈现部分的代码更纯粹、自然，具体请参看 
[第 16 讲] 中的过滤器。</p> <h3>3. 培养交互思维</h3> <p>前端工程师必须具备敏感的交互思维。通常来说，前端的代码，兼具着“甲方”和“乙方”的角色：</p> 
<ul> <li>对用户和前端的交互来说，客户是甲方，享受服务；前端就是乙方，提供服务。</li> <li>对和服务端的交互来说，前端就是甲方，从服务端获得数据和服务；服务端就是乙方，提供数据和服务。</li> 
</ul> <p>而无论是和用户，还是和服务端的交互，都是学习前端技术中需要领会的部分。<strong>和用户的交互要求开发前端的程序员具备产品思维，而和服务端的交互则要求开发前端的程序员具备工程思维。</strong></p> 
<p>一头是用户，另一头是后端工程师，前端的开发人员，在整个庞大的研发体系中，既像粘合剂，又像润滑剂，要从产品和工程两个视角去思考问题，作出判断；不但要交付实实在在的功能，要引导好的工程架构，还要给用户带来优秀的产品体验。</p> 
<h2>总结思考</h2> <p>今天我们首先强调了对于基于 Web 的全栈学习来说，学习前端技术的重要性，接着我们介绍了前端思维的几个转变，特别是事件驱动编程。希望你已经了解了 JavaScript 
的单线程运行机制，并能够慢慢习惯不断在代码中与异步和回调打交道。</p> <p>下面留两个思考问题：</p> <ul> <li>你在技术团队中主要扮演什么角色，你对前端技术的认识是怎样的？</li> 
<li>为什么 JavaScript 中，没有像 Java 或 Python 一样的 sleep 方法？毕竟，我就是想让当前执行过程稍等一下，再继续后面的逻辑，有 sleep 的话多方便啊。</li> 
</ul> <p>最后，我想说的是，以前有句话叫做，“狗拿耗子，多管闲事”，但是我们在学习前端技术的时候，却要反过来，我们不但要多管闲事，还要“越管越多”，要多去想想类似的后端技术是怎样实现的。那在学习后端技术的时候，道理也是一样的，也要联想。</p> 
<p>无论是早些年的 <a href="http://www.gwtproject.org/">GWT</a>，后端 Java 程序员写出了优秀的基于 Ajax 的跨浏览器应用；还是这些年的 
<a href="https://nodejs.org/en/">Node.js</a>，利用强大的 V8 引擎把数不清的 JavaScript 异步回调也写到后端去……技术是没有边界的，前端和后端的技术当然也包括在内。</p> 
<p>好，今天的内容就到这里，欢迎你和我讨论，也欢迎你邀请你的朋友一起阅读、学习。</p> <h2>扩展阅读</h2> <ul> <li>你可能听过这样一句话，“任何能用 JavaScript 
写的应用，最终都会用 JavaScript 来实现。”这句话最初来自 <a href="https://blog.codinghorror.com/the-principle-of-least-power/">The 
Principle of Least Power</a> 这篇文章，写于 2007 年。</li> <li>有位工程师做了一个<a href="http://latentflip.com/loupe/?code=Y29uc29sZS5sb2coIjEiKTsKCnNldFRpbWVvdXQoZnVuY3Rpb24gdGltZW91dCgpIHsKICAgIGNvbnNvbGUubG9nKCIyIik7Cn0sIDApOwoKc2V0VGltZW91dChmdW5jdGlvbiB0aW1lb3V0KCkgewogICAgY29uc29sZS5sb2coIjMiKTsKfSwgNTAwMCk7Cgpjb25zb2xlLmxvZygiNCIpOw%3D%3D!!!PGJ1dHRvbj5DbGljayBtZSE8L2J1dHRvbj4%3D">名为 
Loupe 的网站</a>，用动画来形象地展示事件循环的过程，本文的例子也可以在它上面运行。</li> <li>为什么浏览器中 JavaScript 代码的执行设计成单线程的，还有一个文中没有提到的原因，就是多线程的 
GUI 特别容易死锁。这篇文章 <a href="https://community.oracle.com/blogs/kgh/2004/10/19/multithreaded-toolkits-failed-dream">Multithreaded 
toolkits: A failed dream?</a> 描述了其中的缘由，大致是说 GUI 的行为大多都是从更高层的抽象一层一层往下调用到更低层的抽象、具体工具类实现，再到操作系统；而事件则是反过来，从下往上冒泡。结果就是两个方向相反的行为在碰头，给资源加锁的时候一个正序，一个逆序，极其容易出现互相等待而饿死的情况，而这种情况下要彻底解决这一问题的难度无异于“逆转潮汐”。</li> 
<li><a href="https://www.html5rocks.com/zh/tutorials/internals/howbrowserswork/">浏览器的工作原理：新式网络浏览器幕后揭秘</a>，这可能是在互联网上流传最广泛地介绍浏览器工作原理的中文文章，非常推荐。</li> 
</ul> <p><img src="https://static001.geekbang.org/resource/image/11/8b/1181246bbd51ce348d5729696d1dc28b.jpg" 
alt="unpreview"></p>', '', 'book', 0, 'full_html', 'zh-hans', 34, 34) 
 {executed in 1 msec}
2020-11-19 11:21:04.764 INFO  jdbc.sqltiming Line:373 - select nodefiledd0_.nid as nid1_9_, nodefiledd0_.changed as changed2_9_, nodefiledd0_.created 
as created3_9_, nodefiledd0_.default_langcode as default_4_9_, nodefiledd0_.langcode as langcode5_9_, 
nodefiledd0_.promote as promote6_9_, nodefiledd0_.revision_translation_affected as revision7_9_, 
nodefiledd0_.status as status8_9_, nodefiledd0_.sticky as sticky9_9_, nodefiledd0_.title as 
title10_9_, nodefiledd0_.type as type11_9_, nodefiledd0_.uid as uid12_9_, nodefiledd0_.vid 
as vid13_9_ from node_field_data nodefiledd0_ where nodefiledd0_.nid=34 
 {executed in 0 msec}
2020-11-19 11:21:04.764 INFO  jdbc.resultsettable Line:610 - 
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|-----|----|----|
|nid |changed |created |default_langcode |langcode |promote |revision_translation_affected |status |sticky |title |type |uid |vid |
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|-----|----|----|
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|-----|----|----|

2020-11-19 11:21:04.765 INFO  jdbc.sqltiming Line:373 - select nodefieldr0_.nid as nid1_10_0_, nodefieldr0_.changed as changed2_10_0_, nodefieldr0_.created 
as created3_10_0_, nodefieldr0_.default_langcode as default_4_10_0_, nodefieldr0_.langcode 
as langcode5_10_0_, nodefieldr0_.promote as promote6_10_0_, nodefieldr0_.revision_translation_affected 
as revision7_10_0_, nodefieldr0_.status as status8_10_0_, nodefieldr0_.sticky as sticky9_10_0_, 
nodefieldr0_.title as title10_10_0_, nodefieldr0_.uid as uid11_10_0_, nodefieldr0_.vid as vid12_10_0_ 
from node_field_revision nodefieldr0_ where nodefieldr0_.nid=34 
 {executed in 0 msec}
2020-11-19 11:21:04.766 INFO  jdbc.resultsettable Line:610 - 
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|----|----|
|nid |changed |created |default_langcode |langcode |promote |revision_translation_affected |status |sticky |title |uid |vid |
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|----|----|
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|----|----|

2020-11-19 11:21:04.767 INFO  jdbc.sqltiming Line:373 - insert into node_field_revision (changed, created, default_langcode, langcode, promote, revision_translation_affected, 
status, sticky, title, uid, vid, nid) values (1605756064, 1605756064, 1, 'zh-hans', 0, 1, 1, 
0, '14丨别有洞天：从后端到前端', 1, 34, 34) 
 {executed in 0 msec}
2020-11-19 11:21:04.770 INFO  jdbc.sqltiming Line:373 - select nodefiledd0_.nid as nid1_9_0_, nodefiledd0_.changed as changed2_9_0_, nodefiledd0_.created 
as created3_9_0_, nodefiledd0_.default_langcode as default_4_9_0_, nodefiledd0_.langcode as 
langcode5_9_0_, nodefiledd0_.promote as promote6_9_0_, nodefiledd0_.revision_translation_affected 
as revision7_9_0_, nodefiledd0_.status as status8_9_0_, nodefiledd0_.sticky as sticky9_9_0_, 
nodefiledd0_.title as title10_9_0_, nodefiledd0_.type as type11_9_0_, nodefiledd0_.uid as uid12_9_0_, 
nodefiledd0_.vid as vid13_9_0_ from node_field_data nodefiledd0_ where nodefiledd0_.nid=34 
 {executed in 0 msec}
2020-11-19 11:21:04.771 INFO  jdbc.resultsettable Line:610 - 
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|-----|----|----|
|nid |changed |created |default_langcode |langcode |promote |revision_translation_affected |status |sticky |title |type |uid |vid |
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|-----|----|----|
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|-----|----|----|

2020-11-19 11:21:04.772 INFO  jdbc.sqltiming Line:373 - insert into node_field_data (changed, created, default_langcode, langcode, promote, revision_translation_affected, 
status, sticky, title, type, uid, vid, nid) values (1605756064, 1605756064, 1, 'zh-hans', 0, 
1, 1, 0, '14丨别有洞天：从后端到前端', 'book', 1, 34, 34) 
 {executed in 0 msec}
2020-11-19 11:21:04.776 INFO  jdbc.sqltiming Line:373 - select bookfieldm0_.entity_id as entity_i1_7_, bookfieldm0_.bundle as bundle2_7_, bookfieldm0_.delta 
as delta3_7_, bookfieldm0_.langcode as langcode4_7_, bookfieldm0_.field_media_value as field_me5_7_, 
bookfieldm0_.revision_id as revision6_7_ from node__field_media bookfieldm0_ where bookfieldm0_.entity_id=34 
 {executed in 0 msec}
2020-11-19 11:21:04.776 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------------|------------|
|entity_id |bundle |delta |langcode |field_media_value |revision_id |
|----------|-------|------|---------|------------------|------------|
|----------|-------|------|---------|------------------|------------|

2020-11-19 11:21:04.777 INFO  jdbc.sqltiming Line:373 - select bookfieldm0_.entity_id as entity_i1_7_0_, bookfieldm0_.bundle as bundle2_7_0_, bookfieldm0_.delta 
as delta3_7_0_, bookfieldm0_.langcode as langcode4_7_0_, bookfieldm0_.field_media_value as 
field_me5_7_0_, bookfieldm0_.revision_id as revision6_7_0_ from node__field_media bookfieldm0_ 
where bookfieldm0_.entity_id=34 
 {executed in 0 msec}
2020-11-19 11:21:04.777 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------------|------------|
|entity_id |bundle |delta |langcode |field_media_value |revision_id |
|----------|-------|------|---------|------------------|------------|
|----------|-------|------|---------|------------------|------------|

2020-11-19 11:21:04.778 INFO  jdbc.sqltiming Line:373 - insert into node__field_media (bundle, delta, langcode, field_media_value, revision_id, entity_id) 
values ('book', 0, 'zh-hans', 'https://qdall01.baidupcs.com/file/be2d7a25bbca12eb11992891901b17f5?bkt=en-d3a65691252603d3a0bd9a2d9b6bb3b22779d834633fff1a6e88447a1b9f91dec9b9d1231b6a8de7&fid=3757516097-778750-716887119671835&time=1605756063&sign=FDTAXUGERLQlBHSKfWqir-DCb740ccc5511e5e8fedcff06b081203-1IYBBCAG%2Bb9AzPAvUjogttCk4Jk%3D&to=92&size=14645473&sta_dx=14645473&sta_cs=2007&sta_ft=m4a&sta_ct=7&sta_mt=0&fm2=MH%2CYangquan%2CAnywhere%2C%2Cshanghai%2Cct&ctime=1571030255&mtime=1605754778&resv0=-1&resv1=0&resv2=rlim&resv3=2&resv4=14645473&vuk=3757516097&iv=0&htype=&randtype=em&newver=1&newfm=1&secfm=1&flow_ver=3&pkey=en-9421d65cb42737833d6aae194a6a33fce436e93c91e64628ca9079d2c6b9b311970ec293184e82df&sl=76480590&expires=8h&rt=pr&r=408416782&mlogid=7502251028512664463&vbdid=2247232042&fin=14%E4%B8%A8%E5%88%AB%E6%9C%89%E6%B4%9E%E5%A4%A9%EF%BC%9A%E4%BB%8E%E5%90%8E%E7%AB%AF%E5%88%B0%E5%89%8D%E7%AB%AF.m4a&bflag=92,34-92&rtype=1&dp-logid=7502251028512664463&dp-callid=0.1.1&hps=1&tsl=80&csl=80&fsl=-1&csign=yVzLQPCt4DblfMLqd2BCjd2RnqQ%3D&so=0&ut=6&uter=0&serv=0&uc=1458616558&ti=92f9da3c8a3331aef8ad8cac1a175cede47622267f3dbc35&hflag=30&adg=c_15d187590626c675056c89c8026cfc17&reqlabel=778750_l_1bf9445f27094ab64c9f1cb0bdf7ccfa_-1_dd2c452b8e51a0c74130d7cf32c48a2d&ibp=1&by=themis&filename=14%E4%B8%A8%E5%88%AB%E6%9C%89%E6%B4%9E%E5%A4%A9%EF%BC%9A%E4%BB%8E%E5%90%8E%E7%AB%AF%E5%88%B0%E5%89%8D%E7%AB%AF.m4a', 
34, 34) 
 {executed in 0 msec}
2020-11-19 11:21:04.781 INFO  jdbc.sqltiming Line:373 - select nodefieldm0_.entity_id as entity_i1_16_0_, nodefieldm0_.bundle as bundle2_16_0_, nodefieldm0_.delta 
as delta3_16_0_, nodefieldm0_.langcode as langcode4_16_0_, nodefieldm0_.field_media_value as 
field_me5_16_0_, nodefieldm0_.revision_id as revision6_16_0_ from node_revision__field_media 
nodefieldm0_ where nodefieldm0_.entity_id=34 
 {executed in 0 msec}
2020-11-19 11:21:04.782 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------------|------------|
|entity_id |bundle |delta |langcode |field_media_value |revision_id |
|----------|-------|------|---------|------------------|------------|
|----------|-------|------|---------|------------------|------------|

2020-11-19 11:21:04.783 INFO  jdbc.sqltiming Line:373 - insert into node_revision__field_media (bundle, delta, langcode, field_media_value, revision_id, 
entity_id) values ('book', 0, 'zh-hans', 'https://qdall01.baidupcs.com/file/be2d7a25bbca12eb11992891901b17f5?bkt=en-d3a65691252603d3a0bd9a2d9b6bb3b22779d834633fff1a6e88447a1b9f91dec9b9d1231b6a8de7&fid=3757516097-778750-716887119671835&time=1605756063&sign=FDTAXUGERLQlBHSKfWqir-DCb740ccc5511e5e8fedcff06b081203-1IYBBCAG%2Bb9AzPAvUjogttCk4Jk%3D&to=92&size=14645473&sta_dx=14645473&sta_cs=2007&sta_ft=m4a&sta_ct=7&sta_mt=0&fm2=MH%2CYangquan%2CAnywhere%2C%2Cshanghai%2Cct&ctime=1571030255&mtime=1605754778&resv0=-1&resv1=0&resv2=rlim&resv3=2&resv4=14645473&vuk=3757516097&iv=0&htype=&randtype=em&newver=1&newfm=1&secfm=1&flow_ver=3&pkey=en-9421d65cb42737833d6aae194a6a33fce436e93c91e64628ca9079d2c6b9b311970ec293184e82df&sl=76480590&expires=8h&rt=pr&r=408416782&mlogid=7502251028512664463&vbdid=2247232042&fin=14%E4%B8%A8%E5%88%AB%E6%9C%89%E6%B4%9E%E5%A4%A9%EF%BC%9A%E4%BB%8E%E5%90%8E%E7%AB%AF%E5%88%B0%E5%89%8D%E7%AB%AF.m4a&bflag=92,34-92&rtype=1&dp-logid=7502251028512664463&dp-callid=0.1.1&hps=1&tsl=80&csl=80&fsl=-1&csign=yVzLQPCt4DblfMLqd2BCjd2RnqQ%3D&so=0&ut=6&uter=0&serv=0&uc=1458616558&ti=92f9da3c8a3331aef8ad8cac1a175cede47622267f3dbc35&hflag=30&adg=c_15d187590626c675056c89c8026cfc17&reqlabel=778750_l_1bf9445f27094ab64c9f1cb0bdf7ccfa_-1_dd2c452b8e51a0c74130d7cf32c48a2d&ibp=1&by=themis&filename=14%E4%B8%A8%E5%88%AB%E6%9C%89%E6%B4%9E%E5%A4%A9%EF%BC%9A%E4%BB%8E%E5%90%8E%E7%AB%AF%E5%88%B0%E5%89%8D%E7%AB%AF.m4a', 
34, 34) 
 {executed in 0 msec}
2020-11-19 11:21:04.787 INFO  jdbc.sqltiming Line:373 - select bookfieldc0_.entity_id as entity_i1_4_, bookfieldc0_.bundle as bundle2_4_, bookfieldc0_.field_comment_value 
as field_co3_4_, bookfieldc0_.delta as delta4_4_, bookfieldc0_.field_comment_format as field_co5_4_, 
bookfieldc0_.langcode as langcode6_4_, bookfieldc0_.revision_id as revision7_4_ from node__field_comment 
bookfieldc0_ where bookfieldc0_.entity_id=34 
 {executed in 1 msec}
2020-11-19 11:21:04.787 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|--------------------|------|---------------------|---------|------------|
|entity_id |bundle |field_comment_value |delta |field_comment_format |langcode |revision_id |
|----------|-------|--------------------|------|---------------------|---------|------------|
|----------|-------|--------------------|------|---------------------|---------|------------|

2020-11-19 11:21:04.787 INFO  jdbc.sqltiming Line:373 - select bookfieldc0_.entity_id as entity_i1_4_0_, bookfieldc0_.bundle as bundle2_4_0_, bookfieldc0_.field_comment_value 
as field_co3_4_0_, bookfieldc0_.delta as delta4_4_0_, bookfieldc0_.field_comment_format as 
field_co5_4_0_, bookfieldc0_.langcode as langcode6_4_0_, bookfieldc0_.revision_id as revision7_4_0_ 
from node__field_comment bookfieldc0_ where bookfieldc0_.entity_id=34 
 {executed in 0 msec}
2020-11-19 11:21:04.788 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|--------------------|------|---------------------|---------|------------|
|entity_id |bundle |field_comment_value |delta |field_comment_format |langcode |revision_id |
|----------|-------|--------------------|------|---------------------|---------|------------|
|----------|-------|--------------------|------|---------------------|---------|------------|

2020-11-19 11:21:04.792 INFO  jdbc.sqltiming Line:373 - insert into node__field_comment (bundle, field_comment_value, delta, field_comment_format, 
langcode, revision_id, entity_id) values ('book', '<li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/0f/94/56/8132292a.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>Carson</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2019-10-11 </div> </div> <!----> 
</div> <div> <div class="_3M6kV3zb_0"> Javascript 是单线程+事件驱动，单线程就是主线程。Javscript 必须让主线程一直处于运行当中，才能实现事件驱动。它无法通过简单的 
sleep 主线程来达到 sleep 后继续执行某件事目的。 <br> <br>以上是我的理解，不确定是否有误。 </div> <div class="_2r3UB1GX_0"> <span>展开</span><i 
class="iconfont"></i> </div> <div class="_2xNIY4NG_0"> <p class="_33BLbmw4_0">作者回复: 👍</p> 
</div> <div class="_1w8H0ktn_0 _2A421P4G_0"> <div class="_2jsFl-X0_0"> <i class="iconfont"></i> 
<span></span> </div> <div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class="">3</span> 
</div> <!----> </div> </div> </div></li> <li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/0f/f5/b9/888fe350.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>不记年</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2019-10-12 </div> </div> <!----> 
</div> <div> <div class="_3M6kV3zb_0"> 思考题的第二个， 我觉得应该是因为js是单线程的，如果设置sleep的话，就是阻塞唯一的线程，而又没有一个监视线程去pull。而且按照事件驱动编程的逻辑，如果想sleep当前正常执行的事件的话，应该也使用事件回调的方式，这样就只阻塞事件而不是线程。 
</div> <div class="_2r3UB1GX_0"> <span>展开</span><i class="iconfont"></i> </div> <div class="_2xNIY4NG_0"> 
<p class="_33BLbmw4_0">作者回复: 👍</p> </div> <div class="_1w8H0ktn_0 _2A421P4G_0"> <div class="_2jsFl-X0_0"> 
<i class="iconfont"></i> <span></span> </div> <div class="_2P4B1Hdm_0"> <i class="iconfont"></i> 
<span class=""></span> </div> <!----> </div> </div> </div></li> <li class="reJj6Thl_0"><img 
src="https://static001.geekbang.org/account/avatar/00/0f/f5/b9/888fe350.jpg" class="_2273kGdT_0"> 
<div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> <span>不记年</span> 
<!----> </div> <div class="_1H1Z49Dr_0"> 2019-10-12 </div> </div> <!----> </div> <div> <div 
class="_3M6kV3zb_0"> 我所理解的js 执行过程分为两部分，第一部分是做一些初始化的工作， 初始化工作包括初始化一些参数之类的，以及告知浏览器事件以及触发的逻辑。第二部分是事件循环，不断地往事件队列中抓取事件执行。在这整个过程中。 
</div> <div class="_2r3UB1GX_0"> <span>展开</span><i class="iconfont"></i> </div> <!----> <div 
class="_1w8H0ktn_0 _2A421P4G_0"> <div class="_2jsFl-X0_0"> <i class="iconfont"></i> <span></span> 
</div> <div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class=""></span> </div> <!----> 
</div> </div> </div></li> <li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/16/e7/a0/9a962a74.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>joker</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2019-10-11 </div> </div> <!----> 
</div> <div> <div class="_3M6kV3zb_0"> 他是执行哪段代码出的underfined </div> <div class="_2r3UB1GX_0"> 
<span>展开</span><i class="iconfont"></i> </div> <div class="_2xNIY4NG_0"> <p class="_33BLbmw4_0">作者回复: 
console.log("4");</p> </div> <div class="_1w8H0ktn_0 _2A421P4G_0"> <div class="_2jsFl-X0_0"> 
<i class="iconfont"></i> <span>1</span> </div> <div class="_2P4B1Hdm_0"> <i class="iconfont"></i> 
<span class=""></span> </div> <!----> </div> </div> </div></li> <li class="reJj6Thl_0"><img 
src="https://static001.geekbang.org/account/avatar/00/16/bc/25/1c92a90c.jpg" class="_2273kGdT_0"> 
<div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> <span>tt</span> 
<!----> </div> <div class="_1H1Z49Dr_0"> 2019-10-11 </div> </div> <!----> </div> <div> <div 
class="_3M6kV3zb_0"> 我一直从事后端开发，但是经过了几个Web项目后，对前端的认识发生了转变，真的就像老师文中所说的那样。这个感触在直接面向用户时尤其明显，感觉连原有的部门开发流程都不适应了。 
<br> <br>至于为什么没有sleep，是不是因为sleep里指定的时间只对事件分发线程有效，而真正被JavaScript执行线程从事件对列中取出来执行时，时间已经非常不准确了。 
</div> <div class="_2r3UB1GX_0"> <span>展开</span><i class="iconfont"></i> </div> <div class="_2xNIY4NG_0"> 
<p class="_33BLbmw4_0">作者回复: 第二问不太正确，你可以联系文中介绍的 event loop 再想想。</p> </div> <div class="_1w8H0ktn_0 
_2A421P4G_0"> <div class="_2jsFl-X0_0"> <i class="iconfont"></i> <span></span> </div> <div 
class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class=""></span> </div> <!----> </div> 
</div> </div></li> <li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/0f/f8/99/8e760987.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>許敲敲</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2019-10-11 </div> </div> <!----> 
</div> <div> <div class="_3M6kV3zb_0"> Web developer ,工作中就是开发公司的组件库，客户报defect 去fix 。想说前端水好深， 
WebGL ,tensorflow.js ,webassembly 这些技术都好强悍 </div> <div class="_2r3UB1GX_0"> <span>展开</span><i 
class="iconfont"></i> </div> <!----> <div class="_1w8H0ktn_0 _2A421P4G_0"> <div class="_2jsFl-X0_0"> 
<i class="iconfont"></i> <span></span> </div> <div class="_2P4B1Hdm_0"> <i class="iconfont"></i> 
<span class=""></span> </div> <!----> </div> </div> </div></li>', 0, 'full_html', 'zh-hans', 
34, 34) 
 {executed in 3 msec}
2020-11-19 11:21:04.796 INFO  jdbc.sqltiming Line:373 - select nodefieldc0_.entity_id as entity_i1_13_0_, nodefieldc0_.bundle as bundle2_13_0_, nodefieldc0_.field_comment_value 
as field_co3_13_0_, nodefieldc0_.delta as delta4_13_0_, nodefieldc0_.field_comment_format as 
field_co5_13_0_, nodefieldc0_.langcode as langcode6_13_0_, nodefieldc0_.revision_id as revision7_13_0_ 
from node_revision__field_comment nodefieldc0_ where nodefieldc0_.entity_id=34 
 {executed in 1 msec}
2020-11-19 11:21:04.796 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|--------------------|------|---------------------|---------|------------|
|entity_id |bundle |field_comment_value |delta |field_comment_format |langcode |revision_id |
|----------|-------|--------------------|------|---------------------|---------|------------|
|----------|-------|--------------------|------|---------------------|---------|------------|

2020-11-19 11:21:04.801 INFO  jdbc.sqltiming Line:373 - insert into node_revision__field_comment (bundle, field_comment_value, delta, field_comment_format, 
langcode, revision_id, entity_id) values ('book', '<li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/0f/94/56/8132292a.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>Carson</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2019-10-11 </div> </div> <!----> 
</div> <div> <div class="_3M6kV3zb_0"> Javascript 是单线程+事件驱动，单线程就是主线程。Javscript 必须让主线程一直处于运行当中，才能实现事件驱动。它无法通过简单的 
sleep 主线程来达到 sleep 后继续执行某件事目的。 <br> <br>以上是我的理解，不确定是否有误。 </div> <div class="_2r3UB1GX_0"> <span>展开</span><i 
class="iconfont"></i> </div> <div class="_2xNIY4NG_0"> <p class="_33BLbmw4_0">作者回复: 👍</p> 
</div> <div class="_1w8H0ktn_0 _2A421P4G_0"> <div class="_2jsFl-X0_0"> <i class="iconfont"></i> 
<span></span> </div> <div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class="">3</span> 
</div> <!----> </div> </div> </div></li> <li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/0f/f5/b9/888fe350.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>不记年</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2019-10-12 </div> </div> <!----> 
</div> <div> <div class="_3M6kV3zb_0"> 思考题的第二个， 我觉得应该是因为js是单线程的，如果设置sleep的话，就是阻塞唯一的线程，而又没有一个监视线程去pull。而且按照事件驱动编程的逻辑，如果想sleep当前正常执行的事件的话，应该也使用事件回调的方式，这样就只阻塞事件而不是线程。 
</div> <div class="_2r3UB1GX_0"> <span>展开</span><i class="iconfont"></i> </div> <div class="_2xNIY4NG_0"> 
<p class="_33BLbmw4_0">作者回复: 👍</p> </div> <div class="_1w8H0ktn_0 _2A421P4G_0"> <div class="_2jsFl-X0_0"> 
<i class="iconfont"></i> <span></span> </div> <div class="_2P4B1Hdm_0"> <i class="iconfont"></i> 
<span class=""></span> </div> <!----> </div> </div> </div></li> <li class="reJj6Thl_0"><img 
src="https://static001.geekbang.org/account/avatar/00/0f/f5/b9/888fe350.jpg" class="_2273kGdT_0"> 
<div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> <span>不记年</span> 
<!----> </div> <div class="_1H1Z49Dr_0"> 2019-10-12 </div> </div> <!----> </div> <div> <div 
class="_3M6kV3zb_0"> 我所理解的js 执行过程分为两部分，第一部分是做一些初始化的工作， 初始化工作包括初始化一些参数之类的，以及告知浏览器事件以及触发的逻辑。第二部分是事件循环，不断地往事件队列中抓取事件执行。在这整个过程中。 
</div> <div class="_2r3UB1GX_0"> <span>展开</span><i class="iconfont"></i> </div> <!----> <div 
class="_1w8H0ktn_0 _2A421P4G_0"> <div class="_2jsFl-X0_0"> <i class="iconfont"></i> <span></span> 
</div> <div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class=""></span> </div> <!----> 
</div> </div> </div></li> <li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/16/e7/a0/9a962a74.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>joker</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2019-10-11 </div> </div> <!----> 
</div> <div> <div class="_3M6kV3zb_0"> 他是执行哪段代码出的underfined </div> <div class="_2r3UB1GX_0"> 
<span>展开</span><i class="iconfont"></i> </div> <div class="_2xNIY4NG_0"> <p class="_33BLbmw4_0">作者回复: 
console.log("4");</p> </div> <div class="_1w8H0ktn_0 _2A421P4G_0"> <div class="_2jsFl-X0_0"> 
<i class="iconfont"></i> <span>1</span> </div> <div class="_2P4B1Hdm_0"> <i class="iconfont"></i> 
<span class=""></span> </div> <!----> </div> </div> </div></li> <li class="reJj6Thl_0"><img 
src="https://static001.geekbang.org/account/avatar/00/16/bc/25/1c92a90c.jpg" class="_2273kGdT_0"> 
<div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> <span>tt</span> 
<!----> </div> <div class="_1H1Z49Dr_0"> 2019-10-11 </div> </div> <!----> </div> <div> <div 
class="_3M6kV3zb_0"> 我一直从事后端开发，但是经过了几个Web项目后，对前端的认识发生了转变，真的就像老师文中所说的那样。这个感触在直接面向用户时尤其明显，感觉连原有的部门开发流程都不适应了。 
<br> <br>至于为什么没有sleep，是不是因为sleep里指定的时间只对事件分发线程有效，而真正被JavaScript执行线程从事件对列中取出来执行时，时间已经非常不准确了。 
</div> <div class="_2r3UB1GX_0"> <span>展开</span><i class="iconfont"></i> </div> <div class="_2xNIY4NG_0"> 
<p class="_33BLbmw4_0">作者回复: 第二问不太正确，你可以联系文中介绍的 event loop 再想想。</p> </div> <div class="_1w8H0ktn_0 
_2A421P4G_0"> <div class="_2jsFl-X0_0"> <i class="iconfont"></i> <span></span> </div> <div 
class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class=""></span> </div> <!----> </div> 
</div> </div></li> <li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/0f/f8/99/8e760987.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>許敲敲</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2019-10-11 </div> </div> <!----> 
</div> <div> <div class="_3M6kV3zb_0"> Web developer ,工作中就是开发公司的组件库，客户报defect 去fix 。想说前端水好深， 
WebGL ,tensorflow.js ,webassembly 这些技术都好强悍 </div> <div class="_2r3UB1GX_0"> <span>展开</span><i 
class="iconfont"></i> </div> <!----> <div class="_1w8H0ktn_0 _2A421P4G_0"> <div class="_2jsFl-X0_0"> 
<i class="iconfont"></i> <span></span> </div> <div class="_2P4B1Hdm_0"> <i class="iconfont"></i> 
<span class=""></span> </div> <!----> </div> </div> </div></li>', 0, 'full_html', 'zh-hans', 
34, 34) 
 {executed in 3 msec}
2020-11-19 11:21:04.804 INFO  jdbc.sqltiming Line:373 - select bookfieldt0_.entity_id as entity_i1_8_, bookfieldt0_.bundle as bundle2_8_, bookfieldt0_.delta 
as delta3_8_, bookfieldt0_.langcode as langcode4_8_, bookfieldt0_.revision_id as revision5_8_, 
bookfieldt0_.field_thumb_value as field_th6_8_ from node__field_thumb bookfieldt0_ where bookfieldt0_.entity_id=34 
 {executed in 0 msec}
2020-11-19 11:21:04.805 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------|------------------|
|entity_id |bundle |delta |langcode |revision_id |field_thumb_value |
|----------|-------|------|---------|------------|------------------|
|----------|-------|------|---------|------------|------------------|

2020-11-19 11:21:04.806 INFO  jdbc.sqltiming Line:373 - select bookfieldt0_.entity_id as entity_i1_8_0_, bookfieldt0_.bundle as bundle2_8_0_, bookfieldt0_.delta 
as delta3_8_0_, bookfieldt0_.langcode as langcode4_8_0_, bookfieldt0_.revision_id as revision5_8_0_, 
bookfieldt0_.field_thumb_value as field_th6_8_0_ from node__field_thumb bookfieldt0_ where 
bookfieldt0_.entity_id=34 
 {executed in 1 msec}
2020-11-19 11:21:04.806 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------|------------------|
|entity_id |bundle |delta |langcode |revision_id |field_thumb_value |
|----------|-------|------|---------|------------|------------------|
|----------|-------|------|---------|------------|------------------|

2020-11-19 11:21:04.807 INFO  jdbc.sqltiming Line:373 - insert into node__field_thumb (bundle, delta, langcode, revision_id, field_thumb_value, entity_id) 
values ('book', 0, 'zh-hans', 34, 'https://static001.geekbang.org/resource/image/65/7e/65a5531e257c7468659493612a6ea37e.jpg', 
34) 
 {executed in 0 msec}
2020-11-19 11:21:04.811 INFO  jdbc.sqltiming Line:373 - select nodefieldt0_.entity_id as entity_i1_17_0_, nodefieldt0_.bundle as bundle2_17_0_, nodefieldt0_.delta 
as delta3_17_0_, nodefieldt0_.langcode as langcode4_17_0_, nodefieldt0_.revision_id as revision5_17_0_, 
nodefieldt0_.field_thumb_value as field_th6_17_0_ from node_revision__field_thumb nodefieldt0_ 
where nodefieldt0_.entity_id=34 
 {executed in 0 msec}
2020-11-19 11:21:04.811 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------|------------------|
|entity_id |bundle |delta |langcode |revision_id |field_thumb_value |
|----------|-------|------|---------|------------|------------------|
|----------|-------|------|---------|------------|------------------|

2020-11-19 11:21:04.813 INFO  jdbc.sqltiming Line:373 - insert into node_revision__field_thumb (bundle, delta, langcode, revision_id, field_thumb_value, 
entity_id) values ('book', 0, 'zh-hans', 34, 'https://static001.geekbang.org/resource/image/65/7e/65a5531e257c7468659493612a6ea37e.jpg', 
34) 
 {executed in 1 msec}
2020-11-19 11:21:04.816 INFO  jdbc.sqltiming Line:373 - select bookfieldf0_.entity_id as entity_i1_5_0_, bookfieldf0_.bundle as bundle2_5_0_, bookfieldf0_.delta 
as delta3_5_0_, bookfieldf0_.field_fenlei_target_id as field_fe4_5_0_, bookfieldf0_.langcode 
as langcode5_5_0_, bookfieldf0_.revision_id as revision6_5_0_ from node__field_fenlei bookfieldf0_ 
where bookfieldf0_.entity_id=34 
 {executed in 0 msec}
2020-11-19 11:21:04.817 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------------|---------|------------|
|entity_id |bundle |delta |field_fenlei_target_id |langcode |revision_id |
|----------|-------|------|-----------------------|---------|------------|
|----------|-------|------|-----------------------|---------|------------|

2020-11-19 11:21:04.818 INFO  jdbc.sqltiming Line:373 - insert into node__field_fenlei (bundle, delta, field_fenlei_target_id, langcode, revision_id, 
entity_id) values ('book', 0, 1, 'zh-hans', 34, 34) 
 {executed in 0 msec}
2020-11-19 11:21:04.821 INFO  jdbc.sqltiming Line:373 - select nodefieldf0_.entity_id as entity_i1_14_0_, nodefieldf0_.bundle as bundle2_14_0_, nodefieldf0_.delta 
as delta3_14_0_, nodefieldf0_.field_fenlei_target_id as field_fe4_14_0_, nodefieldf0_.langcode 
as langcode5_14_0_, nodefieldf0_.revision_id as revision6_14_0_ from node_revision__field_fenlei 
nodefieldf0_ where nodefieldf0_.entity_id=34 
 {executed in 0 msec}
2020-11-19 11:21:04.822 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------------|---------|------------|
|entity_id |bundle |delta |field_fenlei_target_id |langcode |revision_id |
|----------|-------|------|-----------------------|---------|------------|
|----------|-------|------|-----------------------|---------|------------|

2020-11-19 11:21:04.823 INFO  jdbc.sqltiming Line:373 - insert into node_revision__field_fenlei (bundle, delta, field_fenlei_target_id, langcode, revision_id, 
entity_id) values ('book', 0, 1, 'zh-hans', 34, 34) 
 {executed in 0 msec}
2020-11-19 11:21:04.827 INFO  jdbc.sqltiming Line:373 - select bookfieldf0_.entity_id as entity_i1_6_, bookfieldf0_.bundle as bundle2_6_, bookfieldf0_.delta 
as delta3_6_, bookfieldf0_.field_fsid_value as field_fs4_6_, bookfieldf0_.langcode as langcode5_6_, 
bookfieldf0_.revision_id as revision6_6_ from node__field_fsid bookfieldf0_ where bookfieldf0_.field_fsid_value='315018048607464' 
 {executed in 1 msec}
2020-11-19 11:21:04.827 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------|---------|------------|
|entity_id |bundle |delta |field_fsid_value |langcode |revision_id |
|----------|-------|------|-----------------|---------|------------|
|----------|-------|------|-----------------|---------|------------|

2020-11-19 11:21:04.827 INFO  jdbc.sqltiming Line:373 - insert into node_revision (langcode, nid, revision_default, revision_timestamp, revision_uid) 
values ('zh-hans', 0, 1, 1605756064, 1) 
 {executed in 0 msec}
2020-11-19 11:21:04.828 INFO  jdbc.sqltiming Line:373 - getGeneratedKeys on query: insert into node_revision (langcode, nid, revision_default, revision_timestamp, 
revision_uid) values ('zh-hans', 0, 1, 1605756064, 1) 
 {executed in 0 msec}
2020-11-19 11:21:04.828 INFO  jdbc.resultsettable Line:610 - 
|--------------|
|generated_key |
|--------------|
|35            |
|--------------|

2020-11-19 11:21:04.831 INFO  jdbc.sqltiming Line:373 - insert into node (langcode, type, uuid, vid) values ('zh-hans', 'book', '5d9ea852-ef02-48b8-a3d0-c9e1bb044295', 
35) 
 {executed in 0 msec}
2020-11-19 11:21:04.832 INFO  jdbc.sqltiming Line:373 - getGeneratedKeys on query: insert into node (langcode, type, uuid, vid) values ('zh-hans', 
'book', '5d9ea852-ef02-48b8-a3d0-c9e1bb044295', 35) 
 {executed in 0 msec}
2020-11-19 11:21:04.832 INFO  jdbc.resultsettable Line:610 - 
|--------------|
|generated_key |
|--------------|
|35            |
|--------------|

2020-11-19 11:21:04.836 INFO  jdbc.sqltiming Line:373 - update node_revision set langcode='zh-hans', nid=35, revision_default=1, revision_timestamp=1605756064, 
revision_uid=1 where vid=35 
 {executed in 0 msec}
2020-11-19 11:21:04.839 INFO  jdbc.sqltiming Line:373 - select bookfieldf0_.entity_id as entity_i1_6_0_, bookfieldf0_.bundle as bundle2_6_0_, bookfieldf0_.delta 
as delta3_6_0_, bookfieldf0_.field_fsid_value as field_fs4_6_0_, bookfieldf0_.langcode as langcode5_6_0_, 
bookfieldf0_.revision_id as revision6_6_0_ from node__field_fsid bookfieldf0_ where bookfieldf0_.entity_id=35 
 {executed in 0 msec}
2020-11-19 11:21:04.839 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------|---------|------------|
|entity_id |bundle |delta |field_fsid_value |langcode |revision_id |
|----------|-------|------|-----------------|---------|------------|
|----------|-------|------|-----------------|---------|------------|

2020-11-19 11:21:04.840 INFO  jdbc.sqltiming Line:373 - insert into node__field_fsid (bundle, delta, field_fsid_value, langcode, revision_id, entity_id) 
values ('book', 0, '315018048607464', 'zh-hans', 35, 35) 
 {executed in 0 msec}
2020-11-19 11:21:04.843 INFO  jdbc.sqltiming Line:373 - select nodefieldf0_.entity_id as entity_i1_15_0_, nodefieldf0_.bundle as bundle2_15_0_, nodefieldf0_.delta 
as delta3_15_0_, nodefieldf0_.field_fsid_value as field_fs4_15_0_, nodefieldf0_.langcode as 
langcode5_15_0_, nodefieldf0_.revision_id as revision6_15_0_ from node_revision__field_fsid 
nodefieldf0_ where nodefieldf0_.entity_id=35 
 {executed in 0 msec}
2020-11-19 11:21:04.843 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------|---------|------------|
|entity_id |bundle |delta |field_fsid_value |langcode |revision_id |
|----------|-------|------|-----------------|---------|------------|
|----------|-------|------|-----------------|---------|------------|

2020-11-19 11:21:04.845 INFO  jdbc.sqltiming Line:373 - insert into node_revision__field_fsid (bundle, delta, field_fsid_value, langcode, revision_id, 
entity_id) values ('book', 0, '315018048607464', 'zh-hans', 35, 35) 
 {executed in 0 msec}
2020-11-19 11:21:04.847 INFO  jdbc.sqltiming Line:373 - select bookentity0_.nid as nid1_1_, bookentity0_.bid as bid2_1_, bookentity0_.depth as depth3_1_, 
bookentity0_.has_children as has_chil4_1_, bookentity0_.p1 as p5_1_, bookentity0_.p2 as p6_1_, 
bookentity0_.p3 as p7_1_, bookentity0_.p4 as p8_1_, bookentity0_.p5 as p9_1_, bookentity0_.pid 
as pid10_1_, bookentity0_.weight as weight11_1_ from book bookentity0_ where bookentity0_.nid=35 
 {executed in 0 msec}
2020-11-19 11:21:04.848 INFO  jdbc.resultsettable Line:610 - 
|----|----|------|-------------|---|---|---|---|---|----|-------|
|nid |bid |depth |has_children |p1 |p2 |p3 |p4 |p5 |pid |weight |
|----|----|------|-------------|---|---|---|---|---|----|-------|
|----|----|------|-------------|---|---|---|---|---|----|-------|

2020-11-19 11:21:04.848 INFO  jdbc.sqltiming Line:373 - select bookentity0_.nid as nid1_1_0_, bookentity0_.bid as bid2_1_0_, bookentity0_.depth as 
depth3_1_0_, bookentity0_.has_children as has_chil4_1_0_, bookentity0_.p1 as p5_1_0_, bookentity0_.p2 
as p6_1_0_, bookentity0_.p3 as p7_1_0_, bookentity0_.p4 as p8_1_0_, bookentity0_.p5 as p9_1_0_, 
bookentity0_.pid as pid10_1_0_, bookentity0_.weight as weight11_1_0_ from book bookentity0_ 
where bookentity0_.nid=35 
 {executed in 0 msec}
2020-11-19 11:21:04.849 INFO  jdbc.resultsettable Line:610 - 
|----|----|------|-------------|---|---|---|---|---|----|-------|
|nid |bid |depth |has_children |p1 |p2 |p3 |p4 |p5 |pid |weight |
|----|----|------|-------------|---|---|---|---|---|----|-------|
|----|----|------|-------------|---|---|---|---|---|----|-------|

2020-11-19 11:21:04.850 INFO  jdbc.sqltiming Line:373 - insert into book (bid, depth, has_children, p1, p2, p3, p4, p5, pid, weight, nid) values (1, 
2, 1, 1, 35, 0, 0, 0, 1, 0, 35) 
 {executed in 0 msec}
2020-11-19 11:21:04.852 INFO  jdbc.sqltiming Line:373 - select nodebodyen0_.entity_id as entity_i1_3_, nodebodyen0_.body_value as body_val2_3_, nodebodyen0_.body_summary 
as body_sum3_3_, nodebodyen0_.bundle as bundle4_3_, nodebodyen0_.delta as delta5_3_, nodebodyen0_.body_format 
as body_for6_3_, nodebodyen0_.langcode as langcode7_3_, nodebodyen0_.revision_id as revision8_3_ 
from node__body nodebodyen0_ where nodebodyen0_.entity_id=35 
 {executed in 0 msec}
2020-11-19 11:21:04.853 INFO  jdbc.resultsettable Line:610 - 
|----------|-----------|-------------|-------|------|------------|---------|------------|
|entity_id |body_value |body_summary |bundle |delta |body_format |langcode |revision_id |
|----------|-----------|-------------|-------|------|------------|---------|------------|
|----------|-----------|-------------|-------|------|------------|---------|------------|

2020-11-19 11:21:04.853 INFO  jdbc.sqltiming Line:373 - select nodebodyre0_.entity_id as entity_i1_12_0_, nodebodyre0_.body_value as body_val2_12_0_, 
nodebodyre0_.body_summary as body_sum3_12_0_, nodebodyre0_.bundle as bundle4_12_0_, nodebodyre0_.delta 
as delta5_12_0_, nodebodyre0_.body_format as body_for6_12_0_, nodebodyre0_.langcode as langcode7_12_0_, 
nodebodyre0_.revision_id as revision8_12_0_ from node_revision__body nodebodyre0_ where nodebodyre0_.entity_id=35 
 {executed in 0 msec}
2020-11-19 11:21:04.853 INFO  jdbc.resultsettable Line:610 - 
|----------|-----------|-------------|-------|------|------------|---------|------------|
|entity_id |body_value |body_summary |bundle |delta |body_format |langcode |revision_id |
|----------|-----------|-------------|-------|------|------------|---------|------------|
|----------|-----------|-------------|-------|------|------------|---------|------------|

2020-11-19 11:21:04.855 INFO  jdbc.sqltiming Line:373 - insert into node_revision__body (body_value, body_summary, bundle, delta, body_format, langcode, 
revision_id, entity_id) values ('', '', 'book', 0, 'full_html', 'zh-hans', 35, 35) 
 {executed in 0 msec}
2020-11-19 11:21:04.857 INFO  jdbc.sqltiming Line:373 - select nodebodyen0_.entity_id as entity_i1_3_0_, nodebodyen0_.body_value as body_val2_3_0_, 
nodebodyen0_.body_summary as body_sum3_3_0_, nodebodyen0_.bundle as bundle4_3_0_, nodebodyen0_.delta 
as delta5_3_0_, nodebodyen0_.body_format as body_for6_3_0_, nodebodyen0_.langcode as langcode7_3_0_, 
nodebodyen0_.revision_id as revision8_3_0_ from node__body nodebodyen0_ where nodebodyen0_.entity_id=35 
 {executed in 0 msec}
2020-11-19 11:21:04.858 INFO  jdbc.resultsettable Line:610 - 
|----------|-----------|-------------|-------|------|------------|---------|------------|
|entity_id |body_value |body_summary |bundle |delta |body_format |langcode |revision_id |
|----------|-----------|-------------|-------|------|------------|---------|------------|
|----------|-----------|-------------|-------|------|------------|---------|------------|

2020-11-19 11:21:04.859 INFO  jdbc.sqltiming Line:373 - insert into node__body (body_value, body_summary, bundle, delta, body_format, langcode, revision_id, 
entity_id) values ('', '', 'book', 0, 'full_html', 'zh-hans', 35, 35) 
 {executed in 0 msec}
2020-11-19 11:21:04.861 INFO  jdbc.sqltiming Line:373 - select nodefiledd0_.nid as nid1_9_, nodefiledd0_.changed as changed2_9_, nodefiledd0_.created 
as created3_9_, nodefiledd0_.default_langcode as default_4_9_, nodefiledd0_.langcode as langcode5_9_, 
nodefiledd0_.promote as promote6_9_, nodefiledd0_.revision_translation_affected as revision7_9_, 
nodefiledd0_.status as status8_9_, nodefiledd0_.sticky as sticky9_9_, nodefiledd0_.title as 
title10_9_, nodefiledd0_.type as type11_9_, nodefiledd0_.uid as uid12_9_, nodefiledd0_.vid 
as vid13_9_ from node_field_data nodefiledd0_ where nodefiledd0_.nid=35 
 {executed in 0 msec}
2020-11-19 11:21:04.862 INFO  jdbc.resultsettable Line:610 - 
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|-----|----|----|
|nid |changed |created |default_langcode |langcode |promote |revision_translation_affected |status |sticky |title |type |uid |vid |
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|-----|----|----|
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|-----|----|----|

2020-11-19 11:21:04.862 INFO  jdbc.sqltiming Line:373 - select nodefieldr0_.nid as nid1_10_0_, nodefieldr0_.changed as changed2_10_0_, nodefieldr0_.created 
as created3_10_0_, nodefieldr0_.default_langcode as default_4_10_0_, nodefieldr0_.langcode 
as langcode5_10_0_, nodefieldr0_.promote as promote6_10_0_, nodefieldr0_.revision_translation_affected 
as revision7_10_0_, nodefieldr0_.status as status8_10_0_, nodefieldr0_.sticky as sticky9_10_0_, 
nodefieldr0_.title as title10_10_0_, nodefieldr0_.uid as uid11_10_0_, nodefieldr0_.vid as vid12_10_0_ 
from node_field_revision nodefieldr0_ where nodefieldr0_.nid=35 
 {executed in 0 msec}
2020-11-19 11:21:04.863 INFO  jdbc.resultsettable Line:610 - 
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|----|----|
|nid |changed |created |default_langcode |langcode |promote |revision_translation_affected |status |sticky |title |uid |vid |
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|----|----|
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|----|----|

2020-11-19 11:21:04.864 INFO  jdbc.sqltiming Line:373 - insert into node_field_revision (changed, created, default_langcode, langcode, promote, revision_translation_affected, 
status, sticky, title, uid, vid, nid) values (1605756064, 1605756064, 1, 'zh-hans', 0, 1, 1, 
0, '02丨第二章 欢迎来到 MVC 的世界 (7讲)', 1, 35, 35) 
 {executed in 0 msec}
2020-11-19 11:21:04.867 INFO  jdbc.sqltiming Line:373 - select nodefiledd0_.nid as nid1_9_0_, nodefiledd0_.changed as changed2_9_0_, nodefiledd0_.created 
as created3_9_0_, nodefiledd0_.default_langcode as default_4_9_0_, nodefiledd0_.langcode as 
langcode5_9_0_, nodefiledd0_.promote as promote6_9_0_, nodefiledd0_.revision_translation_affected 
as revision7_9_0_, nodefiledd0_.status as status8_9_0_, nodefiledd0_.sticky as sticky9_9_0_, 
nodefiledd0_.title as title10_9_0_, nodefiledd0_.type as type11_9_0_, nodefiledd0_.uid as uid12_9_0_, 
nodefiledd0_.vid as vid13_9_0_ from node_field_data nodefiledd0_ where nodefiledd0_.nid=35 
 {executed in 0 msec}
2020-11-19 11:21:04.868 INFO  jdbc.resultsettable Line:610 - 
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|-----|----|----|
|nid |changed |created |default_langcode |langcode |promote |revision_translation_affected |status |sticky |title |type |uid |vid |
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|-----|----|----|
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|-----|----|----|

2020-11-19 11:21:04.869 INFO  jdbc.sqltiming Line:373 - insert into node_field_data (changed, created, default_langcode, langcode, promote, revision_translation_affected, 
status, sticky, title, type, uid, vid, nid) values (1605756064, 1605756064, 1, 'zh-hans', 0, 
1, 1, 0, '02丨第二章 欢迎来到 MVC 的世界 (7讲)', 'book', 1, 35, 35) 
 {executed in 0 msec}
2020-11-19 11:21:04.874 INFO  jdbc.sqltiming Line:373 - select bookfieldm0_.entity_id as entity_i1_7_, bookfieldm0_.bundle as bundle2_7_, bookfieldm0_.delta 
as delta3_7_, bookfieldm0_.langcode as langcode4_7_, bookfieldm0_.field_media_value as field_me5_7_, 
bookfieldm0_.revision_id as revision6_7_ from node__field_media bookfieldm0_ where bookfieldm0_.entity_id=35 
 {executed in 1 msec}
2020-11-19 11:21:04.874 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------------|------------|
|entity_id |bundle |delta |langcode |field_media_value |revision_id |
|----------|-------|------|---------|------------------|------------|
|----------|-------|------|---------|------------------|------------|

2020-11-19 11:21:04.875 INFO  jdbc.sqltiming Line:373 - select bookfieldm0_.entity_id as entity_i1_7_0_, bookfieldm0_.bundle as bundle2_7_0_, bookfieldm0_.delta 
as delta3_7_0_, bookfieldm0_.langcode as langcode4_7_0_, bookfieldm0_.field_media_value as 
field_me5_7_0_, bookfieldm0_.revision_id as revision6_7_0_ from node__field_media bookfieldm0_ 
where bookfieldm0_.entity_id=35 
 {executed in 1 msec}
2020-11-19 11:21:04.875 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------------|------------|
|entity_id |bundle |delta |langcode |field_media_value |revision_id |
|----------|-------|------|---------|------------------|------------|
|----------|-------|------|---------|------------------|------------|

2020-11-19 11:21:04.876 INFO  jdbc.sqltiming Line:373 - insert into node__field_media (bundle, delta, langcode, field_media_value, revision_id, entity_id) 
values ('book', 0, 'zh-hans', '', 35, 35) 
 {executed in 0 msec}
2020-11-19 11:21:04.879 INFO  jdbc.sqltiming Line:373 - select nodefieldm0_.entity_id as entity_i1_16_0_, nodefieldm0_.bundle as bundle2_16_0_, nodefieldm0_.delta 
as delta3_16_0_, nodefieldm0_.langcode as langcode4_16_0_, nodefieldm0_.field_media_value as 
field_me5_16_0_, nodefieldm0_.revision_id as revision6_16_0_ from node_revision__field_media 
nodefieldm0_ where nodefieldm0_.entity_id=35 
 {executed in 0 msec}
2020-11-19 11:21:04.879 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------------|------------|
|entity_id |bundle |delta |langcode |field_media_value |revision_id |
|----------|-------|------|---------|------------------|------------|
|----------|-------|------|---------|------------------|------------|

2020-11-19 11:21:04.881 INFO  jdbc.sqltiming Line:373 - insert into node_revision__field_media (bundle, delta, langcode, field_media_value, revision_id, 
entity_id) values ('book', 0, 'zh-hans', '', 35, 35) 
 {executed in 0 msec}
2020-11-19 11:21:04.884 INFO  jdbc.sqltiming Line:373 - select bookfieldc0_.entity_id as entity_i1_4_, bookfieldc0_.bundle as bundle2_4_, bookfieldc0_.field_comment_value 
as field_co3_4_, bookfieldc0_.delta as delta4_4_, bookfieldc0_.field_comment_format as field_co5_4_, 
bookfieldc0_.langcode as langcode6_4_, bookfieldc0_.revision_id as revision7_4_ from node__field_comment 
bookfieldc0_ where bookfieldc0_.entity_id=35 
 {executed in 1 msec}
2020-11-19 11:21:04.884 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|--------------------|------|---------------------|---------|------------|
|entity_id |bundle |field_comment_value |delta |field_comment_format |langcode |revision_id |
|----------|-------|--------------------|------|---------------------|---------|------------|
|----------|-------|--------------------|------|---------------------|---------|------------|

2020-11-19 11:21:04.885 INFO  jdbc.sqltiming Line:373 - select bookfieldc0_.entity_id as entity_i1_4_0_, bookfieldc0_.bundle as bundle2_4_0_, bookfieldc0_.field_comment_value 
as field_co3_4_0_, bookfieldc0_.delta as delta4_4_0_, bookfieldc0_.field_comment_format as 
field_co5_4_0_, bookfieldc0_.langcode as langcode6_4_0_, bookfieldc0_.revision_id as revision7_4_0_ 
from node__field_comment bookfieldc0_ where bookfieldc0_.entity_id=35 
 {executed in 0 msec}
2020-11-19 11:21:04.885 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|--------------------|------|---------------------|---------|------------|
|entity_id |bundle |field_comment_value |delta |field_comment_format |langcode |revision_id |
|----------|-------|--------------------|------|---------------------|---------|------------|
|----------|-------|--------------------|------|---------------------|---------|------------|

2020-11-19 11:21:04.886 INFO  jdbc.sqltiming Line:373 - insert into node__field_comment (bundle, field_comment_value, delta, field_comment_format, 
langcode, revision_id, entity_id) values ('book', '', 0, 'full_html', 'zh-hans', 35, 35) 
 {executed in 0 msec}
2020-11-19 11:21:04.889 INFO  jdbc.sqltiming Line:373 - select nodefieldc0_.entity_id as entity_i1_13_0_, nodefieldc0_.bundle as bundle2_13_0_, nodefieldc0_.field_comment_value 
as field_co3_13_0_, nodefieldc0_.delta as delta4_13_0_, nodefieldc0_.field_comment_format as 
field_co5_13_0_, nodefieldc0_.langcode as langcode6_13_0_, nodefieldc0_.revision_id as revision7_13_0_ 
from node_revision__field_comment nodefieldc0_ where nodefieldc0_.entity_id=35 
 {executed in 0 msec}
2020-11-19 11:21:04.890 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|--------------------|------|---------------------|---------|------------|
|entity_id |bundle |field_comment_value |delta |field_comment_format |langcode |revision_id |
|----------|-------|--------------------|------|---------------------|---------|------------|
|----------|-------|--------------------|------|---------------------|---------|------------|

2020-11-19 11:21:04.891 INFO  jdbc.sqltiming Line:373 - insert into node_revision__field_comment (bundle, field_comment_value, delta, field_comment_format, 
langcode, revision_id, entity_id) values ('book', '', 0, 'full_html', 'zh-hans', 35, 35) 
 {executed in 0 msec}
2020-11-19 11:21:04.894 INFO  jdbc.sqltiming Line:373 - select bookfieldt0_.entity_id as entity_i1_8_, bookfieldt0_.bundle as bundle2_8_, bookfieldt0_.delta 
as delta3_8_, bookfieldt0_.langcode as langcode4_8_, bookfieldt0_.revision_id as revision5_8_, 
bookfieldt0_.field_thumb_value as field_th6_8_ from node__field_thumb bookfieldt0_ where bookfieldt0_.entity_id=35 
 {executed in 0 msec}
2020-11-19 11:21:04.894 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------|------------------|
|entity_id |bundle |delta |langcode |revision_id |field_thumb_value |
|----------|-------|------|---------|------------|------------------|
|----------|-------|------|---------|------------|------------------|

2020-11-19 11:21:04.895 INFO  jdbc.sqltiming Line:373 - select bookfieldt0_.entity_id as entity_i1_8_0_, bookfieldt0_.bundle as bundle2_8_0_, bookfieldt0_.delta 
as delta3_8_0_, bookfieldt0_.langcode as langcode4_8_0_, bookfieldt0_.revision_id as revision5_8_0_, 
bookfieldt0_.field_thumb_value as field_th6_8_0_ from node__field_thumb bookfieldt0_ where 
bookfieldt0_.entity_id=35 
 {executed in 0 msec}
2020-11-19 11:21:04.895 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------|------------------|
|entity_id |bundle |delta |langcode |revision_id |field_thumb_value |
|----------|-------|------|---------|------------|------------------|
|----------|-------|------|---------|------------|------------------|

2020-11-19 11:21:04.897 INFO  jdbc.sqltiming Line:373 - insert into node__field_thumb (bundle, delta, langcode, revision_id, field_thumb_value, entity_id) 
values ('book', 0, 'zh-hans', 35, '', 35) 
 {executed in 0 msec}
2020-11-19 11:21:04.900 INFO  jdbc.sqltiming Line:373 - select nodefieldt0_.entity_id as entity_i1_17_0_, nodefieldt0_.bundle as bundle2_17_0_, nodefieldt0_.delta 
as delta3_17_0_, nodefieldt0_.langcode as langcode4_17_0_, nodefieldt0_.revision_id as revision5_17_0_, 
nodefieldt0_.field_thumb_value as field_th6_17_0_ from node_revision__field_thumb nodefieldt0_ 
where nodefieldt0_.entity_id=35 
 {executed in 0 msec}
2020-11-19 11:21:04.900 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------|------------------|
|entity_id |bundle |delta |langcode |revision_id |field_thumb_value |
|----------|-------|------|---------|------------|------------------|
|----------|-------|------|---------|------------|------------------|

2020-11-19 11:21:04.902 INFO  jdbc.sqltiming Line:373 - insert into node_revision__field_thumb (bundle, delta, langcode, revision_id, field_thumb_value, 
entity_id) values ('book', 0, 'zh-hans', 35, '', 35) 
 {executed in 1 msec}
2020-11-19 11:21:04.905 INFO  jdbc.sqltiming Line:373 - select bookfieldf0_.entity_id as entity_i1_5_0_, bookfieldf0_.bundle as bundle2_5_0_, bookfieldf0_.delta 
as delta3_5_0_, bookfieldf0_.field_fenlei_target_id as field_fe4_5_0_, bookfieldf0_.langcode 
as langcode5_5_0_, bookfieldf0_.revision_id as revision6_5_0_ from node__field_fenlei bookfieldf0_ 
where bookfieldf0_.entity_id=35 
 {executed in 0 msec}
2020-11-19 11:21:04.905 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------------|---------|------------|
|entity_id |bundle |delta |field_fenlei_target_id |langcode |revision_id |
|----------|-------|------|-----------------------|---------|------------|
|----------|-------|------|-----------------------|---------|------------|

2020-11-19 11:21:04.907 INFO  jdbc.sqltiming Line:373 - insert into node__field_fenlei (bundle, delta, field_fenlei_target_id, langcode, revision_id, 
entity_id) values ('book', 0, 1, 'zh-hans', 35, 35) 
 {executed in 0 msec}
2020-11-19 11:21:04.911 INFO  jdbc.sqltiming Line:373 - select nodefieldf0_.entity_id as entity_i1_14_0_, nodefieldf0_.bundle as bundle2_14_0_, nodefieldf0_.delta 
as delta3_14_0_, nodefieldf0_.field_fenlei_target_id as field_fe4_14_0_, nodefieldf0_.langcode 
as langcode5_14_0_, nodefieldf0_.revision_id as revision6_14_0_ from node_revision__field_fenlei 
nodefieldf0_ where nodefieldf0_.entity_id=35 
 {executed in 0 msec}
2020-11-19 11:21:04.912 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------------|---------|------------|
|entity_id |bundle |delta |field_fenlei_target_id |langcode |revision_id |
|----------|-------|------|-----------------------|---------|------------|
|----------|-------|------|-----------------------|---------|------------|

2020-11-19 11:21:04.913 INFO  jdbc.sqltiming Line:373 - insert into node_revision__field_fenlei (bundle, delta, field_fenlei_target_id, langcode, revision_id, 
entity_id) values ('book', 0, 1, 'zh-hans', 35, 35) 
 {executed in 0 msec}
2020-11-19 11:21:36.508 INFO  jdbc.sqltiming Line:373 - select bookfieldf0_.entity_id as entity_i1_6_, bookfieldf0_.bundle as bundle2_6_, bookfieldf0_.delta 
as delta3_6_, bookfieldf0_.field_fsid_value as field_fs4_6_, bookfieldf0_.langcode as langcode5_6_, 
bookfieldf0_.revision_id as revision6_6_ from node__field_fsid bookfieldf0_ where bookfieldf0_.field_fsid_value='46226448877551' 
 {executed in 1 msec}
2020-11-19 11:21:36.509 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------|---------|------------|
|entity_id |bundle |delta |field_fsid_value |langcode |revision_id |
|----------|-------|------|-----------------|---------|------------|
|----------|-------|------|-----------------|---------|------------|

2020-11-19 11:21:36.511 INFO  jdbc.sqltiming Line:373 - insert into node_revision (langcode, nid, revision_default, revision_timestamp, revision_uid) 
values ('zh-hans', 0, 1, 1605756096, 1) 
 {executed in 1 msec}
2020-11-19 11:21:36.511 INFO  jdbc.sqltiming Line:373 - getGeneratedKeys on query: insert into node_revision (langcode, nid, revision_default, revision_timestamp, 
revision_uid) values ('zh-hans', 0, 1, 1605756096, 1) 
 {executed in 0 msec}
2020-11-19 11:21:36.512 INFO  jdbc.resultsettable Line:610 - 
|--------------|
|generated_key |
|--------------|
|36            |
|--------------|

2020-11-19 11:21:36.521 INFO  jdbc.sqltiming Line:373 - insert into node (langcode, type, uuid, vid) values ('zh-hans', 'book', 'c91e0986-aab7-4295-a5c2-248b32556dd8', 
36) 
 {executed in 0 msec}
2020-11-19 11:21:36.521 INFO  jdbc.sqltiming Line:373 - getGeneratedKeys on query: insert into node (langcode, type, uuid, vid) values ('zh-hans', 
'book', 'c91e0986-aab7-4295-a5c2-248b32556dd8', 36) 
 {executed in 0 msec}
2020-11-19 11:21:36.522 INFO  jdbc.resultsettable Line:610 - 
|--------------|
|generated_key |
|--------------|
|36            |
|--------------|

2020-11-19 11:21:36.527 INFO  jdbc.sqltiming Line:373 - update node_revision set langcode='zh-hans', nid=36, revision_default=1, revision_timestamp=1605756096, 
revision_uid=1 where vid=36 
 {executed in 0 msec}
2020-11-19 11:21:36.532 INFO  jdbc.sqltiming Line:373 - select bookfieldf0_.entity_id as entity_i1_6_0_, bookfieldf0_.bundle as bundle2_6_0_, bookfieldf0_.delta 
as delta3_6_0_, bookfieldf0_.field_fsid_value as field_fs4_6_0_, bookfieldf0_.langcode as langcode5_6_0_, 
bookfieldf0_.revision_id as revision6_6_0_ from node__field_fsid bookfieldf0_ where bookfieldf0_.entity_id=36 
 {executed in 0 msec}
2020-11-19 11:21:36.533 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------|---------|------------|
|entity_id |bundle |delta |field_fsid_value |langcode |revision_id |
|----------|-------|------|-----------------|---------|------------|
|----------|-------|------|-----------------|---------|------------|

2020-11-19 11:21:36.534 INFO  jdbc.sqltiming Line:373 - insert into node__field_fsid (bundle, delta, field_fsid_value, langcode, revision_id, entity_id) 
values ('book', 0, '46226448877551', 'zh-hans', 36, 36) 
 {executed in 0 msec}
2020-11-19 11:21:36.537 INFO  jdbc.sqltiming Line:373 - select nodefieldf0_.entity_id as entity_i1_15_0_, nodefieldf0_.bundle as bundle2_15_0_, nodefieldf0_.delta 
as delta3_15_0_, nodefieldf0_.field_fsid_value as field_fs4_15_0_, nodefieldf0_.langcode as 
langcode5_15_0_, nodefieldf0_.revision_id as revision6_15_0_ from node_revision__field_fsid 
nodefieldf0_ where nodefieldf0_.entity_id=36 
 {executed in 0 msec}
2020-11-19 11:21:36.537 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------|---------|------------|
|entity_id |bundle |delta |field_fsid_value |langcode |revision_id |
|----------|-------|------|-----------------|---------|------------|
|----------|-------|------|-----------------|---------|------------|

2020-11-19 11:21:36.539 INFO  jdbc.sqltiming Line:373 - insert into node_revision__field_fsid (bundle, delta, field_fsid_value, langcode, revision_id, 
entity_id) values ('book', 0, '46226448877551', 'zh-hans', 36, 36) 
 {executed in 1 msec}
2020-11-19 11:21:36.540 INFO  jdbc.sqltiming Line:373 - select bookentity0_.nid as nid1_1_, bookentity0_.bid as bid2_1_, bookentity0_.depth as depth3_1_, 
bookentity0_.has_children as has_chil4_1_, bookentity0_.p1 as p5_1_, bookentity0_.p2 as p6_1_, 
bookentity0_.p3 as p7_1_, bookentity0_.p4 as p8_1_, bookentity0_.p5 as p9_1_, bookentity0_.pid 
as pid10_1_, bookentity0_.weight as weight11_1_ from book bookentity0_ where bookentity0_.nid=36 
 {executed in 0 msec}
2020-11-19 11:21:36.540 INFO  jdbc.resultsettable Line:610 - 
|----|----|------|-------------|---|---|---|---|---|----|-------|
|nid |bid |depth |has_children |p1 |p2 |p3 |p4 |p5 |pid |weight |
|----|----|------|-------------|---|---|---|---|---|----|-------|
|----|----|------|-------------|---|---|---|---|---|----|-------|

2020-11-19 11:21:36.541 INFO  jdbc.sqltiming Line:373 - select bookentity0_.nid as nid1_1_0_, bookentity0_.bid as bid2_1_0_, bookentity0_.depth as 
depth3_1_0_, bookentity0_.has_children as has_chil4_1_0_, bookentity0_.p1 as p5_1_0_, bookentity0_.p2 
as p6_1_0_, bookentity0_.p3 as p7_1_0_, bookentity0_.p4 as p8_1_0_, bookentity0_.p5 as p9_1_0_, 
bookentity0_.pid as pid10_1_0_, bookentity0_.weight as weight11_1_0_ from book bookentity0_ 
where bookentity0_.nid=36 
 {executed in 0 msec}
2020-11-19 11:21:36.541 INFO  jdbc.resultsettable Line:610 - 
|----|----|------|-------------|---|---|---|---|---|----|-------|
|nid |bid |depth |has_children |p1 |p2 |p3 |p4 |p5 |pid |weight |
|----|----|------|-------------|---|---|---|---|---|----|-------|
|----|----|------|-------------|---|---|---|---|---|----|-------|

2020-11-19 11:21:36.542 INFO  jdbc.sqltiming Line:373 - insert into book (bid, depth, has_children, p1, p2, p3, p4, p5, pid, weight, nid) values (1, 
3, 0, 1, 35, 36, 0, 0, 35, 0, 36) 
 {executed in 0 msec}
2020-11-19 11:21:36.547 INFO  jdbc.sqltiming Line:373 - select nodebodyen0_.entity_id as entity_i1_3_, nodebodyen0_.body_value as body_val2_3_, nodebodyen0_.body_summary 
as body_sum3_3_, nodebodyen0_.bundle as bundle4_3_, nodebodyen0_.delta as delta5_3_, nodebodyen0_.body_format 
as body_for6_3_, nodebodyen0_.langcode as langcode7_3_, nodebodyen0_.revision_id as revision8_3_ 
from node__body nodebodyen0_ where nodebodyen0_.entity_id=36 
 {executed in 0 msec}
2020-11-19 11:21:36.547 INFO  jdbc.resultsettable Line:610 - 
|----------|-----------|-------------|-------|------|------------|---------|------------|
|entity_id |body_value |body_summary |bundle |delta |body_format |langcode |revision_id |
|----------|-----------|-------------|-------|------|------------|---------|------------|
|----------|-----------|-------------|-------|------|------------|---------|------------|

2020-11-19 11:21:36.548 INFO  jdbc.sqltiming Line:373 - select nodebodyre0_.entity_id as entity_i1_12_0_, nodebodyre0_.body_value as body_val2_12_0_, 
nodebodyre0_.body_summary as body_sum3_12_0_, nodebodyre0_.bundle as bundle4_12_0_, nodebodyre0_.delta 
as delta5_12_0_, nodebodyre0_.body_format as body_for6_12_0_, nodebodyre0_.langcode as langcode7_12_0_, 
nodebodyre0_.revision_id as revision8_12_0_ from node_revision__body nodebodyre0_ where nodebodyre0_.entity_id=36 
 {executed in 0 msec}
2020-11-19 11:21:36.548 INFO  jdbc.resultsettable Line:610 - 
|----------|-----------|-------------|-------|------|------------|---------|------------|
|entity_id |body_value |body_summary |bundle |delta |body_format |langcode |revision_id |
|----------|-----------|-------------|-------|------|------------|---------|------------|
|----------|-----------|-------------|-------|------|------------|---------|------------|

2020-11-19 11:21:36.550 INFO  jdbc.sqltiming Line:373 - insert into node_revision__body (body_value, body_summary, bundle, delta, body_format, langcode, 
revision_id, entity_id) values ('<p>你好，我是四火。</p> <p>又到了一章的末尾，特别放送时间。专栏上线后的这几周，我在留言区回答了一些问题，有一些是技术上的问题，也有一些是非技术上的问题。尽管在 
<a href="https://time.geekbang.org/column/article/134212">[开篇词]</a> 和 <a href="https://time.geekbang.org/column/article/134216">[学习路径]</a> 
中我已经介绍了全栈工程师的角色、重要性和学习方法，但是依然见到不少困惑和疑问，<strong>其中一个问题反复出现，那就是面对那么多的软件技术，总有一种“学不过来”的感觉，为此感到焦虑和担忧</strong>。尤其是对于全栈工程师而言，这个话题更是被放大了。</p> 
<p>颇为遗憾的是，这几年来，我见到了一些相当有经验的做着 Web 全栈开发的程序员，他们还依然走在一条埋头苦干，不断堆积知识，单纯靠量取胜的路上。可是，我认为，学习是需要选择的，并且，选择比努力更重要。</p> 
<p>今天的特别放送，我就来聊一聊，我是怎么认识这个问题的，希望能给你带来一点参考意义。</p> <h2>两个小故事</h2> <p>第一个故事，微软的测试团队改革。陆奇是一个程序员从技术做起，进而翻身的典范。最初他入职雅虎的时候只是一个普通的工程师，十多年后 
，他以执行副总裁的身份，不但牵头打造了 Bing 搜索，还完成了几项意义深远的改革，其中一项，就是合并开发和测试这两个原本独立的部门，大幅裁剪专职测试人员，让工程师做更多的事。</p> 
<p>这样一来，有一些擅长使用内部测试工具进行测试的工程师，就慢慢丢掉工作了，原因很简单，他们更多的只是熟练工，而缺乏技术上的竞争力。<strong>听起来，这似乎是微软内部组织架构变动和工具、技术栈封闭的锅</strong>。</p><!-- 
[[[read_end]]] --> <p>其实，合并开发和测试团队，对于许多软件公司，特别是互联网公司来说，是一个基本不需要讨论的事情。除了一些面向互联网用户的、交互较为复杂的团队，还配有专职测试（即便是这样的测试，为了节省成本，也常常外包给合同工去做了），绝大多数团队，都已经变成了软件工程师一肩挑的局面了，而测试只是被合并的一部分专职角色，其实还有线上运维等等。对于大型互联网企业来说，一个事实就是，工程师的全面性越来越强，这是一个不可辩驳的趋势。</p> 
<p>第二个故事，是我在几个月前，参与面试一位有着超过 15 年 Web 开发经验的工程师，这件事就发生在五轮面试之后的讨论会上（这里涉及到的面试流程我曾在 <a href="https://time.geekbang.org/column/article/139370">[第 
06 讲]</a> 中介绍过）。</p> <p>对于这样一个比较资深的工程师岗，五个面试官，在讨论会上产生了巨大的分歧。招聘经理，也就是负责吃饭聊天那一轮面试的人，反馈非常正面，说此人经验丰富，谈吐得当，leadship 
层面也没有问题；Bartender（技术负责人）重点考察了项目经验和系统设计，反馈也颇为不错，经验丰富，而且能够从很多角度去分析和思考问题；可其余的三轮面试，面试官反映却大相径庭，主要问题出在白板代码部分，总的来说，代码生疏，书写也缺乏条理，其中有一轮都没有写完代码，写完的两轮也是 
bug 满地，问题频出。最后，在争论之后达成一致，可以通过，但是只能勉强给一个比预期职位级别低一级的 offer。</p> <p>作为一个技术岗位的工程师，编码能力是一个硬指标，因此这也是照章办事，不得已而为之的。只不过，我们私下里讨论，应聘者很可能是有足够的编码技巧的，只不过有一段时间没有写代码了，确实有些可惜。但是，猜想也只是猜想而已。</p> 
<p>其实，故事有很多，但是这两个故事是我精心挑选的。二者分别对应的启发是，工程师在技术学习的时候，需要遵循的两个主要思路。</p> <ul> <li>第一，技术是分级的，具体说，是分短命和长寿的，也是分表面和本质的。我们要学习各种技术，但是我们要把足够的精力放到长寿的技术以及技术本质上。这就是第一个故事带来的启发。</li> 
<li>第二，基础知识和能力的训练需要长期坚持，无论是在工作中，还是工作以外。这就是第二个故事带来的启发。</li> </ul> <h2>技术的分级</h2> <p>下面我展开来讲第一个思路，技术分级。</p> 
<p>我们都听过“技术无贵贱”的说法，但这并不代表我们要“无区别”地学习技术。工程师，说白了最重要的就是“工程能力”，就是应用工程化的思想和技术，去解决实际的问题。我把工程能力粗略地分成这样四个级别，请注意，<strong>它们都必不可少</strong>，这个分级也不严密，但是我们能从中看到一个大致的趋势：</p> 
<p><img src="https://static001.geekbang.org/resource/image/12/e4/12471848fea52f2c04ef7f676bab62e4.png" 
alt=""></p> <ul> <li>比如说，稳定性上，从左到右逐渐降低，越靠右往往寿命越短。</li> <li>比如说，学习难度上，不一定，但是总体来说从左到右逐渐降低。</li> 
<li>比如说，针对性上，往往从左到右逐渐增加，即越往右就越是针对具体的问题。</li> </ul> <p>下面我来具体说说图中的这几种能力。</p> <p>软能力，比如我们对程序员要求最多的沟通能力、学习能力和抽象能力。哪怕再过几十年，这部分基本也是不会变的。</p> 
<p>模式和思想，比如分而治之的思想，模块化的思维，客户端 / 服务端模式。这部分也相当稳定，可能随着技术的革新，也会有一些以往不受重视的模式或思想被列为重点，举例来说，十年前，我们可能很少谈论分布式的思想。</p> 
<p>语言和平台，比如 Java 语言，JVM 平台。这部分其实变化就非常大了，有的语言已经几十年了，有的则是几年热度之后就消退了。普遍来说，语言平台要比语言本身稳定一些。</p> 
<p>框架和库，这部分差异也非常大，但是总体来说，基本就是最短命的。如果要花费大量的时间和心血去深究某一个框架和库，那么你会希望它要么相当有代表性和典型意义，要么有足够长远的未来。</p> 
<p>对于这几种能力，还有几点我要强调说明一下。</p> <p>首先，请不要误解我的意思。每一级的能力都是有各自价值的，<strong>我们在解决实际问题的时候，需要使用到每一级的技术</strong>。举例来说，要设计实现一个网站，全栈工程师需要发挥沟通能力、合作能力，需要利用在模式和思想方面的经验和认识，选择合适的语言和平台，最后再选择相应的框架和库来完成它。</p> 
<p>其次，我们当然希望图中靠左侧的“长寿”的能力得到进步，但每一级能力的培养，都需要通过对具体技术、业务的学习积累来实现，也就是说，<strong>这些分级之间是不冲突的，反而是互相促进的</strong>。通过这两章的学习，特别是从具体技术到通用模式这样的方式，也许你已经体会到了这一点。</p> 
<p>那么现在，有了上面的说明，你是否已经清楚，该做出怎样的侧重了呢？</p> <p>显然，我们应该明确的一点是，把几乎全部的精力都投入到这个分级的右端，换言之，<strong>把大量的时间都花在记忆一个接一个的框架和库上面，妄图靠数量取胜，不可取</strong>。有时更可悲的是，就连生硬的记忆本身也不讨好——都不用等到技术淘汰了，它们还都是公司内部的框架和库，离开公司就一文不值了。</p> 
<p>因为，这只是单纯地记忆，没有比较、分析、思考这些能让这个分级均衡发展的行为。而这，我认为正是系统的技术学习中最大的误区。</p> <p>我举一个真实的例子来说明这个现象，有位程序员朋友学习前端技术，最开始使用 
Backbone.js，后来陆续用过 AngularJS 以及 React，现在准备转向 Vue.js。看起来似乎很勤奋，但是他自己却说他依然只是停留在上头说用什么，自己就跟着学什么的程度，自己也没有什么想法，总之越学越麻木……他自己还说“不知道何时是个头”。</p> 
<p>接着，我想展开讲一下其它几个具体技术学习中的典型误区，而这些误区，在我看来也都和是否努力无关，本质上也都属于不恰当的“选择”。</p> <p><strong>1. 过于关注配置使用，忽略原理和场景分析。</strong></p> 
<p>这一点我觉得是最容易在迈入职场没多久的程序员身上见到的问题，非常普遍。老板一个命令下来，心里慌得很，就想着怎么把问题搞定，而有一些问题是知识迷局一类的，比如，怎样配置整合 SSH（Struts、Spring 
和 Hibernate）。</p> <p>这类问题光靠想是没法得出结论的，于是通过各种搜索、查文档、试错等等方式，花了很长时间，好不容易搞定了问题，完成了需求，又紧锣密鼓地去接下一个任务去了。<strong>可是呢，对于刚才使用到的技术，付出了那么多，却只收获了这一个小小的迷局的解</strong>。这投入产出比低不说，人还是很健忘的，这些具体的配置和使用，只要不用，很快就会忘掉的，下次在遇到类似的问题，可能已经忘记了这些配置，于是又要重复这一行为。</p> 
<p><strong>2. 过于关注编程语言的语法和语言技巧，忽略语言思考和书写时的思维模式。</strong></p> <p>比如说，JavaScript 语言，里面有很多坑，但是有一些坑是语言本身的不良设计造成的，知道当然好，但也不要因此沾沾自喜。但是对于一个写惯了 
C++、Java 等后端静态语言的程序员来说，JavaScript 异步编程、函数成为一等公民等等这些颠覆以往编程思维模式的特性，才是学习这门新语言一个收获颇丰的地方（我们会在下一章介绍）。换言之，我们要写 
JavaScript，就要写真正的 JavaScript——而不是写 Java，再按字面翻译成 JavaScript。</p> <p><strong>3. 过于关注具体实现逻辑，忽略了对于设计的思考和权衡。</strong></p> 
<p>我看到很多程序员朋友都热衷于研究源码，看完一个库，再看下一个，有些人甚至以读过源码的数量为荣，张口闭口就是“你读过多少源码”。</p> <p>阅读源码当然是一件好事，但是请不要认为研究源码的目的只是“知道怎么实现”。毕竟，每个人的时间精力都是有限的，读源码尤其耗时。既然要读，就要读得有所收获，而不是凭空指望“读书百遍，其义自见”。比如说，阅读的时候，要抓住主干，去思考里面的设计思路，也就是所谓的“代码骨干”，忽略那些次要的边边角角。</p> 
<p><strong>4. 直接学习模式和思想，脱离了具体实践。</strong></p> <p>我已经介绍了模式和思想学习的好处，但是对于那些抽象的理论和概念，在没有实践的基础上，是很难真正“消化吸收”的。最好的方法是动手做一做，如果时间有限，至少也要阅读和了解它们都被哪些具体技术采用怎样的方式实现了。</p> 
<h2>基础知识和能力</h2> <p>下面我来说说第二个思路，基础知识和能力。</p> <p>即便在同一级的技术上，我们的学习也应该是有轻重缓急的。我们的项目中需要的技术，当然要学，但是我们心里需要清楚那些所谓的“基础”。生活不可能完美，工作也是，工作中学当然很好，但<strong>很遗憾的是，有很多“基础”光靠工作中学是很难有较大进步的</strong>。比方说，算法和数据结构。</p> 
<p>我认为，数据结构、算法、网络等等这些，都是基础知识，如果工作中的强化不够，工作以外的学习和训练还是需要的。如果你的基础不够扎实，特别是“非科班”出身的话，它就更加重要了。比较好的一点是，这些相对于“设计能力”“问题解决能力”等等来说，还是要好学很多。</p> 
<p><strong>除了基础知识，还有基础能力。最重要的，就是编程能力。</strong>值得庆幸的是，我相信大部分程序员都会在工作中有足够的编程时间，因此，只要专注、带着思考去写代码，认真对待代码评审，编程能力是会随着经验的增加而逐渐提升的。</p> 
<p>最后，你正在学习的这个专栏，涉及了大量的全栈技术相关的知识，但是从内容设计上你应该可以看出，我希望能更多地介绍其中的“套路”，也就是上图中的模式和思想，有些是同类技术所共同有的（比如前几讲介绍过的 
IoC），有些则是跨技术类型，但却依然共有的（比如幂等性和安全性）。</p> <h2>总结思考</h2> <p>今天的特别放送，我结合了自己的积累，介绍了我们该怎样做出选择，来应对这个“学不过来”的话题，特别是介绍了一些常见的学习误区，希望你能从我的答案中有所收获。</p> 
<p>今天就不放特定的思考题了，因为我觉得，这一类主观性特别强的话题，很容易有不同的认识，不需要拿问题来引导思考方向了，不加限定地思考会更好。欢迎你在下面的留言区谈谈自己的看法，我们一起讨论。</p> 
<h2>扩展阅读</h2> <ul> <li>有一篇文章，<a href="https://sizovs.net/2018/12/17/stop-learning-frameworks/">Stop 
Learning Frameworks</a>，观点比较朴实，也比较偏激，在程序员群体内掀起了轩然大波，有朋友翻译了，译文在<a href="https://zhuanlan.zhihu.com/p/52814937">这里</a>。</li> 
<li>关于传统关系数据库技术淘汰的事情，以前我写过一点小<a href="https://www.raychase.net/3689">体会</a>，可供参考。</li> </ul> 
<p><img src="https://static001.geekbang.org/resource/image/11/8b/1181246bbd51ce348d5729696d1dc28b.jpg" 
alt="unpreview"></p>', '', 'book', 0, 'full_html', 'zh-hans', 36, 36) 
 {executed in 1 msec}
2020-11-19 11:21:36.554 INFO  jdbc.sqltiming Line:373 - select nodebodyen0_.entity_id as entity_i1_3_0_, nodebodyen0_.body_value as body_val2_3_0_, 
nodebodyen0_.body_summary as body_sum3_3_0_, nodebodyen0_.bundle as bundle4_3_0_, nodebodyen0_.delta 
as delta5_3_0_, nodebodyen0_.body_format as body_for6_3_0_, nodebodyen0_.langcode as langcode7_3_0_, 
nodebodyen0_.revision_id as revision8_3_0_ from node__body nodebodyen0_ where nodebodyen0_.entity_id=36 
 {executed in 0 msec}
2020-11-19 11:21:36.554 INFO  jdbc.resultsettable Line:610 - 
|----------|-----------|-------------|-------|------|------------|---------|------------|
|entity_id |body_value |body_summary |bundle |delta |body_format |langcode |revision_id |
|----------|-----------|-------------|-------|------|------------|---------|------------|
|----------|-----------|-------------|-------|------|------------|---------|------------|

2020-11-19 11:21:36.556 INFO  jdbc.sqltiming Line:373 - insert into node__body (body_value, body_summary, bundle, delta, body_format, langcode, revision_id, 
entity_id) values ('<p>你好，我是四火。</p> <p>又到了一章的末尾，特别放送时间。专栏上线后的这几周，我在留言区回答了一些问题，有一些是技术上的问题，也有一些是非技术上的问题。尽管在 
<a href="https://time.geekbang.org/column/article/134212">[开篇词]</a> 和 <a href="https://time.geekbang.org/column/article/134216">[学习路径]</a> 
中我已经介绍了全栈工程师的角色、重要性和学习方法，但是依然见到不少困惑和疑问，<strong>其中一个问题反复出现，那就是面对那么多的软件技术，总有一种“学不过来”的感觉，为此感到焦虑和担忧</strong>。尤其是对于全栈工程师而言，这个话题更是被放大了。</p> 
<p>颇为遗憾的是，这几年来，我见到了一些相当有经验的做着 Web 全栈开发的程序员，他们还依然走在一条埋头苦干，不断堆积知识，单纯靠量取胜的路上。可是，我认为，学习是需要选择的，并且，选择比努力更重要。</p> 
<p>今天的特别放送，我就来聊一聊，我是怎么认识这个问题的，希望能给你带来一点参考意义。</p> <h2>两个小故事</h2> <p>第一个故事，微软的测试团队改革。陆奇是一个程序员从技术做起，进而翻身的典范。最初他入职雅虎的时候只是一个普通的工程师，十多年后 
，他以执行副总裁的身份，不但牵头打造了 Bing 搜索，还完成了几项意义深远的改革，其中一项，就是合并开发和测试这两个原本独立的部门，大幅裁剪专职测试人员，让工程师做更多的事。</p> 
<p>这样一来，有一些擅长使用内部测试工具进行测试的工程师，就慢慢丢掉工作了，原因很简单，他们更多的只是熟练工，而缺乏技术上的竞争力。<strong>听起来，这似乎是微软内部组织架构变动和工具、技术栈封闭的锅</strong>。</p><!-- 
[[[read_end]]] --> <p>其实，合并开发和测试团队，对于许多软件公司，特别是互联网公司来说，是一个基本不需要讨论的事情。除了一些面向互联网用户的、交互较为复杂的团队，还配有专职测试（即便是这样的测试，为了节省成本，也常常外包给合同工去做了），绝大多数团队，都已经变成了软件工程师一肩挑的局面了，而测试只是被合并的一部分专职角色，其实还有线上运维等等。对于大型互联网企业来说，一个事实就是，工程师的全面性越来越强，这是一个不可辩驳的趋势。</p> 
<p>第二个故事，是我在几个月前，参与面试一位有着超过 15 年 Web 开发经验的工程师，这件事就发生在五轮面试之后的讨论会上（这里涉及到的面试流程我曾在 <a href="https://time.geekbang.org/column/article/139370">[第 
06 讲]</a> 中介绍过）。</p> <p>对于这样一个比较资深的工程师岗，五个面试官，在讨论会上产生了巨大的分歧。招聘经理，也就是负责吃饭聊天那一轮面试的人，反馈非常正面，说此人经验丰富，谈吐得当，leadship 
层面也没有问题；Bartender（技术负责人）重点考察了项目经验和系统设计，反馈也颇为不错，经验丰富，而且能够从很多角度去分析和思考问题；可其余的三轮面试，面试官反映却大相径庭，主要问题出在白板代码部分，总的来说，代码生疏，书写也缺乏条理，其中有一轮都没有写完代码，写完的两轮也是 
bug 满地，问题频出。最后，在争论之后达成一致，可以通过，但是只能勉强给一个比预期职位级别低一级的 offer。</p> <p>作为一个技术岗位的工程师，编码能力是一个硬指标，因此这也是照章办事，不得已而为之的。只不过，我们私下里讨论，应聘者很可能是有足够的编码技巧的，只不过有一段时间没有写代码了，确实有些可惜。但是，猜想也只是猜想而已。</p> 
<p>其实，故事有很多，但是这两个故事是我精心挑选的。二者分别对应的启发是，工程师在技术学习的时候，需要遵循的两个主要思路。</p> <ul> <li>第一，技术是分级的，具体说，是分短命和长寿的，也是分表面和本质的。我们要学习各种技术，但是我们要把足够的精力放到长寿的技术以及技术本质上。这就是第一个故事带来的启发。</li> 
<li>第二，基础知识和能力的训练需要长期坚持，无论是在工作中，还是工作以外。这就是第二个故事带来的启发。</li> </ul> <h2>技术的分级</h2> <p>下面我展开来讲第一个思路，技术分级。</p> 
<p>我们都听过“技术无贵贱”的说法，但这并不代表我们要“无区别”地学习技术。工程师，说白了最重要的就是“工程能力”，就是应用工程化的思想和技术，去解决实际的问题。我把工程能力粗略地分成这样四个级别，请注意，<strong>它们都必不可少</strong>，这个分级也不严密，但是我们能从中看到一个大致的趋势：</p> 
<p><img src="https://static001.geekbang.org/resource/image/12/e4/12471848fea52f2c04ef7f676bab62e4.png" 
alt=""></p> <ul> <li>比如说，稳定性上，从左到右逐渐降低，越靠右往往寿命越短。</li> <li>比如说，学习难度上，不一定，但是总体来说从左到右逐渐降低。</li> 
<li>比如说，针对性上，往往从左到右逐渐增加，即越往右就越是针对具体的问题。</li> </ul> <p>下面我来具体说说图中的这几种能力。</p> <p>软能力，比如我们对程序员要求最多的沟通能力、学习能力和抽象能力。哪怕再过几十年，这部分基本也是不会变的。</p> 
<p>模式和思想，比如分而治之的思想，模块化的思维，客户端 / 服务端模式。这部分也相当稳定，可能随着技术的革新，也会有一些以往不受重视的模式或思想被列为重点，举例来说，十年前，我们可能很少谈论分布式的思想。</p> 
<p>语言和平台，比如 Java 语言，JVM 平台。这部分其实变化就非常大了，有的语言已经几十年了，有的则是几年热度之后就消退了。普遍来说，语言平台要比语言本身稳定一些。</p> 
<p>框架和库，这部分差异也非常大，但是总体来说，基本就是最短命的。如果要花费大量的时间和心血去深究某一个框架和库，那么你会希望它要么相当有代表性和典型意义，要么有足够长远的未来。</p> 
<p>对于这几种能力，还有几点我要强调说明一下。</p> <p>首先，请不要误解我的意思。每一级的能力都是有各自价值的，<strong>我们在解决实际问题的时候，需要使用到每一级的技术</strong>。举例来说，要设计实现一个网站，全栈工程师需要发挥沟通能力、合作能力，需要利用在模式和思想方面的经验和认识，选择合适的语言和平台，最后再选择相应的框架和库来完成它。</p> 
<p>其次，我们当然希望图中靠左侧的“长寿”的能力得到进步，但每一级能力的培养，都需要通过对具体技术、业务的学习积累来实现，也就是说，<strong>这些分级之间是不冲突的，反而是互相促进的</strong>。通过这两章的学习，特别是从具体技术到通用模式这样的方式，也许你已经体会到了这一点。</p> 
<p>那么现在，有了上面的说明，你是否已经清楚，该做出怎样的侧重了呢？</p> <p>显然，我们应该明确的一点是，把几乎全部的精力都投入到这个分级的右端，换言之，<strong>把大量的时间都花在记忆一个接一个的框架和库上面，妄图靠数量取胜，不可取</strong>。有时更可悲的是，就连生硬的记忆本身也不讨好——都不用等到技术淘汰了，它们还都是公司内部的框架和库，离开公司就一文不值了。</p> 
<p>因为，这只是单纯地记忆，没有比较、分析、思考这些能让这个分级均衡发展的行为。而这，我认为正是系统的技术学习中最大的误区。</p> <p>我举一个真实的例子来说明这个现象，有位程序员朋友学习前端技术，最开始使用 
Backbone.js，后来陆续用过 AngularJS 以及 React，现在准备转向 Vue.js。看起来似乎很勤奋，但是他自己却说他依然只是停留在上头说用什么，自己就跟着学什么的程度，自己也没有什么想法，总之越学越麻木……他自己还说“不知道何时是个头”。</p> 
<p>接着，我想展开讲一下其它几个具体技术学习中的典型误区，而这些误区，在我看来也都和是否努力无关，本质上也都属于不恰当的“选择”。</p> <p><strong>1. 过于关注配置使用，忽略原理和场景分析。</strong></p> 
<p>这一点我觉得是最容易在迈入职场没多久的程序员身上见到的问题，非常普遍。老板一个命令下来，心里慌得很，就想着怎么把问题搞定，而有一些问题是知识迷局一类的，比如，怎样配置整合 SSH（Struts、Spring 
和 Hibernate）。</p> <p>这类问题光靠想是没法得出结论的，于是通过各种搜索、查文档、试错等等方式，花了很长时间，好不容易搞定了问题，完成了需求，又紧锣密鼓地去接下一个任务去了。<strong>可是呢，对于刚才使用到的技术，付出了那么多，却只收获了这一个小小的迷局的解</strong>。这投入产出比低不说，人还是很健忘的，这些具体的配置和使用，只要不用，很快就会忘掉的，下次在遇到类似的问题，可能已经忘记了这些配置，于是又要重复这一行为。</p> 
<p><strong>2. 过于关注编程语言的语法和语言技巧，忽略语言思考和书写时的思维模式。</strong></p> <p>比如说，JavaScript 语言，里面有很多坑，但是有一些坑是语言本身的不良设计造成的，知道当然好，但也不要因此沾沾自喜。但是对于一个写惯了 
C++、Java 等后端静态语言的程序员来说，JavaScript 异步编程、函数成为一等公民等等这些颠覆以往编程思维模式的特性，才是学习这门新语言一个收获颇丰的地方（我们会在下一章介绍）。换言之，我们要写 
JavaScript，就要写真正的 JavaScript——而不是写 Java，再按字面翻译成 JavaScript。</p> <p><strong>3. 过于关注具体实现逻辑，忽略了对于设计的思考和权衡。</strong></p> 
<p>我看到很多程序员朋友都热衷于研究源码，看完一个库，再看下一个，有些人甚至以读过源码的数量为荣，张口闭口就是“你读过多少源码”。</p> <p>阅读源码当然是一件好事，但是请不要认为研究源码的目的只是“知道怎么实现”。毕竟，每个人的时间精力都是有限的，读源码尤其耗时。既然要读，就要读得有所收获，而不是凭空指望“读书百遍，其义自见”。比如说，阅读的时候，要抓住主干，去思考里面的设计思路，也就是所谓的“代码骨干”，忽略那些次要的边边角角。</p> 
<p><strong>4. 直接学习模式和思想，脱离了具体实践。</strong></p> <p>我已经介绍了模式和思想学习的好处，但是对于那些抽象的理论和概念，在没有实践的基础上，是很难真正“消化吸收”的。最好的方法是动手做一做，如果时间有限，至少也要阅读和了解它们都被哪些具体技术采用怎样的方式实现了。</p> 
<h2>基础知识和能力</h2> <p>下面我来说说第二个思路，基础知识和能力。</p> <p>即便在同一级的技术上，我们的学习也应该是有轻重缓急的。我们的项目中需要的技术，当然要学，但是我们心里需要清楚那些所谓的“基础”。生活不可能完美，工作也是，工作中学当然很好，但<strong>很遗憾的是，有很多“基础”光靠工作中学是很难有较大进步的</strong>。比方说，算法和数据结构。</p> 
<p>我认为，数据结构、算法、网络等等这些，都是基础知识，如果工作中的强化不够，工作以外的学习和训练还是需要的。如果你的基础不够扎实，特别是“非科班”出身的话，它就更加重要了。比较好的一点是，这些相对于“设计能力”“问题解决能力”等等来说，还是要好学很多。</p> 
<p><strong>除了基础知识，还有基础能力。最重要的，就是编程能力。</strong>值得庆幸的是，我相信大部分程序员都会在工作中有足够的编程时间，因此，只要专注、带着思考去写代码，认真对待代码评审，编程能力是会随着经验的增加而逐渐提升的。</p> 
<p>最后，你正在学习的这个专栏，涉及了大量的全栈技术相关的知识，但是从内容设计上你应该可以看出，我希望能更多地介绍其中的“套路”，也就是上图中的模式和思想，有些是同类技术所共同有的（比如前几讲介绍过的 
IoC），有些则是跨技术类型，但却依然共有的（比如幂等性和安全性）。</p> <h2>总结思考</h2> <p>今天的特别放送，我结合了自己的积累，介绍了我们该怎样做出选择，来应对这个“学不过来”的话题，特别是介绍了一些常见的学习误区，希望你能从我的答案中有所收获。</p> 
<p>今天就不放特定的思考题了，因为我觉得，这一类主观性特别强的话题，很容易有不同的认识，不需要拿问题来引导思考方向了，不加限定地思考会更好。欢迎你在下面的留言区谈谈自己的看法，我们一起讨论。</p> 
<h2>扩展阅读</h2> <ul> <li>有一篇文章，<a href="https://sizovs.net/2018/12/17/stop-learning-frameworks/">Stop 
Learning Frameworks</a>，观点比较朴实，也比较偏激，在程序员群体内掀起了轩然大波，有朋友翻译了，译文在<a href="https://zhuanlan.zhihu.com/p/52814937">这里</a>。</li> 
<li>关于传统关系数据库技术淘汰的事情，以前我写过一点小<a href="https://www.raychase.net/3689">体会</a>，可供参考。</li> </ul> 
<p><img src="https://static001.geekbang.org/resource/image/11/8b/1181246bbd51ce348d5729696d1dc28b.jpg" 
alt="unpreview"></p>', '', 'book', 0, 'full_html', 'zh-hans', 36, 36) 
 {executed in 0 msec}
2020-11-19 11:21:36.560 INFO  jdbc.sqltiming Line:373 - select nodefiledd0_.nid as nid1_9_, nodefiledd0_.changed as changed2_9_, nodefiledd0_.created 
as created3_9_, nodefiledd0_.default_langcode as default_4_9_, nodefiledd0_.langcode as langcode5_9_, 
nodefiledd0_.promote as promote6_9_, nodefiledd0_.revision_translation_affected as revision7_9_, 
nodefiledd0_.status as status8_9_, nodefiledd0_.sticky as sticky9_9_, nodefiledd0_.title as 
title10_9_, nodefiledd0_.type as type11_9_, nodefiledd0_.uid as uid12_9_, nodefiledd0_.vid 
as vid13_9_ from node_field_data nodefiledd0_ where nodefiledd0_.nid=36 
 {executed in 0 msec}
2020-11-19 11:21:36.561 INFO  jdbc.resultsettable Line:610 - 
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|-----|----|----|
|nid |changed |created |default_langcode |langcode |promote |revision_translation_affected |status |sticky |title |type |uid |vid |
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|-----|----|----|
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|-----|----|----|

2020-11-19 11:21:36.562 INFO  jdbc.sqltiming Line:373 - select nodefieldr0_.nid as nid1_10_0_, nodefieldr0_.changed as changed2_10_0_, nodefieldr0_.created 
as created3_10_0_, nodefieldr0_.default_langcode as default_4_10_0_, nodefieldr0_.langcode 
as langcode5_10_0_, nodefieldr0_.promote as promote6_10_0_, nodefieldr0_.revision_translation_affected 
as revision7_10_0_, nodefieldr0_.status as status8_10_0_, nodefieldr0_.sticky as sticky9_10_0_, 
nodefieldr0_.title as title10_10_0_, nodefieldr0_.uid as uid11_10_0_, nodefieldr0_.vid as vid12_10_0_ 
from node_field_revision nodefieldr0_ where nodefieldr0_.nid=36 
 {executed in 1 msec}
2020-11-19 11:21:36.562 INFO  jdbc.resultsettable Line:610 - 
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|----|----|
|nid |changed |created |default_langcode |langcode |promote |revision_translation_affected |status |sticky |title |uid |vid |
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|----|----|
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|----|----|

2020-11-19 11:21:36.564 INFO  jdbc.sqltiming Line:373 - insert into node_field_revision (changed, created, default_langcode, langcode, promote, revision_translation_affected, 
status, sticky, title, uid, vid, nid) values (1605756096, 1605756096, 1, 'zh-hans', 0, 1, 1, 
0, '13丨特别放送：选择比努力更重要', 1, 36, 36) 
 {executed in 1 msec}
2020-11-19 11:21:36.566 INFO  jdbc.sqltiming Line:373 - select nodefiledd0_.nid as nid1_9_0_, nodefiledd0_.changed as changed2_9_0_, nodefiledd0_.created 
as created3_9_0_, nodefiledd0_.default_langcode as default_4_9_0_, nodefiledd0_.langcode as 
langcode5_9_0_, nodefiledd0_.promote as promote6_9_0_, nodefiledd0_.revision_translation_affected 
as revision7_9_0_, nodefiledd0_.status as status8_9_0_, nodefiledd0_.sticky as sticky9_9_0_, 
nodefiledd0_.title as title10_9_0_, nodefiledd0_.type as type11_9_0_, nodefiledd0_.uid as uid12_9_0_, 
nodefiledd0_.vid as vid13_9_0_ from node_field_data nodefiledd0_ where nodefiledd0_.nid=36 
 {executed in 0 msec}
2020-11-19 11:21:36.567 INFO  jdbc.resultsettable Line:610 - 
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|-----|----|----|
|nid |changed |created |default_langcode |langcode |promote |revision_translation_affected |status |sticky |title |type |uid |vid |
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|-----|----|----|
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|-----|----|----|

2020-11-19 11:21:36.568 INFO  jdbc.sqltiming Line:373 - insert into node_field_data (changed, created, default_langcode, langcode, promote, revision_translation_affected, 
status, sticky, title, type, uid, vid, nid) values (1605756096, 1605756096, 1, 'zh-hans', 0, 
1, 1, 0, '13丨特别放送：选择比努力更重要', 'book', 1, 36, 36) 
 {executed in 0 msec}
2020-11-19 11:21:36.571 INFO  jdbc.sqltiming Line:373 - select bookfieldm0_.entity_id as entity_i1_7_, bookfieldm0_.bundle as bundle2_7_, bookfieldm0_.delta 
as delta3_7_, bookfieldm0_.langcode as langcode4_7_, bookfieldm0_.field_media_value as field_me5_7_, 
bookfieldm0_.revision_id as revision6_7_ from node__field_media bookfieldm0_ where bookfieldm0_.entity_id=36 
 {executed in 1 msec}
2020-11-19 11:21:36.571 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------------|------------|
|entity_id |bundle |delta |langcode |field_media_value |revision_id |
|----------|-------|------|---------|------------------|------------|
|----------|-------|------|---------|------------------|------------|

2020-11-19 11:21:36.571 INFO  jdbc.sqltiming Line:373 - select bookfieldm0_.entity_id as entity_i1_7_0_, bookfieldm0_.bundle as bundle2_7_0_, bookfieldm0_.delta 
as delta3_7_0_, bookfieldm0_.langcode as langcode4_7_0_, bookfieldm0_.field_media_value as 
field_me5_7_0_, bookfieldm0_.revision_id as revision6_7_0_ from node__field_media bookfieldm0_ 
where bookfieldm0_.entity_id=36 
 {executed in 0 msec}
2020-11-19 11:21:36.572 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------------|------------|
|entity_id |bundle |delta |langcode |field_media_value |revision_id |
|----------|-------|------|---------|------------------|------------|
|----------|-------|------|---------|------------------|------------|

2020-11-19 11:21:36.573 INFO  jdbc.sqltiming Line:373 - insert into node__field_media (bundle, delta, langcode, field_media_value, revision_id, entity_id) 
values ('book', 0, 'zh-hans', 'https://qdall01.baidupcs.com/file/4b85142bb60ed11bd446c5b9d0bc2b2f?bkt=en-1df98aeb722e81f5d723fac28d678c38a476821f313633cd92be7f545e22de646041a3ffcecf8a30&fid=3757516097-778750-481308051979037&time=1605756095&sign=FDTAXUGERLQlBHSKfWqir-DCb740ccc5511e5e8fedcff06b081203-Ck5E0lseKXJ4Ucyim%2F%2BlWFPNr9Y%3D&to=92&size=12819831&sta_dx=12819831&sta_cs=3660&sta_ft=m4a&sta_ct=7&sta_mt=0&fm2=MH%2CYangquan%2CAnywhere%2C%2Cshanghai%2Cct&ctime=1571030250&mtime=1605754778&resv0=-1&resv1=0&resv2=rlim&resv3=2&resv4=12819831&vuk=3757516097&iv=0&htype=&randtype=em&newver=1&newfm=1&secfm=1&flow_ver=3&pkey=en-17fb63a5422d08b4f2957cff33ec142b0ce2ef7732cef3213da9841552bdb06281ed29c7dda9e912&sl=76480590&expires=8h&rt=pr&r=368037844&mlogid=7502259450982594553&vbdid=2247232042&fin=13%E4%B8%A8%E7%89%B9%E5%88%AB%E6%94%BE%E9%80%81%EF%BC%9A%E9%80%89%E6%8B%A9%E6%AF%94%E5%8A%AA%E5%8A%9B%E6%9B%B4%E9%87%8D%E8%A6%81.m4a&bflag=92,34-92&rtype=1&dp-logid=7502259450982594553&dp-callid=0.1.1&hps=1&tsl=80&csl=80&fsl=-1&csign=yVzLQPCt4DblfMLqd2BCjd2RnqQ%3D&so=0&ut=6&uter=0&serv=0&uc=1458616558&ti=cdac697817123980f6fe281c435d7243f250e16d9c7bcb82305a5e1275657320&hflag=30&adg=c_15d187590626c675056c89c8026cfc17&reqlabel=778750_l_1bf9445f27094ab64c9f1cb0bdf7ccfa_-1_dd2c452b8e51a0c74130d7cf32c48a2d&ibp=1&by=themis&filename=13%E4%B8%A8%E7%89%B9%E5%88%AB%E6%94%BE%E9%80%81%EF%BC%9A%E9%80%89%E6%8B%A9%E6%AF%94%E5%8A%AA%E5%8A%9B%E6%9B%B4%E9%87%8D%E8%A6%81.m4a', 
36, 36) 
 {executed in 0 msec}
2020-11-19 11:21:36.578 INFO  jdbc.sqltiming Line:373 - select nodefieldm0_.entity_id as entity_i1_16_0_, nodefieldm0_.bundle as bundle2_16_0_, nodefieldm0_.delta 
as delta3_16_0_, nodefieldm0_.langcode as langcode4_16_0_, nodefieldm0_.field_media_value as 
field_me5_16_0_, nodefieldm0_.revision_id as revision6_16_0_ from node_revision__field_media 
nodefieldm0_ where nodefieldm0_.entity_id=36 
 {executed in 0 msec}
2020-11-19 11:21:36.579 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------------|------------|
|entity_id |bundle |delta |langcode |field_media_value |revision_id |
|----------|-------|------|---------|------------------|------------|
|----------|-------|------|---------|------------------|------------|

2020-11-19 11:21:36.580 INFO  jdbc.sqltiming Line:373 - insert into node_revision__field_media (bundle, delta, langcode, field_media_value, revision_id, 
entity_id) values ('book', 0, 'zh-hans', 'https://qdall01.baidupcs.com/file/4b85142bb60ed11bd446c5b9d0bc2b2f?bkt=en-1df98aeb722e81f5d723fac28d678c38a476821f313633cd92be7f545e22de646041a3ffcecf8a30&fid=3757516097-778750-481308051979037&time=1605756095&sign=FDTAXUGERLQlBHSKfWqir-DCb740ccc5511e5e8fedcff06b081203-Ck5E0lseKXJ4Ucyim%2F%2BlWFPNr9Y%3D&to=92&size=12819831&sta_dx=12819831&sta_cs=3660&sta_ft=m4a&sta_ct=7&sta_mt=0&fm2=MH%2CYangquan%2CAnywhere%2C%2Cshanghai%2Cct&ctime=1571030250&mtime=1605754778&resv0=-1&resv1=0&resv2=rlim&resv3=2&resv4=12819831&vuk=3757516097&iv=0&htype=&randtype=em&newver=1&newfm=1&secfm=1&flow_ver=3&pkey=en-17fb63a5422d08b4f2957cff33ec142b0ce2ef7732cef3213da9841552bdb06281ed29c7dda9e912&sl=76480590&expires=8h&rt=pr&r=368037844&mlogid=7502259450982594553&vbdid=2247232042&fin=13%E4%B8%A8%E7%89%B9%E5%88%AB%E6%94%BE%E9%80%81%EF%BC%9A%E9%80%89%E6%8B%A9%E6%AF%94%E5%8A%AA%E5%8A%9B%E6%9B%B4%E9%87%8D%E8%A6%81.m4a&bflag=92,34-92&rtype=1&dp-logid=7502259450982594553&dp-callid=0.1.1&hps=1&tsl=80&csl=80&fsl=-1&csign=yVzLQPCt4DblfMLqd2BCjd2RnqQ%3D&so=0&ut=6&uter=0&serv=0&uc=1458616558&ti=cdac697817123980f6fe281c435d7243f250e16d9c7bcb82305a5e1275657320&hflag=30&adg=c_15d187590626c675056c89c8026cfc17&reqlabel=778750_l_1bf9445f27094ab64c9f1cb0bdf7ccfa_-1_dd2c452b8e51a0c74130d7cf32c48a2d&ibp=1&by=themis&filename=13%E4%B8%A8%E7%89%B9%E5%88%AB%E6%94%BE%E9%80%81%EF%BC%9A%E9%80%89%E6%8B%A9%E6%AF%94%E5%8A%AA%E5%8A%9B%E6%9B%B4%E9%87%8D%E8%A6%81.m4a', 
36, 36) 
 {executed in 0 msec}
2020-11-19 11:21:36.584 INFO  jdbc.sqltiming Line:373 - select bookfieldc0_.entity_id as entity_i1_4_, bookfieldc0_.bundle as bundle2_4_, bookfieldc0_.field_comment_value 
as field_co3_4_, bookfieldc0_.delta as delta4_4_, bookfieldc0_.field_comment_format as field_co5_4_, 
bookfieldc0_.langcode as langcode6_4_, bookfieldc0_.revision_id as revision7_4_ from node__field_comment 
bookfieldc0_ where bookfieldc0_.entity_id=36 
 {executed in 0 msec}
2020-11-19 11:21:36.584 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|--------------------|------|---------------------|---------|------------|
|entity_id |bundle |field_comment_value |delta |field_comment_format |langcode |revision_id |
|----------|-------|--------------------|------|---------------------|---------|------------|
|----------|-------|--------------------|------|---------------------|---------|------------|

2020-11-19 11:21:36.585 INFO  jdbc.sqltiming Line:373 - select bookfieldc0_.entity_id as entity_i1_4_0_, bookfieldc0_.bundle as bundle2_4_0_, bookfieldc0_.field_comment_value 
as field_co3_4_0_, bookfieldc0_.delta as delta4_4_0_, bookfieldc0_.field_comment_format as 
field_co5_4_0_, bookfieldc0_.langcode as langcode6_4_0_, bookfieldc0_.revision_id as revision7_4_0_ 
from node__field_comment bookfieldc0_ where bookfieldc0_.entity_id=36 
 {executed in 0 msec}
2020-11-19 11:21:36.585 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|--------------------|------|---------------------|---------|------------|
|entity_id |bundle |field_comment_value |delta |field_comment_format |langcode |revision_id |
|----------|-------|--------------------|------|---------------------|---------|------------|
|----------|-------|--------------------|------|---------------------|---------|------------|

2020-11-19 11:21:36.587 INFO  jdbc.sqltiming Line:373 - insert into node__field_comment (bundle, field_comment_value, delta, field_comment_format, 
langcode, revision_id, entity_id) values ('book', '<li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/16/bc/25/1c92a90c.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>tt</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2019-10-09 </div> </div> <!----> </div> 
<div> <div class="_3M6kV3zb_0"> 说到心坎里去了，坚持正确得做事。 </div> <div class="_2r3UB1GX_0"> <span>展开</span><i 
class="iconfont"></i> </div> <!----> <div class="_1w8H0ktn_0 _2A421P4G_0"> <div class="_2jsFl-X0_0"> 
<i class="iconfont"></i> <span></span> </div> <div class="_2P4B1Hdm_0"> <i class="iconfont"></i> 
<span class="">3</span> </div> <!----> </div> </div> </div></li> <li class="reJj6Thl_0"><img 
src="https://static001.geekbang.org/account/avatar/00/10/cc/ce/39c470ee.jpg" class="_2273kGdT_0"> 
<div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> <span>jxs1211</span> 
<!----> </div> <div class="_1H1Z49Dr_0"> 2019-10-09 </div> </div> <!----> </div> <div> <div 
class="_3M6kV3zb_0"> 1、python这样的脚本语言，是否没有对应平台可以学习，如果是，那么应该如何学习这门语言，如果用做web开发，是否只能去找对应的库来学习就可以了，还有其它需要关注的吗 
<br>2、SQL是一门半衰期很长的语言，学习sql也要是很有价值的，可以归为是语言和平台吧，是这样的吗 </div> <div class="_2r3UB1GX_0"> <span>展开</span><i 
class="iconfont"></i> </div> <!----> <div class="_1w8H0ktn_0 _2A421P4G_0"> <div class="_2jsFl-X0_0"> 
<i class="iconfont"></i> <span>1</span> </div> <div class="_2P4B1Hdm_0"> <i class="iconfont"></i> 
<span class="">1</span> </div> <!----> </div> </div> </div></li> <li class="reJj6Thl_0"><img 
src="https://static001.geekbang.org/account/avatar/00/0f/a8/35/85033228.jpg" class="_2273kGdT_0"> 
<div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> <span>亚东</span> 
<!----> </div> <div class="_1H1Z49Dr_0"> 2019-10-09 </div> </div> <!----> </div> <div> <div 
class="_3M6kV3zb_0 _3D2NkqD6_0"> 老师讲到沟通能力真的蛮重要的。我最近换了工作，同事的一些不专业的行为老是把我激怒。我感觉很难受，分分钟想离职。但是又感觉工作就是跟各种人合作，要是过不了这个坎也不行。 
</div> <!----> <!----> <div class="_1w8H0ktn_0 _2A421P4G_0"> <div class="_2jsFl-X0_0"> <i class="iconfont"></i> 
<span></span> </div> <div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class="">1</span> 
</div> <!----> </div> </div> </div></li> <li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/0f/f8/99/8e760987.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>許敲敲</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2019-10-09 </div> </div> <!----> 
</div> <div> <div class="_3M6kV3zb_0"> 数据结构 算法 网络 这种基础要学到什么程度呢？ </div> <div class="_2r3UB1GX_0"> 
<span>展开</span><i class="iconfont"></i> </div> <!----> <div class="_1w8H0ktn_0 _2A421P4G_0"> 
<div class="_2jsFl-X0_0"> <i class="iconfont"></i> <span></span> </div> <div class="_2P4B1Hdm_0"> 
<i class="iconfont"></i> <span class="">1</span> </div> <!----> </div> </div> </div></li> 
<li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/11/c0/0e/c380fb0b.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>赖新宇</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2019-10-12 </div> </div> <!----> 
</div> <div> <div class="_3M6kV3zb_0"> 老师，我现在作为一个前端，怎么可以找到全栈的工作，好多公司都要求相关经验，这个事情把我搞得有点头疼 </div> 
<div class="_2r3UB1GX_0"> <span>展开</span><i class="iconfont"></i> </div> <div class="_2xNIY4NG_0"> 
<p class="_33BLbmw4_0">作者回复: 我觉得先“吃饱”，再“吃好”，找一份理想工作总不是那么容易的。如果你能拿到理想的前端的 offer，那就去做吧，在工作中再慢慢积累经验和寻找项目和团队的机会。</p> 
</div> <div class="_1w8H0ktn_0 _2A421P4G_0"> <div class="_2jsFl-X0_0"> <i class="iconfont"></i> 
<span></span> </div> <div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class=""></span> 
</div> <!----> </div> </div> </div></li> <li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/10/df/63/cf317827.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>anginiit</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2019-10-11 </div> </div> <!----> 
</div> <div> <div class="_3M6kV3zb_0 _3D2NkqD6_0"> 老师那句 光靠工作中学习是远远不够的 说得太对了，几年工作下来，体会很深，编程能力提高很快，几年基本就到顶点，但数据结构算法网络 
原理等深一些的东西还是模糊的很。 </div> <!----> <!----> <div class="_1w8H0ktn_0 _2A421P4G_0"> <div class="_2jsFl-X0_0"> 
<i class="iconfont"></i> <span></span> </div> <div class="_2P4B1Hdm_0"> <i class="iconfont"></i> 
<span class=""></span> </div> <!----> </div> </div> </div></li> <li class="reJj6Thl_0"><img 
src="https://static001.geekbang.org/account/avatar/00/19/31/bc/4e679d81.jpg" class="_2273kGdT_0"> 
<div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> <span>没带就是没写</span> 
<!----> </div> <div class="_1H1Z49Dr_0"> 2019-10-11 </div> </div> <!----> </div> <div> <div 
class="_3M6kV3zb_0 _3D2NkqD6_0"> 为啥说语言平台比语言稳定呢？如果java没有热度了，没人用了，那么jvm平台就没人用了啊，存亡齿寒的关系。老师的意思是说语言的版本，比如java7 
8 9 10迭代的比jvm快吗？ </div> <!----> <div class="_2xNIY4NG_0"> <p class="_33BLbmw4_0">作者回复: 这是个泛指，其中一个原因是，你说的这个依赖关系，其实是单向的，比如说，JVM 
是支持许多编程语言的，可不只有 Java 一种啊：https://en.wikipedia.org/wiki/List_of_JVM_languages</p> </div> <div 
class="_1w8H0ktn_0 _2A421P4G_0"> <div class="_2jsFl-X0_0"> <i class="iconfont"></i> <span></span> 
</div> <div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class=""></span> </div> <!----> 
</div> </div> </div></li> <li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/14/34/df/64e3d533.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>leslie</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2019-10-11 </div> </div> <!----> 
</div> <div> <div class="_3M6kV3zb_0"> 其实任何都是一个过程吧：其实更多的是根据现状去补充吧；其实自己说不上自己的选择是对还是错，不过确实全栈和DevOps两门课的学习补了我的典型短板，现在又在适当的扩展去强化算法-和Nosql相关。 
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;明确自己的主线然后不断的添砖加瓦吧：就像刘超老师在教授linux的系统的同时自己还在学徐老师的计算机原理然后补充到自己的课程中，明白自己的核心主线/主体然后强化自己周边的技能吧。数据系统和运维需要强化的是不同的，越往上越要明白核心然后逐渐补强典型的弱点吧；PY在学、GO也在学，不过适用场景是完全不一样的，当然深度不一样，全栈其实还是有核心的-这是跟老师的课程到现在的一点感悟吧。 
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;可能有时会去理解全栈是什么都会什么都懂，其实这个同样有重点和非重点的；根据自己的核心去扩-不要为了全栈而全栈，选择几个核心技能然后其它适当轻之，从而让自己能更好的整体把握和解决问题，这是跟老师的课到现在明白的方向。 
<br> </div> <div class="_2r3UB1GX_0"> <span>展开</span><i class="iconfont"></i> </div> <div 
class="_2xNIY4NG_0"> <p class="_33BLbmw4_0">作者回复: 👍</p> </div> <div class="_1w8H0ktn_0 _2A421P4G_0"> 
<div class="_2jsFl-X0_0"> <i class="iconfont"></i> <span></span> </div> <div class="_2P4B1Hdm_0"> 
<i class="iconfont"></i> <span class=""></span> </div> <!----> </div> </div> </div></li>', 
0, 'full_html', 'zh-hans', 36, 36) 
 {executed in 1 msec}
2020-11-19 11:21:36.590 INFO  jdbc.sqltiming Line:373 - select nodefieldc0_.entity_id as entity_i1_13_0_, nodefieldc0_.bundle as bundle2_13_0_, nodefieldc0_.field_comment_value 
as field_co3_13_0_, nodefieldc0_.delta as delta4_13_0_, nodefieldc0_.field_comment_format as 
field_co5_13_0_, nodefieldc0_.langcode as langcode6_13_0_, nodefieldc0_.revision_id as revision7_13_0_ 
from node_revision__field_comment nodefieldc0_ where nodefieldc0_.entity_id=36 
 {executed in 0 msec}
2020-11-19 11:21:36.591 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|--------------------|------|---------------------|---------|------------|
|entity_id |bundle |field_comment_value |delta |field_comment_format |langcode |revision_id |
|----------|-------|--------------------|------|---------------------|---------|------------|
|----------|-------|--------------------|------|---------------------|---------|------------|

2020-11-19 11:21:36.592 INFO  jdbc.sqltiming Line:373 - insert into node_revision__field_comment (bundle, field_comment_value, delta, field_comment_format, 
langcode, revision_id, entity_id) values ('book', '<li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/16/bc/25/1c92a90c.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>tt</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2019-10-09 </div> </div> <!----> </div> 
<div> <div class="_3M6kV3zb_0"> 说到心坎里去了，坚持正确得做事。 </div> <div class="_2r3UB1GX_0"> <span>展开</span><i 
class="iconfont"></i> </div> <!----> <div class="_1w8H0ktn_0 _2A421P4G_0"> <div class="_2jsFl-X0_0"> 
<i class="iconfont"></i> <span></span> </div> <div class="_2P4B1Hdm_0"> <i class="iconfont"></i> 
<span class="">3</span> </div> <!----> </div> </div> </div></li> <li class="reJj6Thl_0"><img 
src="https://static001.geekbang.org/account/avatar/00/10/cc/ce/39c470ee.jpg" class="_2273kGdT_0"> 
<div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> <span>jxs1211</span> 
<!----> </div> <div class="_1H1Z49Dr_0"> 2019-10-09 </div> </div> <!----> </div> <div> <div 
class="_3M6kV3zb_0"> 1、python这样的脚本语言，是否没有对应平台可以学习，如果是，那么应该如何学习这门语言，如果用做web开发，是否只能去找对应的库来学习就可以了，还有其它需要关注的吗 
<br>2、SQL是一门半衰期很长的语言，学习sql也要是很有价值的，可以归为是语言和平台吧，是这样的吗 </div> <div class="_2r3UB1GX_0"> <span>展开</span><i 
class="iconfont"></i> </div> <!----> <div class="_1w8H0ktn_0 _2A421P4G_0"> <div class="_2jsFl-X0_0"> 
<i class="iconfont"></i> <span>1</span> </div> <div class="_2P4B1Hdm_0"> <i class="iconfont"></i> 
<span class="">1</span> </div> <!----> </div> </div> </div></li> <li class="reJj6Thl_0"><img 
src="https://static001.geekbang.org/account/avatar/00/0f/a8/35/85033228.jpg" class="_2273kGdT_0"> 
<div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> <span>亚东</span> 
<!----> </div> <div class="_1H1Z49Dr_0"> 2019-10-09 </div> </div> <!----> </div> <div> <div 
class="_3M6kV3zb_0 _3D2NkqD6_0"> 老师讲到沟通能力真的蛮重要的。我最近换了工作，同事的一些不专业的行为老是把我激怒。我感觉很难受，分分钟想离职。但是又感觉工作就是跟各种人合作，要是过不了这个坎也不行。 
</div> <!----> <!----> <div class="_1w8H0ktn_0 _2A421P4G_0"> <div class="_2jsFl-X0_0"> <i class="iconfont"></i> 
<span></span> </div> <div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class="">1</span> 
</div> <!----> </div> </div> </div></li> <li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/0f/f8/99/8e760987.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>許敲敲</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2019-10-09 </div> </div> <!----> 
</div> <div> <div class="_3M6kV3zb_0"> 数据结构 算法 网络 这种基础要学到什么程度呢？ </div> <div class="_2r3UB1GX_0"> 
<span>展开</span><i class="iconfont"></i> </div> <!----> <div class="_1w8H0ktn_0 _2A421P4G_0"> 
<div class="_2jsFl-X0_0"> <i class="iconfont"></i> <span></span> </div> <div class="_2P4B1Hdm_0"> 
<i class="iconfont"></i> <span class="">1</span> </div> <!----> </div> </div> </div></li> 
<li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/11/c0/0e/c380fb0b.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>赖新宇</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2019-10-12 </div> </div> <!----> 
</div> <div> <div class="_3M6kV3zb_0"> 老师，我现在作为一个前端，怎么可以找到全栈的工作，好多公司都要求相关经验，这个事情把我搞得有点头疼 </div> 
<div class="_2r3UB1GX_0"> <span>展开</span><i class="iconfont"></i> </div> <div class="_2xNIY4NG_0"> 
<p class="_33BLbmw4_0">作者回复: 我觉得先“吃饱”，再“吃好”，找一份理想工作总不是那么容易的。如果你能拿到理想的前端的 offer，那就去做吧，在工作中再慢慢积累经验和寻找项目和团队的机会。</p> 
</div> <div class="_1w8H0ktn_0 _2A421P4G_0"> <div class="_2jsFl-X0_0"> <i class="iconfont"></i> 
<span></span> </div> <div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class=""></span> 
</div> <!----> </div> </div> </div></li> <li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/10/df/63/cf317827.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>anginiit</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2019-10-11 </div> </div> <!----> 
</div> <div> <div class="_3M6kV3zb_0 _3D2NkqD6_0"> 老师那句 光靠工作中学习是远远不够的 说得太对了，几年工作下来，体会很深，编程能力提高很快，几年基本就到顶点，但数据结构算法网络 
原理等深一些的东西还是模糊的很。 </div> <!----> <!----> <div class="_1w8H0ktn_0 _2A421P4G_0"> <div class="_2jsFl-X0_0"> 
<i class="iconfont"></i> <span></span> </div> <div class="_2P4B1Hdm_0"> <i class="iconfont"></i> 
<span class=""></span> </div> <!----> </div> </div> </div></li> <li class="reJj6Thl_0"><img 
src="https://static001.geekbang.org/account/avatar/00/19/31/bc/4e679d81.jpg" class="_2273kGdT_0"> 
<div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> <span>没带就是没写</span> 
<!----> </div> <div class="_1H1Z49Dr_0"> 2019-10-11 </div> </div> <!----> </div> <div> <div 
class="_3M6kV3zb_0 _3D2NkqD6_0"> 为啥说语言平台比语言稳定呢？如果java没有热度了，没人用了，那么jvm平台就没人用了啊，存亡齿寒的关系。老师的意思是说语言的版本，比如java7 
8 9 10迭代的比jvm快吗？ </div> <!----> <div class="_2xNIY4NG_0"> <p class="_33BLbmw4_0">作者回复: 这是个泛指，其中一个原因是，你说的这个依赖关系，其实是单向的，比如说，JVM 
是支持许多编程语言的，可不只有 Java 一种啊：https://en.wikipedia.org/wiki/List_of_JVM_languages</p> </div> <div 
class="_1w8H0ktn_0 _2A421P4G_0"> <div class="_2jsFl-X0_0"> <i class="iconfont"></i> <span></span> 
</div> <div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class=""></span> </div> <!----> 
</div> </div> </div></li> <li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/14/34/df/64e3d533.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>leslie</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2019-10-11 </div> </div> <!----> 
</div> <div> <div class="_3M6kV3zb_0"> 其实任何都是一个过程吧：其实更多的是根据现状去补充吧；其实自己说不上自己的选择是对还是错，不过确实全栈和DevOps两门课的学习补了我的典型短板，现在又在适当的扩展去强化算法-和Nosql相关。 
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;明确自己的主线然后不断的添砖加瓦吧：就像刘超老师在教授linux的系统的同时自己还在学徐老师的计算机原理然后补充到自己的课程中，明白自己的核心主线/主体然后强化自己周边的技能吧。数据系统和运维需要强化的是不同的，越往上越要明白核心然后逐渐补强典型的弱点吧；PY在学、GO也在学，不过适用场景是完全不一样的，当然深度不一样，全栈其实还是有核心的-这是跟老师的课程到现在的一点感悟吧。 
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;可能有时会去理解全栈是什么都会什么都懂，其实这个同样有重点和非重点的；根据自己的核心去扩-不要为了全栈而全栈，选择几个核心技能然后其它适当轻之，从而让自己能更好的整体把握和解决问题，这是跟老师的课到现在明白的方向。 
<br> </div> <div class="_2r3UB1GX_0"> <span>展开</span><i class="iconfont"></i> </div> <div 
class="_2xNIY4NG_0"> <p class="_33BLbmw4_0">作者回复: 👍</p> </div> <div class="_1w8H0ktn_0 _2A421P4G_0"> 
<div class="_2jsFl-X0_0"> <i class="iconfont"></i> <span></span> </div> <div class="_2P4B1Hdm_0"> 
<i class="iconfont"></i> <span class=""></span> </div> <!----> </div> </div> </div></li>', 
0, 'full_html', 'zh-hans', 36, 36) 
 {executed in 0 msec}
2020-11-19 11:21:36.596 INFO  jdbc.sqltiming Line:373 - select bookfieldt0_.entity_id as entity_i1_8_, bookfieldt0_.bundle as bundle2_8_, bookfieldt0_.delta 
as delta3_8_, bookfieldt0_.langcode as langcode4_8_, bookfieldt0_.revision_id as revision5_8_, 
bookfieldt0_.field_thumb_value as field_th6_8_ from node__field_thumb bookfieldt0_ where bookfieldt0_.entity_id=36 
 {executed in 0 msec}
2020-11-19 11:21:36.597 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------|------------------|
|entity_id |bundle |delta |langcode |revision_id |field_thumb_value |
|----------|-------|------|---------|------------|------------------|
|----------|-------|------|---------|------------|------------------|

2020-11-19 11:21:36.597 INFO  jdbc.sqltiming Line:373 - select bookfieldt0_.entity_id as entity_i1_8_0_, bookfieldt0_.bundle as bundle2_8_0_, bookfieldt0_.delta 
as delta3_8_0_, bookfieldt0_.langcode as langcode4_8_0_, bookfieldt0_.revision_id as revision5_8_0_, 
bookfieldt0_.field_thumb_value as field_th6_8_0_ from node__field_thumb bookfieldt0_ where 
bookfieldt0_.entity_id=36 
 {executed in 0 msec}
2020-11-19 11:21:36.598 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------|------------------|
|entity_id |bundle |delta |langcode |revision_id |field_thumb_value |
|----------|-------|------|---------|------------|------------------|
|----------|-------|------|---------|------------|------------------|

2020-11-19 11:21:36.599 INFO  jdbc.sqltiming Line:373 - insert into node__field_thumb (bundle, delta, langcode, revision_id, field_thumb_value, entity_id) 
values ('book', 0, 'zh-hans', 36, 'https://static001.geekbang.org/resource/image/3c/cf/3c6b90557d664eda750323f6b44450cf.jpg', 
36) 
 {executed in 0 msec}
2020-11-19 11:21:36.603 INFO  jdbc.sqltiming Line:373 - select nodefieldt0_.entity_id as entity_i1_17_0_, nodefieldt0_.bundle as bundle2_17_0_, nodefieldt0_.delta 
as delta3_17_0_, nodefieldt0_.langcode as langcode4_17_0_, nodefieldt0_.revision_id as revision5_17_0_, 
nodefieldt0_.field_thumb_value as field_th6_17_0_ from node_revision__field_thumb nodefieldt0_ 
where nodefieldt0_.entity_id=36 
 {executed in 1 msec}
2020-11-19 11:21:36.603 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------|------------------|
|entity_id |bundle |delta |langcode |revision_id |field_thumb_value |
|----------|-------|------|---------|------------|------------------|
|----------|-------|------|---------|------------|------------------|

2020-11-19 11:21:36.604 INFO  jdbc.sqltiming Line:373 - insert into node_revision__field_thumb (bundle, delta, langcode, revision_id, field_thumb_value, 
entity_id) values ('book', 0, 'zh-hans', 36, 'https://static001.geekbang.org/resource/image/3c/cf/3c6b90557d664eda750323f6b44450cf.jpg', 
36) 
 {executed in 0 msec}
2020-11-19 11:21:36.608 INFO  jdbc.sqltiming Line:373 - select bookfieldf0_.entity_id as entity_i1_5_0_, bookfieldf0_.bundle as bundle2_5_0_, bookfieldf0_.delta 
as delta3_5_0_, bookfieldf0_.field_fenlei_target_id as field_fe4_5_0_, bookfieldf0_.langcode 
as langcode5_5_0_, bookfieldf0_.revision_id as revision6_5_0_ from node__field_fenlei bookfieldf0_ 
where bookfieldf0_.entity_id=36 
 {executed in 0 msec}
2020-11-19 11:21:36.609 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------------|---------|------------|
|entity_id |bundle |delta |field_fenlei_target_id |langcode |revision_id |
|----------|-------|------|-----------------------|---------|------------|
|----------|-------|------|-----------------------|---------|------------|

2020-11-19 11:21:36.610 INFO  jdbc.sqltiming Line:373 - insert into node__field_fenlei (bundle, delta, field_fenlei_target_id, langcode, revision_id, 
entity_id) values ('book', 0, 1, 'zh-hans', 36, 36) 
 {executed in 0 msec}
2020-11-19 11:21:36.615 INFO  jdbc.sqltiming Line:373 - select nodefieldf0_.entity_id as entity_i1_14_0_, nodefieldf0_.bundle as bundle2_14_0_, nodefieldf0_.delta 
as delta3_14_0_, nodefieldf0_.field_fenlei_target_id as field_fe4_14_0_, nodefieldf0_.langcode 
as langcode5_14_0_, nodefieldf0_.revision_id as revision6_14_0_ from node_revision__field_fenlei 
nodefieldf0_ where nodefieldf0_.entity_id=36 
 {executed in 1 msec}
2020-11-19 11:21:36.615 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------------|---------|------------|
|entity_id |bundle |delta |field_fenlei_target_id |langcode |revision_id |
|----------|-------|------|-----------------------|---------|------------|
|----------|-------|------|-----------------------|---------|------------|

2020-11-19 11:21:36.616 INFO  jdbc.sqltiming Line:373 - insert into node_revision__field_fenlei (bundle, delta, field_fenlei_target_id, langcode, revision_id, 
entity_id) values ('book', 0, 1, 'zh-hans', 36, 36) 
 {executed in 0 msec}
2020-11-19 11:22:13.561 INFO  jdbc.sqltiming Line:373 - select bookfieldf0_.entity_id as entity_i1_6_, bookfieldf0_.bundle as bundle2_6_, bookfieldf0_.delta 
as delta3_6_, bookfieldf0_.field_fsid_value as field_fs4_6_, bookfieldf0_.langcode as langcode5_6_, 
bookfieldf0_.revision_id as revision6_6_ from node__field_fsid bookfieldf0_ where bookfieldf0_.field_fsid_value='556603380747239' 
 {executed in 0 msec}
2020-11-19 11:22:13.562 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------|---------|------------|
|entity_id |bundle |delta |field_fsid_value |langcode |revision_id |
|----------|-------|------|-----------------|---------|------------|
|----------|-------|------|-----------------|---------|------------|

2020-11-19 11:22:13.562 INFO  jdbc.sqltiming Line:373 - insert into node_revision (langcode, nid, revision_default, revision_timestamp, revision_uid) 
values ('zh-hans', 0, 1, 1605756133, 1) 
 {executed in 0 msec}
2020-11-19 11:22:13.563 INFO  jdbc.sqltiming Line:373 - getGeneratedKeys on query: insert into node_revision (langcode, nid, revision_default, revision_timestamp, 
revision_uid) values ('zh-hans', 0, 1, 1605756133, 1) 
 {executed in 0 msec}
2020-11-19 11:22:13.563 INFO  jdbc.resultsettable Line:610 - 
|--------------|
|generated_key |
|--------------|
|37            |
|--------------|

2020-11-19 11:22:13.572 INFO  jdbc.sqltiming Line:373 - insert into node (langcode, type, uuid, vid) values ('zh-hans', 'book', '1b32ddf7-fa3e-448c-a689-545df6c40fc7', 
37) 
 {executed in 1 msec}
2020-11-19 11:22:13.572 INFO  jdbc.sqltiming Line:373 - getGeneratedKeys on query: insert into node (langcode, type, uuid, vid) values ('zh-hans', 
'book', '1b32ddf7-fa3e-448c-a689-545df6c40fc7', 37) 
 {executed in 0 msec}
2020-11-19 11:22:13.572 INFO  jdbc.resultsettable Line:610 - 
|--------------|
|generated_key |
|--------------|
|37            |
|--------------|

2020-11-19 11:22:13.577 INFO  jdbc.sqltiming Line:373 - update node_revision set langcode='zh-hans', nid=37, revision_default=1, revision_timestamp=1605756133, 
revision_uid=1 where vid=37 
 {executed in 0 msec}
2020-11-19 11:22:13.581 INFO  jdbc.sqltiming Line:373 - select bookfieldf0_.entity_id as entity_i1_6_0_, bookfieldf0_.bundle as bundle2_6_0_, bookfieldf0_.delta 
as delta3_6_0_, bookfieldf0_.field_fsid_value as field_fs4_6_0_, bookfieldf0_.langcode as langcode5_6_0_, 
bookfieldf0_.revision_id as revision6_6_0_ from node__field_fsid bookfieldf0_ where bookfieldf0_.entity_id=37 
 {executed in 0 msec}
2020-11-19 11:22:13.582 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------|---------|------------|
|entity_id |bundle |delta |field_fsid_value |langcode |revision_id |
|----------|-------|------|-----------------|---------|------------|
|----------|-------|------|-----------------|---------|------------|

2020-11-19 11:22:13.583 INFO  jdbc.sqltiming Line:373 - insert into node__field_fsid (bundle, delta, field_fsid_value, langcode, revision_id, entity_id) 
values ('book', 0, '556603380747239', 'zh-hans', 37, 37) 
 {executed in 0 msec}
2020-11-19 11:22:13.587 INFO  jdbc.sqltiming Line:373 - select nodefieldf0_.entity_id as entity_i1_15_0_, nodefieldf0_.bundle as bundle2_15_0_, nodefieldf0_.delta 
as delta3_15_0_, nodefieldf0_.field_fsid_value as field_fs4_15_0_, nodefieldf0_.langcode as 
langcode5_15_0_, nodefieldf0_.revision_id as revision6_15_0_ from node_revision__field_fsid 
nodefieldf0_ where nodefieldf0_.entity_id=37 
 {executed in 1 msec}
2020-11-19 11:22:13.587 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------|---------|------------|
|entity_id |bundle |delta |field_fsid_value |langcode |revision_id |
|----------|-------|------|-----------------|---------|------------|
|----------|-------|------|-----------------|---------|------------|

2020-11-19 11:22:13.588 INFO  jdbc.sqltiming Line:373 - insert into node_revision__field_fsid (bundle, delta, field_fsid_value, langcode, revision_id, 
entity_id) values ('book', 0, '556603380747239', 'zh-hans', 37, 37) 
 {executed in 0 msec}
2020-11-19 11:22:13.592 INFO  jdbc.sqltiming Line:373 - select bookentity0_.nid as nid1_1_, bookentity0_.bid as bid2_1_, bookentity0_.depth as depth3_1_, 
bookentity0_.has_children as has_chil4_1_, bookentity0_.p1 as p5_1_, bookentity0_.p2 as p6_1_, 
bookentity0_.p3 as p7_1_, bookentity0_.p4 as p8_1_, bookentity0_.p5 as p9_1_, bookentity0_.pid 
as pid10_1_, bookentity0_.weight as weight11_1_ from book bookentity0_ where bookentity0_.nid=37 
 {executed in 0 msec}
2020-11-19 11:22:13.592 INFO  jdbc.resultsettable Line:610 - 
|----|----|------|-------------|---|---|---|---|---|----|-------|
|nid |bid |depth |has_children |p1 |p2 |p3 |p4 |p5 |pid |weight |
|----|----|------|-------------|---|---|---|---|---|----|-------|
|----|----|------|-------------|---|---|---|---|---|----|-------|

2020-11-19 11:22:13.593 INFO  jdbc.sqltiming Line:373 - select bookentity0_.nid as nid1_1_0_, bookentity0_.bid as bid2_1_0_, bookentity0_.depth as 
depth3_1_0_, bookentity0_.has_children as has_chil4_1_0_, bookentity0_.p1 as p5_1_0_, bookentity0_.p2 
as p6_1_0_, bookentity0_.p3 as p7_1_0_, bookentity0_.p4 as p8_1_0_, bookentity0_.p5 as p9_1_0_, 
bookentity0_.pid as pid10_1_0_, bookentity0_.weight as weight11_1_0_ from book bookentity0_ 
where bookentity0_.nid=37 
 {executed in 0 msec}
2020-11-19 11:22:13.593 INFO  jdbc.resultsettable Line:610 - 
|----|----|------|-------------|---|---|---|---|---|----|-------|
|nid |bid |depth |has_children |p1 |p2 |p3 |p4 |p5 |pid |weight |
|----|----|------|-------------|---|---|---|---|---|----|-------|
|----|----|------|-------------|---|---|---|---|---|----|-------|

2020-11-19 11:22:13.595 INFO  jdbc.sqltiming Line:373 - insert into book (bid, depth, has_children, p1, p2, p3, p4, p5, pid, weight, nid) values (1, 
3, 0, 1, 35, 37, 0, 0, 35, 0, 37) 
 {executed in 1 msec}
2020-11-19 11:22:13.597 INFO  jdbc.sqltiming Line:373 - select nodebodyen0_.entity_id as entity_i1_3_, nodebodyen0_.body_value as body_val2_3_, nodebodyen0_.body_summary 
as body_sum3_3_, nodebodyen0_.bundle as bundle4_3_, nodebodyen0_.delta as delta5_3_, nodebodyen0_.body_format 
as body_for6_3_, nodebodyen0_.langcode as langcode7_3_, nodebodyen0_.revision_id as revision8_3_ 
from node__body nodebodyen0_ where nodebodyen0_.entity_id=37 
 {executed in 0 msec}
2020-11-19 11:22:13.598 INFO  jdbc.resultsettable Line:610 - 
|----------|-----------|-------------|-------|------|------------|---------|------------|
|entity_id |body_value |body_summary |bundle |delta |body_format |langcode |revision_id |
|----------|-----------|-------------|-------|------|------------|---------|------------|
|----------|-----------|-------------|-------|------|------------|---------|------------|

2020-11-19 11:22:13.599 INFO  jdbc.sqltiming Line:373 - select nodebodyre0_.entity_id as entity_i1_12_0_, nodebodyre0_.body_value as body_val2_12_0_, 
nodebodyre0_.body_summary as body_sum3_12_0_, nodebodyre0_.bundle as bundle4_12_0_, nodebodyre0_.delta 
as delta5_12_0_, nodebodyre0_.body_format as body_for6_12_0_, nodebodyre0_.langcode as langcode7_12_0_, 
nodebodyre0_.revision_id as revision8_12_0_ from node_revision__body nodebodyre0_ where nodebodyre0_.entity_id=37 
 {executed in 1 msec}
2020-11-19 11:22:13.599 INFO  jdbc.resultsettable Line:610 - 
|----------|-----------|-------------|-------|------|------------|---------|------------|
|entity_id |body_value |body_summary |bundle |delta |body_format |langcode |revision_id |
|----------|-----------|-------------|-------|------|------------|---------|------------|
|----------|-----------|-------------|-------|------|------------|---------|------------|

2020-11-19 11:22:13.601 INFO  jdbc.sqltiming Line:373 - insert into node_revision__body (body_value, body_summary, bundle, delta, body_format, langcode, 
revision_id, entity_id) values ('<p>你好，我是四火。</p> <p>本章我们以 MVC 架构为核心，已经介绍了很多设计模式，今天我们将进一步泛化，谈论更多的 
Java EE 模式。这些模式，就是我们在搭建全栈架构、设计的工作过程中，不断总结和应用的“套路”。</p> <h2>背景和概念</h2> <p>我相信很多人都接触过面向对象模式，可是，模式是个通用词，面向对象只是其中的一个分支而已。事实上，我们本章的重点 
MVC 本身就是一种典型的模式，介绍过的 CQRS 是模式，学习过的 AOP、IoC，这些其实也都是模式。</p> <p>因此，和其它领域的技术相比，作为全栈工程师的我们，更有机会接触到各种模式。这些模式可以帮助我们在设计开发工作中拓宽思路，使用精巧的代码结构来解决实际问题。</p> 
<p>说到这里，你可能会问，为什么这次谈论模式的时候，要使用 Java EE 这个编程语言前缀？模式不是应该和语言无关吗？</p> <p>一点都没错，模式就是和语言无关的，但是，诞生模式最多的温床，就是 
Java 语言。</p> <p>世界上没有任何一门语言，像 Java 一样，几乎一直被黑，但是生态圈一直在壮大，且在工业界具备如此统治力。<strong>很多人说，Java 是一门平庸的语言，这可能没错，但是它对于底层细节的封装和语言本身的难度做到了很好的平衡</strong>，它不一定会有多精巧、多出彩，但是新手也可以顺利完成工作，且不容易写出破坏性强、其他人难以接手的代码，这对于要规模、要量产的工业界来说，简直是超级福音。</p><!-- 
[[[read_end]]] --> <p><strong>使用 Java 的人可以快速上手，也可以把精力专注在高层的架构和设计上面，这就是为什么使用 Java 的人往往对模式特别敏感的原因。</strong></p> 
<p>当然，语言本身的江湖地位也和生态圈密切相关，更先进、更合理的语言一直在出现，但要把整个语言推翻另起炉灶，其难度可想而知，毕竟一门语言还涉及到社区、厂商、开源库、标准等等。</p> 
<p>在互联网的战场上，我们一直能看到类似的例子，比如在前端领域 JavaScript 就是一个相对“草率”，有着诸多缺陷的语言，在它之后有许多更先进的语言尝试把它替代（比如 Google 
强推的 <a href="https://dart.dev/">Dart</a>），但是这件事情是极其困难的。</p> <p>那么，什么是 Java EE，为什么是 Java EE？</p> 
<p>Java EE，全称为 Java Platform Enterprise Edition，即 Java 平台企业版，是 Java 的三大平台之一，另两大是 Java SE（标准版）和 
Java ME（微型版）。企业市场对软件的需求和大众市场是完全不同的，尤其是在互联网的早些时候，对吞吐量、数据规模和服务质量等都有着更高级别的要求，而且企业花钱多，因而带来的回报也高得多。</p> 
<p>但如今这个特点已经有了变化，但是从当时开始逐步确立下来的企业级规范和技术标准，直到现在还在广泛使用，并不断发展。它使得 Java EE 平台孕育了比其它语言和平台更多的软件架构和设计思想，而这些优秀的思想，以及通用的“套路”，在这个过程中不断被程序员总结成“模式”。</p> 
<h2>概览</h2> <p>Java EE 的模式涉及的面非常广泛，下图是来自经典的 <a href="http://www.corej2eepatterns.com/Patterns2ndEd/index.htm">Core 
J2EE Patterns: Best Practices and Design Strategies</a> 一书，对我们从宏观上理解 Java EE 模式有一定的指导意义。但是请不要以为这就是一个完整的 
Java EE 的模式列表，它只是列出了在当时比较常见的那一些而已。</p> <p><img src="https://static001.geekbang.org/resource/image/c6/e0/c62a84e1d65327d3d8a3cba204be07e0.gif" 
alt=""></p> <p>从图中我们可以看到，这些“核心模式”大致分为呈现层（Presentation Tier，绿色部分）、业务层（Business Tier，紫色部分）和集成层（Integration 
Tier，红色部分）三大部分，模式之间有的通过实线箭头连接，表示着不同模式之间的单向关联关系，有的通过虚线箭头连接，表示着模式之间“使用包含”的依赖关系。</p> <p>这里面的内容其实有很多在本章已经涉及到了，比如 
Front Controller 和 Business Object，但是，我还想补充和细化其中的两个模式，它们在网站开发的项目中非常常用：Intercepting Filter 和 
Data Access Object。</p> <h2>拦截过滤器</h2> <p>拦截过滤器（Intercepting Filter）正如图中的“Apply zero or more”和 
Servlet 规范所述一样，应当具备一个链式结构。这个链式结构中的每个过滤器，互相之间应当是一个互不依赖的松耦合关系，以便于组合容易。这个过滤器链条，出现的位置通常在控制器 Front 
Controller 之前，在还没有进行到 Servlet 的 URL 映射前，请求需要先通过它的过滤逻辑。</p> <h3>Tomcat 中配置过滤器</h3> <p>还记得我们在 
[第 10 讲] 的加餐中使用 Servlet、JSP 和 JavaBean 实现的简单 MVC 系统吗？现在，让我们来动动手，添加一个基于 URL 映射的过滤器。</p> <p>首先，打开 
${CATALINA_HOME}/webapps/ROOT/WEB-INF/web.xml，在我们原本的 BookServlet 配置前，添加如下内容：</p> <pre style="position: 
relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
&lt;filter&gt; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="2"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
&lt;filter-name&gt;AuthFilter&lt;/filter-name&gt; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> &lt;filter-class&gt;AuthFilter&lt;/filter-class&gt; </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> &lt;/filter&gt; </div></td> </tr> <tr> 
<td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> &lt;filter-mapping&gt; </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> &lt;filter-name&gt;AuthFilter&lt;/filter-name&gt; 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="7"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> &lt;url-pattern&gt;/*&lt;/url-pattern&gt; 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="8"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> &lt;/filter-mapping&gt; </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="9"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="10"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> &lt;filter&gt; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="11"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> &lt;filter-name&gt;BookFilter&lt;/filter-name&gt; </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="12"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> &lt;filter-class&gt;BookFilter&lt;/filter-class&gt; 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="13"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> &lt;/filter&gt; </div></td> </tr> <tr> 
<td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="14"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> &lt;filter-mapping&gt; </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="15"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> &lt;filter-name&gt;BookFilter&lt;/filter-name&gt; 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="16"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> &lt;url-pattern&gt;/books/*&lt;/url-pattern&gt; 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="17"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> &lt;/filter-mapping&gt; </div></td> </tr> 
</tbody> </table></code> <div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 
</div></pre> <p>你看，为了显示过滤器链的效果，我们配置了两个过滤器，第一个 AuthFilter 用来对所有的请求实施权限控制，因此 URL 使用 /* 匹配所有请求；第二个 
BookFilter 我们希望它只对访问图书的请求实施权限控制。</p> <p>现在建立 AuthFilter，创建 ${CATALINA_HOME}/webapps/ROOT/WEB-INF/classes/AuthFilter.java，写入：</p> 
<pre style="position: relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> import javax.servlet.*; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> import java.util.logging.Logger; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> import java.io.IOException; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="5"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
public class AuthFilter implements Filter { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> private Logger logger = Logger.getLogger(AuthFilter.class.getName()); 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="7"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> public void doFilter(ServletRequest request, 
ServletResponse response, FilterChain chain) throws IOException, ServletException { </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="8"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> logger.info("Check permission..."); </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="9"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> chain.doFilter(request, response); </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="10"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> } </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="11"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> } </div></td> </tr> </tbody> </table></code> <div class="richcontent-pre-copy"> 
<span class="iconfont"></span>复制代码 </div></pre> <p>这个用于鉴权的过滤器，现在只打印日志，未来我们可以加入真正的鉴权逻辑。</p> 
<p>接着建立 BookFilter，创建 ${CATALINA_HOME}/webapps/ROOT/WEB-INF/classes/BookFilter.java，写入：</p> 
<pre style="position: relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> import javax.servlet.*; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> import java.io.IOException; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> import java.util.logging.Logger; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> import java.util.concurrent.atomic.AtomicInteger; </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> public class BookFilter implements Filter { </div></td> </tr> <tr> 
<td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="7"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> private Logger logger = Logger.getLogger(BookFilter.class.getName()); 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="8"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> private AtomicInteger count = new AtomicInteger(); 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="9"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> public void doFilter(ServletRequest request, 
ServletResponse response, FilterChain chain) throws IOException, ServletException { </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="10"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> logger.info("Add book accessing count..."); 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="11"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> int current = this.count.incrementAndGet(); 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="12"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> request.setAttribute("count", current); 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="13"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> chain.doFilter(request, response); </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="14"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> } </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="15"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> } </div></td> </tr> </tbody> </table></code> <div class="richcontent-pre-copy"> 
<span class="iconfont"></span>复制代码 </div></pre> <p>在这个过滤器中 ，我们先打印了日志，接着创建了一个计数器，使用 AtomicInteger 
而不是 int 这个原语类型的目的是为了正确处理在多线程情况下并发计数器的情形，再把当前对 books 请求的计数放到 request 中。</p> <p>编译一下：</p> <pre 
style="position: relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> javac AuthFilter.java BookFilter.java -classpath ${CATALINA_HOME}/lib/servlet-api.jar 
</div></td> </tr> </tbody> </table></code> <div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 
</div></pre> <p>我们再回到曾经建立的 ${CATALINA_HOME}/webapps/ROOT/book.jsp，在页面尾部添加一行输出计数器的计数：</p> <pre 
style="position: relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> Count: ${count} </div></td> </tr> </tbody> </table></code> <div 
class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 </div></pre> <p>现在启动 Tomcat：</p> 
<pre style="position: relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> catalina run </div></td> </tr> </tbody> </table></code> <div class="richcontent-pre-copy"> 
<span class="iconfont"></span>复制代码 </div></pre> <p>最后在浏览器中访问 <a href="http://localhost:8080/books?category=art">http://localhost:8080/books?category=art</a>，你将看到类似这样的输出，并且每刷新一次页面，这个计数就加 
1。</p> <pre style="position: relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> Category name: art, date: 2019-8-11 Count: 1 </div></td> </tr> </tbody> 
</table></code> <div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 </div></pre> 
<p>再回到控制台，你应该能看到类似这样的日志，从中可见过滤器的调用顺序：</p> <pre style="position: relative;"><code> <table class="hljs-ln"> 
<tbody> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> 11-Aug-2019 11:08:50.131 INFO [http-nio-8080-exec-1] 
AuthFilter.doFilter Check permission... </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> 11-Aug-2019 11:08:50.132 INFO [http-nio-8080-exec-1] BookFilter.doFilter 
Add book accessing count... </div></td> </tr> </tbody> </table></code> <div class="richcontent-pre-copy"> 
<span class="iconfont"></span>复制代码 </div></pre> <p>好，动手实践暂时就先到这里。就如同上面的例子这样，过滤器也是可以配置映射关系的，并且，在过滤器中，我们可以实现一组不同类型请求的处理所共有的逻辑。学到这里，不知道你有没有联想到一个相关的，且在这一讲之前我们才学过的模式？对，它就是 
AOP，过滤器本质上就是面向切面编程这种模式的一种子模式。</p> <h3>Struts 的拦截器</h3> <p>Struts 提供了拦截器（Interceptor）这样功能更加强大的组件，对于一些常见的功能，它已经预置了数十种常见的拦截器，比如异常、参数验证、文件上传和国际化支持等等，既包括预处理（Action 
执行之前），也包括后处理（Action 执行之后）的拦截逻辑，只需要配置使用即可。</p> <p>举例来说，如果定义了这样一个的拦截器栈，它包含了两个拦截器，一个是异常拦截器，一个是校验拦截器，并且配置了 
ping 方法不需要经过拦截器的校验，这两个拦截器组合成为 commonInterceptorStack 这个拦截器栈：</p> <pre style="position: relative;"><code> 
<table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
&lt;interceptor-stack name="commonInterceptorStack"&gt; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> &lt;interceptor-ref name="exception"/&gt; </div></td> </tr> <tr> 
<td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> &lt;interceptor-ref name="validation"&gt; 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> &lt;param name="excludeMethods"&gt;ping&lt;/param&gt; 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> &lt;/interceptor-ref&gt; </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> &lt;/interceptor-stack&gt; </div></td> 
</tr> </tbody> </table></code> <div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 
</div></pre> <p>配置完毕后就可以使用了，对于一个控制器层的 bookAction，我们规定请求必须经过一个 alias 拦截器，和刚才定义的 commonInterceptorStack 
拦截器栈：</p> <pre style="position: relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td 
class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> &lt;action name="bookAction" class="BookAction"&gt; 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> &lt;interceptor-ref name="alias"/&gt; 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> &lt;interceptor-ref name="commonInterceptorStack"/&gt; 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> &lt;/action&gt; </div></td> </tr> </tbody> 
</table></code> <div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 </div></pre> 
<h2>数据访问对象</h2> <p>我们在 <a href="https://time.geekbang.org/column/article/141679">[第 08 讲]</a> 
中介绍持久层框架的时候，已经谈到了 DAO（Data Access Object），今天让我们进一步学习一下。</p> <p><strong>DAO 本质上是能够为某种特定数据持久化的机制提供抽象结构的对象。</strong>虽然我们谈论 
DAO 基本上是默认这里的数据持久化的介质就是数据库，但需要明确的是，实际上并没有这样的约束。换句话说，DAO 可以把数据持久化到数据库中，但也可以持久化到文件里，甚至会以网络请求的方式把数据持久化到某个远程服务中去。</p> 
<p>数据访问对象最大的好处依然是我们反复强调的“解耦”，业务代码不需要关心数据是怎样持久化的。在测试其上方的 Service 层的时候，只要把实际的 DAO 替换成“桩代码”，就可以不实际执行持久化逻辑而完成测试；如果哪一天希望更换 
DAO 的实现，例如把关系数据库存储改为更一般的键值存储，其上方的 Service 层不修改逻辑就可以实现。</p> <p>但事物都有两面性，DAO 也不是完美的，比如说，<strong>多加一层就会从额外的抽象层次上带来软件的复杂性，它经常和“抽象泄露（Leaky 
Abstraction）”这样的现象联系起来</strong>。</p> <p>这里是说，理想状况下，程序员只需要关心“某一抽象层之上”的逻辑和调用，这也是我们分层的一大好处。可是，现实总是和理想有距离的，一旦抽象之下的部分出错，程序员很可能必须去了解和深入这部分的内容，这就违背了抽象分层的初衷，但是在很多情况下这是不可避免的，这也是整个软件体系日渐复杂，我们需要学习的内容越来越多的原因之一。</p> 
<h2>总结思考</h2> <p>今天我们了解了 Java EE 的各种模式，并且重点学习了拦截过滤器这个模式。模式的学习有一个特点，在理论学习的基础上，我们需要反复地实践强化，以及反复地思考。可以说，实践和思考这二者缺一不可。如果只有实践而没有思考，就没有办法灵活地将理论应用在复杂的实际项目中；如果只有思考而没有实践，那么到实际动手的时候还是很难顺利地实施想法。</p> 
<p>对于今天的内容，留两个问题：</p> <ul> <li>我们介绍了 DAO 层的两面性，那么，在你经历的项目中，你是怎样访问数据存储设施（例如文件和数据库）的，能说说吗？</li> 
<li>今天我们学到了，通过使用基于 URL 映射的过滤器，是可以给业务代码增加 AOP 的切面逻辑的。那么，为什么我们还需要之前所介绍的，通过匹配代码类和方法的表达式来嵌入切面逻辑的方式呢？</li> 
</ul> <p>有道是，技术进程多风雨，唯有套路得人心。回看本章，从 MVC 开始，我们一直都在和“模式”打交道，不知道你是不是认真学习了，是不是收获一些代码设计上的“套路”了呢？</p> 
<h2>选修课堂：MyBatis vs Hibernate</h2> <p>在 DAO 的设计过程中，我们经常需要处理模型实体对象和关系数据库的表记录之间的双向转换问题，怎样将对象的属性和关联关系映射到数据库表上去？有许多持久化框架都给出了自己的解决办法，今天我就来介绍两种最经典的解决思路，MyBatis 
和 Hibernate。</p> <p><strong>MyBatis 的思路是使用 XML 或注解的方式来配置 ORM，把 SQL 用标签管理起来，但不关心，也不干涉实际 SQL 
的书写。</strong></p> <p>在这种思路下框架轻量，很容易集成，又因为我们可以使用 SQL 所有的特性，可以写存储过程，也可以写 SQL 方言（Dialect），所以灵活度相当高。当然，灵活也意味着在具体实现功能的时候，你需要做得更多，不但需要关心模型层、SQL，还需要关心这二者怎样映射起来，具体包括：</p> 
<ul> <li>请求参数映射，即模型的值怎样映射到 SQL 语句的变参里面；</li> <li>返回值映射，即怎样将数据库查询的返回记录映射到模型对象。</li> </ul> <p>我们来看一个最简单的 
XML 配置片段：</p> <pre style="position: relative;"><code> <table class="hljs-ln"> <tbody> <tr> 
<td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> &lt;mapper namespace="xxx.BookDAO"&gt; 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> &lt;insert id="add" parameterType="Book"&gt; 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> insert into BOOKS(NAME, DESC) values(#{name}, 
#{desc}) </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" 
data-line-number="4"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> &lt;/insert&gt; 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> &lt;select id="get" resultType="Book" parameterType="java.lang.String"&gt; 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="7"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> select * from BOOKS where ID=#{id} </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="8"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> &lt;/select&gt; </div></td> </tr> <tr> 
<td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="9"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> &lt;/mapper&gt; </div></td> </tr> </tbody> 
</table></code> <div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 </div></pre> 
<p>你看，SQL 原模原样地写在了配置文件里面。对于写入语句，比如这里的 insert，需要显式告知参数类型 Book 对象，接着就可以直接使用 Book 的 name 和 desc 
对应的 get 方法来获得具体值并注入 SQL 了。对于简单的对象，默认的映射规则就可以解决问题，反之，也可以在 XML 中定义映射规则。</p> <p><strong>Hibernate 
则是另一种思路，如果你已经习惯于和模型层打交道，那么它就将 SQL 层对你隐藏起来了。</strong>换言之，你只需要写模型代码和 HQL（Hibernate Query Language）这种面向对象的查询语言就可以了，至于 
SQL 的生成，框架可以帮你完成。</p> <p>这种方式的一大好处就是具体数据库的透明性，你今天使用的数据库是 MySQL，明天就可以换成 Oracle，并且不用改代码。在分析设计的时候，你只需要做自己习惯的模型驱动编程就可以了。</p> 
<p>但值得注意的是，Hibernate 是把双刃剑，有利也有弊。它也带来了很多问题，比如较高的学习曲线，在出现问题的时候，无论是功能问题还是性能问题，它需要更多的知识储备来进行问题的定位和性能的调试。</p> 
<p>MyBatis 和 Hibernate 到这就讲解清楚了，再总结延伸一下。</p> <p>从框架本身的角度来说，Hibernate 提供的特性远比 MyBatis 更丰富、更完整。如果你是一位有着一定 
ORM 经验的程序员，那么 Hibernate 很可能会使你的开发效率更高。</p> <p>可对于一个新项目而言，在技术选型的过程中，如果你的团队中没有非常多的经验丰富的程序员，我通常建议持久层的框架不要去考虑 
Hibernate。简单说来，就是因为它的“水比较深”。我相信大多数程序员朋友还是更习惯于实打实地接触 SQL，流程到哪一步，执行了什么语句，该怎么调整，都十分清晰和直接。</p> 
<h2>扩展阅读</h2> <ul> <li>文中提到了 Java EE 平台的一系列标准和技术，维基百科上有一个<a href="https://zh.wikipedia.org/wiki/Jakarta_EE#%E7%BB%84%E4%BB%B6">简单的列表</a>供参考。</li> 
<li><a href="http://www.corej2eepatterns.com/Patterns2ndEd/index.htm">Core J2EE Patterns: Best 
Practices and Design Strategies</a> 这本书对于你学习 Java EE 的模式会提供不错的指导性帮助，属于权威之一，但是内容比较抽象，如果你在设计方面有一定追求，它是很好的阅读材料。好几年前我曾经读过纸质的第一版，但这是第二版，已经可以在网上公开阅读。</li> 
<li>如果对于文中提到的 Struts 拦截器感兴趣，请看 Struts 官方文档中<a href="https://struts.apache.org/core-developers/interceptors.html">对于拦截器的介绍</a>。</li> 
<li>文中提到了抽象泄露的概念，如果你感兴趣的话，请阅读 <a href="https://www.joelonsoftware.com/2002/11/11/the-law-of-leaky-abstractions/">The 
Law of Leaky Abstractions</a>，作者 Joel Spolsky 就是那本著名的《软件随想录》的作者。</li> <li><a href="http://www.mybatis.org/mybatis-3/zh/index.html">MyBatis 
的官网</a>，是的，MyBatis 的教程我就推荐官网上的，清晰简洁，而且具备中文版，不需要去找什么第三方的资料了；如果是需要中文的 Hibernate 入门资料，我推荐 W3Cschool 
上的 <a href="https://www.w3cschool.cn/hibernate/">Hibernate 教程</a>。</li> </ul> <p><img src="https://static001.geekbang.org/resource/image/11/8b/1181246bbd51ce348d5729696d1dc28b.jpg" 
alt="unpreview"></p>', '', 'book', 0, 'full_html', 'zh-hans', 37, 37) 
 {executed in 0 msec}
2020-11-19 11:22:13.604 INFO  jdbc.sqltiming Line:373 - select nodebodyen0_.entity_id as entity_i1_3_0_, nodebodyen0_.body_value as body_val2_3_0_, 
nodebodyen0_.body_summary as body_sum3_3_0_, nodebodyen0_.bundle as bundle4_3_0_, nodebodyen0_.delta 
as delta5_3_0_, nodebodyen0_.body_format as body_for6_3_0_, nodebodyen0_.langcode as langcode7_3_0_, 
nodebodyen0_.revision_id as revision8_3_0_ from node__body nodebodyen0_ where nodebodyen0_.entity_id=37 
 {executed in 0 msec}
2020-11-19 11:22:13.605 INFO  jdbc.resultsettable Line:610 - 
|----------|-----------|-------------|-------|------|------------|---------|------------|
|entity_id |body_value |body_summary |bundle |delta |body_format |langcode |revision_id |
|----------|-----------|-------------|-------|------|------------|---------|------------|
|----------|-----------|-------------|-------|------|------------|---------|------------|

2020-11-19 11:22:13.607 INFO  jdbc.sqltiming Line:373 - insert into node__body (body_value, body_summary, bundle, delta, body_format, langcode, revision_id, 
entity_id) values ('<p>你好，我是四火。</p> <p>本章我们以 MVC 架构为核心，已经介绍了很多设计模式，今天我们将进一步泛化，谈论更多的 Java EE 
模式。这些模式，就是我们在搭建全栈架构、设计的工作过程中，不断总结和应用的“套路”。</p> <h2>背景和概念</h2> <p>我相信很多人都接触过面向对象模式，可是，模式是个通用词，面向对象只是其中的一个分支而已。事实上，我们本章的重点 
MVC 本身就是一种典型的模式，介绍过的 CQRS 是模式，学习过的 AOP、IoC，这些其实也都是模式。</p> <p>因此，和其它领域的技术相比，作为全栈工程师的我们，更有机会接触到各种模式。这些模式可以帮助我们在设计开发工作中拓宽思路，使用精巧的代码结构来解决实际问题。</p> 
<p>说到这里，你可能会问，为什么这次谈论模式的时候，要使用 Java EE 这个编程语言前缀？模式不是应该和语言无关吗？</p> <p>一点都没错，模式就是和语言无关的，但是，诞生模式最多的温床，就是 
Java 语言。</p> <p>世界上没有任何一门语言，像 Java 一样，几乎一直被黑，但是生态圈一直在壮大，且在工业界具备如此统治力。<strong>很多人说，Java 是一门平庸的语言，这可能没错，但是它对于底层细节的封装和语言本身的难度做到了很好的平衡</strong>，它不一定会有多精巧、多出彩，但是新手也可以顺利完成工作，且不容易写出破坏性强、其他人难以接手的代码，这对于要规模、要量产的工业界来说，简直是超级福音。</p><!-- 
[[[read_end]]] --> <p><strong>使用 Java 的人可以快速上手，也可以把精力专注在高层的架构和设计上面，这就是为什么使用 Java 的人往往对模式特别敏感的原因。</strong></p> 
<p>当然，语言本身的江湖地位也和生态圈密切相关，更先进、更合理的语言一直在出现，但要把整个语言推翻另起炉灶，其难度可想而知，毕竟一门语言还涉及到社区、厂商、开源库、标准等等。</p> 
<p>在互联网的战场上，我们一直能看到类似的例子，比如在前端领域 JavaScript 就是一个相对“草率”，有着诸多缺陷的语言，在它之后有许多更先进的语言尝试把它替代（比如 Google 
强推的 <a href="https://dart.dev/">Dart</a>），但是这件事情是极其困难的。</p> <p>那么，什么是 Java EE，为什么是 Java EE？</p> 
<p>Java EE，全称为 Java Platform Enterprise Edition，即 Java 平台企业版，是 Java 的三大平台之一，另两大是 Java SE（标准版）和 
Java ME（微型版）。企业市场对软件的需求和大众市场是完全不同的，尤其是在互联网的早些时候，对吞吐量、数据规模和服务质量等都有着更高级别的要求，而且企业花钱多，因而带来的回报也高得多。</p> 
<p>但如今这个特点已经有了变化，但是从当时开始逐步确立下来的企业级规范和技术标准，直到现在还在广泛使用，并不断发展。它使得 Java EE 平台孕育了比其它语言和平台更多的软件架构和设计思想，而这些优秀的思想，以及通用的“套路”，在这个过程中不断被程序员总结成“模式”。</p> 
<h2>概览</h2> <p>Java EE 的模式涉及的面非常广泛，下图是来自经典的 <a href="http://www.corej2eepatterns.com/Patterns2ndEd/index.htm">Core 
J2EE Patterns: Best Practices and Design Strategies</a> 一书，对我们从宏观上理解 Java EE 模式有一定的指导意义。但是请不要以为这就是一个完整的 
Java EE 的模式列表，它只是列出了在当时比较常见的那一些而已。</p> <p><img src="https://static001.geekbang.org/resource/image/c6/e0/c62a84e1d65327d3d8a3cba204be07e0.gif" 
alt=""></p> <p>从图中我们可以看到，这些“核心模式”大致分为呈现层（Presentation Tier，绿色部分）、业务层（Business Tier，紫色部分）和集成层（Integration 
Tier，红色部分）三大部分，模式之间有的通过实线箭头连接，表示着不同模式之间的单向关联关系，有的通过虚线箭头连接，表示着模式之间“使用包含”的依赖关系。</p> <p>这里面的内容其实有很多在本章已经涉及到了，比如 
Front Controller 和 Business Object，但是，我还想补充和细化其中的两个模式，它们在网站开发的项目中非常常用：Intercepting Filter 和 
Data Access Object。</p> <h2>拦截过滤器</h2> <p>拦截过滤器（Intercepting Filter）正如图中的“Apply zero or more”和 
Servlet 规范所述一样，应当具备一个链式结构。这个链式结构中的每个过滤器，互相之间应当是一个互不依赖的松耦合关系，以便于组合容易。这个过滤器链条，出现的位置通常在控制器 Front 
Controller 之前，在还没有进行到 Servlet 的 URL 映射前，请求需要先通过它的过滤逻辑。</p> <h3>Tomcat 中配置过滤器</h3> <p>还记得我们在 
[第 10 讲] 的加餐中使用 Servlet、JSP 和 JavaBean 实现的简单 MVC 系统吗？现在，让我们来动动手，添加一个基于 URL 映射的过滤器。</p> <p>首先，打开 
${CATALINA_HOME}/webapps/ROOT/WEB-INF/web.xml，在我们原本的 BookServlet 配置前，添加如下内容：</p> <pre style="position: 
relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
&lt;filter&gt; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="2"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
&lt;filter-name&gt;AuthFilter&lt;/filter-name&gt; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> &lt;filter-class&gt;AuthFilter&lt;/filter-class&gt; </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> &lt;/filter&gt; </div></td> </tr> <tr> 
<td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> &lt;filter-mapping&gt; </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> &lt;filter-name&gt;AuthFilter&lt;/filter-name&gt; 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="7"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> &lt;url-pattern&gt;/*&lt;/url-pattern&gt; 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="8"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> &lt;/filter-mapping&gt; </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="9"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="10"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> &lt;filter&gt; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="11"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> &lt;filter-name&gt;BookFilter&lt;/filter-name&gt; </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="12"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> &lt;filter-class&gt;BookFilter&lt;/filter-class&gt; 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="13"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> &lt;/filter&gt; </div></td> </tr> <tr> 
<td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="14"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> &lt;filter-mapping&gt; </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="15"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> &lt;filter-name&gt;BookFilter&lt;/filter-name&gt; 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="16"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> &lt;url-pattern&gt;/books/*&lt;/url-pattern&gt; 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="17"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> &lt;/filter-mapping&gt; </div></td> </tr> 
</tbody> </table></code> <div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 
</div></pre> <p>你看，为了显示过滤器链的效果，我们配置了两个过滤器，第一个 AuthFilter 用来对所有的请求实施权限控制，因此 URL 使用 /* 匹配所有请求；第二个 
BookFilter 我们希望它只对访问图书的请求实施权限控制。</p> <p>现在建立 AuthFilter，创建 ${CATALINA_HOME}/webapps/ROOT/WEB-INF/classes/AuthFilter.java，写入：</p> 
<pre style="position: relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> import javax.servlet.*; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> import java.util.logging.Logger; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> import java.io.IOException; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="5"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
public class AuthFilter implements Filter { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> private Logger logger = Logger.getLogger(AuthFilter.class.getName()); 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="7"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> public void doFilter(ServletRequest request, 
ServletResponse response, FilterChain chain) throws IOException, ServletException { </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="8"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> logger.info("Check permission..."); </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="9"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> chain.doFilter(request, response); </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="10"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> } </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="11"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> } </div></td> </tr> </tbody> </table></code> <div class="richcontent-pre-copy"> 
<span class="iconfont"></span>复制代码 </div></pre> <p>这个用于鉴权的过滤器，现在只打印日志，未来我们可以加入真正的鉴权逻辑。</p> 
<p>接着建立 BookFilter，创建 ${CATALINA_HOME}/webapps/ROOT/WEB-INF/classes/BookFilter.java，写入：</p> 
<pre style="position: relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> import javax.servlet.*; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> import java.io.IOException; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> import java.util.logging.Logger; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> import java.util.concurrent.atomic.AtomicInteger; </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> public class BookFilter implements Filter { </div></td> </tr> <tr> 
<td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="7"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> private Logger logger = Logger.getLogger(BookFilter.class.getName()); 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="8"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> private AtomicInteger count = new AtomicInteger(); 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="9"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> public void doFilter(ServletRequest request, 
ServletResponse response, FilterChain chain) throws IOException, ServletException { </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="10"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> logger.info("Add book accessing count..."); 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="11"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> int current = this.count.incrementAndGet(); 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="12"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> request.setAttribute("count", current); 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="13"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> chain.doFilter(request, response); </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="14"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> } </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="15"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> } </div></td> </tr> </tbody> </table></code> <div class="richcontent-pre-copy"> 
<span class="iconfont"></span>复制代码 </div></pre> <p>在这个过滤器中 ，我们先打印了日志，接着创建了一个计数器，使用 AtomicInteger 
而不是 int 这个原语类型的目的是为了正确处理在多线程情况下并发计数器的情形，再把当前对 books 请求的计数放到 request 中。</p> <p>编译一下：</p> <pre 
style="position: relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> javac AuthFilter.java BookFilter.java -classpath ${CATALINA_HOME}/lib/servlet-api.jar 
</div></td> </tr> </tbody> </table></code> <div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 
</div></pre> <p>我们再回到曾经建立的 ${CATALINA_HOME}/webapps/ROOT/book.jsp，在页面尾部添加一行输出计数器的计数：</p> <pre 
style="position: relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> Count: ${count} </div></td> </tr> </tbody> </table></code> <div 
class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 </div></pre> <p>现在启动 Tomcat：</p> 
<pre style="position: relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> catalina run </div></td> </tr> </tbody> </table></code> <div class="richcontent-pre-copy"> 
<span class="iconfont"></span>复制代码 </div></pre> <p>最后在浏览器中访问 <a href="http://localhost:8080/books?category=art">http://localhost:8080/books?category=art</a>，你将看到类似这样的输出，并且每刷新一次页面，这个计数就加 
1。</p> <pre style="position: relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> Category name: art, date: 2019-8-11 Count: 1 </div></td> </tr> </tbody> 
</table></code> <div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 </div></pre> 
<p>再回到控制台，你应该能看到类似这样的日志，从中可见过滤器的调用顺序：</p> <pre style="position: relative;"><code> <table class="hljs-ln"> 
<tbody> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> 11-Aug-2019 11:08:50.131 INFO [http-nio-8080-exec-1] 
AuthFilter.doFilter Check permission... </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> 11-Aug-2019 11:08:50.132 INFO [http-nio-8080-exec-1] BookFilter.doFilter 
Add book accessing count... </div></td> </tr> </tbody> </table></code> <div class="richcontent-pre-copy"> 
<span class="iconfont"></span>复制代码 </div></pre> <p>好，动手实践暂时就先到这里。就如同上面的例子这样，过滤器也是可以配置映射关系的，并且，在过滤器中，我们可以实现一组不同类型请求的处理所共有的逻辑。学到这里，不知道你有没有联想到一个相关的，且在这一讲之前我们才学过的模式？对，它就是 
AOP，过滤器本质上就是面向切面编程这种模式的一种子模式。</p> <h3>Struts 的拦截器</h3> <p>Struts 提供了拦截器（Interceptor）这样功能更加强大的组件，对于一些常见的功能，它已经预置了数十种常见的拦截器，比如异常、参数验证、文件上传和国际化支持等等，既包括预处理（Action 
执行之前），也包括后处理（Action 执行之后）的拦截逻辑，只需要配置使用即可。</p> <p>举例来说，如果定义了这样一个的拦截器栈，它包含了两个拦截器，一个是异常拦截器，一个是校验拦截器，并且配置了 
ping 方法不需要经过拦截器的校验，这两个拦截器组合成为 commonInterceptorStack 这个拦截器栈：</p> <pre style="position: relative;"><code> 
<table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
&lt;interceptor-stack name="commonInterceptorStack"&gt; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> &lt;interceptor-ref name="exception"/&gt; </div></td> </tr> <tr> 
<td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> &lt;interceptor-ref name="validation"&gt; 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> &lt;param name="excludeMethods"&gt;ping&lt;/param&gt; 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> &lt;/interceptor-ref&gt; </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> &lt;/interceptor-stack&gt; </div></td> 
</tr> </tbody> </table></code> <div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 
</div></pre> <p>配置完毕后就可以使用了，对于一个控制器层的 bookAction，我们规定请求必须经过一个 alias 拦截器，和刚才定义的 commonInterceptorStack 
拦截器栈：</p> <pre style="position: relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td 
class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> &lt;action name="bookAction" class="BookAction"&gt; 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> &lt;interceptor-ref name="alias"/&gt; 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> &lt;interceptor-ref name="commonInterceptorStack"/&gt; 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> &lt;/action&gt; </div></td> </tr> </tbody> 
</table></code> <div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 </div></pre> 
<h2>数据访问对象</h2> <p>我们在 <a href="https://time.geekbang.org/column/article/141679">[第 08 讲]</a> 
中介绍持久层框架的时候，已经谈到了 DAO（Data Access Object），今天让我们进一步学习一下。</p> <p><strong>DAO 本质上是能够为某种特定数据持久化的机制提供抽象结构的对象。</strong>虽然我们谈论 
DAO 基本上是默认这里的数据持久化的介质就是数据库，但需要明确的是，实际上并没有这样的约束。换句话说，DAO 可以把数据持久化到数据库中，但也可以持久化到文件里，甚至会以网络请求的方式把数据持久化到某个远程服务中去。</p> 
<p>数据访问对象最大的好处依然是我们反复强调的“解耦”，业务代码不需要关心数据是怎样持久化的。在测试其上方的 Service 层的时候，只要把实际的 DAO 替换成“桩代码”，就可以不实际执行持久化逻辑而完成测试；如果哪一天希望更换 
DAO 的实现，例如把关系数据库存储改为更一般的键值存储，其上方的 Service 层不修改逻辑就可以实现。</p> <p>但事物都有两面性，DAO 也不是完美的，比如说，<strong>多加一层就会从额外的抽象层次上带来软件的复杂性，它经常和“抽象泄露（Leaky 
Abstraction）”这样的现象联系起来</strong>。</p> <p>这里是说，理想状况下，程序员只需要关心“某一抽象层之上”的逻辑和调用，这也是我们分层的一大好处。可是，现实总是和理想有距离的，一旦抽象之下的部分出错，程序员很可能必须去了解和深入这部分的内容，这就违背了抽象分层的初衷，但是在很多情况下这是不可避免的，这也是整个软件体系日渐复杂，我们需要学习的内容越来越多的原因之一。</p> 
<h2>总结思考</h2> <p>今天我们了解了 Java EE 的各种模式，并且重点学习了拦截过滤器这个模式。模式的学习有一个特点，在理论学习的基础上，我们需要反复地实践强化，以及反复地思考。可以说，实践和思考这二者缺一不可。如果只有实践而没有思考，就没有办法灵活地将理论应用在复杂的实际项目中；如果只有思考而没有实践，那么到实际动手的时候还是很难顺利地实施想法。</p> 
<p>对于今天的内容，留两个问题：</p> <ul> <li>我们介绍了 DAO 层的两面性，那么，在你经历的项目中，你是怎样访问数据存储设施（例如文件和数据库）的，能说说吗？</li> 
<li>今天我们学到了，通过使用基于 URL 映射的过滤器，是可以给业务代码增加 AOP 的切面逻辑的。那么，为什么我们还需要之前所介绍的，通过匹配代码类和方法的表达式来嵌入切面逻辑的方式呢？</li> 
</ul> <p>有道是，技术进程多风雨，唯有套路得人心。回看本章，从 MVC 开始，我们一直都在和“模式”打交道，不知道你是不是认真学习了，是不是收获一些代码设计上的“套路”了呢？</p> 
<h2>选修课堂：MyBatis vs Hibernate</h2> <p>在 DAO 的设计过程中，我们经常需要处理模型实体对象和关系数据库的表记录之间的双向转换问题，怎样将对象的属性和关联关系映射到数据库表上去？有许多持久化框架都给出了自己的解决办法，今天我就来介绍两种最经典的解决思路，MyBatis 
和 Hibernate。</p> <p><strong>MyBatis 的思路是使用 XML 或注解的方式来配置 ORM，把 SQL 用标签管理起来，但不关心，也不干涉实际 SQL 
的书写。</strong></p> <p>在这种思路下框架轻量，很容易集成，又因为我们可以使用 SQL 所有的特性，可以写存储过程，也可以写 SQL 方言（Dialect），所以灵活度相当高。当然，灵活也意味着在具体实现功能的时候，你需要做得更多，不但需要关心模型层、SQL，还需要关心这二者怎样映射起来，具体包括：</p> 
<ul> <li>请求参数映射，即模型的值怎样映射到 SQL 语句的变参里面；</li> <li>返回值映射，即怎样将数据库查询的返回记录映射到模型对象。</li> </ul> <p>我们来看一个最简单的 
XML 配置片段：</p> <pre style="position: relative;"><code> <table class="hljs-ln"> <tbody> <tr> 
<td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> &lt;mapper namespace="xxx.BookDAO"&gt; 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> &lt;insert id="add" parameterType="Book"&gt; 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> insert into BOOKS(NAME, DESC) values(#{name}, 
#{desc}) </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" 
data-line-number="4"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> &lt;/insert&gt; 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> &lt;select id="get" resultType="Book" parameterType="java.lang.String"&gt; 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="7"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> select * from BOOKS where ID=#{id} </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="8"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> &lt;/select&gt; </div></td> </tr> <tr> 
<td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="9"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> &lt;/mapper&gt; </div></td> </tr> </tbody> 
</table></code> <div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 </div></pre> 
<p>你看，SQL 原模原样地写在了配置文件里面。对于写入语句，比如这里的 insert，需要显式告知参数类型 Book 对象，接着就可以直接使用 Book 的 name 和 desc 
对应的 get 方法来获得具体值并注入 SQL 了。对于简单的对象，默认的映射规则就可以解决问题，反之，也可以在 XML 中定义映射规则。</p> <p><strong>Hibernate 
则是另一种思路，如果你已经习惯于和模型层打交道，那么它就将 SQL 层对你隐藏起来了。</strong>换言之，你只需要写模型代码和 HQL（Hibernate Query Language）这种面向对象的查询语言就可以了，至于 
SQL 的生成，框架可以帮你完成。</p> <p>这种方式的一大好处就是具体数据库的透明性，你今天使用的数据库是 MySQL，明天就可以换成 Oracle，并且不用改代码。在分析设计的时候，你只需要做自己习惯的模型驱动编程就可以了。</p> 
<p>但值得注意的是，Hibernate 是把双刃剑，有利也有弊。它也带来了很多问题，比如较高的学习曲线，在出现问题的时候，无论是功能问题还是性能问题，它需要更多的知识储备来进行问题的定位和性能的调试。</p> 
<p>MyBatis 和 Hibernate 到这就讲解清楚了，再总结延伸一下。</p> <p>从框架本身的角度来说，Hibernate 提供的特性远比 MyBatis 更丰富、更完整。如果你是一位有着一定 
ORM 经验的程序员，那么 Hibernate 很可能会使你的开发效率更高。</p> <p>可对于一个新项目而言，在技术选型的过程中，如果你的团队中没有非常多的经验丰富的程序员，我通常建议持久层的框架不要去考虑 
Hibernate。简单说来，就是因为它的“水比较深”。我相信大多数程序员朋友还是更习惯于实打实地接触 SQL，流程到哪一步，执行了什么语句，该怎么调整，都十分清晰和直接。</p> 
<h2>扩展阅读</h2> <ul> <li>文中提到了 Java EE 平台的一系列标准和技术，维基百科上有一个<a href="https://zh.wikipedia.org/wiki/Jakarta_EE#%E7%BB%84%E4%BB%B6">简单的列表</a>供参考。</li> 
<li><a href="http://www.corej2eepatterns.com/Patterns2ndEd/index.htm">Core J2EE Patterns: Best 
Practices and Design Strategies</a> 这本书对于你学习 Java EE 的模式会提供不错的指导性帮助，属于权威之一，但是内容比较抽象，如果你在设计方面有一定追求，它是很好的阅读材料。好几年前我曾经读过纸质的第一版，但这是第二版，已经可以在网上公开阅读。</li> 
<li>如果对于文中提到的 Struts 拦截器感兴趣，请看 Struts 官方文档中<a href="https://struts.apache.org/core-developers/interceptors.html">对于拦截器的介绍</a>。</li> 
<li>文中提到了抽象泄露的概念，如果你感兴趣的话，请阅读 <a href="https://www.joelonsoftware.com/2002/11/11/the-law-of-leaky-abstractions/">The 
Law of Leaky Abstractions</a>，作者 Joel Spolsky 就是那本著名的《软件随想录》的作者。</li> <li><a href="http://www.mybatis.org/mybatis-3/zh/index.html">MyBatis 
的官网</a>，是的，MyBatis 的教程我就推荐官网上的，清晰简洁，而且具备中文版，不需要去找什么第三方的资料了；如果是需要中文的 Hibernate 入门资料，我推荐 W3Cschool 
上的 <a href="https://www.w3cschool.cn/hibernate/">Hibernate 教程</a>。</li> </ul> <p><img src="https://static001.geekbang.org/resource/image/11/8b/1181246bbd51ce348d5729696d1dc28b.jpg" 
alt="unpreview"></p>', '', 'book', 0, 'full_html', 'zh-hans', 37, 37) 
 {executed in 1 msec}
2020-11-19 11:22:13.610 INFO  jdbc.sqltiming Line:373 - select nodefiledd0_.nid as nid1_9_, nodefiledd0_.changed as changed2_9_, nodefiledd0_.created 
as created3_9_, nodefiledd0_.default_langcode as default_4_9_, nodefiledd0_.langcode as langcode5_9_, 
nodefiledd0_.promote as promote6_9_, nodefiledd0_.revision_translation_affected as revision7_9_, 
nodefiledd0_.status as status8_9_, nodefiledd0_.sticky as sticky9_9_, nodefiledd0_.title as 
title10_9_, nodefiledd0_.type as type11_9_, nodefiledd0_.uid as uid12_9_, nodefiledd0_.vid 
as vid13_9_ from node_field_data nodefiledd0_ where nodefiledd0_.nid=37 
 {executed in 0 msec}
2020-11-19 11:22:13.611 INFO  jdbc.resultsettable Line:610 - 
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|-----|----|----|
|nid |changed |created |default_langcode |langcode |promote |revision_translation_affected |status |sticky |title |type |uid |vid |
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|-----|----|----|
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|-----|----|----|

2020-11-19 11:22:13.611 INFO  jdbc.sqltiming Line:373 - select nodefieldr0_.nid as nid1_10_0_, nodefieldr0_.changed as changed2_10_0_, nodefieldr0_.created 
as created3_10_0_, nodefieldr0_.default_langcode as default_4_10_0_, nodefieldr0_.langcode 
as langcode5_10_0_, nodefieldr0_.promote as promote6_10_0_, nodefieldr0_.revision_translation_affected 
as revision7_10_0_, nodefieldr0_.status as status8_10_0_, nodefieldr0_.sticky as sticky9_10_0_, 
nodefieldr0_.title as title10_10_0_, nodefieldr0_.uid as uid11_10_0_, nodefieldr0_.vid as vid12_10_0_ 
from node_field_revision nodefieldr0_ where nodefieldr0_.nid=37 
 {executed in 0 msec}
2020-11-19 11:22:13.612 INFO  jdbc.resultsettable Line:610 - 
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|----|----|
|nid |changed |created |default_langcode |langcode |promote |revision_translation_affected |status |sticky |title |uid |vid |
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|----|----|
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|----|----|

2020-11-19 11:22:13.613 INFO  jdbc.sqltiming Line:373 - insert into node_field_revision (changed, created, default_langcode, langcode, promote, revision_translation_affected, 
status, sticky, title, uid, vid, nid) values (1605756133, 1605756133, 1, 'zh-hans', 0, 1, 1, 
0, '12丨唯有套路得人心：谈谈JavaEE的那些模式', 1, 37, 37) 
 {executed in 0 msec}
2020-11-19 11:22:13.617 INFO  jdbc.sqltiming Line:373 - select nodefiledd0_.nid as nid1_9_0_, nodefiledd0_.changed as changed2_9_0_, nodefiledd0_.created 
as created3_9_0_, nodefiledd0_.default_langcode as default_4_9_0_, nodefiledd0_.langcode as 
langcode5_9_0_, nodefiledd0_.promote as promote6_9_0_, nodefiledd0_.revision_translation_affected 
as revision7_9_0_, nodefiledd0_.status as status8_9_0_, nodefiledd0_.sticky as sticky9_9_0_, 
nodefiledd0_.title as title10_9_0_, nodefiledd0_.type as type11_9_0_, nodefiledd0_.uid as uid12_9_0_, 
nodefiledd0_.vid as vid13_9_0_ from node_field_data nodefiledd0_ where nodefiledd0_.nid=37 
 {executed in 0 msec}
2020-11-19 11:22:13.618 INFO  jdbc.resultsettable Line:610 - 
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|-----|----|----|
|nid |changed |created |default_langcode |langcode |promote |revision_translation_affected |status |sticky |title |type |uid |vid |
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|-----|----|----|
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|-----|----|----|

2020-11-19 11:22:13.619 INFO  jdbc.sqltiming Line:373 - insert into node_field_data (changed, created, default_langcode, langcode, promote, revision_translation_affected, 
status, sticky, title, type, uid, vid, nid) values (1605756133, 1605756133, 1, 'zh-hans', 0, 
1, 1, 0, '12丨唯有套路得人心：谈谈JavaEE的那些模式', 'book', 1, 37, 37) 
 {executed in 0 msec}
2020-11-19 11:22:13.623 INFO  jdbc.sqltiming Line:373 - select bookfieldm0_.entity_id as entity_i1_7_, bookfieldm0_.bundle as bundle2_7_, bookfieldm0_.delta 
as delta3_7_, bookfieldm0_.langcode as langcode4_7_, bookfieldm0_.field_media_value as field_me5_7_, 
bookfieldm0_.revision_id as revision6_7_ from node__field_media bookfieldm0_ where bookfieldm0_.entity_id=37 
 {executed in 0 msec}
2020-11-19 11:22:13.624 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------------|------------|
|entity_id |bundle |delta |langcode |field_media_value |revision_id |
|----------|-------|------|---------|------------------|------------|
|----------|-------|------|---------|------------------|------------|

2020-11-19 11:22:13.624 INFO  jdbc.sqltiming Line:373 - select bookfieldm0_.entity_id as entity_i1_7_0_, bookfieldm0_.bundle as bundle2_7_0_, bookfieldm0_.delta 
as delta3_7_0_, bookfieldm0_.langcode as langcode4_7_0_, bookfieldm0_.field_media_value as 
field_me5_7_0_, bookfieldm0_.revision_id as revision6_7_0_ from node__field_media bookfieldm0_ 
where bookfieldm0_.entity_id=37 
 {executed in 0 msec}
2020-11-19 11:22:13.625 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------------|------------|
|entity_id |bundle |delta |langcode |field_media_value |revision_id |
|----------|-------|------|---------|------------------|------------|
|----------|-------|------|---------|------------------|------------|

2020-11-19 11:22:13.626 INFO  jdbc.sqltiming Line:373 - insert into node__field_media (bundle, delta, langcode, field_media_value, revision_id, entity_id) 
values ('book', 0, 'zh-hans', 'https://qdall01.baidupcs.com/file/b162d78c140278c67f716192e0ad763b?bkt=en-07c9b0a504a37060db41da44d85860aae2ee4f517c0aae0e368e6b5eac9f7adc4ea4cd15f5fb4a4b&fid=3757516097-778750-652598925955165&time=1605756132&sign=FDTAXUGERLQlBHSKfWqir-DCb740ccc5511e5e8fedcff06b081203-bZNHE87HprCsTwFpDEZfD0vERSo%3D&to=92&size=14304021&sta_dx=14304021&sta_cs=3873&sta_ft=m4a&sta_ct=7&sta_mt=0&fm2=MH%2CYangquan%2CAnywhere%2C%2Cshanghai%2Cct&ctime=1570414495&mtime=1605754778&resv0=-1&resv1=0&resv2=rlim&resv3=2&resv4=14304021&vuk=3757516097&iv=0&htype=&randtype=em&newver=1&newfm=1&secfm=1&flow_ver=3&pkey=en-9bae22f3779cdcda823180f19e1ba39c35ddffd614fbd516bcd4c6139eec954d5729d3ae93e53236&sl=76480590&expires=8h&rt=pr&r=683399320&mlogid=7502269529331065997&vbdid=2247232042&fin=12%E4%B8%A8%E5%94%AF%E6%9C%89%E5%A5%97%E8%B7%AF%E5%BE%97%E4%BA%BA%E5%BF%83%EF%BC%9A%E8%B0%88%E8%B0%88JavaEE%E7%9A%84%E9%82%A3%E4%BA%9B%E6%A8%A1%E5%BC%8F.m4a&bflag=92,34-92&rtype=1&dp-logid=7502269529331065997&dp-callid=0.1.1&hps=1&tsl=80&csl=80&fsl=-1&csign=yVzLQPCt4DblfMLqd2BCjd2RnqQ%3D&so=0&ut=6&uter=0&serv=0&uc=1458616558&ti=5eee304bbb22b9c2acd18ff8009f13c8a0a90b7ac7ecc952305a5e1275657320&hflag=30&adg=c_15d187590626c675056c89c8026cfc17&reqlabel=778750_l_1bf9445f27094ab64c9f1cb0bdf7ccfa_-1_dd2c452b8e51a0c74130d7cf32c48a2d&ibp=1&by=themis&filename=12%E4%B8%A8%E5%94%AF%E6%9C%89%E5%A5%97%E8%B7%AF%E5%BE%97%E4%BA%BA%E5%BF%83%EF%BC%9A%E8%B0%88%E8%B0%88JavaEE%E7%9A%84%E9%82%A3%E4%BA%9B%E6%A8%A1%E5%BC%8F.m4a', 
37, 37) 
 {executed in 0 msec}
2020-11-19 11:22:13.629 INFO  jdbc.sqltiming Line:373 - select nodefieldm0_.entity_id as entity_i1_16_0_, nodefieldm0_.bundle as bundle2_16_0_, nodefieldm0_.delta 
as delta3_16_0_, nodefieldm0_.langcode as langcode4_16_0_, nodefieldm0_.field_media_value as 
field_me5_16_0_, nodefieldm0_.revision_id as revision6_16_0_ from node_revision__field_media 
nodefieldm0_ where nodefieldm0_.entity_id=37 
 {executed in 1 msec}
2020-11-19 11:22:13.629 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------------|------------|
|entity_id |bundle |delta |langcode |field_media_value |revision_id |
|----------|-------|------|---------|------------------|------------|
|----------|-------|------|---------|------------------|------------|

2020-11-19 11:22:13.630 INFO  jdbc.sqltiming Line:373 - insert into node_revision__field_media (bundle, delta, langcode, field_media_value, revision_id, 
entity_id) values ('book', 0, 'zh-hans', 'https://qdall01.baidupcs.com/file/b162d78c140278c67f716192e0ad763b?bkt=en-07c9b0a504a37060db41da44d85860aae2ee4f517c0aae0e368e6b5eac9f7adc4ea4cd15f5fb4a4b&fid=3757516097-778750-652598925955165&time=1605756132&sign=FDTAXUGERLQlBHSKfWqir-DCb740ccc5511e5e8fedcff06b081203-bZNHE87HprCsTwFpDEZfD0vERSo%3D&to=92&size=14304021&sta_dx=14304021&sta_cs=3873&sta_ft=m4a&sta_ct=7&sta_mt=0&fm2=MH%2CYangquan%2CAnywhere%2C%2Cshanghai%2Cct&ctime=1570414495&mtime=1605754778&resv0=-1&resv1=0&resv2=rlim&resv3=2&resv4=14304021&vuk=3757516097&iv=0&htype=&randtype=em&newver=1&newfm=1&secfm=1&flow_ver=3&pkey=en-9bae22f3779cdcda823180f19e1ba39c35ddffd614fbd516bcd4c6139eec954d5729d3ae93e53236&sl=76480590&expires=8h&rt=pr&r=683399320&mlogid=7502269529331065997&vbdid=2247232042&fin=12%E4%B8%A8%E5%94%AF%E6%9C%89%E5%A5%97%E8%B7%AF%E5%BE%97%E4%BA%BA%E5%BF%83%EF%BC%9A%E8%B0%88%E8%B0%88JavaEE%E7%9A%84%E9%82%A3%E4%BA%9B%E6%A8%A1%E5%BC%8F.m4a&bflag=92,34-92&rtype=1&dp-logid=7502269529331065997&dp-callid=0.1.1&hps=1&tsl=80&csl=80&fsl=-1&csign=yVzLQPCt4DblfMLqd2BCjd2RnqQ%3D&so=0&ut=6&uter=0&serv=0&uc=1458616558&ti=5eee304bbb22b9c2acd18ff8009f13c8a0a90b7ac7ecc952305a5e1275657320&hflag=30&adg=c_15d187590626c675056c89c8026cfc17&reqlabel=778750_l_1bf9445f27094ab64c9f1cb0bdf7ccfa_-1_dd2c452b8e51a0c74130d7cf32c48a2d&ibp=1&by=themis&filename=12%E4%B8%A8%E5%94%AF%E6%9C%89%E5%A5%97%E8%B7%AF%E5%BE%97%E4%BA%BA%E5%BF%83%EF%BC%9A%E8%B0%88%E8%B0%88JavaEE%E7%9A%84%E9%82%A3%E4%BA%9B%E6%A8%A1%E5%BC%8F.m4a', 
37, 37) 
 {executed in 0 msec}
2020-11-19 11:22:13.633 INFO  jdbc.sqltiming Line:373 - select bookfieldc0_.entity_id as entity_i1_4_, bookfieldc0_.bundle as bundle2_4_, bookfieldc0_.field_comment_value 
as field_co3_4_, bookfieldc0_.delta as delta4_4_, bookfieldc0_.field_comment_format as field_co5_4_, 
bookfieldc0_.langcode as langcode6_4_, bookfieldc0_.revision_id as revision7_4_ from node__field_comment 
bookfieldc0_ where bookfieldc0_.entity_id=37 
 {executed in 0 msec}
2020-11-19 11:22:13.634 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|--------------------|------|---------------------|---------|------------|
|entity_id |bundle |field_comment_value |delta |field_comment_format |langcode |revision_id |
|----------|-------|--------------------|------|---------------------|---------|------------|
|----------|-------|--------------------|------|---------------------|---------|------------|

2020-11-19 11:22:13.634 INFO  jdbc.sqltiming Line:373 - select bookfieldc0_.entity_id as entity_i1_4_0_, bookfieldc0_.bundle as bundle2_4_0_, bookfieldc0_.field_comment_value 
as field_co3_4_0_, bookfieldc0_.delta as delta4_4_0_, bookfieldc0_.field_comment_format as 
field_co5_4_0_, bookfieldc0_.langcode as langcode6_4_0_, bookfieldc0_.revision_id as revision7_4_0_ 
from node__field_comment bookfieldc0_ where bookfieldc0_.entity_id=37 
 {executed in 0 msec}
2020-11-19 11:22:13.634 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|--------------------|------|---------------------|---------|------------|
|entity_id |bundle |field_comment_value |delta |field_comment_format |langcode |revision_id |
|----------|-------|--------------------|------|---------------------|---------|------------|
|----------|-------|--------------------|------|---------------------|---------|------------|

2020-11-19 11:22:13.636 INFO  jdbc.sqltiming Line:373 - insert into node__field_comment (bundle, field_comment_value, delta, field_comment_format, 
langcode, revision_id, entity_id) values ('book', '', 0, 'full_html', 'zh-hans', 37, 37) 
 {executed in 0 msec}
2020-11-19 11:22:13.640 INFO  jdbc.sqltiming Line:373 - select nodefieldc0_.entity_id as entity_i1_13_0_, nodefieldc0_.bundle as bundle2_13_0_, nodefieldc0_.field_comment_value 
as field_co3_13_0_, nodefieldc0_.delta as delta4_13_0_, nodefieldc0_.field_comment_format as 
field_co5_13_0_, nodefieldc0_.langcode as langcode6_13_0_, nodefieldc0_.revision_id as revision7_13_0_ 
from node_revision__field_comment nodefieldc0_ where nodefieldc0_.entity_id=37 
 {executed in 0 msec}
2020-11-19 11:22:13.640 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|--------------------|------|---------------------|---------|------------|
|entity_id |bundle |field_comment_value |delta |field_comment_format |langcode |revision_id |
|----------|-------|--------------------|------|---------------------|---------|------------|
|----------|-------|--------------------|------|---------------------|---------|------------|

2020-11-19 11:22:13.642 INFO  jdbc.sqltiming Line:373 - insert into node_revision__field_comment (bundle, field_comment_value, delta, field_comment_format, 
langcode, revision_id, entity_id) values ('book', '', 0, 'full_html', 'zh-hans', 37, 37) 
 {executed in 1 msec}
2020-11-19 11:22:13.646 INFO  jdbc.sqltiming Line:373 - select bookfieldt0_.entity_id as entity_i1_8_, bookfieldt0_.bundle as bundle2_8_, bookfieldt0_.delta 
as delta3_8_, bookfieldt0_.langcode as langcode4_8_, bookfieldt0_.revision_id as revision5_8_, 
bookfieldt0_.field_thumb_value as field_th6_8_ from node__field_thumb bookfieldt0_ where bookfieldt0_.entity_id=37 
 {executed in 0 msec}
2020-11-19 11:22:13.646 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------|------------------|
|entity_id |bundle |delta |langcode |revision_id |field_thumb_value |
|----------|-------|------|---------|------------|------------------|
|----------|-------|------|---------|------------|------------------|

2020-11-19 11:22:13.647 INFO  jdbc.sqltiming Line:373 - select bookfieldt0_.entity_id as entity_i1_8_0_, bookfieldt0_.bundle as bundle2_8_0_, bookfieldt0_.delta 
as delta3_8_0_, bookfieldt0_.langcode as langcode4_8_0_, bookfieldt0_.revision_id as revision5_8_0_, 
bookfieldt0_.field_thumb_value as field_th6_8_0_ from node__field_thumb bookfieldt0_ where 
bookfieldt0_.entity_id=37 
 {executed in 0 msec}
2020-11-19 11:22:13.647 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------|------------------|
|entity_id |bundle |delta |langcode |revision_id |field_thumb_value |
|----------|-------|------|---------|------------|------------------|
|----------|-------|------|---------|------------|------------------|

2020-11-19 11:22:13.649 INFO  jdbc.sqltiming Line:373 - insert into node__field_thumb (bundle, delta, langcode, revision_id, field_thumb_value, entity_id) 
values ('book', 0, 'zh-hans', 37, 'https://static001.geekbang.org/resource/image/57/21/57002ada154c047e8ff5668351ddaf21.jpg', 
37) 
 {executed in 0 msec}
2020-11-19 11:22:13.655 INFO  jdbc.sqltiming Line:373 - select nodefieldt0_.entity_id as entity_i1_17_0_, nodefieldt0_.bundle as bundle2_17_0_, nodefieldt0_.delta 
as delta3_17_0_, nodefieldt0_.langcode as langcode4_17_0_, nodefieldt0_.revision_id as revision5_17_0_, 
nodefieldt0_.field_thumb_value as field_th6_17_0_ from node_revision__field_thumb nodefieldt0_ 
where nodefieldt0_.entity_id=37 
 {executed in 0 msec}
2020-11-19 11:22:13.655 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------|------------------|
|entity_id |bundle |delta |langcode |revision_id |field_thumb_value |
|----------|-------|------|---------|------------|------------------|
|----------|-------|------|---------|------------|------------------|

2020-11-19 11:22:13.657 INFO  jdbc.sqltiming Line:373 - insert into node_revision__field_thumb (bundle, delta, langcode, revision_id, field_thumb_value, 
entity_id) values ('book', 0, 'zh-hans', 37, 'https://static001.geekbang.org/resource/image/57/21/57002ada154c047e8ff5668351ddaf21.jpg', 
37) 
 {executed in 0 msec}
2020-11-19 11:22:13.661 INFO  jdbc.sqltiming Line:373 - select bookfieldf0_.entity_id as entity_i1_5_0_, bookfieldf0_.bundle as bundle2_5_0_, bookfieldf0_.delta 
as delta3_5_0_, bookfieldf0_.field_fenlei_target_id as field_fe4_5_0_, bookfieldf0_.langcode 
as langcode5_5_0_, bookfieldf0_.revision_id as revision6_5_0_ from node__field_fenlei bookfieldf0_ 
where bookfieldf0_.entity_id=37 
 {executed in 0 msec}
2020-11-19 11:22:13.661 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------------|---------|------------|
|entity_id |bundle |delta |field_fenlei_target_id |langcode |revision_id |
|----------|-------|------|-----------------------|---------|------------|
|----------|-------|------|-----------------------|---------|------------|

2020-11-19 11:22:13.662 INFO  jdbc.sqltiming Line:373 - insert into node__field_fenlei (bundle, delta, field_fenlei_target_id, langcode, revision_id, 
entity_id) values ('book', 0, 1, 'zh-hans', 37, 37) 
 {executed in 0 msec}
2020-11-19 11:22:13.669 INFO  jdbc.sqltiming Line:373 - select nodefieldf0_.entity_id as entity_i1_14_0_, nodefieldf0_.bundle as bundle2_14_0_, nodefieldf0_.delta 
as delta3_14_0_, nodefieldf0_.field_fenlei_target_id as field_fe4_14_0_, nodefieldf0_.langcode 
as langcode5_14_0_, nodefieldf0_.revision_id as revision6_14_0_ from node_revision__field_fenlei 
nodefieldf0_ where nodefieldf0_.entity_id=37 
 {executed in 1 msec}
2020-11-19 11:22:13.669 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------------|---------|------------|
|entity_id |bundle |delta |field_fenlei_target_id |langcode |revision_id |
|----------|-------|------|-----------------------|---------|------------|
|----------|-------|------|-----------------------|---------|------------|

2020-11-19 11:22:13.670 INFO  jdbc.sqltiming Line:373 - insert into node_revision__field_fenlei (bundle, delta, field_fenlei_target_id, langcode, revision_id, 
entity_id) values ('book', 0, 1, 'zh-hans', 37, 37) 
 {executed in 0 msec}
2020-11-19 11:22:50.493 INFO  jdbc.sqltiming Line:373 - select bookfieldf0_.entity_id as entity_i1_6_, bookfieldf0_.bundle as bundle2_6_, bookfieldf0_.delta 
as delta3_6_, bookfieldf0_.field_fsid_value as field_fs4_6_, bookfieldf0_.langcode as langcode5_6_, 
bookfieldf0_.revision_id as revision6_6_ from node__field_fsid bookfieldf0_ where bookfieldf0_.field_fsid_value='806919862409703' 
 {executed in 1 msec}
2020-11-19 11:22:50.494 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------|---------|------------|
|entity_id |bundle |delta |field_fsid_value |langcode |revision_id |
|----------|-------|------|-----------------|---------|------------|
|----------|-------|------|-----------------|---------|------------|

2020-11-19 11:22:50.495 INFO  jdbc.sqltiming Line:373 - insert into node_revision (langcode, nid, revision_default, revision_timestamp, revision_uid) 
values ('zh-hans', 0, 1, 1605756170, 1) 
 {executed in 0 msec}
2020-11-19 11:22:50.496 INFO  jdbc.sqltiming Line:373 - getGeneratedKeys on query: insert into node_revision (langcode, nid, revision_default, revision_timestamp, 
revision_uid) values ('zh-hans', 0, 1, 1605756170, 1) 
 {executed in 0 msec}
2020-11-19 11:22:50.497 INFO  jdbc.resultsettable Line:610 - 
|--------------|
|generated_key |
|--------------|
|38            |
|--------------|

2020-11-19 11:22:50.507 INFO  jdbc.sqltiming Line:373 - insert into node (langcode, type, uuid, vid) values ('zh-hans', 'book', '4e5bf0e5-20e8-4d8e-b152-4146d62b8fb1', 
38) 
 {executed in 0 msec}
2020-11-19 11:22:50.508 INFO  jdbc.sqltiming Line:373 - getGeneratedKeys on query: insert into node (langcode, type, uuid, vid) values ('zh-hans', 
'book', '4e5bf0e5-20e8-4d8e-b152-4146d62b8fb1', 38) 
 {executed in 0 msec}
2020-11-19 11:22:50.508 INFO  jdbc.resultsettable Line:610 - 
|--------------|
|generated_key |
|--------------|
|38            |
|--------------|

2020-11-19 11:22:50.517 INFO  jdbc.sqltiming Line:373 - update node_revision set langcode='zh-hans', nid=38, revision_default=1, revision_timestamp=1605756170, 
revision_uid=1 where vid=38 
 {executed in 1 msec}
2020-11-19 11:22:50.520 INFO  jdbc.sqltiming Line:373 - select bookfieldf0_.entity_id as entity_i1_6_0_, bookfieldf0_.bundle as bundle2_6_0_, bookfieldf0_.delta 
as delta3_6_0_, bookfieldf0_.field_fsid_value as field_fs4_6_0_, bookfieldf0_.langcode as langcode5_6_0_, 
bookfieldf0_.revision_id as revision6_6_0_ from node__field_fsid bookfieldf0_ where bookfieldf0_.entity_id=38 
 {executed in 0 msec}
2020-11-19 11:22:50.521 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------|---------|------------|
|entity_id |bundle |delta |field_fsid_value |langcode |revision_id |
|----------|-------|------|-----------------|---------|------------|
|----------|-------|------|-----------------|---------|------------|

2020-11-19 11:22:50.525 INFO  jdbc.sqltiming Line:373 - insert into node__field_fsid (bundle, delta, field_fsid_value, langcode, revision_id, entity_id) 
values ('book', 0, '806919862409703', 'zh-hans', 38, 38) 
 {executed in 1 msec}
2020-11-19 11:22:50.527 INFO  jdbc.sqltiming Line:373 - select nodefieldf0_.entity_id as entity_i1_15_0_, nodefieldf0_.bundle as bundle2_15_0_, nodefieldf0_.delta 
as delta3_15_0_, nodefieldf0_.field_fsid_value as field_fs4_15_0_, nodefieldf0_.langcode as 
langcode5_15_0_, nodefieldf0_.revision_id as revision6_15_0_ from node_revision__field_fsid 
nodefieldf0_ where nodefieldf0_.entity_id=38 
 {executed in 0 msec}
2020-11-19 11:22:50.528 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------|---------|------------|
|entity_id |bundle |delta |field_fsid_value |langcode |revision_id |
|----------|-------|------|-----------------|---------|------------|
|----------|-------|------|-----------------|---------|------------|

2020-11-19 11:22:50.531 INFO  jdbc.sqltiming Line:373 - insert into node_revision__field_fsid (bundle, delta, field_fsid_value, langcode, revision_id, 
entity_id) values ('book', 0, '806919862409703', 'zh-hans', 38, 38) 
 {executed in 1 msec}
2020-11-19 11:22:50.534 INFO  jdbc.sqltiming Line:373 - select bookentity0_.nid as nid1_1_, bookentity0_.bid as bid2_1_, bookentity0_.depth as depth3_1_, 
bookentity0_.has_children as has_chil4_1_, bookentity0_.p1 as p5_1_, bookentity0_.p2 as p6_1_, 
bookentity0_.p3 as p7_1_, bookentity0_.p4 as p8_1_, bookentity0_.p5 as p9_1_, bookentity0_.pid 
as pid10_1_, bookentity0_.weight as weight11_1_ from book bookentity0_ where bookentity0_.nid=38 
 {executed in 1 msec}
2020-11-19 11:22:50.534 INFO  jdbc.resultsettable Line:610 - 
|----|----|------|-------------|---|---|---|---|---|----|-------|
|nid |bid |depth |has_children |p1 |p2 |p3 |p4 |p5 |pid |weight |
|----|----|------|-------------|---|---|---|---|---|----|-------|
|----|----|------|-------------|---|---|---|---|---|----|-------|

2020-11-19 11:22:50.535 INFO  jdbc.sqltiming Line:373 - select bookentity0_.nid as nid1_1_0_, bookentity0_.bid as bid2_1_0_, bookentity0_.depth as 
depth3_1_0_, bookentity0_.has_children as has_chil4_1_0_, bookentity0_.p1 as p5_1_0_, bookentity0_.p2 
as p6_1_0_, bookentity0_.p3 as p7_1_0_, bookentity0_.p4 as p8_1_0_, bookentity0_.p5 as p9_1_0_, 
bookentity0_.pid as pid10_1_0_, bookentity0_.weight as weight11_1_0_ from book bookentity0_ 
where bookentity0_.nid=38 
 {executed in 0 msec}
2020-11-19 11:22:50.536 INFO  jdbc.resultsettable Line:610 - 
|----|----|------|-------------|---|---|---|---|---|----|-------|
|nid |bid |depth |has_children |p1 |p2 |p3 |p4 |p5 |pid |weight |
|----|----|------|-------------|---|---|---|---|---|----|-------|
|----|----|------|-------------|---|---|---|---|---|----|-------|

2020-11-19 11:22:50.538 INFO  jdbc.sqltiming Line:373 - insert into book (bid, depth, has_children, p1, p2, p3, p4, p5, pid, weight, nid) values (1, 
3, 0, 1, 35, 38, 0, 0, 35, 0, 38) 
 {executed in 0 msec}
2020-11-19 11:22:50.541 INFO  jdbc.sqltiming Line:373 - select nodebodyen0_.entity_id as entity_i1_3_, nodebodyen0_.body_value as body_val2_3_, nodebodyen0_.body_summary 
as body_sum3_3_, nodebodyen0_.bundle as bundle4_3_, nodebodyen0_.delta as delta5_3_, nodebodyen0_.body_format 
as body_for6_3_, nodebodyen0_.langcode as langcode7_3_, nodebodyen0_.revision_id as revision8_3_ 
from node__body nodebodyen0_ where nodebodyen0_.entity_id=38 
 {executed in 1 msec}
2020-11-19 11:22:50.541 INFO  jdbc.resultsettable Line:610 - 
|----------|-----------|-------------|-------|------|------------|---------|------------|
|entity_id |body_value |body_summary |bundle |delta |body_format |langcode |revision_id |
|----------|-----------|-------------|-------|------|------------|---------|------------|
|----------|-----------|-------------|-------|------|------------|---------|------------|

2020-11-19 11:22:50.542 INFO  jdbc.sqltiming Line:373 - select nodebodyre0_.entity_id as entity_i1_12_0_, nodebodyre0_.body_value as body_val2_12_0_, 
nodebodyre0_.body_summary as body_sum3_12_0_, nodebodyre0_.bundle as bundle4_12_0_, nodebodyre0_.delta 
as delta5_12_0_, nodebodyre0_.body_format as body_for6_12_0_, nodebodyre0_.langcode as langcode7_12_0_, 
nodebodyre0_.revision_id as revision8_12_0_ from node_revision__body nodebodyre0_ where nodebodyre0_.entity_id=38 
 {executed in 0 msec}
2020-11-19 11:22:50.542 INFO  jdbc.resultsettable Line:610 - 
|----------|-----------|-------------|-------|------|------------|---------|------------|
|entity_id |body_value |body_summary |bundle |delta |body_format |langcode |revision_id |
|----------|-----------|-------------|-------|------|------------|---------|------------|
|----------|-----------|-------------|-------|------|------------|---------|------------|

2020-11-19 11:22:50.546 INFO  jdbc.sqltiming Line:373 - insert into node_revision__body (body_value, body_summary, bundle, delta, body_format, langcode, 
revision_id, entity_id) values ('<p>你好，我是四火。</p> <p>今天我们要接触一个和 MVC 密切相关的，能带来思维模式改变的编程范型——面向切面编程（AOP，Aspect 
Oriented Programming）。</p> <h2>“给我一把锤子，满世界都是钉子”</h2> <p>我记得曾经有这样一个相当流行的观点，是说，编程语言只需要学习一门就够了，学那么多也没有用，因为技术是一通百通的，别的编程语言可以说是大同小异。我相信至今抱有这种观点的程序员也不在少数。</p> 
<p>可惜，事实远没有那么美好。这个观点主要有两处值得商榷：</p> <ul> <li>其一，不同的技术，在一定程度上确实是相通的，可是，技术之间的关联性，远不是“一通百通”这四个简简单单的字能够解释的。妄想仅仅凭借精通一门编程语言，就能够自动打通其它所有编程语言的任督二脉，这是不现实的。</li> 
<li>其二，通常来说，说编程语言大同小异其实是很不客观的。编程语言经过了长时间的发展演化，如今已经发展出非常多的类型，用作编程语言分类标准之一的编程范型也可谓是百花齐放。</li> 
</ul> <p>因此我们要学习多种编程语言，特别是那些能带来新的思维模式的编程语言。现在，把这个观点泛化到普遍的软件技术上，也一样适用。我们都知道要“一切从实际出发”，都知道要“具体问题具体分析”，可是，<strong>在眼界还不够开阔的时候，特别是职业生涯的早期，程序员在武器库里的武器还非常有限的时候，依然无法避免“给我一把锤子，满世界都是钉子”，在技术选择的时候眼光相对局限。</strong></p><!-- 
[[[read_end]]] --> <p>所以我们要学习全栈技术，尤其是要学习这些不一样，但一定层面上和已掌握知识相通的典型技术。今天我们要学习的这项在 MVC 框架中广泛使用的技术，是和面向对象编程一类层面的编程范型，叫做面向切面编程。</p> 
<p>互联网有许多功能，如果使用传统的基于单个请求处理流程的方式来编码，代码就会非常繁琐，而使用 AOP 的方式，代码可以得到很大程度上的简化。希望通过今天的学习，你的武器库里，能够多一把重型机枪。</p> 
<h2>AOP 的概念</h2> <p><strong>面向切面编程是一种通过横切关注点（Cross-cutting Concerns）分离来增强代码模块性的方法，它能够在不修改业务主体代码的情况下，对它添加额外的行为。</strong></p> 
<p>不好理解吗？没关系，我们来对它做进一步的说明。</p> <p>首先需要明确的是，AOP 的目标是增强代码模块性，也就是说，本质上它是一种“解耦”的方法，在这方面它和我们之前介绍的分层等方法是类似的，可是，它分离代码的角度与我们传统、自然的模块设计思路截然不同。</p> 
<p>我们来看下面这样一个例子，对于图书馆系统来说，有许多业务流程，其中借书和还书是最典型的两条。对于这些业务流程来说，从图书系统接收到请求开始，需要完成若干个步骤，但这些步骤都有一些“共性”，比如鉴权，比如事务控制：</p> 
<p><img src="https://static001.geekbang.org/resource/image/f1/2c/f17118dd2cb4f0132c76fd152a3c062c.png" 
alt=""></p> <p>那么，如果我们按照自然的思考方式，我们会把代码按照流程分解成一个一个的步骤，在每个步骤完成的前后添加这些“共性”逻辑。可是这样，这些逻辑就会散落在代码各处了，即便我们把它们按照重复代码抽取的原则，抽出来放到单独的方法中，这样的方法的“调用”还是散落在各处，无论是对软件工程上的可维护性，还是代码阅读时对于业务流程的专注度，都是不利的。</p> 
<p>藉由 AOP 则可以有效地解决这些问题，对于图中横向的业务流程，我们能够保持它们独立不变，而把鉴权、事务这样的公共功能，彻底拿出去，放到单独的地方，这样整个业务流程就变得纯粹和干净，没有任何代码残留的痕迹，就好像武林高手彻底隐形了一般，但是，功能却没有任何丢失。就好比面条一般顺下来的业务流程，水平地切了几刀，每一刀，都是一个 
AOP 的功能实现。</p> <p>我们可能在 Java 的世界中谈论 AOP 比较多，但请注意，它并不是 Java 范畴的概念，它不依赖于任何框架，也和编程语言本身无关。</p> 
<h2>Spring 中的应用</h2> <p><a href="https://spring.io/">Spring</a> 作为一个应用程序框架，提供了对于 AOP 功能上完整的支持，下面让我们通过例子来学习。还记得我们在 
<a href="https://time.geekbang.org/column/article/141679">[第 08 讲]</a> 中举例介绍的将图书借出的方法吗？</p> 
<pre style="position: relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> public class BookService { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> public Book lendOut(String bookId, String userId, Date date) { ... 
(0) } </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" 
data-line-number="3"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> } </div></td> 
</tr> </tbody> </table></code> <div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 
</div></pre> <p>现在，我们要给很多的业务方法以 AOP 的方式添加功能，而 lendOut 就是其中之一。定义一个 TransactionAspect 类：</p> 
<pre style="position: relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> public class TransactionAspect { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> public void doBefore(JoinPoint jp) { ... (1) } </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> public void doAfter(JoinPoint jp) { ... 
(2) } </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" 
data-line-number="4"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> public 
void doThrowing(JoinPoint jp, Throwable ex) { ... (3) } </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> public void doAround(ProceedingJoinPoint pjp) throws Throwable { 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> ... (4) </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="7"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> pjp.proceed(); </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="8"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> ... (5) </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div 
class="hljs-ln-line hljs-ln-n" data-line-number="9"></div></td> <td class="hljs-ln-code"> <div 
class="hljs-ln-line"> } </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="10"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
} </div></td> </tr> </tbody> </table></code> <div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 
</div></pre> <p>你看，我给每一处可以实现的代码都用数字做了标记。我们希望在 doBefore 方法中添加事务开始逻辑，doAfter 方法中添加事务结束的提交逻辑，doThrowing 
方法中添加事务失败的回滚逻辑，而在 doAround 方法中业务执行前后添加日志打印逻辑，其中的 pjp.proceed() 方法表示对原方法的调用。</p> <p>接着，我们需要写一些 
XML 配置，目的就是把原方法和 AOP 的切面功能连接起来。配置片段如下：</p> <pre style="position: relative;"><code> <table class="hljs-ln"> 
<tbody> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> &lt;bean id="bookService" class="xxx.BookService"&gt;&lt;/bean&gt; 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> &lt;bean id="transactionAspect" class="xxx.TransactionAspect"&gt;&lt;/bean&gt; 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> &lt;aop:config&gt; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> &lt;aop:pointcut expression="execution(* xxx.BookService.*(..))" 
id="transactionPointcut"/&gt; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="6"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
&lt;aop:aspect ref="transactionAspect"&gt; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="7"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> &lt;aop:before method="doBefore" pointcut-ref="transactionPointcut"/&gt; 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="8"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> &lt;aop:after-returning method="doAfter" 
pointcut-ref="transactionPointcut"/&gt; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="9"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> &lt;aop:after-throwing method="doThrowing" pointcut-ref="transactionPointcut" 
throwing="ex"/&gt; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="10"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
&lt;aop:around method="doAround" pointcut-ref="transactionPointcut"/&gt; </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="11"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> &lt;/aop:aspect&gt; </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="12"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> &lt;/aop:config&gt; </div></td> </tr> 
</tbody> </table></code> <div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 
</div></pre> <p>在这段配置中，前两行分别是对 BookService 和 TransactionAspect 这两个 Bean 的声明，接下来在 aop:config 
中，我们定义了 pointcut 的切面匹配表达式，表示要捕获 BookService 的所有方法，并在 aop:aspect 标签内定义了我们希望实施的 AOP 功能。</p> <p>在实际执行的过程中，如果没有异常抛出，上述这些逻辑的执行顺序将是：</p> 
<pre style="position: relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> (1) → (4) → (0) → (5) → (2) </div></td> </tr> </tbody> </table></code> 
<div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 </div></pre> <h2>实现原理</h2> 
<p>讲了 AOP 怎样配置，怎么表现，现在我要来讲讲它的实现原理了。通过这部分内容，希望你可以搞清楚，为什么不需要对代码做任何改动，就可以在业务逻辑的流水中切一刀，插入我们想要执行的其它逻辑呢？</p> 
<p>对于常见的实现，我们根据其作用的不同时间阶段进行分类，有这样两种：</p> <p><strong>编译期间的静态织入，又称为编译时增强。</strong>织入（Weaving），指的是将切面代码和源业务代码链接起来的过程。<a 
href="https://www.eclipse.org/aspectj/">AspectJ</a> 就是这样一个面向切面的 Java 语言扩展，称呼其为语言的“扩展”，就是因为它扩展了 
Java 语言的语法，需要特定的编译器来把 AspectJ 的代码编译成 JVM 可识别的 class 文件。</p> <p><strong>运行期间的动态代理，又称为运行时增强。</strong>这种方式是在程序运行时，依靠预先创建或运行时创建的代理类来完成切面功能的。比如 
JDK 基于接口的动态代理技术，或 <a href="https://github.com/cglib/cglib/wiki">CGLib</a> 基于类的代理对象生成技术就属于这一种。</p> 
<p>Spring AOP 默认支持的是后者——运行期间的动态代理。至于具体实现，通常来说，我们应该优先考虑使用 JDK 的动态代理技术；但是如果目标类没有实现接口，我们只能退而求其次，使用 
CGLib。</p> <p>动态代理的方式由于在运行时完成代理类或代理对象的创建，需要用到 Java 的拦截、反射和字节码生成等技术，因此运行时的性能表现往往没有静态织入好，功能也有较多限制，但是由于使用起来简便（不需要语言扩展，不需要特殊的编译器等），它的实际应用更为广泛。</p> 
<h2>控制反转 IoC</h2> <p>通过 AOP 我们知道，某些问题如果我们换个角度来解决，会很大程度地简化代码。现在，让我们来了解在 Spring 中另一个经常和面向切面编程一起出现的概念——控制反转。控制反转是一种设计思想，也是通过“换个角度”来解决问题的。</p> 
<p>控制反转，IoC，即 Inversion of Control，言下之意，指的是把原有的控制方向掉转过来了。在我们常规的程序流程中，对象是由主程序流程创建的，例如，在业务流程中使用 
new 关键字来创建依赖对象。</p> <p>但是，当我们使用 Spring 框架的时候，<strong>Spring 把对象创建的工作接管过来，它作为对象容器，来负责对象的查找、匹配、创建、装配，依赖管理，等等。而主程序流程，则不用关心对象是怎么来的，只需要使用对象就可以了。</strong>我们还是拿 
BookService 举例子：</p> <pre style="position: relative;"><code> <table class="hljs-ln"> <tbody> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> public class BookService { </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> @Autowired </div></td> </tr> <tr> <td 
class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> private BookDao bookDao; </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> @Autowired </div></td> </tr> <tr> <td 
class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> private LoanDao loanDao; </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> public Book lendOut(String bookId, String 
userId, Date date) { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="7"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
bookDao.update( ... ); </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="8"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
loanDao.insert( ... ); </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="9"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
} </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="10"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> } </div></td> </tr> </tbody> </table></code> 
<div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 </div></pre> <p>比如 BookService 
的借出方法，假如它的实现中，我们希望：</p> <ul> <li>调用数据访问对象 bookDao 的方法来更新被借书的状态；</li> <li>调用借阅行为的访问对象 loanDao 
来增加一条借阅记录。</li> </ul> <p>在这种情况下，我们可以通过 @Autowired 注解，让容器将实际的数据访问对象注入进来，主程序流程不用关心“下一层”的数据访问对象到底是怎么创建的，怎么初始化的，甚至是怎么注入进来的，而是直接用就可以了，因为这些对象都已经被 
Spring 管理起来了。</p> <p>如果这些注入的对象之间还存在依赖关系，初始化它们的顺序就至关重要了，可是在这种情况下，Service 层依然不用关心，因为 Spring 已经根据代码或配置中声明的依赖关系自动确定了。总之，Service 
层的业务代码，只管调用其下的数据访问层的方法就好了。</p> <p>读到这里，你可能会回想起前文 AOP 的内容，和 IoC 似乎有一个共同的特点：都是<strong>为了尽可能保证主流程的纯粹和简洁</strong>，而将这些不影响主流程的逻辑拿出去，只不过这两种技术，“拿出去”的是不同的逻辑。值得注意的是，对象之间的依赖关系，各层之间的依赖关系，并没有因为 
IoC 而发生任何的改变。</p> <p><strong>IoC 在实现上包含两种方式，一种叫做依赖查找（DL，Dependency Lookup），另一种叫做依赖注入（DI，Dependency 
Injection）。</strong>二者缺一不可，Spring 容器做到了两者，就如同上面的例子，容器需要先查找到 bookDao 和 loanDao 所对应的对象，再把它们注入进来。当然，我们平时听到的更多是第二种。</p> 
<p>有了一个大致的感受，那么 IoC 到底能带来什么好处呢？我觉得主要有这样两个方面：</p> <ul> <li><strong>资源统一配置管理。</strong>这个方面很好，但并不是 
IoC 最大的优势，因为，如果你不把资源交给容器管理，而是自己建立一个资源管理类来管理某项资源，一样可以得到“统一管理”的所有优势。</li> <li><strong>业务代码不再包含依赖资源的访问逻辑，因此资源访问和业务流程的代码解耦开了。</strong>我觉得这里的“解耦”才是 
IoC 最核心的优势，它让各层之间的依赖关系变得松散。就如同上面的代码例子一样，如果哪一天我想把它依赖的 bookDao 和 loanDao 替换掉（比如，我想为 Service 层做测试），Service 
一行代码都不用改，它压根都不需要知道。</li> </ul> <h2>总结思考</h2> <p>今天我们一起学习了面向切面编程，从学习概念，熟悉配置，到了解实现原理，希望你对于 AOP 
已经有了一个清晰的认识，在未来设计和开发系统的时候，无论技术怎样演进，框架怎么变化，始终知道什么时候需要它，并能够把它从你的武器库中拿出来使用。</p> <p>现在我来提两个问题，我们一起讨论吧：</p> 
<ul> <li>你过去的项目中有没有应用 AOP 的例子，能说说吗？</li> <li>我介绍了 AOP 的优点，但却没有提到它的缺点，但其实任何技术都是有两面性的，你觉得 AOP 
的缺点都有哪些呢？</li> </ul> <h2>选修课堂：实践 AOP 的运行时动态代理</h2> <p>我们学习了 AOP 的实现原理，知道其中一种办法是通过 JDK 的动态代理技术来实现的。现在，我们就来写一点代码，用它实现一个小例子。</p> 
<p>首先，请你准备好一个项目文件夹，我们会在其中创建一系列文件。你可以使用 Eclipse 来管理项目，也可以自己建立一个独立的文件夹，这都没有关系。</p> <p>现在建立 BookService.java，这次我们把 
BookService 定义为一个接口，包含 lendOut 方法，同时也创建它的实现 BookServiceImpl：</p> <pre style="position: relative;"><code> 
<table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
import java.text.MessageFormat; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="2"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
import java.util.Date; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="3"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> interface BookService { </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> void lendOut(String bookId, String userId, 
Date date); </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" 
data-line-number="6"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> } </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="7"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="8"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> class BookServiceImpl implements BookService { </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="9"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> @Override </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="10"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> public void lendOut(String bookId, String userId, Date date) { </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="11"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> System.out.println(MessageFormat.format("{0}: 
The book {1} is lent to {2}.", date, bookId, userId)); </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="12"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> } </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="13"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
} </div></td> </tr> </tbody> </table></code> <div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 
</div></pre> <p>然后，我们建立一个 ServiceInvocationHandler.java，在这里我们可以定义代理对象在对原对象的方法调用前后，添加的额外逻辑：</p> 
<pre style="position: relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> import java.lang.reflect.InvocationHandler; </div></td> </tr> <tr> 
<td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> import java.lang.reflect.Method; </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> class ServiceInvocationHandler implements InvocationHandler { </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> private Object target; </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="7"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> public ServiceInvocationHandler(Object target) { </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="8"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> this.target = target; </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="9"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> } </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="10"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="11"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
@Override </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" 
data-line-number="12"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> public 
Object invoke(Object proxy, Method method, Object[] args) throws Throwable { </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="13"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> System.out.println("Before..."); </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="14"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> Object result = method.invoke(this.target, 
args); </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" 
data-line-number="15"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> System.out.println("After..."); 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="16"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> return result; </div></td> </tr> <tr> 
<td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="17"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> } </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="18"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> } </div></td> </tr> </tbody> </table></code> <div class="richcontent-pre-copy"> 
<span class="iconfont"></span>复制代码 </div></pre> <p>接着，我们建立一个 Client.java 类，作为程序的起点，通过动态代理的方式来调用源代码中的 
lendOut 方法：</p> <pre style="position: relative;"><code> <table class="hljs-ln"> <tbody> <tr> 
<td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> import java.lang.reflect.Proxy; </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> import java.util.Date; </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> public class Client { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> public static void main(String[] args) throws Exception { </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> BookService bookService = (BookService) 
Proxy.newProxyInstance( </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="7"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
BookService.class.getClassLoader(), </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div 
class="hljs-ln-line hljs-ln-n" data-line-number="8"></div></td> <td class="hljs-ln-code"> <div 
class="hljs-ln-line"> new Class[]{ BookService.class }, </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="9"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> new ServiceInvocationHandler(new BookServiceImpl()) </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="10"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> ); </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="11"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> bookService.lendOut("123", "456", new Date()); </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="12"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> } </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="13"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> } </div></td> </tr> </tbody> </table></code> <div class="richcontent-pre-copy"> 
<span class="iconfont"></span>复制代码 </div></pre> <p>你看，我们创建了一个动态代理对象，并赋给 bookService，这个代理对象实际是会调用 
BookServiceImpl 的，但调用的前后打印了额外的日志。并且，这个代理对象也实现自 BookService 接口，因此，对于 BookService 的使用者来说，它实际并不知道调用到的是 
BookServiceImpl 还是它的代理对象。请看图示：</p> <p><img src="https://static001.geekbang.org/resource/image/c3/9e/c39ca70be876a106e90e73d6946d849e.png" 
alt=""></p> <p>好，现在我们把这些代码编译一下：</p> <pre style="position: relative;"><code> <table class="hljs-ln"> 
<tbody> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> javac BookService.java ServiceInvocationHandler.java 
Client.java </div></td> </tr> </tbody> </table></code> <div class="richcontent-pre-copy"> <span 
class="iconfont"></span>复制代码 </div></pre> <p>你应该能看到它们的 class 文件分别生成了。</p> <p>最后，执行 Client 
的 main 方法，就能看到相应的执行结果，它显示 lendBook 方法前后的 AOP 的逻辑被实际执行了：</p> <pre style="position: relative;"><code> 
<table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
java Client </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" 
data-line-number="2"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> Before... 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> 8/10/19 11:42 AM: The book 123 is lent 
to 456. </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" 
data-line-number="4"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> After... 
</div></td> </tr> </tbody> </table></code> <div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 
</div></pre> <h2>扩展阅读</h2> <ul> <li>Spring 官方文档中<a href="https://docs.spring.io/spring/docs/current/spring-framework-reference/core.html#aop">关于 
AOP 的教程</a>，如果你希望看到中文版，那么互联网上有不少对于这部分的翻译，只不过对应的 Spring 版本不同，内容大致是一样的，比如<a href="https://blog.csdn.net/wengcheng_k/article/details/79952358">这一篇</a>。</li> 
<li><a href="https://www.baeldung.com/spring-aop-vs-aspectj">Comparing Spring AOP and AspectJ</a>，这是一篇关于静态织入和动态代理这两种 
AOP 方式比较的文章。</li> <li>对于 AspectJ，如果想一瞥其扩展的语法语义，维基百科的<a href="https://en.wikipedia.org/wiki/AspectJ">词条</a>就足矣；如果想了解某些细节，请参阅<a 
href="https://www.eclipse.org/aspectj/doc/released/adk15notebook/index.html">官方文档</a>。</li> 
</ul> <p><img src="https://static001.geekbang.org/resource/image/11/8b/1181246bbd51ce348d5729696d1dc28b.jpg" 
alt="unpreview"></p>', '', 'book', 0, 'full_html', 'zh-hans', 38, 38) 
 {executed in 1 msec}
2020-11-19 11:22:50.549 INFO  jdbc.sqltiming Line:373 - select nodebodyen0_.entity_id as entity_i1_3_0_, nodebodyen0_.body_value as body_val2_3_0_, 
nodebodyen0_.body_summary as body_sum3_3_0_, nodebodyen0_.bundle as bundle4_3_0_, nodebodyen0_.delta 
as delta5_3_0_, nodebodyen0_.body_format as body_for6_3_0_, nodebodyen0_.langcode as langcode7_3_0_, 
nodebodyen0_.revision_id as revision8_3_0_ from node__body nodebodyen0_ where nodebodyen0_.entity_id=38 
 {executed in 0 msec}
2020-11-19 11:22:50.549 INFO  jdbc.resultsettable Line:610 - 
|----------|-----------|-------------|-------|------|------------|---------|------------|
|entity_id |body_value |body_summary |bundle |delta |body_format |langcode |revision_id |
|----------|-----------|-------------|-------|------|------------|---------|------------|
|----------|-----------|-------------|-------|------|------------|---------|------------|

2020-11-19 11:22:50.552 INFO  jdbc.sqltiming Line:373 - insert into node__body (body_value, body_summary, bundle, delta, body_format, langcode, revision_id, 
entity_id) values ('<p>你好，我是四火。</p> <p>今天我们要接触一个和 MVC 密切相关的，能带来思维模式改变的编程范型——面向切面编程（AOP，Aspect 
Oriented Programming）。</p> <h2>“给我一把锤子，满世界都是钉子”</h2> <p>我记得曾经有这样一个相当流行的观点，是说，编程语言只需要学习一门就够了，学那么多也没有用，因为技术是一通百通的，别的编程语言可以说是大同小异。我相信至今抱有这种观点的程序员也不在少数。</p> 
<p>可惜，事实远没有那么美好。这个观点主要有两处值得商榷：</p> <ul> <li>其一，不同的技术，在一定程度上确实是相通的，可是，技术之间的关联性，远不是“一通百通”这四个简简单单的字能够解释的。妄想仅仅凭借精通一门编程语言，就能够自动打通其它所有编程语言的任督二脉，这是不现实的。</li> 
<li>其二，通常来说，说编程语言大同小异其实是很不客观的。编程语言经过了长时间的发展演化，如今已经发展出非常多的类型，用作编程语言分类标准之一的编程范型也可谓是百花齐放。</li> 
</ul> <p>因此我们要学习多种编程语言，特别是那些能带来新的思维模式的编程语言。现在，把这个观点泛化到普遍的软件技术上，也一样适用。我们都知道要“一切从实际出发”，都知道要“具体问题具体分析”，可是，<strong>在眼界还不够开阔的时候，特别是职业生涯的早期，程序员在武器库里的武器还非常有限的时候，依然无法避免“给我一把锤子，满世界都是钉子”，在技术选择的时候眼光相对局限。</strong></p><!-- 
[[[read_end]]] --> <p>所以我们要学习全栈技术，尤其是要学习这些不一样，但一定层面上和已掌握知识相通的典型技术。今天我们要学习的这项在 MVC 框架中广泛使用的技术，是和面向对象编程一类层面的编程范型，叫做面向切面编程。</p> 
<p>互联网有许多功能，如果使用传统的基于单个请求处理流程的方式来编码，代码就会非常繁琐，而使用 AOP 的方式，代码可以得到很大程度上的简化。希望通过今天的学习，你的武器库里，能够多一把重型机枪。</p> 
<h2>AOP 的概念</h2> <p><strong>面向切面编程是一种通过横切关注点（Cross-cutting Concerns）分离来增强代码模块性的方法，它能够在不修改业务主体代码的情况下，对它添加额外的行为。</strong></p> 
<p>不好理解吗？没关系，我们来对它做进一步的说明。</p> <p>首先需要明确的是，AOP 的目标是增强代码模块性，也就是说，本质上它是一种“解耦”的方法，在这方面它和我们之前介绍的分层等方法是类似的，可是，它分离代码的角度与我们传统、自然的模块设计思路截然不同。</p> 
<p>我们来看下面这样一个例子，对于图书馆系统来说，有许多业务流程，其中借书和还书是最典型的两条。对于这些业务流程来说，从图书系统接收到请求开始，需要完成若干个步骤，但这些步骤都有一些“共性”，比如鉴权，比如事务控制：</p> 
<p><img src="https://static001.geekbang.org/resource/image/f1/2c/f17118dd2cb4f0132c76fd152a3c062c.png" 
alt=""></p> <p>那么，如果我们按照自然的思考方式，我们会把代码按照流程分解成一个一个的步骤，在每个步骤完成的前后添加这些“共性”逻辑。可是这样，这些逻辑就会散落在代码各处了，即便我们把它们按照重复代码抽取的原则，抽出来放到单独的方法中，这样的方法的“调用”还是散落在各处，无论是对软件工程上的可维护性，还是代码阅读时对于业务流程的专注度，都是不利的。</p> 
<p>藉由 AOP 则可以有效地解决这些问题，对于图中横向的业务流程，我们能够保持它们独立不变，而把鉴权、事务这样的公共功能，彻底拿出去，放到单独的地方，这样整个业务流程就变得纯粹和干净，没有任何代码残留的痕迹，就好像武林高手彻底隐形了一般，但是，功能却没有任何丢失。就好比面条一般顺下来的业务流程，水平地切了几刀，每一刀，都是一个 
AOP 的功能实现。</p> <p>我们可能在 Java 的世界中谈论 AOP 比较多，但请注意，它并不是 Java 范畴的概念，它不依赖于任何框架，也和编程语言本身无关。</p> 
<h2>Spring 中的应用</h2> <p><a href="https://spring.io/">Spring</a> 作为一个应用程序框架，提供了对于 AOP 功能上完整的支持，下面让我们通过例子来学习。还记得我们在 
<a href="https://time.geekbang.org/column/article/141679">[第 08 讲]</a> 中举例介绍的将图书借出的方法吗？</p> 
<pre style="position: relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> public class BookService { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> public Book lendOut(String bookId, String userId, Date date) { ... 
(0) } </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" 
data-line-number="3"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> } </div></td> 
</tr> </tbody> </table></code> <div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 
</div></pre> <p>现在，我们要给很多的业务方法以 AOP 的方式添加功能，而 lendOut 就是其中之一。定义一个 TransactionAspect 类：</p> 
<pre style="position: relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> public class TransactionAspect { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> public void doBefore(JoinPoint jp) { ... (1) } </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> public void doAfter(JoinPoint jp) { ... 
(2) } </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" 
data-line-number="4"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> public 
void doThrowing(JoinPoint jp, Throwable ex) { ... (3) } </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> public void doAround(ProceedingJoinPoint pjp) throws Throwable { 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> ... (4) </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="7"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> pjp.proceed(); </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="8"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> ... (5) </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div 
class="hljs-ln-line hljs-ln-n" data-line-number="9"></div></td> <td class="hljs-ln-code"> <div 
class="hljs-ln-line"> } </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="10"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
} </div></td> </tr> </tbody> </table></code> <div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 
</div></pre> <p>你看，我给每一处可以实现的代码都用数字做了标记。我们希望在 doBefore 方法中添加事务开始逻辑，doAfter 方法中添加事务结束的提交逻辑，doThrowing 
方法中添加事务失败的回滚逻辑，而在 doAround 方法中业务执行前后添加日志打印逻辑，其中的 pjp.proceed() 方法表示对原方法的调用。</p> <p>接着，我们需要写一些 
XML 配置，目的就是把原方法和 AOP 的切面功能连接起来。配置片段如下：</p> <pre style="position: relative;"><code> <table class="hljs-ln"> 
<tbody> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> &lt;bean id="bookService" class="xxx.BookService"&gt;&lt;/bean&gt; 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> &lt;bean id="transactionAspect" class="xxx.TransactionAspect"&gt;&lt;/bean&gt; 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> &lt;aop:config&gt; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> &lt;aop:pointcut expression="execution(* xxx.BookService.*(..))" 
id="transactionPointcut"/&gt; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="6"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
&lt;aop:aspect ref="transactionAspect"&gt; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="7"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> &lt;aop:before method="doBefore" pointcut-ref="transactionPointcut"/&gt; 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="8"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> &lt;aop:after-returning method="doAfter" 
pointcut-ref="transactionPointcut"/&gt; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="9"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> &lt;aop:after-throwing method="doThrowing" pointcut-ref="transactionPointcut" 
throwing="ex"/&gt; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="10"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
&lt;aop:around method="doAround" pointcut-ref="transactionPointcut"/&gt; </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="11"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> &lt;/aop:aspect&gt; </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="12"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> &lt;/aop:config&gt; </div></td> </tr> 
</tbody> </table></code> <div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 
</div></pre> <p>在这段配置中，前两行分别是对 BookService 和 TransactionAspect 这两个 Bean 的声明，接下来在 aop:config 
中，我们定义了 pointcut 的切面匹配表达式，表示要捕获 BookService 的所有方法，并在 aop:aspect 标签内定义了我们希望实施的 AOP 功能。</p> <p>在实际执行的过程中，如果没有异常抛出，上述这些逻辑的执行顺序将是：</p> 
<pre style="position: relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> (1) → (4) → (0) → (5) → (2) </div></td> </tr> </tbody> </table></code> 
<div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 </div></pre> <h2>实现原理</h2> 
<p>讲了 AOP 怎样配置，怎么表现，现在我要来讲讲它的实现原理了。通过这部分内容，希望你可以搞清楚，为什么不需要对代码做任何改动，就可以在业务逻辑的流水中切一刀，插入我们想要执行的其它逻辑呢？</p> 
<p>对于常见的实现，我们根据其作用的不同时间阶段进行分类，有这样两种：</p> <p><strong>编译期间的静态织入，又称为编译时增强。</strong>织入（Weaving），指的是将切面代码和源业务代码链接起来的过程。<a 
href="https://www.eclipse.org/aspectj/">AspectJ</a> 就是这样一个面向切面的 Java 语言扩展，称呼其为语言的“扩展”，就是因为它扩展了 
Java 语言的语法，需要特定的编译器来把 AspectJ 的代码编译成 JVM 可识别的 class 文件。</p> <p><strong>运行期间的动态代理，又称为运行时增强。</strong>这种方式是在程序运行时，依靠预先创建或运行时创建的代理类来完成切面功能的。比如 
JDK 基于接口的动态代理技术，或 <a href="https://github.com/cglib/cglib/wiki">CGLib</a> 基于类的代理对象生成技术就属于这一种。</p> 
<p>Spring AOP 默认支持的是后者——运行期间的动态代理。至于具体实现，通常来说，我们应该优先考虑使用 JDK 的动态代理技术；但是如果目标类没有实现接口，我们只能退而求其次，使用 
CGLib。</p> <p>动态代理的方式由于在运行时完成代理类或代理对象的创建，需要用到 Java 的拦截、反射和字节码生成等技术，因此运行时的性能表现往往没有静态织入好，功能也有较多限制，但是由于使用起来简便（不需要语言扩展，不需要特殊的编译器等），它的实际应用更为广泛。</p> 
<h2>控制反转 IoC</h2> <p>通过 AOP 我们知道，某些问题如果我们换个角度来解决，会很大程度地简化代码。现在，让我们来了解在 Spring 中另一个经常和面向切面编程一起出现的概念——控制反转。控制反转是一种设计思想，也是通过“换个角度”来解决问题的。</p> 
<p>控制反转，IoC，即 Inversion of Control，言下之意，指的是把原有的控制方向掉转过来了。在我们常规的程序流程中，对象是由主程序流程创建的，例如，在业务流程中使用 
new 关键字来创建依赖对象。</p> <p>但是，当我们使用 Spring 框架的时候，<strong>Spring 把对象创建的工作接管过来，它作为对象容器，来负责对象的查找、匹配、创建、装配，依赖管理，等等。而主程序流程，则不用关心对象是怎么来的，只需要使用对象就可以了。</strong>我们还是拿 
BookService 举例子：</p> <pre style="position: relative;"><code> <table class="hljs-ln"> <tbody> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> public class BookService { </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> @Autowired </div></td> </tr> <tr> <td 
class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> private BookDao bookDao; </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> @Autowired </div></td> </tr> <tr> <td 
class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> private LoanDao loanDao; </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> public Book lendOut(String bookId, String 
userId, Date date) { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="7"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
bookDao.update( ... ); </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="8"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
loanDao.insert( ... ); </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="9"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
} </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="10"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> } </div></td> </tr> </tbody> </table></code> 
<div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 </div></pre> <p>比如 BookService 
的借出方法，假如它的实现中，我们希望：</p> <ul> <li>调用数据访问对象 bookDao 的方法来更新被借书的状态；</li> <li>调用借阅行为的访问对象 loanDao 
来增加一条借阅记录。</li> </ul> <p>在这种情况下，我们可以通过 @Autowired 注解，让容器将实际的数据访问对象注入进来，主程序流程不用关心“下一层”的数据访问对象到底是怎么创建的，怎么初始化的，甚至是怎么注入进来的，而是直接用就可以了，因为这些对象都已经被 
Spring 管理起来了。</p> <p>如果这些注入的对象之间还存在依赖关系，初始化它们的顺序就至关重要了，可是在这种情况下，Service 层依然不用关心，因为 Spring 已经根据代码或配置中声明的依赖关系自动确定了。总之，Service 
层的业务代码，只管调用其下的数据访问层的方法就好了。</p> <p>读到这里，你可能会回想起前文 AOP 的内容，和 IoC 似乎有一个共同的特点：都是<strong>为了尽可能保证主流程的纯粹和简洁</strong>，而将这些不影响主流程的逻辑拿出去，只不过这两种技术，“拿出去”的是不同的逻辑。值得注意的是，对象之间的依赖关系，各层之间的依赖关系，并没有因为 
IoC 而发生任何的改变。</p> <p><strong>IoC 在实现上包含两种方式，一种叫做依赖查找（DL，Dependency Lookup），另一种叫做依赖注入（DI，Dependency 
Injection）。</strong>二者缺一不可，Spring 容器做到了两者，就如同上面的例子，容器需要先查找到 bookDao 和 loanDao 所对应的对象，再把它们注入进来。当然，我们平时听到的更多是第二种。</p> 
<p>有了一个大致的感受，那么 IoC 到底能带来什么好处呢？我觉得主要有这样两个方面：</p> <ul> <li><strong>资源统一配置管理。</strong>这个方面很好，但并不是 
IoC 最大的优势，因为，如果你不把资源交给容器管理，而是自己建立一个资源管理类来管理某项资源，一样可以得到“统一管理”的所有优势。</li> <li><strong>业务代码不再包含依赖资源的访问逻辑，因此资源访问和业务流程的代码解耦开了。</strong>我觉得这里的“解耦”才是 
IoC 最核心的优势，它让各层之间的依赖关系变得松散。就如同上面的代码例子一样，如果哪一天我想把它依赖的 bookDao 和 loanDao 替换掉（比如，我想为 Service 层做测试），Service 
一行代码都不用改，它压根都不需要知道。</li> </ul> <h2>总结思考</h2> <p>今天我们一起学习了面向切面编程，从学习概念，熟悉配置，到了解实现原理，希望你对于 AOP 
已经有了一个清晰的认识，在未来设计和开发系统的时候，无论技术怎样演进，框架怎么变化，始终知道什么时候需要它，并能够把它从你的武器库中拿出来使用。</p> <p>现在我来提两个问题，我们一起讨论吧：</p> 
<ul> <li>你过去的项目中有没有应用 AOP 的例子，能说说吗？</li> <li>我介绍了 AOP 的优点，但却没有提到它的缺点，但其实任何技术都是有两面性的，你觉得 AOP 
的缺点都有哪些呢？</li> </ul> <h2>选修课堂：实践 AOP 的运行时动态代理</h2> <p>我们学习了 AOP 的实现原理，知道其中一种办法是通过 JDK 的动态代理技术来实现的。现在，我们就来写一点代码，用它实现一个小例子。</p> 
<p>首先，请你准备好一个项目文件夹，我们会在其中创建一系列文件。你可以使用 Eclipse 来管理项目，也可以自己建立一个独立的文件夹，这都没有关系。</p> <p>现在建立 BookService.java，这次我们把 
BookService 定义为一个接口，包含 lendOut 方法，同时也创建它的实现 BookServiceImpl：</p> <pre style="position: relative;"><code> 
<table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
import java.text.MessageFormat; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="2"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
import java.util.Date; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="3"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> interface BookService { </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> void lendOut(String bookId, String userId, 
Date date); </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" 
data-line-number="6"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> } </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="7"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="8"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> class BookServiceImpl implements BookService { </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="9"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> @Override </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="10"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> public void lendOut(String bookId, String userId, Date date) { </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="11"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> System.out.println(MessageFormat.format("{0}: 
The book {1} is lent to {2}.", date, bookId, userId)); </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="12"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> } </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="13"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
} </div></td> </tr> </tbody> </table></code> <div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 
</div></pre> <p>然后，我们建立一个 ServiceInvocationHandler.java，在这里我们可以定义代理对象在对原对象的方法调用前后，添加的额外逻辑：</p> 
<pre style="position: relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> import java.lang.reflect.InvocationHandler; </div></td> </tr> <tr> 
<td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> import java.lang.reflect.Method; </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> class ServiceInvocationHandler implements InvocationHandler { </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> private Object target; </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="7"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> public ServiceInvocationHandler(Object target) { </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="8"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> this.target = target; </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="9"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> } </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="10"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="11"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
@Override </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" 
data-line-number="12"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> public 
Object invoke(Object proxy, Method method, Object[] args) throws Throwable { </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="13"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> System.out.println("Before..."); </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="14"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> Object result = method.invoke(this.target, 
args); </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" 
data-line-number="15"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> System.out.println("After..."); 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="16"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> return result; </div></td> </tr> <tr> 
<td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="17"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> } </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="18"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> } </div></td> </tr> </tbody> </table></code> <div class="richcontent-pre-copy"> 
<span class="iconfont"></span>复制代码 </div></pre> <p>接着，我们建立一个 Client.java 类，作为程序的起点，通过动态代理的方式来调用源代码中的 
lendOut 方法：</p> <pre style="position: relative;"><code> <table class="hljs-ln"> <tbody> <tr> 
<td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> import java.lang.reflect.Proxy; </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> import java.util.Date; </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> public class Client { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> public static void main(String[] args) throws Exception { </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> BookService bookService = (BookService) 
Proxy.newProxyInstance( </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="7"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
BookService.class.getClassLoader(), </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div 
class="hljs-ln-line hljs-ln-n" data-line-number="8"></div></td> <td class="hljs-ln-code"> <div 
class="hljs-ln-line"> new Class[]{ BookService.class }, </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="9"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> new ServiceInvocationHandler(new BookServiceImpl()) </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="10"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> ); </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="11"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> bookService.lendOut("123", "456", new Date()); </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="12"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> } </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="13"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> } </div></td> </tr> </tbody> </table></code> <div class="richcontent-pre-copy"> 
<span class="iconfont"></span>复制代码 </div></pre> <p>你看，我们创建了一个动态代理对象，并赋给 bookService，这个代理对象实际是会调用 
BookServiceImpl 的，但调用的前后打印了额外的日志。并且，这个代理对象也实现自 BookService 接口，因此，对于 BookService 的使用者来说，它实际并不知道调用到的是 
BookServiceImpl 还是它的代理对象。请看图示：</p> <p><img src="https://static001.geekbang.org/resource/image/c3/9e/c39ca70be876a106e90e73d6946d849e.png" 
alt=""></p> <p>好，现在我们把这些代码编译一下：</p> <pre style="position: relative;"><code> <table class="hljs-ln"> 
<tbody> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> javac BookService.java ServiceInvocationHandler.java 
Client.java </div></td> </tr> </tbody> </table></code> <div class="richcontent-pre-copy"> <span 
class="iconfont"></span>复制代码 </div></pre> <p>你应该能看到它们的 class 文件分别生成了。</p> <p>最后，执行 Client 
的 main 方法，就能看到相应的执行结果，它显示 lendBook 方法前后的 AOP 的逻辑被实际执行了：</p> <pre style="position: relative;"><code> 
<table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
java Client </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" 
data-line-number="2"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> Before... 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> 8/10/19 11:42 AM: The book 123 is lent 
to 456. </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" 
data-line-number="4"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> After... 
</div></td> </tr> </tbody> </table></code> <div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 
</div></pre> <h2>扩展阅读</h2> <ul> <li>Spring 官方文档中<a href="https://docs.spring.io/spring/docs/current/spring-framework-reference/core.html#aop">关于 
AOP 的教程</a>，如果你希望看到中文版，那么互联网上有不少对于这部分的翻译，只不过对应的 Spring 版本不同，内容大致是一样的，比如<a href="https://blog.csdn.net/wengcheng_k/article/details/79952358">这一篇</a>。</li> 
<li><a href="https://www.baeldung.com/spring-aop-vs-aspectj">Comparing Spring AOP and AspectJ</a>，这是一篇关于静态织入和动态代理这两种 
AOP 方式比较的文章。</li> <li>对于 AspectJ，如果想一瞥其扩展的语法语义，维基百科的<a href="https://en.wikipedia.org/wiki/AspectJ">词条</a>就足矣；如果想了解某些细节，请参阅<a 
href="https://www.eclipse.org/aspectj/doc/released/adk15notebook/index.html">官方文档</a>。</li> 
</ul> <p><img src="https://static001.geekbang.org/resource/image/11/8b/1181246bbd51ce348d5729696d1dc28b.jpg" 
alt="unpreview"></p>', '', 'book', 0, 'full_html', 'zh-hans', 38, 38) 
 {executed in 1 msec}
2020-11-19 11:22:50.556 INFO  jdbc.sqltiming Line:373 - select nodefiledd0_.nid as nid1_9_, nodefiledd0_.changed as changed2_9_, nodefiledd0_.created 
as created3_9_, nodefiledd0_.default_langcode as default_4_9_, nodefiledd0_.langcode as langcode5_9_, 
nodefiledd0_.promote as promote6_9_, nodefiledd0_.revision_translation_affected as revision7_9_, 
nodefiledd0_.status as status8_9_, nodefiledd0_.sticky as sticky9_9_, nodefiledd0_.title as 
title10_9_, nodefiledd0_.type as type11_9_, nodefiledd0_.uid as uid12_9_, nodefiledd0_.vid 
as vid13_9_ from node_field_data nodefiledd0_ where nodefiledd0_.nid=38 
 {executed in 0 msec}
2020-11-19 11:22:50.556 INFO  jdbc.resultsettable Line:610 - 
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|-----|----|----|
|nid |changed |created |default_langcode |langcode |promote |revision_translation_affected |status |sticky |title |type |uid |vid |
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|-----|----|----|
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|-----|----|----|

2020-11-19 11:22:50.557 INFO  jdbc.sqltiming Line:373 - select nodefieldr0_.nid as nid1_10_0_, nodefieldr0_.changed as changed2_10_0_, nodefieldr0_.created 
as created3_10_0_, nodefieldr0_.default_langcode as default_4_10_0_, nodefieldr0_.langcode 
as langcode5_10_0_, nodefieldr0_.promote as promote6_10_0_, nodefieldr0_.revision_translation_affected 
as revision7_10_0_, nodefieldr0_.status as status8_10_0_, nodefieldr0_.sticky as sticky9_10_0_, 
nodefieldr0_.title as title10_10_0_, nodefieldr0_.uid as uid11_10_0_, nodefieldr0_.vid as vid12_10_0_ 
from node_field_revision nodefieldr0_ where nodefieldr0_.nid=38 
 {executed in 0 msec}
2020-11-19 11:22:50.557 INFO  jdbc.resultsettable Line:610 - 
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|----|----|
|nid |changed |created |default_langcode |langcode |promote |revision_translation_affected |status |sticky |title |uid |vid |
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|----|----|
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|----|----|

2020-11-19 11:22:50.558 INFO  jdbc.sqltiming Line:373 - insert into node_field_revision (changed, created, default_langcode, langcode, promote, revision_translation_affected, 
status, sticky, title, uid, vid, nid) values (1605756170, 1605756170, 1, 'zh-hans', 0, 1, 1, 
0, '11丨剑走偏锋：面向切面编程', 1, 38, 38) 
 {executed in 0 msec}
2020-11-19 11:22:50.561 INFO  jdbc.sqltiming Line:373 - select nodefiledd0_.nid as nid1_9_0_, nodefiledd0_.changed as changed2_9_0_, nodefiledd0_.created 
as created3_9_0_, nodefiledd0_.default_langcode as default_4_9_0_, nodefiledd0_.langcode as 
langcode5_9_0_, nodefiledd0_.promote as promote6_9_0_, nodefiledd0_.revision_translation_affected 
as revision7_9_0_, nodefiledd0_.status as status8_9_0_, nodefiledd0_.sticky as sticky9_9_0_, 
nodefiledd0_.title as title10_9_0_, nodefiledd0_.type as type11_9_0_, nodefiledd0_.uid as uid12_9_0_, 
nodefiledd0_.vid as vid13_9_0_ from node_field_data nodefiledd0_ where nodefiledd0_.nid=38 
 {executed in 0 msec}
2020-11-19 11:22:50.561 INFO  jdbc.resultsettable Line:610 - 
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|-----|----|----|
|nid |changed |created |default_langcode |langcode |promote |revision_translation_affected |status |sticky |title |type |uid |vid |
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|-----|----|----|
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|-----|----|----|

2020-11-19 11:22:50.563 INFO  jdbc.sqltiming Line:373 - insert into node_field_data (changed, created, default_langcode, langcode, promote, revision_translation_affected, 
status, sticky, title, type, uid, vid, nid) values (1605756170, 1605756170, 1, 'zh-hans', 0, 
1, 1, 0, '11丨剑走偏锋：面向切面编程', 'book', 1, 38, 38) 
 {executed in 0 msec}
2020-11-19 11:22:50.565 INFO  jdbc.sqltiming Line:373 - select bookfieldm0_.entity_id as entity_i1_7_, bookfieldm0_.bundle as bundle2_7_, bookfieldm0_.delta 
as delta3_7_, bookfieldm0_.langcode as langcode4_7_, bookfieldm0_.field_media_value as field_me5_7_, 
bookfieldm0_.revision_id as revision6_7_ from node__field_media bookfieldm0_ where bookfieldm0_.entity_id=38 
 {executed in 0 msec}
2020-11-19 11:22:50.566 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------------|------------|
|entity_id |bundle |delta |langcode |field_media_value |revision_id |
|----------|-------|------|---------|------------------|------------|
|----------|-------|------|---------|------------------|------------|

2020-11-19 11:22:50.566 INFO  jdbc.sqltiming Line:373 - select bookfieldm0_.entity_id as entity_i1_7_0_, bookfieldm0_.bundle as bundle2_7_0_, bookfieldm0_.delta 
as delta3_7_0_, bookfieldm0_.langcode as langcode4_7_0_, bookfieldm0_.field_media_value as 
field_me5_7_0_, bookfieldm0_.revision_id as revision6_7_0_ from node__field_media bookfieldm0_ 
where bookfieldm0_.entity_id=38 
 {executed in 0 msec}
2020-11-19 11:22:50.567 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------------|------------|
|entity_id |bundle |delta |langcode |field_media_value |revision_id |
|----------|-------|------|---------|------------------|------------|
|----------|-------|------|---------|------------------|------------|

2020-11-19 11:22:50.568 INFO  jdbc.sqltiming Line:373 - insert into node__field_media (bundle, delta, langcode, field_media_value, revision_id, entity_id) 
values ('book', 0, 'zh-hans', 'https://qdall01.baidupcs.com/file/7c7f9770c56208046b2d4cab40c27aed?bkt=en-038bee77e919b76a0c384fd3d0db9910318319c91076626f25f47e8a14d653c9c2ed30c47896832c&fid=3757516097-778750-781094517826930&time=1605756169&sign=FDTAXUGERLQlBHSKfWqir-DCb740ccc5511e5e8fedcff06b081203-z5F1IGzqEeq4o1Yj4ZqvmqYo8Os%3D&to=92&size=12939652&sta_dx=12939652&sta_cs=3868&sta_ft=m4a&sta_ct=7&sta_mt=0&fm2=MH%2CYangquan%2CAnywhere%2C%2Cshanghai%2Cct&ctime=1570414486&mtime=1605754779&resv0=-1&resv1=0&resv2=rlim&resv3=2&resv4=12939652&vuk=3757516097&iv=0&htype=&randtype=em&newver=1&newfm=1&secfm=1&flow_ver=3&pkey=en-40b167508497573ed1bc084ed48df4758e0dde3f5e5ad865b6bb6eb304c7d13399c62dabadde1654&sl=76480590&expires=8h&rt=pr&r=260776873&mlogid=7502279444894909358&vbdid=2247232042&fin=11%E4%B8%A8%E5%89%91%E8%B5%B0%E5%81%8F%E9%94%8B%EF%BC%9A%E9%9D%A2%E5%90%91%E5%88%87%E9%9D%A2%E7%BC%96%E7%A8%8B.m4a&bflag=92,34-92&rtype=1&dp-logid=7502279444894909358&dp-callid=0.1.1&hps=1&tsl=80&csl=80&fsl=-1&csign=yVzLQPCt4DblfMLqd2BCjd2RnqQ%3D&so=0&ut=6&uter=0&serv=0&uc=1458616558&ti=12146e4ffd7df3c96ce0bb4474c9a675289b64a25f677fc1&hflag=30&adg=c_15d187590626c675056c89c8026cfc17&reqlabel=778750_l_1bf9445f27094ab64c9f1cb0bdf7ccfa_-1_dd2c452b8e51a0c74130d7cf32c48a2d&ibp=1&by=themis&filename=11%E4%B8%A8%E5%89%91%E8%B5%B0%E5%81%8F%E9%94%8B%EF%BC%9A%E9%9D%A2%E5%90%91%E5%88%87%E9%9D%A2%E7%BC%96%E7%A8%8B.m4a', 
38, 38) 
 {executed in 0 msec}
2020-11-19 11:22:50.571 INFO  jdbc.sqltiming Line:373 - select nodefieldm0_.entity_id as entity_i1_16_0_, nodefieldm0_.bundle as bundle2_16_0_, nodefieldm0_.delta 
as delta3_16_0_, nodefieldm0_.langcode as langcode4_16_0_, nodefieldm0_.field_media_value as 
field_me5_16_0_, nodefieldm0_.revision_id as revision6_16_0_ from node_revision__field_media 
nodefieldm0_ where nodefieldm0_.entity_id=38 
 {executed in 0 msec}
2020-11-19 11:22:50.571 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------------|------------|
|entity_id |bundle |delta |langcode |field_media_value |revision_id |
|----------|-------|------|---------|------------------|------------|
|----------|-------|------|---------|------------------|------------|

2020-11-19 11:22:50.572 INFO  jdbc.sqltiming Line:373 - insert into node_revision__field_media (bundle, delta, langcode, field_media_value, revision_id, 
entity_id) values ('book', 0, 'zh-hans', 'https://qdall01.baidupcs.com/file/7c7f9770c56208046b2d4cab40c27aed?bkt=en-038bee77e919b76a0c384fd3d0db9910318319c91076626f25f47e8a14d653c9c2ed30c47896832c&fid=3757516097-778750-781094517826930&time=1605756169&sign=FDTAXUGERLQlBHSKfWqir-DCb740ccc5511e5e8fedcff06b081203-z5F1IGzqEeq4o1Yj4ZqvmqYo8Os%3D&to=92&size=12939652&sta_dx=12939652&sta_cs=3868&sta_ft=m4a&sta_ct=7&sta_mt=0&fm2=MH%2CYangquan%2CAnywhere%2C%2Cshanghai%2Cct&ctime=1570414486&mtime=1605754779&resv0=-1&resv1=0&resv2=rlim&resv3=2&resv4=12939652&vuk=3757516097&iv=0&htype=&randtype=em&newver=1&newfm=1&secfm=1&flow_ver=3&pkey=en-40b167508497573ed1bc084ed48df4758e0dde3f5e5ad865b6bb6eb304c7d13399c62dabadde1654&sl=76480590&expires=8h&rt=pr&r=260776873&mlogid=7502279444894909358&vbdid=2247232042&fin=11%E4%B8%A8%E5%89%91%E8%B5%B0%E5%81%8F%E9%94%8B%EF%BC%9A%E9%9D%A2%E5%90%91%E5%88%87%E9%9D%A2%E7%BC%96%E7%A8%8B.m4a&bflag=92,34-92&rtype=1&dp-logid=7502279444894909358&dp-callid=0.1.1&hps=1&tsl=80&csl=80&fsl=-1&csign=yVzLQPCt4DblfMLqd2BCjd2RnqQ%3D&so=0&ut=6&uter=0&serv=0&uc=1458616558&ti=12146e4ffd7df3c96ce0bb4474c9a675289b64a25f677fc1&hflag=30&adg=c_15d187590626c675056c89c8026cfc17&reqlabel=778750_l_1bf9445f27094ab64c9f1cb0bdf7ccfa_-1_dd2c452b8e51a0c74130d7cf32c48a2d&ibp=1&by=themis&filename=11%E4%B8%A8%E5%89%91%E8%B5%B0%E5%81%8F%E9%94%8B%EF%BC%9A%E9%9D%A2%E5%90%91%E5%88%87%E9%9D%A2%E7%BC%96%E7%A8%8B.m4a', 
38, 38) 
 {executed in 0 msec}
2020-11-19 11:22:50.575 INFO  jdbc.sqltiming Line:373 - select bookfieldc0_.entity_id as entity_i1_4_, bookfieldc0_.bundle as bundle2_4_, bookfieldc0_.field_comment_value 
as field_co3_4_, bookfieldc0_.delta as delta4_4_, bookfieldc0_.field_comment_format as field_co5_4_, 
bookfieldc0_.langcode as langcode6_4_, bookfieldc0_.revision_id as revision7_4_ from node__field_comment 
bookfieldc0_ where bookfieldc0_.entity_id=38 
 {executed in 0 msec}
2020-11-19 11:22:50.575 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|--------------------|------|---------------------|---------|------------|
|entity_id |bundle |field_comment_value |delta |field_comment_format |langcode |revision_id |
|----------|-------|--------------------|------|---------------------|---------|------------|
|----------|-------|--------------------|------|---------------------|---------|------------|

2020-11-19 11:22:50.576 INFO  jdbc.sqltiming Line:373 - select bookfieldc0_.entity_id as entity_i1_4_0_, bookfieldc0_.bundle as bundle2_4_0_, bookfieldc0_.field_comment_value 
as field_co3_4_0_, bookfieldc0_.delta as delta4_4_0_, bookfieldc0_.field_comment_format as 
field_co5_4_0_, bookfieldc0_.langcode as langcode6_4_0_, bookfieldc0_.revision_id as revision7_4_0_ 
from node__field_comment bookfieldc0_ where bookfieldc0_.entity_id=38 
 {executed in 0 msec}
2020-11-19 11:22:50.576 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|--------------------|------|---------------------|---------|------------|
|entity_id |bundle |field_comment_value |delta |field_comment_format |langcode |revision_id |
|----------|-------|--------------------|------|---------------------|---------|------------|
|----------|-------|--------------------|------|---------------------|---------|------------|

2020-11-19 11:22:50.577 INFO  jdbc.sqltiming Line:373 - insert into node__field_comment (bundle, field_comment_value, delta, field_comment_format, 
langcode, revision_id, entity_id) values ('book', '<li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/18/28/d9/78dfd983.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>sky</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2019-10-05 </div> </div> <!----> 
</div> <div> <div class="_3M6kV3zb_0"> iOS里用的runtime的一些方法也是aop了 </div> <div class="_2r3UB1GX_0"> 
<span>展开</span><i class="iconfont"></i> </div> <!----> <div class="_1w8H0ktn_0 _2A421P4G_0"> 
<div class="_2jsFl-X0_0"> <i class="iconfont"></i> <span></span> </div> <div class="_2P4B1Hdm_0"> 
<i class="iconfont"></i> <span class=""></span> </div> <!----> </div> </div> </div></li> <li 
class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/11/5a/55/411f95a8.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>我叫徐小晋</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2019-10-05 </div> </div> <!----> 
</div> <div> <div class="_3M6kV3zb_0"> 老师您好。SpringBoot中分层，model层,dao层，service层，controller层。上层通过@Autowired来使用下层的方法，这个就是文中说到的Ioc吗？ 
</div> <div class="_2r3UB1GX_0"> <span>展开</span><i class="iconfont"></i> </div> <!----> <div 
class="_1w8H0ktn_0 _2A421P4G_0"> <div class="_2jsFl-X0_0"> <i class="iconfont"></i> <span></span> 
</div> <div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class=""></span> </div> <!----> 
</div> </div> </div></li>', 0, 'full_html', 'zh-hans', 38, 38) 
 {executed in 0 msec}
2020-11-19 11:22:50.580 INFO  jdbc.sqltiming Line:373 - select nodefieldc0_.entity_id as entity_i1_13_0_, nodefieldc0_.bundle as bundle2_13_0_, nodefieldc0_.field_comment_value 
as field_co3_13_0_, nodefieldc0_.delta as delta4_13_0_, nodefieldc0_.field_comment_format as 
field_co5_13_0_, nodefieldc0_.langcode as langcode6_13_0_, nodefieldc0_.revision_id as revision7_13_0_ 
from node_revision__field_comment nodefieldc0_ where nodefieldc0_.entity_id=38 
 {executed in 0 msec}
2020-11-19 11:22:50.580 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|--------------------|------|---------------------|---------|------------|
|entity_id |bundle |field_comment_value |delta |field_comment_format |langcode |revision_id |
|----------|-------|--------------------|------|---------------------|---------|------------|
|----------|-------|--------------------|------|---------------------|---------|------------|

2020-11-19 11:22:50.582 INFO  jdbc.sqltiming Line:373 - insert into node_revision__field_comment (bundle, field_comment_value, delta, field_comment_format, 
langcode, revision_id, entity_id) values ('book', '<li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/18/28/d9/78dfd983.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>sky</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2019-10-05 </div> </div> <!----> 
</div> <div> <div class="_3M6kV3zb_0"> iOS里用的runtime的一些方法也是aop了 </div> <div class="_2r3UB1GX_0"> 
<span>展开</span><i class="iconfont"></i> </div> <!----> <div class="_1w8H0ktn_0 _2A421P4G_0"> 
<div class="_2jsFl-X0_0"> <i class="iconfont"></i> <span></span> </div> <div class="_2P4B1Hdm_0"> 
<i class="iconfont"></i> <span class=""></span> </div> <!----> </div> </div> </div></li> <li 
class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/11/5a/55/411f95a8.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>我叫徐小晋</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2019-10-05 </div> </div> <!----> 
</div> <div> <div class="_3M6kV3zb_0"> 老师您好。SpringBoot中分层，model层,dao层，service层，controller层。上层通过@Autowired来使用下层的方法，这个就是文中说到的Ioc吗？ 
</div> <div class="_2r3UB1GX_0"> <span>展开</span><i class="iconfont"></i> </div> <!----> <div 
class="_1w8H0ktn_0 _2A421P4G_0"> <div class="_2jsFl-X0_0"> <i class="iconfont"></i> <span></span> 
</div> <div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class=""></span> </div> <!----> 
</div> </div> </div></li>', 0, 'full_html', 'zh-hans', 38, 38) 
 {executed in 0 msec}
2020-11-19 11:22:50.584 INFO  jdbc.sqltiming Line:373 - select bookfieldt0_.entity_id as entity_i1_8_, bookfieldt0_.bundle as bundle2_8_, bookfieldt0_.delta 
as delta3_8_, bookfieldt0_.langcode as langcode4_8_, bookfieldt0_.revision_id as revision5_8_, 
bookfieldt0_.field_thumb_value as field_th6_8_ from node__field_thumb bookfieldt0_ where bookfieldt0_.entity_id=38 
 {executed in 0 msec}
2020-11-19 11:22:50.585 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------|------------------|
|entity_id |bundle |delta |langcode |revision_id |field_thumb_value |
|----------|-------|------|---------|------------|------------------|
|----------|-------|------|---------|------------|------------------|

2020-11-19 11:22:50.585 INFO  jdbc.sqltiming Line:373 - select bookfieldt0_.entity_id as entity_i1_8_0_, bookfieldt0_.bundle as bundle2_8_0_, bookfieldt0_.delta 
as delta3_8_0_, bookfieldt0_.langcode as langcode4_8_0_, bookfieldt0_.revision_id as revision5_8_0_, 
bookfieldt0_.field_thumb_value as field_th6_8_0_ from node__field_thumb bookfieldt0_ where 
bookfieldt0_.entity_id=38 
 {executed in 0 msec}
2020-11-19 11:22:50.586 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------|------------------|
|entity_id |bundle |delta |langcode |revision_id |field_thumb_value |
|----------|-------|------|---------|------------|------------------|
|----------|-------|------|---------|------------|------------------|

2020-11-19 11:22:50.587 INFO  jdbc.sqltiming Line:373 - insert into node__field_thumb (bundle, delta, langcode, revision_id, field_thumb_value, entity_id) 
values ('book', 0, 'zh-hans', 38, 'https://static001.geekbang.org/resource/image/01/92/01a86d15c9fa1160536712acae462892.jpg', 
38) 
 {executed in 0 msec}
2020-11-19 11:22:50.589 INFO  jdbc.sqltiming Line:373 - select nodefieldt0_.entity_id as entity_i1_17_0_, nodefieldt0_.bundle as bundle2_17_0_, nodefieldt0_.delta 
as delta3_17_0_, nodefieldt0_.langcode as langcode4_17_0_, nodefieldt0_.revision_id as revision5_17_0_, 
nodefieldt0_.field_thumb_value as field_th6_17_0_ from node_revision__field_thumb nodefieldt0_ 
where nodefieldt0_.entity_id=38 
 {executed in 0 msec}
2020-11-19 11:22:50.590 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------|------------------|
|entity_id |bundle |delta |langcode |revision_id |field_thumb_value |
|----------|-------|------|---------|------------|------------------|
|----------|-------|------|---------|------------|------------------|

2020-11-19 11:22:50.591 INFO  jdbc.sqltiming Line:373 - insert into node_revision__field_thumb (bundle, delta, langcode, revision_id, field_thumb_value, 
entity_id) values ('book', 0, 'zh-hans', 38, 'https://static001.geekbang.org/resource/image/01/92/01a86d15c9fa1160536712acae462892.jpg', 
38) 
 {executed in 0 msec}
2020-11-19 11:22:50.594 INFO  jdbc.sqltiming Line:373 - select bookfieldf0_.entity_id as entity_i1_5_0_, bookfieldf0_.bundle as bundle2_5_0_, bookfieldf0_.delta 
as delta3_5_0_, bookfieldf0_.field_fenlei_target_id as field_fe4_5_0_, bookfieldf0_.langcode 
as langcode5_5_0_, bookfieldf0_.revision_id as revision6_5_0_ from node__field_fenlei bookfieldf0_ 
where bookfieldf0_.entity_id=38 
 {executed in 1 msec}
2020-11-19 11:22:50.594 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------------|---------|------------|
|entity_id |bundle |delta |field_fenlei_target_id |langcode |revision_id |
|----------|-------|------|-----------------------|---------|------------|
|----------|-------|------|-----------------------|---------|------------|

2020-11-19 11:22:50.595 INFO  jdbc.sqltiming Line:373 - insert into node__field_fenlei (bundle, delta, field_fenlei_target_id, langcode, revision_id, 
entity_id) values ('book', 0, 1, 'zh-hans', 38, 38) 
 {executed in 0 msec}
2020-11-19 11:22:50.598 INFO  jdbc.sqltiming Line:373 - select nodefieldf0_.entity_id as entity_i1_14_0_, nodefieldf0_.bundle as bundle2_14_0_, nodefieldf0_.delta 
as delta3_14_0_, nodefieldf0_.field_fenlei_target_id as field_fe4_14_0_, nodefieldf0_.langcode 
as langcode5_14_0_, nodefieldf0_.revision_id as revision6_14_0_ from node_revision__field_fenlei 
nodefieldf0_ where nodefieldf0_.entity_id=38 
 {executed in 1 msec}
2020-11-19 11:22:50.598 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------------|---------|------------|
|entity_id |bundle |delta |field_fenlei_target_id |langcode |revision_id |
|----------|-------|------|-----------------------|---------|------------|
|----------|-------|------|-----------------------|---------|------------|

2020-11-19 11:22:50.599 INFO  jdbc.sqltiming Line:373 - insert into node_revision__field_fenlei (bundle, delta, field_fenlei_target_id, langcode, revision_id, 
entity_id) values ('book', 0, 1, 'zh-hans', 38, 38) 
 {executed in 0 msec}
2020-11-19 11:23:28.198 INFO  jdbc.sqltiming Line:373 - select bookfieldf0_.entity_id as entity_i1_6_, bookfieldf0_.bundle as bundle2_6_, bookfieldf0_.delta 
as delta3_6_, bookfieldf0_.field_fsid_value as field_fs4_6_, bookfieldf0_.langcode as langcode5_6_, 
bookfieldf0_.revision_id as revision6_6_ from node__field_fsid bookfieldf0_ where bookfieldf0_.field_fsid_value='36253398013312' 
 {executed in 1 msec}
2020-11-19 11:23:28.199 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------|---------|------------|
|entity_id |bundle |delta |field_fsid_value |langcode |revision_id |
|----------|-------|------|-----------------|---------|------------|
|----------|-------|------|-----------------|---------|------------|

2020-11-19 11:23:28.200 INFO  jdbc.sqltiming Line:373 - insert into node_revision (langcode, nid, revision_default, revision_timestamp, revision_uid) 
values ('zh-hans', 0, 1, 1605756208, 1) 
 {executed in 0 msec}
2020-11-19 11:23:28.200 INFO  jdbc.sqltiming Line:373 - getGeneratedKeys on query: insert into node_revision (langcode, nid, revision_default, revision_timestamp, 
revision_uid) values ('zh-hans', 0, 1, 1605756208, 1) 
 {executed in 0 msec}
2020-11-19 11:23:28.200 INFO  jdbc.resultsettable Line:610 - 
|--------------|
|generated_key |
|--------------|
|39            |
|--------------|

2020-11-19 11:23:28.209 INFO  jdbc.sqltiming Line:373 - insert into node (langcode, type, uuid, vid) values ('zh-hans', 'book', '788a1498-74f4-49ea-86f0-be5db7ee2985', 
39) 
 {executed in 0 msec}
2020-11-19 11:23:28.209 INFO  jdbc.sqltiming Line:373 - getGeneratedKeys on query: insert into node (langcode, type, uuid, vid) values ('zh-hans', 
'book', '788a1498-74f4-49ea-86f0-be5db7ee2985', 39) 
 {executed in 0 msec}
2020-11-19 11:23:28.209 INFO  jdbc.resultsettable Line:610 - 
|--------------|
|generated_key |
|--------------|
|39            |
|--------------|

2020-11-19 11:23:28.215 INFO  jdbc.sqltiming Line:373 - update node_revision set langcode='zh-hans', nid=39, revision_default=1, revision_timestamp=1605756208, 
revision_uid=1 where vid=39 
 {executed in 0 msec}
2020-11-19 11:23:28.219 INFO  jdbc.sqltiming Line:373 - select bookfieldf0_.entity_id as entity_i1_6_0_, bookfieldf0_.bundle as bundle2_6_0_, bookfieldf0_.delta 
as delta3_6_0_, bookfieldf0_.field_fsid_value as field_fs4_6_0_, bookfieldf0_.langcode as langcode5_6_0_, 
bookfieldf0_.revision_id as revision6_6_0_ from node__field_fsid bookfieldf0_ where bookfieldf0_.entity_id=39 
 {executed in 0 msec}
2020-11-19 11:23:28.219 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------|---------|------------|
|entity_id |bundle |delta |field_fsid_value |langcode |revision_id |
|----------|-------|------|-----------------|---------|------------|
|----------|-------|------|-----------------|---------|------------|

2020-11-19 11:23:28.221 INFO  jdbc.sqltiming Line:373 - insert into node__field_fsid (bundle, delta, field_fsid_value, langcode, revision_id, entity_id) 
values ('book', 0, '36253398013312', 'zh-hans', 39, 39) 
 {executed in 1 msec}
2020-11-19 11:23:28.227 INFO  jdbc.sqltiming Line:373 - select nodefieldf0_.entity_id as entity_i1_15_0_, nodefieldf0_.bundle as bundle2_15_0_, nodefieldf0_.delta 
as delta3_15_0_, nodefieldf0_.field_fsid_value as field_fs4_15_0_, nodefieldf0_.langcode as 
langcode5_15_0_, nodefieldf0_.revision_id as revision6_15_0_ from node_revision__field_fsid 
nodefieldf0_ where nodefieldf0_.entity_id=39 
 {executed in 0 msec}
2020-11-19 11:23:28.227 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------|---------|------------|
|entity_id |bundle |delta |field_fsid_value |langcode |revision_id |
|----------|-------|------|-----------------|---------|------------|
|----------|-------|------|-----------------|---------|------------|

2020-11-19 11:23:28.229 INFO  jdbc.sqltiming Line:373 - insert into node_revision__field_fsid (bundle, delta, field_fsid_value, langcode, revision_id, 
entity_id) values ('book', 0, '36253398013312', 'zh-hans', 39, 39) 
 {executed in 0 msec}
2020-11-19 11:23:28.232 INFO  jdbc.sqltiming Line:373 - select bookentity0_.nid as nid1_1_, bookentity0_.bid as bid2_1_, bookentity0_.depth as depth3_1_, 
bookentity0_.has_children as has_chil4_1_, bookentity0_.p1 as p5_1_, bookentity0_.p2 as p6_1_, 
bookentity0_.p3 as p7_1_, bookentity0_.p4 as p8_1_, bookentity0_.p5 as p9_1_, bookentity0_.pid 
as pid10_1_, bookentity0_.weight as weight11_1_ from book bookentity0_ where bookentity0_.nid=39 
 {executed in 0 msec}
2020-11-19 11:23:28.233 INFO  jdbc.resultsettable Line:610 - 
|----|----|------|-------------|---|---|---|---|---|----|-------|
|nid |bid |depth |has_children |p1 |p2 |p3 |p4 |p5 |pid |weight |
|----|----|------|-------------|---|---|---|---|---|----|-------|
|----|----|------|-------------|---|---|---|---|---|----|-------|

2020-11-19 11:23:28.233 INFO  jdbc.sqltiming Line:373 - select bookentity0_.nid as nid1_1_0_, bookentity0_.bid as bid2_1_0_, bookentity0_.depth as 
depth3_1_0_, bookentity0_.has_children as has_chil4_1_0_, bookentity0_.p1 as p5_1_0_, bookentity0_.p2 
as p6_1_0_, bookentity0_.p3 as p7_1_0_, bookentity0_.p4 as p8_1_0_, bookentity0_.p5 as p9_1_0_, 
bookentity0_.pid as pid10_1_0_, bookentity0_.weight as weight11_1_0_ from book bookentity0_ 
where bookentity0_.nid=39 
 {executed in 0 msec}
2020-11-19 11:23:28.234 INFO  jdbc.resultsettable Line:610 - 
|----|----|------|-------------|---|---|---|---|---|----|-------|
|nid |bid |depth |has_children |p1 |p2 |p3 |p4 |p5 |pid |weight |
|----|----|------|-------------|---|---|---|---|---|----|-------|
|----|----|------|-------------|---|---|---|---|---|----|-------|

2020-11-19 11:23:28.235 INFO  jdbc.sqltiming Line:373 - insert into book (bid, depth, has_children, p1, p2, p3, p4, p5, pid, weight, nid) values (1, 
3, 0, 1, 35, 39, 0, 0, 35, 0, 39) 
 {executed in 0 msec}
2020-11-19 11:23:28.239 INFO  jdbc.sqltiming Line:373 - select nodebodyen0_.entity_id as entity_i1_3_, nodebodyen0_.body_value as body_val2_3_, nodebodyen0_.body_summary 
as body_sum3_3_, nodebodyen0_.bundle as bundle4_3_, nodebodyen0_.delta as delta5_3_, nodebodyen0_.body_format 
as body_for6_3_, nodebodyen0_.langcode as langcode7_3_, nodebodyen0_.revision_id as revision8_3_ 
from node__body nodebodyen0_ where nodebodyen0_.entity_id=39 
 {executed in 0 msec}
2020-11-19 11:23:28.239 INFO  jdbc.resultsettable Line:610 - 
|----------|-----------|-------------|-------|------|------------|---------|------------|
|entity_id |body_value |body_summary |bundle |delta |body_format |langcode |revision_id |
|----------|-----------|-------------|-------|------|------------|---------|------------|
|----------|-----------|-------------|-------|------|------------|---------|------------|

2020-11-19 11:23:28.240 INFO  jdbc.sqltiming Line:373 - select nodebodyre0_.entity_id as entity_i1_12_0_, nodebodyre0_.body_value as body_val2_12_0_, 
nodebodyre0_.body_summary as body_sum3_12_0_, nodebodyre0_.bundle as bundle4_12_0_, nodebodyre0_.delta 
as delta5_12_0_, nodebodyre0_.body_format as body_for6_12_0_, nodebodyre0_.langcode as langcode7_12_0_, 
nodebodyre0_.revision_id as revision8_12_0_ from node_revision__body nodebodyre0_ where nodebodyre0_.entity_id=39 
 {executed in 0 msec}
2020-11-19 11:23:28.240 INFO  jdbc.resultsettable Line:610 - 
|----------|-----------|-------------|-------|------|------------|---------|------------|
|entity_id |body_value |body_summary |bundle |delta |body_format |langcode |revision_id |
|----------|-----------|-------------|-------|------|------------|---------|------------|
|----------|-----------|-------------|-------|------|------------|---------|------------|

2020-11-19 11:23:28.243 INFO  jdbc.sqltiming Line:373 - insert into node_revision__body (body_value, body_summary, bundle, delta, body_format, langcode, 
revision_id, entity_id) values ('<p>你好，我是四火。</p> <p>今天我们继续学习 MVC 架构，主要内容就是 MVC 架构的第三部分——控制器（Controller）。</p> 
<p>控制器用于接收请求，校验参数，调用 Model 层获取业务数据，构造和绑定上下文，并转给 View 层去渲染。也就是说，控制器是 MVC 的大脑，它知道接下去该让谁去做什么事。控制器层是大多数 
MVC 框架特别愿意做文章的地方，我相信你可能耳闻、了解，甚至熟练使用过一些 MVC 框架了。</p> <p>那么与其去抽象地学习这一层的重要概念、原理，或是单纯地学习这些框架在这一层略显乏味的具体配置，我想我们今天“不走寻常路”一次，把这两者结合起来——<strong>我们来比较 
Servlet、Struts 和 Sprint MVC 这三种常见的技术和 MVC 框架，在控制器层的工作路数，以及和业务代码整合配置的方式，看看任这些框架形式千变万化，到底有哪些其实是不变的“套路”呢？</strong></p> 
<p>随着请求到达控制器，让我们顺着接下去的请求处理流程，看看控制器会通过怎样的步骤，履行完它的职责，并最终转到相应的视图吧。</p> <h2>1. 路径映射和视图指向</h2> <p>我们不妨把 
MVC 架构的控制器想象成一个黑盒。当 HTTP 请求从客户端送达的时候，这个黑盒要完成一系列使命，那么它就有一个入口路由和一个出口路由：</p><!-- [[[read_end]]] 
--> <ul> <li><strong>入口路由就是路径映射，根据配置的规则，以及请求 URI 的路径，找到具体接收和处理这个请求的控制器逻辑；</strong></li> <li><strong>出口路由就是视图指向，根据配置的规则，以及控制器处理完毕后返回的信息，找到需要渲染的视图页面。</strong></li> 
</ul> <p>这两件事情，我们当然可以使用原始的 if-else 来完成，但是一般的 MVC 都提供了更清晰和独立的解决方案。</p> <p>我们还是从老朋友 Servlet 开始讲起，在 
Tomcat 的 web.xml 中，我们可以配置这样的路径映射：</p> <pre style="position: relative;"><code> <table class="hljs-ln"> 
<tbody> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> &lt;servlet&gt; </div></td> </tr> <tr> 
<td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> &lt;servlet-name&gt;BookServlet&lt;/servlet-name&gt; 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> &lt;servlet-class&gt;com.xxx.xxx.BookServlet&lt;/servlet-class&gt; 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> &lt;/servlet&gt; </div></td> </tr> <tr> 
<td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> &lt;servlet-mapping&gt; </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> &lt;servlet-name&gt;BookServlet&lt;/servlet-name&gt; 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="7"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> &lt;url-pattern&gt;/books&lt;/url-pattern&gt; 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="8"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> &lt;/servlet-mapping&gt; </div></td> </tr> 
</tbody> </table></code> <div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 
</div></pre> <p>你看，对于路径映射，一旦请求是 /books 这种形式的，就会被转到 BookServlet 里去处理。而对于视图指向，Servlet 是通过代码完成的，比如：</p> 
<pre style="position: relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> request.getRequestDispatcher("/book.jsp").forward(request, response); 
</div></td> </tr> </tbody> </table></code> <div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 
</div></pre> <p>但是，Servlet 路径映射的表达式匹配不够灵活，而且配置过于冗长；而视图指向更是完全通过代码调用来完成，视图的位置信息完全耦合在控制器主代码逻辑中，而且也并没有体现出配置的集中、清晰的管理优势。于是现今的 
MVC 框架都提供了一套自己的映射匹配逻辑，例如 <a href="https://struts.apache.org/index.html">Struts 2</a>：</p> <pre 
style="position: relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> &lt;action name="books" class="xxx.xxx.BookAction"&gt; </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> &lt;result name="success" type="dispatcher"&gt;/success.jsp&lt;/result&gt; 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> &lt;result name="input" ... /&gt; </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> &lt;/action&gt; </div></td> </tr> </tbody> 
</table></code> <div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 </div></pre> 
<p>其中，name=“books” 这样的配置就会将 /books 的请求转给 BookAction。至于接下来的两个 result 标签，是根据控制器返回的视图名来配对具体的视图页面，也就是说，一旦 
BookAction 处理完毕，通过返回的视图名字，请求可以被转发给相应的视图。</p> <p>这个路径映射的配置是简单一些了，可是都需要放在一个其它位置的、单独的 XML 中配置。不过，Java 
5 开始支持注解，因此许多 MVC 框架都开始支持使用注解来让这样的配置变得更加轻量，也就是将路径映射和它所属的控制器代码放在一起。见下面 Struts 的例子：</p> <pre 
style="position: relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> public class BookAction extends ActionSupport { </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> @Action(value="/books", results={ </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> @Result(name="success",location="/book.jsp") 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> }) </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> public String get() { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> ... </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="7"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
return "success"; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="8"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
} </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="9"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> } </div></td> </tr> </tbody> </table></code> 
<div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 </div></pre> <p>代码依然很好理解，当以 
/books 为路径的 GET 请求到来时，会被转给 BookAction 的 get 方法。在控制器的活干完之后，根据返回的名称 success，下一步请求就会转到视图 /book.jsp 
中去。</p> <p>你看，对于路径映射和视图指向，为了不把这样的信息和主流程代码耦合在一起，上面讲了两种实现方法，它们各有优劣：</p> <ul> <li>放到配置文件中，好处是所有的映射都在一个文件里，方便管理。但是对于任何一个控制器逻辑，要寻找它对应的配置信息，需要去别的位置（即上文的 
XML 中）寻找。<strong>这是一种代码横向分层解耦的方式，即分层方式和业务模块无关，或者说二者是“正交”的</strong>，这种方式我在 [第 11 讲] 讲解 IoC（控制反转）时会继续介绍。</li> 
<li>使用注解，和控制器逻辑放在一起，好处是映射本身是和具体的控制器逻辑放在一起，当然，它们并非代码层面的耦合，而是通过注解的方式分离开。坏处是，如果需要考察所有的映射配置，那么就没有一个统一的文件可供概览。<strong>这是一种代码纵向分层解耦的方式，也就是说，配置是跟着业务模块走的</strong>。</li> 
</ul> <p>无论使用以上哪一种方法，本质上都逃不过需要显式配置的命运。但无论哪种方法，其实都已经够简单了，可历史总是惊人的相似，总有帮“难伺候”的程序员，还是嫌麻烦！于是就有人想出了一个“终极偷懒”的办法——免掉配置。</p> 
<p>这就需要利用 <strong>CoC 原则（Convention over Configuration，即规约优于配置）</strong>。比如，在使用 <a href="https://docs.spring.io/spring/docs/current/spring-framework-reference/web.html">Spring 
MVC</a> 这个 MVC 框架时，声明了 ControllerClassNameHandlerMapping 以后，对于这样没有配置任何映射信息的方法，会根据 Controller 
类名的规约来完成映射：</p> <pre style="position: relative;"><code> <table class="hljs-ln"> <tbody> <tr> 
<td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> public class BooksController extends AbstractController 
{ </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> @Override </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> protected ModelAndView handleRequestInternal() throws Exception 
{ </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> ... </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> } </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="6"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
} </div></td> </tr> </tbody> </table></code> <div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 
</div></pre> <p>在使用 /books 去访问的时候，请求就会被自动转交给定义好的控制器逻辑。</p> <p>你看，规约优于配置看起来可以省掉很多工作对不对？没错！但是任何技术都有两面性，<strong>CoC 
虽然省掉了一部分实际的配置工作，却没有改变映射匹配的流程本身，也不能省掉任何为了理解规约背后的“隐性知识”的学习成本</strong>。而且，规约往往只方便于解决最常见的配置，也就意味着，<strong>当需要更灵活的配置时，我们还是会被迫退化回显式配置</strong>。</p> 
<h2>2. 请求参数绑定</h2> <p>请求被送到了指定的控制器方法，接下去，需要从 HTTP 请求中把参数取出来，绑定到控制器这一层，以便使用。<strong>整个控制器的流程中，有两次重要的数据绑定，这是第一次，是为了控制器而绑定请求数据</strong>，后面在视图上下文构造这一步中还有一次绑定，那是为了视图而进行的。</p> 
<p>和路径映射的配置一样，最先被考虑的方式，一定是用编程的方法实现的。比如在 Servlet 中，可以这样做：</p> <pre style="position: relative;"><code> 
<table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
request.getParameter("name") </div></td> </tr> </tbody> </table></code> <div class="richcontent-pre-copy"> 
<span class="iconfont"></span>复制代码 </div></pre> <p>这并没有什么稀奇的对不对，想想我们前面学习的处理方法，参数应该能通过某种配置方式自动注入到控制器的对象属性或者方法参数中吧？一点都没错，并且，Struts 
和 Spring MVC 各有各的做法，二者加起来，就恰巧印证了这句话。</p> <p>还记得前面 Struts 的那个例子吗？给 BookAction 设置一个和参数同名的属性，并辅以规则的 
get/set 方法，就能将请求中的参数自动注入。更强大的地方在于，如果这个属性是个复杂对象，只要参数按照规约命名了，那么它也能够被正确处理：</p> <pre style="position: 
relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
public class BookAction extends ActionSupport { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> private Page page; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> public void setPage { ... } </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> public Page getPage { ... } </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> } </div></td> </tr> </tbody> </table></code> <div class="richcontent-pre-copy"> 
<span class="iconfont"></span>复制代码 </div></pre> <p>在这种设定下，如果 URI 是：</p> <pre style="position: 
relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
/books?page.pageSize=1&amp;page.pageNo=2&amp;page.orderBy=desc </div></td> </tr> </tbody> </table></code> 
<div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 </div></pre> <p>那么，pageSize、pageNo 
和 orderBy 这三个值就会被设置到一个 Page 对象中，而这个 Page 对象则会被自动注入到 BookAction 的实例中去。</p> <p>再来看看 Spring MVC 
使用注解的方式来处理，和 URL 的结构放在一起观察，这种方式显然更为形象直观：</p> <pre style="position: relative;"><code> <table 
class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" 
data-line-number="1"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> @RequestMapping("/{category}/books") 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> public ModelAndView get(@PathVariable("category") 
String category, @RequestParam("author") String author){ ... } </div></td> </tr> </tbody> </table></code> 
<div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 </div></pre> <p>在这种配置下，如果 
URI 是：</p> <pre style="position: relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td 
class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> /comic/books?author=Jim </div></td> </tr> 
</tbody> </table></code> <div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 
</div></pre> <p>那么，分类 comic 就会作为方法参数 category 的值传入，而作者 Jim 就会作为方法参数 author 的值传入。</p> <h2>3. 
参数验证</h2> <p>参数验证的操作因为和请求对象密切相关，因此通常都是在控制器层完成的。在参数验证没有通过的情况下，往往会执行异常流程，转到错误页面，返回失败请求。Struts 
提供了一个将参数验证解耦到配置文件的办法，请看下面的例子：</p> <pre style="position: relative;"><code> <table class="hljs-ln"> 
<tbody> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> &lt;validators&gt; </div></td> </tr> <tr> 
<td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> &lt;field name="name"&gt; </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> &lt;field-validator type="requiredstring"&gt; 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> &lt;param name="trim"&gt;true&lt;/param&gt; 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> &lt;message&gt; 书名不得为空 &lt;/message&gt; 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> &lt;/field-validator&gt; </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="7"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> &lt;field-validator type="stringlength"&gt; 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="8"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> &lt;param name="maxLength"&gt;100&lt;/param&gt; 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="9"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> &lt;param name="minLength"&gt;1&lt;/param&gt; 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="10"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> &lt;message&gt; 书名的长度必须在 1~100 之间 &lt;/message&gt; 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="11"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> &lt;/field-validator&gt; </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="12"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> &lt;/field&gt; </div></td> </tr> <tr> 
<td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="13"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> &lt;/validators&gt; </div></td> </tr> 
</tbody> </table></code> <div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 
</div></pre> <p>这就是一个非常简单的参数验证的规则，对于属性 name 定义了两条规则，一条是不得为空，另一条是长度必须在 1~100 之间，否则将返回错误信息。</p> 
<p>类似的，Struts 也提供了基于注解的参数验证方式，上面的例子，如果使用注解来实现，就需要将注解加在自动注入参数的 set 方法处。代码见下：</p> <pre style="position: 
relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
@RequiredFieldValidator(trim = true, message = " 书名不得为空.") </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> @StringLengthFieldValidator(minLength = "1", maxLength = "100", 
message = " 书名的长度必须在 1~100 之间 ") </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="3"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
void setName(String name) { ... } </div></td> </tr> </tbody> </table></code> <div class="richcontent-pre-copy"> 
<span class="iconfont"></span>复制代码 </div></pre> <h2>4. 视图上下文绑定</h2> <p>在控制器中，我们经常需要将数据传入视图层，它可能会携带用户传入的参数，也可能会携带在控制器中查询模型得到的数据，而这个传入方式，就是<strong>将数据绑定到视图的上下文中。这就是我刚刚提到过的控制器层两大绑定中的第二个</strong>。</p> 
<p>如果是使用 Servlet，那么我们一般可以用 setAttribute 的方法将参数设置到 request 对象中，这样在视图层就可以相应地使用 getAttribute 方法把该参数的值取出来。</p> 
<pre style="position: relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> request.setAttribute("page", xxx); </div></td> </tr> </tbody> </table></code> 
<div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 </div></pre> <p>对于 Struts 
来说，它的方法和前面说的请求参数绑定统一了，即可以将想传递的值放到 Action 的对象属性中，这种方式绑定的属性，和请求参数自动绑定的属性没有什么区别，在视图层都可以直接从上下文中取出来。</p> 
<p>接着前面 BookAction 的例子，绑定了一个 Page 对象，那么在视图层中就可以使用 OGNL（Object-Graph Navigation Language，对象导航图语言）表达式直接取得：</p> 
<pre style="position: relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> &lt;p&gt; 第 ${page.pageNo} 页 &lt;/p&gt; </div></td> </tr> </tbody> 
</table></code> <div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 </div></pre> 
<p>对于 Spring MVC，则是需要在控制器方法中传入一个类型为 Model 的对象，同时将需要绑定的对象通过调用 addAttribute 来完成绑定，这个过程和 Servlet 
是类似的。</p> <h2>总结思考</h2> <p>今天我们学习了 MVC 架构中的控制器层，整个控制器的逻辑比较密集，从请求抵达，到转出到视图层去渲染，控制器的逻辑通常包括下面这几步，但是，严格说起来，下面这些步骤的任何一步，根据实际情况，都是可以省略的。</p> 
<p><img src="https://static001.geekbang.org/resource/image/0a/34/0a0f9ad88c34ab5922e57e2b55ff6834.png" 
alt=""></p> <p>我们对比了在原生 Servlet、Struts 框架和 Spring MVC 框架下，上面各个步骤的实现，希望你能够感悟到其中的“套路”。</p> <p>是的，具体某一个框架的配置使用，是很容易学习和掌握的，这当然很好，但那只是死的知识，而这也只是机械记忆。而当我们去思考同一个框架中实现同一个特性的不同方法，或者是不同框架实现同一个特性的不同方法时，我们就会慢慢体会到技术的有趣之处。</p> 
<p>因为我们会去思考，这些不同的“玩法”比较起来，各有什么优缺点，在实际应用中应该怎么去权衡和选择，甚至去想，如果让我去设计一个类似的特性，都有哪些办法可以实现。</p> <p>好，下面我们就来检验一下今天所学的知识，请思考下面这样两个问题：</p> 
<ul> <li>我们提到了 MVC 框架中，两种常见的配置方式，一种是将配置放在横向解耦的单独一层，另一种是将配置和业务模块放在一起。你更喜欢哪一种，为什么？</li> <li>在上面的图中，我列出了控制器层常见的六大步骤。那么，回想你经历过的项目，是将怎样的代码逻辑放在了控制器层呢？</li> 
</ul> <p>对于今天学习的内容，对于思考题，以及通过比较学习“套路”的方式，如果你有想法，不妨和我在留言区一起讨论吧。</p> <h2>选修课堂：动手实现一个简单的 MVC 系统</h2> 
<p>这一章我们一直在学习 MVC，不动手实践是不行的。我们要使用 Servlet + JSP + JavaBean 这种相对原始的方法来实现一个最简单的 MVC 系统。</p> <p>还记得我们在 
<a href="https://time.geekbang.org/column/article/140196">[第 07 讲]</a> 中动手跑起来的 Tomcat 吗？现在请打开 
Tomcat 的安装目录，设置好环境变量 CATALINA_HOME，以便于我们后面使用正确的 Tomcat 路径。以我的电脑为例：</p> <pre style="position: 
relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
export CATALINA_HOME=/usr/local/Cellar/tomcat/9.0.22/libexec </div></td> </tr> </tbody> </table></code> 
<div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 </div></pre> <p>我们打开 
${CATALINA_HOME}/webapps/ROOT/WEB-INF/web.xml，在 这个结束标签前，添加如下子标签：</p> <pre style="position: 
relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
&lt;servlet&gt; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="2"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
&lt;servlet-name&gt;BookServlet&lt;/servlet-name&gt; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> &lt;servlet-class&gt;BookServlet&lt;/servlet-class&gt; </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> &lt;/servlet&gt; </div></td> </tr> <tr> 
<td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> &lt;servlet-mapping&gt; </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> &lt;servlet-name&gt;BookServlet&lt;/servlet-name&gt; 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="7"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> &lt;url-pattern&gt;/books&lt;/url-pattern&gt; 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="8"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> &lt;url-pattern&gt;/books/*&lt;/url-pattern&gt; 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="9"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> &lt;/servlet-mapping&gt; </div></td> </tr> 
</tbody> </table></code> <div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 
</div></pre> <p>注意这里配置了两个 URL 映射，/books 和 /books/{bookId} 两种类型的请求会全部映射到我们将建立的 Servlet 中。</p> 
<p>在配置好 Servlet 的映射之后，进入 ${CATALINA_HOME}/webapps/ROOT/WEB-INF，并创建一个名为 classes 的文件夹，接着在这个文件夹下建立一个名为 
BookServlet.java 的文件，并编辑它：</p> <pre style="position: relative;"><code> <table class="hljs-ln"> 
<tbody> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> import java.io.IOException; </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> import javax.servlet.ServletException; 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> import javax.servlet.http.HttpServlet; 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> import javax.servlet.http.HttpServletRequest; 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> import javax.servlet.http.HttpServletResponse; 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="7"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> public class BookServlet extends HttpServlet { </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="8"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> protected void doGet(HttpServletRequest 
request, HttpServletResponse response) throws ServletException, IOException { </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="9"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> String category = request.getParameter("category"); 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="10"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> request.setAttribute("categoryName", category); 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="11"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> request.getRequestDispatcher("/book.jsp").forward(request, 
response); </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" 
data-line-number="12"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> } </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="13"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> } </div></td> </tr> </tbody> </table></code> 
<div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 </div></pre> <p>嗯，其实代码逻辑很简单，把 
URL 中的 category 参数的值取出来，给一个新名字 categoryName 并传给 book.jsp。</p> <p>好，接下来我们就要把上面的 Java 源文件编译成 
class 文件了，执行：</p> <pre style="position: relative;"><code> <table class="hljs-ln"> <tbody> <tr> 
<td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> javac BookServlet.java -classpath ${CATALINA_HOME}/lib/servlet-api.jar 
</div></td> </tr> </tbody> </table></code> <div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 
</div></pre> <p>其中 servlet-api.jar 是 Tomcat 中存放的编译运行 Servlet 所必须的类库。这样，你应该能看到在 classes 目录下生成了 
BookServlet.class 文件。</p> <p>接着，在 ${CATALINA_HOME}/webapps/ROOT 下建立 book.jsp，并写入：</p> <pre 
style="position: relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> &lt;jsp:useBean id="date" class="java.util.Date" /&gt; </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> Category name: &lt;%=request.getAttribute("categoryName") 
%&gt;, date: ${date.getYear()+1900}-${date.getMonth()+1}-${date.getDate()} </div></td> </tr> 
</tbody> </table></code> <div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 
</div></pre> <p>第一行表示创建并使用一个 Date 类型的 JavaBean，第二行在显示结果的时候，category 使用了 JSP 特有的 scriptlet 的表达式，而日期则使用了 
OGNL 表达式。注意 Date 对象返回的年份是以 1900 年为基准的偏移量，因此需要加上 1900；而返回的月份是从 0 开始往后排的，因此需要加上修正值 1。</p> <p>好了，大功告成，我们快来执行 
Tomcat 看看结果吧！启动 Tomcat：</p> <pre style="position: relative;"><code> <table class="hljs-ln"> 
<tbody> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> catalina run </div></td> </tr> </tbody> 
</table></code> <div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 </div></pre> 
<p>打开浏览器，访问：</p> <pre style="position: relative;"><code> <table class="hljs-ln"> <tbody> <tr> 
<td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> http://localhost:8080/books?category=art 
</div></td> </tr> </tbody> </table></code> <div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 
</div></pre> <p>如果你看到类似如下字样，那么，恭喜你，成功了！现在，你可以回想一下刚才的实现，这些代码该怎样对应到 MVC 各个部分呢？</p> <pre style="position: 
relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
Category name: art, date: 2019-8-5 </div></td> </tr> </tbody> </table></code> <div class="richcontent-pre-copy"> 
<span class="iconfont"></span>复制代码 </div></pre> <h2>扩展阅读</h2> <ul> <li>对于 <a href="https://struts.apache.org/index.html">Struts</a> 
和 <a href="https://docs.spring.io/spring/docs/current/spring-framework-reference/web.html">Spring 
MVC</a>，文中已经给出了官方链接，如果你想阅读简洁的中文版教程，可以看看这个 <a href="https://doc.yonyoucloud.com/doc/wiki/project/struts-2/architecture.html">Struts 
2 教程</a>和这个 <a href="https://www.w3cschool.cn/wkspring/9pf81ha5.html">Spring MVC 教程</a>。</li> 
<li>文中提到了使用 ControllerClassNameHandlerMapping 来贯彻“规约优于配置”的思想，达到对具体的映射免配置的目的，如果你感兴趣的话，<a href="https://www.tutorialspoint.com/springmvc/springmvc_controllerclassnamehandlermapping">Spring 
MVC - Controller Class Name Handler Mapping Example</a> 这篇文章有很好的介绍。</li> <li><a href="https://www.ibm.com/developerworks/cn/opensource/os-cn-ognl/index.html">OGNL 
语言介绍与实践</a>，文中提到了 OGNL 表达式，感兴趣的话这篇文章是很好的入门。</li> </ul> <p><img src="https://static001.geekbang.org/resource/image/11/8b/1181246bbd51ce348d5729696d1dc28b.jpg" 
alt="unpreview"></p>', '', 'book', 0, 'full_html', 'zh-hans', 39, 39) 
 {executed in 1 msec}
2020-11-19 11:23:28.248 INFO  jdbc.sqltiming Line:373 - select nodebodyen0_.entity_id as entity_i1_3_0_, nodebodyen0_.body_value as body_val2_3_0_, 
nodebodyen0_.body_summary as body_sum3_3_0_, nodebodyen0_.bundle as bundle4_3_0_, nodebodyen0_.delta 
as delta5_3_0_, nodebodyen0_.body_format as body_for6_3_0_, nodebodyen0_.langcode as langcode7_3_0_, 
nodebodyen0_.revision_id as revision8_3_0_ from node__body nodebodyen0_ where nodebodyen0_.entity_id=39 
 {executed in 0 msec}
2020-11-19 11:23:28.248 INFO  jdbc.resultsettable Line:610 - 
|----------|-----------|-------------|-------|------|------------|---------|------------|
|entity_id |body_value |body_summary |bundle |delta |body_format |langcode |revision_id |
|----------|-----------|-------------|-------|------|------------|---------|------------|
|----------|-----------|-------------|-------|------|------------|---------|------------|

2020-11-19 11:23:28.251 INFO  jdbc.sqltiming Line:373 - insert into node__body (body_value, body_summary, bundle, delta, body_format, langcode, revision_id, 
entity_id) values ('<p>你好，我是四火。</p> <p>今天我们继续学习 MVC 架构，主要内容就是 MVC 架构的第三部分——控制器（Controller）。</p> 
<p>控制器用于接收请求，校验参数，调用 Model 层获取业务数据，构造和绑定上下文，并转给 View 层去渲染。也就是说，控制器是 MVC 的大脑，它知道接下去该让谁去做什么事。控制器层是大多数 
MVC 框架特别愿意做文章的地方，我相信你可能耳闻、了解，甚至熟练使用过一些 MVC 框架了。</p> <p>那么与其去抽象地学习这一层的重要概念、原理，或是单纯地学习这些框架在这一层略显乏味的具体配置，我想我们今天“不走寻常路”一次，把这两者结合起来——<strong>我们来比较 
Servlet、Struts 和 Sprint MVC 这三种常见的技术和 MVC 框架，在控制器层的工作路数，以及和业务代码整合配置的方式，看看任这些框架形式千变万化，到底有哪些其实是不变的“套路”呢？</strong></p> 
<p>随着请求到达控制器，让我们顺着接下去的请求处理流程，看看控制器会通过怎样的步骤，履行完它的职责，并最终转到相应的视图吧。</p> <h2>1. 路径映射和视图指向</h2> <p>我们不妨把 
MVC 架构的控制器想象成一个黑盒。当 HTTP 请求从客户端送达的时候，这个黑盒要完成一系列使命，那么它就有一个入口路由和一个出口路由：</p><!-- [[[read_end]]] 
--> <ul> <li><strong>入口路由就是路径映射，根据配置的规则，以及请求 URI 的路径，找到具体接收和处理这个请求的控制器逻辑；</strong></li> <li><strong>出口路由就是视图指向，根据配置的规则，以及控制器处理完毕后返回的信息，找到需要渲染的视图页面。</strong></li> 
</ul> <p>这两件事情，我们当然可以使用原始的 if-else 来完成，但是一般的 MVC 都提供了更清晰和独立的解决方案。</p> <p>我们还是从老朋友 Servlet 开始讲起，在 
Tomcat 的 web.xml 中，我们可以配置这样的路径映射：</p> <pre style="position: relative;"><code> <table class="hljs-ln"> 
<tbody> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> &lt;servlet&gt; </div></td> </tr> <tr> 
<td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> &lt;servlet-name&gt;BookServlet&lt;/servlet-name&gt; 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> &lt;servlet-class&gt;com.xxx.xxx.BookServlet&lt;/servlet-class&gt; 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> &lt;/servlet&gt; </div></td> </tr> <tr> 
<td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> &lt;servlet-mapping&gt; </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> &lt;servlet-name&gt;BookServlet&lt;/servlet-name&gt; 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="7"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> &lt;url-pattern&gt;/books&lt;/url-pattern&gt; 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="8"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> &lt;/servlet-mapping&gt; </div></td> </tr> 
</tbody> </table></code> <div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 
</div></pre> <p>你看，对于路径映射，一旦请求是 /books 这种形式的，就会被转到 BookServlet 里去处理。而对于视图指向，Servlet 是通过代码完成的，比如：</p> 
<pre style="position: relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> request.getRequestDispatcher("/book.jsp").forward(request, response); 
</div></td> </tr> </tbody> </table></code> <div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 
</div></pre> <p>但是，Servlet 路径映射的表达式匹配不够灵活，而且配置过于冗长；而视图指向更是完全通过代码调用来完成，视图的位置信息完全耦合在控制器主代码逻辑中，而且也并没有体现出配置的集中、清晰的管理优势。于是现今的 
MVC 框架都提供了一套自己的映射匹配逻辑，例如 <a href="https://struts.apache.org/index.html">Struts 2</a>：</p> <pre 
style="position: relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> &lt;action name="books" class="xxx.xxx.BookAction"&gt; </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> &lt;result name="success" type="dispatcher"&gt;/success.jsp&lt;/result&gt; 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> &lt;result name="input" ... /&gt; </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> &lt;/action&gt; </div></td> </tr> </tbody> 
</table></code> <div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 </div></pre> 
<p>其中，name=“books” 这样的配置就会将 /books 的请求转给 BookAction。至于接下来的两个 result 标签，是根据控制器返回的视图名来配对具体的视图页面，也就是说，一旦 
BookAction 处理完毕，通过返回的视图名字，请求可以被转发给相应的视图。</p> <p>这个路径映射的配置是简单一些了，可是都需要放在一个其它位置的、单独的 XML 中配置。不过，Java 
5 开始支持注解，因此许多 MVC 框架都开始支持使用注解来让这样的配置变得更加轻量，也就是将路径映射和它所属的控制器代码放在一起。见下面 Struts 的例子：</p> <pre 
style="position: relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> public class BookAction extends ActionSupport { </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> @Action(value="/books", results={ </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> @Result(name="success",location="/book.jsp") 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> }) </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> public String get() { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> ... </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="7"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
return "success"; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="8"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
} </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="9"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> } </div></td> </tr> </tbody> </table></code> 
<div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 </div></pre> <p>代码依然很好理解，当以 
/books 为路径的 GET 请求到来时，会被转给 BookAction 的 get 方法。在控制器的活干完之后，根据返回的名称 success，下一步请求就会转到视图 /book.jsp 
中去。</p> <p>你看，对于路径映射和视图指向，为了不把这样的信息和主流程代码耦合在一起，上面讲了两种实现方法，它们各有优劣：</p> <ul> <li>放到配置文件中，好处是所有的映射都在一个文件里，方便管理。但是对于任何一个控制器逻辑，要寻找它对应的配置信息，需要去别的位置（即上文的 
XML 中）寻找。<strong>这是一种代码横向分层解耦的方式，即分层方式和业务模块无关，或者说二者是“正交”的</strong>，这种方式我在 [第 11 讲] 讲解 IoC（控制反转）时会继续介绍。</li> 
<li>使用注解，和控制器逻辑放在一起，好处是映射本身是和具体的控制器逻辑放在一起，当然，它们并非代码层面的耦合，而是通过注解的方式分离开。坏处是，如果需要考察所有的映射配置，那么就没有一个统一的文件可供概览。<strong>这是一种代码纵向分层解耦的方式，也就是说，配置是跟着业务模块走的</strong>。</li> 
</ul> <p>无论使用以上哪一种方法，本质上都逃不过需要显式配置的命运。但无论哪种方法，其实都已经够简单了，可历史总是惊人的相似，总有帮“难伺候”的程序员，还是嫌麻烦！于是就有人想出了一个“终极偷懒”的办法——免掉配置。</p> 
<p>这就需要利用 <strong>CoC 原则（Convention over Configuration，即规约优于配置）</strong>。比如，在使用 <a href="https://docs.spring.io/spring/docs/current/spring-framework-reference/web.html">Spring 
MVC</a> 这个 MVC 框架时，声明了 ControllerClassNameHandlerMapping 以后，对于这样没有配置任何映射信息的方法，会根据 Controller 
类名的规约来完成映射：</p> <pre style="position: relative;"><code> <table class="hljs-ln"> <tbody> <tr> 
<td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> public class BooksController extends AbstractController 
{ </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> @Override </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> protected ModelAndView handleRequestInternal() throws Exception 
{ </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> ... </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> } </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="6"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
} </div></td> </tr> </tbody> </table></code> <div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 
</div></pre> <p>在使用 /books 去访问的时候，请求就会被自动转交给定义好的控制器逻辑。</p> <p>你看，规约优于配置看起来可以省掉很多工作对不对？没错！但是任何技术都有两面性，<strong>CoC 
虽然省掉了一部分实际的配置工作，却没有改变映射匹配的流程本身，也不能省掉任何为了理解规约背后的“隐性知识”的学习成本</strong>。而且，规约往往只方便于解决最常见的配置，也就意味着，<strong>当需要更灵活的配置时，我们还是会被迫退化回显式配置</strong>。</p> 
<h2>2. 请求参数绑定</h2> <p>请求被送到了指定的控制器方法，接下去，需要从 HTTP 请求中把参数取出来，绑定到控制器这一层，以便使用。<strong>整个控制器的流程中，有两次重要的数据绑定，这是第一次，是为了控制器而绑定请求数据</strong>，后面在视图上下文构造这一步中还有一次绑定，那是为了视图而进行的。</p> 
<p>和路径映射的配置一样，最先被考虑的方式，一定是用编程的方法实现的。比如在 Servlet 中，可以这样做：</p> <pre style="position: relative;"><code> 
<table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
request.getParameter("name") </div></td> </tr> </tbody> </table></code> <div class="richcontent-pre-copy"> 
<span class="iconfont"></span>复制代码 </div></pre> <p>这并没有什么稀奇的对不对，想想我们前面学习的处理方法，参数应该能通过某种配置方式自动注入到控制器的对象属性或者方法参数中吧？一点都没错，并且，Struts 
和 Spring MVC 各有各的做法，二者加起来，就恰巧印证了这句话。</p> <p>还记得前面 Struts 的那个例子吗？给 BookAction 设置一个和参数同名的属性，并辅以规则的 
get/set 方法，就能将请求中的参数自动注入。更强大的地方在于，如果这个属性是个复杂对象，只要参数按照规约命名了，那么它也能够被正确处理：</p> <pre style="position: 
relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
public class BookAction extends ActionSupport { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> private Page page; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> public void setPage { ... } </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> public Page getPage { ... } </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> } </div></td> </tr> </tbody> </table></code> <div class="richcontent-pre-copy"> 
<span class="iconfont"></span>复制代码 </div></pre> <p>在这种设定下，如果 URI 是：</p> <pre style="position: 
relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
/books?page.pageSize=1&amp;page.pageNo=2&amp;page.orderBy=desc </div></td> </tr> </tbody> </table></code> 
<div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 </div></pre> <p>那么，pageSize、pageNo 
和 orderBy 这三个值就会被设置到一个 Page 对象中，而这个 Page 对象则会被自动注入到 BookAction 的实例中去。</p> <p>再来看看 Spring MVC 
使用注解的方式来处理，和 URL 的结构放在一起观察，这种方式显然更为形象直观：</p> <pre style="position: relative;"><code> <table 
class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" 
data-line-number="1"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> @RequestMapping("/{category}/books") 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> public ModelAndView get(@PathVariable("category") 
String category, @RequestParam("author") String author){ ... } </div></td> </tr> </tbody> </table></code> 
<div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 </div></pre> <p>在这种配置下，如果 
URI 是：</p> <pre style="position: relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td 
class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> /comic/books?author=Jim </div></td> </tr> 
</tbody> </table></code> <div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 
</div></pre> <p>那么，分类 comic 就会作为方法参数 category 的值传入，而作者 Jim 就会作为方法参数 author 的值传入。</p> <h2>3. 
参数验证</h2> <p>参数验证的操作因为和请求对象密切相关，因此通常都是在控制器层完成的。在参数验证没有通过的情况下，往往会执行异常流程，转到错误页面，返回失败请求。Struts 
提供了一个将参数验证解耦到配置文件的办法，请看下面的例子：</p> <pre style="position: relative;"><code> <table class="hljs-ln"> 
<tbody> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> &lt;validators&gt; </div></td> </tr> <tr> 
<td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> &lt;field name="name"&gt; </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> &lt;field-validator type="requiredstring"&gt; 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> &lt;param name="trim"&gt;true&lt;/param&gt; 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> &lt;message&gt; 书名不得为空 &lt;/message&gt; 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> &lt;/field-validator&gt; </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="7"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> &lt;field-validator type="stringlength"&gt; 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="8"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> &lt;param name="maxLength"&gt;100&lt;/param&gt; 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="9"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> &lt;param name="minLength"&gt;1&lt;/param&gt; 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="10"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> &lt;message&gt; 书名的长度必须在 1~100 之间 &lt;/message&gt; 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="11"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> &lt;/field-validator&gt; </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="12"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> &lt;/field&gt; </div></td> </tr> <tr> 
<td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="13"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> &lt;/validators&gt; </div></td> </tr> 
</tbody> </table></code> <div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 
</div></pre> <p>这就是一个非常简单的参数验证的规则，对于属性 name 定义了两条规则，一条是不得为空，另一条是长度必须在 1~100 之间，否则将返回错误信息。</p> 
<p>类似的，Struts 也提供了基于注解的参数验证方式，上面的例子，如果使用注解来实现，就需要将注解加在自动注入参数的 set 方法处。代码见下：</p> <pre style="position: 
relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
@RequiredFieldValidator(trim = true, message = " 书名不得为空.") </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> @StringLengthFieldValidator(minLength = "1", maxLength = "100", 
message = " 书名的长度必须在 1~100 之间 ") </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="3"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
void setName(String name) { ... } </div></td> </tr> </tbody> </table></code> <div class="richcontent-pre-copy"> 
<span class="iconfont"></span>复制代码 </div></pre> <h2>4. 视图上下文绑定</h2> <p>在控制器中，我们经常需要将数据传入视图层，它可能会携带用户传入的参数，也可能会携带在控制器中查询模型得到的数据，而这个传入方式，就是<strong>将数据绑定到视图的上下文中。这就是我刚刚提到过的控制器层两大绑定中的第二个</strong>。</p> 
<p>如果是使用 Servlet，那么我们一般可以用 setAttribute 的方法将参数设置到 request 对象中，这样在视图层就可以相应地使用 getAttribute 方法把该参数的值取出来。</p> 
<pre style="position: relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> request.setAttribute("page", xxx); </div></td> </tr> </tbody> </table></code> 
<div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 </div></pre> <p>对于 Struts 
来说，它的方法和前面说的请求参数绑定统一了，即可以将想传递的值放到 Action 的对象属性中，这种方式绑定的属性，和请求参数自动绑定的属性没有什么区别，在视图层都可以直接从上下文中取出来。</p> 
<p>接着前面 BookAction 的例子，绑定了一个 Page 对象，那么在视图层中就可以使用 OGNL（Object-Graph Navigation Language，对象导航图语言）表达式直接取得：</p> 
<pre style="position: relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> &lt;p&gt; 第 ${page.pageNo} 页 &lt;/p&gt; </div></td> </tr> </tbody> 
</table></code> <div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 </div></pre> 
<p>对于 Spring MVC，则是需要在控制器方法中传入一个类型为 Model 的对象，同时将需要绑定的对象通过调用 addAttribute 来完成绑定，这个过程和 Servlet 
是类似的。</p> <h2>总结思考</h2> <p>今天我们学习了 MVC 架构中的控制器层，整个控制器的逻辑比较密集，从请求抵达，到转出到视图层去渲染，控制器的逻辑通常包括下面这几步，但是，严格说起来，下面这些步骤的任何一步，根据实际情况，都是可以省略的。</p> 
<p><img src="https://static001.geekbang.org/resource/image/0a/34/0a0f9ad88c34ab5922e57e2b55ff6834.png" 
alt=""></p> <p>我们对比了在原生 Servlet、Struts 框架和 Spring MVC 框架下，上面各个步骤的实现，希望你能够感悟到其中的“套路”。</p> <p>是的，具体某一个框架的配置使用，是很容易学习和掌握的，这当然很好，但那只是死的知识，而这也只是机械记忆。而当我们去思考同一个框架中实现同一个特性的不同方法，或者是不同框架实现同一个特性的不同方法时，我们就会慢慢体会到技术的有趣之处。</p> 
<p>因为我们会去思考，这些不同的“玩法”比较起来，各有什么优缺点，在实际应用中应该怎么去权衡和选择，甚至去想，如果让我去设计一个类似的特性，都有哪些办法可以实现。</p> <p>好，下面我们就来检验一下今天所学的知识，请思考下面这样两个问题：</p> 
<ul> <li>我们提到了 MVC 框架中，两种常见的配置方式，一种是将配置放在横向解耦的单独一层，另一种是将配置和业务模块放在一起。你更喜欢哪一种，为什么？</li> <li>在上面的图中，我列出了控制器层常见的六大步骤。那么，回想你经历过的项目，是将怎样的代码逻辑放在了控制器层呢？</li> 
</ul> <p>对于今天学习的内容，对于思考题，以及通过比较学习“套路”的方式，如果你有想法，不妨和我在留言区一起讨论吧。</p> <h2>选修课堂：动手实现一个简单的 MVC 系统</h2> 
<p>这一章我们一直在学习 MVC，不动手实践是不行的。我们要使用 Servlet + JSP + JavaBean 这种相对原始的方法来实现一个最简单的 MVC 系统。</p> <p>还记得我们在 
<a href="https://time.geekbang.org/column/article/140196">[第 07 讲]</a> 中动手跑起来的 Tomcat 吗？现在请打开 
Tomcat 的安装目录，设置好环境变量 CATALINA_HOME，以便于我们后面使用正确的 Tomcat 路径。以我的电脑为例：</p> <pre style="position: 
relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
export CATALINA_HOME=/usr/local/Cellar/tomcat/9.0.22/libexec </div></td> </tr> </tbody> </table></code> 
<div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 </div></pre> <p>我们打开 
${CATALINA_HOME}/webapps/ROOT/WEB-INF/web.xml，在 这个结束标签前，添加如下子标签：</p> <pre style="position: 
relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
&lt;servlet&gt; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="2"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
&lt;servlet-name&gt;BookServlet&lt;/servlet-name&gt; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> &lt;servlet-class&gt;BookServlet&lt;/servlet-class&gt; </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> &lt;/servlet&gt; </div></td> </tr> <tr> 
<td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> &lt;servlet-mapping&gt; </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> &lt;servlet-name&gt;BookServlet&lt;/servlet-name&gt; 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="7"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> &lt;url-pattern&gt;/books&lt;/url-pattern&gt; 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="8"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> &lt;url-pattern&gt;/books/*&lt;/url-pattern&gt; 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="9"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> &lt;/servlet-mapping&gt; </div></td> </tr> 
</tbody> </table></code> <div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 
</div></pre> <p>注意这里配置了两个 URL 映射，/books 和 /books/{bookId} 两种类型的请求会全部映射到我们将建立的 Servlet 中。</p> 
<p>在配置好 Servlet 的映射之后，进入 ${CATALINA_HOME}/webapps/ROOT/WEB-INF，并创建一个名为 classes 的文件夹，接着在这个文件夹下建立一个名为 
BookServlet.java 的文件，并编辑它：</p> <pre style="position: relative;"><code> <table class="hljs-ln"> 
<tbody> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> import java.io.IOException; </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> import javax.servlet.ServletException; 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> import javax.servlet.http.HttpServlet; 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> import javax.servlet.http.HttpServletRequest; 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> import javax.servlet.http.HttpServletResponse; 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="7"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> public class BookServlet extends HttpServlet { </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="8"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> protected void doGet(HttpServletRequest 
request, HttpServletResponse response) throws ServletException, IOException { </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="9"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> String category = request.getParameter("category"); 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="10"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> request.setAttribute("categoryName", category); 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="11"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> request.getRequestDispatcher("/book.jsp").forward(request, 
response); </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" 
data-line-number="12"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> } </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="13"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> } </div></td> </tr> </tbody> </table></code> 
<div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 </div></pre> <p>嗯，其实代码逻辑很简单，把 
URL 中的 category 参数的值取出来，给一个新名字 categoryName 并传给 book.jsp。</p> <p>好，接下来我们就要把上面的 Java 源文件编译成 
class 文件了，执行：</p> <pre style="position: relative;"><code> <table class="hljs-ln"> <tbody> <tr> 
<td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> javac BookServlet.java -classpath ${CATALINA_HOME}/lib/servlet-api.jar 
</div></td> </tr> </tbody> </table></code> <div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 
</div></pre> <p>其中 servlet-api.jar 是 Tomcat 中存放的编译运行 Servlet 所必须的类库。这样，你应该能看到在 classes 目录下生成了 
BookServlet.class 文件。</p> <p>接着，在 ${CATALINA_HOME}/webapps/ROOT 下建立 book.jsp，并写入：</p> <pre 
style="position: relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> &lt;jsp:useBean id="date" class="java.util.Date" /&gt; </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> Category name: &lt;%=request.getAttribute("categoryName") 
%&gt;, date: ${date.getYear()+1900}-${date.getMonth()+1}-${date.getDate()} </div></td> </tr> 
</tbody> </table></code> <div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 
</div></pre> <p>第一行表示创建并使用一个 Date 类型的 JavaBean，第二行在显示结果的时候，category 使用了 JSP 特有的 scriptlet 的表达式，而日期则使用了 
OGNL 表达式。注意 Date 对象返回的年份是以 1900 年为基准的偏移量，因此需要加上 1900；而返回的月份是从 0 开始往后排的，因此需要加上修正值 1。</p> <p>好了，大功告成，我们快来执行 
Tomcat 看看结果吧！启动 Tomcat：</p> <pre style="position: relative;"><code> <table class="hljs-ln"> 
<tbody> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> catalina run </div></td> </tr> </tbody> 
</table></code> <div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 </div></pre> 
<p>打开浏览器，访问：</p> <pre style="position: relative;"><code> <table class="hljs-ln"> <tbody> <tr> 
<td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> http://localhost:8080/books?category=art 
</div></td> </tr> </tbody> </table></code> <div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 
</div></pre> <p>如果你看到类似如下字样，那么，恭喜你，成功了！现在，你可以回想一下刚才的实现，这些代码该怎样对应到 MVC 各个部分呢？</p> <pre style="position: 
relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
Category name: art, date: 2019-8-5 </div></td> </tr> </tbody> </table></code> <div class="richcontent-pre-copy"> 
<span class="iconfont"></span>复制代码 </div></pre> <h2>扩展阅读</h2> <ul> <li>对于 <a href="https://struts.apache.org/index.html">Struts</a> 
和 <a href="https://docs.spring.io/spring/docs/current/spring-framework-reference/web.html">Spring 
MVC</a>，文中已经给出了官方链接，如果你想阅读简洁的中文版教程，可以看看这个 <a href="https://doc.yonyoucloud.com/doc/wiki/project/struts-2/architecture.html">Struts 
2 教程</a>和这个 <a href="https://www.w3cschool.cn/wkspring/9pf81ha5.html">Spring MVC 教程</a>。</li> 
<li>文中提到了使用 ControllerClassNameHandlerMapping 来贯彻“规约优于配置”的思想，达到对具体的映射免配置的目的，如果你感兴趣的话，<a href="https://www.tutorialspoint.com/springmvc/springmvc_controllerclassnamehandlermapping">Spring 
MVC - Controller Class Name Handler Mapping Example</a> 这篇文章有很好的介绍。</li> <li><a href="https://www.ibm.com/developerworks/cn/opensource/os-cn-ognl/index.html">OGNL 
语言介绍与实践</a>，文中提到了 OGNL 表达式，感兴趣的话这篇文章是很好的入门。</li> </ul> <p><img src="https://static001.geekbang.org/resource/image/11/8b/1181246bbd51ce348d5729696d1dc28b.jpg" 
alt="unpreview"></p>', '', 'book', 0, 'full_html', 'zh-hans', 39, 39) 
 {executed in 1 msec}
2020-11-19 11:23:28.255 INFO  jdbc.sqltiming Line:373 - select nodefiledd0_.nid as nid1_9_, nodefiledd0_.changed as changed2_9_, nodefiledd0_.created 
as created3_9_, nodefiledd0_.default_langcode as default_4_9_, nodefiledd0_.langcode as langcode5_9_, 
nodefiledd0_.promote as promote6_9_, nodefiledd0_.revision_translation_affected as revision7_9_, 
nodefiledd0_.status as status8_9_, nodefiledd0_.sticky as sticky9_9_, nodefiledd0_.title as 
title10_9_, nodefiledd0_.type as type11_9_, nodefiledd0_.uid as uid12_9_, nodefiledd0_.vid 
as vid13_9_ from node_field_data nodefiledd0_ where nodefiledd0_.nid=39 
 {executed in 0 msec}
2020-11-19 11:23:28.256 INFO  jdbc.resultsettable Line:610 - 
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|-----|----|----|
|nid |changed |created |default_langcode |langcode |promote |revision_translation_affected |status |sticky |title |type |uid |vid |
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|-----|----|----|
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|-----|----|----|

2020-11-19 11:23:28.257 INFO  jdbc.sqltiming Line:373 - select nodefieldr0_.nid as nid1_10_0_, nodefieldr0_.changed as changed2_10_0_, nodefieldr0_.created 
as created3_10_0_, nodefieldr0_.default_langcode as default_4_10_0_, nodefieldr0_.langcode 
as langcode5_10_0_, nodefieldr0_.promote as promote6_10_0_, nodefieldr0_.revision_translation_affected 
as revision7_10_0_, nodefieldr0_.status as status8_10_0_, nodefieldr0_.sticky as sticky9_10_0_, 
nodefieldr0_.title as title10_10_0_, nodefieldr0_.uid as uid11_10_0_, nodefieldr0_.vid as vid12_10_0_ 
from node_field_revision nodefieldr0_ where nodefieldr0_.nid=39 
 {executed in 0 msec}
2020-11-19 11:23:28.257 INFO  jdbc.resultsettable Line:610 - 
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|----|----|
|nid |changed |created |default_langcode |langcode |promote |revision_translation_affected |status |sticky |title |uid |vid |
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|----|----|
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|----|----|

2020-11-19 11:23:28.258 INFO  jdbc.sqltiming Line:373 - insert into node_field_revision (changed, created, default_langcode, langcode, promote, revision_translation_affected, 
status, sticky, title, uid, vid, nid) values (1605756208, 1605756208, 1, 'zh-hans', 0, 1, 1, 
0, '10丨MVC架构解析：控制器（Controller）篇', 1, 39, 39) 
 {executed in 0 msec}
2020-11-19 11:23:28.262 INFO  jdbc.sqltiming Line:373 - select nodefiledd0_.nid as nid1_9_0_, nodefiledd0_.changed as changed2_9_0_, nodefiledd0_.created 
as created3_9_0_, nodefiledd0_.default_langcode as default_4_9_0_, nodefiledd0_.langcode as 
langcode5_9_0_, nodefiledd0_.promote as promote6_9_0_, nodefiledd0_.revision_translation_affected 
as revision7_9_0_, nodefiledd0_.status as status8_9_0_, nodefiledd0_.sticky as sticky9_9_0_, 
nodefiledd0_.title as title10_9_0_, nodefiledd0_.type as type11_9_0_, nodefiledd0_.uid as uid12_9_0_, 
nodefiledd0_.vid as vid13_9_0_ from node_field_data nodefiledd0_ where nodefiledd0_.nid=39 
 {executed in 0 msec}
2020-11-19 11:23:28.262 INFO  jdbc.resultsettable Line:610 - 
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|-----|----|----|
|nid |changed |created |default_langcode |langcode |promote |revision_translation_affected |status |sticky |title |type |uid |vid |
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|-----|----|----|
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|-----|----|----|

2020-11-19 11:23:28.264 INFO  jdbc.sqltiming Line:373 - insert into node_field_data (changed, created, default_langcode, langcode, promote, revision_translation_affected, 
status, sticky, title, type, uid, vid, nid) values (1605756208, 1605756208, 1, 'zh-hans', 0, 
1, 1, 0, '10丨MVC架构解析：控制器（Controller）篇', 'book', 1, 39, 39) 
 {executed in 0 msec}
2020-11-19 11:23:28.266 INFO  jdbc.sqltiming Line:373 - select bookfieldm0_.entity_id as entity_i1_7_, bookfieldm0_.bundle as bundle2_7_, bookfieldm0_.delta 
as delta3_7_, bookfieldm0_.langcode as langcode4_7_, bookfieldm0_.field_media_value as field_me5_7_, 
bookfieldm0_.revision_id as revision6_7_ from node__field_media bookfieldm0_ where bookfieldm0_.entity_id=39 
 {executed in 0 msec}
2020-11-19 11:23:28.267 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------------|------------|
|entity_id |bundle |delta |langcode |field_media_value |revision_id |
|----------|-------|------|---------|------------------|------------|
|----------|-------|------|---------|------------------|------------|

2020-11-19 11:23:28.267 INFO  jdbc.sqltiming Line:373 - select bookfieldm0_.entity_id as entity_i1_7_0_, bookfieldm0_.bundle as bundle2_7_0_, bookfieldm0_.delta 
as delta3_7_0_, bookfieldm0_.langcode as langcode4_7_0_, bookfieldm0_.field_media_value as 
field_me5_7_0_, bookfieldm0_.revision_id as revision6_7_0_ from node__field_media bookfieldm0_ 
where bookfieldm0_.entity_id=39 
 {executed in 0 msec}
2020-11-19 11:23:28.267 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------------|------------|
|entity_id |bundle |delta |langcode |field_media_value |revision_id |
|----------|-------|------|---------|------------------|------------|
|----------|-------|------|---------|------------------|------------|

2020-11-19 11:23:28.269 INFO  jdbc.sqltiming Line:373 - insert into node__field_media (bundle, delta, langcode, field_media_value, revision_id, entity_id) 
values ('book', 0, 'zh-hans', 'https://qdall01.baidupcs.com/file/8178f19a2912fcd55770d808effb6dec?bkt=en-26dcfdb4e5ee1a4930298e6fc2810c3c42b19417ea8173f4eeee2f07305a4be7cd0add1b242845e9&fid=3757516097-778750-30241195742902&time=1605756206&sign=FDTAXUGERLQlBHSKfWqir-DCb740ccc5511e5e8fedcff06b081203-hjGn3QtTblRUYG6jT9cvdKxy3h4%3D&to=92&size=13623314&sta_dx=13623314&sta_cs=3859&sta_ft=m4a&sta_ct=7&sta_mt=0&fm2=MH%2CYangquan%2CAnywhere%2C%2Cshanghai%2Cct&ctime=1570414486&mtime=1605754778&resv0=-1&resv1=0&resv2=rlim&resv3=2&resv4=13623314&vuk=3757516097&iv=0&htype=&randtype=em&newver=1&newfm=1&secfm=1&flow_ver=3&pkey=en-5ecdc0debc6326d9d2a6072b8c2b5a1e20fd8fd140e30610018152d07dab6094e1d1a3f4c4ce3390&sl=76480590&expires=8h&rt=pr&r=959203110&mlogid=7502289557144965213&vbdid=2247232042&fin=10%E4%B8%A8MVC%E6%9E%B6%E6%9E%84%E8%A7%A3%E6%9E%90%EF%BC%9A%E6%8E%A7%E5%88%B6%E5%99%A8%EF%BC%88Controller%EF%BC%89%E7%AF%87.m4a&bflag=92,34-92&rtype=1&dp-logid=7502289557144965213&dp-callid=0.1.1&hps=1&tsl=80&csl=80&fsl=-1&csign=yVzLQPCt4DblfMLqd2BCjd2RnqQ%3D&so=0&ut=6&uter=0&serv=0&uc=1458616558&ti=9feb8afe5adad8c3eaa7ef7e3cb3942ab75c1c6980981ac3&hflag=30&adg=c_15d187590626c675056c89c8026cfc17&reqlabel=778750_l_1bf9445f27094ab64c9f1cb0bdf7ccfa_-1_dd2c452b8e51a0c74130d7cf32c48a2d&ibp=1&by=themis&filename=10%E4%B8%A8MVC%E6%9E%B6%E6%9E%84%E8%A7%A3%E6%9E%90%EF%BC%9A%E6%8E%A7%E5%88%B6%E5%99%A8%EF%BC%88Controller%EF%BC%89%E7%AF%87.m4a', 
39, 39) 
 {executed in 0 msec}
2020-11-19 11:23:28.272 INFO  jdbc.sqltiming Line:373 - select nodefieldm0_.entity_id as entity_i1_16_0_, nodefieldm0_.bundle as bundle2_16_0_, nodefieldm0_.delta 
as delta3_16_0_, nodefieldm0_.langcode as langcode4_16_0_, nodefieldm0_.field_media_value as 
field_me5_16_0_, nodefieldm0_.revision_id as revision6_16_0_ from node_revision__field_media 
nodefieldm0_ where nodefieldm0_.entity_id=39 
 {executed in 0 msec}
2020-11-19 11:23:28.273 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------------|------------|
|entity_id |bundle |delta |langcode |field_media_value |revision_id |
|----------|-------|------|---------|------------------|------------|
|----------|-------|------|---------|------------------|------------|

2020-11-19 11:23:28.274 INFO  jdbc.sqltiming Line:373 - insert into node_revision__field_media (bundle, delta, langcode, field_media_value, revision_id, 
entity_id) values ('book', 0, 'zh-hans', 'https://qdall01.baidupcs.com/file/8178f19a2912fcd55770d808effb6dec?bkt=en-26dcfdb4e5ee1a4930298e6fc2810c3c42b19417ea8173f4eeee2f07305a4be7cd0add1b242845e9&fid=3757516097-778750-30241195742902&time=1605756206&sign=FDTAXUGERLQlBHSKfWqir-DCb740ccc5511e5e8fedcff06b081203-hjGn3QtTblRUYG6jT9cvdKxy3h4%3D&to=92&size=13623314&sta_dx=13623314&sta_cs=3859&sta_ft=m4a&sta_ct=7&sta_mt=0&fm2=MH%2CYangquan%2CAnywhere%2C%2Cshanghai%2Cct&ctime=1570414486&mtime=1605754778&resv0=-1&resv1=0&resv2=rlim&resv3=2&resv4=13623314&vuk=3757516097&iv=0&htype=&randtype=em&newver=1&newfm=1&secfm=1&flow_ver=3&pkey=en-5ecdc0debc6326d9d2a6072b8c2b5a1e20fd8fd140e30610018152d07dab6094e1d1a3f4c4ce3390&sl=76480590&expires=8h&rt=pr&r=959203110&mlogid=7502289557144965213&vbdid=2247232042&fin=10%E4%B8%A8MVC%E6%9E%B6%E6%9E%84%E8%A7%A3%E6%9E%90%EF%BC%9A%E6%8E%A7%E5%88%B6%E5%99%A8%EF%BC%88Controller%EF%BC%89%E7%AF%87.m4a&bflag=92,34-92&rtype=1&dp-logid=7502289557144965213&dp-callid=0.1.1&hps=1&tsl=80&csl=80&fsl=-1&csign=yVzLQPCt4DblfMLqd2BCjd2RnqQ%3D&so=0&ut=6&uter=0&serv=0&uc=1458616558&ti=9feb8afe5adad8c3eaa7ef7e3cb3942ab75c1c6980981ac3&hflag=30&adg=c_15d187590626c675056c89c8026cfc17&reqlabel=778750_l_1bf9445f27094ab64c9f1cb0bdf7ccfa_-1_dd2c452b8e51a0c74130d7cf32c48a2d&ibp=1&by=themis&filename=10%E4%B8%A8MVC%E6%9E%B6%E6%9E%84%E8%A7%A3%E6%9E%90%EF%BC%9A%E6%8E%A7%E5%88%B6%E5%99%A8%EF%BC%88Controller%EF%BC%89%E7%AF%87.m4a', 
39, 39) 
 {executed in 0 msec}
2020-11-19 11:23:28.278 INFO  jdbc.sqltiming Line:373 - select bookfieldc0_.entity_id as entity_i1_4_, bookfieldc0_.bundle as bundle2_4_, bookfieldc0_.field_comment_value 
as field_co3_4_, bookfieldc0_.delta as delta4_4_, bookfieldc0_.field_comment_format as field_co5_4_, 
bookfieldc0_.langcode as langcode6_4_, bookfieldc0_.revision_id as revision7_4_ from node__field_comment 
bookfieldc0_ where bookfieldc0_.entity_id=39 
 {executed in 0 msec}
2020-11-19 11:23:28.278 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|--------------------|------|---------------------|---------|------------|
|entity_id |bundle |field_comment_value |delta |field_comment_format |langcode |revision_id |
|----------|-------|--------------------|------|---------------------|---------|------------|
|----------|-------|--------------------|------|---------------------|---------|------------|

2020-11-19 11:23:28.279 INFO  jdbc.sqltiming Line:373 - select bookfieldc0_.entity_id as entity_i1_4_0_, bookfieldc0_.bundle as bundle2_4_0_, bookfieldc0_.field_comment_value 
as field_co3_4_0_, bookfieldc0_.delta as delta4_4_0_, bookfieldc0_.field_comment_format as 
field_co5_4_0_, bookfieldc0_.langcode as langcode6_4_0_, bookfieldc0_.revision_id as revision7_4_0_ 
from node__field_comment bookfieldc0_ where bookfieldc0_.entity_id=39 
 {executed in 0 msec}
2020-11-19 11:23:28.279 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|--------------------|------|---------------------|---------|------------|
|entity_id |bundle |field_comment_value |delta |field_comment_format |langcode |revision_id |
|----------|-------|--------------------|------|---------------------|---------|------------|
|----------|-------|--------------------|------|---------------------|---------|------------|

2020-11-19 11:23:28.281 INFO  jdbc.sqltiming Line:373 - insert into node__field_comment (bundle, field_comment_value, delta, field_comment_format, 
langcode, revision_id, entity_id) values ('book', '<li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/10/59/1d/c7de1a9b.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>Kada</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2019-10-03 </div> </div> <!----> 
</div> <div> <div class="_3M6kV3zb_0"> Django使用配置文件，Flask使用装饰器。 </div> <div class="_2r3UB1GX_0"> 
<span>展开</span><i class="iconfont"></i> </div> <!----> <div class="_1w8H0ktn_0 _2A421P4G_0"> 
<div class="_2jsFl-X0_0"> <i class="iconfont"></i> <span></span> </div> <div class="_2P4B1Hdm_0"> 
<i class="iconfont"></i> <span class=""></span> </div> <!----> </div> </div> </div></li>', 
0, 'full_html', 'zh-hans', 39, 39) 
 {executed in 1 msec}
2020-11-19 11:23:28.284 INFO  jdbc.sqltiming Line:373 - select nodefieldc0_.entity_id as entity_i1_13_0_, nodefieldc0_.bundle as bundle2_13_0_, nodefieldc0_.field_comment_value 
as field_co3_13_0_, nodefieldc0_.delta as delta4_13_0_, nodefieldc0_.field_comment_format as 
field_co5_13_0_, nodefieldc0_.langcode as langcode6_13_0_, nodefieldc0_.revision_id as revision7_13_0_ 
from node_revision__field_comment nodefieldc0_ where nodefieldc0_.entity_id=39 
 {executed in 0 msec}
2020-11-19 11:23:28.284 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|--------------------|------|---------------------|---------|------------|
|entity_id |bundle |field_comment_value |delta |field_comment_format |langcode |revision_id |
|----------|-------|--------------------|------|---------------------|---------|------------|
|----------|-------|--------------------|------|---------------------|---------|------------|

2020-11-19 11:23:28.286 INFO  jdbc.sqltiming Line:373 - insert into node_revision__field_comment (bundle, field_comment_value, delta, field_comment_format, 
langcode, revision_id, entity_id) values ('book', '<li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/10/59/1d/c7de1a9b.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>Kada</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2019-10-03 </div> </div> <!----> 
</div> <div> <div class="_3M6kV3zb_0"> Django使用配置文件，Flask使用装饰器。 </div> <div class="_2r3UB1GX_0"> 
<span>展开</span><i class="iconfont"></i> </div> <!----> <div class="_1w8H0ktn_0 _2A421P4G_0"> 
<div class="_2jsFl-X0_0"> <i class="iconfont"></i> <span></span> </div> <div class="_2P4B1Hdm_0"> 
<i class="iconfont"></i> <span class=""></span> </div> <!----> </div> </div> </div></li>', 
0, 'full_html', 'zh-hans', 39, 39) 
 {executed in 0 msec}
2020-11-19 11:23:28.289 INFO  jdbc.sqltiming Line:373 - select bookfieldt0_.entity_id as entity_i1_8_, bookfieldt0_.bundle as bundle2_8_, bookfieldt0_.delta 
as delta3_8_, bookfieldt0_.langcode as langcode4_8_, bookfieldt0_.revision_id as revision5_8_, 
bookfieldt0_.field_thumb_value as field_th6_8_ from node__field_thumb bookfieldt0_ where bookfieldt0_.entity_id=39 
 {executed in 0 msec}
2020-11-19 11:23:28.289 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------|------------------|
|entity_id |bundle |delta |langcode |revision_id |field_thumb_value |
|----------|-------|------|---------|------------|------------------|
|----------|-------|------|---------|------------|------------------|

2020-11-19 11:23:28.290 INFO  jdbc.sqltiming Line:373 - select bookfieldt0_.entity_id as entity_i1_8_0_, bookfieldt0_.bundle as bundle2_8_0_, bookfieldt0_.delta 
as delta3_8_0_, bookfieldt0_.langcode as langcode4_8_0_, bookfieldt0_.revision_id as revision5_8_0_, 
bookfieldt0_.field_thumb_value as field_th6_8_0_ from node__field_thumb bookfieldt0_ where 
bookfieldt0_.entity_id=39 
 {executed in 0 msec}
2020-11-19 11:23:28.290 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------|------------------|
|entity_id |bundle |delta |langcode |revision_id |field_thumb_value |
|----------|-------|------|---------|------------|------------------|
|----------|-------|------|---------|------------|------------------|

2020-11-19 11:23:28.291 INFO  jdbc.sqltiming Line:373 - insert into node__field_thumb (bundle, delta, langcode, revision_id, field_thumb_value, entity_id) 
values ('book', 0, 'zh-hans', 39, 'https://static001.geekbang.org/resource/image/ec/e4/eca17dc7649c338b6f53015e6a38fde4.jpg', 
39) 
 {executed in 0 msec}
2020-11-19 11:23:28.294 INFO  jdbc.sqltiming Line:373 - select nodefieldt0_.entity_id as entity_i1_17_0_, nodefieldt0_.bundle as bundle2_17_0_, nodefieldt0_.delta 
as delta3_17_0_, nodefieldt0_.langcode as langcode4_17_0_, nodefieldt0_.revision_id as revision5_17_0_, 
nodefieldt0_.field_thumb_value as field_th6_17_0_ from node_revision__field_thumb nodefieldt0_ 
where nodefieldt0_.entity_id=39 
 {executed in 0 msec}
2020-11-19 11:23:28.294 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------|------------------|
|entity_id |bundle |delta |langcode |revision_id |field_thumb_value |
|----------|-------|------|---------|------------|------------------|
|----------|-------|------|---------|------------|------------------|

2020-11-19 11:23:28.295 INFO  jdbc.sqltiming Line:373 - insert into node_revision__field_thumb (bundle, delta, langcode, revision_id, field_thumb_value, 
entity_id) values ('book', 0, 'zh-hans', 39, 'https://static001.geekbang.org/resource/image/ec/e4/eca17dc7649c338b6f53015e6a38fde4.jpg', 
39) 
 {executed in 0 msec}
2020-11-19 11:23:28.298 INFO  jdbc.sqltiming Line:373 - select bookfieldf0_.entity_id as entity_i1_5_0_, bookfieldf0_.bundle as bundle2_5_0_, bookfieldf0_.delta 
as delta3_5_0_, bookfieldf0_.field_fenlei_target_id as field_fe4_5_0_, bookfieldf0_.langcode 
as langcode5_5_0_, bookfieldf0_.revision_id as revision6_5_0_ from node__field_fenlei bookfieldf0_ 
where bookfieldf0_.entity_id=39 
 {executed in 0 msec}
2020-11-19 11:23:28.298 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------------|---------|------------|
|entity_id |bundle |delta |field_fenlei_target_id |langcode |revision_id |
|----------|-------|------|-----------------------|---------|------------|
|----------|-------|------|-----------------------|---------|------------|

2020-11-19 11:23:28.300 INFO  jdbc.sqltiming Line:373 - insert into node__field_fenlei (bundle, delta, field_fenlei_target_id, langcode, revision_id, 
entity_id) values ('book', 0, 1, 'zh-hans', 39, 39) 
 {executed in 1 msec}
2020-11-19 11:23:28.302 INFO  jdbc.sqltiming Line:373 - select nodefieldf0_.entity_id as entity_i1_14_0_, nodefieldf0_.bundle as bundle2_14_0_, nodefieldf0_.delta 
as delta3_14_0_, nodefieldf0_.field_fenlei_target_id as field_fe4_14_0_, nodefieldf0_.langcode 
as langcode5_14_0_, nodefieldf0_.revision_id as revision6_14_0_ from node_revision__field_fenlei 
nodefieldf0_ where nodefieldf0_.entity_id=39 
 {executed in 0 msec}
2020-11-19 11:23:28.302 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------------|---------|------------|
|entity_id |bundle |delta |field_fenlei_target_id |langcode |revision_id |
|----------|-------|------|-----------------------|---------|------------|
|----------|-------|------|-----------------------|---------|------------|

2020-11-19 11:23:28.304 INFO  jdbc.sqltiming Line:373 - insert into node_revision__field_fenlei (bundle, delta, field_fenlei_target_id, langcode, revision_id, 
entity_id) values ('book', 0, 1, 'zh-hans', 39, 39) 
 {executed in 0 msec}
2020-11-19 11:24:11.717 INFO  jdbc.sqltiming Line:373 - select bookfieldf0_.entity_id as entity_i1_6_, bookfieldf0_.bundle as bundle2_6_, bookfieldf0_.delta 
as delta3_6_, bookfieldf0_.field_fsid_value as field_fs4_6_, bookfieldf0_.langcode as langcode5_6_, 
bookfieldf0_.revision_id as revision6_6_ from node__field_fsid bookfieldf0_ where bookfieldf0_.field_fsid_value='162849410279807' 
 {executed in 0 msec}
2020-11-19 11:24:11.717 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------|---------|------------|
|entity_id |bundle |delta |field_fsid_value |langcode |revision_id |
|----------|-------|------|-----------------|---------|------------|
|----------|-------|------|-----------------|---------|------------|

2020-11-19 11:24:11.719 INFO  jdbc.sqltiming Line:373 - insert into node_revision (langcode, nid, revision_default, revision_timestamp, revision_uid) 
values ('zh-hans', 0, 1, 1605756251, 1) 
 {executed in 1 msec}
2020-11-19 11:24:11.719 INFO  jdbc.sqltiming Line:373 - getGeneratedKeys on query: insert into node_revision (langcode, nid, revision_default, revision_timestamp, 
revision_uid) values ('zh-hans', 0, 1, 1605756251, 1) 
 {executed in 0 msec}
2020-11-19 11:24:11.720 INFO  jdbc.resultsettable Line:610 - 
|--------------|
|generated_key |
|--------------|
|40            |
|--------------|

2020-11-19 11:24:11.728 INFO  jdbc.sqltiming Line:373 - insert into node (langcode, type, uuid, vid) values ('zh-hans', 'book', '4ef546b7-427f-4d98-afdc-96ba2c00c0a1', 
40) 
 {executed in 0 msec}
2020-11-19 11:24:11.729 INFO  jdbc.sqltiming Line:373 - getGeneratedKeys on query: insert into node (langcode, type, uuid, vid) values ('zh-hans', 
'book', '4ef546b7-427f-4d98-afdc-96ba2c00c0a1', 40) 
 {executed in 0 msec}
2020-11-19 11:24:11.729 INFO  jdbc.resultsettable Line:610 - 
|--------------|
|generated_key |
|--------------|
|40            |
|--------------|

2020-11-19 11:24:11.736 INFO  jdbc.sqltiming Line:373 - update node_revision set langcode='zh-hans', nid=40, revision_default=1, revision_timestamp=1605756251, 
revision_uid=1 where vid=40 
 {executed in 1 msec}
2020-11-19 11:24:11.740 INFO  jdbc.sqltiming Line:373 - select bookfieldf0_.entity_id as entity_i1_6_0_, bookfieldf0_.bundle as bundle2_6_0_, bookfieldf0_.delta 
as delta3_6_0_, bookfieldf0_.field_fsid_value as field_fs4_6_0_, bookfieldf0_.langcode as langcode5_6_0_, 
bookfieldf0_.revision_id as revision6_6_0_ from node__field_fsid bookfieldf0_ where bookfieldf0_.entity_id=40 
 {executed in 0 msec}
2020-11-19 11:24:11.741 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------|---------|------------|
|entity_id |bundle |delta |field_fsid_value |langcode |revision_id |
|----------|-------|------|-----------------|---------|------------|
|----------|-------|------|-----------------|---------|------------|

2020-11-19 11:24:11.743 INFO  jdbc.sqltiming Line:373 - insert into node__field_fsid (bundle, delta, field_fsid_value, langcode, revision_id, entity_id) 
values ('book', 0, '162849410279807', 'zh-hans', 40, 40) 
 {executed in 1 msec}
2020-11-19 11:24:11.748 INFO  jdbc.sqltiming Line:373 - select nodefieldf0_.entity_id as entity_i1_15_0_, nodefieldf0_.bundle as bundle2_15_0_, nodefieldf0_.delta 
as delta3_15_0_, nodefieldf0_.field_fsid_value as field_fs4_15_0_, nodefieldf0_.langcode as 
langcode5_15_0_, nodefieldf0_.revision_id as revision6_15_0_ from node_revision__field_fsid 
nodefieldf0_ where nodefieldf0_.entity_id=40 
 {executed in 0 msec}
2020-11-19 11:24:11.749 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------|---------|------------|
|entity_id |bundle |delta |field_fsid_value |langcode |revision_id |
|----------|-------|------|-----------------|---------|------------|
|----------|-------|------|-----------------|---------|------------|

2020-11-19 11:24:11.750 INFO  jdbc.sqltiming Line:373 - insert into node_revision__field_fsid (bundle, delta, field_fsid_value, langcode, revision_id, 
entity_id) values ('book', 0, '162849410279807', 'zh-hans', 40, 40) 
 {executed in 0 msec}
2020-11-19 11:24:11.754 INFO  jdbc.sqltiming Line:373 - select bookentity0_.nid as nid1_1_, bookentity0_.bid as bid2_1_, bookentity0_.depth as depth3_1_, 
bookentity0_.has_children as has_chil4_1_, bookentity0_.p1 as p5_1_, bookentity0_.p2 as p6_1_, 
bookentity0_.p3 as p7_1_, bookentity0_.p4 as p8_1_, bookentity0_.p5 as p9_1_, bookentity0_.pid 
as pid10_1_, bookentity0_.weight as weight11_1_ from book bookentity0_ where bookentity0_.nid=40 
 {executed in 0 msec}
2020-11-19 11:24:11.755 INFO  jdbc.resultsettable Line:610 - 
|----|----|------|-------------|---|---|---|---|---|----|-------|
|nid |bid |depth |has_children |p1 |p2 |p3 |p4 |p5 |pid |weight |
|----|----|------|-------------|---|---|---|---|---|----|-------|
|----|----|------|-------------|---|---|---|---|---|----|-------|

2020-11-19 11:24:11.756 INFO  jdbc.sqltiming Line:373 - select bookentity0_.nid as nid1_1_0_, bookentity0_.bid as bid2_1_0_, bookentity0_.depth as 
depth3_1_0_, bookentity0_.has_children as has_chil4_1_0_, bookentity0_.p1 as p5_1_0_, bookentity0_.p2 
as p6_1_0_, bookentity0_.p3 as p7_1_0_, bookentity0_.p4 as p8_1_0_, bookentity0_.p5 as p9_1_0_, 
bookentity0_.pid as pid10_1_0_, bookentity0_.weight as weight11_1_0_ from book bookentity0_ 
where bookentity0_.nid=40 
 {executed in 1 msec}
2020-11-19 11:24:11.756 INFO  jdbc.resultsettable Line:610 - 
|----|----|------|-------------|---|---|---|---|---|----|-------|
|nid |bid |depth |has_children |p1 |p2 |p3 |p4 |p5 |pid |weight |
|----|----|------|-------------|---|---|---|---|---|----|-------|
|----|----|------|-------------|---|---|---|---|---|----|-------|

2020-11-19 11:24:11.758 INFO  jdbc.sqltiming Line:373 - insert into book (bid, depth, has_children, p1, p2, p3, p4, p5, pid, weight, nid) values (1, 
3, 0, 1, 35, 40, 0, 0, 35, 0, 40) 
 {executed in 0 msec}
2020-11-19 11:24:11.762 INFO  jdbc.sqltiming Line:373 - select nodebodyen0_.entity_id as entity_i1_3_, nodebodyen0_.body_value as body_val2_3_, nodebodyen0_.body_summary 
as body_sum3_3_, nodebodyen0_.bundle as bundle4_3_, nodebodyen0_.delta as delta5_3_, nodebodyen0_.body_format 
as body_for6_3_, nodebodyen0_.langcode as langcode7_3_, nodebodyen0_.revision_id as revision8_3_ 
from node__body nodebodyen0_ where nodebodyen0_.entity_id=40 
 {executed in 1 msec}
2020-11-19 11:24:11.762 INFO  jdbc.resultsettable Line:610 - 
|----------|-----------|-------------|-------|------|------------|---------|------------|
|entity_id |body_value |body_summary |bundle |delta |body_format |langcode |revision_id |
|----------|-----------|-------------|-------|------|------------|---------|------------|
|----------|-----------|-------------|-------|------|------------|---------|------------|

2020-11-19 11:24:11.763 INFO  jdbc.sqltiming Line:373 - select nodebodyre0_.entity_id as entity_i1_12_0_, nodebodyre0_.body_value as body_val2_12_0_, 
nodebodyre0_.body_summary as body_sum3_12_0_, nodebodyre0_.bundle as bundle4_12_0_, nodebodyre0_.delta 
as delta5_12_0_, nodebodyre0_.body_format as body_for6_12_0_, nodebodyre0_.langcode as langcode7_12_0_, 
nodebodyre0_.revision_id as revision8_12_0_ from node_revision__body nodebodyre0_ where nodebodyre0_.entity_id=40 
 {executed in 0 msec}
2020-11-19 11:24:11.763 INFO  jdbc.resultsettable Line:610 - 
|----------|-----------|-------------|-------|------|------------|---------|------------|
|entity_id |body_value |body_summary |bundle |delta |body_format |langcode |revision_id |
|----------|-----------|-------------|-------|------|------------|---------|------------|
|----------|-----------|-------------|-------|------|------------|---------|------------|

2020-11-19 11:24:11.766 INFO  jdbc.sqltiming Line:373 - insert into node_revision__body (body_value, body_summary, bundle, delta, body_format, langcode, 
revision_id, entity_id) values ('<p>你好，我是四火。</p> <p>今天我们继续学习 MVC 架构，主要内容就是 MVC 架构的第二部分——视图（View）。</p> 
<h2>概念</h2> <p>首先，我想问一问，什么是视图？有程序员说是界面，有程序员说是 UI（User Interface），这些都对，但是都不完整。</p> <p>我认为<strong>MVC 
架构中的视图是指将数据有目的、按规则呈现出来的组件</strong>。因此，如果返回和呈现给用户的不是图形界面，而是 XML 或 JSON 等特定格式组织呈现的数据，它依然是视图，而用 
MVC 来解决的问题，也绝不只是具备图形界面的网站或者 App 上的问题。</p> <h2>页面聚合技术</h2> <p>虽然视图的定义实际更宽泛，但是我们平时讲到的视图，多半都是指“页面”。这里，就不得不提花样繁多的页面聚合技术了。</p> 
<p>回想一下，之前我们在讲 Model 层的时候，是怎样解耦的？我们的办法就是继续分层，或是模块化；而对于 View 层来说，我们的办法则是拆分页面，分别处理，最终聚合起来。具体来说，这里提到的页面聚合，是指将展示的信息通过某种技术手段聚合起来，并形成最终的视图呈现给用户。页面聚合有这样两种典型类型。</p> 
<ul> <li><strong>结构聚合：指的是将一个页面中不同的区域聚合起来，这体现的是分治的思想。</strong>例如一个页面，具备页眉、导航栏、目录、正文、页脚，这些区域可能是分别生成的，但是最后需要把它们聚合在一起，再呈现给用户。</li> 
<li><strong>数据 - 模板聚合：指的是聚合静态的模板和动态的数据，这体现的是解耦的思想。</strong>例如有的新闻网站首页整个页面的 HTML 是静态的，用户每天看到的样子都是差不多的，但每时每刻的新闻列表却是动态的，是不断更新的。</li> 
</ul><!-- [[[read_end]]] --> <p>请注意这两者并不矛盾，很多网站的页面都兼具这两种聚合方式。</p> <h3>服务端和客户端聚合方式的比较</h3> <p>客户端聚合技术的出现远比服务端晚，因为和服务端聚合不同，这种聚合方式对于客户端的运算能力，客户端的 
JavaScript 技术，以及浏览器的规范性都有着明确的要求。但是，客户端聚合技术却是如今更为流行的技术，其原因包括：</p> <p><strong>架构上，客户端聚合达成了客户端 
- 服务端分离和模板 - 数据聚合这二者的统一，这往往可以简化架构，保持灵活性。</strong></p> <p>比如说，对于模板和静态资源（如脚本、样式、图片等），可以利用 CDN（Content 
Delivery Network，内容分发网络）技术，从网络中距离最近的节点获取，以达到快速展示页面的目的；而动态的数据则可以从中心节点异步获取，速度会慢一点，但保证了数据的一致性。数据抵达浏览器以后，再完成聚合，静态和动态的资源可以根据实际情况分别做服务端和客户端的优化，比如浏览器适配、缓存等等。如下图：</p> 
<p><img src="https://static001.geekbang.org/resource/image/c9/7b/c9877f90430f892d1b5e3d8fbb94a47b.png" 
alt=""></p> <p>你看上面这个例子，浏览器在上海，模板和静态资源从本地的上海节点获取，而数据异步从北京的中心节点获取。这种方式下，静态资源的访问是比较快的，而为了保证一致性，数据是从北京的中心节点获取的，这个速度会慢一些。在模板抵达浏览器以后，先展示一个等待的效果，并等待数据返回。在数据也抵达浏览器以后，则立即通过 
JavaScript 进行客户端的聚合，展示聚合后的页面。</p> <p>如果我们使用服务端聚合，就必须在服务端同时准备好模板和数据，聚合形成最终的页面，再返回给浏览器。整个过程涉及到的处理环节更多，架构更为复杂，而且同样为了保证一致性，数据必须放在北京节点，那么模板也就被迫从北京节点取得，聚合完成之后再返回，这样用户的等待时间会更长，用户也会看到浏览器的进度条迟迟完不成。见下图：</p> 
<p><img src="https://static001.geekbang.org/resource/image/6c/62/6ccf2cb3605d0dbfa32e790157ca5a62.png" 
alt=""></p> <p><strong>资源上，客户端聚合将服务器端聚合造成的计算压力，分散到了客户端。</strong>可是实际上，这不只是计算的资源，还有网络传输的资源等等。比如说，使用服务端聚合，考虑到数据是会变化的，因而聚合之后的报文无法被缓存；而客户端聚合则不然，通常只有数据是无法被缓存，模板是可以被缓存起来的。</p> 
<p>但是，<strong>客户端聚合也有它天然的弊端。其中最重要的一条，就是客户端聚合要求客户端具备一定的规范性和运算能力</strong>。这在现在多数的浏览器中都不是问题，但是如果是手机浏览器，这样的问题还是很常见的，由于操作系统和浏览器版本的不同，考虑聚合逻辑的兼容性，客户端聚合通常对终端适配有更高的要求，需要更多的测试。</p> 
<p>在实际项目中，我们往往能见到客户端聚合和服务端聚合混合使用。具体来说，Web 页面通常主要使用客户端聚合，而某些低端设备页面，甚至 Wap 页面（常用于较为低端的手机上）则主要使用服务端聚合。下面我们就来学习一些具体的聚合技术。</p> 
<h3>常见的聚合技术</h3> <p><strong>1. iFrame 聚合</strong></p> <p>iFrame 是一种最为原始和简单的聚合方式，也是 CSI（Client 
Side Includes，客户端包含）的一种典型方式，现在很多门户网站的广告投放，依然在使用。具体实现，只需要在 HTML 页面中嵌入这样的标签即可：</p> <pre style="position: 
relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
&lt;iframe src="https://..."&gt;&lt;/iframe&gt; </div></td> </tr> </tbody> </table></code> 
<div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 </div></pre> <p>这种方式本质上是给当前页面嵌入了一个子页面，对于浏览器来说，它们是完全独立的两个页面。其优势在于，不需要考虑跨域问题，而且如果这个子页面出了问题，往往也不会影响到父页面的展示。</p> 
<p>不过，这种方式的缺点也非常明显，也是因为它们是两个独立的页面。比如子页面和父页面之间的交互和数据传递往往比较困难，再比如预留 iFrame 的位置也是静态的，不方便根据 iFrame 
实际的内容和浏览器的窗口情况自适应并动态调整占用位置和大小，再比如对搜索引擎的优化不友好等等。</p> <p><strong>2. 模板引擎</strong></p> <p>模板引擎是最完备、最强大的解决方案，无论客户端还是服务端，都有许许多多优秀的模板引擎可供选择。比如 
<a href="http://mustache.github.io/">Mustache</a>，它不但可以用作客户端，也可以用作服务端的聚合，这是因为它既有 JavaScript 
的库，也有后端语言，比如 Java 的库，再比如非常常用的 <a href="https://underscorejs.org/">Underscore.js</a>，性能非常出色。</p> 
<p>某些前端框架，为了达到功能或性能上的最优，也会自带一套自己的模板引擎，比如 AngularJS，我在下一章讲前端的时候会介绍。</p> <p><strong>在使用模板引擎的时候，需要注意保持 
View 层代码职责的清晰和纯粹</strong>，这在全栈项目开发的过程中尤为重要。负责视图，就只做展示的工作，不要放本该属于 Model 层的业务逻辑，也不要干请求转发和流程控制等 
Controller 的活。回想上一讲我们学的 JSP 模板，就像 JSP Model 1 一样，功能多未必代表着模板引擎的优秀，有时候反而是留下了一个代码耦合的后门。</p> <p><strong>3. 
Portlet</strong></p> <p>Portlet 在早几年的门户应用（Portal）中很常见，它本身是一种 Web 的组件，每个 Portlet 会生成一个标记段，多个 
Portlets 生成的标记段可以最终聚集并嵌入到同一个页面上，从而形成一个完整的最终页面。</p> <p>技术上，Portlet 可以做到远程聚合（服务端），也可以做到本地聚合（客户端），数据来源的业务节点可以部署得非常灵活，因此在企业级应用中也非常常见。</p> 
<p>Java 的 Portlet 规范经历了<a href="https://en.wikipedia.org/wiki/Java_Portlet_Specification">三个版本</a>，详细定义了 
Portlet 的生命周期、原理机制、容器等等方方面面。从最终的呈现来看，网站应用 Portlet 给用户的体验就像是在操作本地计算机一样，多个窗口层叠或平铺在桌面，每个窗口都是独立的，自包含的，并且可以任意调整位置，改变布局和大小。</p> 
<p>如今 Portlet 因为其实现的复杂性、自身的限制，和较陡峭的学习曲线，往往显得比较笨重，因此应用面并不是很广泛。</p> <p><img src="https://static001.geekbang.org/resource/image/03/01/036c657fa6fff4d4f3ba4ce91364bc01.jpg" 
alt="">（上图来自 JBoss 的官方文档：<a href="https://docs.jboss.org/gatein/portal/3.4.0.Final/reference-guide/en-US/html/chap-Reference_Guide-Portlet_development.html">Portlet 
development</a>，上图代表了一个页面，上面的每一个窗口都分别由一个 Portlet 实现）</p> <p><strong>4. SSI</strong></p> <p>还记得前面讲过的 
CSI，客户端包含吗？与之相对的，自然也有服务端包含——SSI（ Server Side Includes）。它同样是一种非常简单的服务端聚合方式，大多数流行的 Web 服务器都支持 
SSI 的语法。</p> <p>比如下面这样的一条“注释”，从 HTML 的角度来讲，它确实是一条普通的注释，但是对于支持 SSL 的服务器来说，它就是一条特殊的服务器端包含的指令：</p> 
<pre style="position: relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> &lt;!--#include file="extend.html" --&gt; </div></td> </tr> </tbody> 
</table></code> <div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 </div></pre> 
<h2>模板引擎的工作机制</h2> <p>前面已经提及了一些常见的页面聚合技术，但是模板引擎始终是最常用的，也自然是其中的重点。下面我们就结合一个小例子来一窥模板引擎的工作机制。</p> 
<p>还记得 <a href="https://time.geekbang.org/column/article/140196">[第 07 讲]</a> 介绍的 JSP 工作原理吗？类似的，模板引擎把渲染的工作分为编译和执行两个环节，并且只需要编译一次，每当数据改变的时候，模板并没有变，因而反复执行就可以了。</p> 
<p>只不过这次，<strong>我们在编译后生成的目标代码，不再是 class 文件了，而是一个 JavaScript 的函数</strong>。因此我们可以尽量把工作放到预编译阶段去，生成函数以后，原始的模板就不再使用了，后面每次需要执行和渲染的时候直接调用这个函数传入参数就可以了。</p> 
<p>比如这样的 <a href="https://handlebarsjs.com/">Handlebars</a> 模板，使用一个循环，要在一个表格中列出图书馆所有图书的名字和描述：</p> 
<pre style="position: relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> &lt;table&gt; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> {{#each books}} </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> &lt;tr&gt; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div 
class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td> <td class="hljs-ln-code"> <div 
class="hljs-ln-line"> &lt;td&gt; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="5"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
{{this.name}} </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="6"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
&lt;/td&gt; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" 
data-line-number="7"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> &lt;td&gt; 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="8"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> {{this.desc}} </div></td> </tr> <tr> <td 
class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="9"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> &lt;/td&gt; </div></td> </tr> <tr> <td 
class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="10"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> &lt;/tr&gt; </div></td> </tr> <tr> <td 
class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="11"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> {{/each}} </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="12"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> &lt;/table&gt; </div></td> </tr> </tbody> </table></code> <div class="richcontent-pre-copy"> 
<span class="iconfont"></span>复制代码 </div></pre> <p>接着，模板被加载到变量 templateContent 里面，传递给 Handlebars 
来进行编译，编译的结果是一个可执行的函数 func。编译过程完成后，就可以进行执行的过程了，func 接受一个图书列表的入参，输出模板执行后的结果。这两个过程如下：</p> <pre 
style="position: relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> var func = Handlebars.compile(templateContent); </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> var result = func({ </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> books : [ </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> { name : "A", desc : "..." }, </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> { name : "B", desc : "..." } </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> ] </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="7"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
}); </div></td> </tr> </tbody> </table></code> <div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 
</div></pre> <p>如果我们想对这个 func 一窥究竟，我们将看到类似这样的代码：</p> <pre style="position: relative;"><code> 
<table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
var buffer = "", stack1, functionType="function", escapeExpression=this.escapeExpression, self=this; 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> function program1(depth0,data) { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> var buffer = "", stack1; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> buffer += "\n &lt;tr&gt;\n &lt;td&gt;" </div></td> </tr> <tr> <td 
class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> + escapeExpression(((stack1 = depth0.name),typeof 
stack1 === functionType ? stack1.apply(depth0) : stack1)) </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="7"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> + "&lt;/td&gt;\n &lt;td&gt;" </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="8"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> + escapeExpression(((stack1 = depth0.desc),typeof stack1 === functionType 
? stack1.apply(depth0) : stack1)) </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div 
class="hljs-ln-line hljs-ln-n" data-line-number="9"></div></td> <td class="hljs-ln-code"> <div 
class="hljs-ln-line"> + "&lt;/td&gt;\n &lt;/tr&gt;\n "; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="10"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> return buffer; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="11"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> } </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="12"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="13"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> buffer += "\n&lt;table&gt;\n "; </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="14"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> stack1 = helpers.each.call(depth0, depth0.books, 
{hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data}); </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="15"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> if(stack1 || stack1 === 0) { buffer += 
stack1; } </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" 
data-line-number="16"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> buffer 
+= "\n&lt;/table&gt;\n"; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="17"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
return buffer; </div></td> </tr> </tbody> </table></code> <div class="richcontent-pre-copy"> 
<span class="iconfont"></span>复制代码 </div></pre> <p>我们不需要对上面代码的每一处都了解清楚，但是可以看到一个大概的执行步骤，模板被编译后生成了一个字符串拼接的方法，即模板本身的字符串，去拼接实际传出的数据：</p> 
<ul> <li>由于模板中定义了一个循环，因此方法 program1 在循环中被调用若干次；</li> <li>对于 td 标签中间的数据，会判断是直接拼接，还是作为方法递归调用，拼接其返回值。</li> 
</ul> <h2>总结思考</h2> <p>今天我们学习了 MVC 架构中的视图层（View），对于五花八门的页面聚合技术，我们需要抓住其本质，和前面学习 Model 层的解耦一样，应对软件复杂性的问题，绝招别无二致，就是“拆分”。</p> 
<p><strong>无论是分层、分模块，还是分离静态模板和动态数据，当我们定义了不同的拆分方法，我们就把一个复杂的东西分解成组成单一、职责清晰的几个部分，分别处理以后，再聚合起来，不同的聚合方法正是由这些不同的拆分方法所决定的</strong>。</p> 
<p>往后我们还会学习别的解耦技术，到那时请你回想我们本章到目前为止学过的这些有关“拆分”的方法，再放到一起比较，我相信你会有更多感悟。</p> <p>在今天的选修课堂和扩展阅读之前，我先来提两个问题：</p> 
<ul> <li>你在工作中是否使用过什么模板引擎，能说说当初在做技术选型时为什么选择了它吗？</li> <li>有朋友说，服务端聚合已经过时了，现在的网站都应该在客户端完成聚合的，你同意这个观点吗？</li> 
</ul> <p>好，对于上面的问题，以及今天的内容，你有什么想法？欢迎在留言区和我讨论。</p> <h2>选修课堂：动手使用 HTML 5 的模板标签</h2> <p>文中我介绍了一些模板技术，还有一点你要知道，HTML 
5 引入了模板标签，自此之后，我们终于可以不依赖于任何第三方库，在原生 HTML 中直接使用模板了。下面就让我们来动手实践一下吧。</p> <p>打开 Chrome 的开发者工具，选择 
Console 标签：</p> <p><img src="https://static001.geekbang.org/resource/image/98/0c/986ead9ff6440fd6e36075f9b5dc310c.png" 
alt=""></p> <p>然后，让我们先来检验一下你的浏览器是否支持 HTML 5 模板，即 template 标签。请执行：</p> <pre style="position: 
relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
''content'' in document.createElement(''template'') </div></td> </tr> </tbody> </table></code> 
<div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 </div></pre> <p>你应该能看到“true”，这就意味着你的浏览器是支持的。这是因为，content 
是 HTML 5 的 template 标签特有的属性，用于放置原模板本身的内容。</p> <p>接着，请在硬盘上创建一个 HTML 文件 template.html，写入如下内容：</p> 
<pre style="position: relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> &lt;!doctype html&gt; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="3"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
&lt;html&gt; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" 
data-line-number="4"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> &lt;div&gt;1&lt;/div&gt; 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> &lt;div&gt;3&lt;/div&gt; </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> &lt;template id="t"&gt; </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="7"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> &lt;div&gt;2&lt;/div&gt; </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="8"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> &lt;/template&gt; </div></td> </tr> <tr> 
<td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="9"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> &lt;/html&gt; </div></td> </tr> </tbody> 
</table></code> <div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 </div></pre> 
<p>使用 Chrome 打开它，你应该只能看到分别显示为“1”和“3”的两行，而 template 标签内的内容，由于是模板的关系，被浏览器自动忽略了。</p> <p>我们再打开 
Chrome 的开发者工具，选择 Console 标签，这次敲入这样两行命令：</p> <pre style="position: relative;"><code> <table 
class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" 
data-line-number="1"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> rendered 
= document.importNode(document.getElementById("t").content, true); </div></td> </tr> <tr> <td 
class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> document.getElementsByTagName("div")[0].append(rendered); 
</div></td> </tr> </tbody> </table></code> <div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 
</div></pre> <p>这表示找到 id 为“t”的模板节点，根据其中的内容来创建一个节点，接着把这个节点安插到第一个 div 的标签后面。</p> <p>这时，你应该看能看到三行，分别为“1”、“2”和“3”。</p> 
<h2>扩展阅读</h2> <ul> <li>【基础】今天的内容我们正式和几个 HTML 的标签见面了，如果你对 HTML 也不太熟悉的话，请一定学习一下，作为前端基础的三驾马车之一（另两驾是 
CSS 和 JavaScript），我们以后会经常和它们见面的。首推 MDN 的教程，有一篇比较短的 <a href="https://developer.mozilla.org/zh-CN/docs/Learn/Getting_started_with_the_web/HTML_basics">HTML 
基础</a>，也有更为<a href="https://developer.mozilla.org/zh-CN/docs/Learn/HTML">详尽的展开</a>。</li> <li>【基础】文中也涉及到了一点点 
JavaScript 的基础知识，如果你对于 JavaScript 还不了解，那么我推荐你阅读 MDN 的 <a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript">JavaScript 
教程</a>中的快速入门部分。</li> <li>对于文中模板引擎以外的三种聚合方式，我也给你找了可选的阅读材料，你可以跟随自己的兴趣选择：对于 iFrame 聚合，<a href="https://krasimirtsonev.com/blog/article/iframe-or-not-that-is-the-question">iframe, 
or not, that is the question</a> 这篇文章介绍了和使用 script 标签来写入页面内容比起来，使用 iFrame 的优劣；对于 Portlet 聚合，请参阅 
<a href="https://en.wikipedia.org/wiki/Java_Portlet_Specification">Java Portlet Specification</a> 
词条，你将看到 Portlet 规范从 1.0 到 3.0 的改进；对于 SSI，请参阅维基百科的<a href="https://zh.wikipedia.org/wiki/%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%AB%AF%E5%86%85%E5%B5%8C">服务器端内嵌</a>词条，上面介绍了一些它常用的指令。</li> 
</ul> <p><img src="https://static001.geekbang.org/resource/image/11/8b/1181246bbd51ce348d5729696d1dc28b.jpg" 
alt="unpreview"></p>', '', 'book', 0, 'full_html', 'zh-hans', 40, 40) 
 {executed in 1 msec}
2020-11-19 11:24:11.770 INFO  jdbc.sqltiming Line:373 - select nodebodyen0_.entity_id as entity_i1_3_0_, nodebodyen0_.body_value as body_val2_3_0_, 
nodebodyen0_.body_summary as body_sum3_3_0_, nodebodyen0_.bundle as bundle4_3_0_, nodebodyen0_.delta 
as delta5_3_0_, nodebodyen0_.body_format as body_for6_3_0_, nodebodyen0_.langcode as langcode7_3_0_, 
nodebodyen0_.revision_id as revision8_3_0_ from node__body nodebodyen0_ where nodebodyen0_.entity_id=40 
 {executed in 0 msec}
2020-11-19 11:24:11.771 INFO  jdbc.resultsettable Line:610 - 
|----------|-----------|-------------|-------|------|------------|---------|------------|
|entity_id |body_value |body_summary |bundle |delta |body_format |langcode |revision_id |
|----------|-----------|-------------|-------|------|------------|---------|------------|
|----------|-----------|-------------|-------|------|------------|---------|------------|

2020-11-19 11:24:11.774 INFO  jdbc.sqltiming Line:373 - insert into node__body (body_value, body_summary, bundle, delta, body_format, langcode, revision_id, 
entity_id) values ('<p>你好，我是四火。</p> <p>今天我们继续学习 MVC 架构，主要内容就是 MVC 架构的第二部分——视图（View）。</p> <h2>概念</h2> 
<p>首先，我想问一问，什么是视图？有程序员说是界面，有程序员说是 UI（User Interface），这些都对，但是都不完整。</p> <p>我认为<strong>MVC 架构中的视图是指将数据有目的、按规则呈现出来的组件</strong>。因此，如果返回和呈现给用户的不是图形界面，而是 
XML 或 JSON 等特定格式组织呈现的数据，它依然是视图，而用 MVC 来解决的问题，也绝不只是具备图形界面的网站或者 App 上的问题。</p> <h2>页面聚合技术</h2> 
<p>虽然视图的定义实际更宽泛，但是我们平时讲到的视图，多半都是指“页面”。这里，就不得不提花样繁多的页面聚合技术了。</p> <p>回想一下，之前我们在讲 Model 层的时候，是怎样解耦的？我们的办法就是继续分层，或是模块化；而对于 
View 层来说，我们的办法则是拆分页面，分别处理，最终聚合起来。具体来说，这里提到的页面聚合，是指将展示的信息通过某种技术手段聚合起来，并形成最终的视图呈现给用户。页面聚合有这样两种典型类型。</p> 
<ul> <li><strong>结构聚合：指的是将一个页面中不同的区域聚合起来，这体现的是分治的思想。</strong>例如一个页面，具备页眉、导航栏、目录、正文、页脚，这些区域可能是分别生成的，但是最后需要把它们聚合在一起，再呈现给用户。</li> 
<li><strong>数据 - 模板聚合：指的是聚合静态的模板和动态的数据，这体现的是解耦的思想。</strong>例如有的新闻网站首页整个页面的 HTML 是静态的，用户每天看到的样子都是差不多的，但每时每刻的新闻列表却是动态的，是不断更新的。</li> 
</ul><!-- [[[read_end]]] --> <p>请注意这两者并不矛盾，很多网站的页面都兼具这两种聚合方式。</p> <h3>服务端和客户端聚合方式的比较</h3> <p>客户端聚合技术的出现远比服务端晚，因为和服务端聚合不同，这种聚合方式对于客户端的运算能力，客户端的 
JavaScript 技术，以及浏览器的规范性都有着明确的要求。但是，客户端聚合技术却是如今更为流行的技术，其原因包括：</p> <p><strong>架构上，客户端聚合达成了客户端 
- 服务端分离和模板 - 数据聚合这二者的统一，这往往可以简化架构，保持灵活性。</strong></p> <p>比如说，对于模板和静态资源（如脚本、样式、图片等），可以利用 CDN（Content 
Delivery Network，内容分发网络）技术，从网络中距离最近的节点获取，以达到快速展示页面的目的；而动态的数据则可以从中心节点异步获取，速度会慢一点，但保证了数据的一致性。数据抵达浏览器以后，再完成聚合，静态和动态的资源可以根据实际情况分别做服务端和客户端的优化，比如浏览器适配、缓存等等。如下图：</p> 
<p><img src="https://static001.geekbang.org/resource/image/c9/7b/c9877f90430f892d1b5e3d8fbb94a47b.png" 
alt=""></p> <p>你看上面这个例子，浏览器在上海，模板和静态资源从本地的上海节点获取，而数据异步从北京的中心节点获取。这种方式下，静态资源的访问是比较快的，而为了保证一致性，数据是从北京的中心节点获取的，这个速度会慢一些。在模板抵达浏览器以后，先展示一个等待的效果，并等待数据返回。在数据也抵达浏览器以后，则立即通过 
JavaScript 进行客户端的聚合，展示聚合后的页面。</p> <p>如果我们使用服务端聚合，就必须在服务端同时准备好模板和数据，聚合形成最终的页面，再返回给浏览器。整个过程涉及到的处理环节更多，架构更为复杂，而且同样为了保证一致性，数据必须放在北京节点，那么模板也就被迫从北京节点取得，聚合完成之后再返回，这样用户的等待时间会更长，用户也会看到浏览器的进度条迟迟完不成。见下图：</p> 
<p><img src="https://static001.geekbang.org/resource/image/6c/62/6ccf2cb3605d0dbfa32e790157ca5a62.png" 
alt=""></p> <p><strong>资源上，客户端聚合将服务器端聚合造成的计算压力，分散到了客户端。</strong>可是实际上，这不只是计算的资源，还有网络传输的资源等等。比如说，使用服务端聚合，考虑到数据是会变化的，因而聚合之后的报文无法被缓存；而客户端聚合则不然，通常只有数据是无法被缓存，模板是可以被缓存起来的。</p> 
<p>但是，<strong>客户端聚合也有它天然的弊端。其中最重要的一条，就是客户端聚合要求客户端具备一定的规范性和运算能力</strong>。这在现在多数的浏览器中都不是问题，但是如果是手机浏览器，这样的问题还是很常见的，由于操作系统和浏览器版本的不同，考虑聚合逻辑的兼容性，客户端聚合通常对终端适配有更高的要求，需要更多的测试。</p> 
<p>在实际项目中，我们往往能见到客户端聚合和服务端聚合混合使用。具体来说，Web 页面通常主要使用客户端聚合，而某些低端设备页面，甚至 Wap 页面（常用于较为低端的手机上）则主要使用服务端聚合。下面我们就来学习一些具体的聚合技术。</p> 
<h3>常见的聚合技术</h3> <p><strong>1. iFrame 聚合</strong></p> <p>iFrame 是一种最为原始和简单的聚合方式，也是 CSI（Client 
Side Includes，客户端包含）的一种典型方式，现在很多门户网站的广告投放，依然在使用。具体实现，只需要在 HTML 页面中嵌入这样的标签即可：</p> <pre style="position: 
relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
&lt;iframe src="https://..."&gt;&lt;/iframe&gt; </div></td> </tr> </tbody> </table></code> 
<div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 </div></pre> <p>这种方式本质上是给当前页面嵌入了一个子页面，对于浏览器来说，它们是完全独立的两个页面。其优势在于，不需要考虑跨域问题，而且如果这个子页面出了问题，往往也不会影响到父页面的展示。</p> 
<p>不过，这种方式的缺点也非常明显，也是因为它们是两个独立的页面。比如子页面和父页面之间的交互和数据传递往往比较困难，再比如预留 iFrame 的位置也是静态的，不方便根据 iFrame 
实际的内容和浏览器的窗口情况自适应并动态调整占用位置和大小，再比如对搜索引擎的优化不友好等等。</p> <p><strong>2. 模板引擎</strong></p> <p>模板引擎是最完备、最强大的解决方案，无论客户端还是服务端，都有许许多多优秀的模板引擎可供选择。比如 
<a href="http://mustache.github.io/">Mustache</a>，它不但可以用作客户端，也可以用作服务端的聚合，这是因为它既有 JavaScript 
的库，也有后端语言，比如 Java 的库，再比如非常常用的 <a href="https://underscorejs.org/">Underscore.js</a>，性能非常出色。</p> 
<p>某些前端框架，为了达到功能或性能上的最优，也会自带一套自己的模板引擎，比如 AngularJS，我在下一章讲前端的时候会介绍。</p> <p><strong>在使用模板引擎的时候，需要注意保持 
View 层代码职责的清晰和纯粹</strong>，这在全栈项目开发的过程中尤为重要。负责视图，就只做展示的工作，不要放本该属于 Model 层的业务逻辑，也不要干请求转发和流程控制等 
Controller 的活。回想上一讲我们学的 JSP 模板，就像 JSP Model 1 一样，功能多未必代表着模板引擎的优秀，有时候反而是留下了一个代码耦合的后门。</p> <p><strong>3. 
Portlet</strong></p> <p>Portlet 在早几年的门户应用（Portal）中很常见，它本身是一种 Web 的组件，每个 Portlet 会生成一个标记段，多个 
Portlets 生成的标记段可以最终聚集并嵌入到同一个页面上，从而形成一个完整的最终页面。</p> <p>技术上，Portlet 可以做到远程聚合（服务端），也可以做到本地聚合（客户端），数据来源的业务节点可以部署得非常灵活，因此在企业级应用中也非常常见。</p> 
<p>Java 的 Portlet 规范经历了<a href="https://en.wikipedia.org/wiki/Java_Portlet_Specification">三个版本</a>，详细定义了 
Portlet 的生命周期、原理机制、容器等等方方面面。从最终的呈现来看，网站应用 Portlet 给用户的体验就像是在操作本地计算机一样，多个窗口层叠或平铺在桌面，每个窗口都是独立的，自包含的，并且可以任意调整位置，改变布局和大小。</p> 
<p>如今 Portlet 因为其实现的复杂性、自身的限制，和较陡峭的学习曲线，往往显得比较笨重，因此应用面并不是很广泛。</p> <p><img src="https://static001.geekbang.org/resource/image/03/01/036c657fa6fff4d4f3ba4ce91364bc01.jpg" 
alt="">（上图来自 JBoss 的官方文档：<a href="https://docs.jboss.org/gatein/portal/3.4.0.Final/reference-guide/en-US/html/chap-Reference_Guide-Portlet_development.html">Portlet 
development</a>，上图代表了一个页面，上面的每一个窗口都分别由一个 Portlet 实现）</p> <p><strong>4. SSI</strong></p> <p>还记得前面讲过的 
CSI，客户端包含吗？与之相对的，自然也有服务端包含——SSI（ Server Side Includes）。它同样是一种非常简单的服务端聚合方式，大多数流行的 Web 服务器都支持 
SSI 的语法。</p> <p>比如下面这样的一条“注释”，从 HTML 的角度来讲，它确实是一条普通的注释，但是对于支持 SSL 的服务器来说，它就是一条特殊的服务器端包含的指令：</p> 
<pre style="position: relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> &lt;!--#include file="extend.html" --&gt; </div></td> </tr> </tbody> 
</table></code> <div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 </div></pre> 
<h2>模板引擎的工作机制</h2> <p>前面已经提及了一些常见的页面聚合技术，但是模板引擎始终是最常用的，也自然是其中的重点。下面我们就结合一个小例子来一窥模板引擎的工作机制。</p> 
<p>还记得 <a href="https://time.geekbang.org/column/article/140196">[第 07 讲]</a> 介绍的 JSP 工作原理吗？类似的，模板引擎把渲染的工作分为编译和执行两个环节，并且只需要编译一次，每当数据改变的时候，模板并没有变，因而反复执行就可以了。</p> 
<p>只不过这次，<strong>我们在编译后生成的目标代码，不再是 class 文件了，而是一个 JavaScript 的函数</strong>。因此我们可以尽量把工作放到预编译阶段去，生成函数以后，原始的模板就不再使用了，后面每次需要执行和渲染的时候直接调用这个函数传入参数就可以了。</p> 
<p>比如这样的 <a href="https://handlebarsjs.com/">Handlebars</a> 模板，使用一个循环，要在一个表格中列出图书馆所有图书的名字和描述：</p> 
<pre style="position: relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> &lt;table&gt; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> {{#each books}} </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> &lt;tr&gt; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div 
class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td> <td class="hljs-ln-code"> <div 
class="hljs-ln-line"> &lt;td&gt; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="5"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
{{this.name}} </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="6"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
&lt;/td&gt; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" 
data-line-number="7"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> &lt;td&gt; 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="8"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> {{this.desc}} </div></td> </tr> <tr> <td 
class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="9"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> &lt;/td&gt; </div></td> </tr> <tr> <td 
class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="10"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> &lt;/tr&gt; </div></td> </tr> <tr> <td 
class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="11"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> {{/each}} </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="12"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> &lt;/table&gt; </div></td> </tr> </tbody> </table></code> <div class="richcontent-pre-copy"> 
<span class="iconfont"></span>复制代码 </div></pre> <p>接着，模板被加载到变量 templateContent 里面，传递给 Handlebars 
来进行编译，编译的结果是一个可执行的函数 func。编译过程完成后，就可以进行执行的过程了，func 接受一个图书列表的入参，输出模板执行后的结果。这两个过程如下：</p> <pre 
style="position: relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> var func = Handlebars.compile(templateContent); </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> var result = func({ </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> books : [ </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> { name : "A", desc : "..." }, </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> { name : "B", desc : "..." } </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> ] </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="7"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
}); </div></td> </tr> </tbody> </table></code> <div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 
</div></pre> <p>如果我们想对这个 func 一窥究竟，我们将看到类似这样的代码：</p> <pre style="position: relative;"><code> 
<table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
var buffer = "", stack1, functionType="function", escapeExpression=this.escapeExpression, self=this; 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> function program1(depth0,data) { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> var buffer = "", stack1; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> buffer += "\n &lt;tr&gt;\n &lt;td&gt;" </div></td> </tr> <tr> <td 
class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> + escapeExpression(((stack1 = depth0.name),typeof 
stack1 === functionType ? stack1.apply(depth0) : stack1)) </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="7"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> + "&lt;/td&gt;\n &lt;td&gt;" </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="8"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> + escapeExpression(((stack1 = depth0.desc),typeof stack1 === functionType 
? stack1.apply(depth0) : stack1)) </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div 
class="hljs-ln-line hljs-ln-n" data-line-number="9"></div></td> <td class="hljs-ln-code"> <div 
class="hljs-ln-line"> + "&lt;/td&gt;\n &lt;/tr&gt;\n "; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="10"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> return buffer; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="11"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> } </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="12"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="13"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> buffer += "\n&lt;table&gt;\n "; </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="14"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> stack1 = helpers.each.call(depth0, depth0.books, 
{hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data}); </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="15"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> if(stack1 || stack1 === 0) { buffer += 
stack1; } </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" 
data-line-number="16"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> buffer 
+= "\n&lt;/table&gt;\n"; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="17"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
return buffer; </div></td> </tr> </tbody> </table></code> <div class="richcontent-pre-copy"> 
<span class="iconfont"></span>复制代码 </div></pre> <p>我们不需要对上面代码的每一处都了解清楚，但是可以看到一个大概的执行步骤，模板被编译后生成了一个字符串拼接的方法，即模板本身的字符串，去拼接实际传出的数据：</p> 
<ul> <li>由于模板中定义了一个循环，因此方法 program1 在循环中被调用若干次；</li> <li>对于 td 标签中间的数据，会判断是直接拼接，还是作为方法递归调用，拼接其返回值。</li> 
</ul> <h2>总结思考</h2> <p>今天我们学习了 MVC 架构中的视图层（View），对于五花八门的页面聚合技术，我们需要抓住其本质，和前面学习 Model 层的解耦一样，应对软件复杂性的问题，绝招别无二致，就是“拆分”。</p> 
<p><strong>无论是分层、分模块，还是分离静态模板和动态数据，当我们定义了不同的拆分方法，我们就把一个复杂的东西分解成组成单一、职责清晰的几个部分，分别处理以后，再聚合起来，不同的聚合方法正是由这些不同的拆分方法所决定的</strong>。</p> 
<p>往后我们还会学习别的解耦技术，到那时请你回想我们本章到目前为止学过的这些有关“拆分”的方法，再放到一起比较，我相信你会有更多感悟。</p> <p>在今天的选修课堂和扩展阅读之前，我先来提两个问题：</p> 
<ul> <li>你在工作中是否使用过什么模板引擎，能说说当初在做技术选型时为什么选择了它吗？</li> <li>有朋友说，服务端聚合已经过时了，现在的网站都应该在客户端完成聚合的，你同意这个观点吗？</li> 
</ul> <p>好，对于上面的问题，以及今天的内容，你有什么想法？欢迎在留言区和我讨论。</p> <h2>选修课堂：动手使用 HTML 5 的模板标签</h2> <p>文中我介绍了一些模板技术，还有一点你要知道，HTML 
5 引入了模板标签，自此之后，我们终于可以不依赖于任何第三方库，在原生 HTML 中直接使用模板了。下面就让我们来动手实践一下吧。</p> <p>打开 Chrome 的开发者工具，选择 
Console 标签：</p> <p><img src="https://static001.geekbang.org/resource/image/98/0c/986ead9ff6440fd6e36075f9b5dc310c.png" 
alt=""></p> <p>然后，让我们先来检验一下你的浏览器是否支持 HTML 5 模板，即 template 标签。请执行：</p> <pre style="position: 
relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
''content'' in document.createElement(''template'') </div></td> </tr> </tbody> </table></code> 
<div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 </div></pre> <p>你应该能看到“true”，这就意味着你的浏览器是支持的。这是因为，content 
是 HTML 5 的 template 标签特有的属性，用于放置原模板本身的内容。</p> <p>接着，请在硬盘上创建一个 HTML 文件 template.html，写入如下内容：</p> 
<pre style="position: relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> &lt;!doctype html&gt; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="3"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
&lt;html&gt; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" 
data-line-number="4"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> &lt;div&gt;1&lt;/div&gt; 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> &lt;div&gt;3&lt;/div&gt; </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> &lt;template id="t"&gt; </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="7"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> &lt;div&gt;2&lt;/div&gt; </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="8"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> &lt;/template&gt; </div></td> </tr> <tr> 
<td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="9"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> &lt;/html&gt; </div></td> </tr> </tbody> 
</table></code> <div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 </div></pre> 
<p>使用 Chrome 打开它，你应该只能看到分别显示为“1”和“3”的两行，而 template 标签内的内容，由于是模板的关系，被浏览器自动忽略了。</p> <p>我们再打开 
Chrome 的开发者工具，选择 Console 标签，这次敲入这样两行命令：</p> <pre style="position: relative;"><code> <table 
class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" 
data-line-number="1"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> rendered 
= document.importNode(document.getElementById("t").content, true); </div></td> </tr> <tr> <td 
class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> document.getElementsByTagName("div")[0].append(rendered); 
</div></td> </tr> </tbody> </table></code> <div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 
</div></pre> <p>这表示找到 id 为“t”的模板节点，根据其中的内容来创建一个节点，接着把这个节点安插到第一个 div 的标签后面。</p> <p>这时，你应该看能看到三行，分别为“1”、“2”和“3”。</p> 
<h2>扩展阅读</h2> <ul> <li>【基础】今天的内容我们正式和几个 HTML 的标签见面了，如果你对 HTML 也不太熟悉的话，请一定学习一下，作为前端基础的三驾马车之一（另两驾是 
CSS 和 JavaScript），我们以后会经常和它们见面的。首推 MDN 的教程，有一篇比较短的 <a href="https://developer.mozilla.org/zh-CN/docs/Learn/Getting_started_with_the_web/HTML_basics">HTML 
基础</a>，也有更为<a href="https://developer.mozilla.org/zh-CN/docs/Learn/HTML">详尽的展开</a>。</li> <li>【基础】文中也涉及到了一点点 
JavaScript 的基础知识，如果你对于 JavaScript 还不了解，那么我推荐你阅读 MDN 的 <a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript">JavaScript 
教程</a>中的快速入门部分。</li> <li>对于文中模板引擎以外的三种聚合方式，我也给你找了可选的阅读材料，你可以跟随自己的兴趣选择：对于 iFrame 聚合，<a href="https://krasimirtsonev.com/blog/article/iframe-or-not-that-is-the-question">iframe, 
or not, that is the question</a> 这篇文章介绍了和使用 script 标签来写入页面内容比起来，使用 iFrame 的优劣；对于 Portlet 聚合，请参阅 
<a href="https://en.wikipedia.org/wiki/Java_Portlet_Specification">Java Portlet Specification</a> 
词条，你将看到 Portlet 规范从 1.0 到 3.0 的改进；对于 SSI，请参阅维基百科的<a href="https://zh.wikipedia.org/wiki/%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%AB%AF%E5%86%85%E5%B5%8C">服务器端内嵌</a>词条，上面介绍了一些它常用的指令。</li> 
</ul> <p><img src="https://static001.geekbang.org/resource/image/11/8b/1181246bbd51ce348d5729696d1dc28b.jpg" 
alt="unpreview"></p>', '', 'book', 0, 'full_html', 'zh-hans', 40, 40) 
 {executed in 0 msec}
2020-11-19 11:24:11.779 INFO  jdbc.sqltiming Line:373 - select nodefiledd0_.nid as nid1_9_, nodefiledd0_.changed as changed2_9_, nodefiledd0_.created 
as created3_9_, nodefiledd0_.default_langcode as default_4_9_, nodefiledd0_.langcode as langcode5_9_, 
nodefiledd0_.promote as promote6_9_, nodefiledd0_.revision_translation_affected as revision7_9_, 
nodefiledd0_.status as status8_9_, nodefiledd0_.sticky as sticky9_9_, nodefiledd0_.title as 
title10_9_, nodefiledd0_.type as type11_9_, nodefiledd0_.uid as uid12_9_, nodefiledd0_.vid 
as vid13_9_ from node_field_data nodefiledd0_ where nodefiledd0_.nid=40 
 {executed in 1 msec}
2020-11-19 11:24:11.779 INFO  jdbc.resultsettable Line:610 - 
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|-----|----|----|
|nid |changed |created |default_langcode |langcode |promote |revision_translation_affected |status |sticky |title |type |uid |vid |
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|-----|----|----|
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|-----|----|----|

2020-11-19 11:24:11.780 INFO  jdbc.sqltiming Line:373 - select nodefieldr0_.nid as nid1_10_0_, nodefieldr0_.changed as changed2_10_0_, nodefieldr0_.created 
as created3_10_0_, nodefieldr0_.default_langcode as default_4_10_0_, nodefieldr0_.langcode 
as langcode5_10_0_, nodefieldr0_.promote as promote6_10_0_, nodefieldr0_.revision_translation_affected 
as revision7_10_0_, nodefieldr0_.status as status8_10_0_, nodefieldr0_.sticky as sticky9_10_0_, 
nodefieldr0_.title as title10_10_0_, nodefieldr0_.uid as uid11_10_0_, nodefieldr0_.vid as vid12_10_0_ 
from node_field_revision nodefieldr0_ where nodefieldr0_.nid=40 
 {executed in 0 msec}
2020-11-19 11:24:11.781 INFO  jdbc.resultsettable Line:610 - 
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|----|----|
|nid |changed |created |default_langcode |langcode |promote |revision_translation_affected |status |sticky |title |uid |vid |
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|----|----|
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|----|----|

2020-11-19 11:24:11.782 INFO  jdbc.sqltiming Line:373 - insert into node_field_revision (changed, created, default_langcode, langcode, promote, revision_translation_affected, 
status, sticky, title, uid, vid, nid) values (1605756251, 1605756251, 1, 'zh-hans', 0, 1, 1, 
0, '09丨MVC架构解析：视图（View）篇', 1, 40, 40) 
 {executed in 0 msec}
2020-11-19 11:24:11.786 INFO  jdbc.sqltiming Line:373 - select nodefiledd0_.nid as nid1_9_0_, nodefiledd0_.changed as changed2_9_0_, nodefiledd0_.created 
as created3_9_0_, nodefiledd0_.default_langcode as default_4_9_0_, nodefiledd0_.langcode as 
langcode5_9_0_, nodefiledd0_.promote as promote6_9_0_, nodefiledd0_.revision_translation_affected 
as revision7_9_0_, nodefiledd0_.status as status8_9_0_, nodefiledd0_.sticky as sticky9_9_0_, 
nodefiledd0_.title as title10_9_0_, nodefiledd0_.type as type11_9_0_, nodefiledd0_.uid as uid12_9_0_, 
nodefiledd0_.vid as vid13_9_0_ from node_field_data nodefiledd0_ where nodefiledd0_.nid=40 
 {executed in 0 msec}
2020-11-19 11:24:11.787 INFO  jdbc.resultsettable Line:610 - 
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|-----|----|----|
|nid |changed |created |default_langcode |langcode |promote |revision_translation_affected |status |sticky |title |type |uid |vid |
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|-----|----|----|
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|-----|----|----|

2020-11-19 11:24:11.788 INFO  jdbc.sqltiming Line:373 - insert into node_field_data (changed, created, default_langcode, langcode, promote, revision_translation_affected, 
status, sticky, title, type, uid, vid, nid) values (1605756251, 1605756251, 1, 'zh-hans', 0, 
1, 1, 0, '09丨MVC架构解析：视图（View）篇', 'book', 1, 40, 40) 
 {executed in 0 msec}
2020-11-19 11:24:11.793 INFO  jdbc.sqltiming Line:373 - select bookfieldm0_.entity_id as entity_i1_7_, bookfieldm0_.bundle as bundle2_7_, bookfieldm0_.delta 
as delta3_7_, bookfieldm0_.langcode as langcode4_7_, bookfieldm0_.field_media_value as field_me5_7_, 
bookfieldm0_.revision_id as revision6_7_ from node__field_media bookfieldm0_ where bookfieldm0_.entity_id=40 
 {executed in 1 msec}
2020-11-19 11:24:11.793 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------------|------------|
|entity_id |bundle |delta |langcode |field_media_value |revision_id |
|----------|-------|------|---------|------------------|------------|
|----------|-------|------|---------|------------------|------------|

2020-11-19 11:24:11.794 INFO  jdbc.sqltiming Line:373 - select bookfieldm0_.entity_id as entity_i1_7_0_, bookfieldm0_.bundle as bundle2_7_0_, bookfieldm0_.delta 
as delta3_7_0_, bookfieldm0_.langcode as langcode4_7_0_, bookfieldm0_.field_media_value as 
field_me5_7_0_, bookfieldm0_.revision_id as revision6_7_0_ from node__field_media bookfieldm0_ 
where bookfieldm0_.entity_id=40 
 {executed in 0 msec}
2020-11-19 11:24:11.795 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------------|------------|
|entity_id |bundle |delta |langcode |field_media_value |revision_id |
|----------|-------|------|---------|------------------|------------|
|----------|-------|------|---------|------------------|------------|

2020-11-19 11:24:11.797 INFO  jdbc.sqltiming Line:373 - insert into node__field_media (bundle, delta, langcode, field_media_value, revision_id, entity_id) 
values ('book', 0, 'zh-hans', 'https://qdall01.baidupcs.com/file/1a908e97323865c4e94eaefc7ed1843d?bkt=en-29a7ad5d1913bc6fb351681c3b7b464bb59f315f112ddac180d1b16d5da01ca34c817dd2bf583f34&fid=3757516097-778750-19058220112545&time=1605756250&sign=FDTAXUGERLQlBHSKfWqir-DCb740ccc5511e5e8fedcff06b081203-UB6AtzXqDwNzpDzjWT%2B0GhogWWI%3D&to=92&size=13802480&sta_dx=13802480&sta_cs=3900&sta_ft=m4a&sta_ct=7&sta_mt=0&fm2=MH%2CYangquan%2CAnywhere%2C%2Cshanghai%2Cct&ctime=1569821519&mtime=1605754778&resv0=-1&resv1=0&resv2=rlim&resv3=2&resv4=13802480&vuk=3757516097&iv=0&htype=&randtype=em&newver=1&newfm=1&secfm=1&flow_ver=3&pkey=en-6f2aed558184ea83d45f96f9affcff36476035bfe1599b40ada665dd211a8f9452ee3d6cc1f42c10&sl=76480590&expires=8h&rt=pr&r=970990392&mlogid=7502301249864734030&vbdid=2247232042&fin=09%E4%B8%A8MVC%E6%9E%B6%E6%9E%84%E8%A7%A3%E6%9E%90%EF%BC%9A%E8%A7%86%E5%9B%BE%EF%BC%88View%EF%BC%89%E7%AF%87.m4a&bflag=92,34-92&rtype=1&dp-logid=7502301249864734030&dp-callid=0.1.1&hps=1&tsl=80&csl=80&fsl=-1&csign=yVzLQPCt4DblfMLqd2BCjd2RnqQ%3D&so=0&ut=6&uter=0&serv=0&uc=1458616558&ti=51702cd94a4865eee9d68424e6f93f926e92985681b930d0&hflag=30&adg=c_15d187590626c675056c89c8026cfc17&reqlabel=778750_l_1bf9445f27094ab64c9f1cb0bdf7ccfa_-1_dd2c452b8e51a0c74130d7cf32c48a2d&ibp=1&by=themis&filename=09%E4%B8%A8MVC%E6%9E%B6%E6%9E%84%E8%A7%A3%E6%9E%90%EF%BC%9A%E8%A7%86%E5%9B%BE%EF%BC%88View%EF%BC%89%E7%AF%87.m4a', 
40, 40) 
 {executed in 1 msec}
2020-11-19 11:24:11.801 INFO  jdbc.sqltiming Line:373 - select nodefieldm0_.entity_id as entity_i1_16_0_, nodefieldm0_.bundle as bundle2_16_0_, nodefieldm0_.delta 
as delta3_16_0_, nodefieldm0_.langcode as langcode4_16_0_, nodefieldm0_.field_media_value as 
field_me5_16_0_, nodefieldm0_.revision_id as revision6_16_0_ from node_revision__field_media 
nodefieldm0_ where nodefieldm0_.entity_id=40 
 {executed in 0 msec}
2020-11-19 11:24:11.801 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------------|------------|
|entity_id |bundle |delta |langcode |field_media_value |revision_id |
|----------|-------|------|---------|------------------|------------|
|----------|-------|------|---------|------------------|------------|

2020-11-19 11:24:11.804 INFO  jdbc.sqltiming Line:373 - insert into node_revision__field_media (bundle, delta, langcode, field_media_value, revision_id, 
entity_id) values ('book', 0, 'zh-hans', 'https://qdall01.baidupcs.com/file/1a908e97323865c4e94eaefc7ed1843d?bkt=en-29a7ad5d1913bc6fb351681c3b7b464bb59f315f112ddac180d1b16d5da01ca34c817dd2bf583f34&fid=3757516097-778750-19058220112545&time=1605756250&sign=FDTAXUGERLQlBHSKfWqir-DCb740ccc5511e5e8fedcff06b081203-UB6AtzXqDwNzpDzjWT%2B0GhogWWI%3D&to=92&size=13802480&sta_dx=13802480&sta_cs=3900&sta_ft=m4a&sta_ct=7&sta_mt=0&fm2=MH%2CYangquan%2CAnywhere%2C%2Cshanghai%2Cct&ctime=1569821519&mtime=1605754778&resv0=-1&resv1=0&resv2=rlim&resv3=2&resv4=13802480&vuk=3757516097&iv=0&htype=&randtype=em&newver=1&newfm=1&secfm=1&flow_ver=3&pkey=en-6f2aed558184ea83d45f96f9affcff36476035bfe1599b40ada665dd211a8f9452ee3d6cc1f42c10&sl=76480590&expires=8h&rt=pr&r=970990392&mlogid=7502301249864734030&vbdid=2247232042&fin=09%E4%B8%A8MVC%E6%9E%B6%E6%9E%84%E8%A7%A3%E6%9E%90%EF%BC%9A%E8%A7%86%E5%9B%BE%EF%BC%88View%EF%BC%89%E7%AF%87.m4a&bflag=92,34-92&rtype=1&dp-logid=7502301249864734030&dp-callid=0.1.1&hps=1&tsl=80&csl=80&fsl=-1&csign=yVzLQPCt4DblfMLqd2BCjd2RnqQ%3D&so=0&ut=6&uter=0&serv=0&uc=1458616558&ti=51702cd94a4865eee9d68424e6f93f926e92985681b930d0&hflag=30&adg=c_15d187590626c675056c89c8026cfc17&reqlabel=778750_l_1bf9445f27094ab64c9f1cb0bdf7ccfa_-1_dd2c452b8e51a0c74130d7cf32c48a2d&ibp=1&by=themis&filename=09%E4%B8%A8MVC%E6%9E%B6%E6%9E%84%E8%A7%A3%E6%9E%90%EF%BC%9A%E8%A7%86%E5%9B%BE%EF%BC%88View%EF%BC%89%E7%AF%87.m4a', 
40, 40) 
 {executed in 1 msec}
2020-11-19 11:24:11.808 INFO  jdbc.sqltiming Line:373 - select bookfieldc0_.entity_id as entity_i1_4_, bookfieldc0_.bundle as bundle2_4_, bookfieldc0_.field_comment_value 
as field_co3_4_, bookfieldc0_.delta as delta4_4_, bookfieldc0_.field_comment_format as field_co5_4_, 
bookfieldc0_.langcode as langcode6_4_, bookfieldc0_.revision_id as revision7_4_ from node__field_comment 
bookfieldc0_ where bookfieldc0_.entity_id=40 
 {executed in 1 msec}
2020-11-19 11:24:11.808 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|--------------------|------|---------------------|---------|------------|
|entity_id |bundle |field_comment_value |delta |field_comment_format |langcode |revision_id |
|----------|-------|--------------------|------|---------------------|---------|------------|
|----------|-------|--------------------|------|---------------------|---------|------------|

2020-11-19 11:24:11.808 INFO  jdbc.sqltiming Line:373 - select bookfieldc0_.entity_id as entity_i1_4_0_, bookfieldc0_.bundle as bundle2_4_0_, bookfieldc0_.field_comment_value 
as field_co3_4_0_, bookfieldc0_.delta as delta4_4_0_, bookfieldc0_.field_comment_format as 
field_co5_4_0_, bookfieldc0_.langcode as langcode6_4_0_, bookfieldc0_.revision_id as revision7_4_0_ 
from node__field_comment bookfieldc0_ where bookfieldc0_.entity_id=40 
 {executed in 0 msec}
2020-11-19 11:24:11.809 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|--------------------|------|---------------------|---------|------------|
|entity_id |bundle |field_comment_value |delta |field_comment_format |langcode |revision_id |
|----------|-------|--------------------|------|---------------------|---------|------------|
|----------|-------|--------------------|------|---------------------|---------|------------|

2020-11-19 11:24:11.810 INFO  jdbc.sqltiming Line:373 - insert into node__field_comment (bundle, field_comment_value, delta, field_comment_format, 
langcode, revision_id, entity_id) values ('book', '<li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/0f/4e/90/a8d19e7b.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>张理查rootv</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2019-09-30 </div> </div> <!----> 
</div> <div> <div class="_3M6kV3zb_0 _3D2NkqD6_0"> 喜欢这种带扩展阅读的方式，节省了很多查找优质信息的时间。 </div> <!----> 
<!----> <div class="_1w8H0ktn_0 _2A421P4G_0"> <div class="_2jsFl-X0_0"> <i class="iconfont"></i> 
<span></span> </div> <div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class=""></span> 
</div> <!----> </div> </div> </div></li> <li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/10/59/1d/c7de1a9b.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>Kada</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2019-09-30 </div> </div> <!----> 
</div> <div> <div class="_3M6kV3zb_0"> 从反爬虫的角度， <br> <br>放在客户端聚合，势必要分多个请求。不想暴露的数据api就得引入加解密。 
<br> <br>对于服务端聚合的页面，比较好控制呈现的数据维度和量，爬虫也只能老实的解析dom树。 </div> <div class="_2r3UB1GX_0"> <span>展开</span><i 
class="iconfont"></i> </div> <!----> <div class="_1w8H0ktn_0 _2A421P4G_0"> <div class="_2jsFl-X0_0"> 
<i class="iconfont"></i> <span></span> </div> <div class="_2P4B1Hdm_0"> <i class="iconfont"></i> 
<span class=""></span> </div> <!----> </div> </div> </div></li>', 0, 'full_html', 'zh-hans', 
40, 40) 
 {executed in 0 msec}
2020-11-19 11:24:11.814 INFO  jdbc.sqltiming Line:373 - select nodefieldc0_.entity_id as entity_i1_13_0_, nodefieldc0_.bundle as bundle2_13_0_, nodefieldc0_.field_comment_value 
as field_co3_13_0_, nodefieldc0_.delta as delta4_13_0_, nodefieldc0_.field_comment_format as 
field_co5_13_0_, nodefieldc0_.langcode as langcode6_13_0_, nodefieldc0_.revision_id as revision7_13_0_ 
from node_revision__field_comment nodefieldc0_ where nodefieldc0_.entity_id=40 
 {executed in 0 msec}
2020-11-19 11:24:11.815 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|--------------------|------|---------------------|---------|------------|
|entity_id |bundle |field_comment_value |delta |field_comment_format |langcode |revision_id |
|----------|-------|--------------------|------|---------------------|---------|------------|
|----------|-------|--------------------|------|---------------------|---------|------------|

2020-11-19 11:24:11.816 INFO  jdbc.sqltiming Line:373 - insert into node_revision__field_comment (bundle, field_comment_value, delta, field_comment_format, 
langcode, revision_id, entity_id) values ('book', '<li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/0f/4e/90/a8d19e7b.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>张理查rootv</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2019-09-30 </div> </div> <!----> 
</div> <div> <div class="_3M6kV3zb_0 _3D2NkqD6_0"> 喜欢这种带扩展阅读的方式，节省了很多查找优质信息的时间。 </div> <!----> 
<!----> <div class="_1w8H0ktn_0 _2A421P4G_0"> <div class="_2jsFl-X0_0"> <i class="iconfont"></i> 
<span></span> </div> <div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class=""></span> 
</div> <!----> </div> </div> </div></li> <li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/10/59/1d/c7de1a9b.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>Kada</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2019-09-30 </div> </div> <!----> 
</div> <div> <div class="_3M6kV3zb_0"> 从反爬虫的角度， <br> <br>放在客户端聚合，势必要分多个请求。不想暴露的数据api就得引入加解密。 
<br> <br>对于服务端聚合的页面，比较好控制呈现的数据维度和量，爬虫也只能老实的解析dom树。 </div> <div class="_2r3UB1GX_0"> <span>展开</span><i 
class="iconfont"></i> </div> <!----> <div class="_1w8H0ktn_0 _2A421P4G_0"> <div class="_2jsFl-X0_0"> 
<i class="iconfont"></i> <span></span> </div> <div class="_2P4B1Hdm_0"> <i class="iconfont"></i> 
<span class=""></span> </div> <!----> </div> </div> </div></li>', 0, 'full_html', 'zh-hans', 
40, 40) 
 {executed in 0 msec}
2020-11-19 11:24:11.821 INFO  jdbc.sqltiming Line:373 - select bookfieldt0_.entity_id as entity_i1_8_, bookfieldt0_.bundle as bundle2_8_, bookfieldt0_.delta 
as delta3_8_, bookfieldt0_.langcode as langcode4_8_, bookfieldt0_.revision_id as revision5_8_, 
bookfieldt0_.field_thumb_value as field_th6_8_ from node__field_thumb bookfieldt0_ where bookfieldt0_.entity_id=40 
 {executed in 1 msec}
2020-11-19 11:24:11.821 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------|------------------|
|entity_id |bundle |delta |langcode |revision_id |field_thumb_value |
|----------|-------|------|---------|------------|------------------|
|----------|-------|------|---------|------------|------------------|

2020-11-19 11:24:11.822 INFO  jdbc.sqltiming Line:373 - select bookfieldt0_.entity_id as entity_i1_8_0_, bookfieldt0_.bundle as bundle2_8_0_, bookfieldt0_.delta 
as delta3_8_0_, bookfieldt0_.langcode as langcode4_8_0_, bookfieldt0_.revision_id as revision5_8_0_, 
bookfieldt0_.field_thumb_value as field_th6_8_0_ from node__field_thumb bookfieldt0_ where 
bookfieldt0_.entity_id=40 
 {executed in 0 msec}
2020-11-19 11:24:11.823 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------|------------------|
|entity_id |bundle |delta |langcode |revision_id |field_thumb_value |
|----------|-------|------|---------|------------|------------------|
|----------|-------|------|---------|------------|------------------|

2020-11-19 11:24:11.825 INFO  jdbc.sqltiming Line:373 - insert into node__field_thumb (bundle, delta, langcode, revision_id, field_thumb_value, entity_id) 
values ('book', 0, 'zh-hans', 40, 'https://static001.geekbang.org/resource/image/5c/65/5c04f304da05577b7d854a9b7fc04165.jpg', 
40) 
 {executed in 0 msec}
2020-11-19 11:24:11.833 INFO  jdbc.sqltiming Line:373 - select nodefieldt0_.entity_id as entity_i1_17_0_, nodefieldt0_.bundle as bundle2_17_0_, nodefieldt0_.delta 
as delta3_17_0_, nodefieldt0_.langcode as langcode4_17_0_, nodefieldt0_.revision_id as revision5_17_0_, 
nodefieldt0_.field_thumb_value as field_th6_17_0_ from node_revision__field_thumb nodefieldt0_ 
where nodefieldt0_.entity_id=40 
 {executed in 0 msec}
2020-11-19 11:24:11.834 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------|------------------|
|entity_id |bundle |delta |langcode |revision_id |field_thumb_value |
|----------|-------|------|---------|------------|------------------|
|----------|-------|------|---------|------------|------------------|

2020-11-19 11:24:11.836 INFO  jdbc.sqltiming Line:373 - insert into node_revision__field_thumb (bundle, delta, langcode, revision_id, field_thumb_value, 
entity_id) values ('book', 0, 'zh-hans', 40, 'https://static001.geekbang.org/resource/image/5c/65/5c04f304da05577b7d854a9b7fc04165.jpg', 
40) 
 {executed in 1 msec}
2020-11-19 11:24:11.841 INFO  jdbc.sqltiming Line:373 - select bookfieldf0_.entity_id as entity_i1_5_0_, bookfieldf0_.bundle as bundle2_5_0_, bookfieldf0_.delta 
as delta3_5_0_, bookfieldf0_.field_fenlei_target_id as field_fe4_5_0_, bookfieldf0_.langcode 
as langcode5_5_0_, bookfieldf0_.revision_id as revision6_5_0_ from node__field_fenlei bookfieldf0_ 
where bookfieldf0_.entity_id=40 
 {executed in 0 msec}
2020-11-19 11:24:11.842 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------------|---------|------------|
|entity_id |bundle |delta |field_fenlei_target_id |langcode |revision_id |
|----------|-------|------|-----------------------|---------|------------|
|----------|-------|------|-----------------------|---------|------------|

2020-11-19 11:24:11.844 INFO  jdbc.sqltiming Line:373 - insert into node__field_fenlei (bundle, delta, field_fenlei_target_id, langcode, revision_id, 
entity_id) values ('book', 0, 1, 'zh-hans', 40, 40) 
 {executed in 1 msec}
2020-11-19 11:24:11.882 INFO  jdbc.sqltiming Line:373 - select nodefieldf0_.entity_id as entity_i1_14_0_, nodefieldf0_.bundle as bundle2_14_0_, nodefieldf0_.delta 
as delta3_14_0_, nodefieldf0_.field_fenlei_target_id as field_fe4_14_0_, nodefieldf0_.langcode 
as langcode5_14_0_, nodefieldf0_.revision_id as revision6_14_0_ from node_revision__field_fenlei 
nodefieldf0_ where nodefieldf0_.entity_id=40 
 {executed in 33 msec}
2020-11-19 11:24:11.883 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------------|---------|------------|
|entity_id |bundle |delta |field_fenlei_target_id |langcode |revision_id |
|----------|-------|------|-----------------------|---------|------------|
|----------|-------|------|-----------------------|---------|------------|

2020-11-19 11:24:11.884 INFO  jdbc.sqltiming Line:373 - insert into node_revision__field_fenlei (bundle, delta, field_fenlei_target_id, langcode, revision_id, 
entity_id) values ('book', 0, 1, 'zh-hans', 40, 40) 
 {executed in 0 msec}
2020-11-19 11:24:55.767 INFO  jdbc.sqltiming Line:373 - select bookfieldf0_.entity_id as entity_i1_6_, bookfieldf0_.bundle as bundle2_6_, bookfieldf0_.delta 
as delta3_6_, bookfieldf0_.field_fsid_value as field_fs4_6_, bookfieldf0_.langcode as langcode5_6_, 
bookfieldf0_.revision_id as revision6_6_ from node__field_fsid bookfieldf0_ where bookfieldf0_.field_fsid_value='585891739016954' 
 {executed in 1 msec}
2020-11-19 11:24:55.768 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------|---------|------------|
|entity_id |bundle |delta |field_fsid_value |langcode |revision_id |
|----------|-------|------|-----------------|---------|------------|
|----------|-------|------|-----------------|---------|------------|

2020-11-19 11:24:55.769 INFO  jdbc.sqltiming Line:373 - insert into node_revision (langcode, nid, revision_default, revision_timestamp, revision_uid) 
values ('zh-hans', 0, 1, 1605756295, 1) 
 {executed in 0 msec}
2020-11-19 11:24:55.770 INFO  jdbc.sqltiming Line:373 - getGeneratedKeys on query: insert into node_revision (langcode, nid, revision_default, revision_timestamp, 
revision_uid) values ('zh-hans', 0, 1, 1605756295, 1) 
 {executed in 0 msec}
2020-11-19 11:24:55.770 INFO  jdbc.resultsettable Line:610 - 
|--------------|
|generated_key |
|--------------|
|41            |
|--------------|

2020-11-19 11:24:55.780 INFO  jdbc.sqltiming Line:373 - insert into node (langcode, type, uuid, vid) values ('zh-hans', 'book', '14560034-0213-4d73-a97c-e6614cfe3bb2', 
41) 
 {executed in 0 msec}
2020-11-19 11:24:55.780 INFO  jdbc.sqltiming Line:373 - getGeneratedKeys on query: insert into node (langcode, type, uuid, vid) values ('zh-hans', 
'book', '14560034-0213-4d73-a97c-e6614cfe3bb2', 41) 
 {executed in 0 msec}
2020-11-19 11:24:55.781 INFO  jdbc.resultsettable Line:610 - 
|--------------|
|generated_key |
|--------------|
|41            |
|--------------|

2020-11-19 11:24:55.785 INFO  jdbc.sqltiming Line:373 - update node_revision set langcode='zh-hans', nid=41, revision_default=1, revision_timestamp=1605756295, 
revision_uid=1 where vid=41 
 {executed in 0 msec}
2020-11-19 11:24:55.787 INFO  jdbc.sqltiming Line:373 - select bookfieldf0_.entity_id as entity_i1_6_0_, bookfieldf0_.bundle as bundle2_6_0_, bookfieldf0_.delta 
as delta3_6_0_, bookfieldf0_.field_fsid_value as field_fs4_6_0_, bookfieldf0_.langcode as langcode5_6_0_, 
bookfieldf0_.revision_id as revision6_6_0_ from node__field_fsid bookfieldf0_ where bookfieldf0_.entity_id=41 
 {executed in 0 msec}
2020-11-19 11:24:55.788 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------|---------|------------|
|entity_id |bundle |delta |field_fsid_value |langcode |revision_id |
|----------|-------|------|-----------------|---------|------------|
|----------|-------|------|-----------------|---------|------------|

2020-11-19 11:24:55.789 INFO  jdbc.sqltiming Line:373 - insert into node__field_fsid (bundle, delta, field_fsid_value, langcode, revision_id, entity_id) 
values ('book', 0, '585891739016954', 'zh-hans', 41, 41) 
 {executed in 0 msec}
2020-11-19 11:24:55.792 INFO  jdbc.sqltiming Line:373 - select nodefieldf0_.entity_id as entity_i1_15_0_, nodefieldf0_.bundle as bundle2_15_0_, nodefieldf0_.delta 
as delta3_15_0_, nodefieldf0_.field_fsid_value as field_fs4_15_0_, nodefieldf0_.langcode as 
langcode5_15_0_, nodefieldf0_.revision_id as revision6_15_0_ from node_revision__field_fsid 
nodefieldf0_ where nodefieldf0_.entity_id=41 
 {executed in 0 msec}
2020-11-19 11:24:55.792 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------|---------|------------|
|entity_id |bundle |delta |field_fsid_value |langcode |revision_id |
|----------|-------|------|-----------------|---------|------------|
|----------|-------|------|-----------------|---------|------------|

2020-11-19 11:24:55.794 INFO  jdbc.sqltiming Line:373 - insert into node_revision__field_fsid (bundle, delta, field_fsid_value, langcode, revision_id, 
entity_id) values ('book', 0, '585891739016954', 'zh-hans', 41, 41) 
 {executed in 0 msec}
2020-11-19 11:24:55.798 INFO  jdbc.sqltiming Line:373 - select bookentity0_.nid as nid1_1_, bookentity0_.bid as bid2_1_, bookentity0_.depth as depth3_1_, 
bookentity0_.has_children as has_chil4_1_, bookentity0_.p1 as p5_1_, bookentity0_.p2 as p6_1_, 
bookentity0_.p3 as p7_1_, bookentity0_.p4 as p8_1_, bookentity0_.p5 as p9_1_, bookentity0_.pid 
as pid10_1_, bookentity0_.weight as weight11_1_ from book bookentity0_ where bookentity0_.nid=41 
 {executed in 0 msec}
2020-11-19 11:24:55.798 INFO  jdbc.resultsettable Line:610 - 
|----|----|------|-------------|---|---|---|---|---|----|-------|
|nid |bid |depth |has_children |p1 |p2 |p3 |p4 |p5 |pid |weight |
|----|----|------|-------------|---|---|---|---|---|----|-------|
|----|----|------|-------------|---|---|---|---|---|----|-------|

2020-11-19 11:24:55.799 INFO  jdbc.sqltiming Line:373 - select bookentity0_.nid as nid1_1_0_, bookentity0_.bid as bid2_1_0_, bookentity0_.depth as 
depth3_1_0_, bookentity0_.has_children as has_chil4_1_0_, bookentity0_.p1 as p5_1_0_, bookentity0_.p2 
as p6_1_0_, bookentity0_.p3 as p7_1_0_, bookentity0_.p4 as p8_1_0_, bookentity0_.p5 as p9_1_0_, 
bookentity0_.pid as pid10_1_0_, bookentity0_.weight as weight11_1_0_ from book bookentity0_ 
where bookentity0_.nid=41 
 {executed in 0 msec}
2020-11-19 11:24:55.799 INFO  jdbc.resultsettable Line:610 - 
|----|----|------|-------------|---|---|---|---|---|----|-------|
|nid |bid |depth |has_children |p1 |p2 |p3 |p4 |p5 |pid |weight |
|----|----|------|-------------|---|---|---|---|---|----|-------|
|----|----|------|-------------|---|---|---|---|---|----|-------|

2020-11-19 11:24:55.801 INFO  jdbc.sqltiming Line:373 - insert into book (bid, depth, has_children, p1, p2, p3, p4, p5, pid, weight, nid) values (1, 
3, 0, 1, 35, 41, 0, 0, 35, 0, 41) 
 {executed in 1 msec}
2020-11-19 11:24:55.803 INFO  jdbc.sqltiming Line:373 - select nodebodyen0_.entity_id as entity_i1_3_, nodebodyen0_.body_value as body_val2_3_, nodebodyen0_.body_summary 
as body_sum3_3_, nodebodyen0_.bundle as bundle4_3_, nodebodyen0_.delta as delta5_3_, nodebodyen0_.body_format 
as body_for6_3_, nodebodyen0_.langcode as langcode7_3_, nodebodyen0_.revision_id as revision8_3_ 
from node__body nodebodyen0_ where nodebodyen0_.entity_id=41 
 {executed in 0 msec}
2020-11-19 11:24:55.804 INFO  jdbc.resultsettable Line:610 - 
|----------|-----------|-------------|-------|------|------------|---------|------------|
|entity_id |body_value |body_summary |bundle |delta |body_format |langcode |revision_id |
|----------|-----------|-------------|-------|------|------------|---------|------------|
|----------|-----------|-------------|-------|------|------------|---------|------------|

2020-11-19 11:24:55.805 INFO  jdbc.sqltiming Line:373 - select nodebodyre0_.entity_id as entity_i1_12_0_, nodebodyre0_.body_value as body_val2_12_0_, 
nodebodyre0_.body_summary as body_sum3_12_0_, nodebodyre0_.bundle as bundle4_12_0_, nodebodyre0_.delta 
as delta5_12_0_, nodebodyre0_.body_format as body_for6_12_0_, nodebodyre0_.langcode as langcode7_12_0_, 
nodebodyre0_.revision_id as revision8_12_0_ from node_revision__body nodebodyre0_ where nodebodyre0_.entity_id=41 
 {executed in 1 msec}
2020-11-19 11:24:55.805 INFO  jdbc.resultsettable Line:610 - 
|----------|-----------|-------------|-------|------|------------|---------|------------|
|entity_id |body_value |body_summary |bundle |delta |body_format |langcode |revision_id |
|----------|-----------|-------------|-------|------|------------|---------|------------|
|----------|-----------|-------------|-------|------|------------|---------|------------|

2020-11-19 11:24:55.807 INFO  jdbc.sqltiming Line:373 - insert into node_revision__body (body_value, body_summary, bundle, delta, body_format, langcode, 
revision_id, entity_id) values ('<p>你好，我是四火。</p> <p>在上一讲中，我们了解了 MVC 这个老而弥坚的架构模式，而从这一讲开始，连同第 
09、10 讲共计 3 篇，我将分别展开介绍 MVC 三大部分内容。今天我要讲的就是第一部分——模型（Model）。</p> <h2>概念</h2> <p>首先我们要了解的是，我们总在谈“模型”，那到底什么是模型？</p> 
<p>简单说来，<strong>模型就是当我们使用软件去解决真实世界中各种实际问题的时候，对那些我们关心的实际事物的抽象和简化</strong>。比如我们在软件系统中设计“人”这个事物类型的时候，通常只会考虑姓名、性别和年龄等一些系统用得着的必要属性，而不会把性格、血型和生辰八字等我们不关心的东西放进去。</p> 
<p>更进一步讲，我们会谈领域模型（Domain Model）。“领域”两个字显然给出了抽象和简化的范围，不同的软件系统所属的领域是不同的，比如金融软件、医疗软件和社交软件等等。如今领域模型的概念包含了比其原本范围定义以外更多的内容，<strong>我们会更关注这个领域范围内各个模型实体之间的关系</strong>。</p> 
<p>MVC 中的“模型”，说的是“模型层”，它正是由上述的领域模型来实现的，可是当我们讲这一层的时候，它包含了模型上承载的实实在在的业务数据，还有不同数据间的关联关系。因此，<strong>我们在谈模型层的时候，有时候会更关心领域模型这一抽象概念本身，有时候则会更关心数据本身</strong>。</p><!-- 
[[[read_end]]] --> <h2>贫血模型和充血模型</h2> <p>第一次听到“贫血模型”“充血模型”这两个词的时候，可能你就会问了，什么玩意儿？领域模型还有贫血和充血之说？</p> 
<p>其实，这两兄弟是 Martin Fowler 造出来的概念。要了解它们，得先知道这里讲的“血”是什么。</p> <p>这里的“血”，就是逻辑。它既包括我们最关心的业务逻辑，也包含非业务逻辑 
。因此，<strong>贫血模型（Anemic Domain Model），意味着模型实体在设计和实现上，不包含或包含很少的逻辑。</strong>通常这种情况下，逻辑是被挪了出去，由其它单独的一层代码（比如这层代码是“Service”）来完成。</p> 
<p>严格说起来，贫血模型不是面向对象的，因为对象需要数据和逻辑的结合，这也是贫血模型反对者的重要观点之一。如果主要逻辑在 Service 里面，这一层对外暴露的接口也在 Service 
上，那么事实上它就变成了面向“服务”的了，而模型实体，实际只扮演了 Service API 交互入参出参的角色，或者从本质上说，它只是遵循了一定封装规则的容器而已。</p> <p><strong>这时的模型实体，不包含逻辑，但包含状态，而逻辑被解耦到了无状态 
Service 中。</strong>既然没有了状态，Service 中的方法，就成为过程式代码的了。请注意，不完全面向对象并不代表它一定“不好”，事实上，在互联网应用设计中，贫血模型和充血模式都有很多成功的使用案例，且非常常见。</p> 
<p>比如这样的一个名为 Book 的类：</p> <pre style="position: relative;"><code> <table class="hljs-ln"> <tbody> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> public class Book { </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> private int id; </div></td> </tr> <tr> 
<td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> private boolean onLoan; </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> public int getId() { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> return this.id; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="7"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> } </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="8"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
public void setId(int id) { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="9"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
this.id = id; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="10"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
} </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="11"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> public boolean isOnLoan() { </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="12"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> return this.loan; </div></td> </tr> <tr> 
<td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="13"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> } </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="14"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> public void setOnLoan(boolean onLoan) { </div></td> </tr> <tr> <td 
class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="15"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> this.onLoan = onLoan; </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="16"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> } </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="17"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> } </div></td> </tr> </tbody> </table></code> <div class="richcontent-pre-copy"> 
<span class="iconfont"></span>复制代码 </div></pre> <p>你可以看到，它并没有任何实质上的逻辑在里面，方法也只有简单的 getters 
和 setters 等属性获取和设置方法，它扮演的角色基本只是一个用作封装的容器。</p> <p>那么真正的逻辑，特别是业务逻辑在哪里呢？有这样一个 Service：</p> <pre 
style="position: relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> public class BookService { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> public Book lendOut(int bookId, int userId, Date date) { ... } </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> } </div></td> </tr> </tbody> </table></code> 
<div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 </div></pre> <p>这个 lendOut 
方法表示将书从图书馆借出，因此它需要接收图书 id 和 用户 id。在实现中，可能需要校验参数，可能需要查询数据库，可能需要将从数据源获得的原始数据装配到返回对象中，可能需要应用过滤条件，这里的内容，就是逻辑。</p> 
<p>现在，我们再来了解一下充血模型（Rich Domain Model）。<strong>在充血模型的设计中，领域模型实体就是有血有肉的了，既包含数据，也包含逻辑，具备了更高程度的完备性和自恰性</strong>，并且，充血模型的设计才是真正面向对象的。在这种设计下，我们看不到 
XXXService 这样的类了，而是通过操纵有状态的模型实体类，就可以达到数据变更的目的。</p> <pre style="position: relative;"><code> 
<table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
public class Book { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="2"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
private int id; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="3"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
private boolean onLoan; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="4"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
public void lendOut(User user, Date date) { ... } </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> ... // 省略属性的获取和设置方法 </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> } </div></td> </tr> </tbody> </table></code> <div class="richcontent-pre-copy"> 
<span class="iconfont"></span>复制代码 </div></pre> <p>在这种方式下，lendOut 方法不再需要传入 bookId，因为它就在 Book 
对象里面存着呢；也不再需要传出 Book 对象作为返回值，因为状态的改变直接反映在 Book 对象内部了，即 onLoan 会变成 true。</p> <p>也就是说，Book 的行为和数据完完全全被封装的方法控制起来了，中间不会存在不应该出现的不一致状态，因为任何改变状态的行为只能通过 
Book 的特定方法来进行，而它是可以被设计者严格把控的。</p> <p>而在贫血模型中就做不到这一点，一是因为数据和行为分散在两处，二是为了在 Service 中能组装模型，模型实体中本不该对用户开放的接口会被迫暴露出来，于是整个过程中就会存在状态不一致的可能。</p> 
<p>但是请注意，<strong>无论是充血模型还是贫血模型，它和 Model 层做到何种程度的解耦往往没有太大关系。</strong>比如说这个 lendOut 方法，在某些设计中，它可以拆分出去。对于贫血模型来说，它并非完全属于 
BookService，可以拿到新建立的“借书关系”的服务中去，比如：</p> <pre style="position: relative;"><code> <table class="hljs-ln"> 
<tbody> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> public class LoanService { </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> public Loan add(int bookId, int userId, 
Date date) { ... } </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="3"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
} </div></td> </tr> </tbody> </table></code> <div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 
</div></pre> <p>这样一来，借书的关系就可以单独维护了，借书行为发生的时候，Book 和 User 两个实体对应的数据都不需要发生变化，只需要改变这个借书关系的数据就可以了。对于充血模型来说，一样可以做类似拆分。</p> 
<h2>内部层次划分</h2> <p>软件的耦合和复杂性问题往往都可以通过分层解决，模型层内部也一样，但是我们需要把握其中的度。<strong>层次划分过多、过细，并不利于开发人员严格遵从和保持层次的清晰，也容易导致产生过多的无用样板代码，从而降低开发效率。</strong>下面是一种比较常见的 
Model 层，它是基于贫血模型的分层方式。</p> <p><img src="https://static001.geekbang.org/resource/image/f6/46/f6e1b220a80716532ac6dd54cb1b9f46.png" 
alt=""></p> <p>在这种划分方式下，每一层都可以调用自身所属层上的其它类，也可以调用自己下方一层的类，但是不允许往上调用，即依赖关系总是“靠上面的层”依赖着“靠下面的层”。最上面三层是和业务模型实体相关的，而最下面一层是基础设施服务，和业务无关。从上到下，我把各层依次简单介绍一下：</p> 
<ul> <li>第一层 Facade，提供粗粒度的接口，逻辑上是对 Service 功能的组合。有时候由于事务需要跨多个领域模型的实体控制，那就适合放在这里。举例来说，创建用户的时候，我们同时免费赠送一本电子书给用户，我们既要调用 
UserService 去创建用户对象，也要调用 SubscriptionService 去添加一条订购（赠送）记录，而这两个属于不同 Service 的行为需要放到一处 Facade 
类里面做统一事务控制。在某些较小系统的设计里面，Service 和 Facade 这两层是糅合在一起的。</li> <li>第二层 Service，前面已经介绍了，通常会存放仅属于单个领域模型实体的操作。</li> 
<li>第三层数据访问层，在某些类型的数据访问中需要，比如关系型数据库，这里存放数据库字段和模型对象之间的 ORM（Object-Relational Mapping，对象关系映射）关系。</li> 
<li>第四层基础设施层，这一层的通用性最好，必须和业务无关。某些框架会把基础设施的工作给做了，但有时候也需要我们自己实现。比如 S3Service，存放数据到亚马逊的分布式文件系统。</li> 
</ul> <h2>CQRS 模式</h2> <p>你也许听说过数据库的读写分离，其实，在模型的设计中，也有类似读写分离的机制，其中最常见的一种就叫做 CQRS（Command Query 
Responsibility Segregation，命令查询职责分离）。</p> <p>一般我们设计的业务模型，会同时被用作读（查询模式）和写（命令模式），但是，实际上这两者是有明显区别的，在一些业务场景中，我们希望这两者被分别对待处理，那么这种情况下，CQRS 
就是一个值得考虑的选项。</p> <p>为什么要把命令和查询分离？我举个例子来说明吧，比如这样的贫血模型：</p> <pre style="position: relative;"><code> 
<table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
class Book { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" 
data-line-number="2"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> private 
long id; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" 
data-line-number="3"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> private 
String name; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" 
data-line-number="4"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> private 
Date publicationDate; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="5"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
private Date creationDate; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="6"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
... // 省略其它属性和 getter/setter 方法 </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="7"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
} </div></td> </tr> </tbody> </table></code> <div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 
</div></pre> <p>那么，相应地，就有这样一个 BookService：</p> <pre style="position: relative;"><code> <table 
class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" 
data-line-number="1"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> class 
BookService { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="2"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
public Book add(Book book); </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="3"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
public Pagination&lt;Book&gt; query(Book book); </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> } </div></td> </tr> </tbody> </table></code> <div class="richcontent-pre-copy"> 
<span class="iconfont"></span>复制代码 </div></pre> <p>这个接口提供了两个方法：</p> <p>一个叫做 add 方法，接收一个 book 
对象，这个对象的 name 和 publicationDate 属性会被当做实际值写入数据库，但是 id 会被忽略，因为 id 是数据库自动生成的，具备唯一性，creationDate 
也会被忽略，因为它也是由数据库自动生成的，表示数据条目的创建时间。写入数据库完成后，返回一个能够反映实际写入库中数据的 Book 对象，它的 id 和 creationDate 都填上了数据库生成的实际值。</p> 
<p>你看，这个方法，实际做了两件事，一件是插入数据，即写操作；另一件是返回数据库写入的实际对象，即读操作。</p> <p>另一个方法是 query 方法，用于查询，这个 Book 
入参，被用来承载查询参数了 。比方说，如果它的 author 值为“Jim”，表示查询作者名字为“Jim”的图书，返回一个分页对象，内含分页后的结果列表。</p> <p>但这个方法，其实有着明显的问题。这个问题就是，查询条件的表达，并不能用简单的业务模型很好地表达。换言之，这个模型 
Book，能用来表示写入，却不适合用来表示查询。为什么呢？</p> <p>比方说，你要查询出版日期从 2018 年到 2019 年之间的图书，你该怎么构造这个 Book 对象？很难办对吧，因为 
Book 只能包含一个 publicationDate 参数，这种“难办”的本质原因，是模型的不匹配，即这个 Book 对象根本就不适合用来做查询调用的模型。</p> <p>在清楚了问题以后，解决方法 
CQRS 就自然而然产生了。<strong>简单来说，CQRS 模式下，模型层的接口分为且只分为两种：</strong></p> <ul> <li><strong>命令（Command），它不返回任何结果，但会改变数据的状态。</strong></li> 
<li><strong>查询（Query），它返回结果，但是不会改变数据的状态。</strong></li> </ul> <p>也就是说，它把命令和查询的模型彻底分开了。上面的例子 
，使用 CQRS 的方式来改写一下，会变成这样：</p> <pre style="position: relative;"><code> <table class="hljs-ln"> 
<tbody> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> class BookService { </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> public void add(Book book); </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> public Pagination&lt;Book&gt; query(Query 
bookQuery); </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" 
data-line-number="4"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> } </div></td> 
</tr> </tbody> </table></code> <div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 
</div></pre> <p>你看，在 add 操作的时候，不再有返回值；而在 query 操作的时候，入参变成了一个 Query 对象，这是一个专门的“查询对象”，查询对象里面可以放置多个查询条件，比如：</p> 
<pre style="position: relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> Query bookQuery = new Query(Book.class); </div></td> </tr> <tr> 
<td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> query.addCriteria(Criteria.greaterThan("publicationDate", 
date_2018)); </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" 
data-line-number="3"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> query.addCriteria(Criteria.lessThan("publicationDate", 
date_2019)); </div></td> </tr> </tbody> </table></code> <div class="richcontent-pre-copy"> 
<span class="iconfont"></span>复制代码 </div></pre> <p>读到这里，不知道你有没有联想到这样两个知识点：</p> <p>第一个知识点，在 
<a href="https://time.geekbang.org/column/article/136795">[第 04 讲]</a> 我们学习 REST 风格的时候，我们把 
HTTP 的请求从两个维度进行划分，是否幂等，以及是否安全。<strong>按照这个角度来考量，CQRS 中的命令，可能是幂等的（例如对象更新），也可能不是幂等的（例如对象创建），但一定是不安全的；CQRS 
中的查询，一定是幂等的，且一定是安全的。</strong></p> <p>第二个知识点，在 <a href="https://time.geekbang.org/column/article/140196">[第 
07 讲]</a> 我们学习 MVC 的一般化，其中的“第二种”典型情况时，Controller 会调用 Model 层的，执行写入操作；而 View 层会调用 Model 层，执行只读操作——看起来这不就是最适合 
CQRS 的一种应用场景吗？</p> <p>所以说，技术确实都是相通的。</p> <h2>总结思考</h2> <p>今天我们详细剖析了 MVC 架构中 Model 层的方方面面，并结合例子理解了贫血模型和充血模型的概念和特点，还介绍了一种典型的模型层的内部层次划分方法，接着介绍了 
CQRS 这种将命令和查询行为解耦开的模型层设计方式。</p> <p>其中，贫血模型和充血模型的理解是这一讲的重点，这里我再强调一下：</p> <ul> <li>贫血模型，逻辑从模型实体中剥离出去，并被放到了无状态的 
Service 层中，于是状态和逻辑就被解耦开了；</li> <li>充血模型，它既包含数据，也包含逻辑，具备了更高程度的完备性和自恰性。</li> </ul> <p>最后，我来提两个问题，一同检验下今天的学习成果吧：</p> 
<ul> <li>请回想一下，在你经历过的项目中，使用过什么 MVC 框架，Model 层的代码是遵循贫血模型还是充血模型设计的？</li> <li>在文中应用 CQRS 模式的时候，add 
方法不再返回 Book 对象，这样一来，方法调用者就无法知道实际插入的 Book 对象的 id 是什么，就无法在下一步根据 id 去数据库查询出这个 Book 对象了。那么，这个问题该怎么解决呢？</li> 
</ul> <p>好，今天的内容就到这里，有余力还可以了解下扩展阅读的内容。有关今天的知识点，如果你在实际的工作经历中遇到过，其实是非常适合拿来一起比较的。可以谈谈你在这方面的经验，也可以分享你的不同理解，期待你的想法！</p> 
<h2>扩展阅读</h2> <ul> <li><a href="https://martinfowler.com/bliki/AnemicDomainModel.html">AnemicDomainModel</a>，Martin 
Fowler 写的批评贫血模型的文章，他自己提出了贫血和充血的概念，因此我们可以到概念的源头去，看看他做出批评的理由是什么。</li> <li>【基础】在模型层我们经常会和数据库打交道，SQL 
是这部分的基础，如果你完全不了解 SQL，可以阅读 W3school 上的 <a href="https://www.w3school.com.cn/sql/index.asp">SQL 
基础教程</a>（左侧目录中的基础教程，内容简短）。</li> <li>文中提到了查询对象（Query Object），这其实是一种常见的设计模式，文中举例说明了是怎么使用的，但是，如果你想知道它是怎么实现的，可以阅读 
<a href="https://www.sourcecodeexamples.net/2018/04/query-object-pattern.html">Query Object 
Pattern</a> 这篇文章，上面有很好的例子。</li> </ul> <p><img src="https://static001.geekbang.org/resource/image/11/8b/1181246bbd51ce348d5729696d1dc28b.jpg" 
alt="unpreview"></p>', '', 'book', 0, 'full_html', 'zh-hans', 41, 41) 
 {executed in 0 msec}
2020-11-19 11:24:55.812 INFO  jdbc.sqltiming Line:373 - select nodebodyen0_.entity_id as entity_i1_3_0_, nodebodyen0_.body_value as body_val2_3_0_, 
nodebodyen0_.body_summary as body_sum3_3_0_, nodebodyen0_.bundle as bundle4_3_0_, nodebodyen0_.delta 
as delta5_3_0_, nodebodyen0_.body_format as body_for6_3_0_, nodebodyen0_.langcode as langcode7_3_0_, 
nodebodyen0_.revision_id as revision8_3_0_ from node__body nodebodyen0_ where nodebodyen0_.entity_id=41 
 {executed in 0 msec}
2020-11-19 11:24:55.813 INFO  jdbc.resultsettable Line:610 - 
|----------|-----------|-------------|-------|------|------------|---------|------------|
|entity_id |body_value |body_summary |bundle |delta |body_format |langcode |revision_id |
|----------|-----------|-------------|-------|------|------------|---------|------------|
|----------|-----------|-------------|-------|------|------------|---------|------------|

2020-11-19 11:24:55.815 INFO  jdbc.sqltiming Line:373 - insert into node__body (body_value, body_summary, bundle, delta, body_format, langcode, revision_id, 
entity_id) values ('<p>你好，我是四火。</p> <p>在上一讲中，我们了解了 MVC 这个老而弥坚的架构模式，而从这一讲开始，连同第 09、10 讲共计 3 
篇，我将分别展开介绍 MVC 三大部分内容。今天我要讲的就是第一部分——模型（Model）。</p> <h2>概念</h2> <p>首先我们要了解的是，我们总在谈“模型”，那到底什么是模型？</p> 
<p>简单说来，<strong>模型就是当我们使用软件去解决真实世界中各种实际问题的时候，对那些我们关心的实际事物的抽象和简化</strong>。比如我们在软件系统中设计“人”这个事物类型的时候，通常只会考虑姓名、性别和年龄等一些系统用得着的必要属性，而不会把性格、血型和生辰八字等我们不关心的东西放进去。</p> 
<p>更进一步讲，我们会谈领域模型（Domain Model）。“领域”两个字显然给出了抽象和简化的范围，不同的软件系统所属的领域是不同的，比如金融软件、医疗软件和社交软件等等。如今领域模型的概念包含了比其原本范围定义以外更多的内容，<strong>我们会更关注这个领域范围内各个模型实体之间的关系</strong>。</p> 
<p>MVC 中的“模型”，说的是“模型层”，它正是由上述的领域模型来实现的，可是当我们讲这一层的时候，它包含了模型上承载的实实在在的业务数据，还有不同数据间的关联关系。因此，<strong>我们在谈模型层的时候，有时候会更关心领域模型这一抽象概念本身，有时候则会更关心数据本身</strong>。</p><!-- 
[[[read_end]]] --> <h2>贫血模型和充血模型</h2> <p>第一次听到“贫血模型”“充血模型”这两个词的时候，可能你就会问了，什么玩意儿？领域模型还有贫血和充血之说？</p> 
<p>其实，这两兄弟是 Martin Fowler 造出来的概念。要了解它们，得先知道这里讲的“血”是什么。</p> <p>这里的“血”，就是逻辑。它既包括我们最关心的业务逻辑，也包含非业务逻辑 
。因此，<strong>贫血模型（Anemic Domain Model），意味着模型实体在设计和实现上，不包含或包含很少的逻辑。</strong>通常这种情况下，逻辑是被挪了出去，由其它单独的一层代码（比如这层代码是“Service”）来完成。</p> 
<p>严格说起来，贫血模型不是面向对象的，因为对象需要数据和逻辑的结合，这也是贫血模型反对者的重要观点之一。如果主要逻辑在 Service 里面，这一层对外暴露的接口也在 Service 
上，那么事实上它就变成了面向“服务”的了，而模型实体，实际只扮演了 Service API 交互入参出参的角色，或者从本质上说，它只是遵循了一定封装规则的容器而已。</p> <p><strong>这时的模型实体，不包含逻辑，但包含状态，而逻辑被解耦到了无状态 
Service 中。</strong>既然没有了状态，Service 中的方法，就成为过程式代码的了。请注意，不完全面向对象并不代表它一定“不好”，事实上，在互联网应用设计中，贫血模型和充血模式都有很多成功的使用案例，且非常常见。</p> 
<p>比如这样的一个名为 Book 的类：</p> <pre style="position: relative;"><code> <table class="hljs-ln"> <tbody> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> public class Book { </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> private int id; </div></td> </tr> <tr> 
<td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> private boolean onLoan; </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> public int getId() { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> return this.id; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="7"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> } </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="8"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
public void setId(int id) { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="9"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
this.id = id; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="10"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
} </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="11"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> public boolean isOnLoan() { </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="12"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> return this.loan; </div></td> </tr> <tr> 
<td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="13"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> } </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="14"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> public void setOnLoan(boolean onLoan) { </div></td> </tr> <tr> <td 
class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="15"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> this.onLoan = onLoan; </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="16"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> } </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="17"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> } </div></td> </tr> </tbody> </table></code> <div class="richcontent-pre-copy"> 
<span class="iconfont"></span>复制代码 </div></pre> <p>你可以看到，它并没有任何实质上的逻辑在里面，方法也只有简单的 getters 
和 setters 等属性获取和设置方法，它扮演的角色基本只是一个用作封装的容器。</p> <p>那么真正的逻辑，特别是业务逻辑在哪里呢？有这样一个 Service：</p> <pre 
style="position: relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> public class BookService { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> public Book lendOut(int bookId, int userId, Date date) { ... } </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> } </div></td> </tr> </tbody> </table></code> 
<div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 </div></pre> <p>这个 lendOut 
方法表示将书从图书馆借出，因此它需要接收图书 id 和 用户 id。在实现中，可能需要校验参数，可能需要查询数据库，可能需要将从数据源获得的原始数据装配到返回对象中，可能需要应用过滤条件，这里的内容，就是逻辑。</p> 
<p>现在，我们再来了解一下充血模型（Rich Domain Model）。<strong>在充血模型的设计中，领域模型实体就是有血有肉的了，既包含数据，也包含逻辑，具备了更高程度的完备性和自恰性</strong>，并且，充血模型的设计才是真正面向对象的。在这种设计下，我们看不到 
XXXService 这样的类了，而是通过操纵有状态的模型实体类，就可以达到数据变更的目的。</p> <pre style="position: relative;"><code> 
<table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
public class Book { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="2"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
private int id; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="3"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
private boolean onLoan; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="4"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
public void lendOut(User user, Date date) { ... } </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> ... // 省略属性的获取和设置方法 </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> } </div></td> </tr> </tbody> </table></code> <div class="richcontent-pre-copy"> 
<span class="iconfont"></span>复制代码 </div></pre> <p>在这种方式下，lendOut 方法不再需要传入 bookId，因为它就在 Book 
对象里面存着呢；也不再需要传出 Book 对象作为返回值，因为状态的改变直接反映在 Book 对象内部了，即 onLoan 会变成 true。</p> <p>也就是说，Book 的行为和数据完完全全被封装的方法控制起来了，中间不会存在不应该出现的不一致状态，因为任何改变状态的行为只能通过 
Book 的特定方法来进行，而它是可以被设计者严格把控的。</p> <p>而在贫血模型中就做不到这一点，一是因为数据和行为分散在两处，二是为了在 Service 中能组装模型，模型实体中本不该对用户开放的接口会被迫暴露出来，于是整个过程中就会存在状态不一致的可能。</p> 
<p>但是请注意，<strong>无论是充血模型还是贫血模型，它和 Model 层做到何种程度的解耦往往没有太大关系。</strong>比如说这个 lendOut 方法，在某些设计中，它可以拆分出去。对于贫血模型来说，它并非完全属于 
BookService，可以拿到新建立的“借书关系”的服务中去，比如：</p> <pre style="position: relative;"><code> <table class="hljs-ln"> 
<tbody> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> public class LoanService { </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> public Loan add(int bookId, int userId, 
Date date) { ... } </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="3"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
} </div></td> </tr> </tbody> </table></code> <div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 
</div></pre> <p>这样一来，借书的关系就可以单独维护了，借书行为发生的时候，Book 和 User 两个实体对应的数据都不需要发生变化，只需要改变这个借书关系的数据就可以了。对于充血模型来说，一样可以做类似拆分。</p> 
<h2>内部层次划分</h2> <p>软件的耦合和复杂性问题往往都可以通过分层解决，模型层内部也一样，但是我们需要把握其中的度。<strong>层次划分过多、过细，并不利于开发人员严格遵从和保持层次的清晰，也容易导致产生过多的无用样板代码，从而降低开发效率。</strong>下面是一种比较常见的 
Model 层，它是基于贫血模型的分层方式。</p> <p><img src="https://static001.geekbang.org/resource/image/f6/46/f6e1b220a80716532ac6dd54cb1b9f46.png" 
alt=""></p> <p>在这种划分方式下，每一层都可以调用自身所属层上的其它类，也可以调用自己下方一层的类，但是不允许往上调用，即依赖关系总是“靠上面的层”依赖着“靠下面的层”。最上面三层是和业务模型实体相关的，而最下面一层是基础设施服务，和业务无关。从上到下，我把各层依次简单介绍一下：</p> 
<ul> <li>第一层 Facade，提供粗粒度的接口，逻辑上是对 Service 功能的组合。有时候由于事务需要跨多个领域模型的实体控制，那就适合放在这里。举例来说，创建用户的时候，我们同时免费赠送一本电子书给用户，我们既要调用 
UserService 去创建用户对象，也要调用 SubscriptionService 去添加一条订购（赠送）记录，而这两个属于不同 Service 的行为需要放到一处 Facade 
类里面做统一事务控制。在某些较小系统的设计里面，Service 和 Facade 这两层是糅合在一起的。</li> <li>第二层 Service，前面已经介绍了，通常会存放仅属于单个领域模型实体的操作。</li> 
<li>第三层数据访问层，在某些类型的数据访问中需要，比如关系型数据库，这里存放数据库字段和模型对象之间的 ORM（Object-Relational Mapping，对象关系映射）关系。</li> 
<li>第四层基础设施层，这一层的通用性最好，必须和业务无关。某些框架会把基础设施的工作给做了，但有时候也需要我们自己实现。比如 S3Service，存放数据到亚马逊的分布式文件系统。</li> 
</ul> <h2>CQRS 模式</h2> <p>你也许听说过数据库的读写分离，其实，在模型的设计中，也有类似读写分离的机制，其中最常见的一种就叫做 CQRS（Command Query 
Responsibility Segregation，命令查询职责分离）。</p> <p>一般我们设计的业务模型，会同时被用作读（查询模式）和写（命令模式），但是，实际上这两者是有明显区别的，在一些业务场景中，我们希望这两者被分别对待处理，那么这种情况下，CQRS 
就是一个值得考虑的选项。</p> <p>为什么要把命令和查询分离？我举个例子来说明吧，比如这样的贫血模型：</p> <pre style="position: relative;"><code> 
<table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
class Book { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" 
data-line-number="2"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> private 
long id; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" 
data-line-number="3"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> private 
String name; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" 
data-line-number="4"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> private 
Date publicationDate; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="5"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
private Date creationDate; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="6"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
... // 省略其它属性和 getter/setter 方法 </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="7"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
} </div></td> </tr> </tbody> </table></code> <div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 
</div></pre> <p>那么，相应地，就有这样一个 BookService：</p> <pre style="position: relative;"><code> <table 
class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" 
data-line-number="1"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> class 
BookService { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="2"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
public Book add(Book book); </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="3"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
public Pagination&lt;Book&gt; query(Book book); </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> } </div></td> </tr> </tbody> </table></code> <div class="richcontent-pre-copy"> 
<span class="iconfont"></span>复制代码 </div></pre> <p>这个接口提供了两个方法：</p> <p>一个叫做 add 方法，接收一个 book 
对象，这个对象的 name 和 publicationDate 属性会被当做实际值写入数据库，但是 id 会被忽略，因为 id 是数据库自动生成的，具备唯一性，creationDate 
也会被忽略，因为它也是由数据库自动生成的，表示数据条目的创建时间。写入数据库完成后，返回一个能够反映实际写入库中数据的 Book 对象，它的 id 和 creationDate 都填上了数据库生成的实际值。</p> 
<p>你看，这个方法，实际做了两件事，一件是插入数据，即写操作；另一件是返回数据库写入的实际对象，即读操作。</p> <p>另一个方法是 query 方法，用于查询，这个 Book 
入参，被用来承载查询参数了 。比方说，如果它的 author 值为“Jim”，表示查询作者名字为“Jim”的图书，返回一个分页对象，内含分页后的结果列表。</p> <p>但这个方法，其实有着明显的问题。这个问题就是，查询条件的表达，并不能用简单的业务模型很好地表达。换言之，这个模型 
Book，能用来表示写入，却不适合用来表示查询。为什么呢？</p> <p>比方说，你要查询出版日期从 2018 年到 2019 年之间的图书，你该怎么构造这个 Book 对象？很难办对吧，因为 
Book 只能包含一个 publicationDate 参数，这种“难办”的本质原因，是模型的不匹配，即这个 Book 对象根本就不适合用来做查询调用的模型。</p> <p>在清楚了问题以后，解决方法 
CQRS 就自然而然产生了。<strong>简单来说，CQRS 模式下，模型层的接口分为且只分为两种：</strong></p> <ul> <li><strong>命令（Command），它不返回任何结果，但会改变数据的状态。</strong></li> 
<li><strong>查询（Query），它返回结果，但是不会改变数据的状态。</strong></li> </ul> <p>也就是说，它把命令和查询的模型彻底分开了。上面的例子 
，使用 CQRS 的方式来改写一下，会变成这样：</p> <pre style="position: relative;"><code> <table class="hljs-ln"> 
<tbody> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> class BookService { </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> public void add(Book book); </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> public Pagination&lt;Book&gt; query(Query 
bookQuery); </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" 
data-line-number="4"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> } </div></td> 
</tr> </tbody> </table></code> <div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 
</div></pre> <p>你看，在 add 操作的时候，不再有返回值；而在 query 操作的时候，入参变成了一个 Query 对象，这是一个专门的“查询对象”，查询对象里面可以放置多个查询条件，比如：</p> 
<pre style="position: relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> Query bookQuery = new Query(Book.class); </div></td> </tr> <tr> 
<td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> query.addCriteria(Criteria.greaterThan("publicationDate", 
date_2018)); </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" 
data-line-number="3"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> query.addCriteria(Criteria.lessThan("publicationDate", 
date_2019)); </div></td> </tr> </tbody> </table></code> <div class="richcontent-pre-copy"> 
<span class="iconfont"></span>复制代码 </div></pre> <p>读到这里，不知道你有没有联想到这样两个知识点：</p> <p>第一个知识点，在 
<a href="https://time.geekbang.org/column/article/136795">[第 04 讲]</a> 我们学习 REST 风格的时候，我们把 
HTTP 的请求从两个维度进行划分，是否幂等，以及是否安全。<strong>按照这个角度来考量，CQRS 中的命令，可能是幂等的（例如对象更新），也可能不是幂等的（例如对象创建），但一定是不安全的；CQRS 
中的查询，一定是幂等的，且一定是安全的。</strong></p> <p>第二个知识点，在 <a href="https://time.geekbang.org/column/article/140196">[第 
07 讲]</a> 我们学习 MVC 的一般化，其中的“第二种”典型情况时，Controller 会调用 Model 层的，执行写入操作；而 View 层会调用 Model 层，执行只读操作——看起来这不就是最适合 
CQRS 的一种应用场景吗？</p> <p>所以说，技术确实都是相通的。</p> <h2>总结思考</h2> <p>今天我们详细剖析了 MVC 架构中 Model 层的方方面面，并结合例子理解了贫血模型和充血模型的概念和特点，还介绍了一种典型的模型层的内部层次划分方法，接着介绍了 
CQRS 这种将命令和查询行为解耦开的模型层设计方式。</p> <p>其中，贫血模型和充血模型的理解是这一讲的重点，这里我再强调一下：</p> <ul> <li>贫血模型，逻辑从模型实体中剥离出去，并被放到了无状态的 
Service 层中，于是状态和逻辑就被解耦开了；</li> <li>充血模型，它既包含数据，也包含逻辑，具备了更高程度的完备性和自恰性。</li> </ul> <p>最后，我来提两个问题，一同检验下今天的学习成果吧：</p> 
<ul> <li>请回想一下，在你经历过的项目中，使用过什么 MVC 框架，Model 层的代码是遵循贫血模型还是充血模型设计的？</li> <li>在文中应用 CQRS 模式的时候，add 
方法不再返回 Book 对象，这样一来，方法调用者就无法知道实际插入的 Book 对象的 id 是什么，就无法在下一步根据 id 去数据库查询出这个 Book 对象了。那么，这个问题该怎么解决呢？</li> 
</ul> <p>好，今天的内容就到这里，有余力还可以了解下扩展阅读的内容。有关今天的知识点，如果你在实际的工作经历中遇到过，其实是非常适合拿来一起比较的。可以谈谈你在这方面的经验，也可以分享你的不同理解，期待你的想法！</p> 
<h2>扩展阅读</h2> <ul> <li><a href="https://martinfowler.com/bliki/AnemicDomainModel.html">AnemicDomainModel</a>，Martin 
Fowler 写的批评贫血模型的文章，他自己提出了贫血和充血的概念，因此我们可以到概念的源头去，看看他做出批评的理由是什么。</li> <li>【基础】在模型层我们经常会和数据库打交道，SQL 
是这部分的基础，如果你完全不了解 SQL，可以阅读 W3school 上的 <a href="https://www.w3school.com.cn/sql/index.asp">SQL 
基础教程</a>（左侧目录中的基础教程，内容简短）。</li> <li>文中提到了查询对象（Query Object），这其实是一种常见的设计模式，文中举例说明了是怎么使用的，但是，如果你想知道它是怎么实现的，可以阅读 
<a href="https://www.sourcecodeexamples.net/2018/04/query-object-pattern.html">Query Object 
Pattern</a> 这篇文章，上面有很好的例子。</li> </ul> <p><img src="https://static001.geekbang.org/resource/image/11/8b/1181246bbd51ce348d5729696d1dc28b.jpg" 
alt="unpreview"></p>', '', 'book', 0, 'full_html', 'zh-hans', 41, 41) 
 {executed in 0 msec}
2020-11-19 11:24:55.819 INFO  jdbc.sqltiming Line:373 - select nodefiledd0_.nid as nid1_9_, nodefiledd0_.changed as changed2_9_, nodefiledd0_.created 
as created3_9_, nodefiledd0_.default_langcode as default_4_9_, nodefiledd0_.langcode as langcode5_9_, 
nodefiledd0_.promote as promote6_9_, nodefiledd0_.revision_translation_affected as revision7_9_, 
nodefiledd0_.status as status8_9_, nodefiledd0_.sticky as sticky9_9_, nodefiledd0_.title as 
title10_9_, nodefiledd0_.type as type11_9_, nodefiledd0_.uid as uid12_9_, nodefiledd0_.vid 
as vid13_9_ from node_field_data nodefiledd0_ where nodefiledd0_.nid=41 
 {executed in 0 msec}
2020-11-19 11:24:55.820 INFO  jdbc.resultsettable Line:610 - 
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|-----|----|----|
|nid |changed |created |default_langcode |langcode |promote |revision_translation_affected |status |sticky |title |type |uid |vid |
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|-----|----|----|
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|-----|----|----|

2020-11-19 11:24:55.820 INFO  jdbc.sqltiming Line:373 - select nodefieldr0_.nid as nid1_10_0_, nodefieldr0_.changed as changed2_10_0_, nodefieldr0_.created 
as created3_10_0_, nodefieldr0_.default_langcode as default_4_10_0_, nodefieldr0_.langcode 
as langcode5_10_0_, nodefieldr0_.promote as promote6_10_0_, nodefieldr0_.revision_translation_affected 
as revision7_10_0_, nodefieldr0_.status as status8_10_0_, nodefieldr0_.sticky as sticky9_10_0_, 
nodefieldr0_.title as title10_10_0_, nodefieldr0_.uid as uid11_10_0_, nodefieldr0_.vid as vid12_10_0_ 
from node_field_revision nodefieldr0_ where nodefieldr0_.nid=41 
 {executed in 0 msec}
2020-11-19 11:24:55.820 INFO  jdbc.resultsettable Line:610 - 
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|----|----|
|nid |changed |created |default_langcode |langcode |promote |revision_translation_affected |status |sticky |title |uid |vid |
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|----|----|
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|----|----|

2020-11-19 11:24:55.822 INFO  jdbc.sqltiming Line:373 - insert into node_field_revision (changed, created, default_langcode, langcode, promote, revision_translation_affected, 
status, sticky, title, uid, vid, nid) values (1605756295, 1605756295, 1, 'zh-hans', 0, 1, 1, 
0, '08丨MVC架构解析：模型（Model）篇', 1, 41, 41) 
 {executed in 0 msec}
2020-11-19 11:24:55.826 INFO  jdbc.sqltiming Line:373 - select nodefiledd0_.nid as nid1_9_0_, nodefiledd0_.changed as changed2_9_0_, nodefiledd0_.created 
as created3_9_0_, nodefiledd0_.default_langcode as default_4_9_0_, nodefiledd0_.langcode as 
langcode5_9_0_, nodefiledd0_.promote as promote6_9_0_, nodefiledd0_.revision_translation_affected 
as revision7_9_0_, nodefiledd0_.status as status8_9_0_, nodefiledd0_.sticky as sticky9_9_0_, 
nodefiledd0_.title as title10_9_0_, nodefiledd0_.type as type11_9_0_, nodefiledd0_.uid as uid12_9_0_, 
nodefiledd0_.vid as vid13_9_0_ from node_field_data nodefiledd0_ where nodefiledd0_.nid=41 
 {executed in 1 msec}
2020-11-19 11:24:55.826 INFO  jdbc.resultsettable Line:610 - 
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|-----|----|----|
|nid |changed |created |default_langcode |langcode |promote |revision_translation_affected |status |sticky |title |type |uid |vid |
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|-----|----|----|
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|-----|----|----|

2020-11-19 11:24:55.827 INFO  jdbc.sqltiming Line:373 - insert into node_field_data (changed, created, default_langcode, langcode, promote, revision_translation_affected, 
status, sticky, title, type, uid, vid, nid) values (1605756295, 1605756295, 1, 'zh-hans', 0, 
1, 1, 0, '08丨MVC架构解析：模型（Model）篇', 'book', 1, 41, 41) 
 {executed in 0 msec}
2020-11-19 11:24:55.830 INFO  jdbc.sqltiming Line:373 - select bookfieldm0_.entity_id as entity_i1_7_, bookfieldm0_.bundle as bundle2_7_, bookfieldm0_.delta 
as delta3_7_, bookfieldm0_.langcode as langcode4_7_, bookfieldm0_.field_media_value as field_me5_7_, 
bookfieldm0_.revision_id as revision6_7_ from node__field_media bookfieldm0_ where bookfieldm0_.entity_id=41 
 {executed in 0 msec}
2020-11-19 11:24:55.831 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------------|------------|
|entity_id |bundle |delta |langcode |field_media_value |revision_id |
|----------|-------|------|---------|------------------|------------|
|----------|-------|------|---------|------------------|------------|

2020-11-19 11:24:55.831 INFO  jdbc.sqltiming Line:373 - select bookfieldm0_.entity_id as entity_i1_7_0_, bookfieldm0_.bundle as bundle2_7_0_, bookfieldm0_.delta 
as delta3_7_0_, bookfieldm0_.langcode as langcode4_7_0_, bookfieldm0_.field_media_value as 
field_me5_7_0_, bookfieldm0_.revision_id as revision6_7_0_ from node__field_media bookfieldm0_ 
where bookfieldm0_.entity_id=41 
 {executed in 0 msec}
2020-11-19 11:24:55.831 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------------|------------|
|entity_id |bundle |delta |langcode |field_media_value |revision_id |
|----------|-------|------|---------|------------------|------------|
|----------|-------|------|---------|------------------|------------|

2020-11-19 11:24:55.833 INFO  jdbc.sqltiming Line:373 - insert into node__field_media (bundle, delta, langcode, field_media_value, revision_id, entity_id) 
values ('book', 0, 'zh-hans', 'https://qdall01.baidupcs.com/file/33c3658158ec19e642b4fe09beadcc47?bkt=en-26dcfdb4e5ee1a49123de7be9a4f3f394c578b84fae2d0a45e2f4bfdfadc6bde21f906d2fcc0af18&fid=3757516097-778750-531356452806600&time=1605756294&sign=FDTAXUGERLQlBHSKfWqir-DCb740ccc5511e5e8fedcff06b081203-zqlP3AZTjXYz3aizzcGrRSGNe5o%3D&to=92&size=12909058&sta_dx=12909058&sta_cs=3887&sta_ft=m4a&sta_ct=7&sta_mt=0&fm2=MH%2CYangquan%2CAnywhere%2C%2Cshanghai%2Cct&ctime=1569821450&mtime=1605754778&resv0=-1&resv1=0&resv2=rlim&resv3=2&resv4=12909058&vuk=3757516097&iv=0&htype=&randtype=em&newver=1&newfm=1&secfm=1&flow_ver=3&pkey=en-817b845ecd9837b6c335dba8eacf062be0dc14858bb97130528e6aaf15507437c5f0114217723c42&sl=76480590&expires=8h&rt=pr&r=974335013&mlogid=7502313066418286011&vbdid=2247232042&fin=08%E4%B8%A8MVC%E6%9E%B6%E6%9E%84%E8%A7%A3%E6%9E%90%EF%BC%9A%E6%A8%A1%E5%9E%8B%EF%BC%88Model%EF%BC%89%E7%AF%87.m4a&bflag=92,34-92&rtype=1&dp-logid=7502313066418286011&dp-callid=0.1.1&hps=1&tsl=80&csl=80&fsl=-1&csign=yVzLQPCt4DblfMLqd2BCjd2RnqQ%3D&so=0&ut=6&uter=0&serv=0&uc=1458616558&ti=8798ba4d54806d547489adcd7319bfb8d652f00897ee0892&hflag=30&adg=c_15d187590626c675056c89c8026cfc17&reqlabel=778750_l_1bf9445f27094ab64c9f1cb0bdf7ccfa_-1_dd2c452b8e51a0c74130d7cf32c48a2d&ibp=1&by=themis&filename=08%E4%B8%A8MVC%E6%9E%B6%E6%9E%84%E8%A7%A3%E6%9E%90%EF%BC%9A%E6%A8%A1%E5%9E%8B%EF%BC%88Model%EF%BC%89%E7%AF%87.m4a', 
41, 41) 
 {executed in 0 msec}
2020-11-19 11:24:55.836 INFO  jdbc.sqltiming Line:373 - select nodefieldm0_.entity_id as entity_i1_16_0_, nodefieldm0_.bundle as bundle2_16_0_, nodefieldm0_.delta 
as delta3_16_0_, nodefieldm0_.langcode as langcode4_16_0_, nodefieldm0_.field_media_value as 
field_me5_16_0_, nodefieldm0_.revision_id as revision6_16_0_ from node_revision__field_media 
nodefieldm0_ where nodefieldm0_.entity_id=41 
 {executed in 0 msec}
2020-11-19 11:24:55.837 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------------|------------|
|entity_id |bundle |delta |langcode |field_media_value |revision_id |
|----------|-------|------|---------|------------------|------------|
|----------|-------|------|---------|------------------|------------|

2020-11-19 11:24:55.838 INFO  jdbc.sqltiming Line:373 - insert into node_revision__field_media (bundle, delta, langcode, field_media_value, revision_id, 
entity_id) values ('book', 0, 'zh-hans', 'https://qdall01.baidupcs.com/file/33c3658158ec19e642b4fe09beadcc47?bkt=en-26dcfdb4e5ee1a49123de7be9a4f3f394c578b84fae2d0a45e2f4bfdfadc6bde21f906d2fcc0af18&fid=3757516097-778750-531356452806600&time=1605756294&sign=FDTAXUGERLQlBHSKfWqir-DCb740ccc5511e5e8fedcff06b081203-zqlP3AZTjXYz3aizzcGrRSGNe5o%3D&to=92&size=12909058&sta_dx=12909058&sta_cs=3887&sta_ft=m4a&sta_ct=7&sta_mt=0&fm2=MH%2CYangquan%2CAnywhere%2C%2Cshanghai%2Cct&ctime=1569821450&mtime=1605754778&resv0=-1&resv1=0&resv2=rlim&resv3=2&resv4=12909058&vuk=3757516097&iv=0&htype=&randtype=em&newver=1&newfm=1&secfm=1&flow_ver=3&pkey=en-817b845ecd9837b6c335dba8eacf062be0dc14858bb97130528e6aaf15507437c5f0114217723c42&sl=76480590&expires=8h&rt=pr&r=974335013&mlogid=7502313066418286011&vbdid=2247232042&fin=08%E4%B8%A8MVC%E6%9E%B6%E6%9E%84%E8%A7%A3%E6%9E%90%EF%BC%9A%E6%A8%A1%E5%9E%8B%EF%BC%88Model%EF%BC%89%E7%AF%87.m4a&bflag=92,34-92&rtype=1&dp-logid=7502313066418286011&dp-callid=0.1.1&hps=1&tsl=80&csl=80&fsl=-1&csign=yVzLQPCt4DblfMLqd2BCjd2RnqQ%3D&so=0&ut=6&uter=0&serv=0&uc=1458616558&ti=8798ba4d54806d547489adcd7319bfb8d652f00897ee0892&hflag=30&adg=c_15d187590626c675056c89c8026cfc17&reqlabel=778750_l_1bf9445f27094ab64c9f1cb0bdf7ccfa_-1_dd2c452b8e51a0c74130d7cf32c48a2d&ibp=1&by=themis&filename=08%E4%B8%A8MVC%E6%9E%B6%E6%9E%84%E8%A7%A3%E6%9E%90%EF%BC%9A%E6%A8%A1%E5%9E%8B%EF%BC%88Model%EF%BC%89%E7%AF%87.m4a', 
41, 41) 
 {executed in 0 msec}
2020-11-19 11:24:55.842 INFO  jdbc.sqltiming Line:373 - select bookfieldc0_.entity_id as entity_i1_4_, bookfieldc0_.bundle as bundle2_4_, bookfieldc0_.field_comment_value 
as field_co3_4_, bookfieldc0_.delta as delta4_4_, bookfieldc0_.field_comment_format as field_co5_4_, 
bookfieldc0_.langcode as langcode6_4_, bookfieldc0_.revision_id as revision7_4_ from node__field_comment 
bookfieldc0_ where bookfieldc0_.entity_id=41 
 {executed in 0 msec}
2020-11-19 11:24:55.842 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|--------------------|------|---------------------|---------|------------|
|entity_id |bundle |field_comment_value |delta |field_comment_format |langcode |revision_id |
|----------|-------|--------------------|------|---------------------|---------|------------|
|----------|-------|--------------------|------|---------------------|---------|------------|

2020-11-19 11:24:55.843 INFO  jdbc.sqltiming Line:373 - select bookfieldc0_.entity_id as entity_i1_4_0_, bookfieldc0_.bundle as bundle2_4_0_, bookfieldc0_.field_comment_value 
as field_co3_4_0_, bookfieldc0_.delta as delta4_4_0_, bookfieldc0_.field_comment_format as 
field_co5_4_0_, bookfieldc0_.langcode as langcode6_4_0_, bookfieldc0_.revision_id as revision7_4_0_ 
from node__field_comment bookfieldc0_ where bookfieldc0_.entity_id=41 
 {executed in 0 msec}
2020-11-19 11:24:55.843 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|--------------------|------|---------------------|---------|------------|
|entity_id |bundle |field_comment_value |delta |field_comment_format |langcode |revision_id |
|----------|-------|--------------------|------|---------------------|---------|------------|
|----------|-------|--------------------|------|---------------------|---------|------------|

2020-11-19 11:24:55.848 INFO  jdbc.sqltiming Line:373 - insert into node__field_comment (bundle, field_comment_value, delta, field_comment_format, 
langcode, revision_id, entity_id) values ('book', '<li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/14/4b/4b/97926cba.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>Luciano李鑫</span> <span class="_1bkbsnjg_0">置顶</span> </div> <div class="_1H1Z49Dr_0"> 
2019-09-29 </div> </div> <!----> </div> <div> <div class="_3M6kV3zb_0 _3D2NkqD6_0"> 1.大型、复杂项目用贫血模型多一些，小型、简单项目用重写模型多一些。 
<br>2.在命令查询的时候，针对add可以返回自增id。在update的时候返回修改记录数。 </div> <!----> <div class="_2xNIY4NG_0"> <p 
class="_33BLbmw4_0">作者回复: 关于 2，你说的返回自增 id 是一种很好的方法，很常用，但是它破坏了 CQRS 对于 Command 的 fire-and-forget 
的要求。<br><br>当然，也有一些其它的办法，比如将 id 在客户端生成（这个生成可以是客户端自己生成，也可以是调用服务端的某一个生成 id 的接口生成），但这却又破坏了 REST 
接口中 Create 方法不指定 id 的规约。<br><br>再有一个办法，是在客户端生成一个非主键、但被索引的特殊 id，例如 GUID，这样，生成了记录之后，客户端可以使用这个 
GUID 去服务端获取这条数据，当然，缺点是需要额外的一列来放置 GUID，且要保证 GUID 的唯一性。<br><br>所以，上面介绍了三种方法，各有利弊，都比较常用。当然，也有一些其它的方法。</p> 
</div> <div class="_1w8H0ktn_0 _2A421P4G_0"> <div class="_2jsFl-X0_0"> <i class="iconfont"></i> 
<span></span> </div> <div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class="">2</span> 
</div> <!----> </div> </div> </div></li> <li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/16/bc/25/1c92a90c.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>tt</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2019-09-27 </div> </div> <!----> </div> 
<div> <div class="_3M6kV3zb_0"> 赞，这是我订阅的极客时间的课程中为数不多的重度偏向概念与逻辑的课程。 <br> <br>我本人很少做WEB开发，只是使用过面向对象，这节课一下子就让我领悟了面向对象、面向服务、面向过程、贫血和充血模型。 
<br> <br>程序就是数据结构加算法，业务就是数据加逻辑。从数据和逻辑这两个纬度可以画一个二维四象限图: <br> <br> <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;| 
数据 | 逻辑 <br>------------------------------------------------ <br>数据 | 承载模型状态，开 | 面向对象 <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;| 
放操作状态的接口 | 充血模型 <br>------------------------------------------------ <br>逻辑 | 面向对象 | 面向服务 <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;| 
充血模型 | 无状态，restful <br> <br> <br> <br>虽然很少做WEB开发，但了解过一些内部使用的框架，都有Service和DA，今天知道了，它的名字是贫血模型。 
<br> <br>那从本节课出发，微服务也是把服务拆分，一个目的就是可以快速水平扩展，那应该就大量使用RESTFUL风格。 <br> <br>但逻辑和数据终归要碰面，ORM就是二者之间的桥梁，对外展示不同的面孔。 
</div> <div class="_2r3UB1GX_0"> <span>展开</span><i class="iconfont"></i> </div> <div class="_2xNIY4NG_0"> 
<p class="_33BLbmw4_0">作者回复: 感谢回复。<br><br>关于你提到的“概念与逻辑”，做个说明。<br><br>我是这样认为的，学习全栈技术比较忌讳仅仅学习单个的具体技术，之前的文章和回复中我也多次提到过，毕竟技术种类花样繁多，我们还是需要适当做一些抽象，理解一些通用和共性的东西，既包括一些概念，也包括一些套路（模式）。当然，我们需要通过许多例子来理解它们，这是没错的。</p> 
</div> <div class="_1w8H0ktn_0 _2A421P4G_0"> <div class="_2jsFl-X0_0"> <i class="iconfont"></i> 
<span></span> </div> <div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class="">4</span> 
</div> <!----> </div> </div> </div></li> <li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/14/4b/4b/97926cba.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>Luciano李鑫</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2019-09-29 </div> </div> <!----> 
</div> <div> <div class="_3M6kV3zb_0"> 请问，为什么说在贫血模型中，service增是无状态的，而model增是有状态的，这个“状态”是怎么定义的呢？ 
</div> <div class="_2r3UB1GX_0"> <span>展开</span><i class="iconfont"></i> </div> <div class="_2xNIY4NG_0"> 
<p class="_33BLbmw4_0">作者回复: 状态，其实就是数据。<br><br>Service 提供了一系列的过程方法，入参进，结果出，但是 Service 并未发生变化。<br><br>Model 
则相反，可以创建、修改、删除，这就是状态的变化。</p> </div> <div class="_1w8H0ktn_0 _2A421P4G_0"> <div class="_2jsFl-X0_0"> 
<i class="iconfont"></i> <span></span> </div> <div class="_2P4B1Hdm_0"> <i class="iconfont"></i> 
<span class="">2</span> </div> <!----> </div> </div> </div></li> <li class="reJj6Thl_0"><img 
src="https://static001.geekbang.org/account/avatar/00/10/59/1d/c7de1a9b.jpg" class="_2273kGdT_0"> 
<div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> <span>Kada</span> 
<!----> </div> <div class="_1H1Z49Dr_0"> 2019-09-28 </div> </div> <!----> </div> <div> <div 
class="_3M6kV3zb_0"> 这一课程很棒。如果有可运行的github代码示例，动手试几次，会方便理解很多。 <br> <br>自己实现不是不行，但肯定实现过程中遇到其它问题，就跑偏了，速度会慢，效率会低。 
</div> <div class="_2r3UB1GX_0"> <span>展开</span><i class="iconfont"></i> </div> <!----> <div 
class="_1w8H0ktn_0 _2A421P4G_0"> <div class="_2jsFl-X0_0"> <i class="iconfont"></i> <span></span> 
</div> <div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class="">1</span> </div> <!----> 
</div> </div> </div></li> <li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/0f/dd/30/9d36ccaf.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>桃源小盼</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2019-09-27 </div> </div> <!----> 
</div> <div> <div class="_3M6kV3zb_0"> 非关系型数据库的model层，又该怎么设计呢？ </div> <div class="_2r3UB1GX_0"> 
<span>展开</span><i class="iconfont"></i> </div> <!----> <div class="_1w8H0ktn_0 _2A421P4G_0"> 
<div class="_2jsFl-X0_0"> <i class="iconfont"></i> <span></span> </div> <div class="_2P4B1Hdm_0"> 
<i class="iconfont"></i> <span class="">1</span> </div> <!----> </div> </div> </div></li> 
<li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/0f/54/9a/76c0af70.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>每天晒白牙</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2019-09-30 </div> </div> <!----> 
</div> <div> <div class="_3M6kV3zb_0"> MVC架构Model层设计时，有贫血模型和充血模型之分 <br> <br>贫血模型:把逻辑从模型实体中剥离出去，放到无状态的service层中，达到状态和逻辑的解耦(我经历过的Model层设计一般都是这种贫血模型) 
<br> <br>充血模型:既包涵数据又包涵逻辑，具有完备性和自洽性 <br>你在设计Model层中一般采用哪种模型？ <br> <br>设计接口时有一种模式是CQRS(Command 
Query Responsibility Segregation,命令查询职责分离) <br>命令不返回任何结果，但会改变数据的状态，代表写 <br>查询会返回结果，但不会改变数据状态，就是读 
<br>在设计接口时，写接口参数可以是对象，读接口参数可以是Query对象，设置查询条件 <br>CQRS这种模式是将读写解耦了 <br> <br>我现在参与的一个MVC的项目是读写接口没有显性参数，都是从请求中获取参数，对于写操作，会自己组装对象，然后调用DAO层接口，对于读操作，直接给DAO层接口传参查询 
</div> <div class="_2r3UB1GX_0"> <span>展开</span><i class="iconfont"></i> </div> <!----> <div 
class="_1w8H0ktn_0 _2A421P4G_0"> <div class="_2jsFl-X0_0"> <i class="iconfont"></i> <span></span> 
</div> <div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class=""></span> </div> <!----> 
</div> </div> </div></li> <li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/17/e3/45/d4d3c265.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>编程爱好者</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2019-09-28 </div> </div> <!----> 
</div> <div> <div class="_3M6kV3zb_0"> 1.两者都有过，我个人更喜欢贫血模型，职责分明些。 <br>2.既然不知道，可以让服务器来告诉你。类似于tcp中的syn，ack机制，可以为这次请求增加一个消息编号，然后服务器可以通过这个消息编号告诉方法调用者。 
<br>思考作者为什么这么设计课程，感觉很多内容是架构设计里面涉及的内容-权衡与取舍。 </div> <div class="_2r3UB1GX_0"> <span>展开</span><i 
class="iconfont"></i> </div> <div class="_2xNIY4NG_0"> <p class="_33BLbmw4_0">作者回复: 关于第 2 
问，消息编号的想法很好，但是，消息编号是消息编号，而写入数据库对象的 id 是对象的 id，二者并没有必然联系啊。</p> </div> <div class="_1w8H0ktn_0 
_2A421P4G_0"> <div class="_2jsFl-X0_0"> <i class="iconfont"></i> <span></span> </div> <div 
class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class=""></span> </div> <!----> </div> 
</div> </div></li> <li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/11/5a/55/411f95a8.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>我叫徐小晋</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2019-09-27 </div> </div> <!----> 
</div> <div> <div class="_3M6kV3zb_0"> 老师您好： <br>第一个问题：基本上都是使用贫血模型 <br>第二个问题：是不是可以通过查询，然后通过id排序就可以得到最近的数据呢？ 
<br>希望老师指正 </div> <div class="_2r3UB1GX_0"> <span>展开</span><i class="iconfont"></i> </div> 
<div class="_2xNIY4NG_0"> <p class="_33BLbmw4_0">作者回复: 第二个问题不对，因为通过 id 排序的方式，在数据量较大的时候不可行；而且，即便能排序，你也不能保证一定能找到那个你刚插入的数据（考虑两条数据并发写入的情况）。这个问题你可以看一下其它人的答复和回复 
</p> </div> <div class="_1w8H0ktn_0 _2A421P4G_0"> <div class="_2jsFl-X0_0"> <i class="iconfont"></i> 
<span></span> </div> <div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class=""></span> 
</div> <!----> </div> </div> </div></li> <li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/13/db/26/54f2c164.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>靠人品去赢</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2019-09-27 </div> </div> <!----> 
</div> <div> <div class="_3M6kV3zb_0 _3D2NkqD6_0"> 看了这个，我一下理解我们框架提供服务访问的模块为什么命名叫facade。 </div> 
<!----> <!----> <div class="_1w8H0ktn_0 _2A421P4G_0"> <div class="_2jsFl-X0_0"> <i class="iconfont"></i> 
<span></span> </div> <div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class=""></span> 
</div> <!----> </div> </div> </div></li> <li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/10/df/63/cf317827.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>anginiit</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2019-09-27 </div> </div> <!----> 
</div> <div> <div class="_3M6kV3zb_0"> 最近几个项目都是springMvc，使用贫血模式 </div> <div class="_2r3UB1GX_0"> 
<span>展开</span><i class="iconfont"></i> </div> <!----> <div class="_1w8H0ktn_0 _2A421P4G_0"> 
<div class="_2jsFl-X0_0"> <i class="iconfont"></i> <span></span> </div> <div class="_2P4B1Hdm_0"> 
<i class="iconfont"></i> <span class=""></span> </div> <!----> </div> </div> </div></li> <li 
class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/0f/f8/99/8e760987.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>許敲敲</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2019-09-27 </div> </div> <!----> 
</div> <div> <div class="_3M6kV3zb_0"> 前端框架AngularJS遵循的是MVC 模式 </div> <div class="_2r3UB1GX_0"> 
<span>展开</span><i class="iconfont"></i> </div> <!----> <div class="_1w8H0ktn_0 _2A421P4G_0"> 
<div class="_2jsFl-X0_0"> <i class="iconfont"></i> <span></span> </div> <div class="_2P4B1Hdm_0"> 
<i class="iconfont"></i> <span class=""></span> </div> <!----> </div> </div> </div></li>', 
0, 'full_html', 'zh-hans', 41, 41) 
 {executed in 3 msec}
2020-11-19 11:24:55.852 INFO  jdbc.sqltiming Line:373 - select nodefieldc0_.entity_id as entity_i1_13_0_, nodefieldc0_.bundle as bundle2_13_0_, nodefieldc0_.field_comment_value 
as field_co3_13_0_, nodefieldc0_.delta as delta4_13_0_, nodefieldc0_.field_comment_format as 
field_co5_13_0_, nodefieldc0_.langcode as langcode6_13_0_, nodefieldc0_.revision_id as revision7_13_0_ 
from node_revision__field_comment nodefieldc0_ where nodefieldc0_.entity_id=41 
 {executed in 0 msec}
2020-11-19 11:24:55.852 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|--------------------|------|---------------------|---------|------------|
|entity_id |bundle |field_comment_value |delta |field_comment_format |langcode |revision_id |
|----------|-------|--------------------|------|---------------------|---------|------------|
|----------|-------|--------------------|------|---------------------|---------|------------|

2020-11-19 11:24:55.857 INFO  jdbc.sqltiming Line:373 - insert into node_revision__field_comment (bundle, field_comment_value, delta, field_comment_format, 
langcode, revision_id, entity_id) values ('book', '<li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/14/4b/4b/97926cba.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>Luciano李鑫</span> <span class="_1bkbsnjg_0">置顶</span> </div> <div class="_1H1Z49Dr_0"> 
2019-09-29 </div> </div> <!----> </div> <div> <div class="_3M6kV3zb_0 _3D2NkqD6_0"> 1.大型、复杂项目用贫血模型多一些，小型、简单项目用重写模型多一些。 
<br>2.在命令查询的时候，针对add可以返回自增id。在update的时候返回修改记录数。 </div> <!----> <div class="_2xNIY4NG_0"> <p 
class="_33BLbmw4_0">作者回复: 关于 2，你说的返回自增 id 是一种很好的方法，很常用，但是它破坏了 CQRS 对于 Command 的 fire-and-forget 
的要求。<br><br>当然，也有一些其它的办法，比如将 id 在客户端生成（这个生成可以是客户端自己生成，也可以是调用服务端的某一个生成 id 的接口生成），但这却又破坏了 REST 
接口中 Create 方法不指定 id 的规约。<br><br>再有一个办法，是在客户端生成一个非主键、但被索引的特殊 id，例如 GUID，这样，生成了记录之后，客户端可以使用这个 
GUID 去服务端获取这条数据，当然，缺点是需要额外的一列来放置 GUID，且要保证 GUID 的唯一性。<br><br>所以，上面介绍了三种方法，各有利弊，都比较常用。当然，也有一些其它的方法。</p> 
</div> <div class="_1w8H0ktn_0 _2A421P4G_0"> <div class="_2jsFl-X0_0"> <i class="iconfont"></i> 
<span></span> </div> <div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class="">2</span> 
</div> <!----> </div> </div> </div></li> <li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/16/bc/25/1c92a90c.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>tt</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2019-09-27 </div> </div> <!----> </div> 
<div> <div class="_3M6kV3zb_0"> 赞，这是我订阅的极客时间的课程中为数不多的重度偏向概念与逻辑的课程。 <br> <br>我本人很少做WEB开发，只是使用过面向对象，这节课一下子就让我领悟了面向对象、面向服务、面向过程、贫血和充血模型。 
<br> <br>程序就是数据结构加算法，业务就是数据加逻辑。从数据和逻辑这两个纬度可以画一个二维四象限图: <br> <br> <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;| 
数据 | 逻辑 <br>------------------------------------------------ <br>数据 | 承载模型状态，开 | 面向对象 <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;| 
放操作状态的接口 | 充血模型 <br>------------------------------------------------ <br>逻辑 | 面向对象 | 面向服务 <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;| 
充血模型 | 无状态，restful <br> <br> <br> <br>虽然很少做WEB开发，但了解过一些内部使用的框架，都有Service和DA，今天知道了，它的名字是贫血模型。 
<br> <br>那从本节课出发，微服务也是把服务拆分，一个目的就是可以快速水平扩展，那应该就大量使用RESTFUL风格。 <br> <br>但逻辑和数据终归要碰面，ORM就是二者之间的桥梁，对外展示不同的面孔。 
</div> <div class="_2r3UB1GX_0"> <span>展开</span><i class="iconfont"></i> </div> <div class="_2xNIY4NG_0"> 
<p class="_33BLbmw4_0">作者回复: 感谢回复。<br><br>关于你提到的“概念与逻辑”，做个说明。<br><br>我是这样认为的，学习全栈技术比较忌讳仅仅学习单个的具体技术，之前的文章和回复中我也多次提到过，毕竟技术种类花样繁多，我们还是需要适当做一些抽象，理解一些通用和共性的东西，既包括一些概念，也包括一些套路（模式）。当然，我们需要通过许多例子来理解它们，这是没错的。</p> 
</div> <div class="_1w8H0ktn_0 _2A421P4G_0"> <div class="_2jsFl-X0_0"> <i class="iconfont"></i> 
<span></span> </div> <div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class="">4</span> 
</div> <!----> </div> </div> </div></li> <li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/14/4b/4b/97926cba.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>Luciano李鑫</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2019-09-29 </div> </div> <!----> 
</div> <div> <div class="_3M6kV3zb_0"> 请问，为什么说在贫血模型中，service增是无状态的，而model增是有状态的，这个“状态”是怎么定义的呢？ 
</div> <div class="_2r3UB1GX_0"> <span>展开</span><i class="iconfont"></i> </div> <div class="_2xNIY4NG_0"> 
<p class="_33BLbmw4_0">作者回复: 状态，其实就是数据。<br><br>Service 提供了一系列的过程方法，入参进，结果出，但是 Service 并未发生变化。<br><br>Model 
则相反，可以创建、修改、删除，这就是状态的变化。</p> </div> <div class="_1w8H0ktn_0 _2A421P4G_0"> <div class="_2jsFl-X0_0"> 
<i class="iconfont"></i> <span></span> </div> <div class="_2P4B1Hdm_0"> <i class="iconfont"></i> 
<span class="">2</span> </div> <!----> </div> </div> </div></li> <li class="reJj6Thl_0"><img 
src="https://static001.geekbang.org/account/avatar/00/10/59/1d/c7de1a9b.jpg" class="_2273kGdT_0"> 
<div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> <span>Kada</span> 
<!----> </div> <div class="_1H1Z49Dr_0"> 2019-09-28 </div> </div> <!----> </div> <div> <div 
class="_3M6kV3zb_0"> 这一课程很棒。如果有可运行的github代码示例，动手试几次，会方便理解很多。 <br> <br>自己实现不是不行，但肯定实现过程中遇到其它问题，就跑偏了，速度会慢，效率会低。 
</div> <div class="_2r3UB1GX_0"> <span>展开</span><i class="iconfont"></i> </div> <!----> <div 
class="_1w8H0ktn_0 _2A421P4G_0"> <div class="_2jsFl-X0_0"> <i class="iconfont"></i> <span></span> 
</div> <div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class="">1</span> </div> <!----> 
</div> </div> </div></li> <li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/0f/dd/30/9d36ccaf.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>桃源小盼</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2019-09-27 </div> </div> <!----> 
</div> <div> <div class="_3M6kV3zb_0"> 非关系型数据库的model层，又该怎么设计呢？ </div> <div class="_2r3UB1GX_0"> 
<span>展开</span><i class="iconfont"></i> </div> <!----> <div class="_1w8H0ktn_0 _2A421P4G_0"> 
<div class="_2jsFl-X0_0"> <i class="iconfont"></i> <span></span> </div> <div class="_2P4B1Hdm_0"> 
<i class="iconfont"></i> <span class="">1</span> </div> <!----> </div> </div> </div></li> 
<li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/0f/54/9a/76c0af70.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>每天晒白牙</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2019-09-30 </div> </div> <!----> 
</div> <div> <div class="_3M6kV3zb_0"> MVC架构Model层设计时，有贫血模型和充血模型之分 <br> <br>贫血模型:把逻辑从模型实体中剥离出去，放到无状态的service层中，达到状态和逻辑的解耦(我经历过的Model层设计一般都是这种贫血模型) 
<br> <br>充血模型:既包涵数据又包涵逻辑，具有完备性和自洽性 <br>你在设计Model层中一般采用哪种模型？ <br> <br>设计接口时有一种模式是CQRS(Command 
Query Responsibility Segregation,命令查询职责分离) <br>命令不返回任何结果，但会改变数据的状态，代表写 <br>查询会返回结果，但不会改变数据状态，就是读 
<br>在设计接口时，写接口参数可以是对象，读接口参数可以是Query对象，设置查询条件 <br>CQRS这种模式是将读写解耦了 <br> <br>我现在参与的一个MVC的项目是读写接口没有显性参数，都是从请求中获取参数，对于写操作，会自己组装对象，然后调用DAO层接口，对于读操作，直接给DAO层接口传参查询 
</div> <div class="_2r3UB1GX_0"> <span>展开</span><i class="iconfont"></i> </div> <!----> <div 
class="_1w8H0ktn_0 _2A421P4G_0"> <div class="_2jsFl-X0_0"> <i class="iconfont"></i> <span></span> 
</div> <div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class=""></span> </div> <!----> 
</div> </div> </div></li> <li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/17/e3/45/d4d3c265.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>编程爱好者</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2019-09-28 </div> </div> <!----> 
</div> <div> <div class="_3M6kV3zb_0"> 1.两者都有过，我个人更喜欢贫血模型，职责分明些。 <br>2.既然不知道，可以让服务器来告诉你。类似于tcp中的syn，ack机制，可以为这次请求增加一个消息编号，然后服务器可以通过这个消息编号告诉方法调用者。 
<br>思考作者为什么这么设计课程，感觉很多内容是架构设计里面涉及的内容-权衡与取舍。 </div> <div class="_2r3UB1GX_0"> <span>展开</span><i 
class="iconfont"></i> </div> <div class="_2xNIY4NG_0"> <p class="_33BLbmw4_0">作者回复: 关于第 2 
问，消息编号的想法很好，但是，消息编号是消息编号，而写入数据库对象的 id 是对象的 id，二者并没有必然联系啊。</p> </div> <div class="_1w8H0ktn_0 
_2A421P4G_0"> <div class="_2jsFl-X0_0"> <i class="iconfont"></i> <span></span> </div> <div 
class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class=""></span> </div> <!----> </div> 
</div> </div></li> <li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/11/5a/55/411f95a8.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>我叫徐小晋</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2019-09-27 </div> </div> <!----> 
</div> <div> <div class="_3M6kV3zb_0"> 老师您好： <br>第一个问题：基本上都是使用贫血模型 <br>第二个问题：是不是可以通过查询，然后通过id排序就可以得到最近的数据呢？ 
<br>希望老师指正 </div> <div class="_2r3UB1GX_0"> <span>展开</span><i class="iconfont"></i> </div> 
<div class="_2xNIY4NG_0"> <p class="_33BLbmw4_0">作者回复: 第二个问题不对，因为通过 id 排序的方式，在数据量较大的时候不可行；而且，即便能排序，你也不能保证一定能找到那个你刚插入的数据（考虑两条数据并发写入的情况）。这个问题你可以看一下其它人的答复和回复 
</p> </div> <div class="_1w8H0ktn_0 _2A421P4G_0"> <div class="_2jsFl-X0_0"> <i class="iconfont"></i> 
<span></span> </div> <div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class=""></span> 
</div> <!----> </div> </div> </div></li> <li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/13/db/26/54f2c164.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>靠人品去赢</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2019-09-27 </div> </div> <!----> 
</div> <div> <div class="_3M6kV3zb_0 _3D2NkqD6_0"> 看了这个，我一下理解我们框架提供服务访问的模块为什么命名叫facade。 </div> 
<!----> <!----> <div class="_1w8H0ktn_0 _2A421P4G_0"> <div class="_2jsFl-X0_0"> <i class="iconfont"></i> 
<span></span> </div> <div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class=""></span> 
</div> <!----> </div> </div> </div></li> <li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/10/df/63/cf317827.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>anginiit</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2019-09-27 </div> </div> <!----> 
</div> <div> <div class="_3M6kV3zb_0"> 最近几个项目都是springMvc，使用贫血模式 </div> <div class="_2r3UB1GX_0"> 
<span>展开</span><i class="iconfont"></i> </div> <!----> <div class="_1w8H0ktn_0 _2A421P4G_0"> 
<div class="_2jsFl-X0_0"> <i class="iconfont"></i> <span></span> </div> <div class="_2P4B1Hdm_0"> 
<i class="iconfont"></i> <span class=""></span> </div> <!----> </div> </div> </div></li> <li 
class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/0f/f8/99/8e760987.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>許敲敲</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2019-09-27 </div> </div> <!----> 
</div> <div> <div class="_3M6kV3zb_0"> 前端框架AngularJS遵循的是MVC 模式 </div> <div class="_2r3UB1GX_0"> 
<span>展开</span><i class="iconfont"></i> </div> <!----> <div class="_1w8H0ktn_0 _2A421P4G_0"> 
<div class="_2jsFl-X0_0"> <i class="iconfont"></i> <span></span> </div> <div class="_2P4B1Hdm_0"> 
<i class="iconfont"></i> <span class=""></span> </div> <!----> </div> </div> </div></li>', 
0, 'full_html', 'zh-hans', 41, 41) 
 {executed in 3 msec}
2020-11-19 11:24:55.861 INFO  jdbc.sqltiming Line:373 - select bookfieldt0_.entity_id as entity_i1_8_, bookfieldt0_.bundle as bundle2_8_, bookfieldt0_.delta 
as delta3_8_, bookfieldt0_.langcode as langcode4_8_, bookfieldt0_.revision_id as revision5_8_, 
bookfieldt0_.field_thumb_value as field_th6_8_ from node__field_thumb bookfieldt0_ where bookfieldt0_.entity_id=41 
 {executed in 0 msec}
2020-11-19 11:24:55.861 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------|------------------|
|entity_id |bundle |delta |langcode |revision_id |field_thumb_value |
|----------|-------|------|---------|------------|------------------|
|----------|-------|------|---------|------------|------------------|

2020-11-19 11:24:55.862 INFO  jdbc.sqltiming Line:373 - select bookfieldt0_.entity_id as entity_i1_8_0_, bookfieldt0_.bundle as bundle2_8_0_, bookfieldt0_.delta 
as delta3_8_0_, bookfieldt0_.langcode as langcode4_8_0_, bookfieldt0_.revision_id as revision5_8_0_, 
bookfieldt0_.field_thumb_value as field_th6_8_0_ from node__field_thumb bookfieldt0_ where 
bookfieldt0_.entity_id=41 
 {executed in 0 msec}
2020-11-19 11:24:55.862 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------|------------------|
|entity_id |bundle |delta |langcode |revision_id |field_thumb_value |
|----------|-------|------|---------|------------|------------------|
|----------|-------|------|---------|------------|------------------|

2020-11-19 11:24:55.864 INFO  jdbc.sqltiming Line:373 - insert into node__field_thumb (bundle, delta, langcode, revision_id, field_thumb_value, entity_id) 
values ('book', 0, 'zh-hans', 41, 'https://static001.geekbang.org/resource/image/53/52/53443f155f6340eb23e102ba9479e752.jpg', 
41) 
 {executed in 0 msec}
2020-11-19 11:24:55.867 INFO  jdbc.sqltiming Line:373 - select nodefieldt0_.entity_id as entity_i1_17_0_, nodefieldt0_.bundle as bundle2_17_0_, nodefieldt0_.delta 
as delta3_17_0_, nodefieldt0_.langcode as langcode4_17_0_, nodefieldt0_.revision_id as revision5_17_0_, 
nodefieldt0_.field_thumb_value as field_th6_17_0_ from node_revision__field_thumb nodefieldt0_ 
where nodefieldt0_.entity_id=41 
 {executed in 0 msec}
2020-11-19 11:24:55.867 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------|------------------|
|entity_id |bundle |delta |langcode |revision_id |field_thumb_value |
|----------|-------|------|---------|------------|------------------|
|----------|-------|------|---------|------------|------------------|

2020-11-19 11:24:55.869 INFO  jdbc.sqltiming Line:373 - insert into node_revision__field_thumb (bundle, delta, langcode, revision_id, field_thumb_value, 
entity_id) values ('book', 0, 'zh-hans', 41, 'https://static001.geekbang.org/resource/image/53/52/53443f155f6340eb23e102ba9479e752.jpg', 
41) 
 {executed in 0 msec}
2020-11-19 11:24:55.873 INFO  jdbc.sqltiming Line:373 - select bookfieldf0_.entity_id as entity_i1_5_0_, bookfieldf0_.bundle as bundle2_5_0_, bookfieldf0_.delta 
as delta3_5_0_, bookfieldf0_.field_fenlei_target_id as field_fe4_5_0_, bookfieldf0_.langcode 
as langcode5_5_0_, bookfieldf0_.revision_id as revision6_5_0_ from node__field_fenlei bookfieldf0_ 
where bookfieldf0_.entity_id=41 
 {executed in 1 msec}
2020-11-19 11:24:55.873 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------------|---------|------------|
|entity_id |bundle |delta |field_fenlei_target_id |langcode |revision_id |
|----------|-------|------|-----------------------|---------|------------|
|----------|-------|------|-----------------------|---------|------------|

2020-11-19 11:24:55.875 INFO  jdbc.sqltiming Line:373 - insert into node__field_fenlei (bundle, delta, field_fenlei_target_id, langcode, revision_id, 
entity_id) values ('book', 0, 1, 'zh-hans', 41, 41) 
 {executed in 1 msec}
2020-11-19 11:24:55.883 INFO  jdbc.sqltiming Line:373 - select nodefieldf0_.entity_id as entity_i1_14_0_, nodefieldf0_.bundle as bundle2_14_0_, nodefieldf0_.delta 
as delta3_14_0_, nodefieldf0_.field_fenlei_target_id as field_fe4_14_0_, nodefieldf0_.langcode 
as langcode5_14_0_, nodefieldf0_.revision_id as revision6_14_0_ from node_revision__field_fenlei 
nodefieldf0_ where nodefieldf0_.entity_id=41 
 {executed in 0 msec}
2020-11-19 11:24:55.883 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------------|---------|------------|
|entity_id |bundle |delta |field_fenlei_target_id |langcode |revision_id |
|----------|-------|------|-----------------------|---------|------------|
|----------|-------|------|-----------------------|---------|------------|

2020-11-19 11:24:55.886 INFO  jdbc.sqltiming Line:373 - insert into node_revision__field_fenlei (bundle, delta, field_fenlei_target_id, langcode, revision_id, 
entity_id) values ('book', 0, 1, 'zh-hans', 41, 41) 
 {executed in 2 msec}
2020-11-19 11:25:52.571 INFO  jdbc.sqltiming Line:373 - select bookfieldf0_.entity_id as entity_i1_6_, bookfieldf0_.bundle as bundle2_6_, bookfieldf0_.delta 
as delta3_6_, bookfieldf0_.field_fsid_value as field_fs4_6_, bookfieldf0_.langcode as langcode5_6_, 
bookfieldf0_.revision_id as revision6_6_ from node__field_fsid bookfieldf0_ where bookfieldf0_.field_fsid_value='593988078526750' 
 {executed in 1 msec}
2020-11-19 11:25:52.572 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------|---------|------------|
|entity_id |bundle |delta |field_fsid_value |langcode |revision_id |
|----------|-------|------|-----------------|---------|------------|
|----------|-------|------|-----------------|---------|------------|

2020-11-19 11:25:52.573 INFO  jdbc.sqltiming Line:373 - insert into node_revision (langcode, nid, revision_default, revision_timestamp, revision_uid) 
values ('zh-hans', 0, 1, 1605756352, 1) 
 {executed in 0 msec}
2020-11-19 11:25:52.574 INFO  jdbc.sqltiming Line:373 - getGeneratedKeys on query: insert into node_revision (langcode, nid, revision_default, revision_timestamp, 
revision_uid) values ('zh-hans', 0, 1, 1605756352, 1) 
 {executed in 0 msec}
2020-11-19 11:25:52.575 INFO  jdbc.resultsettable Line:610 - 
|--------------|
|generated_key |
|--------------|
|42            |
|--------------|

2020-11-19 11:25:52.581 INFO  jdbc.sqltiming Line:373 - insert into node (langcode, type, uuid, vid) values ('zh-hans', 'book', '3faf7cab-a26a-457b-8a98-d342a3de196c', 
42) 
 {executed in 1 msec}
2020-11-19 11:25:52.581 INFO  jdbc.sqltiming Line:373 - getGeneratedKeys on query: insert into node (langcode, type, uuid, vid) values ('zh-hans', 
'book', '3faf7cab-a26a-457b-8a98-d342a3de196c', 42) 
 {executed in 0 msec}
2020-11-19 11:25:52.582 INFO  jdbc.resultsettable Line:610 - 
|--------------|
|generated_key |
|--------------|
|42            |
|--------------|

2020-11-19 11:25:52.589 INFO  jdbc.sqltiming Line:373 - update node_revision set langcode='zh-hans', nid=42, revision_default=1, revision_timestamp=1605756352, 
revision_uid=1 where vid=42 
 {executed in 0 msec}
2020-11-19 11:25:52.592 INFO  jdbc.sqltiming Line:373 - select bookfieldf0_.entity_id as entity_i1_6_0_, bookfieldf0_.bundle as bundle2_6_0_, bookfieldf0_.delta 
as delta3_6_0_, bookfieldf0_.field_fsid_value as field_fs4_6_0_, bookfieldf0_.langcode as langcode5_6_0_, 
bookfieldf0_.revision_id as revision6_6_0_ from node__field_fsid bookfieldf0_ where bookfieldf0_.entity_id=42 
 {executed in 1 msec}
2020-11-19 11:25:52.592 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------|---------|------------|
|entity_id |bundle |delta |field_fsid_value |langcode |revision_id |
|----------|-------|------|-----------------|---------|------------|
|----------|-------|------|-----------------|---------|------------|

2020-11-19 11:25:52.594 INFO  jdbc.sqltiming Line:373 - insert into node__field_fsid (bundle, delta, field_fsid_value, langcode, revision_id, entity_id) 
values ('book', 0, '593988078526750', 'zh-hans', 42, 42) 
 {executed in 0 msec}
2020-11-19 11:25:52.597 INFO  jdbc.sqltiming Line:373 - select nodefieldf0_.entity_id as entity_i1_15_0_, nodefieldf0_.bundle as bundle2_15_0_, nodefieldf0_.delta 
as delta3_15_0_, nodefieldf0_.field_fsid_value as field_fs4_15_0_, nodefieldf0_.langcode as 
langcode5_15_0_, nodefieldf0_.revision_id as revision6_15_0_ from node_revision__field_fsid 
nodefieldf0_ where nodefieldf0_.entity_id=42 
 {executed in 0 msec}
2020-11-19 11:25:52.598 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------|---------|------------|
|entity_id |bundle |delta |field_fsid_value |langcode |revision_id |
|----------|-------|------|-----------------|---------|------------|
|----------|-------|------|-----------------|---------|------------|

2020-11-19 11:25:52.600 INFO  jdbc.sqltiming Line:373 - insert into node_revision__field_fsid (bundle, delta, field_fsid_value, langcode, revision_id, 
entity_id) values ('book', 0, '593988078526750', 'zh-hans', 42, 42) 
 {executed in 0 msec}
2020-11-19 11:25:52.603 INFO  jdbc.sqltiming Line:373 - select bookentity0_.nid as nid1_1_, bookentity0_.bid as bid2_1_, bookentity0_.depth as depth3_1_, 
bookentity0_.has_children as has_chil4_1_, bookentity0_.p1 as p5_1_, bookentity0_.p2 as p6_1_, 
bookentity0_.p3 as p7_1_, bookentity0_.p4 as p8_1_, bookentity0_.p5 as p9_1_, bookentity0_.pid 
as pid10_1_, bookentity0_.weight as weight11_1_ from book bookentity0_ where bookentity0_.nid=42 
 {executed in 0 msec}
2020-11-19 11:25:52.604 INFO  jdbc.resultsettable Line:610 - 
|----|----|------|-------------|---|---|---|---|---|----|-------|
|nid |bid |depth |has_children |p1 |p2 |p3 |p4 |p5 |pid |weight |
|----|----|------|-------------|---|---|---|---|---|----|-------|
|----|----|------|-------------|---|---|---|---|---|----|-------|

2020-11-19 11:25:52.604 INFO  jdbc.sqltiming Line:373 - select bookentity0_.nid as nid1_1_0_, bookentity0_.bid as bid2_1_0_, bookentity0_.depth as 
depth3_1_0_, bookentity0_.has_children as has_chil4_1_0_, bookentity0_.p1 as p5_1_0_, bookentity0_.p2 
as p6_1_0_, bookentity0_.p3 as p7_1_0_, bookentity0_.p4 as p8_1_0_, bookentity0_.p5 as p9_1_0_, 
bookentity0_.pid as pid10_1_0_, bookentity0_.weight as weight11_1_0_ from book bookentity0_ 
where bookentity0_.nid=42 
 {executed in 0 msec}
2020-11-19 11:25:52.605 INFO  jdbc.resultsettable Line:610 - 
|----|----|------|-------------|---|---|---|---|---|----|-------|
|nid |bid |depth |has_children |p1 |p2 |p3 |p4 |p5 |pid |weight |
|----|----|------|-------------|---|---|---|---|---|----|-------|
|----|----|------|-------------|---|---|---|---|---|----|-------|

2020-11-19 11:25:52.607 INFO  jdbc.sqltiming Line:373 - insert into book (bid, depth, has_children, p1, p2, p3, p4, p5, pid, weight, nid) values (1, 
3, 0, 1, 35, 42, 0, 0, 35, 0, 42) 
 {executed in 0 msec}
2020-11-19 11:25:52.611 INFO  jdbc.sqltiming Line:373 - select nodebodyen0_.entity_id as entity_i1_3_, nodebodyen0_.body_value as body_val2_3_, nodebodyen0_.body_summary 
as body_sum3_3_, nodebodyen0_.bundle as bundle4_3_, nodebodyen0_.delta as delta5_3_, nodebodyen0_.body_format 
as body_for6_3_, nodebodyen0_.langcode as langcode7_3_, nodebodyen0_.revision_id as revision8_3_ 
from node__body nodebodyen0_ where nodebodyen0_.entity_id=42 
 {executed in 0 msec}
2020-11-19 11:25:52.612 INFO  jdbc.resultsettable Line:610 - 
|----------|-----------|-------------|-------|------|------------|---------|------------|
|entity_id |body_value |body_summary |bundle |delta |body_format |langcode |revision_id |
|----------|-----------|-------------|-------|------|------------|---------|------------|
|----------|-----------|-------------|-------|------|------------|---------|------------|

2020-11-19 11:25:52.613 INFO  jdbc.sqltiming Line:373 - select nodebodyre0_.entity_id as entity_i1_12_0_, nodebodyre0_.body_value as body_val2_12_0_, 
nodebodyre0_.body_summary as body_sum3_12_0_, nodebodyre0_.bundle as bundle4_12_0_, nodebodyre0_.delta 
as delta5_12_0_, nodebodyre0_.body_format as body_for6_12_0_, nodebodyre0_.langcode as langcode7_12_0_, 
nodebodyre0_.revision_id as revision8_12_0_ from node_revision__body nodebodyre0_ where nodebodyre0_.entity_id=42 
 {executed in 0 msec}
2020-11-19 11:25:52.614 INFO  jdbc.resultsettable Line:610 - 
|----------|-----------|-------------|-------|------|------------|---------|------------|
|entity_id |body_value |body_summary |bundle |delta |body_format |langcode |revision_id |
|----------|-----------|-------------|-------|------|------------|---------|------------|
|----------|-----------|-------------|-------|------|------------|---------|------------|

2020-11-19 11:25:52.616 INFO  jdbc.sqltiming Line:373 - insert into node_revision__body (body_value, body_summary, bundle, delta, body_format, langcode, 
revision_id, entity_id) values ('<p>你好，我是四火。</p> <p>欢迎进入第二章，本章我们将围绕 MVC 这个老而弥坚的架构模式展开方方面面的介绍，对于基于 
Web 的全栈工程师来说，它是我们知识森林中心最茂密的一片区域，请继续打起精神，积极学习和思考。</p> <p>无论是在 Web 全栈还是整个软件工程领域，有很多东西在本质上是相通的。比如我们在前一章提到的“权衡”（trade-off），我们后面还会反复提到。MVC 
作为贯穿本章的主题，今天我们就通过它来引出另一个关键词——解耦。</p> <h2>JSP 和 Servlet</h2> <p>在我们谈 MVC 之前，先来讲一对好朋友，JSP 和 Servlet。说它们是好朋友，是因为它们经常一起出现，而事实上，它们还有更为紧密的联系。</p> 
<h3>1. 概念介绍</h3> <p>如果你有使用 Java 作为主要语言开发网站的经历，那么你一定听过别人谈论 JSP 和 Servlet。其中，Servlet 指的是服务端的一种 
Java 写的组件，它可以接收和处理来自浏览器的请求，并生成结果数据，通常它会是 HTML、JSON 等常见格式，写入 HTTP 响应，返回给用户。</p> <p>至于 JSP，它的全称叫做 
Java Server Pages，它允许静态的 HTML 页面插入一些类似于“&lt;% %&gt;”这样的标记（scriptlet），而在这样的标记中，还能以表达式或代码片段的方式，嵌入一些 
Java 代码，在 Web 容器响应 HTTP 请求时，这些标记里的 Java 代码会得到执行，这些标记也会被替换成代码实际执行的结果，嵌入页面中一并返回。这样一来，原本静态的页面，就能动态执行代码，并将执行结果写入页面了。</p><!-- 
[[[read_end]]] --> <ul> <li>第一次运行时，系统会执行编译过程，并且这个过程只会执行一次：JSP 会处理而生成 Servlet 的 Java 代码，接着代码会被编译成字节码（class 
文件），在 Java 虚拟机上运行。</li> <li>之后每次就只需要执行运行过程了，Servlet 能够接受 HTTP 请求，并返回 HTML 文本，最终以 HTTP 响应的方式返回浏览器。</li> 
</ul> <p>这个过程大致可以这样描述：</p> <blockquote> <p>编译过程：JSP 页面 → Java 文件（Servlet）→ class 文件（Servlet）<br> 
运行过程：HTTP 请求 + class 文件（Servlet）→ HTML 文本</p> </blockquote> <h3>2. 动手验证</h3> <p>为了更好地理解这个过程，让我们来实际动手操作一遍。</p> 
<p>首先，你需要安装两样东西，一样是 <a href="https://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html">JDK（Java 
Development Kit）8</a>，是 Java 的软件开发包；另一样是 <a href="https://tomcat.apache.org/download-90.cgi">Apache 
Tomcat 9</a>，它是一款 Web 容器，也是一款 Servlet 容器，因此无论是静态的 HTML 页面，还是动态的 Servlet、JSP，都可以部署在上面运行。</p> 
<p>你可以使用安装包安装，也可以使用包管理工具安装（比如 Mac 下使用 Homebrew 安装）。如果你的电脑上已经安装了，只是版本号不同，也是没有问题的。</p> <p>安装完成以后，打开一个新的命令行窗口，执行一下 
java --version 命令，你应该能看到类似以下信息：</p> <pre style="position: relative;"><code> <table class="hljs-ln"> 
<tbody> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> java -version </div></td> </tr> <tr> <td 
class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> java version "1.8.0_162" </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> Java(TM) SE Runtime Environment (build 
1.8.0_162-b12) </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="4"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
Java HotSpot(TM) 64-Bit Server VM (build 25.162-b12, mixed mode) </div></td> </tr> </tbody> 
</table></code> <div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 </div></pre> 
<p>这里显示了 JRE（Java Runtime Environment，Java 运行时环境）的版本号，以及虚拟机的类型和版本号。</p> <p>同样地，执行 catalina 
version，你也能看到 Tomcat 重要的环境信息：</p> <pre style="position: relative;"><code> <table class="hljs-ln"> 
<tbody> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> catalina version </div></td> </tr> <tr> 
<td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> Using CATALINA_BASE: ... </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> Using CATALINA_HOME: ... </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> Using CATALINA_TMPDIR: ... </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> （以下省略其它的环境变量，以及服务器、操作系统和 Java 虚拟机的版本信息） 
</div></td> </tr> </tbody> </table></code> <div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 
</div></pre> <p>其中，CATALINA_HOME 是 Tomcat 的“家”目录，就是它安装的位置，我们在下面要使用到它。</p> <p>好，现在启动 Tomcat：</p> 
<pre style="position: relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> catalina run </div></td> </tr> </tbody> </table></code> <div class="richcontent-pre-copy"> 
<span class="iconfont"></span>复制代码 </div></pre> <p>在浏览器中访问 <a href="http://localhost:8080/">http://localhost:8080/</a>，你应该能看到 
Tomcat 的主页面：</p> <p><img src="https://static001.geekbang.org/resource/image/2d/22/2d4916452a0970d27d8bcb4cfe7b4422.jpg" 
alt=""></p> <p>接着，我们在 ${CATALINA_HOME}/webapps/ROOT 下建立文件 hello_world.jsp，写入：</p> <pre style="position: 
relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
Hello world! Time: &lt;%= new java.util.Date() %&gt; </div></td> </tr> </tbody> </table></code> 
<div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 </div></pre> <p>接着，访问 
<a href="http://localhost:8080/hello_world.jsp">http://localhost:8080/hello_world.jsp</a>，你将看到类似下面这样的文本：</p> 
<pre style="position: relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> Hello world! Time: Sat Jul 27 20:39:19 PDT 2019 </div></td> </tr> 
</tbody> </table></code> <div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 
</div></pre> <p>嗯，代码被顺利执行了。可是根据我们学到的原理，我们应该能找到这个 JSP 文件生成的 Java 和 class 文件，它们应该藏在某处。没错，现在进入如下目录 
${CATALINA_HOME}/work/Catalina/localhost/ROOT/org/apache/jsp，你可以看到这样几个文件：</p> <pre style="position: 
relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
index_jsp.java </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="2"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
hello_005fworld_jsp.java </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="3"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
index_jsp.class </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="4"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
hello_005fworld_jsp.class </div></td> </tr> </tbody> </table></code> <div class="richcontent-pre-copy"> 
<span class="iconfont"></span>复制代码 </div></pre> <p>你看，前两个 Java 文件就是根据 JSP 生成的 Servlet 的源代码，后两个就是这个 
Servlet 编译后的字节码。以 index 开头的文件就是 Tomcat 启动时你最初看到的主页面，而以 hello 开头的这两个文件则完全来自于我们创建的 hello_world.jsp。</p> 
<p>现在你可以打开 hello_005fworld_jsp.java，如果你有 Java 基础，那么你应该可以看得懂其中的代码。代码中公有类 hello_005fworld_jsp 
继承自 HttpJspBase 类，而如果你查看 <a href="https://tomcat.apache.org/tomcat-9.0-doc/api/org/apache/jasper/runtime/HttpJspBase.html">Tomcat 
的 API 文档</a>，你就会知道，原来它进一步继承自 HttpServlet 类，也就是说，这个自动生成的 Java 文件，就是 Servlet。</p> <p>在 117 行附近，你可以找到我们写在 
JSP 页面中的内容，它们以流的方式被写入了 HTTP 响应：</p> <pre style="position: relative;"><code> <table class="hljs-ln"> 
<tbody> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> out.write("Hello world! Time: "); </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> out.print( new java.util.Date() ); </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> out.write(''\n''); </div></td> </tr> </tbody> 
</table></code> <div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 </div></pre> 
<p>通过自己动手，我想你现在应该更加理解 JSP 的工作原理了。你看，JSP 和 Servlet 并不是完全独立的“两个人”，<strong>JSP 实际工作的时候，是以 Servlet 
的形式存在的</strong>，也就是说，前者其实是可以转化成后者的。</p> <h3>3. 深入理解</h3> <p>好，那么问题来了，我们为什么不直接使用 Servlet，而要设计出 
JSP 这样的技术，让其在实际运行中转化成 Servlet 来执行呢？</p> <p>最重要的原因，<strong>从编程范型的角度来看，JSP 页面的代码多是基于声明式（Declarative），而 
Servlet 的代码则多是基于命令式（Imperative）</strong>，这两种技术适合不同的场景。这两个概念，最初来源于编程范型的分类，声明式编程，是去描述物件的性质，而非给出指令，而命令式编程则恰恰相反。</p> 
<p>比方说，典型的 JSP 页面代码中，只有少数一些 scriptlet，大部分还是 HTML 等格式的文本，而 HTML 文本会告诉浏览器，这里显示一个按钮，那里显示一个文本输入框，随着程序员对代码的阅读，可以形象地在脑海里勾勒出这个页面的样子，这也是声明式代码的一大特点。全栈工程师经常接触到的 
HTML、XML、JSON 和 CSS 等，都是声明式代码。你可能注意到了，这些代码都不是使用编程语言写的，而是使用标记语言写的，但是，编程语言其实也有声明式的，比如 Prolog。</p> 
<p>再来说命令式代码，在 Servlet 中，它会一条一条语句告诉计算机下一步该做什么，这个过程就是命令式的。我们绝大多数的代码都是命令式的。声明式代码是告诉计算机“什么样”，而不关注“怎么做”；命令式代码则是告诉计算机“怎么做”，而不关注“什么样”。</p> 
<p>为什么需要两种方式？因为人的思维是很奇特的，<strong>对于某些问题，使用声明式会更符合直觉，更形象，因而更接近于人类的语言；而另一些问题，则使用命令式，更符合行为步骤的思考模式，更严谨，也更能够预知机器会怎样执行</strong>。</p> 
<p>计算机生来就是遵循命令执行的，因此声明式的 JSP 页面会被转化成一行行命令式的 Servlet 代码，交给计算机执行。可是，你可以想象一下，如果 HTML 那样适合声明式表述的代码，程序员使用命令式来手写会是怎样的一场噩梦——代码将会变成无趣且易错的一行行字符串拼接。</p> 
<h2>MVC 的演进</h2> <p>我想你一定听过 MVC 这种经典的架构模式，它早在 20 世纪 70 年代就被发明出来了，直到现在，互联网上的大多数网站，都是遵从 MVC 实现的，这足以见其旺盛的生命力。MVC 
模式包含这样三层：</p> <ul> <li>控制器（Controller），恰如其名，主要负责请求的处理、校验和转发。</li> <li>视图（View），将内容数据以界面的方式呈现给用户，也捕获和响应用户的操作。</li> 
<li>模型（Model），数据和业务逻辑真正的集散地。</li> </ul> <p>你可能会想，这不够全面啊，这三层之间的交互和数据流动在哪里？别急，MVC 在历史上经历了多次演进，这三层，再加上用户，它们之间的交互模型，是逐渐变化的。哪怕在今天，不同的 
MVC 框架的实现在这一点上也是有区别的。</p> <h3>1. JSP Model 1</h3> <p>JSP Model 1 是整个演化过程中最古老的一种，请求处理的整个过程，包括参数验证、数据访问、业务处理，到页面渲染（或者响应构造），全部都放在 
JSP 页面里面完成。JSP 页面既当爹又当妈，静态页面和嵌入动态表达式的特性，使得它可以很好地容纳声明式代码；而 JSP 的 scriptlet，又完全支持多行 Java 代码的写入，因此它又可以很好地容纳命令式代码。</p> 
<p><img src="https://static001.geekbang.org/resource/image/ea/66/eaaca09b4681bfaa9d36ee1e5998d966.png" 
alt=""></p> <h3>2. JSP Model 2</h3> <p>在 Model 1 中，你可以对 JSP 页面上的内容进行模块和职责的划分，但是由于它们都在一个页面上，物理层面上可以说是完全耦合在一起，因此模块化和单一职责无从谈起。和 
Model 1 相比，Model 2 做了明显的改进。</p> <ul> <li>JSP 只用来做一件事，那就是页面渲染，换言之，JSP 从全能先生转变成了单一职责的页面模板；</li> 
<li>引入 JavaBean 的概念，它将数据库访问等获取数据对象的行为封装了起来，成为业务数据的唯一来源；</li> <li>请求处理和派发的活交到纯 Servlet 手里，它成为了 
MVC 的“大脑”，它知道创建哪个 JavaBean 准备好业务数据，也知道将请求引导到哪个 JSP 页面去做渲染。</li> </ul> <p><img src="https://static001.geekbang.org/resource/image/a0/f8/a0d15b2dc1e87ebac4aea3526edf38f8.png" 
alt=""></p> <p>通过这种方式，你可以看到，原本全能的 JSP 被解耦开了，分成了三层，这三层其实就是 MVC 的 View、Model 和 Controller。于是殊途同归，MVC 
又一次进入了人们的视野，今天的 MVC 框架千差万别，原理上却和这个版本基本一致。</p> <p>上面提到了一个概念 JavaBean，随之还有一个常见的概念 POJO，这是在 Java 
领域中经常听到的两个名词，但有时它们被混用。在此，我想对这两个概念做一个简短的说明。</p> <ul> <li>JavaBean 其实指的是一类特殊的封装对象，这里的“Bean”其实指的就是可重用的封装对象。它的特点是可序列化，包含一个无参构造器，以及遵循统一的 
getter 和 setter 这样的简单命名规则的存取方法。</li> <li>POJO，即 Plain Old Java Object，还是最擅长创建软件概念的 Martin Fowler 
的杰作。它指的就是一个普通和简单的 Java 对象，没有特殊限制，也不和其它类有关联（它不能继承自其它类，不能实现任何接口，也不能被任何注解修饰）。</li> </ul> <p>所以，二者是两个类似的概念，通常认为它们之间具备包含关系，即 
JavaBean 可以视作 POJO 的一种。但它们二者也有一些共性，比如，它们都是可以承载实际数据状态，都定义了较为简单的方法，概念上对它们的限制只停留在外在表现（即内部实现可以不“plain”，可以很复杂，比如 
JavaBean 经常在内部实现中读写数据库）。</p> <h3>3. MVC 的一般化</h3> <p>JSP Model 2 已经具备了 MVC 的基本形态，但是，它却对技术栈有着明确限制——Servlet、JSP 
和 JavaBean。今天我们见到的 MVC，已经和实现技术无关了，并且，在 MVC 三层大体职责确定的基础上，其中的交互和数据流动却是有许多不同的实现方式的。</p> <p>不同的 
MVC 框架下实现的 MVC 架构不同，有时即便是同一个框架，不同的版本之间其 MVC 架构都有差异（比如 ASP.NET MVC），在这里我只介绍最典型的两种情况，如果你在学习的过程中见到其它类型，请不要惊讶，重要的是理解其中的原理。</p> 
<p><strong>第一种：</strong></p> <p><img src="https://static001.geekbang.org/resource/image/93/0f/93c35efa9a76e0bd940d30563188c20f.png" 
alt=""></p> <p>上图是第一种典型情况，这种情况下，用户请求发送给 Controller，而 Controller 是大总管，需要主动调用 Model 层的接口去取得实际需要的数据对象，之后将数据对象发送给需要渲染的 
View，View 渲染之后返回页面给用户。</p> <p>在这种情况下，Controller 往往会比较大，因为它要知道需要调用哪个 Model 的接口获取数据对象，还需要知道要把数据对象发送给哪个 
View 去渲染；View 和 Model 都比较简单纯粹，它们都只需要被动地根据 Controller 的要求完成它们自己的任务就好了。</p> <p><strong>第二种：</strong></p> 
<p><img src="https://static001.geekbang.org/resource/image/73/bb/73950914ac1904faf5c40602f8f9e0bb.png" 
alt=""></p> <p>上图是第二种典型情况，请和第一种比较，注意到了区别没有？这种情况在更新操作中比较常见，Controller 调用 Model 的接口发起数据更新操作，接着就直接转向最终的 
View 去了；View 会调用 Model 去取得经过 Controller 更新操作以后的最新对象，渲染并返回给用户。</p> <p>在这种情况下，Controller 相对就会比较简单，而这里写操作是由 
Controller 发起的，读操作是由 View 发起的，二者的业务对象模型可以不相同，非常适合需要 CQRS（Command Query Responsibility Segregation，命令查询职责分离）的场景，我在 
[第 08 讲] 中会进一步介绍 CQRS。</p> <h3>4. MVC 的变体</h3> <p>MVC 的故事还没完，当它的核心三层和它们的基本职责发生变化，这样的架构模式就不再是严格意义上的 
MVC 了。这里我介绍两种 MVC 的变体：MVP 和 MVVM。</p> <p>MVP 包含的三层为 Model、View 和 Presenter，它往往被用在用户的界面设计当中，和 
MVC 比起来，Controller 被 Presenter 替代了。</p> <ul> <li>Model 的职责没有太大的变化，依然是业务数据的唯一来源。</li> <li>View 
变成了纯粹的被动视图，它被动地响应用户的操作来触发事件，并将其转交给 Presenter；反过来，它的视图界面被动地由 Presenter 来发起更新。</li> <li>Presenter 
变成了 View 和 Model 之间的协调者（Middle-man），它是真正调度逻辑的持有者，会根据事件对 Model 进行状态更新，又在 Model 层发生改变时，相应地更新 
View。</li> </ul> <p><img src="https://static001.geekbang.org/resource/image/b7/f2/b7e11bd5f911392cd2f1d51018b043f2.png" 
alt=""></p> <p>MVVM 是在 MVP 的基础上，将职责最多的 Presenter 替换成了 ViewModel，它实际是一个数据对象的转换器，将从 Model 中取得的数据简化，转换为 
View 可以识别的形式返回给 View。View 和 ViewModel 实行双向绑定，成为命运共同体，即 View 的变化会自动反馈到 ViewModel 中，反之亦然。关于数据双向绑定的知识我还会在 
[第 10 讲] 中详解。</p> <p><img src="https://static001.geekbang.org/resource/image/10/a8/1058b10f1bd38f518b483f7046c294a8.png" 
alt=""></p> <h2>总结思考</h2> <p>今天我们学习了 JSP 和 Servlet 这两个同源技术的本质，它们是分别通过声明式和命令式两种编程范型来解决同一问题的体现，接着围绕解耦这一核心，了解了 
MVC 的几种形式和变体。</p> <ul> <li>JSP Model 1：请求处理的整个过程，全部都耦合在 JSP 页面里面完成；</li> <li>JSP Model 2：MVC 
分别通过 JavaBean、JSP 和 Servlet 解耦成三层；</li> <li>MVC 的常见形式一：数据由 Controller 调用 Model 来准备，并传递给 View 
层；</li> <li>MVC 的常见形式二：Controller 发起对数据的修改，在 View 中查询修改后的数据并展示，二者分别调用 Model；</li> <li>MVP：Presenter 
扮演协调者，对 Model 和 View 实施状态的更新；</li> <li>MVVM：View 和 ViewModel 实行数据的双向绑定，以自动同步状态。</li> </ul> 
<p>好，现在提两个问题，检验一下今天的学习成果：</p> <ul> <li>我们介绍了 JSP 页面和 Servlet 在编程范型上的不同，这两个技术有着不同的使用场景，你能举出例子来说明吗？</li> 
<li>在介绍 MVC 的一般化时，我介绍了两种典型的 MVC 各层调用和数据流向的实现，你工作或学习中使用过哪一种，还是都没使用过，而是第三种？</li> </ul> <p>MVC 
是本章的核心内容，在这之后的几讲中我会对 MVC 逐层分解，今天的内容先打个基础，希望你能真正地理解和消化，这将有助于之后的学习。欢迎你在留言区和我讨论！</p> <h2>扩展阅读</h2> 
<ul> <li>【基础】专栏文章中的例子有时会涉及到 Java 代码，如果你对 Java 很不熟悉，可以参考廖雪峰 Java 教程中“<a href="https://www.liaoxuefeng.com/wiki/1252599548343744/1255883772263712">快速入门</a>”的部分，它很短小，但是覆盖了专栏需要的 
Java 基础知识。</li> <li>【基础】W3Cschool 上的 <a href="https://www.w3cschool.cn/servlet/">Servlet 教程</a>和 
<a href="https://www.w3cschool.cn/jsp/">JSP 教程</a>，如果你对这二者完全不了解，那我推荐你阅读。在较为系统的教程中，这两个算较为简洁的，如果觉得内容较多，可以挑选其中的几个核心章节阅读。</li> 
<li>如果你顺利地将文中介绍的 Tomcat 启动起来了，并且用的也是 9.x 版本，那么你可以直接访问 <a href="http://localhost:8080/examples/">http://localhost:8080/examples/</a>，里面有 
Tomcat 自带的很多典型和带有源码的例子，有 JSP 的例子，也有 Servlet 的例子，还有 WebSocket 的例子（由于我们前一章已经学过了 WebSocket，这里你应该可以较为顺利地学习）。</li> 
</ul> <p><img src="https://static001.geekbang.org/resource/image/11/8b/1181246bbd51ce348d5729696d1dc28b.jpg" 
alt="unpreview"></p>', '', 'book', 0, 'full_html', 'zh-hans', 42, 42) 
 {executed in 0 msec}
2020-11-19 11:25:52.620 INFO  jdbc.sqltiming Line:373 - select nodebodyen0_.entity_id as entity_i1_3_0_, nodebodyen0_.body_value as body_val2_3_0_, 
nodebodyen0_.body_summary as body_sum3_3_0_, nodebodyen0_.bundle as bundle4_3_0_, nodebodyen0_.delta 
as delta5_3_0_, nodebodyen0_.body_format as body_for6_3_0_, nodebodyen0_.langcode as langcode7_3_0_, 
nodebodyen0_.revision_id as revision8_3_0_ from node__body nodebodyen0_ where nodebodyen0_.entity_id=42 
 {executed in 0 msec}
2020-11-19 11:25:52.621 INFO  jdbc.resultsettable Line:610 - 
|----------|-----------|-------------|-------|------|------------|---------|------------|
|entity_id |body_value |body_summary |bundle |delta |body_format |langcode |revision_id |
|----------|-----------|-------------|-------|------|------------|---------|------------|
|----------|-----------|-------------|-------|------|------------|---------|------------|

2020-11-19 11:25:52.623 INFO  jdbc.sqltiming Line:373 - insert into node__body (body_value, body_summary, bundle, delta, body_format, langcode, revision_id, 
entity_id) values ('<p>你好，我是四火。</p> <p>欢迎进入第二章，本章我们将围绕 MVC 这个老而弥坚的架构模式展开方方面面的介绍，对于基于 Web 的全栈工程师来说，它是我们知识森林中心最茂密的一片区域，请继续打起精神，积极学习和思考。</p> 
<p>无论是在 Web 全栈还是整个软件工程领域，有很多东西在本质上是相通的。比如我们在前一章提到的“权衡”（trade-off），我们后面还会反复提到。MVC 作为贯穿本章的主题，今天我们就通过它来引出另一个关键词——解耦。</p> 
<h2>JSP 和 Servlet</h2> <p>在我们谈 MVC 之前，先来讲一对好朋友，JSP 和 Servlet。说它们是好朋友，是因为它们经常一起出现，而事实上，它们还有更为紧密的联系。</p> 
<h3>1. 概念介绍</h3> <p>如果你有使用 Java 作为主要语言开发网站的经历，那么你一定听过别人谈论 JSP 和 Servlet。其中，Servlet 指的是服务端的一种 
Java 写的组件，它可以接收和处理来自浏览器的请求，并生成结果数据，通常它会是 HTML、JSON 等常见格式，写入 HTTP 响应，返回给用户。</p> <p>至于 JSP，它的全称叫做 
Java Server Pages，它允许静态的 HTML 页面插入一些类似于“&lt;% %&gt;”这样的标记（scriptlet），而在这样的标记中，还能以表达式或代码片段的方式，嵌入一些 
Java 代码，在 Web 容器响应 HTTP 请求时，这些标记里的 Java 代码会得到执行，这些标记也会被替换成代码实际执行的结果，嵌入页面中一并返回。这样一来，原本静态的页面，就能动态执行代码，并将执行结果写入页面了。</p><!-- 
[[[read_end]]] --> <ul> <li>第一次运行时，系统会执行编译过程，并且这个过程只会执行一次：JSP 会处理而生成 Servlet 的 Java 代码，接着代码会被编译成字节码（class 
文件），在 Java 虚拟机上运行。</li> <li>之后每次就只需要执行运行过程了，Servlet 能够接受 HTTP 请求，并返回 HTML 文本，最终以 HTTP 响应的方式返回浏览器。</li> 
</ul> <p>这个过程大致可以这样描述：</p> <blockquote> <p>编译过程：JSP 页面 → Java 文件（Servlet）→ class 文件（Servlet）<br> 
运行过程：HTTP 请求 + class 文件（Servlet）→ HTML 文本</p> </blockquote> <h3>2. 动手验证</h3> <p>为了更好地理解这个过程，让我们来实际动手操作一遍。</p> 
<p>首先，你需要安装两样东西，一样是 <a href="https://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html">JDK（Java 
Development Kit）8</a>，是 Java 的软件开发包；另一样是 <a href="https://tomcat.apache.org/download-90.cgi">Apache 
Tomcat 9</a>，它是一款 Web 容器，也是一款 Servlet 容器，因此无论是静态的 HTML 页面，还是动态的 Servlet、JSP，都可以部署在上面运行。</p> 
<p>你可以使用安装包安装，也可以使用包管理工具安装（比如 Mac 下使用 Homebrew 安装）。如果你的电脑上已经安装了，只是版本号不同，也是没有问题的。</p> <p>安装完成以后，打开一个新的命令行窗口，执行一下 
java --version 命令，你应该能看到类似以下信息：</p> <pre style="position: relative;"><code> <table class="hljs-ln"> 
<tbody> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> java -version </div></td> </tr> <tr> <td 
class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> java version "1.8.0_162" </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> Java(TM) SE Runtime Environment (build 
1.8.0_162-b12) </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="4"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
Java HotSpot(TM) 64-Bit Server VM (build 25.162-b12, mixed mode) </div></td> </tr> </tbody> 
</table></code> <div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 </div></pre> 
<p>这里显示了 JRE（Java Runtime Environment，Java 运行时环境）的版本号，以及虚拟机的类型和版本号。</p> <p>同样地，执行 catalina 
version，你也能看到 Tomcat 重要的环境信息：</p> <pre style="position: relative;"><code> <table class="hljs-ln"> 
<tbody> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> catalina version </div></td> </tr> <tr> 
<td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> Using CATALINA_BASE: ... </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> Using CATALINA_HOME: ... </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> Using CATALINA_TMPDIR: ... </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> （以下省略其它的环境变量，以及服务器、操作系统和 Java 虚拟机的版本信息） 
</div></td> </tr> </tbody> </table></code> <div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 
</div></pre> <p>其中，CATALINA_HOME 是 Tomcat 的“家”目录，就是它安装的位置，我们在下面要使用到它。</p> <p>好，现在启动 Tomcat：</p> 
<pre style="position: relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> catalina run </div></td> </tr> </tbody> </table></code> <div class="richcontent-pre-copy"> 
<span class="iconfont"></span>复制代码 </div></pre> <p>在浏览器中访问 <a href="http://localhost:8080/">http://localhost:8080/</a>，你应该能看到 
Tomcat 的主页面：</p> <p><img src="https://static001.geekbang.org/resource/image/2d/22/2d4916452a0970d27d8bcb4cfe7b4422.jpg" 
alt=""></p> <p>接着，我们在 ${CATALINA_HOME}/webapps/ROOT 下建立文件 hello_world.jsp，写入：</p> <pre style="position: 
relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
Hello world! Time: &lt;%= new java.util.Date() %&gt; </div></td> </tr> </tbody> </table></code> 
<div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 </div></pre> <p>接着，访问 
<a href="http://localhost:8080/hello_world.jsp">http://localhost:8080/hello_world.jsp</a>，你将看到类似下面这样的文本：</p> 
<pre style="position: relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> Hello world! Time: Sat Jul 27 20:39:19 PDT 2019 </div></td> </tr> 
</tbody> </table></code> <div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 
</div></pre> <p>嗯，代码被顺利执行了。可是根据我们学到的原理，我们应该能找到这个 JSP 文件生成的 Java 和 class 文件，它们应该藏在某处。没错，现在进入如下目录 
${CATALINA_HOME}/work/Catalina/localhost/ROOT/org/apache/jsp，你可以看到这样几个文件：</p> <pre style="position: 
relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
index_jsp.java </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="2"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
hello_005fworld_jsp.java </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="3"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
index_jsp.class </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="4"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
hello_005fworld_jsp.class </div></td> </tr> </tbody> </table></code> <div class="richcontent-pre-copy"> 
<span class="iconfont"></span>复制代码 </div></pre> <p>你看，前两个 Java 文件就是根据 JSP 生成的 Servlet 的源代码，后两个就是这个 
Servlet 编译后的字节码。以 index 开头的文件就是 Tomcat 启动时你最初看到的主页面，而以 hello 开头的这两个文件则完全来自于我们创建的 hello_world.jsp。</p> 
<p>现在你可以打开 hello_005fworld_jsp.java，如果你有 Java 基础，那么你应该可以看得懂其中的代码。代码中公有类 hello_005fworld_jsp 
继承自 HttpJspBase 类，而如果你查看 <a href="https://tomcat.apache.org/tomcat-9.0-doc/api/org/apache/jasper/runtime/HttpJspBase.html">Tomcat 
的 API 文档</a>，你就会知道，原来它进一步继承自 HttpServlet 类，也就是说，这个自动生成的 Java 文件，就是 Servlet。</p> <p>在 117 行附近，你可以找到我们写在 
JSP 页面中的内容，它们以流的方式被写入了 HTTP 响应：</p> <pre style="position: relative;"><code> <table class="hljs-ln"> 
<tbody> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> out.write("Hello world! Time: "); </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> out.print( new java.util.Date() ); </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> out.write(''\n''); </div></td> </tr> </tbody> 
</table></code> <div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 </div></pre> 
<p>通过自己动手，我想你现在应该更加理解 JSP 的工作原理了。你看，JSP 和 Servlet 并不是完全独立的“两个人”，<strong>JSP 实际工作的时候，是以 Servlet 
的形式存在的</strong>，也就是说，前者其实是可以转化成后者的。</p> <h3>3. 深入理解</h3> <p>好，那么问题来了，我们为什么不直接使用 Servlet，而要设计出 
JSP 这样的技术，让其在实际运行中转化成 Servlet 来执行呢？</p> <p>最重要的原因，<strong>从编程范型的角度来看，JSP 页面的代码多是基于声明式（Declarative），而 
Servlet 的代码则多是基于命令式（Imperative）</strong>，这两种技术适合不同的场景。这两个概念，最初来源于编程范型的分类，声明式编程，是去描述物件的性质，而非给出指令，而命令式编程则恰恰相反。</p> 
<p>比方说，典型的 JSP 页面代码中，只有少数一些 scriptlet，大部分还是 HTML 等格式的文本，而 HTML 文本会告诉浏览器，这里显示一个按钮，那里显示一个文本输入框，随着程序员对代码的阅读，可以形象地在脑海里勾勒出这个页面的样子，这也是声明式代码的一大特点。全栈工程师经常接触到的 
HTML、XML、JSON 和 CSS 等，都是声明式代码。你可能注意到了，这些代码都不是使用编程语言写的，而是使用标记语言写的，但是，编程语言其实也有声明式的，比如 Prolog。</p> 
<p>再来说命令式代码，在 Servlet 中，它会一条一条语句告诉计算机下一步该做什么，这个过程就是命令式的。我们绝大多数的代码都是命令式的。声明式代码是告诉计算机“什么样”，而不关注“怎么做”；命令式代码则是告诉计算机“怎么做”，而不关注“什么样”。</p> 
<p>为什么需要两种方式？因为人的思维是很奇特的，<strong>对于某些问题，使用声明式会更符合直觉，更形象，因而更接近于人类的语言；而另一些问题，则使用命令式，更符合行为步骤的思考模式，更严谨，也更能够预知机器会怎样执行</strong>。</p> 
<p>计算机生来就是遵循命令执行的，因此声明式的 JSP 页面会被转化成一行行命令式的 Servlet 代码，交给计算机执行。可是，你可以想象一下，如果 HTML 那样适合声明式表述的代码，程序员使用命令式来手写会是怎样的一场噩梦——代码将会变成无趣且易错的一行行字符串拼接。</p> 
<h2>MVC 的演进</h2> <p>我想你一定听过 MVC 这种经典的架构模式，它早在 20 世纪 70 年代就被发明出来了，直到现在，互联网上的大多数网站，都是遵从 MVC 实现的，这足以见其旺盛的生命力。MVC 
模式包含这样三层：</p> <ul> <li>控制器（Controller），恰如其名，主要负责请求的处理、校验和转发。</li> <li>视图（View），将内容数据以界面的方式呈现给用户，也捕获和响应用户的操作。</li> 
<li>模型（Model），数据和业务逻辑真正的集散地。</li> </ul> <p>你可能会想，这不够全面啊，这三层之间的交互和数据流动在哪里？别急，MVC 在历史上经历了多次演进，这三层，再加上用户，它们之间的交互模型，是逐渐变化的。哪怕在今天，不同的 
MVC 框架的实现在这一点上也是有区别的。</p> <h3>1. JSP Model 1</h3> <p>JSP Model 1 是整个演化过程中最古老的一种，请求处理的整个过程，包括参数验证、数据访问、业务处理，到页面渲染（或者响应构造），全部都放在 
JSP 页面里面完成。JSP 页面既当爹又当妈，静态页面和嵌入动态表达式的特性，使得它可以很好地容纳声明式代码；而 JSP 的 scriptlet，又完全支持多行 Java 代码的写入，因此它又可以很好地容纳命令式代码。</p> 
<p><img src="https://static001.geekbang.org/resource/image/ea/66/eaaca09b4681bfaa9d36ee1e5998d966.png" 
alt=""></p> <h3>2. JSP Model 2</h3> <p>在 Model 1 中，你可以对 JSP 页面上的内容进行模块和职责的划分，但是由于它们都在一个页面上，物理层面上可以说是完全耦合在一起，因此模块化和单一职责无从谈起。和 
Model 1 相比，Model 2 做了明显的改进。</p> <ul> <li>JSP 只用来做一件事，那就是页面渲染，换言之，JSP 从全能先生转变成了单一职责的页面模板；</li> 
<li>引入 JavaBean 的概念，它将数据库访问等获取数据对象的行为封装了起来，成为业务数据的唯一来源；</li> <li>请求处理和派发的活交到纯 Servlet 手里，它成为了 
MVC 的“大脑”，它知道创建哪个 JavaBean 准备好业务数据，也知道将请求引导到哪个 JSP 页面去做渲染。</li> </ul> <p><img src="https://static001.geekbang.org/resource/image/a0/f8/a0d15b2dc1e87ebac4aea3526edf38f8.png" 
alt=""></p> <p>通过这种方式，你可以看到，原本全能的 JSP 被解耦开了，分成了三层，这三层其实就是 MVC 的 View、Model 和 Controller。于是殊途同归，MVC 
又一次进入了人们的视野，今天的 MVC 框架千差万别，原理上却和这个版本基本一致。</p> <p>上面提到了一个概念 JavaBean，随之还有一个常见的概念 POJO，这是在 Java 
领域中经常听到的两个名词，但有时它们被混用。在此，我想对这两个概念做一个简短的说明。</p> <ul> <li>JavaBean 其实指的是一类特殊的封装对象，这里的“Bean”其实指的就是可重用的封装对象。它的特点是可序列化，包含一个无参构造器，以及遵循统一的 
getter 和 setter 这样的简单命名规则的存取方法。</li> <li>POJO，即 Plain Old Java Object，还是最擅长创建软件概念的 Martin Fowler 
的杰作。它指的就是一个普通和简单的 Java 对象，没有特殊限制，也不和其它类有关联（它不能继承自其它类，不能实现任何接口，也不能被任何注解修饰）。</li> </ul> <p>所以，二者是两个类似的概念，通常认为它们之间具备包含关系，即 
JavaBean 可以视作 POJO 的一种。但它们二者也有一些共性，比如，它们都是可以承载实际数据状态，都定义了较为简单的方法，概念上对它们的限制只停留在外在表现（即内部实现可以不“plain”，可以很复杂，比如 
JavaBean 经常在内部实现中读写数据库）。</p> <h3>3. MVC 的一般化</h3> <p>JSP Model 2 已经具备了 MVC 的基本形态，但是，它却对技术栈有着明确限制——Servlet、JSP 
和 JavaBean。今天我们见到的 MVC，已经和实现技术无关了，并且，在 MVC 三层大体职责确定的基础上，其中的交互和数据流动却是有许多不同的实现方式的。</p> <p>不同的 
MVC 框架下实现的 MVC 架构不同，有时即便是同一个框架，不同的版本之间其 MVC 架构都有差异（比如 ASP.NET MVC），在这里我只介绍最典型的两种情况，如果你在学习的过程中见到其它类型，请不要惊讶，重要的是理解其中的原理。</p> 
<p><strong>第一种：</strong></p> <p><img src="https://static001.geekbang.org/resource/image/93/0f/93c35efa9a76e0bd940d30563188c20f.png" 
alt=""></p> <p>上图是第一种典型情况，这种情况下，用户请求发送给 Controller，而 Controller 是大总管，需要主动调用 Model 层的接口去取得实际需要的数据对象，之后将数据对象发送给需要渲染的 
View，View 渲染之后返回页面给用户。</p> <p>在这种情况下，Controller 往往会比较大，因为它要知道需要调用哪个 Model 的接口获取数据对象，还需要知道要把数据对象发送给哪个 
View 去渲染；View 和 Model 都比较简单纯粹，它们都只需要被动地根据 Controller 的要求完成它们自己的任务就好了。</p> <p><strong>第二种：</strong></p> 
<p><img src="https://static001.geekbang.org/resource/image/73/bb/73950914ac1904faf5c40602f8f9e0bb.png" 
alt=""></p> <p>上图是第二种典型情况，请和第一种比较，注意到了区别没有？这种情况在更新操作中比较常见，Controller 调用 Model 的接口发起数据更新操作，接着就直接转向最终的 
View 去了；View 会调用 Model 去取得经过 Controller 更新操作以后的最新对象，渲染并返回给用户。</p> <p>在这种情况下，Controller 相对就会比较简单，而这里写操作是由 
Controller 发起的，读操作是由 View 发起的，二者的业务对象模型可以不相同，非常适合需要 CQRS（Command Query Responsibility Segregation，命令查询职责分离）的场景，我在 
[第 08 讲] 中会进一步介绍 CQRS。</p> <h3>4. MVC 的变体</h3> <p>MVC 的故事还没完，当它的核心三层和它们的基本职责发生变化，这样的架构模式就不再是严格意义上的 
MVC 了。这里我介绍两种 MVC 的变体：MVP 和 MVVM。</p> <p>MVP 包含的三层为 Model、View 和 Presenter，它往往被用在用户的界面设计当中，和 
MVC 比起来，Controller 被 Presenter 替代了。</p> <ul> <li>Model 的职责没有太大的变化，依然是业务数据的唯一来源。</li> <li>View 
变成了纯粹的被动视图，它被动地响应用户的操作来触发事件，并将其转交给 Presenter；反过来，它的视图界面被动地由 Presenter 来发起更新。</li> <li>Presenter 
变成了 View 和 Model 之间的协调者（Middle-man），它是真正调度逻辑的持有者，会根据事件对 Model 进行状态更新，又在 Model 层发生改变时，相应地更新 
View。</li> </ul> <p><img src="https://static001.geekbang.org/resource/image/b7/f2/b7e11bd5f911392cd2f1d51018b043f2.png" 
alt=""></p> <p>MVVM 是在 MVP 的基础上，将职责最多的 Presenter 替换成了 ViewModel，它实际是一个数据对象的转换器，将从 Model 中取得的数据简化，转换为 
View 可以识别的形式返回给 View。View 和 ViewModel 实行双向绑定，成为命运共同体，即 View 的变化会自动反馈到 ViewModel 中，反之亦然。关于数据双向绑定的知识我还会在 
[第 10 讲] 中详解。</p> <p><img src="https://static001.geekbang.org/resource/image/10/a8/1058b10f1bd38f518b483f7046c294a8.png" 
alt=""></p> <h2>总结思考</h2> <p>今天我们学习了 JSP 和 Servlet 这两个同源技术的本质，它们是分别通过声明式和命令式两种编程范型来解决同一问题的体现，接着围绕解耦这一核心，了解了 
MVC 的几种形式和变体。</p> <ul> <li>JSP Model 1：请求处理的整个过程，全部都耦合在 JSP 页面里面完成；</li> <li>JSP Model 2：MVC 
分别通过 JavaBean、JSP 和 Servlet 解耦成三层；</li> <li>MVC 的常见形式一：数据由 Controller 调用 Model 来准备，并传递给 View 
层；</li> <li>MVC 的常见形式二：Controller 发起对数据的修改，在 View 中查询修改后的数据并展示，二者分别调用 Model；</li> <li>MVP：Presenter 
扮演协调者，对 Model 和 View 实施状态的更新；</li> <li>MVVM：View 和 ViewModel 实行数据的双向绑定，以自动同步状态。</li> </ul> 
<p>好，现在提两个问题，检验一下今天的学习成果：</p> <ul> <li>我们介绍了 JSP 页面和 Servlet 在编程范型上的不同，这两个技术有着不同的使用场景，你能举出例子来说明吗？</li> 
<li>在介绍 MVC 的一般化时，我介绍了两种典型的 MVC 各层调用和数据流向的实现，你工作或学习中使用过哪一种，还是都没使用过，而是第三种？</li> </ul> <p>MVC 
是本章的核心内容，在这之后的几讲中我会对 MVC 逐层分解，今天的内容先打个基础，希望你能真正地理解和消化，这将有助于之后的学习。欢迎你在留言区和我讨论！</p> <h2>扩展阅读</h2> 
<ul> <li>【基础】专栏文章中的例子有时会涉及到 Java 代码，如果你对 Java 很不熟悉，可以参考廖雪峰 Java 教程中“<a href="https://www.liaoxuefeng.com/wiki/1252599548343744/1255883772263712">快速入门</a>”的部分，它很短小，但是覆盖了专栏需要的 
Java 基础知识。</li> <li>【基础】W3Cschool 上的 <a href="https://www.w3cschool.cn/servlet/">Servlet 教程</a>和 
<a href="https://www.w3cschool.cn/jsp/">JSP 教程</a>，如果你对这二者完全不了解，那我推荐你阅读。在较为系统的教程中，这两个算较为简洁的，如果觉得内容较多，可以挑选其中的几个核心章节阅读。</li> 
<li>如果你顺利地将文中介绍的 Tomcat 启动起来了，并且用的也是 9.x 版本，那么你可以直接访问 <a href="http://localhost:8080/examples/">http://localhost:8080/examples/</a>，里面有 
Tomcat 自带的很多典型和带有源码的例子，有 JSP 的例子，也有 Servlet 的例子，还有 WebSocket 的例子（由于我们前一章已经学过了 WebSocket，这里你应该可以较为顺利地学习）。</li> 
</ul> <p><img src="https://static001.geekbang.org/resource/image/11/8b/1181246bbd51ce348d5729696d1dc28b.jpg" 
alt="unpreview"></p>', '', 'book', 0, 'full_html', 'zh-hans', 42, 42) 
 {executed in 1 msec}
2020-11-19 11:25:52.626 INFO  jdbc.sqltiming Line:373 - select nodefiledd0_.nid as nid1_9_, nodefiledd0_.changed as changed2_9_, nodefiledd0_.created 
as created3_9_, nodefiledd0_.default_langcode as default_4_9_, nodefiledd0_.langcode as langcode5_9_, 
nodefiledd0_.promote as promote6_9_, nodefiledd0_.revision_translation_affected as revision7_9_, 
nodefiledd0_.status as status8_9_, nodefiledd0_.sticky as sticky9_9_, nodefiledd0_.title as 
title10_9_, nodefiledd0_.type as type11_9_, nodefiledd0_.uid as uid12_9_, nodefiledd0_.vid 
as vid13_9_ from node_field_data nodefiledd0_ where nodefiledd0_.nid=42 
 {executed in 0 msec}
2020-11-19 11:25:52.627 INFO  jdbc.resultsettable Line:610 - 
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|-----|----|----|
|nid |changed |created |default_langcode |langcode |promote |revision_translation_affected |status |sticky |title |type |uid |vid |
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|-----|----|----|
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|-----|----|----|

2020-11-19 11:25:52.627 INFO  jdbc.sqltiming Line:373 - select nodefieldr0_.nid as nid1_10_0_, nodefieldr0_.changed as changed2_10_0_, nodefieldr0_.created 
as created3_10_0_, nodefieldr0_.default_langcode as default_4_10_0_, nodefieldr0_.langcode 
as langcode5_10_0_, nodefieldr0_.promote as promote6_10_0_, nodefieldr0_.revision_translation_affected 
as revision7_10_0_, nodefieldr0_.status as status8_10_0_, nodefieldr0_.sticky as sticky9_10_0_, 
nodefieldr0_.title as title10_10_0_, nodefieldr0_.uid as uid11_10_0_, nodefieldr0_.vid as vid12_10_0_ 
from node_field_revision nodefieldr0_ where nodefieldr0_.nid=42 
 {executed in 0 msec}
2020-11-19 11:25:52.628 INFO  jdbc.resultsettable Line:610 - 
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|----|----|
|nid |changed |created |default_langcode |langcode |promote |revision_translation_affected |status |sticky |title |uid |vid |
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|----|----|
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|----|----|

2020-11-19 11:25:52.629 INFO  jdbc.sqltiming Line:373 - insert into node_field_revision (changed, created, default_langcode, langcode, promote, revision_translation_affected, 
status, sticky, title, uid, vid, nid) values (1605756352, 1605756352, 1, 'zh-hans', 0, 1, 1, 
0, '07丨解耦是永恒的主题：MVC框架的发展', 1, 42, 42) 
 {executed in 0 msec}
2020-11-19 11:25:52.633 INFO  jdbc.sqltiming Line:373 - select nodefiledd0_.nid as nid1_9_0_, nodefiledd0_.changed as changed2_9_0_, nodefiledd0_.created 
as created3_9_0_, nodefiledd0_.default_langcode as default_4_9_0_, nodefiledd0_.langcode as 
langcode5_9_0_, nodefiledd0_.promote as promote6_9_0_, nodefiledd0_.revision_translation_affected 
as revision7_9_0_, nodefiledd0_.status as status8_9_0_, nodefiledd0_.sticky as sticky9_9_0_, 
nodefiledd0_.title as title10_9_0_, nodefiledd0_.type as type11_9_0_, nodefiledd0_.uid as uid12_9_0_, 
nodefiledd0_.vid as vid13_9_0_ from node_field_data nodefiledd0_ where nodefiledd0_.nid=42 
 {executed in 0 msec}
2020-11-19 11:25:52.633 INFO  jdbc.resultsettable Line:610 - 
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|-----|----|----|
|nid |changed |created |default_langcode |langcode |promote |revision_translation_affected |status |sticky |title |type |uid |vid |
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|-----|----|----|
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|-----|----|----|

2020-11-19 11:25:52.635 INFO  jdbc.sqltiming Line:373 - insert into node_field_data (changed, created, default_langcode, langcode, promote, revision_translation_affected, 
status, sticky, title, type, uid, vid, nid) values (1605756352, 1605756352, 1, 'zh-hans', 0, 
1, 1, 0, '07丨解耦是永恒的主题：MVC框架的发展', 'book', 1, 42, 42) 
 {executed in 0 msec}
2020-11-19 11:25:52.638 INFO  jdbc.sqltiming Line:373 - select bookfieldm0_.entity_id as entity_i1_7_, bookfieldm0_.bundle as bundle2_7_, bookfieldm0_.delta 
as delta3_7_, bookfieldm0_.langcode as langcode4_7_, bookfieldm0_.field_media_value as field_me5_7_, 
bookfieldm0_.revision_id as revision6_7_ from node__field_media bookfieldm0_ where bookfieldm0_.entity_id=42 
 {executed in 0 msec}
2020-11-19 11:25:52.639 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------------|------------|
|entity_id |bundle |delta |langcode |field_media_value |revision_id |
|----------|-------|------|---------|------------------|------------|
|----------|-------|------|---------|------------------|------------|

2020-11-19 11:25:52.639 INFO  jdbc.sqltiming Line:373 - select bookfieldm0_.entity_id as entity_i1_7_0_, bookfieldm0_.bundle as bundle2_7_0_, bookfieldm0_.delta 
as delta3_7_0_, bookfieldm0_.langcode as langcode4_7_0_, bookfieldm0_.field_media_value as 
field_me5_7_0_, bookfieldm0_.revision_id as revision6_7_0_ from node__field_media bookfieldm0_ 
where bookfieldm0_.entity_id=42 
 {executed in 0 msec}
2020-11-19 11:25:52.640 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------------|------------|
|entity_id |bundle |delta |langcode |field_media_value |revision_id |
|----------|-------|------|---------|------------------|------------|
|----------|-------|------|---------|------------------|------------|

2020-11-19 11:25:52.644 INFO  jdbc.sqltiming Line:373 - insert into node__field_media (bundle, delta, langcode, field_media_value, revision_id, entity_id) 
values ('book', 0, 'zh-hans', 'https://qdall01.baidupcs.com/file/4467ef425a3ff4cab5343908e38a2de3?bkt=en-c58a217c5b5bf7b2307dc41ca6469bc169bf79d9f036d6204eadabaaff30a939498c3a0b4c12fbc6&fid=3757516097-778750-288192342754707&time=1605756351&sign=FDTAXUGERLQlBHSKfWqir-DCb740ccc5511e5e8fedcff06b081203-%2F2%2BUK3c3yPBaGHEo4EgxoJldug8%3D&to=92&size=16438360&sta_dx=16438360&sta_cs=3920&sta_ft=m4a&sta_ct=7&sta_mt=0&fm2=MH%2CYangquan%2CAnywhere%2C%2Cshanghai%2Cct&ctime=1569821512&mtime=1605754778&resv0=-1&resv1=0&resv2=rlim&resv3=2&resv4=16438360&vuk=3757516097&iv=0&htype=&randtype=em&newver=1&newfm=1&secfm=1&flow_ver=3&pkey=en-4948af1157b1f464b8da6802a091a25d07b918fc4989e3ee8638a04e72482457ac5b6d53292fd416&sl=76480590&expires=8h&rt=pr&r=488562781&mlogid=7502328319190296410&vbdid=2247232042&fin=07%E4%B8%A8%E8%A7%A3%E8%80%A6%E6%98%AF%E6%B0%B8%E6%81%92%E7%9A%84%E4%B8%BB%E9%A2%98%EF%BC%9AMVC%E6%A1%86%E6%9E%B6%E7%9A%84%E5%8F%91%E5%B1%95.m4a&bflag=92,34-92&rtype=1&dp-logid=7502328319190296410&dp-callid=0.1.1&hps=1&tsl=80&csl=80&fsl=-1&csign=yVzLQPCt4DblfMLqd2BCjd2RnqQ%3D&so=0&ut=6&uter=0&serv=0&uc=1458616558&ti=16c8192e22ea32f52e7376ae9fe5efdd3e21578a28ea1f3d&hflag=30&adg=c_15d187590626c675056c89c8026cfc17&reqlabel=778750_l_1bf9445f27094ab64c9f1cb0bdf7ccfa_-1_dd2c452b8e51a0c74130d7cf32c48a2d&ibp=1&by=themis&filename=07%E4%B8%A8%E8%A7%A3%E8%80%A6%E6%98%AF%E6%B0%B8%E6%81%92%E7%9A%84%E4%B8%BB%E9%A2%98%EF%BC%9AMVC%E6%A1%86%E6%9E%B6%E7%9A%84%E5%8F%91%E5%B1%95.m4a', 
42, 42) 
 {executed in 3 msec}
2020-11-19 11:25:52.650 INFO  jdbc.sqltiming Line:373 - select nodefieldm0_.entity_id as entity_i1_16_0_, nodefieldm0_.bundle as bundle2_16_0_, nodefieldm0_.delta 
as delta3_16_0_, nodefieldm0_.langcode as langcode4_16_0_, nodefieldm0_.field_media_value as 
field_me5_16_0_, nodefieldm0_.revision_id as revision6_16_0_ from node_revision__field_media 
nodefieldm0_ where nodefieldm0_.entity_id=42 
 {executed in 0 msec}
2020-11-19 11:25:52.651 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------------|------------|
|entity_id |bundle |delta |langcode |field_media_value |revision_id |
|----------|-------|------|---------|------------------|------------|
|----------|-------|------|---------|------------------|------------|

2020-11-19 11:25:52.655 INFO  jdbc.sqltiming Line:373 - insert into node_revision__field_media (bundle, delta, langcode, field_media_value, revision_id, 
entity_id) values ('book', 0, 'zh-hans', 'https://qdall01.baidupcs.com/file/4467ef425a3ff4cab5343908e38a2de3?bkt=en-c58a217c5b5bf7b2307dc41ca6469bc169bf79d9f036d6204eadabaaff30a939498c3a0b4c12fbc6&fid=3757516097-778750-288192342754707&time=1605756351&sign=FDTAXUGERLQlBHSKfWqir-DCb740ccc5511e5e8fedcff06b081203-%2F2%2BUK3c3yPBaGHEo4EgxoJldug8%3D&to=92&size=16438360&sta_dx=16438360&sta_cs=3920&sta_ft=m4a&sta_ct=7&sta_mt=0&fm2=MH%2CYangquan%2CAnywhere%2C%2Cshanghai%2Cct&ctime=1569821512&mtime=1605754778&resv0=-1&resv1=0&resv2=rlim&resv3=2&resv4=16438360&vuk=3757516097&iv=0&htype=&randtype=em&newver=1&newfm=1&secfm=1&flow_ver=3&pkey=en-4948af1157b1f464b8da6802a091a25d07b918fc4989e3ee8638a04e72482457ac5b6d53292fd416&sl=76480590&expires=8h&rt=pr&r=488562781&mlogid=7502328319190296410&vbdid=2247232042&fin=07%E4%B8%A8%E8%A7%A3%E8%80%A6%E6%98%AF%E6%B0%B8%E6%81%92%E7%9A%84%E4%B8%BB%E9%A2%98%EF%BC%9AMVC%E6%A1%86%E6%9E%B6%E7%9A%84%E5%8F%91%E5%B1%95.m4a&bflag=92,34-92&rtype=1&dp-logid=7502328319190296410&dp-callid=0.1.1&hps=1&tsl=80&csl=80&fsl=-1&csign=yVzLQPCt4DblfMLqd2BCjd2RnqQ%3D&so=0&ut=6&uter=0&serv=0&uc=1458616558&ti=16c8192e22ea32f52e7376ae9fe5efdd3e21578a28ea1f3d&hflag=30&adg=c_15d187590626c675056c89c8026cfc17&reqlabel=778750_l_1bf9445f27094ab64c9f1cb0bdf7ccfa_-1_dd2c452b8e51a0c74130d7cf32c48a2d&ibp=1&by=themis&filename=07%E4%B8%A8%E8%A7%A3%E8%80%A6%E6%98%AF%E6%B0%B8%E6%81%92%E7%9A%84%E4%B8%BB%E9%A2%98%EF%BC%9AMVC%E6%A1%86%E6%9E%B6%E7%9A%84%E5%8F%91%E5%B1%95.m4a', 
42, 42) 
 {executed in 3 msec}
2020-11-19 11:25:52.659 INFO  jdbc.sqltiming Line:373 - select bookfieldc0_.entity_id as entity_i1_4_, bookfieldc0_.bundle as bundle2_4_, bookfieldc0_.field_comment_value 
as field_co3_4_, bookfieldc0_.delta as delta4_4_, bookfieldc0_.field_comment_format as field_co5_4_, 
bookfieldc0_.langcode as langcode6_4_, bookfieldc0_.revision_id as revision7_4_ from node__field_comment 
bookfieldc0_ where bookfieldc0_.entity_id=42 
 {executed in 0 msec}
2020-11-19 11:25:52.659 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|--------------------|------|---------------------|---------|------------|
|entity_id |bundle |field_comment_value |delta |field_comment_format |langcode |revision_id |
|----------|-------|--------------------|------|---------------------|---------|------------|
|----------|-------|--------------------|------|---------------------|---------|------------|

2020-11-19 11:25:52.660 INFO  jdbc.sqltiming Line:373 - select bookfieldc0_.entity_id as entity_i1_4_0_, bookfieldc0_.bundle as bundle2_4_0_, bookfieldc0_.field_comment_value 
as field_co3_4_0_, bookfieldc0_.delta as delta4_4_0_, bookfieldc0_.field_comment_format as 
field_co5_4_0_, bookfieldc0_.langcode as langcode6_4_0_, bookfieldc0_.revision_id as revision7_4_0_ 
from node__field_comment bookfieldc0_ where bookfieldc0_.entity_id=42 
 {executed in 0 msec}
2020-11-19 11:25:52.660 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|--------------------|------|---------------------|---------|------------|
|entity_id |bundle |field_comment_value |delta |field_comment_format |langcode |revision_id |
|----------|-------|--------------------|------|---------------------|---------|------------|
|----------|-------|--------------------|------|---------------------|---------|------------|

2020-11-19 11:25:52.665 INFO  jdbc.sqltiming Line:373 - insert into node__field_comment (bundle, field_comment_value, delta, field_comment_format, 
langcode, revision_id, entity_id) values ('book', '<li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/14/4b/4b/97926cba.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>Luciano李鑫</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2019-09-29 </div> </div> <!----> 
</div> <div> <div class="_3M6kV3zb_0"> 请问MVP和MVC的主要区别体现在什么地方 </div> <div class="_2r3UB1GX_0"> 
<span>展开</span><i class="iconfont"></i> </div> <div class="_2xNIY4NG_0"> <p class="_33BLbmw4_0">作者回复: 
MVP 是 MVC 的变体，功能、层次和应用场景有所区别，下面是我的归纳，供参考。<br><br>简单说，对于 MVC 来说，Controller 层次上完全独立于 View，它可以跨多个视图、可以决定视图路由，更多存放的是控制逻辑，应用较为广泛，但多数在服务端代码中；<br><br>而对于 
MVP 来说，Presenter 则其实是和 View 在相似的层次上，协调并把 Model 的数据绑定到指定 View 上去，主要用在纯粹 UI 的实现中。</p> </div> 
<div class="_1w8H0ktn_0 _2A421P4G_0"> <div class="_2jsFl-X0_0"> <i class="iconfont"></i> <span></span> 
</div> <div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class="">1</span> </div> <!----> 
</div> </div> </div></li> <li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/16/bc/25/1c92a90c.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>tt</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2019-09-25 </div> </div> <!----> </div> 
<div> <div class="_3M6kV3zb_0"> M-VVM就是M-automated-VP么？因为view和viewModel成为了命运共同体。 <br> <br>或者说VVM是“别人实现了，我直接用”的VP？比如Vue或React 
</div> <div class="_2r3UB1GX_0"> <span>展开</span><i class="iconfont"></i> </div> <div class="_2xNIY4NG_0"> 
<p class="_33BLbmw4_0">作者回复: 第一条大致可以按你说的理解，但是第二条做个说明：VVM 和 MVVM 的区别在于实际的数据源头 M 消失了，因为有时候我们不需要它，比如设计一个可重用的组件。</p> 
</div> <div class="_1w8H0ktn_0 _2A421P4G_0"> <div class="_2jsFl-X0_0"> <i class="iconfont"></i> 
<span></span> </div> <div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class="">1</span> 
</div> <!----> </div> </div> </div></li> <li class="reJj6Thl_0"><img src="https://wx.qlogo.cn/mmopen/vi_32/DYAIOgq83eqLcWH3mSPmhjrs1aGL4b3TqI7xDqWWibM4nYFrRlp0z7FNSWaJz0mqovrgIA7ibmrPt8zRScSfRaqQ/132" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>易儿易</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2019-09-30 </div> </div> <!----> 
</div> <div> <div class="_3M6kV3zb_0"> 很奇怪，我输入catalina run命令后是这个样子的jdk1.8,tomcat9,catalina 
run 多次重复输入都是一样，不知道是哪里出的问题，只能通过startup.bat启动 <br>Usage: catalina ( commands ... ) <br>commands: 
<br>&nbsp;&nbsp;debug Start Catalina in a debugger <br>&nbsp;&nbsp;debug -security Debug Catalina 
with a security manager <br>&nbsp;&nbsp;jpda start Start Catalina under JPDA debugger <br>&nbsp;&nbsp;run 
Start Catalina in the current window <br>&nbsp;&nbsp;run -security Start in the current window 
with security manager <br>&nbsp;&nbsp;start Start Catalina in a separate window <br>&nbsp;&nbsp;start 
-security Start in a separate window with security manager <br>&nbsp;&nbsp;stop Stop Catalina 
<br>&nbsp;&nbsp;configtest Run a basic syntax check on server.xml <br>&nbsp;&nbsp;version What 
version of tomcat are you running? </div> <div class="_2r3UB1GX_0"> <span>展开</span><i class="iconfont"></i> 
</div> <div class="_2xNIY4NG_0"> <p class="_33BLbmw4_0">作者回复: 从你描述来看，能运行 *.bat，是 Windows 系统吧，那就通过 
startup.bat 启动吧。</p> </div> <div class="_1w8H0ktn_0 _2A421P4G_0"> <div class="_2jsFl-X0_0"> 
<i class="iconfont"></i> <span></span> </div> <div class="_2P4B1Hdm_0"> <i class="iconfont"></i> 
<span class=""></span> </div> <!----> </div> </div> </div></li> <li class="reJj6Thl_0"><img 
src="https://static001.geekbang.org/account/avatar/00/12/f6/c3/926f2da9.jpg" class="_2273kGdT_0"> 
<div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> <span>Paradise丶朽木</span> 
<!----> </div> <div class="_1H1Z49Dr_0"> 2019-09-27 </div> </div> <!----> </div> <div> <div 
class="_3M6kV3zb_0"> 刚入职时写过一点jsp，后来是freemaker模板引擎，现在是前后端分离~回答下第二个问题，我觉得fremaker那种方式应该是典型的第一种，controller负责接收请求，处理参数，调用service查询数据，封装成ModelAndView，再由freemaker渲染页面返回。 
</div> <div class="_2r3UB1GX_0"> <span>展开</span><i class="iconfont"></i> </div> <div class="_2xNIY4NG_0"> 
<p class="_33BLbmw4_0">作者回复: 👍</p> </div> <div class="_1w8H0ktn_0 _2A421P4G_0"> <div class="_2jsFl-X0_0"> 
<i class="iconfont"></i> <span></span> </div> <div class="_2P4B1Hdm_0"> <i class="iconfont"></i> 
<span class=""></span> </div> <!----> </div> </div> </div></li> <li class="reJj6Thl_0"><img 
src="https://static001.geekbang.org/account/avatar/00/10/59/1d/c7de1a9b.jpg" class="_2273kGdT_0"> 
<div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> <span>Kada</span> 
<!----> </div> <div class="_1H1Z49Dr_0"> 2019-09-26 </div> </div> <!----> </div> <div> <div 
class="_3M6kV3zb_0"> Vue: MVVM -&gt; model view viewmodel <br>React: MVC -&gt; model view controller 
<br>Angular: MVW -&gt; model view whatever </div> <div class="_2r3UB1GX_0"> <span>展开</span><i 
class="iconfont"></i> </div> <!----> <div class="_1w8H0ktn_0 _2A421P4G_0"> <div class="_2jsFl-X0_0"> 
<i class="iconfont"></i> <span></span> </div> <div class="_2P4B1Hdm_0"> <i class="iconfont"></i> 
<span class=""></span> </div> <!----> </div> </div> </div></li> <li class="reJj6Thl_0"><img 
src="https://static001.geekbang.org/account/avatar/00/14/34/df/64e3d533.jpg" class="_2273kGdT_0"> 
<div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> <span>leslie</span> 
<!----> </div> <div class="_1H1Z49Dr_0"> 2019-09-26 </div> </div> <!----> </div> <div> <div 
class="_3M6kV3zb_0 _3D2NkqD6_0"> 先打卡吧：这块确实是我的弱项，趁着马上到来的长假好好把MVC这块补了、、、 </div> <!----> <!----> 
<div class="_1w8H0ktn_0 _2A421P4G_0"> <div class="_2jsFl-X0_0"> <i class="iconfont"></i> <span></span> 
</div> <div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class=""></span> </div> <!----> 
</div> </div> </div></li> <li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/13/db/26/54f2c164.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>靠人品去赢</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2019-09-25 </div> </div> <!----> 
</div> <div> <div class="_3M6kV3zb_0"> 之前就曾听人说过JSP是一种特殊的Servlet，现在看说的不完全正确，JSP会转化成一种特殊的servlet返回请求结果。 
</div> <div class="_2r3UB1GX_0"> <span>展开</span><i class="iconfont"></i> </div> <div class="_2xNIY4NG_0"> 
<p class="_33BLbmw4_0">作者回复: 嗯，最重要的是理解原理。不严格地讲，这些说法都没问题。</p> </div> <div class="_1w8H0ktn_0 
_2A421P4G_0"> <div class="_2jsFl-X0_0"> <i class="iconfont"></i> <span></span> </div> <div 
class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class=""></span> </div> <!----> </div> 
</div> </div></li> <li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/0f/dd/30/9d36ccaf.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>桃源小盼</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2019-09-25 </div> </div> <!----> 
</div> <div> <div class="_3M6kV3zb_0"> 接口服务里有service，它属于view层还是model层？ </div> <div class="_2r3UB1GX_0"> 
<span>展开</span><i class="iconfont"></i> </div> <div class="_2xNIY4NG_0"> <p class="_33BLbmw4_0">作者回复: 
你的描述有一些简单，什么是“接口服务里有service”？</p> </div> <div class="_1w8H0ktn_0 _2A421P4G_0"> <div class="_2jsFl-X0_0"> 
<i class="iconfont"></i> <span></span> </div> <div class="_2P4B1Hdm_0"> <i class="iconfont"></i> 
<span class=""></span> </div> <!----> </div> </div> </div></li>', 0, 'full_html', 'zh-hans', 
42, 42) 
 {executed in 3 msec}
2020-11-19 11:25:52.669 INFO  jdbc.sqltiming Line:373 - select nodefieldc0_.entity_id as entity_i1_13_0_, nodefieldc0_.bundle as bundle2_13_0_, nodefieldc0_.field_comment_value 
as field_co3_13_0_, nodefieldc0_.delta as delta4_13_0_, nodefieldc0_.field_comment_format as 
field_co5_13_0_, nodefieldc0_.langcode as langcode6_13_0_, nodefieldc0_.revision_id as revision7_13_0_ 
from node_revision__field_comment nodefieldc0_ where nodefieldc0_.entity_id=42 
 {executed in 0 msec}
2020-11-19 11:25:52.669 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|--------------------|------|---------------------|---------|------------|
|entity_id |bundle |field_comment_value |delta |field_comment_format |langcode |revision_id |
|----------|-------|--------------------|------|---------------------|---------|------------|
|----------|-------|--------------------|------|---------------------|---------|------------|

2020-11-19 11:25:52.674 INFO  jdbc.sqltiming Line:373 - insert into node_revision__field_comment (bundle, field_comment_value, delta, field_comment_format, 
langcode, revision_id, entity_id) values ('book', '<li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/14/4b/4b/97926cba.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>Luciano李鑫</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2019-09-29 </div> </div> <!----> 
</div> <div> <div class="_3M6kV3zb_0"> 请问MVP和MVC的主要区别体现在什么地方 </div> <div class="_2r3UB1GX_0"> 
<span>展开</span><i class="iconfont"></i> </div> <div class="_2xNIY4NG_0"> <p class="_33BLbmw4_0">作者回复: 
MVP 是 MVC 的变体，功能、层次和应用场景有所区别，下面是我的归纳，供参考。<br><br>简单说，对于 MVC 来说，Controller 层次上完全独立于 View，它可以跨多个视图、可以决定视图路由，更多存放的是控制逻辑，应用较为广泛，但多数在服务端代码中；<br><br>而对于 
MVP 来说，Presenter 则其实是和 View 在相似的层次上，协调并把 Model 的数据绑定到指定 View 上去，主要用在纯粹 UI 的实现中。</p> </div> 
<div class="_1w8H0ktn_0 _2A421P4G_0"> <div class="_2jsFl-X0_0"> <i class="iconfont"></i> <span></span> 
</div> <div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class="">1</span> </div> <!----> 
</div> </div> </div></li> <li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/16/bc/25/1c92a90c.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>tt</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2019-09-25 </div> </div> <!----> </div> 
<div> <div class="_3M6kV3zb_0"> M-VVM就是M-automated-VP么？因为view和viewModel成为了命运共同体。 <br> <br>或者说VVM是“别人实现了，我直接用”的VP？比如Vue或React 
</div> <div class="_2r3UB1GX_0"> <span>展开</span><i class="iconfont"></i> </div> <div class="_2xNIY4NG_0"> 
<p class="_33BLbmw4_0">作者回复: 第一条大致可以按你说的理解，但是第二条做个说明：VVM 和 MVVM 的区别在于实际的数据源头 M 消失了，因为有时候我们不需要它，比如设计一个可重用的组件。</p> 
</div> <div class="_1w8H0ktn_0 _2A421P4G_0"> <div class="_2jsFl-X0_0"> <i class="iconfont"></i> 
<span></span> </div> <div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class="">1</span> 
</div> <!----> </div> </div> </div></li> <li class="reJj6Thl_0"><img src="https://wx.qlogo.cn/mmopen/vi_32/DYAIOgq83eqLcWH3mSPmhjrs1aGL4b3TqI7xDqWWibM4nYFrRlp0z7FNSWaJz0mqovrgIA7ibmrPt8zRScSfRaqQ/132" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>易儿易</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2019-09-30 </div> </div> <!----> 
</div> <div> <div class="_3M6kV3zb_0"> 很奇怪，我输入catalina run命令后是这个样子的jdk1.8,tomcat9,catalina 
run 多次重复输入都是一样，不知道是哪里出的问题，只能通过startup.bat启动 <br>Usage: catalina ( commands ... ) <br>commands: 
<br>&nbsp;&nbsp;debug Start Catalina in a debugger <br>&nbsp;&nbsp;debug -security Debug Catalina 
with a security manager <br>&nbsp;&nbsp;jpda start Start Catalina under JPDA debugger <br>&nbsp;&nbsp;run 
Start Catalina in the current window <br>&nbsp;&nbsp;run -security Start in the current window 
with security manager <br>&nbsp;&nbsp;start Start Catalina in a separate window <br>&nbsp;&nbsp;start 
-security Start in a separate window with security manager <br>&nbsp;&nbsp;stop Stop Catalina 
<br>&nbsp;&nbsp;configtest Run a basic syntax check on server.xml <br>&nbsp;&nbsp;version What 
version of tomcat are you running? </div> <div class="_2r3UB1GX_0"> <span>展开</span><i class="iconfont"></i> 
</div> <div class="_2xNIY4NG_0"> <p class="_33BLbmw4_0">作者回复: 从你描述来看，能运行 *.bat，是 Windows 系统吧，那就通过 
startup.bat 启动吧。</p> </div> <div class="_1w8H0ktn_0 _2A421P4G_0"> <div class="_2jsFl-X0_0"> 
<i class="iconfont"></i> <span></span> </div> <div class="_2P4B1Hdm_0"> <i class="iconfont"></i> 
<span class=""></span> </div> <!----> </div> </div> </div></li> <li class="reJj6Thl_0"><img 
src="https://static001.geekbang.org/account/avatar/00/12/f6/c3/926f2da9.jpg" class="_2273kGdT_0"> 
<div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> <span>Paradise丶朽木</span> 
<!----> </div> <div class="_1H1Z49Dr_0"> 2019-09-27 </div> </div> <!----> </div> <div> <div 
class="_3M6kV3zb_0"> 刚入职时写过一点jsp，后来是freemaker模板引擎，现在是前后端分离~回答下第二个问题，我觉得fremaker那种方式应该是典型的第一种，controller负责接收请求，处理参数，调用service查询数据，封装成ModelAndView，再由freemaker渲染页面返回。 
</div> <div class="_2r3UB1GX_0"> <span>展开</span><i class="iconfont"></i> </div> <div class="_2xNIY4NG_0"> 
<p class="_33BLbmw4_0">作者回复: 👍</p> </div> <div class="_1w8H0ktn_0 _2A421P4G_0"> <div class="_2jsFl-X0_0"> 
<i class="iconfont"></i> <span></span> </div> <div class="_2P4B1Hdm_0"> <i class="iconfont"></i> 
<span class=""></span> </div> <!----> </div> </div> </div></li> <li class="reJj6Thl_0"><img 
src="https://static001.geekbang.org/account/avatar/00/10/59/1d/c7de1a9b.jpg" class="_2273kGdT_0"> 
<div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> <span>Kada</span> 
<!----> </div> <div class="_1H1Z49Dr_0"> 2019-09-26 </div> </div> <!----> </div> <div> <div 
class="_3M6kV3zb_0"> Vue: MVVM -&gt; model view viewmodel <br>React: MVC -&gt; model view controller 
<br>Angular: MVW -&gt; model view whatever </div> <div class="_2r3UB1GX_0"> <span>展开</span><i 
class="iconfont"></i> </div> <!----> <div class="_1w8H0ktn_0 _2A421P4G_0"> <div class="_2jsFl-X0_0"> 
<i class="iconfont"></i> <span></span> </div> <div class="_2P4B1Hdm_0"> <i class="iconfont"></i> 
<span class=""></span> </div> <!----> </div> </div> </div></li> <li class="reJj6Thl_0"><img 
src="https://static001.geekbang.org/account/avatar/00/14/34/df/64e3d533.jpg" class="_2273kGdT_0"> 
<div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> <span>leslie</span> 
<!----> </div> <div class="_1H1Z49Dr_0"> 2019-09-26 </div> </div> <!----> </div> <div> <div 
class="_3M6kV3zb_0 _3D2NkqD6_0"> 先打卡吧：这块确实是我的弱项，趁着马上到来的长假好好把MVC这块补了、、、 </div> <!----> <!----> 
<div class="_1w8H0ktn_0 _2A421P4G_0"> <div class="_2jsFl-X0_0"> <i class="iconfont"></i> <span></span> 
</div> <div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class=""></span> </div> <!----> 
</div> </div> </div></li> <li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/13/db/26/54f2c164.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>靠人品去赢</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2019-09-25 </div> </div> <!----> 
</div> <div> <div class="_3M6kV3zb_0"> 之前就曾听人说过JSP是一种特殊的Servlet，现在看说的不完全正确，JSP会转化成一种特殊的servlet返回请求结果。 
</div> <div class="_2r3UB1GX_0"> <span>展开</span><i class="iconfont"></i> </div> <div class="_2xNIY4NG_0"> 
<p class="_33BLbmw4_0">作者回复: 嗯，最重要的是理解原理。不严格地讲，这些说法都没问题。</p> </div> <div class="_1w8H0ktn_0 
_2A421P4G_0"> <div class="_2jsFl-X0_0"> <i class="iconfont"></i> <span></span> </div> <div 
class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class=""></span> </div> <!----> </div> 
</div> </div></li> <li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/0f/dd/30/9d36ccaf.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>桃源小盼</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2019-09-25 </div> </div> <!----> 
</div> <div> <div class="_3M6kV3zb_0"> 接口服务里有service，它属于view层还是model层？ </div> <div class="_2r3UB1GX_0"> 
<span>展开</span><i class="iconfont"></i> </div> <div class="_2xNIY4NG_0"> <p class="_33BLbmw4_0">作者回复: 
你的描述有一些简单，什么是“接口服务里有service”？</p> </div> <div class="_1w8H0ktn_0 _2A421P4G_0"> <div class="_2jsFl-X0_0"> 
<i class="iconfont"></i> <span></span> </div> <div class="_2P4B1Hdm_0"> <i class="iconfont"></i> 
<span class=""></span> </div> <!----> </div> </div> </div></li>', 0, 'full_html', 'zh-hans', 
42, 42) 
 {executed in 3 msec}
2020-11-19 11:25:52.677 INFO  jdbc.sqltiming Line:373 - select bookfieldt0_.entity_id as entity_i1_8_, bookfieldt0_.bundle as bundle2_8_, bookfieldt0_.delta 
as delta3_8_, bookfieldt0_.langcode as langcode4_8_, bookfieldt0_.revision_id as revision5_8_, 
bookfieldt0_.field_thumb_value as field_th6_8_ from node__field_thumb bookfieldt0_ where bookfieldt0_.entity_id=42 
 {executed in 0 msec}
2020-11-19 11:25:52.678 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------|------------------|
|entity_id |bundle |delta |langcode |revision_id |field_thumb_value |
|----------|-------|------|---------|------------|------------------|
|----------|-------|------|---------|------------|------------------|

2020-11-19 11:25:52.678 INFO  jdbc.sqltiming Line:373 - select bookfieldt0_.entity_id as entity_i1_8_0_, bookfieldt0_.bundle as bundle2_8_0_, bookfieldt0_.delta 
as delta3_8_0_, bookfieldt0_.langcode as langcode4_8_0_, bookfieldt0_.revision_id as revision5_8_0_, 
bookfieldt0_.field_thumb_value as field_th6_8_0_ from node__field_thumb bookfieldt0_ where 
bookfieldt0_.entity_id=42 
 {executed in 0 msec}
2020-11-19 11:25:52.679 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------|------------------|
|entity_id |bundle |delta |langcode |revision_id |field_thumb_value |
|----------|-------|------|---------|------------|------------------|
|----------|-------|------|---------|------------|------------------|

2020-11-19 11:25:52.680 INFO  jdbc.sqltiming Line:373 - insert into node__field_thumb (bundle, delta, langcode, revision_id, field_thumb_value, entity_id) 
values ('book', 0, 'zh-hans', 42, 'https://static001.geekbang.org/resource/image/94/7a/94f63acaca4ba59f4096fb66bbed477a.jpg', 
42) 
 {executed in 0 msec}
2020-11-19 11:25:52.684 INFO  jdbc.sqltiming Line:373 - select nodefieldt0_.entity_id as entity_i1_17_0_, nodefieldt0_.bundle as bundle2_17_0_, nodefieldt0_.delta 
as delta3_17_0_, nodefieldt0_.langcode as langcode4_17_0_, nodefieldt0_.revision_id as revision5_17_0_, 
nodefieldt0_.field_thumb_value as field_th6_17_0_ from node_revision__field_thumb nodefieldt0_ 
where nodefieldt0_.entity_id=42 
 {executed in 0 msec}
2020-11-19 11:25:52.684 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------|------------------|
|entity_id |bundle |delta |langcode |revision_id |field_thumb_value |
|----------|-------|------|---------|------------|------------------|
|----------|-------|------|---------|------------|------------------|

2020-11-19 11:25:52.686 INFO  jdbc.sqltiming Line:373 - insert into node_revision__field_thumb (bundle, delta, langcode, revision_id, field_thumb_value, 
entity_id) values ('book', 0, 'zh-hans', 42, 'https://static001.geekbang.org/resource/image/94/7a/94f63acaca4ba59f4096fb66bbed477a.jpg', 
42) 
 {executed in 0 msec}
2020-11-19 11:25:52.689 INFO  jdbc.sqltiming Line:373 - select bookfieldf0_.entity_id as entity_i1_5_0_, bookfieldf0_.bundle as bundle2_5_0_, bookfieldf0_.delta 
as delta3_5_0_, bookfieldf0_.field_fenlei_target_id as field_fe4_5_0_, bookfieldf0_.langcode 
as langcode5_5_0_, bookfieldf0_.revision_id as revision6_5_0_ from node__field_fenlei bookfieldf0_ 
where bookfieldf0_.entity_id=42 
 {executed in 0 msec}
2020-11-19 11:25:52.690 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------------|---------|------------|
|entity_id |bundle |delta |field_fenlei_target_id |langcode |revision_id |
|----------|-------|------|-----------------------|---------|------------|
|----------|-------|------|-----------------------|---------|------------|

2020-11-19 11:25:52.691 INFO  jdbc.sqltiming Line:373 - insert into node__field_fenlei (bundle, delta, field_fenlei_target_id, langcode, revision_id, 
entity_id) values ('book', 0, 1, 'zh-hans', 42, 42) 
 {executed in 0 msec}
2020-11-19 11:25:52.695 INFO  jdbc.sqltiming Line:373 - select nodefieldf0_.entity_id as entity_i1_14_0_, nodefieldf0_.bundle as bundle2_14_0_, nodefieldf0_.delta 
as delta3_14_0_, nodefieldf0_.field_fenlei_target_id as field_fe4_14_0_, nodefieldf0_.langcode 
as langcode5_14_0_, nodefieldf0_.revision_id as revision6_14_0_ from node_revision__field_fenlei 
nodefieldf0_ where nodefieldf0_.entity_id=42 
 {executed in 0 msec}
2020-11-19 11:25:52.695 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------------|---------|------------|
|entity_id |bundle |delta |field_fenlei_target_id |langcode |revision_id |
|----------|-------|------|-----------------------|---------|------------|
|----------|-------|------|-----------------------|---------|------------|

2020-11-19 11:25:52.697 INFO  jdbc.sqltiming Line:373 - insert into node_revision__field_fenlei (bundle, delta, field_fenlei_target_id, langcode, revision_id, 
entity_id) values ('book', 0, 1, 'zh-hans', 42, 42) 
 {executed in 0 msec}
2020-11-19 11:25:52.701 INFO  jdbc.sqltiming Line:373 - select bookfieldf0_.entity_id as entity_i1_6_, bookfieldf0_.bundle as bundle2_6_, bookfieldf0_.delta 
as delta3_6_, bookfieldf0_.field_fsid_value as field_fs4_6_, bookfieldf0_.langcode as langcode5_6_, 
bookfieldf0_.revision_id as revision6_6_ from node__field_fsid bookfieldf0_ where bookfieldf0_.field_fsid_value='317580959279640' 
 {executed in 1 msec}
2020-11-19 11:25:52.701 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------|---------|------------|
|entity_id |bundle |delta |field_fsid_value |langcode |revision_id |
|----------|-------|------|-----------------|---------|------------|
|----------|-------|------|-----------------|---------|------------|

2020-11-19 11:25:52.702 INFO  jdbc.sqltiming Line:373 - insert into node_revision (langcode, nid, revision_default, revision_timestamp, revision_uid) 
values ('zh-hans', 0, 1, 1605756352, 1) 
 {executed in 0 msec}
2020-11-19 11:25:52.702 INFO  jdbc.sqltiming Line:373 - getGeneratedKeys on query: insert into node_revision (langcode, nid, revision_default, revision_timestamp, 
revision_uid) values ('zh-hans', 0, 1, 1605756352, 1) 
 {executed in 0 msec}
2020-11-19 11:25:52.702 INFO  jdbc.resultsettable Line:610 - 
|--------------|
|generated_key |
|--------------|
|43            |
|--------------|

2020-11-19 11:25:52.705 INFO  jdbc.sqltiming Line:373 - insert into node (langcode, type, uuid, vid) values ('zh-hans', 'book', '6556060b-22a2-467c-9461-7038c93b8ed0', 
43) 
 {executed in 0 msec}
2020-11-19 11:25:52.706 INFO  jdbc.sqltiming Line:373 - getGeneratedKeys on query: insert into node (langcode, type, uuid, vid) values ('zh-hans', 
'book', '6556060b-22a2-467c-9461-7038c93b8ed0', 43) 
 {executed in 0 msec}
2020-11-19 11:25:52.706 INFO  jdbc.resultsettable Line:610 - 
|--------------|
|generated_key |
|--------------|
|43            |
|--------------|

2020-11-19 11:25:52.711 INFO  jdbc.sqltiming Line:373 - update node_revision set langcode='zh-hans', nid=43, revision_default=1, revision_timestamp=1605756352, 
revision_uid=1 where vid=43 
 {executed in 1 msec}
2020-11-19 11:25:52.713 INFO  jdbc.sqltiming Line:373 - select bookfieldf0_.entity_id as entity_i1_6_0_, bookfieldf0_.bundle as bundle2_6_0_, bookfieldf0_.delta 
as delta3_6_0_, bookfieldf0_.field_fsid_value as field_fs4_6_0_, bookfieldf0_.langcode as langcode5_6_0_, 
bookfieldf0_.revision_id as revision6_6_0_ from node__field_fsid bookfieldf0_ where bookfieldf0_.entity_id=43 
 {executed in 0 msec}
2020-11-19 11:25:52.714 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------|---------|------------|
|entity_id |bundle |delta |field_fsid_value |langcode |revision_id |
|----------|-------|------|-----------------|---------|------------|
|----------|-------|------|-----------------|---------|------------|

2020-11-19 11:25:52.715 INFO  jdbc.sqltiming Line:373 - insert into node__field_fsid (bundle, delta, field_fsid_value, langcode, revision_id, entity_id) 
values ('book', 0, '317580959279640', 'zh-hans', 43, 43) 
 {executed in 0 msec}
2020-11-19 11:25:52.718 INFO  jdbc.sqltiming Line:373 - select nodefieldf0_.entity_id as entity_i1_15_0_, nodefieldf0_.bundle as bundle2_15_0_, nodefieldf0_.delta 
as delta3_15_0_, nodefieldf0_.field_fsid_value as field_fs4_15_0_, nodefieldf0_.langcode as 
langcode5_15_0_, nodefieldf0_.revision_id as revision6_15_0_ from node_revision__field_fsid 
nodefieldf0_ where nodefieldf0_.entity_id=43 
 {executed in 0 msec}
2020-11-19 11:25:52.718 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------|---------|------------|
|entity_id |bundle |delta |field_fsid_value |langcode |revision_id |
|----------|-------|------|-----------------|---------|------------|
|----------|-------|------|-----------------|---------|------------|

2020-11-19 11:25:52.719 INFO  jdbc.sqltiming Line:373 - insert into node_revision__field_fsid (bundle, delta, field_fsid_value, langcode, revision_id, 
entity_id) values ('book', 0, '317580959279640', 'zh-hans', 43, 43) 
 {executed in 0 msec}
2020-11-19 11:25:52.722 INFO  jdbc.sqltiming Line:373 - select bookentity0_.nid as nid1_1_, bookentity0_.bid as bid2_1_, bookentity0_.depth as depth3_1_, 
bookentity0_.has_children as has_chil4_1_, bookentity0_.p1 as p5_1_, bookentity0_.p2 as p6_1_, 
bookentity0_.p3 as p7_1_, bookentity0_.p4 as p8_1_, bookentity0_.p5 as p9_1_, bookentity0_.pid 
as pid10_1_, bookentity0_.weight as weight11_1_ from book bookentity0_ where bookentity0_.nid=43 
 {executed in 0 msec}
2020-11-19 11:25:52.722 INFO  jdbc.resultsettable Line:610 - 
|----|----|------|-------------|---|---|---|---|---|----|-------|
|nid |bid |depth |has_children |p1 |p2 |p3 |p4 |p5 |pid |weight |
|----|----|------|-------------|---|---|---|---|---|----|-------|
|----|----|------|-------------|---|---|---|---|---|----|-------|

2020-11-19 11:25:52.723 INFO  jdbc.sqltiming Line:373 - select bookentity0_.nid as nid1_1_0_, bookentity0_.bid as bid2_1_0_, bookentity0_.depth as 
depth3_1_0_, bookentity0_.has_children as has_chil4_1_0_, bookentity0_.p1 as p5_1_0_, bookentity0_.p2 
as p6_1_0_, bookentity0_.p3 as p7_1_0_, bookentity0_.p4 as p8_1_0_, bookentity0_.p5 as p9_1_0_, 
bookentity0_.pid as pid10_1_0_, bookentity0_.weight as weight11_1_0_ from book bookentity0_ 
where bookentity0_.nid=43 
 {executed in 0 msec}
2020-11-19 11:25:52.723 INFO  jdbc.resultsettable Line:610 - 
|----|----|------|-------------|---|---|---|---|---|----|-------|
|nid |bid |depth |has_children |p1 |p2 |p3 |p4 |p5 |pid |weight |
|----|----|------|-------------|---|---|---|---|---|----|-------|
|----|----|------|-------------|---|---|---|---|---|----|-------|

2020-11-19 11:25:52.725 INFO  jdbc.sqltiming Line:373 - insert into book (bid, depth, has_children, p1, p2, p3, p4, p5, pid, weight, nid) values (1, 
2, 1, 1, 43, 0, 0, 0, 1, 0, 43) 
 {executed in 1 msec}
2020-11-19 11:25:52.727 INFO  jdbc.sqltiming Line:373 - select nodebodyen0_.entity_id as entity_i1_3_, nodebodyen0_.body_value as body_val2_3_, nodebodyen0_.body_summary 
as body_sum3_3_, nodebodyen0_.bundle as bundle4_3_, nodebodyen0_.delta as delta5_3_, nodebodyen0_.body_format 
as body_for6_3_, nodebodyen0_.langcode as langcode7_3_, nodebodyen0_.revision_id as revision8_3_ 
from node__body nodebodyen0_ where nodebodyen0_.entity_id=43 
 {executed in 0 msec}
2020-11-19 11:25:52.728 INFO  jdbc.resultsettable Line:610 - 
|----------|-----------|-------------|-------|------|------------|---------|------------|
|entity_id |body_value |body_summary |bundle |delta |body_format |langcode |revision_id |
|----------|-----------|-------------|-------|------|------------|---------|------------|
|----------|-----------|-------------|-------|------|------------|---------|------------|

2020-11-19 11:25:52.728 INFO  jdbc.sqltiming Line:373 - select nodebodyre0_.entity_id as entity_i1_12_0_, nodebodyre0_.body_value as body_val2_12_0_, 
nodebodyre0_.body_summary as body_sum3_12_0_, nodebodyre0_.bundle as bundle4_12_0_, nodebodyre0_.delta 
as delta5_12_0_, nodebodyre0_.body_format as body_for6_12_0_, nodebodyre0_.langcode as langcode7_12_0_, 
nodebodyre0_.revision_id as revision8_12_0_ from node_revision__body nodebodyre0_ where nodebodyre0_.entity_id=43 
 {executed in 0 msec}
2020-11-19 11:25:52.729 INFO  jdbc.resultsettable Line:610 - 
|----------|-----------|-------------|-------|------|------------|---------|------------|
|entity_id |body_value |body_summary |bundle |delta |body_format |langcode |revision_id |
|----------|-----------|-------------|-------|------|------------|---------|------------|
|----------|-----------|-------------|-------|------|------------|---------|------------|

2020-11-19 11:25:52.730 INFO  jdbc.sqltiming Line:373 - insert into node_revision__body (body_value, body_summary, bundle, delta, body_format, langcode, 
revision_id, entity_id) values ('', '', 'book', 0, 'full_html', 'zh-hans', 43, 43) 
 {executed in 0 msec}
2020-11-19 11:25:52.733 INFO  jdbc.sqltiming Line:373 - select nodebodyen0_.entity_id as entity_i1_3_0_, nodebodyen0_.body_value as body_val2_3_0_, 
nodebodyen0_.body_summary as body_sum3_3_0_, nodebodyen0_.bundle as bundle4_3_0_, nodebodyen0_.delta 
as delta5_3_0_, nodebodyen0_.body_format as body_for6_3_0_, nodebodyen0_.langcode as langcode7_3_0_, 
nodebodyen0_.revision_id as revision8_3_0_ from node__body nodebodyen0_ where nodebodyen0_.entity_id=43 
 {executed in 0 msec}
2020-11-19 11:25:52.733 INFO  jdbc.resultsettable Line:610 - 
|----------|-----------|-------------|-------|------|------------|---------|------------|
|entity_id |body_value |body_summary |bundle |delta |body_format |langcode |revision_id |
|----------|-----------|-------------|-------|------|------------|---------|------------|
|----------|-----------|-------------|-------|------|------------|---------|------------|

2020-11-19 11:25:52.735 INFO  jdbc.sqltiming Line:373 - insert into node__body (body_value, body_summary, bundle, delta, body_format, langcode, revision_id, 
entity_id) values ('', '', 'book', 0, 'full_html', 'zh-hans', 43, 43) 
 {executed in 0 msec}
2020-11-19 11:25:52.737 INFO  jdbc.sqltiming Line:373 - select nodefiledd0_.nid as nid1_9_, nodefiledd0_.changed as changed2_9_, nodefiledd0_.created 
as created3_9_, nodefiledd0_.default_langcode as default_4_9_, nodefiledd0_.langcode as langcode5_9_, 
nodefiledd0_.promote as promote6_9_, nodefiledd0_.revision_translation_affected as revision7_9_, 
nodefiledd0_.status as status8_9_, nodefiledd0_.sticky as sticky9_9_, nodefiledd0_.title as 
title10_9_, nodefiledd0_.type as type11_9_, nodefiledd0_.uid as uid12_9_, nodefiledd0_.vid 
as vid13_9_ from node_field_data nodefiledd0_ where nodefiledd0_.nid=43 
 {executed in 0 msec}
2020-11-19 11:25:52.738 INFO  jdbc.resultsettable Line:610 - 
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|-----|----|----|
|nid |changed |created |default_langcode |langcode |promote |revision_translation_affected |status |sticky |title |type |uid |vid |
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|-----|----|----|
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|-----|----|----|

2020-11-19 11:25:52.738 INFO  jdbc.sqltiming Line:373 - select nodefieldr0_.nid as nid1_10_0_, nodefieldr0_.changed as changed2_10_0_, nodefieldr0_.created 
as created3_10_0_, nodefieldr0_.default_langcode as default_4_10_0_, nodefieldr0_.langcode 
as langcode5_10_0_, nodefieldr0_.promote as promote6_10_0_, nodefieldr0_.revision_translation_affected 
as revision7_10_0_, nodefieldr0_.status as status8_10_0_, nodefieldr0_.sticky as sticky9_10_0_, 
nodefieldr0_.title as title10_10_0_, nodefieldr0_.uid as uid11_10_0_, nodefieldr0_.vid as vid12_10_0_ 
from node_field_revision nodefieldr0_ where nodefieldr0_.nid=43 
 {executed in 0 msec}
2020-11-19 11:25:52.739 INFO  jdbc.resultsettable Line:610 - 
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|----|----|
|nid |changed |created |default_langcode |langcode |promote |revision_translation_affected |status |sticky |title |uid |vid |
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|----|----|
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|----|----|

2020-11-19 11:25:52.740 INFO  jdbc.sqltiming Line:373 - insert into node_field_revision (changed, created, default_langcode, langcode, promote, revision_translation_affected, 
status, sticky, title, uid, vid, nid) values (1605756352, 1605756352, 1, 'zh-hans', 0, 1, 1, 
0, '01丨第一章 网络协议和 Web 接口 (6讲)', 1, 43, 43) 
 {executed in 0 msec}
2020-11-19 11:25:52.744 INFO  jdbc.sqltiming Line:373 - select nodefiledd0_.nid as nid1_9_0_, nodefiledd0_.changed as changed2_9_0_, nodefiledd0_.created 
as created3_9_0_, nodefiledd0_.default_langcode as default_4_9_0_, nodefiledd0_.langcode as 
langcode5_9_0_, nodefiledd0_.promote as promote6_9_0_, nodefiledd0_.revision_translation_affected 
as revision7_9_0_, nodefiledd0_.status as status8_9_0_, nodefiledd0_.sticky as sticky9_9_0_, 
nodefiledd0_.title as title10_9_0_, nodefiledd0_.type as type11_9_0_, nodefiledd0_.uid as uid12_9_0_, 
nodefiledd0_.vid as vid13_9_0_ from node_field_data nodefiledd0_ where nodefiledd0_.nid=43 
 {executed in 0 msec}
2020-11-19 11:25:52.745 INFO  jdbc.resultsettable Line:610 - 
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|-----|----|----|
|nid |changed |created |default_langcode |langcode |promote |revision_translation_affected |status |sticky |title |type |uid |vid |
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|-----|----|----|
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|-----|----|----|

2020-11-19 11:25:52.746 INFO  jdbc.sqltiming Line:373 - insert into node_field_data (changed, created, default_langcode, langcode, promote, revision_translation_affected, 
status, sticky, title, type, uid, vid, nid) values (1605756352, 1605756352, 1, 'zh-hans', 0, 
1, 1, 0, '01丨第一章 网络协议和 Web 接口 (6讲)', 'book', 1, 43, 43) 
 {executed in 0 msec}
2020-11-19 11:25:52.751 INFO  jdbc.sqltiming Line:373 - select bookfieldm0_.entity_id as entity_i1_7_, bookfieldm0_.bundle as bundle2_7_, bookfieldm0_.delta 
as delta3_7_, bookfieldm0_.langcode as langcode4_7_, bookfieldm0_.field_media_value as field_me5_7_, 
bookfieldm0_.revision_id as revision6_7_ from node__field_media bookfieldm0_ where bookfieldm0_.entity_id=43 
 {executed in 1 msec}
2020-11-19 11:25:52.751 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------------|------------|
|entity_id |bundle |delta |langcode |field_media_value |revision_id |
|----------|-------|------|---------|------------------|------------|
|----------|-------|------|---------|------------------|------------|

2020-11-19 11:25:52.752 INFO  jdbc.sqltiming Line:373 - select bookfieldm0_.entity_id as entity_i1_7_0_, bookfieldm0_.bundle as bundle2_7_0_, bookfieldm0_.delta 
as delta3_7_0_, bookfieldm0_.langcode as langcode4_7_0_, bookfieldm0_.field_media_value as 
field_me5_7_0_, bookfieldm0_.revision_id as revision6_7_0_ from node__field_media bookfieldm0_ 
where bookfieldm0_.entity_id=43 
 {executed in 0 msec}
2020-11-19 11:25:52.752 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------------|------------|
|entity_id |bundle |delta |langcode |field_media_value |revision_id |
|----------|-------|------|---------|------------------|------------|
|----------|-------|------|---------|------------------|------------|

2020-11-19 11:25:52.754 INFO  jdbc.sqltiming Line:373 - insert into node__field_media (bundle, delta, langcode, field_media_value, revision_id, entity_id) 
values ('book', 0, 'zh-hans', '', 43, 43) 
 {executed in 1 msec}
2020-11-19 11:25:52.758 INFO  jdbc.sqltiming Line:373 - select nodefieldm0_.entity_id as entity_i1_16_0_, nodefieldm0_.bundle as bundle2_16_0_, nodefieldm0_.delta 
as delta3_16_0_, nodefieldm0_.langcode as langcode4_16_0_, nodefieldm0_.field_media_value as 
field_me5_16_0_, nodefieldm0_.revision_id as revision6_16_0_ from node_revision__field_media 
nodefieldm0_ where nodefieldm0_.entity_id=43 
 {executed in 0 msec}
2020-11-19 11:25:52.759 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------------|------------|
|entity_id |bundle |delta |langcode |field_media_value |revision_id |
|----------|-------|------|---------|------------------|------------|
|----------|-------|------|---------|------------------|------------|

2020-11-19 11:25:52.761 INFO  jdbc.sqltiming Line:373 - insert into node_revision__field_media (bundle, delta, langcode, field_media_value, revision_id, 
entity_id) values ('book', 0, 'zh-hans', '', 43, 43) 
 {executed in 1 msec}
2020-11-19 11:25:52.764 INFO  jdbc.sqltiming Line:373 - select bookfieldc0_.entity_id as entity_i1_4_, bookfieldc0_.bundle as bundle2_4_, bookfieldc0_.field_comment_value 
as field_co3_4_, bookfieldc0_.delta as delta4_4_, bookfieldc0_.field_comment_format as field_co5_4_, 
bookfieldc0_.langcode as langcode6_4_, bookfieldc0_.revision_id as revision7_4_ from node__field_comment 
bookfieldc0_ where bookfieldc0_.entity_id=43 
 {executed in 1 msec}
2020-11-19 11:25:52.764 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|--------------------|------|---------------------|---------|------------|
|entity_id |bundle |field_comment_value |delta |field_comment_format |langcode |revision_id |
|----------|-------|--------------------|------|---------------------|---------|------------|
|----------|-------|--------------------|------|---------------------|---------|------------|

2020-11-19 11:25:52.765 INFO  jdbc.sqltiming Line:373 - select bookfieldc0_.entity_id as entity_i1_4_0_, bookfieldc0_.bundle as bundle2_4_0_, bookfieldc0_.field_comment_value 
as field_co3_4_0_, bookfieldc0_.delta as delta4_4_0_, bookfieldc0_.field_comment_format as 
field_co5_4_0_, bookfieldc0_.langcode as langcode6_4_0_, bookfieldc0_.revision_id as revision7_4_0_ 
from node__field_comment bookfieldc0_ where bookfieldc0_.entity_id=43 
 {executed in 1 msec}
2020-11-19 11:25:52.765 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|--------------------|------|---------------------|---------|------------|
|entity_id |bundle |field_comment_value |delta |field_comment_format |langcode |revision_id |
|----------|-------|--------------------|------|---------------------|---------|------------|
|----------|-------|--------------------|------|---------------------|---------|------------|

2020-11-19 11:25:52.766 INFO  jdbc.sqltiming Line:373 - insert into node__field_comment (bundle, field_comment_value, delta, field_comment_format, 
langcode, revision_id, entity_id) values ('book', '', 0, 'full_html', 'zh-hans', 43, 43) 
 {executed in 0 msec}
2020-11-19 11:25:52.773 INFO  jdbc.sqltiming Line:373 - select nodefieldc0_.entity_id as entity_i1_13_0_, nodefieldc0_.bundle as bundle2_13_0_, nodefieldc0_.field_comment_value 
as field_co3_13_0_, nodefieldc0_.delta as delta4_13_0_, nodefieldc0_.field_comment_format as 
field_co5_13_0_, nodefieldc0_.langcode as langcode6_13_0_, nodefieldc0_.revision_id as revision7_13_0_ 
from node_revision__field_comment nodefieldc0_ where nodefieldc0_.entity_id=43 
 {executed in 0 msec}
2020-11-19 11:25:52.774 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|--------------------|------|---------------------|---------|------------|
|entity_id |bundle |field_comment_value |delta |field_comment_format |langcode |revision_id |
|----------|-------|--------------------|------|---------------------|---------|------------|
|----------|-------|--------------------|------|---------------------|---------|------------|

2020-11-19 11:25:52.775 INFO  jdbc.sqltiming Line:373 - insert into node_revision__field_comment (bundle, field_comment_value, delta, field_comment_format, 
langcode, revision_id, entity_id) values ('book', '', 0, 'full_html', 'zh-hans', 43, 43) 
 {executed in 0 msec}
2020-11-19 11:25:52.782 INFO  jdbc.sqltiming Line:373 - select bookfieldt0_.entity_id as entity_i1_8_, bookfieldt0_.bundle as bundle2_8_, bookfieldt0_.delta 
as delta3_8_, bookfieldt0_.langcode as langcode4_8_, bookfieldt0_.revision_id as revision5_8_, 
bookfieldt0_.field_thumb_value as field_th6_8_ from node__field_thumb bookfieldt0_ where bookfieldt0_.entity_id=43 
 {executed in 0 msec}
2020-11-19 11:25:52.782 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------|------------------|
|entity_id |bundle |delta |langcode |revision_id |field_thumb_value |
|----------|-------|------|---------|------------|------------------|
|----------|-------|------|---------|------------|------------------|

2020-11-19 11:25:52.783 INFO  jdbc.sqltiming Line:373 - select bookfieldt0_.entity_id as entity_i1_8_0_, bookfieldt0_.bundle as bundle2_8_0_, bookfieldt0_.delta 
as delta3_8_0_, bookfieldt0_.langcode as langcode4_8_0_, bookfieldt0_.revision_id as revision5_8_0_, 
bookfieldt0_.field_thumb_value as field_th6_8_0_ from node__field_thumb bookfieldt0_ where 
bookfieldt0_.entity_id=43 
 {executed in 0 msec}
2020-11-19 11:25:52.783 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------|------------------|
|entity_id |bundle |delta |langcode |revision_id |field_thumb_value |
|----------|-------|------|---------|------------|------------------|
|----------|-------|------|---------|------------|------------------|

2020-11-19 11:25:52.785 INFO  jdbc.sqltiming Line:373 - insert into node__field_thumb (bundle, delta, langcode, revision_id, field_thumb_value, entity_id) 
values ('book', 0, 'zh-hans', 43, '', 43) 
 {executed in 0 msec}
2020-11-19 11:25:52.792 INFO  jdbc.sqltiming Line:373 - select nodefieldt0_.entity_id as entity_i1_17_0_, nodefieldt0_.bundle as bundle2_17_0_, nodefieldt0_.delta 
as delta3_17_0_, nodefieldt0_.langcode as langcode4_17_0_, nodefieldt0_.revision_id as revision5_17_0_, 
nodefieldt0_.field_thumb_value as field_th6_17_0_ from node_revision__field_thumb nodefieldt0_ 
where nodefieldt0_.entity_id=43 
 {executed in 0 msec}
2020-11-19 11:25:52.792 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------|------------------|
|entity_id |bundle |delta |langcode |revision_id |field_thumb_value |
|----------|-------|------|---------|------------|------------------|
|----------|-------|------|---------|------------|------------------|

2020-11-19 11:25:52.794 INFO  jdbc.sqltiming Line:373 - insert into node_revision__field_thumb (bundle, delta, langcode, revision_id, field_thumb_value, 
entity_id) values ('book', 0, 'zh-hans', 43, '', 43) 
 {executed in 1 msec}
2020-11-19 11:25:52.797 INFO  jdbc.sqltiming Line:373 - select bookfieldf0_.entity_id as entity_i1_5_0_, bookfieldf0_.bundle as bundle2_5_0_, bookfieldf0_.delta 
as delta3_5_0_, bookfieldf0_.field_fenlei_target_id as field_fe4_5_0_, bookfieldf0_.langcode 
as langcode5_5_0_, bookfieldf0_.revision_id as revision6_5_0_ from node__field_fenlei bookfieldf0_ 
where bookfieldf0_.entity_id=43 
 {executed in 0 msec}
2020-11-19 11:25:52.798 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------------|---------|------------|
|entity_id |bundle |delta |field_fenlei_target_id |langcode |revision_id |
|----------|-------|------|-----------------------|---------|------------|
|----------|-------|------|-----------------------|---------|------------|

2020-11-19 11:25:52.800 INFO  jdbc.sqltiming Line:373 - insert into node__field_fenlei (bundle, delta, field_fenlei_target_id, langcode, revision_id, 
entity_id) values ('book', 0, 1, 'zh-hans', 43, 43) 
 {executed in 0 msec}
2020-11-19 11:25:52.807 INFO  jdbc.sqltiming Line:373 - select nodefieldf0_.entity_id as entity_i1_14_0_, nodefieldf0_.bundle as bundle2_14_0_, nodefieldf0_.delta 
as delta3_14_0_, nodefieldf0_.field_fenlei_target_id as field_fe4_14_0_, nodefieldf0_.langcode 
as langcode5_14_0_, nodefieldf0_.revision_id as revision6_14_0_ from node_revision__field_fenlei 
nodefieldf0_ where nodefieldf0_.entity_id=43 
 {executed in 1 msec}
2020-11-19 11:25:52.807 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------------|---------|------------|
|entity_id |bundle |delta |field_fenlei_target_id |langcode |revision_id |
|----------|-------|------|-----------------------|---------|------------|
|----------|-------|------|-----------------------|---------|------------|

2020-11-19 11:25:52.809 INFO  jdbc.sqltiming Line:373 - insert into node_revision__field_fenlei (bundle, delta, field_fenlei_target_id, langcode, revision_id, 
entity_id) values ('book', 0, 1, 'zh-hans', 43, 43) 
 {executed in 0 msec}
2020-11-19 11:26:37.098 INFO  jdbc.sqltiming Line:373 - select bookfieldf0_.entity_id as entity_i1_6_, bookfieldf0_.bundle as bundle2_6_, bookfieldf0_.delta 
as delta3_6_, bookfieldf0_.field_fsid_value as field_fs4_6_, bookfieldf0_.langcode as langcode5_6_, 
bookfieldf0_.revision_id as revision6_6_ from node__field_fsid bookfieldf0_ where bookfieldf0_.field_fsid_value='314281386385147' 
 {executed in 0 msec}
2020-11-19 11:26:37.099 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------|---------|------------|
|entity_id |bundle |delta |field_fsid_value |langcode |revision_id |
|----------|-------|------|-----------------|---------|------------|
|----------|-------|------|-----------------|---------|------------|

2020-11-19 11:26:37.100 INFO  jdbc.sqltiming Line:373 - insert into node_revision (langcode, nid, revision_default, revision_timestamp, revision_uid) 
values ('zh-hans', 0, 1, 1605756397, 1) 
 {executed in 0 msec}
2020-11-19 11:26:37.100 INFO  jdbc.sqltiming Line:373 - getGeneratedKeys on query: insert into node_revision (langcode, nid, revision_default, revision_timestamp, 
revision_uid) values ('zh-hans', 0, 1, 1605756397, 1) 
 {executed in 0 msec}
2020-11-19 11:26:37.100 INFO  jdbc.resultsettable Line:610 - 
|--------------|
|generated_key |
|--------------|
|44            |
|--------------|

2020-11-19 11:26:37.110 INFO  jdbc.sqltiming Line:373 - insert into node (langcode, type, uuid, vid) values ('zh-hans', 'book', 'dcdfc300-4fbb-4120-a556-409191500839', 
44) 
 {executed in 0 msec}
2020-11-19 11:26:37.111 INFO  jdbc.sqltiming Line:373 - getGeneratedKeys on query: insert into node (langcode, type, uuid, vid) values ('zh-hans', 
'book', 'dcdfc300-4fbb-4120-a556-409191500839', 44) 
 {executed in 0 msec}
2020-11-19 11:26:37.111 INFO  jdbc.resultsettable Line:610 - 
|--------------|
|generated_key |
|--------------|
|44            |
|--------------|

2020-11-19 11:26:37.118 INFO  jdbc.sqltiming Line:373 - update node_revision set langcode='zh-hans', nid=44, revision_default=1, revision_timestamp=1605756397, 
revision_uid=1 where vid=44 
 {executed in 0 msec}
2020-11-19 11:26:37.122 INFO  jdbc.sqltiming Line:373 - select bookfieldf0_.entity_id as entity_i1_6_0_, bookfieldf0_.bundle as bundle2_6_0_, bookfieldf0_.delta 
as delta3_6_0_, bookfieldf0_.field_fsid_value as field_fs4_6_0_, bookfieldf0_.langcode as langcode5_6_0_, 
bookfieldf0_.revision_id as revision6_6_0_ from node__field_fsid bookfieldf0_ where bookfieldf0_.entity_id=44 
 {executed in 0 msec}
2020-11-19 11:26:37.122 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------|---------|------------|
|entity_id |bundle |delta |field_fsid_value |langcode |revision_id |
|----------|-------|------|-----------------|---------|------------|
|----------|-------|------|-----------------|---------|------------|

2020-11-19 11:26:37.124 INFO  jdbc.sqltiming Line:373 - insert into node__field_fsid (bundle, delta, field_fsid_value, langcode, revision_id, entity_id) 
values ('book', 0, '314281386385147', 'zh-hans', 44, 44) 
 {executed in 0 msec}
2020-11-19 11:26:37.127 INFO  jdbc.sqltiming Line:373 - select nodefieldf0_.entity_id as entity_i1_15_0_, nodefieldf0_.bundle as bundle2_15_0_, nodefieldf0_.delta 
as delta3_15_0_, nodefieldf0_.field_fsid_value as field_fs4_15_0_, nodefieldf0_.langcode as 
langcode5_15_0_, nodefieldf0_.revision_id as revision6_15_0_ from node_revision__field_fsid 
nodefieldf0_ where nodefieldf0_.entity_id=44 
 {executed in 0 msec}
2020-11-19 11:26:37.128 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------|---------|------------|
|entity_id |bundle |delta |field_fsid_value |langcode |revision_id |
|----------|-------|------|-----------------|---------|------------|
|----------|-------|------|-----------------|---------|------------|

2020-11-19 11:26:37.130 INFO  jdbc.sqltiming Line:373 - insert into node_revision__field_fsid (bundle, delta, field_fsid_value, langcode, revision_id, 
entity_id) values ('book', 0, '314281386385147', 'zh-hans', 44, 44) 
 {executed in 1 msec}
2020-11-19 11:26:37.134 INFO  jdbc.sqltiming Line:373 - select bookentity0_.nid as nid1_1_, bookentity0_.bid as bid2_1_, bookentity0_.depth as depth3_1_, 
bookentity0_.has_children as has_chil4_1_, bookentity0_.p1 as p5_1_, bookentity0_.p2 as p6_1_, 
bookentity0_.p3 as p7_1_, bookentity0_.p4 as p8_1_, bookentity0_.p5 as p9_1_, bookentity0_.pid 
as pid10_1_, bookentity0_.weight as weight11_1_ from book bookentity0_ where bookentity0_.nid=44 
 {executed in 0 msec}
2020-11-19 11:26:37.134 INFO  jdbc.resultsettable Line:610 - 
|----|----|------|-------------|---|---|---|---|---|----|-------|
|nid |bid |depth |has_children |p1 |p2 |p3 |p4 |p5 |pid |weight |
|----|----|------|-------------|---|---|---|---|---|----|-------|
|----|----|------|-------------|---|---|---|---|---|----|-------|

2020-11-19 11:26:37.135 INFO  jdbc.sqltiming Line:373 - select bookentity0_.nid as nid1_1_0_, bookentity0_.bid as bid2_1_0_, bookentity0_.depth as 
depth3_1_0_, bookentity0_.has_children as has_chil4_1_0_, bookentity0_.p1 as p5_1_0_, bookentity0_.p2 
as p6_1_0_, bookentity0_.p3 as p7_1_0_, bookentity0_.p4 as p8_1_0_, bookentity0_.p5 as p9_1_0_, 
bookentity0_.pid as pid10_1_0_, bookentity0_.weight as weight11_1_0_ from book bookentity0_ 
where bookentity0_.nid=44 
 {executed in 0 msec}
2020-11-19 11:26:37.135 INFO  jdbc.resultsettable Line:610 - 
|----|----|------|-------------|---|---|---|---|---|----|-------|
|nid |bid |depth |has_children |p1 |p2 |p3 |p4 |p5 |pid |weight |
|----|----|------|-------------|---|---|---|---|---|----|-------|
|----|----|------|-------------|---|---|---|---|---|----|-------|

2020-11-19 11:26:37.137 INFO  jdbc.sqltiming Line:373 - insert into book (bid, depth, has_children, p1, p2, p3, p4, p5, pid, weight, nid) values (1, 
3, 0, 1, 43, 44, 0, 0, 43, 0, 44) 
 {executed in 0 msec}
2020-11-19 11:26:37.141 INFO  jdbc.sqltiming Line:373 - select nodebodyen0_.entity_id as entity_i1_3_, nodebodyen0_.body_value as body_val2_3_, nodebodyen0_.body_summary 
as body_sum3_3_, nodebodyen0_.bundle as bundle4_3_, nodebodyen0_.delta as delta5_3_, nodebodyen0_.body_format 
as body_for6_3_, nodebodyen0_.langcode as langcode7_3_, nodebodyen0_.revision_id as revision8_3_ 
from node__body nodebodyen0_ where nodebodyen0_.entity_id=44 
 {executed in 0 msec}
2020-11-19 11:26:37.141 INFO  jdbc.resultsettable Line:610 - 
|----------|-----------|-------------|-------|------|------------|---------|------------|
|entity_id |body_value |body_summary |bundle |delta |body_format |langcode |revision_id |
|----------|-----------|-------------|-------|------|------------|---------|------------|
|----------|-----------|-------------|-------|------|------------|---------|------------|

2020-11-19 11:26:37.142 INFO  jdbc.sqltiming Line:373 - select nodebodyre0_.entity_id as entity_i1_12_0_, nodebodyre0_.body_value as body_val2_12_0_, 
nodebodyre0_.body_summary as body_sum3_12_0_, nodebodyre0_.bundle as bundle4_12_0_, nodebodyre0_.delta 
as delta5_12_0_, nodebodyre0_.body_format as body_for6_12_0_, nodebodyre0_.langcode as langcode7_12_0_, 
nodebodyre0_.revision_id as revision8_12_0_ from node_revision__body nodebodyre0_ where nodebodyre0_.entity_id=44 
 {executed in 0 msec}
2020-11-19 11:26:37.142 INFO  jdbc.resultsettable Line:610 - 
|----------|-----------|-------------|-------|------|------------|---------|------------|
|entity_id |body_value |body_summary |bundle |delta |body_format |langcode |revision_id |
|----------|-----------|-------------|-------|------|------------|---------|------------|
|----------|-----------|-------------|-------|------|------------|---------|------------|

2020-11-19 11:26:37.144 INFO  jdbc.sqltiming Line:373 - insert into node_revision__body (body_value, body_summary, bundle, delta, body_format, langcode, 
revision_id, entity_id) values ('<p>你好，我是四火。</p> <p>在第一章技术内容的末尾，我们来换换脑子，聊一些略轻松的话题。我曾在开篇词中讲过，全栈工程师的市场需求量很大，今天我就来介绍一下北美大厂，特别是那些大名鼎鼎的互联网巨头们，都是怎样招聘全栈工程师的。</p> 
<p>这些大公司在全世界不同的国家内往往都会建立基地聚敛人才，当然包括 Top 2 的互联网超级大国——中国（你可能还不知道，<a href="https://zh.wikipedia.org/zh-hans/%E6%9C%80%E5%A4%A7%E7%9A%84%E4%BA%92%E8%81%94%E7%BD%91%E5%85%AC%E5%8F%B8%E5%88%97%E8%A1%A8">互联网十大企业中，中国占了四大，美国占了六大</a>）。我想，了解一下他们的做法，对于程序员的你来说，既能拓宽眼界，也能更好地清楚自己在市场上的定位，从而更好地成长，这应当是很有价值的。</p> 
<h2>招人理念</h2> <p>首先，招聘这个事儿，其重要性毋庸置疑，这几乎是所有的互联网公司都认可的一点。对某些互联网公司来说，例如 Google，则是<a href="https://rework.withgoogle.com/blog/Google-hiring-is-the-most-important-thing-you-do/">“最重要”的事情</a>，连“之一”这两个字都省了。</p> 
<p>招到一个优秀的工程师，你的团队和产品，都将获得巨大的收益；而招到一个不合格的工程师，不但会拉低团队的水准，还要花费其他同事大量的时间精力来帮助其成长。因此，招聘可以说是壮大一家公司最快的方法，但同时也是毁掉一家公司最快的方法。于是，面试，对于很多大型互联网公司的工程师来说，就是日常工作的一个重要组成部分。</p> 
<p>通常来说，这些公司在招聘的时候，最关心这样两件事情。</p><!-- [[[read_end]]] --> <p>一个是非技术能力，很多公司把其中重要的内容归纳成了领导力准则（Leadership 
Principles），比如<a href="https://www.amazon.jobs/zh/principles">亚马逊的这十几条</a>；另一个则是技术能力，主要包括编程能力、问题解决（Problem 
Solving）能力和架构、设计能力。其中，不同级别的工程师，对于系统设计等内容的要求不同，但是对于编程能力的要求基本是一样的。例如，初级工程师可能在技术能力上 90% 考察的是编程能力和问题解决能力，而高级工程师这部分往往会掉到 
60%，剩下的 30% 考察架构和设计能力。</p> <p>我们可以把北美和国内不同的工程师岗位考察来做一个比较，它们都立足于基础，但还是有所区别的。国内大厂的面试我认为更具备实战性，即知识性更强，技术面较广，不同用人单位对于不同技术的考察也更具体；但北美（也包括在国内的北美外企）大厂的面试则更偏向于具体技术的问题解决能力、编码能力，以及架构设计能力等等。至于全栈工程师岗位，其实并没有特别显著的特殊性，候选者考察的理念基本是一样的，只是对于问题领域，以及技术栈等方面的考察，会更有针对性。</p> 
<h2>招聘流程</h2> <h3>1. 简历阶段</h3> <p>招聘的流程有时很短，一周内就可以完成所有的事情，有时也会很长，数月、甚至超过一年之久。</p> <p>大多数程序员还是习惯于使用招聘网站来投递简历，但是也有许多程序员们，在找工作的时间窗口内，是以点对点的方式来找下家的，即答复 
E-mail、LinkedIn 上来主动来联系的 Recruiter（招聘人员）或 Manager（经理），主动投递目标公司，或者找朋友推荐，而不是将自己的简历无差别地挂到招聘网站上，这样可以有效避免过多的电话和消息骚扰，还可以针对特定的公司优化简历，做进一步准备。</p> 
<p>但无论你是用招聘网站，还是朋友推荐，有一天，有一位自称公司的招聘人员用着客气的语气发来邮件 ，她介绍了自己的来历，并和你约了时间电话聊天，这就意味着“简历关”已过，进入了互相了解的阶段。</p> 
<p>在把公司、团队、项目、薪酬等等这些事情都介绍完之后，如果互相还有进一步的意愿，通常就要进入电话面试环节了。对于全栈工程师这一岗位来说，<strong>有时招聘人员会问一点非常简单的 
Web 相关的基础知识，这其实并非为了考察候选人的能力，而是为了过滤掉那些明显不靠谱的候选人</strong>，给后面的面试团队节约时间成本。之后，Recruiter 会根据工作的时间长短给出候选人的最低应聘级别，比如说，已经工作五年的工程师，最低也得是中级工程师的职位了，此时如果候选人达不到要求，那就不要了。</p> 
<p>还有公司招聘是统招（General Hire），即招聘完毕之后统一双向选择去哪个小组工作，比如 Facebook，但绝大多数公司还是会采用项目组自己招聘的形式。对于前者，招聘人员会着重介绍公司的文化和公司的发展方向；但对于后者，则可以具体很多，即可以和候选人交流目标团队、项目和技术栈等。</p> 
<h3>2. 电话（视频）面试</h3> <p>电话面试（Phone Screen）通常有一轮或两轮，每轮 45 分钟到一个小时，有时候也会通过视频面试，当然，对于特别优秀或者他人强力推荐的候选人，甚至可以免试。</p> 
<p>电话面试一般由一线工程师来担任面试官，如果是两轮面试，那么第二轮有时也由一线经理来担任面试官。电话面试至少有一轮必须要考编码问题，这个问题一般不会很难，<strong>通常是一个较为简单到中等偏下难度的算法题，但是需要在电话沟通的基础上，通过多人在线文档工具将代码写下来</strong>，面试官可以看到文本上的编码全过程。对于全栈工程师来说，面试官还可能会花几分钟的时间，问几个全栈技术范畴内的问题，但是总的流程是一样的。</p> 
<p>电话面试出结果很快，一般 Hiring Manager（招聘经理）和参与面试的工程师一商量，就可以确定要不要进行下一步了。电话面试的通过率对于每个公司都不太一样 ，但是根据我的观察，一般这个通过率是在 
30% ～ 50% 左右。如果电话面试挂掉的话，通常就可以认为候选人距离公司和团队的要求还有较大差距。</p> <h3>3. 现场面试</h3> <p>如果电话面试结果不错，候选人往往会有一个和团队核心成员或是经理见面的机会，比如 
OCI（Oracle 的云基础设施部门，它是独立运作的，文化和流程都和传统的 Oracle 有较大不同），这主要是在进一步的面试前，给候选者和团队继续互相了解和深入的机会。毕竟，面试是双向的。</p> 
<p>接下来，招聘人员会和候选人约时间进入 On-site（现场面试）环节，这个环节需要到项目组所在的城市去，且一般需要持续一天的时间。<strong>比较常见的是 5 轮面试的方式，每轮一个小时，中午会和招聘经理或是团队的工程师吃饭</strong>，这顿饭有可能作为一轮面试算入考察过程，也可能不算。像 
Facebook 和 Google 都不算，候选人可以放松地在食堂饱餐一顿；Amazon、OCI 则往往会请候选人选择一份外卖，送来以后和招聘经理边吃边聊，考察非技术能力。</p> 
<p>现场面试的招聘经理一般由一线工程师团队的经理担任。从这里你也可以看到，招聘一个人的成本，包括人力、时间、场地、差旅等等开销，是非常高昂的。</p> <p>在除去吃饭以外的几轮面试中，编码能力是重点，通常最少有三轮是必须要涉及高强度的编码问题，我们把它简称为“主要问题”。这个编码通常在白板上进行。通常<strong>面试官会努力将候选人带入到团队合作解决问题的氛围中，然后给出一个较为模糊的问题，再来一起沟通交流解决问题，最后代码必须落到白板上面</strong>，这个解题过程要占据每轮面试的绝大部分时间。</p> 
<p>对于初级工程师以上的职位，还有至少一轮的问题需要重点考察系统设计能力。每轮面试还有十多分钟的项目和问题挖掘时间，这部分的执行相对较为自由，往往是基于候选人的工作经历往深挖项目和技术，越具体越好。有经验的面试官会抓住一两个点往下深挖，挖到非常细节的部分，从而判断候选人是在夸夸其谈，还是一个真正做事的人。对于全栈工程师来说，项目和技术问题可能大量涉及全栈领域，例如以 
Web 网站或应用为背景的题目。</p> <p>这里我要再次强调一下白板代码的重要性，这里的白板代码不仅仅包括最后落笔写代码，还包括写代码前大量的确认、分析、讨论、架构、设计等等过程，这些占据技术面试的“主要问题”，所有的内容都是在白板上进行的，从中可以全方位地考察候选人技术和非技术能力。</p> 
<p>就如同那个“没有 jQuery 不会写 JavaScript”这样略带戏谑、但又透露着些许无奈的说法一样，现在很多程序员朋友都忽视了基础能力的修炼，没有了 IDE 就不会写代码了。白板肯定不像 
IDE，有方法提示，写错了还可以随意修改，所以你现在明白为什么用白板了吗？那是因为白板要求你的思路非常清晰，代码组织能力也要很高。由于空间的限制，在白板上修改代码总是件不那么容易的事儿。</p> 
<p>另外，还要补充一点，上面谈到的每轮面试中，最重要的那道面试题，公司的要求是，<strong>题目在一开始必须要足够模糊，从而激发和考察候选人合作解决问题的能力，在沟通中逐步细化问题的时候，必须要达到中等偏上到困难的难度，以保证足够的区分度</strong>。</p> 
<p>这样的问题会考察到候选人的多项素质，特别是编程能力和问题解决能力。但也不要觉得，面试官是在刻意为难，这样的题目设计起来其实并不容易，他们要尽量避免使用互联网上很容易找得到的“常见题”，这个过程往往比解题本身要难得多。<strong>题目不得涉及技术本身的奇技淫巧，不得对候选人使用的编程语言有限制，更要避免“知识性问题”。</strong></p> 
<p>综合来看，我觉得是不是主要问知识性问题，是北美软件工程师（包括全栈工程师）的面试，和国内的面试比起来，在技术层面最本质区别。</p> <p>那什么是“知识性问题”呢？知识性问题，就是那些直接的、较容易通过搜索和文档获取到的知识性内容。比如，Spring 
怎样配置 Bean，Tomcat 怎么修改最大连接数等等，这些问题，手册一翻就是分分钟的事情。</p> <p>但这绝不是说这些知识不实用，面试官通常不问这类问题最大的原因是，<strong>知识性问题的随机性太强</strong>，如果候选人恰巧刚刚遇到过，或者记性不错，就很容易回答上来了。而这些<strong>却并不能反映候选者分析问题、思考、判断和权衡的能力</strong>。但话说回来，知识性问题也是考察候选人基础技能的一种方式，有的面试官也会问，但肯定不是每轮面试中占据时间最多的那个“主要问题”。</p> 
<h3>4. 讨论会</h3> <p>在面试之后，所有的面试官都要写下对于候选人的反馈，这包括候选人的优势和劣势。在很快而来的 Debrief Meeting（讨论会）中，所有的面试官会根据自己的判断评价候选人，分为四档，分别是“强烈建议录用”“建议录用”“建议不录用”和“强烈建议不录用”。</p> 
<p>当然，他们可以说服别人，也可以被说服而改变评价。每一个人，都会负责一项技术考察项（比如数据结构和算法）和非技术考察项（比如是否能拥抱变化，逐步改进），这些考察项在不同的公司会有不同，通常来说五轮里面针对算法和数据结构的考察至少有三轮。另外，有一些非技术的“Red 
Flag”（即所谓的“红线”），是绝对不能触碰的，比如说对于现有的职位或年限说谎。</p> <p>在一组面试的面试官中，有两个角色值得一提，<strong>一个是招聘经理</strong>，上面已经提到了；<strong>还有一个是技术负责人</strong>（例如在 
Amazon 叫做 Bar Raiser，OCI 叫做 Bartender），负责保证招聘质量，<strong>他们拥有一票否决权，也就是说，哪怕其他所有人都同意，但这两人只要有一个不同意就不能通过</strong>。</p> 
<p>对于其他情况，直接投票且多数获胜。少数情况下，针对某个候选人，讨论会可能会有截然相反的意见，这时候面试官们就会摆出事实依据进行争辩了。这个讨论会的录用结果，还要包括职位级别。另外，有少数公司在这方面采用的方式略有不同，比如微软，候选人的最终录用决策是由一个特殊的“大人物”（叫做 
As Appropriate）决定的，这和国内某些互联网公司很像。</p> <p>除了我刚刚说的讨论会，某些公司为了从更高层面上把控招聘需求和质量，还可能会有额外的环节，比如 Google 
和 Facebook 在讨论会以后，Hiring Committee（招聘委员会）拥有下一步的决策权，他们可以对讨论会通过的候选人做进一步筛选。总的来说，不同的公司差异较大，但即便是同一家公司，现场面试的总体通过率也非常不确定，并且这个波动较大，高的时候可能达到接近一半，低的时候可能只有十分之一 
。</p> <p>如果这一步也过了，就可以根据面试反馈的结果适当调整候选者的职位级别，再往后就是商量并给出 offer，确定入职时间，进行背景调查等等众所周知的步骤了。</p> <h2>进一步思考</h2> 
<p>众所周知，在一家公司中，软件工程师的未来发展方向，通常包括技术路线和管理路线两个。但是据我了解，大多数程序员还是更钟情于技术路线的，可对于程序员的编程技术，你一定听说过“青春饭”的说法。</p> 
<p>我也听到过不少程序员谈论自己的职业现状，表示随着工作经验的增加，公司似乎更爱招刚毕业不久的年轻人，因为他们更有精力，薪水也更低。于是，大家看着互联网大潮是越来越汹涌，可东西却是越来越学不动了，工作也越来越难找了……</p> 
<p>这是怎么回事？</p> <p>首先，我想说的是，找工作总是希望自己是往上走的，薪水越来越高，职位也越来越高，责任也越来越大，高级职位在市场上的需求却越来越小。因此，<strong>从这个角度看，工作本来就是越来越难找的</strong>。因此，如果是这个原因，这未必是一件坏事。</p> 
<p>其次，随着年纪的增加，你觉得你的核心竞争力是什么？如果只是重复地写 Spring 的配置，只是照猫画虎写写 CRUD 的样板代码，那么，比你年轻、能吃苦、能加班的，且薪水更低的程序员当然可以分分钟打败你。因为，你这不是有了工作多年的经验，而是工作一年的经验重复了多遍。从这个角度看，无论这个招聘的职位是不是全栈，学的技术是不是在 
Web 方面，道理都是一样的。</p> <p><strong>你的竞争力，在具备扎实基础的前提下，应该是经验、思路、眼界等等这些东西。技术是相通的，技术本质是不容易改变的，在新技术到来的时候，你有基础，无论是深度还是广度的积累，应该让你学得更快，而不是学得更慢。</strong></p> 
<p>我想，今天介绍的关于工程师招聘流程的内容，也恰好反映了上面这两点：</p> <ul> <li>扎实的基础不可或缺，这是前提。老实说，我经常遇到工作了好多年的一线程序员，连一个简单的二叉树广度优先遍历算法都写不出来。</li> 
<li>经验、思路、眼界，都有高度，才是更高级别技术职位的要求，这也反映在上述面试系统设计、问题解决等等方面。</li> </ul> <p>这样的招聘方式当然有它的弊端，例如招到的人可能未必对所用技术都熟悉，未必能立马干活，但通过这样的招聘方式，确确实实可以过滤掉那些“一年工作经验重复多遍”的候选人。</p> 
<h2>总结思考</h2> <p>作为特别放送，今天的思考题，我想换个形式。如文中介绍的那样，设计一道合理的面试题其实并不容易，需要综合考虑多个因素。下面我列出了几道面试题，假设今天你就是面试官，你能说说它们中哪些适合作为全栈工程师岗位面试的“主要问题”，哪些不适合吗？</p> 
<p>A：设计一个算法，把一个小于一百万的正整数，使用罗马数字来表示；<br> B：对一个 Web API，设计一个流量控制系统；<br> C：写一个 C++ 算法，实现 atoi 
算法，即将字符串转换为数字；<br> D：设计一个网约车系统；<br> E：完成一个 HTML 页面，能够在网页上显示一个表示当前时间的数字时钟。</p> <p>最后，我想强调一件事，单个应聘经历永远只能代表单次经验，如果有好的结果，那么恭喜你，但请不要意得志满，这其实并不代表你的整体水准；如果结果不好，也请不要灰心丧气，它并不代表你就真的达不到那家公司的要求。毕竟，招聘也好，面试也罢，其中的随机性太强，冷静、淡定分析自己的情况，再采取合理的措施，才是王道。</p> 
<p>今天的特别放送就到这里，希望你在阅读后能有所收获。如果你在应聘和面试方面有什么困惑，或者想分享分享你的面试经历，欢迎在留言区一起讨论。</p> <p><img src="https://static001.geekbang.org/resource/image/11/8b/1181246bbd51ce348d5729696d1dc28b.jpg" 
alt="unpreview"></p>', '', 'book', 0, 'full_html', 'zh-hans', 44, 44) 
 {executed in 0 msec}
2020-11-19 11:26:37.147 INFO  jdbc.sqltiming Line:373 - select nodebodyen0_.entity_id as entity_i1_3_0_, nodebodyen0_.body_value as body_val2_3_0_, 
nodebodyen0_.body_summary as body_sum3_3_0_, nodebodyen0_.bundle as bundle4_3_0_, nodebodyen0_.delta 
as delta5_3_0_, nodebodyen0_.body_format as body_for6_3_0_, nodebodyen0_.langcode as langcode7_3_0_, 
nodebodyen0_.revision_id as revision8_3_0_ from node__body nodebodyen0_ where nodebodyen0_.entity_id=44 
 {executed in 0 msec}
2020-11-19 11:26:37.147 INFO  jdbc.resultsettable Line:610 - 
|----------|-----------|-------------|-------|------|------------|---------|------------|
|entity_id |body_value |body_summary |bundle |delta |body_format |langcode |revision_id |
|----------|-----------|-------------|-------|------|------------|---------|------------|
|----------|-----------|-------------|-------|------|------------|---------|------------|

2020-11-19 11:26:37.149 INFO  jdbc.sqltiming Line:373 - insert into node__body (body_value, body_summary, bundle, delta, body_format, langcode, revision_id, 
entity_id) values ('<p>你好，我是四火。</p> <p>在第一章技术内容的末尾，我们来换换脑子，聊一些略轻松的话题。我曾在开篇词中讲过，全栈工程师的市场需求量很大，今天我就来介绍一下北美大厂，特别是那些大名鼎鼎的互联网巨头们，都是怎样招聘全栈工程师的。</p> 
<p>这些大公司在全世界不同的国家内往往都会建立基地聚敛人才，当然包括 Top 2 的互联网超级大国——中国（你可能还不知道，<a href="https://zh.wikipedia.org/zh-hans/%E6%9C%80%E5%A4%A7%E7%9A%84%E4%BA%92%E8%81%94%E7%BD%91%E5%85%AC%E5%8F%B8%E5%88%97%E8%A1%A8">互联网十大企业中，中国占了四大，美国占了六大</a>）。我想，了解一下他们的做法，对于程序员的你来说，既能拓宽眼界，也能更好地清楚自己在市场上的定位，从而更好地成长，这应当是很有价值的。</p> 
<h2>招人理念</h2> <p>首先，招聘这个事儿，其重要性毋庸置疑，这几乎是所有的互联网公司都认可的一点。对某些互联网公司来说，例如 Google，则是<a href="https://rework.withgoogle.com/blog/Google-hiring-is-the-most-important-thing-you-do/">“最重要”的事情</a>，连“之一”这两个字都省了。</p> 
<p>招到一个优秀的工程师，你的团队和产品，都将获得巨大的收益；而招到一个不合格的工程师，不但会拉低团队的水准，还要花费其他同事大量的时间精力来帮助其成长。因此，招聘可以说是壮大一家公司最快的方法，但同时也是毁掉一家公司最快的方法。于是，面试，对于很多大型互联网公司的工程师来说，就是日常工作的一个重要组成部分。</p> 
<p>通常来说，这些公司在招聘的时候，最关心这样两件事情。</p><!-- [[[read_end]]] --> <p>一个是非技术能力，很多公司把其中重要的内容归纳成了领导力准则（Leadership 
Principles），比如<a href="https://www.amazon.jobs/zh/principles">亚马逊的这十几条</a>；另一个则是技术能力，主要包括编程能力、问题解决（Problem 
Solving）能力和架构、设计能力。其中，不同级别的工程师，对于系统设计等内容的要求不同，但是对于编程能力的要求基本是一样的。例如，初级工程师可能在技术能力上 90% 考察的是编程能力和问题解决能力，而高级工程师这部分往往会掉到 
60%，剩下的 30% 考察架构和设计能力。</p> <p>我们可以把北美和国内不同的工程师岗位考察来做一个比较，它们都立足于基础，但还是有所区别的。国内大厂的面试我认为更具备实战性，即知识性更强，技术面较广，不同用人单位对于不同技术的考察也更具体；但北美（也包括在国内的北美外企）大厂的面试则更偏向于具体技术的问题解决能力、编码能力，以及架构设计能力等等。至于全栈工程师岗位，其实并没有特别显著的特殊性，候选者考察的理念基本是一样的，只是对于问题领域，以及技术栈等方面的考察，会更有针对性。</p> 
<h2>招聘流程</h2> <h3>1. 简历阶段</h3> <p>招聘的流程有时很短，一周内就可以完成所有的事情，有时也会很长，数月、甚至超过一年之久。</p> <p>大多数程序员还是习惯于使用招聘网站来投递简历，但是也有许多程序员们，在找工作的时间窗口内，是以点对点的方式来找下家的，即答复 
E-mail、LinkedIn 上来主动来联系的 Recruiter（招聘人员）或 Manager（经理），主动投递目标公司，或者找朋友推荐，而不是将自己的简历无差别地挂到招聘网站上，这样可以有效避免过多的电话和消息骚扰，还可以针对特定的公司优化简历，做进一步准备。</p> 
<p>但无论你是用招聘网站，还是朋友推荐，有一天，有一位自称公司的招聘人员用着客气的语气发来邮件 ，她介绍了自己的来历，并和你约了时间电话聊天，这就意味着“简历关”已过，进入了互相了解的阶段。</p> 
<p>在把公司、团队、项目、薪酬等等这些事情都介绍完之后，如果互相还有进一步的意愿，通常就要进入电话面试环节了。对于全栈工程师这一岗位来说，<strong>有时招聘人员会问一点非常简单的 
Web 相关的基础知识，这其实并非为了考察候选人的能力，而是为了过滤掉那些明显不靠谱的候选人</strong>，给后面的面试团队节约时间成本。之后，Recruiter 会根据工作的时间长短给出候选人的最低应聘级别，比如说，已经工作五年的工程师，最低也得是中级工程师的职位了，此时如果候选人达不到要求，那就不要了。</p> 
<p>还有公司招聘是统招（General Hire），即招聘完毕之后统一双向选择去哪个小组工作，比如 Facebook，但绝大多数公司还是会采用项目组自己招聘的形式。对于前者，招聘人员会着重介绍公司的文化和公司的发展方向；但对于后者，则可以具体很多，即可以和候选人交流目标团队、项目和技术栈等。</p> 
<h3>2. 电话（视频）面试</h3> <p>电话面试（Phone Screen）通常有一轮或两轮，每轮 45 分钟到一个小时，有时候也会通过视频面试，当然，对于特别优秀或者他人强力推荐的候选人，甚至可以免试。</p> 
<p>电话面试一般由一线工程师来担任面试官，如果是两轮面试，那么第二轮有时也由一线经理来担任面试官。电话面试至少有一轮必须要考编码问题，这个问题一般不会很难，<strong>通常是一个较为简单到中等偏下难度的算法题，但是需要在电话沟通的基础上，通过多人在线文档工具将代码写下来</strong>，面试官可以看到文本上的编码全过程。对于全栈工程师来说，面试官还可能会花几分钟的时间，问几个全栈技术范畴内的问题，但是总的流程是一样的。</p> 
<p>电话面试出结果很快，一般 Hiring Manager（招聘经理）和参与面试的工程师一商量，就可以确定要不要进行下一步了。电话面试的通过率对于每个公司都不太一样 ，但是根据我的观察，一般这个通过率是在 
30% ～ 50% 左右。如果电话面试挂掉的话，通常就可以认为候选人距离公司和团队的要求还有较大差距。</p> <h3>3. 现场面试</h3> <p>如果电话面试结果不错，候选人往往会有一个和团队核心成员或是经理见面的机会，比如 
OCI（Oracle 的云基础设施部门，它是独立运作的，文化和流程都和传统的 Oracle 有较大不同），这主要是在进一步的面试前，给候选者和团队继续互相了解和深入的机会。毕竟，面试是双向的。</p> 
<p>接下来，招聘人员会和候选人约时间进入 On-site（现场面试）环节，这个环节需要到项目组所在的城市去，且一般需要持续一天的时间。<strong>比较常见的是 5 轮面试的方式，每轮一个小时，中午会和招聘经理或是团队的工程师吃饭</strong>，这顿饭有可能作为一轮面试算入考察过程，也可能不算。像 
Facebook 和 Google 都不算，候选人可以放松地在食堂饱餐一顿；Amazon、OCI 则往往会请候选人选择一份外卖，送来以后和招聘经理边吃边聊，考察非技术能力。</p> 
<p>现场面试的招聘经理一般由一线工程师团队的经理担任。从这里你也可以看到，招聘一个人的成本，包括人力、时间、场地、差旅等等开销，是非常高昂的。</p> <p>在除去吃饭以外的几轮面试中，编码能力是重点，通常最少有三轮是必须要涉及高强度的编码问题，我们把它简称为“主要问题”。这个编码通常在白板上进行。通常<strong>面试官会努力将候选人带入到团队合作解决问题的氛围中，然后给出一个较为模糊的问题，再来一起沟通交流解决问题，最后代码必须落到白板上面</strong>，这个解题过程要占据每轮面试的绝大部分时间。</p> 
<p>对于初级工程师以上的职位，还有至少一轮的问题需要重点考察系统设计能力。每轮面试还有十多分钟的项目和问题挖掘时间，这部分的执行相对较为自由，往往是基于候选人的工作经历往深挖项目和技术，越具体越好。有经验的面试官会抓住一两个点往下深挖，挖到非常细节的部分，从而判断候选人是在夸夸其谈，还是一个真正做事的人。对于全栈工程师来说，项目和技术问题可能大量涉及全栈领域，例如以 
Web 网站或应用为背景的题目。</p> <p>这里我要再次强调一下白板代码的重要性，这里的白板代码不仅仅包括最后落笔写代码，还包括写代码前大量的确认、分析、讨论、架构、设计等等过程，这些占据技术面试的“主要问题”，所有的内容都是在白板上进行的，从中可以全方位地考察候选人技术和非技术能力。</p> 
<p>就如同那个“没有 jQuery 不会写 JavaScript”这样略带戏谑、但又透露着些许无奈的说法一样，现在很多程序员朋友都忽视了基础能力的修炼，没有了 IDE 就不会写代码了。白板肯定不像 
IDE，有方法提示，写错了还可以随意修改，所以你现在明白为什么用白板了吗？那是因为白板要求你的思路非常清晰，代码组织能力也要很高。由于空间的限制，在白板上修改代码总是件不那么容易的事儿。</p> 
<p>另外，还要补充一点，上面谈到的每轮面试中，最重要的那道面试题，公司的要求是，<strong>题目在一开始必须要足够模糊，从而激发和考察候选人合作解决问题的能力，在沟通中逐步细化问题的时候，必须要达到中等偏上到困难的难度，以保证足够的区分度</strong>。</p> 
<p>这样的问题会考察到候选人的多项素质，特别是编程能力和问题解决能力。但也不要觉得，面试官是在刻意为难，这样的题目设计起来其实并不容易，他们要尽量避免使用互联网上很容易找得到的“常见题”，这个过程往往比解题本身要难得多。<strong>题目不得涉及技术本身的奇技淫巧，不得对候选人使用的编程语言有限制，更要避免“知识性问题”。</strong></p> 
<p>综合来看，我觉得是不是主要问知识性问题，是北美软件工程师（包括全栈工程师）的面试，和国内的面试比起来，在技术层面最本质区别。</p> <p>那什么是“知识性问题”呢？知识性问题，就是那些直接的、较容易通过搜索和文档获取到的知识性内容。比如，Spring 
怎样配置 Bean，Tomcat 怎么修改最大连接数等等，这些问题，手册一翻就是分分钟的事情。</p> <p>但这绝不是说这些知识不实用，面试官通常不问这类问题最大的原因是，<strong>知识性问题的随机性太强</strong>，如果候选人恰巧刚刚遇到过，或者记性不错，就很容易回答上来了。而这些<strong>却并不能反映候选者分析问题、思考、判断和权衡的能力</strong>。但话说回来，知识性问题也是考察候选人基础技能的一种方式，有的面试官也会问，但肯定不是每轮面试中占据时间最多的那个“主要问题”。</p> 
<h3>4. 讨论会</h3> <p>在面试之后，所有的面试官都要写下对于候选人的反馈，这包括候选人的优势和劣势。在很快而来的 Debrief Meeting（讨论会）中，所有的面试官会根据自己的判断评价候选人，分为四档，分别是“强烈建议录用”“建议录用”“建议不录用”和“强烈建议不录用”。</p> 
<p>当然，他们可以说服别人，也可以被说服而改变评价。每一个人，都会负责一项技术考察项（比如数据结构和算法）和非技术考察项（比如是否能拥抱变化，逐步改进），这些考察项在不同的公司会有不同，通常来说五轮里面针对算法和数据结构的考察至少有三轮。另外，有一些非技术的“Red 
Flag”（即所谓的“红线”），是绝对不能触碰的，比如说对于现有的职位或年限说谎。</p> <p>在一组面试的面试官中，有两个角色值得一提，<strong>一个是招聘经理</strong>，上面已经提到了；<strong>还有一个是技术负责人</strong>（例如在 
Amazon 叫做 Bar Raiser，OCI 叫做 Bartender），负责保证招聘质量，<strong>他们拥有一票否决权，也就是说，哪怕其他所有人都同意，但这两人只要有一个不同意就不能通过</strong>。</p> 
<p>对于其他情况，直接投票且多数获胜。少数情况下，针对某个候选人，讨论会可能会有截然相反的意见，这时候面试官们就会摆出事实依据进行争辩了。这个讨论会的录用结果，还要包括职位级别。另外，有少数公司在这方面采用的方式略有不同，比如微软，候选人的最终录用决策是由一个特殊的“大人物”（叫做 
As Appropriate）决定的，这和国内某些互联网公司很像。</p> <p>除了我刚刚说的讨论会，某些公司为了从更高层面上把控招聘需求和质量，还可能会有额外的环节，比如 Google 
和 Facebook 在讨论会以后，Hiring Committee（招聘委员会）拥有下一步的决策权，他们可以对讨论会通过的候选人做进一步筛选。总的来说，不同的公司差异较大，但即便是同一家公司，现场面试的总体通过率也非常不确定，并且这个波动较大，高的时候可能达到接近一半，低的时候可能只有十分之一 
。</p> <p>如果这一步也过了，就可以根据面试反馈的结果适当调整候选者的职位级别，再往后就是商量并给出 offer，确定入职时间，进行背景调查等等众所周知的步骤了。</p> <h2>进一步思考</h2> 
<p>众所周知，在一家公司中，软件工程师的未来发展方向，通常包括技术路线和管理路线两个。但是据我了解，大多数程序员还是更钟情于技术路线的，可对于程序员的编程技术，你一定听说过“青春饭”的说法。</p> 
<p>我也听到过不少程序员谈论自己的职业现状，表示随着工作经验的增加，公司似乎更爱招刚毕业不久的年轻人，因为他们更有精力，薪水也更低。于是，大家看着互联网大潮是越来越汹涌，可东西却是越来越学不动了，工作也越来越难找了……</p> 
<p>这是怎么回事？</p> <p>首先，我想说的是，找工作总是希望自己是往上走的，薪水越来越高，职位也越来越高，责任也越来越大，高级职位在市场上的需求却越来越小。因此，<strong>从这个角度看，工作本来就是越来越难找的</strong>。因此，如果是这个原因，这未必是一件坏事。</p> 
<p>其次，随着年纪的增加，你觉得你的核心竞争力是什么？如果只是重复地写 Spring 的配置，只是照猫画虎写写 CRUD 的样板代码，那么，比你年轻、能吃苦、能加班的，且薪水更低的程序员当然可以分分钟打败你。因为，你这不是有了工作多年的经验，而是工作一年的经验重复了多遍。从这个角度看，无论这个招聘的职位是不是全栈，学的技术是不是在 
Web 方面，道理都是一样的。</p> <p><strong>你的竞争力，在具备扎实基础的前提下，应该是经验、思路、眼界等等这些东西。技术是相通的，技术本质是不容易改变的，在新技术到来的时候，你有基础，无论是深度还是广度的积累，应该让你学得更快，而不是学得更慢。</strong></p> 
<p>我想，今天介绍的关于工程师招聘流程的内容，也恰好反映了上面这两点：</p> <ul> <li>扎实的基础不可或缺，这是前提。老实说，我经常遇到工作了好多年的一线程序员，连一个简单的二叉树广度优先遍历算法都写不出来。</li> 
<li>经验、思路、眼界，都有高度，才是更高级别技术职位的要求，这也反映在上述面试系统设计、问题解决等等方面。</li> </ul> <p>这样的招聘方式当然有它的弊端，例如招到的人可能未必对所用技术都熟悉，未必能立马干活，但通过这样的招聘方式，确确实实可以过滤掉那些“一年工作经验重复多遍”的候选人。</p> 
<h2>总结思考</h2> <p>作为特别放送，今天的思考题，我想换个形式。如文中介绍的那样，设计一道合理的面试题其实并不容易，需要综合考虑多个因素。下面我列出了几道面试题，假设今天你就是面试官，你能说说它们中哪些适合作为全栈工程师岗位面试的“主要问题”，哪些不适合吗？</p> 
<p>A：设计一个算法，把一个小于一百万的正整数，使用罗马数字来表示；<br> B：对一个 Web API，设计一个流量控制系统；<br> C：写一个 C++ 算法，实现 atoi 
算法，即将字符串转换为数字；<br> D：设计一个网约车系统；<br> E：完成一个 HTML 页面，能够在网页上显示一个表示当前时间的数字时钟。</p> <p>最后，我想强调一件事，单个应聘经历永远只能代表单次经验，如果有好的结果，那么恭喜你，但请不要意得志满，这其实并不代表你的整体水准；如果结果不好，也请不要灰心丧气，它并不代表你就真的达不到那家公司的要求。毕竟，招聘也好，面试也罢，其中的随机性太强，冷静、淡定分析自己的情况，再采取合理的措施，才是王道。</p> 
<p>今天的特别放送就到这里，希望你在阅读后能有所收获。如果你在应聘和面试方面有什么困惑，或者想分享分享你的面试经历，欢迎在留言区一起讨论。</p> <p><img src="https://static001.geekbang.org/resource/image/11/8b/1181246bbd51ce348d5729696d1dc28b.jpg" 
alt="unpreview"></p>', '', 'book', 0, 'full_html', 'zh-hans', 44, 44) 
 {executed in 0 msec}
2020-11-19 11:26:37.153 INFO  jdbc.sqltiming Line:373 - select nodefiledd0_.nid as nid1_9_, nodefiledd0_.changed as changed2_9_, nodefiledd0_.created 
as created3_9_, nodefiledd0_.default_langcode as default_4_9_, nodefiledd0_.langcode as langcode5_9_, 
nodefiledd0_.promote as promote6_9_, nodefiledd0_.revision_translation_affected as revision7_9_, 
nodefiledd0_.status as status8_9_, nodefiledd0_.sticky as sticky9_9_, nodefiledd0_.title as 
title10_9_, nodefiledd0_.type as type11_9_, nodefiledd0_.uid as uid12_9_, nodefiledd0_.vid 
as vid13_9_ from node_field_data nodefiledd0_ where nodefiledd0_.nid=44 
 {executed in 1 msec}
2020-11-19 11:26:37.153 INFO  jdbc.resultsettable Line:610 - 
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|-----|----|----|
|nid |changed |created |default_langcode |langcode |promote |revision_translation_affected |status |sticky |title |type |uid |vid |
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|-----|----|----|
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|-----|----|----|

2020-11-19 11:26:37.154 INFO  jdbc.sqltiming Line:373 - select nodefieldr0_.nid as nid1_10_0_, nodefieldr0_.changed as changed2_10_0_, nodefieldr0_.created 
as created3_10_0_, nodefieldr0_.default_langcode as default_4_10_0_, nodefieldr0_.langcode 
as langcode5_10_0_, nodefieldr0_.promote as promote6_10_0_, nodefieldr0_.revision_translation_affected 
as revision7_10_0_, nodefieldr0_.status as status8_10_0_, nodefieldr0_.sticky as sticky9_10_0_, 
nodefieldr0_.title as title10_10_0_, nodefieldr0_.uid as uid11_10_0_, nodefieldr0_.vid as vid12_10_0_ 
from node_field_revision nodefieldr0_ where nodefieldr0_.nid=44 
 {executed in 1 msec}
2020-11-19 11:26:37.154 INFO  jdbc.resultsettable Line:610 - 
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|----|----|
|nid |changed |created |default_langcode |langcode |promote |revision_translation_affected |status |sticky |title |uid |vid |
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|----|----|
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|----|----|

2020-11-19 11:26:37.156 INFO  jdbc.sqltiming Line:373 - insert into node_field_revision (changed, created, default_langcode, langcode, promote, revision_translation_affected, 
status, sticky, title, uid, vid, nid) values (1605756397, 1605756397, 1, 'zh-hans', 0, 1, 1, 
0, '06丨特别放送：北美大厂如何招聘全栈工程师？', 1, 44, 44) 
 {executed in 1 msec}
2020-11-19 11:26:37.158 INFO  jdbc.sqltiming Line:373 - select nodefiledd0_.nid as nid1_9_0_, nodefiledd0_.changed as changed2_9_0_, nodefiledd0_.created 
as created3_9_0_, nodefiledd0_.default_langcode as default_4_9_0_, nodefiledd0_.langcode as 
langcode5_9_0_, nodefiledd0_.promote as promote6_9_0_, nodefiledd0_.revision_translation_affected 
as revision7_9_0_, nodefiledd0_.status as status8_9_0_, nodefiledd0_.sticky as sticky9_9_0_, 
nodefiledd0_.title as title10_9_0_, nodefiledd0_.type as type11_9_0_, nodefiledd0_.uid as uid12_9_0_, 
nodefiledd0_.vid as vid13_9_0_ from node_field_data nodefiledd0_ where nodefiledd0_.nid=44 
 {executed in 0 msec}
2020-11-19 11:26:37.159 INFO  jdbc.resultsettable Line:610 - 
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|-----|----|----|
|nid |changed |created |default_langcode |langcode |promote |revision_translation_affected |status |sticky |title |type |uid |vid |
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|-----|----|----|
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|-----|----|----|

2020-11-19 11:26:37.160 INFO  jdbc.sqltiming Line:373 - insert into node_field_data (changed, created, default_langcode, langcode, promote, revision_translation_affected, 
status, sticky, title, type, uid, vid, nid) values (1605756397, 1605756397, 1, 'zh-hans', 0, 
1, 1, 0, '06丨特别放送：北美大厂如何招聘全栈工程师？', 'book', 1, 44, 44) 
 {executed in 0 msec}
2020-11-19 11:26:37.163 INFO  jdbc.sqltiming Line:373 - select bookfieldm0_.entity_id as entity_i1_7_, bookfieldm0_.bundle as bundle2_7_, bookfieldm0_.delta 
as delta3_7_, bookfieldm0_.langcode as langcode4_7_, bookfieldm0_.field_media_value as field_me5_7_, 
bookfieldm0_.revision_id as revision6_7_ from node__field_media bookfieldm0_ where bookfieldm0_.entity_id=44 
 {executed in 0 msec}
2020-11-19 11:26:37.164 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------------|------------|
|entity_id |bundle |delta |langcode |field_media_value |revision_id |
|----------|-------|------|---------|------------------|------------|
|----------|-------|------|---------|------------------|------------|

2020-11-19 11:26:37.164 INFO  jdbc.sqltiming Line:373 - select bookfieldm0_.entity_id as entity_i1_7_0_, bookfieldm0_.bundle as bundle2_7_0_, bookfieldm0_.delta 
as delta3_7_0_, bookfieldm0_.langcode as langcode4_7_0_, bookfieldm0_.field_media_value as 
field_me5_7_0_, bookfieldm0_.revision_id as revision6_7_0_ from node__field_media bookfieldm0_ 
where bookfieldm0_.entity_id=44 
 {executed in 0 msec}
2020-11-19 11:26:37.164 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------------|------------|
|entity_id |bundle |delta |langcode |field_media_value |revision_id |
|----------|-------|------|---------|------------------|------------|
|----------|-------|------|---------|------------------|------------|

2020-11-19 11:26:37.166 INFO  jdbc.sqltiming Line:373 - insert into node__field_media (bundle, delta, langcode, field_media_value, revision_id, entity_id) 
values ('book', 0, 'zh-hans', 'https://qdall01.baidupcs.com/file/15ed734bae9037766c2f30a90d12d678?bkt=en-2e2b5030dd6ff03761ddaf72baee202778c0a76e1b7845a94b5c6c84650dbb59fcb1c1a4e17b29f9&fid=3757516097-778750-604076614142321&time=1605756395&sign=FDTAXUGERLQlBHSKfWqir-DCb740ccc5511e5e8fedcff06b081203-7F4GTUvy9kQMS7CaEobKY%2FwGceM%3D&to=92&size=16743429&sta_dx=16743429&sta_cs=3966&sta_ft=m4a&sta_ct=7&sta_mt=0&fm2=MH%2CYangquan%2CAnywhere%2C%2Cshanghai%2Cct&ctime=1569224651&mtime=1605754778&resv0=-1&resv1=0&resv2=rlim&resv3=2&resv4=16743429&vuk=3757516097&iv=0&htype=&randtype=em&newver=1&newfm=1&secfm=1&flow_ver=3&pkey=en-1dba7c78167d8a03665f88fd3c85c1e6a2bcf0111d01bf3b056fe23730058b94ffa9642174aeafdc&sl=76480590&expires=8h&rt=pr&r=658032387&mlogid=7502340269078941848&vbdid=2247232042&fin=06%E4%B8%A8%E7%89%B9%E5%88%AB%E6%94%BE%E9%80%81%EF%BC%9A%E5%8C%97%E7%BE%8E%E5%A4%A7%E5%8E%82%E5%A6%82%E4%BD%95%E6%8B%9B%E8%81%98%E5%85%A8%E6%A0%88%E5%B7%A5%E7%A8%8B%E5%B8%88%EF%BC%9F.m4a&bflag=92,34-92&rtype=1&dp-logid=7502340269078941848&dp-callid=0.1.1&hps=1&tsl=80&csl=80&fsl=-1&csign=yVzLQPCt4DblfMLqd2BCjd2RnqQ%3D&so=0&ut=6&uter=0&serv=0&uc=1458616558&ti=c77a2290e27174be068f1a92ae528a3ae9331d2b3c31a6f9305a5e1275657320&hflag=30&adg=c_15d187590626c675056c89c8026cfc17&reqlabel=778750_l_1bf9445f27094ab64c9f1cb0bdf7ccfa_-1_dd2c452b8e51a0c74130d7cf32c48a2d&ibp=1&by=themis&filename=06%E4%B8%A8%E7%89%B9%E5%88%AB%E6%94%BE%E9%80%81%EF%BC%9A%E5%8C%97%E7%BE%8E%E5%A4%A7%E5%8E%82%E5%A6%82%E4%BD%95%E6%8B%9B%E8%81%98%E5%85%A8%E6%A0%88%E5%B7%A5%E7%A8%8B%E5%B8%88%EF%BC%9F.m4a', 
44, 44) 
 {executed in 0 msec}
2020-11-19 11:26:37.169 INFO  jdbc.sqltiming Line:373 - select nodefieldm0_.entity_id as entity_i1_16_0_, nodefieldm0_.bundle as bundle2_16_0_, nodefieldm0_.delta 
as delta3_16_0_, nodefieldm0_.langcode as langcode4_16_0_, nodefieldm0_.field_media_value as 
field_me5_16_0_, nodefieldm0_.revision_id as revision6_16_0_ from node_revision__field_media 
nodefieldm0_ where nodefieldm0_.entity_id=44 
 {executed in 1 msec}
2020-11-19 11:26:37.169 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------------|------------|
|entity_id |bundle |delta |langcode |field_media_value |revision_id |
|----------|-------|------|---------|------------------|------------|
|----------|-------|------|---------|------------------|------------|

2020-11-19 11:26:37.171 INFO  jdbc.sqltiming Line:373 - insert into node_revision__field_media (bundle, delta, langcode, field_media_value, revision_id, 
entity_id) values ('book', 0, 'zh-hans', 'https://qdall01.baidupcs.com/file/15ed734bae9037766c2f30a90d12d678?bkt=en-2e2b5030dd6ff03761ddaf72baee202778c0a76e1b7845a94b5c6c84650dbb59fcb1c1a4e17b29f9&fid=3757516097-778750-604076614142321&time=1605756395&sign=FDTAXUGERLQlBHSKfWqir-DCb740ccc5511e5e8fedcff06b081203-7F4GTUvy9kQMS7CaEobKY%2FwGceM%3D&to=92&size=16743429&sta_dx=16743429&sta_cs=3966&sta_ft=m4a&sta_ct=7&sta_mt=0&fm2=MH%2CYangquan%2CAnywhere%2C%2Cshanghai%2Cct&ctime=1569224651&mtime=1605754778&resv0=-1&resv1=0&resv2=rlim&resv3=2&resv4=16743429&vuk=3757516097&iv=0&htype=&randtype=em&newver=1&newfm=1&secfm=1&flow_ver=3&pkey=en-1dba7c78167d8a03665f88fd3c85c1e6a2bcf0111d01bf3b056fe23730058b94ffa9642174aeafdc&sl=76480590&expires=8h&rt=pr&r=658032387&mlogid=7502340269078941848&vbdid=2247232042&fin=06%E4%B8%A8%E7%89%B9%E5%88%AB%E6%94%BE%E9%80%81%EF%BC%9A%E5%8C%97%E7%BE%8E%E5%A4%A7%E5%8E%82%E5%A6%82%E4%BD%95%E6%8B%9B%E8%81%98%E5%85%A8%E6%A0%88%E5%B7%A5%E7%A8%8B%E5%B8%88%EF%BC%9F.m4a&bflag=92,34-92&rtype=1&dp-logid=7502340269078941848&dp-callid=0.1.1&hps=1&tsl=80&csl=80&fsl=-1&csign=yVzLQPCt4DblfMLqd2BCjd2RnqQ%3D&so=0&ut=6&uter=0&serv=0&uc=1458616558&ti=c77a2290e27174be068f1a92ae528a3ae9331d2b3c31a6f9305a5e1275657320&hflag=30&adg=c_15d187590626c675056c89c8026cfc17&reqlabel=778750_l_1bf9445f27094ab64c9f1cb0bdf7ccfa_-1_dd2c452b8e51a0c74130d7cf32c48a2d&ibp=1&by=themis&filename=06%E4%B8%A8%E7%89%B9%E5%88%AB%E6%94%BE%E9%80%81%EF%BC%9A%E5%8C%97%E7%BE%8E%E5%A4%A7%E5%8E%82%E5%A6%82%E4%BD%95%E6%8B%9B%E8%81%98%E5%85%A8%E6%A0%88%E5%B7%A5%E7%A8%8B%E5%B8%88%EF%BC%9F.m4a', 
44, 44) 
 {executed in 0 msec}
2020-11-19 11:26:37.174 INFO  jdbc.sqltiming Line:373 - select bookfieldc0_.entity_id as entity_i1_4_, bookfieldc0_.bundle as bundle2_4_, bookfieldc0_.field_comment_value 
as field_co3_4_, bookfieldc0_.delta as delta4_4_, bookfieldc0_.field_comment_format as field_co5_4_, 
bookfieldc0_.langcode as langcode6_4_, bookfieldc0_.revision_id as revision7_4_ from node__field_comment 
bookfieldc0_ where bookfieldc0_.entity_id=44 
 {executed in 1 msec}
2020-11-19 11:26:37.174 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|--------------------|------|---------------------|---------|------------|
|entity_id |bundle |field_comment_value |delta |field_comment_format |langcode |revision_id |
|----------|-------|--------------------|------|---------------------|---------|------------|
|----------|-------|--------------------|------|---------------------|---------|------------|

2020-11-19 11:26:37.175 INFO  jdbc.sqltiming Line:373 - select bookfieldc0_.entity_id as entity_i1_4_0_, bookfieldc0_.bundle as bundle2_4_0_, bookfieldc0_.field_comment_value 
as field_co3_4_0_, bookfieldc0_.delta as delta4_4_0_, bookfieldc0_.field_comment_format as 
field_co5_4_0_, bookfieldc0_.langcode as langcode6_4_0_, bookfieldc0_.revision_id as revision7_4_0_ 
from node__field_comment bookfieldc0_ where bookfieldc0_.entity_id=44 
 {executed in 1 msec}
2020-11-19 11:26:37.175 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|--------------------|------|---------------------|---------|------------|
|entity_id |bundle |field_comment_value |delta |field_comment_format |langcode |revision_id |
|----------|-------|--------------------|------|---------------------|---------|------------|
|----------|-------|--------------------|------|---------------------|---------|------------|

2020-11-19 11:26:37.178 INFO  jdbc.sqltiming Line:373 - insert into node__field_comment (bundle, field_comment_value, delta, field_comment_format, 
langcode, revision_id, entity_id) values ('book', '<li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/14/34/df/64e3d533.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>leslie</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2019-09-23 </div> </div> <!----> 
</div> <div> <div class="_3M6kV3zb_0"> 阐述一下个人观点：目前处在不止只是全栈进一步转型中；既然老师定位的是全栈。那么可能我个人会从觉得这个设计还是明显太片面了。 
<br>&nbsp;&nbsp;&nbsp;&nbsp;我认为这5道题目中只有BD是肯定合适：A和C只能保留一个，如果我是出题者我会保留A但是难度上强化；CE的问题就比较典型：C过于单纯的考察单一方式了，E其实应当去考察网络相关的。这样才符合全栈的概念。以下是对于老师给出的5道题目的分析 
<br>&nbsp;&nbsp;&nbsp;&nbsp;A：考察了IT的基本功 <br>&nbsp;&nbsp;&nbsp;&nbsp;B：其实就是一个整体思路、其实应当就会涉及的MQ之类的 
<br>&nbsp;&nbsp;&nbsp;&nbsp;C：如果再去考算法就重复了：应当去考察其它方面的，而且如果用单一算法就限制了考生的思路；如果是我可能会把D考题提前，然后这个去考察考生关于系统方面的 
<br>&nbsp;&nbsp;&nbsp;&nbsp;D：整体考察了一个考生的整体设计思路：从软件的开始、数据系统 <br>&nbsp;&nbsp;&nbsp;&nbsp;E：完成一个HTML这个有点太、、、考察了nginx之类的，但是只是这么去考察似乎有点、、、如果是我至少会是提供一组html去考察并且把网络相关的融入进去。 
<br>&nbsp;&nbsp;&nbsp;&nbsp;其实现在一边在全栈的过程中一边从整体架构去思考和考虑：毕竟全栈-五道题基本可以考察完一个全栈的基本实力了；毕竟做为全栈的考题，明显感觉老师的题目中缺少了关于系统和网络对于考生的考察，这又是一个SRE必须的基本技能；以上是我的个人观点。不知道老师的观点是如何看待？ 
<br>&nbsp;&nbsp;&nbsp;&nbsp;谢谢老师的分享：期待下节课老师的受教。 </div> <div class="_2r3UB1GX_0"> <span>展开</span><i 
class="iconfont"></i> </div> <!----> <div class="_1w8H0ktn_0 _2A421P4G_0"> <div class="_2jsFl-X0_0"> 
<i class="iconfont"></i> <span></span> </div> <div class="_2P4B1Hdm_0"> <i class="iconfont"></i> 
<span class=""></span> </div> <!----> </div> </div> </div></li> <li class="reJj6Thl_0"><img 
src="https://static001.geekbang.org/account/avatar/00/11/44/cd/04f3a16c.jpg" class="_2273kGdT_0"> 
<div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> <span>看不懂的你</span> 
<!----> </div> <div class="_1H1Z49Dr_0"> 2019-09-23 </div> </div> <!----> </div> <div> <div 
class="_3M6kV3zb_0 _3D2NkqD6_0"> 有没有什么方式对自我能力进行评判，是看自己能不能回答世面上所有的面试笔试题么？ </div> <!----> <!----> 
<div class="_1w8H0ktn_0 _2A421P4G_0"> <div class="_2jsFl-X0_0"> <i class="iconfont"></i> <span></span> 
</div> <div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class=""></span> </div> <!----> 
</div> </div> </div></li> <li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/15/3c/89/75a8478b.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>Geek_0122d3</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2019-09-23 </div> </div> 
<!----> </div> <div> <div class="_3M6kV3zb_0"> 四火老师您好，我是明年将要毕业的学生，上周三刚刚参加完亚马逊中国来武汉的现场面试，流程和这篇文章里写的真的很像，编程题占了大比重，不过总共只面了两轮，虽然没什么通过的希望但是趁机会听面试官讲了很多，有谈到亚马逊重视工程师的全栈技能，sde是someone 
develop everything。 <br>而我个人未来也是想往全栈的方向走，很明显外企这样的氛围更有助于成长为全栈工程师，国内的工程师往往都是分工的。但问题是国内的外企真的不多，如果没有去外企的机会而只能去国内公司做前端或者后端，这样的话应该怎么样开展自己对于全栈的学习呢? 
谢谢您 </div> <div class="_2r3UB1GX_0"> <span>展开</span><i class="iconfont"></i> </div> <!----> 
<div class="_1w8H0ktn_0 _2A421P4G_0"> <div class="_2jsFl-X0_0"> <i class="iconfont"></i> <span></span> 
</div> <div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class=""></span> </div> <!----> 
</div> </div> </div></li>', 0, 'full_html', 'zh-hans', 44, 44) 
 {executed in 2 msec}
2020-11-19 11:26:37.181 INFO  jdbc.sqltiming Line:373 - select nodefieldc0_.entity_id as entity_i1_13_0_, nodefieldc0_.bundle as bundle2_13_0_, nodefieldc0_.field_comment_value 
as field_co3_13_0_, nodefieldc0_.delta as delta4_13_0_, nodefieldc0_.field_comment_format as 
field_co5_13_0_, nodefieldc0_.langcode as langcode6_13_0_, nodefieldc0_.revision_id as revision7_13_0_ 
from node_revision__field_comment nodefieldc0_ where nodefieldc0_.entity_id=44 
 {executed in 0 msec}
2020-11-19 11:26:37.181 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|--------------------|------|---------------------|---------|------------|
|entity_id |bundle |field_comment_value |delta |field_comment_format |langcode |revision_id |
|----------|-------|--------------------|------|---------------------|---------|------------|
|----------|-------|--------------------|------|---------------------|---------|------------|

2020-11-19 11:26:37.185 INFO  jdbc.sqltiming Line:373 - insert into node_revision__field_comment (bundle, field_comment_value, delta, field_comment_format, 
langcode, revision_id, entity_id) values ('book', '<li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/14/34/df/64e3d533.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>leslie</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2019-09-23 </div> </div> <!----> 
</div> <div> <div class="_3M6kV3zb_0"> 阐述一下个人观点：目前处在不止只是全栈进一步转型中；既然老师定位的是全栈。那么可能我个人会从觉得这个设计还是明显太片面了。 
<br>&nbsp;&nbsp;&nbsp;&nbsp;我认为这5道题目中只有BD是肯定合适：A和C只能保留一个，如果我是出题者我会保留A但是难度上强化；CE的问题就比较典型：C过于单纯的考察单一方式了，E其实应当去考察网络相关的。这样才符合全栈的概念。以下是对于老师给出的5道题目的分析 
<br>&nbsp;&nbsp;&nbsp;&nbsp;A：考察了IT的基本功 <br>&nbsp;&nbsp;&nbsp;&nbsp;B：其实就是一个整体思路、其实应当就会涉及的MQ之类的 
<br>&nbsp;&nbsp;&nbsp;&nbsp;C：如果再去考算法就重复了：应当去考察其它方面的，而且如果用单一算法就限制了考生的思路；如果是我可能会把D考题提前，然后这个去考察考生关于系统方面的 
<br>&nbsp;&nbsp;&nbsp;&nbsp;D：整体考察了一个考生的整体设计思路：从软件的开始、数据系统 <br>&nbsp;&nbsp;&nbsp;&nbsp;E：完成一个HTML这个有点太、、、考察了nginx之类的，但是只是这么去考察似乎有点、、、如果是我至少会是提供一组html去考察并且把网络相关的融入进去。 
<br>&nbsp;&nbsp;&nbsp;&nbsp;其实现在一边在全栈的过程中一边从整体架构去思考和考虑：毕竟全栈-五道题基本可以考察完一个全栈的基本实力了；毕竟做为全栈的考题，明显感觉老师的题目中缺少了关于系统和网络对于考生的考察，这又是一个SRE必须的基本技能；以上是我的个人观点。不知道老师的观点是如何看待？ 
<br>&nbsp;&nbsp;&nbsp;&nbsp;谢谢老师的分享：期待下节课老师的受教。 </div> <div class="_2r3UB1GX_0"> <span>展开</span><i 
class="iconfont"></i> </div> <!----> <div class="_1w8H0ktn_0 _2A421P4G_0"> <div class="_2jsFl-X0_0"> 
<i class="iconfont"></i> <span></span> </div> <div class="_2P4B1Hdm_0"> <i class="iconfont"></i> 
<span class=""></span> </div> <!----> </div> </div> </div></li> <li class="reJj6Thl_0"><img 
src="https://static001.geekbang.org/account/avatar/00/11/44/cd/04f3a16c.jpg" class="_2273kGdT_0"> 
<div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> <span>看不懂的你</span> 
<!----> </div> <div class="_1H1Z49Dr_0"> 2019-09-23 </div> </div> <!----> </div> <div> <div 
class="_3M6kV3zb_0 _3D2NkqD6_0"> 有没有什么方式对自我能力进行评判，是看自己能不能回答世面上所有的面试笔试题么？ </div> <!----> <!----> 
<div class="_1w8H0ktn_0 _2A421P4G_0"> <div class="_2jsFl-X0_0"> <i class="iconfont"></i> <span></span> 
</div> <div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class=""></span> </div> <!----> 
</div> </div> </div></li> <li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/15/3c/89/75a8478b.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>Geek_0122d3</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2019-09-23 </div> </div> 
<!----> </div> <div> <div class="_3M6kV3zb_0"> 四火老师您好，我是明年将要毕业的学生，上周三刚刚参加完亚马逊中国来武汉的现场面试，流程和这篇文章里写的真的很像，编程题占了大比重，不过总共只面了两轮，虽然没什么通过的希望但是趁机会听面试官讲了很多，有谈到亚马逊重视工程师的全栈技能，sde是someone 
develop everything。 <br>而我个人未来也是想往全栈的方向走，很明显外企这样的氛围更有助于成长为全栈工程师，国内的工程师往往都是分工的。但问题是国内的外企真的不多，如果没有去外企的机会而只能去国内公司做前端或者后端，这样的话应该怎么样开展自己对于全栈的学习呢? 
谢谢您 </div> <div class="_2r3UB1GX_0"> <span>展开</span><i class="iconfont"></i> </div> <!----> 
<div class="_1w8H0ktn_0 _2A421P4G_0"> <div class="_2jsFl-X0_0"> <i class="iconfont"></i> <span></span> 
</div> <div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class=""></span> </div> <!----> 
</div> </div> </div></li>', 0, 'full_html', 'zh-hans', 44, 44) 
 {executed in 2 msec}
2020-11-19 11:26:37.187 INFO  jdbc.sqltiming Line:373 - select bookfieldt0_.entity_id as entity_i1_8_, bookfieldt0_.bundle as bundle2_8_, bookfieldt0_.delta 
as delta3_8_, bookfieldt0_.langcode as langcode4_8_, bookfieldt0_.revision_id as revision5_8_, 
bookfieldt0_.field_thumb_value as field_th6_8_ from node__field_thumb bookfieldt0_ where bookfieldt0_.entity_id=44 
 {executed in 0 msec}
2020-11-19 11:26:37.188 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------|------------------|
|entity_id |bundle |delta |langcode |revision_id |field_thumb_value |
|----------|-------|------|---------|------------|------------------|
|----------|-------|------|---------|------------|------------------|

2020-11-19 11:26:37.189 INFO  jdbc.sqltiming Line:373 - select bookfieldt0_.entity_id as entity_i1_8_0_, bookfieldt0_.bundle as bundle2_8_0_, bookfieldt0_.delta 
as delta3_8_0_, bookfieldt0_.langcode as langcode4_8_0_, bookfieldt0_.revision_id as revision5_8_0_, 
bookfieldt0_.field_thumb_value as field_th6_8_0_ from node__field_thumb bookfieldt0_ where 
bookfieldt0_.entity_id=44 
 {executed in 1 msec}
2020-11-19 11:26:37.189 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------|------------------|
|entity_id |bundle |delta |langcode |revision_id |field_thumb_value |
|----------|-------|------|---------|------------|------------------|
|----------|-------|------|---------|------------|------------------|

2020-11-19 11:26:37.191 INFO  jdbc.sqltiming Line:373 - insert into node__field_thumb (bundle, delta, langcode, revision_id, field_thumb_value, entity_id) 
values ('book', 0, 'zh-hans', 44, 'https://static001.geekbang.org/resource/image/87/4f/87e3b2579571873adadb1dc42f3d374f.jpg', 
44) 
 {executed in 1 msec}
2020-11-19 11:26:37.194 INFO  jdbc.sqltiming Line:373 - select nodefieldt0_.entity_id as entity_i1_17_0_, nodefieldt0_.bundle as bundle2_17_0_, nodefieldt0_.delta 
as delta3_17_0_, nodefieldt0_.langcode as langcode4_17_0_, nodefieldt0_.revision_id as revision5_17_0_, 
nodefieldt0_.field_thumb_value as field_th6_17_0_ from node_revision__field_thumb nodefieldt0_ 
where nodefieldt0_.entity_id=44 
 {executed in 1 msec}
2020-11-19 11:26:37.194 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------|------------------|
|entity_id |bundle |delta |langcode |revision_id |field_thumb_value |
|----------|-------|------|---------|------------|------------------|
|----------|-------|------|---------|------------|------------------|

2020-11-19 11:26:37.196 INFO  jdbc.sqltiming Line:373 - insert into node_revision__field_thumb (bundle, delta, langcode, revision_id, field_thumb_value, 
entity_id) values ('book', 0, 'zh-hans', 44, 'https://static001.geekbang.org/resource/image/87/4f/87e3b2579571873adadb1dc42f3d374f.jpg', 
44) 
 {executed in 0 msec}
2020-11-19 11:26:37.199 INFO  jdbc.sqltiming Line:373 - select bookfieldf0_.entity_id as entity_i1_5_0_, bookfieldf0_.bundle as bundle2_5_0_, bookfieldf0_.delta 
as delta3_5_0_, bookfieldf0_.field_fenlei_target_id as field_fe4_5_0_, bookfieldf0_.langcode 
as langcode5_5_0_, bookfieldf0_.revision_id as revision6_5_0_ from node__field_fenlei bookfieldf0_ 
where bookfieldf0_.entity_id=44 
 {executed in 1 msec}
2020-11-19 11:26:37.199 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------------|---------|------------|
|entity_id |bundle |delta |field_fenlei_target_id |langcode |revision_id |
|----------|-------|------|-----------------------|---------|------------|
|----------|-------|------|-----------------------|---------|------------|

2020-11-19 11:26:37.200 INFO  jdbc.sqltiming Line:373 - insert into node__field_fenlei (bundle, delta, field_fenlei_target_id, langcode, revision_id, 
entity_id) values ('book', 0, 1, 'zh-hans', 44, 44) 
 {executed in 0 msec}
2020-11-19 11:26:37.203 INFO  jdbc.sqltiming Line:373 - select nodefieldf0_.entity_id as entity_i1_14_0_, nodefieldf0_.bundle as bundle2_14_0_, nodefieldf0_.delta 
as delta3_14_0_, nodefieldf0_.field_fenlei_target_id as field_fe4_14_0_, nodefieldf0_.langcode 
as langcode5_14_0_, nodefieldf0_.revision_id as revision6_14_0_ from node_revision__field_fenlei 
nodefieldf0_ where nodefieldf0_.entity_id=44 
 {executed in 0 msec}
2020-11-19 11:26:37.203 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------------|---------|------------|
|entity_id |bundle |delta |field_fenlei_target_id |langcode |revision_id |
|----------|-------|------|-----------------------|---------|------------|
|----------|-------|------|-----------------------|---------|------------|

2020-11-19 11:26:37.205 INFO  jdbc.sqltiming Line:373 - insert into node_revision__field_fenlei (bundle, delta, field_fenlei_target_id, langcode, revision_id, 
entity_id) values ('book', 0, 1, 'zh-hans', 44, 44) 
 {executed in 0 msec}
2020-11-19 11:27:07.955 INFO  jdbc.sqltiming Line:373 - select bookfieldf0_.entity_id as entity_i1_6_, bookfieldf0_.bundle as bundle2_6_, bookfieldf0_.delta 
as delta3_6_, bookfieldf0_.field_fsid_value as field_fs4_6_, bookfieldf0_.langcode as langcode5_6_, 
bookfieldf0_.revision_id as revision6_6_ from node__field_fsid bookfieldf0_ where bookfieldf0_.field_fsid_value='1094893969966609' 
 {executed in 0 msec}
2020-11-19 11:27:07.955 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------|---------|------------|
|entity_id |bundle |delta |field_fsid_value |langcode |revision_id |
|----------|-------|------|-----------------|---------|------------|
|----------|-------|------|-----------------|---------|------------|

2020-11-19 11:27:07.956 INFO  jdbc.sqltiming Line:373 - insert into node_revision (langcode, nid, revision_default, revision_timestamp, revision_uid) 
values ('zh-hans', 0, 1, 1605756427, 1) 
 {executed in 0 msec}
2020-11-19 11:27:07.956 INFO  jdbc.sqltiming Line:373 - getGeneratedKeys on query: insert into node_revision (langcode, nid, revision_default, revision_timestamp, 
revision_uid) values ('zh-hans', 0, 1, 1605756427, 1) 
 {executed in 0 msec}
2020-11-19 11:27:07.957 INFO  jdbc.resultsettable Line:610 - 
|--------------|
|generated_key |
|--------------|
|45            |
|--------------|

2020-11-19 11:27:07.962 INFO  jdbc.sqltiming Line:373 - insert into node (langcode, type, uuid, vid) values ('zh-hans', 'book', '8fd600fb-980a-4049-b90f-4f954a10b0d3', 
45) 
 {executed in 0 msec}
2020-11-19 11:27:07.962 INFO  jdbc.sqltiming Line:373 - getGeneratedKeys on query: insert into node (langcode, type, uuid, vid) values ('zh-hans', 
'book', '8fd600fb-980a-4049-b90f-4f954a10b0d3', 45) 
 {executed in 0 msec}
2020-11-19 11:27:07.963 INFO  jdbc.resultsettable Line:610 - 
|--------------|
|generated_key |
|--------------|
|45            |
|--------------|

2020-11-19 11:27:07.970 INFO  jdbc.sqltiming Line:373 - update node_revision set langcode='zh-hans', nid=45, revision_default=1, revision_timestamp=1605756427, 
revision_uid=1 where vid=45 
 {executed in 0 msec}
2020-11-19 11:27:07.973 INFO  jdbc.sqltiming Line:373 - select bookfieldf0_.entity_id as entity_i1_6_0_, bookfieldf0_.bundle as bundle2_6_0_, bookfieldf0_.delta 
as delta3_6_0_, bookfieldf0_.field_fsid_value as field_fs4_6_0_, bookfieldf0_.langcode as langcode5_6_0_, 
bookfieldf0_.revision_id as revision6_6_0_ from node__field_fsid bookfieldf0_ where bookfieldf0_.entity_id=45 
 {executed in 1 msec}
2020-11-19 11:27:07.973 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------|---------|------------|
|entity_id |bundle |delta |field_fsid_value |langcode |revision_id |
|----------|-------|------|-----------------|---------|------------|
|----------|-------|------|-----------------|---------|------------|

2020-11-19 11:27:07.975 INFO  jdbc.sqltiming Line:373 - insert into node__field_fsid (bundle, delta, field_fsid_value, langcode, revision_id, entity_id) 
values ('book', 0, '1094893969966609', 'zh-hans', 45, 45) 
 {executed in 1 msec}
2020-11-19 11:27:07.979 INFO  jdbc.sqltiming Line:373 - select nodefieldf0_.entity_id as entity_i1_15_0_, nodefieldf0_.bundle as bundle2_15_0_, nodefieldf0_.delta 
as delta3_15_0_, nodefieldf0_.field_fsid_value as field_fs4_15_0_, nodefieldf0_.langcode as 
langcode5_15_0_, nodefieldf0_.revision_id as revision6_15_0_ from node_revision__field_fsid 
nodefieldf0_ where nodefieldf0_.entity_id=45 
 {executed in 0 msec}
2020-11-19 11:27:07.980 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------|---------|------------|
|entity_id |bundle |delta |field_fsid_value |langcode |revision_id |
|----------|-------|------|-----------------|---------|------------|
|----------|-------|------|-----------------|---------|------------|

2020-11-19 11:27:07.981 INFO  jdbc.sqltiming Line:373 - insert into node_revision__field_fsid (bundle, delta, field_fsid_value, langcode, revision_id, 
entity_id) values ('book', 0, '1094893969966609', 'zh-hans', 45, 45) 
 {executed in 0 msec}
2020-11-19 11:27:07.984 INFO  jdbc.sqltiming Line:373 - select bookentity0_.nid as nid1_1_, bookentity0_.bid as bid2_1_, bookentity0_.depth as depth3_1_, 
bookentity0_.has_children as has_chil4_1_, bookentity0_.p1 as p5_1_, bookentity0_.p2 as p6_1_, 
bookentity0_.p3 as p7_1_, bookentity0_.p4 as p8_1_, bookentity0_.p5 as p9_1_, bookentity0_.pid 
as pid10_1_, bookentity0_.weight as weight11_1_ from book bookentity0_ where bookentity0_.nid=45 
 {executed in 0 msec}
2020-11-19 11:27:07.985 INFO  jdbc.resultsettable Line:610 - 
|----|----|------|-------------|---|---|---|---|---|----|-------|
|nid |bid |depth |has_children |p1 |p2 |p3 |p4 |p5 |pid |weight |
|----|----|------|-------------|---|---|---|---|---|----|-------|
|----|----|------|-------------|---|---|---|---|---|----|-------|

2020-11-19 11:27:07.986 INFO  jdbc.sqltiming Line:373 - select bookentity0_.nid as nid1_1_0_, bookentity0_.bid as bid2_1_0_, bookentity0_.depth as 
depth3_1_0_, bookentity0_.has_children as has_chil4_1_0_, bookentity0_.p1 as p5_1_0_, bookentity0_.p2 
as p6_1_0_, bookentity0_.p3 as p7_1_0_, bookentity0_.p4 as p8_1_0_, bookentity0_.p5 as p9_1_0_, 
bookentity0_.pid as pid10_1_0_, bookentity0_.weight as weight11_1_0_ from book bookentity0_ 
where bookentity0_.nid=45 
 {executed in 1 msec}
2020-11-19 11:27:07.986 INFO  jdbc.resultsettable Line:610 - 
|----|----|------|-------------|---|---|---|---|---|----|-------|
|nid |bid |depth |has_children |p1 |p2 |p3 |p4 |p5 |pid |weight |
|----|----|------|-------------|---|---|---|---|---|----|-------|
|----|----|------|-------------|---|---|---|---|---|----|-------|

2020-11-19 11:27:07.988 INFO  jdbc.sqltiming Line:373 - insert into book (bid, depth, has_children, p1, p2, p3, p4, p5, pid, weight, nid) values (1, 
3, 0, 1, 43, 45, 0, 0, 43, 0, 45) 
 {executed in 1 msec}
2020-11-19 11:27:07.990 INFO  jdbc.sqltiming Line:373 - select nodebodyen0_.entity_id as entity_i1_3_, nodebodyen0_.body_value as body_val2_3_, nodebodyen0_.body_summary 
as body_sum3_3_, nodebodyen0_.bundle as bundle4_3_, nodebodyen0_.delta as delta5_3_, nodebodyen0_.body_format 
as body_for6_3_, nodebodyen0_.langcode as langcode7_3_, nodebodyen0_.revision_id as revision8_3_ 
from node__body nodebodyen0_ where nodebodyen0_.entity_id=45 
 {executed in 0 msec}
2020-11-19 11:27:07.991 INFO  jdbc.resultsettable Line:610 - 
|----------|-----------|-------------|-------|------|------------|---------|------------|
|entity_id |body_value |body_summary |bundle |delta |body_format |langcode |revision_id |
|----------|-----------|-------------|-------|------|------------|---------|------------|
|----------|-----------|-------------|-------|------|------------|---------|------------|

2020-11-19 11:27:07.991 INFO  jdbc.sqltiming Line:373 - select nodebodyre0_.entity_id as entity_i1_12_0_, nodebodyre0_.body_value as body_val2_12_0_, 
nodebodyre0_.body_summary as body_sum3_12_0_, nodebodyre0_.bundle as bundle4_12_0_, nodebodyre0_.delta 
as delta5_12_0_, nodebodyre0_.body_format as body_for6_12_0_, nodebodyre0_.langcode as langcode7_12_0_, 
nodebodyre0_.revision_id as revision8_12_0_ from node_revision__body nodebodyre0_ where nodebodyre0_.entity_id=45 
 {executed in 0 msec}
2020-11-19 11:27:07.991 INFO  jdbc.resultsettable Line:610 - 
|----------|-----------|-------------|-------|------|------------|---------|------------|
|entity_id |body_value |body_summary |bundle |delta |body_format |langcode |revision_id |
|----------|-----------|-------------|-------|------|------------|---------|------------|
|----------|-----------|-------------|-------|------|------------|---------|------------|

2020-11-19 11:27:07.994 INFO  jdbc.sqltiming Line:373 - insert into node_revision__body (body_value, body_summary, bundle, delta, body_format, langcode, 
revision_id, entity_id) values ('<p>你好，我是四火。</p> <p>今天，我们该根据之前所学，来谈谈具体怎样设计 Web API 接口了。我们围绕的核心，是<strong>“权衡”（trade-off）</strong>这两个字，事实上，它不只是 
Web API 接口设计的核心，还是软件绝大多数设计问题的核心。</p> <p>我们说“没有银弹”，是因为没有一种技术可以百搭，没有一种解决方案是完美的，但一个优秀的全栈工程师，是可以从琳琅满目的同类技术中，因地制宜地选择出最适合的那一个。</p> 
<h2>概念</h2> <p>在一切开始之前，我们先来明确概念。什么是 Web API？</p> <p>你应该很熟悉 API，即 Application Programming Interface，应用程序的接口。它指的就是一组约定，不同系统之间的沟通必须遵循的协议。使用者知道了 
API，就知道该怎样和它沟通，使用它的功能，而不关心它是怎么实现的。</p> <p>Web API 指的依然是应用程序接口，只不过它现在暴露在了 Web 的环境里。并且，我们通常意义上讲 
Web API 的时候，无论是在 B/S（浏览器 / 服务器）模型还是 C/S（客户端 / 服务器）模型下，往往都心照不宣地默认它在服务端，并被动地接受请求消息，返回响应。</p> 
<p>通常一个 Web API 需要包括哪些内容呢？</p> <p>回答这个问题前，让我们先闭上眼想一想，如果没有“Web”这个修饰词，普通的 API 要包括哪些内容呢？嗯，功能、性能、入参、返回值……它们都对，看起来几乎是所有普通 
API 的特性，在 Web API 中也全都存在。而且，因为 Web 的特性，它还具备我们谈论普通 API 时不太涉及的内容：</p><!-- [[[read_end]]] --> 
<ul> <li>比如承载协议。这里可以有多个协议，因为协议是分层的。HTTP 协议和 TCP 协议就是并存的。</li> <li>再比如请求和响应格式。Web API 将普通 API 
的方法调用变成了网络通信，因此参数的传入变成了请求传入，结果返回变成了响应传出。</li> </ul> <p>正是有了 Web API，网络中的不同应用才能互相协作，分布式系统才能正常工作，互联网才能如此蓬勃发展。而我们，不能只停留在“知道”的层面，还要去深入了解它们。</p> 
<h2>Web API 的设计步骤</h2> <p>关于 Web API 的设计步骤，不同人有不同的理解，争论不少，涉及到的内容也非常广泛。这里我综合了自己的经验和观点进行介绍，希望你能有所启发。</p> 
<h3>第一步：明确核心问题，确定问题域</h3> <p>和普通的 API 设计、程序的库设计一样，Web API 并不是东打一枪，西打一炮的。想想写代码的时候，我们还要让同类型的方法，以某种方式组织在类和对象中，实现功能上的内聚呢，一个类还要遵循单一职责的原则呢。</p> 
<p>因此，一组 Web API，就是要专注于一类问题，核心问题必须是最重要的一个。</p> <p>在上一讲中我举了个图书管理系统的例子，那么可以想象，图书的增删改查 API 就可以放到一起，而如果有一个新的 
API 用于查询图书馆内部员工的信息，那么它显然应该单独归纳到另外的类别中，甚至是另外的系统中。</p> <h3>第二步：结合实际需求和限制，选择承载技术</h3> <p>这里有两件事情需要你考虑，一个是需求，一个是限制。我们虽然经常这样分开说，但严格来说，限制也是需求的一种。比方说，如果对网络传输的效率要求很高，时延要求很短，这就是需求，而且是非功能性的需求。</p> 
<p>大多数功能性的需求大家都能意识到，但是一些非功能性的需求，或者一些“限制”就容易被忽略了。比如说，向前的兼容性，不同版本同时运行，鉴权和访问控制，库依赖限制，易测试性和可维护性，平滑发布（如新老接口并行），等等。</p> 
<p>再来说说承载技术。承载技术指的是实现接口，以及它的请求响应传输所需要使用到的技术集合，比如 HTTP + JSON。我们前面提到的要求网络传输效率高、时延短，<a href="https://developers.google.com/protocol-buffers/">Protobuf</a> 
就是一个值得考察的技术；但有时候，我们更需要消息直观、易读，那么显然 Protobuf 就不是一个适合的技术。这里我们通过分析技术优劣来做选择，这就是权衡。</p> <p>虽说 Web 
API 主要的工作在服务端，但在技术分析时还需要考虑客户端。特别是一些技术要求自动生成客户端，而有些技术则允许通过一定方式“定制”客户端（例如使用 DSL，Domain Specific 
Language，领域特定语言）。</p> <h3>第三步：确定接口风格</h3> <p>技术的选择将很大程度地影响接口的风格。</p> <p>还记得我在上一讲介绍的 SOAP 和 
REST 的例子吗？那就是接口风格比较的一个典型示例。请不要小看这两个字，“风格”包含的内容很多，大到怎样划分功能，小到接口的命名，都包括在内。在实际设计中，我们很少正面地去谈论具体的风格，但我们都有意无意地将其考虑在内。这里我举几个比较重要的例子，通过它，你会了解到权衡其实无处不在。</p> 
<p>角度一：易用性和通用性的平衡，或者说是设计“人本接口”还是“最简接口”。</p> <p>比如一个图书管理的接口，一种设计是让其返回“流行书籍”，实际的规则是根据出版日期、借阅人数、引进数量等等做了复杂的查询而得出；而另一种设计则是让用户来自行决定和传入这几个参数，服务端不理解业务含义，接口本身保持通用。</p> 
<p><strong>前者偏向“易用”，更接近人的思维；后者偏向“通用”，提供了最简化的接口。</strong>虽说多数情况下我们还是会见到后者多一些，但二者却不能说谁对谁错，它们实际代表了不同的风格，各有优劣。</p> 
<p>角度二：接口粒度的划分。</p> <p>比如用户还书的过程包括：还书排队登记、检查书本状况、图书入库，这一系列过程是设计成一个大的接口一并完成，还是设计成三个单独的接口分别调用完成？</p> 
<p>其实，这二者各有优劣。<strong>设计成大接口往往可以增加易用性，便于内部优化提高性能（而且只需调用一次）；设计成小接口可以增加可重用性，便于功能的组合。</strong></p> 
<p>你可能会想，两种方式都保留，让用户去选择不行吗？</p> <p>行，但那样给双方带来好处的同时，也带来了更多的问题，除了风格的不一致，接口也不再是正交的，而是有一定重叠性的，并且更多的接口意味着更多的开发和维护工作。这些接口要像是一个人设计出来的，而不是简单的组合添加，<strong>风格统一也是一致性的一种表现</strong>。因此，多数情况下我们不那么做。你看，这又是权衡。</p> 
<p>但是，我说的是“多数情况下”我们不那么做。在一些极端情况下，我们是会牺牲掉一致性，保留冗余的。</p> <p>我举一个 JDK 的例子。JDK 的 HashTable 有一个 
containsValue 方法，还有一个 contains 方法，二者功能上完全一样，之所以搞这样两个完全一样的方法，正是由于历史原因造成的。JDK 1.2 才正式引入 Java 
Collections Framework，抽象了 Map 接口，也才有了 containsValue 方法，而之前的方法因为需要保持向下兼容而无法删除，也是无可奈何。同样，这也是权衡。</p> 
<h3>第四步：定义具体接口形式</h3> <p>在上面这三步通用和共性的步骤完成之后，我们就可以正式跳进具体的接口定义中，去确定 URL、参数、返回和异常等通用而具体的形式了。还记得上一讲中对 
REST 请求发送要点的分解吗？在它的基础上，我们将继续以 REST 风格为例，进行更深刻的讨论。</p> <p><strong>1. 条件查询</strong></p> <p>我们在上一讲的例子中使用 
HTTP GET 请求从图书馆获取书本信息，从而完成增删改查中的“查”操作：</p> <pre style="position: relative;"><code> <table class="hljs-ln"> 
<tbody> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> /books/123 </div></td> </tr> <tr> <td 
class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> /books/123/price </div></td> </tr> </tbody> 
</table></code> <div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 </div></pre> 
<p>分别查询了 ID 为 123 的图书的全部属性，和该图书的价格信息。</p> <p>但是，实际的查所包含的内容可远比这个例子多，比如不是通过 ID 查询，而是通过条件查询：</p> 
<pre style="position: relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> /books?author=Smith&amp;page=2&amp;pageSize=10&amp;sortBy=name&amp;order=desc 
</div></td> </tr> </tbody> </table></code> <div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 
</div></pre> <p>你看条件查询书籍，查询条件通过参数传入，指定了作者，要求显示第二页，每页大小为 10 条记录，按照书名降序排列。</p> <p>除了使用 Query 
String（问号后的参数）来传递查询条件，多级路径也是一种常见的设计，这种设计让条件的层级关系更清晰。比如：</p> <pre style="position: relative;"><code> 
<table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
/category/456/books?author=Smith </div></td> </tr> </tbody> </table></code> <div class="richcontent-pre-copy"> 
<span class="iconfont"></span>复制代码 </div></pre> <p>它表示查询图书分类为“艺术”（编号为 456）的图书，并且作者是 Smith。看到这里，你可能会产生这样两个疑问。</p> 
<p>疑问一：使用 ID 多不直观啊，我们能使用具体名称吗？</p> <p>当然可以！<strong>可以使用具备业务意义的字段来代替没有可读性的 ID，但是这个字段不可重复，也不宜过长</strong>，比如例子中的 
category 就可以使用名称，而图书，则可以使用国际标准书号 ISBN。于是 URI 就变成了：</p> <pre style="position: relative;"><code> 
<table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
/category/Arts/books?author=Smith </div></td> </tr> </tbody> </table></code> <div class="richcontent-pre-copy"> 
<span class="iconfont"></span>复制代码 </div></pre> <p>疑问二：category 可以通过 Query String 传入吗？比如下面这样：</p> 
<pre style="position: relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> /books?author=Smith&amp;category=Arts </div></td> </tr> </tbody> 
</table></code> <div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 </div></pre> 
<p>当然可以！“category”可以放置在路径中，也可以放置在查询参数串中。<strong>这是 REST 设计中的一个关于设计上合理冗余的典型例子，可以通过不同的方式来完成相同的查询</strong>。如果你学过 
Perl，你可能听过<a href="https://zh.wikipedia.org/wiki/%E4%B8%8D%E6%AD%A2%E4%B8%80%E7%A7%8D%E6%96%B9%E6%B3%95%E5%8E%BB%E5%81%9A%E4%B8%80%E4%BB%B6%E4%BA%8B">“There’s 
more than one way to do it”</a>这样的俗语，这是一样的道理，也是 REST 风格的一部分。</p> <p>当然，从这也可以看出上一讲我们提到过的，REST 
在统一性、一致性方面的约束力较弱。</p> <p><strong>2. 消息正文封装</strong></p> <p>有时候我们还需要传递消息正文，比如当我们使用 POST 请求创建对象，和使用 
PUT 请求修改对象的时候，我们可以选择使用一种技术来封装它，例如 JSON 和 XML。通常来说，既然我们选择了 REST 风格，我们在相关技术的选择上也可以继续保持简约的一致性，因此 
JSON 是更为常见的那一个。</p> <pre style="position: relative;"><code> <table class="hljs-ln"> <tbody> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> "name": "...", </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> "category": "Arts", </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> "authorId": 999, </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> "price": { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div 
class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></td> <td class="hljs-ln-code"> <div 
class="hljs-ln-line"> "currency": "CNY", </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="7"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> "value": 12.99 </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="8"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> }, </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="9"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
"ISBN": "...", </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="10"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
"quantity": 100, </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="11"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
... </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" 
data-line-number="12"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> } </div></td> 
</tr> </tbody> </table></code> <div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 
</div></pre> <p>上面的消息体内容就反映了一本书的属性，但是，在设置属性的时候，往往牵涉到对象关联，上面这个小小的例子就包含了其中三种典型的方式：</p> <ul> <li>传递唯一业务字段：例如上面的 
category 取值是具备实际业务意义的“Arts”；</li> <li>传递唯一 id：例如上面的 authorId，请注意，这里不能传递实际作者名，因为作者可能会重名；</li> 
<li>传递关联对象：例如上面的 price，这个对象通常可以是一个不完整的对象，这里指定了货币为人民币 CNY，也指定了价格数值为 12.99。</li> </ul> <p><strong>3. 
响应和异常设计</strong></p> <p>HTTP 协议中规定了返回的状态码，我想你可能知道一些常见的返回码，大致上，它们分为这样五类：</p> <ul> <li>1xx：表示请求已经被接受，但还需要继续处理。这时你可能还记得在 
<a href="https://time.geekbang.org/column/article/136587">[第 03 讲]</a> 中，我们将普通的 HTTP 请求升级成为 
WebSocket 的过程，101 就是确认连接升级的状态码。</li> <li>2xx：表示请求已经被接受和成功处理。最常见的就是 204，表示请求成功处理，且返回中没有正文内容。</li> 
<li>3xx：表示重定向，请客户端使用重定向后的新地址继续请求。其中，301 是永久重定向，而 302 是临时重定向，新地址一般在响应头“Location”字段中指定。</li> 
<li>4xx：表示客户端错误。服务端已经接到了请求，但是处理失败了，并且这个锅服务端不背。这可能是我们最熟悉的返回码了，比如最常见的 404，表示页面不存在。常见的还有 400，表示请求格式错误，以及 
401，鉴权和认证失败。</li> <li>5xx：表示服务端错误。这回这个处理失败的锅在服务端这边。最常见的是 500，通用的和未分类的服务端内部错误，还有 503，服务端暂时不可用。</li> 
</ul> <p>错误处理是 Web API 设计中很重要的一部分，我们需要告知用户是哪个请求出错了，什么时间出错了，以及为什么出错。比如：</p> <pre style="position: 
relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
{ </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> "errorCode": 543, </div></td> </tr> <tr> 
<td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> "timeStamp": 12345678, </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> "message": "The requested book is not 
found.", </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" 
data-line-number="5"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> "detailedInfomation": 
"...", </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" 
data-line-number="6"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> "reference": 
"https://...", </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="7"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
"requestId": "..." </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="8"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
} </div></td> </tr> </tbody> </table></code> <div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 
</div></pre> <p>在这个例子中，你可以看到上面提到的要素都具备了，注意这里的 errorCode 不是响应中的 HTTP 状态码，而是一个具备业务意义的内部定义的错误码。在有些设计里面，也会把 
HTTP 状态码放到这个正文中，以方便客户端处理，这种冗余的设计当然也是可以的。</p> <h2>总结思考</h2> <p>还记得我们是通过怎样的步骤来设计 Web API 的吗？其实可以总结为八个字：<strong>问题、技术、风格和定义</strong>，由问题到实现，由概要到细节。</p> 
<p>问题域往往比较好确定，技术选型在需求和限制分析清楚的情况下也不难做出选择，但是接口风格往往就考验 API 的设计功底了。在这部分中，易用性和通用性的平衡，接口粒度的控制，是非常重要的两个方面，这是需要通过不断地“权衡”来确定的。至于在接口定义的步骤中，细节很多，更多的内容需要我们在实践中多参考一些优秀的接口实现案例，逐渐积累经验。</p> 
<p>这一讲通篇都不断地提到了“权衡”，现在我来提一个关于权衡的小问题：</p> <ul> <li>在介绍 REST 的参数传递的时候，我们讲了 category 参数传递的两种方式，一种是通过路径传递，一种是通过 
Query String 的参数传递。你觉得哪些参数适合使用第一种，哪些参数更适合使用第二种？</li> </ul> <p>如果你还有余力，那我再提一个接口设计方面的问题：</p> 
<ul> <li>我们提到了 REST 风格下，我们使用 HTTP 的不同方法来应对增删改查这样不同的行为。但是，互联网的业务是很复杂的，有时候操作并非简单的增删改查，这种情况会考验我们的 
REST 设计功底。比如说，我们要给银行转账，即钱从一个人的账下转移到另一个人的账下，这样的复杂行为不属于增删改查中的任何一项，我们是否能使用 REST 风格来设计这样的转账接口呢？</li> 
</ul> <p>到今天为止，第一章，也就是“网络协议和 Web 接口“的内容我们就讲完了。网络协议部分，我们以 HTTP 为核心，介绍了它的特性和发展进程，展示了 TLS 连接建立和证书验证的原理，深入了 
Comet 和 WebSocket 等服务端消息推送技术，并通过抓包分析等实践，进一步加深了理解。Web 接口部分，我们结合图书馆的实例，学习和比较了 SOAP 和 REST 的实现和风格，并一步一步梳理了 
Web 接口设计的过程。</p> <p>最后，对于上面的问题你有什么答案，或是对于这一章的内容有什么思考和疑问，欢迎你在留言区中畅所欲言，我们一起探讨，相信能碰撞出很多新的火花。</p> 
<h2>扩展阅读</h2> <ul> <li>【基础】<a href="https://zh.wikipedia.org/wiki/HTTP%E7%8A%B6%E6%80%81%E7%A0%81">HTTP 
状态码</a> 和 <a href="https://zh.wikipedia.org/wiki/HTTP%E5%A4%B4%E5%AD%97%E6%AE%B5">HTTP 头字段</a>，我们在工作中会反复和各式各样的状态码和请求、响应中的头部字段打交道，因此通读并熟知一些常见的状态码是很有必要的。关于 
HTTP 状态码，有人把一些常见的状态码形象地对应到<a href="https://http.cat/">猫的照片</a>，或许能帮助你记忆，当然，如果你喜欢狗，那你可以看看<a 
href="https://httpstatusdogs.com/">这个</a>。</li> <li><a href="https://any-api.com/">Any API</a>，我们不能光闭门造车，还要去学习其它网站的 
Web API 设计，了解互联网上大家都是怎么做的。我们学习它们的实现，但请不要盲目，有不少接口由于种种原因，设计有一些亟待商榷的地方，请带上你批判的眼光。</li> <li><a 
href="https://martinfowler.com/articles/richardsonMaturityModel.html">Richardson Maturity Model</a>，这篇会有一些深度，大名鼎鼎的马丁·福勒（Martin 
Fowler）的文章，讲 REST 的一种成熟度模型，里面划分了从 0 级到 3 级这样 4 种成熟度级别，这种分级方式被一些人奉为圭臬。</li> </ul> <p><img src="https://static001.geekbang.org/resource/image/11/8b/1181246bbd51ce348d5729696d1dc28b.jpg" 
alt="unpreview"></p>', '', 'book', 0, 'full_html', 'zh-hans', 45, 45) 
 {executed in 1 msec}
2020-11-19 11:27:07.998 INFO  jdbc.sqltiming Line:373 - select nodebodyen0_.entity_id as entity_i1_3_0_, nodebodyen0_.body_value as body_val2_3_0_, 
nodebodyen0_.body_summary as body_sum3_3_0_, nodebodyen0_.bundle as bundle4_3_0_, nodebodyen0_.delta 
as delta5_3_0_, nodebodyen0_.body_format as body_for6_3_0_, nodebodyen0_.langcode as langcode7_3_0_, 
nodebodyen0_.revision_id as revision8_3_0_ from node__body nodebodyen0_ where nodebodyen0_.entity_id=45 
 {executed in 1 msec}
2020-11-19 11:27:07.998 INFO  jdbc.resultsettable Line:610 - 
|----------|-----------|-------------|-------|------|------------|---------|------------|
|entity_id |body_value |body_summary |bundle |delta |body_format |langcode |revision_id |
|----------|-----------|-------------|-------|------|------------|---------|------------|
|----------|-----------|-------------|-------|------|------------|---------|------------|

2020-11-19 11:27:08.001 INFO  jdbc.sqltiming Line:373 - insert into node__body (body_value, body_summary, bundle, delta, body_format, langcode, revision_id, 
entity_id) values ('<p>你好，我是四火。</p> <p>今天，我们该根据之前所学，来谈谈具体怎样设计 Web API 接口了。我们围绕的核心，是<strong>“权衡”（trade-off）</strong>这两个字，事实上，它不只是 
Web API 接口设计的核心，还是软件绝大多数设计问题的核心。</p> <p>我们说“没有银弹”，是因为没有一种技术可以百搭，没有一种解决方案是完美的，但一个优秀的全栈工程师，是可以从琳琅满目的同类技术中，因地制宜地选择出最适合的那一个。</p> 
<h2>概念</h2> <p>在一切开始之前，我们先来明确概念。什么是 Web API？</p> <p>你应该很熟悉 API，即 Application Programming Interface，应用程序的接口。它指的就是一组约定，不同系统之间的沟通必须遵循的协议。使用者知道了 
API，就知道该怎样和它沟通，使用它的功能，而不关心它是怎么实现的。</p> <p>Web API 指的依然是应用程序接口，只不过它现在暴露在了 Web 的环境里。并且，我们通常意义上讲 
Web API 的时候，无论是在 B/S（浏览器 / 服务器）模型还是 C/S（客户端 / 服务器）模型下，往往都心照不宣地默认它在服务端，并被动地接受请求消息，返回响应。</p> 
<p>通常一个 Web API 需要包括哪些内容呢？</p> <p>回答这个问题前，让我们先闭上眼想一想，如果没有“Web”这个修饰词，普通的 API 要包括哪些内容呢？嗯，功能、性能、入参、返回值……它们都对，看起来几乎是所有普通 
API 的特性，在 Web API 中也全都存在。而且，因为 Web 的特性，它还具备我们谈论普通 API 时不太涉及的内容：</p><!-- [[[read_end]]] --> 
<ul> <li>比如承载协议。这里可以有多个协议，因为协议是分层的。HTTP 协议和 TCP 协议就是并存的。</li> <li>再比如请求和响应格式。Web API 将普通 API 
的方法调用变成了网络通信，因此参数的传入变成了请求传入，结果返回变成了响应传出。</li> </ul> <p>正是有了 Web API，网络中的不同应用才能互相协作，分布式系统才能正常工作，互联网才能如此蓬勃发展。而我们，不能只停留在“知道”的层面，还要去深入了解它们。</p> 
<h2>Web API 的设计步骤</h2> <p>关于 Web API 的设计步骤，不同人有不同的理解，争论不少，涉及到的内容也非常广泛。这里我综合了自己的经验和观点进行介绍，希望你能有所启发。</p> 
<h3>第一步：明确核心问题，确定问题域</h3> <p>和普通的 API 设计、程序的库设计一样，Web API 并不是东打一枪，西打一炮的。想想写代码的时候，我们还要让同类型的方法，以某种方式组织在类和对象中，实现功能上的内聚呢，一个类还要遵循单一职责的原则呢。</p> 
<p>因此，一组 Web API，就是要专注于一类问题，核心问题必须是最重要的一个。</p> <p>在上一讲中我举了个图书管理系统的例子，那么可以想象，图书的增删改查 API 就可以放到一起，而如果有一个新的 
API 用于查询图书馆内部员工的信息，那么它显然应该单独归纳到另外的类别中，甚至是另外的系统中。</p> <h3>第二步：结合实际需求和限制，选择承载技术</h3> <p>这里有两件事情需要你考虑，一个是需求，一个是限制。我们虽然经常这样分开说，但严格来说，限制也是需求的一种。比方说，如果对网络传输的效率要求很高，时延要求很短，这就是需求，而且是非功能性的需求。</p> 
<p>大多数功能性的需求大家都能意识到，但是一些非功能性的需求，或者一些“限制”就容易被忽略了。比如说，向前的兼容性，不同版本同时运行，鉴权和访问控制，库依赖限制，易测试性和可维护性，平滑发布（如新老接口并行），等等。</p> 
<p>再来说说承载技术。承载技术指的是实现接口，以及它的请求响应传输所需要使用到的技术集合，比如 HTTP + JSON。我们前面提到的要求网络传输效率高、时延短，<a href="https://developers.google.com/protocol-buffers/">Protobuf</a> 
就是一个值得考察的技术；但有时候，我们更需要消息直观、易读，那么显然 Protobuf 就不是一个适合的技术。这里我们通过分析技术优劣来做选择，这就是权衡。</p> <p>虽说 Web 
API 主要的工作在服务端，但在技术分析时还需要考虑客户端。特别是一些技术要求自动生成客户端，而有些技术则允许通过一定方式“定制”客户端（例如使用 DSL，Domain Specific 
Language，领域特定语言）。</p> <h3>第三步：确定接口风格</h3> <p>技术的选择将很大程度地影响接口的风格。</p> <p>还记得我在上一讲介绍的 SOAP 和 
REST 的例子吗？那就是接口风格比较的一个典型示例。请不要小看这两个字，“风格”包含的内容很多，大到怎样划分功能，小到接口的命名，都包括在内。在实际设计中，我们很少正面地去谈论具体的风格，但我们都有意无意地将其考虑在内。这里我举几个比较重要的例子，通过它，你会了解到权衡其实无处不在。</p> 
<p>角度一：易用性和通用性的平衡，或者说是设计“人本接口”还是“最简接口”。</p> <p>比如一个图书管理的接口，一种设计是让其返回“流行书籍”，实际的规则是根据出版日期、借阅人数、引进数量等等做了复杂的查询而得出；而另一种设计则是让用户来自行决定和传入这几个参数，服务端不理解业务含义，接口本身保持通用。</p> 
<p><strong>前者偏向“易用”，更接近人的思维；后者偏向“通用”，提供了最简化的接口。</strong>虽说多数情况下我们还是会见到后者多一些，但二者却不能说谁对谁错，它们实际代表了不同的风格，各有优劣。</p> 
<p>角度二：接口粒度的划分。</p> <p>比如用户还书的过程包括：还书排队登记、检查书本状况、图书入库，这一系列过程是设计成一个大的接口一并完成，还是设计成三个单独的接口分别调用完成？</p> 
<p>其实，这二者各有优劣。<strong>设计成大接口往往可以增加易用性，便于内部优化提高性能（而且只需调用一次）；设计成小接口可以增加可重用性，便于功能的组合。</strong></p> 
<p>你可能会想，两种方式都保留，让用户去选择不行吗？</p> <p>行，但那样给双方带来好处的同时，也带来了更多的问题，除了风格的不一致，接口也不再是正交的，而是有一定重叠性的，并且更多的接口意味着更多的开发和维护工作。这些接口要像是一个人设计出来的，而不是简单的组合添加，<strong>风格统一也是一致性的一种表现</strong>。因此，多数情况下我们不那么做。你看，这又是权衡。</p> 
<p>但是，我说的是“多数情况下”我们不那么做。在一些极端情况下，我们是会牺牲掉一致性，保留冗余的。</p> <p>我举一个 JDK 的例子。JDK 的 HashTable 有一个 
containsValue 方法，还有一个 contains 方法，二者功能上完全一样，之所以搞这样两个完全一样的方法，正是由于历史原因造成的。JDK 1.2 才正式引入 Java 
Collections Framework，抽象了 Map 接口，也才有了 containsValue 方法，而之前的方法因为需要保持向下兼容而无法删除，也是无可奈何。同样，这也是权衡。</p> 
<h3>第四步：定义具体接口形式</h3> <p>在上面这三步通用和共性的步骤完成之后，我们就可以正式跳进具体的接口定义中，去确定 URL、参数、返回和异常等通用而具体的形式了。还记得上一讲中对 
REST 请求发送要点的分解吗？在它的基础上，我们将继续以 REST 风格为例，进行更深刻的讨论。</p> <p><strong>1. 条件查询</strong></p> <p>我们在上一讲的例子中使用 
HTTP GET 请求从图书馆获取书本信息，从而完成增删改查中的“查”操作：</p> <pre style="position: relative;"><code> <table class="hljs-ln"> 
<tbody> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> /books/123 </div></td> </tr> <tr> <td 
class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> /books/123/price </div></td> </tr> </tbody> 
</table></code> <div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 </div></pre> 
<p>分别查询了 ID 为 123 的图书的全部属性，和该图书的价格信息。</p> <p>但是，实际的查所包含的内容可远比这个例子多，比如不是通过 ID 查询，而是通过条件查询：</p> 
<pre style="position: relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> /books?author=Smith&amp;page=2&amp;pageSize=10&amp;sortBy=name&amp;order=desc 
</div></td> </tr> </tbody> </table></code> <div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 
</div></pre> <p>你看条件查询书籍，查询条件通过参数传入，指定了作者，要求显示第二页，每页大小为 10 条记录，按照书名降序排列。</p> <p>除了使用 Query 
String（问号后的参数）来传递查询条件，多级路径也是一种常见的设计，这种设计让条件的层级关系更清晰。比如：</p> <pre style="position: relative;"><code> 
<table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
/category/456/books?author=Smith </div></td> </tr> </tbody> </table></code> <div class="richcontent-pre-copy"> 
<span class="iconfont"></span>复制代码 </div></pre> <p>它表示查询图书分类为“艺术”（编号为 456）的图书，并且作者是 Smith。看到这里，你可能会产生这样两个疑问。</p> 
<p>疑问一：使用 ID 多不直观啊，我们能使用具体名称吗？</p> <p>当然可以！<strong>可以使用具备业务意义的字段来代替没有可读性的 ID，但是这个字段不可重复，也不宜过长</strong>，比如例子中的 
category 就可以使用名称，而图书，则可以使用国际标准书号 ISBN。于是 URI 就变成了：</p> <pre style="position: relative;"><code> 
<table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
/category/Arts/books?author=Smith </div></td> </tr> </tbody> </table></code> <div class="richcontent-pre-copy"> 
<span class="iconfont"></span>复制代码 </div></pre> <p>疑问二：category 可以通过 Query String 传入吗？比如下面这样：</p> 
<pre style="position: relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> /books?author=Smith&amp;category=Arts </div></td> </tr> </tbody> 
</table></code> <div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 </div></pre> 
<p>当然可以！“category”可以放置在路径中，也可以放置在查询参数串中。<strong>这是 REST 设计中的一个关于设计上合理冗余的典型例子，可以通过不同的方式来完成相同的查询</strong>。如果你学过 
Perl，你可能听过<a href="https://zh.wikipedia.org/wiki/%E4%B8%8D%E6%AD%A2%E4%B8%80%E7%A7%8D%E6%96%B9%E6%B3%95%E5%8E%BB%E5%81%9A%E4%B8%80%E4%BB%B6%E4%BA%8B">“There’s 
more than one way to do it”</a>这样的俗语，这是一样的道理，也是 REST 风格的一部分。</p> <p>当然，从这也可以看出上一讲我们提到过的，REST 
在统一性、一致性方面的约束力较弱。</p> <p><strong>2. 消息正文封装</strong></p> <p>有时候我们还需要传递消息正文，比如当我们使用 POST 请求创建对象，和使用 
PUT 请求修改对象的时候，我们可以选择使用一种技术来封装它，例如 JSON 和 XML。通常来说，既然我们选择了 REST 风格，我们在相关技术的选择上也可以继续保持简约的一致性，因此 
JSON 是更为常见的那一个。</p> <pre style="position: relative;"><code> <table class="hljs-ln"> <tbody> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> "name": "...", </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> "category": "Arts", </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> "authorId": 999, </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> "price": { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div 
class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></td> <td class="hljs-ln-code"> <div 
class="hljs-ln-line"> "currency": "CNY", </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="7"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> "value": 12.99 </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="8"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> }, </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="9"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
"ISBN": "...", </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="10"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
"quantity": 100, </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="11"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
... </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" 
data-line-number="12"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> } </div></td> 
</tr> </tbody> </table></code> <div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 
</div></pre> <p>上面的消息体内容就反映了一本书的属性，但是，在设置属性的时候，往往牵涉到对象关联，上面这个小小的例子就包含了其中三种典型的方式：</p> <ul> <li>传递唯一业务字段：例如上面的 
category 取值是具备实际业务意义的“Arts”；</li> <li>传递唯一 id：例如上面的 authorId，请注意，这里不能传递实际作者名，因为作者可能会重名；</li> 
<li>传递关联对象：例如上面的 price，这个对象通常可以是一个不完整的对象，这里指定了货币为人民币 CNY，也指定了价格数值为 12.99。</li> </ul> <p><strong>3. 
响应和异常设计</strong></p> <p>HTTP 协议中规定了返回的状态码，我想你可能知道一些常见的返回码，大致上，它们分为这样五类：</p> <ul> <li>1xx：表示请求已经被接受，但还需要继续处理。这时你可能还记得在 
<a href="https://time.geekbang.org/column/article/136587">[第 03 讲]</a> 中，我们将普通的 HTTP 请求升级成为 
WebSocket 的过程，101 就是确认连接升级的状态码。</li> <li>2xx：表示请求已经被接受和成功处理。最常见的就是 204，表示请求成功处理，且返回中没有正文内容。</li> 
<li>3xx：表示重定向，请客户端使用重定向后的新地址继续请求。其中，301 是永久重定向，而 302 是临时重定向，新地址一般在响应头“Location”字段中指定。</li> 
<li>4xx：表示客户端错误。服务端已经接到了请求，但是处理失败了，并且这个锅服务端不背。这可能是我们最熟悉的返回码了，比如最常见的 404，表示页面不存在。常见的还有 400，表示请求格式错误，以及 
401，鉴权和认证失败。</li> <li>5xx：表示服务端错误。这回这个处理失败的锅在服务端这边。最常见的是 500，通用的和未分类的服务端内部错误，还有 503，服务端暂时不可用。</li> 
</ul> <p>错误处理是 Web API 设计中很重要的一部分，我们需要告知用户是哪个请求出错了，什么时间出错了，以及为什么出错。比如：</p> <pre style="position: 
relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
{ </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> "errorCode": 543, </div></td> </tr> <tr> 
<td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> "timeStamp": 12345678, </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> "message": "The requested book is not 
found.", </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" 
data-line-number="5"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> "detailedInfomation": 
"...", </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" 
data-line-number="6"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> "reference": 
"https://...", </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="7"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
"requestId": "..." </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="8"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
} </div></td> </tr> </tbody> </table></code> <div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 
</div></pre> <p>在这个例子中，你可以看到上面提到的要素都具备了，注意这里的 errorCode 不是响应中的 HTTP 状态码，而是一个具备业务意义的内部定义的错误码。在有些设计里面，也会把 
HTTP 状态码放到这个正文中，以方便客户端处理，这种冗余的设计当然也是可以的。</p> <h2>总结思考</h2> <p>还记得我们是通过怎样的步骤来设计 Web API 的吗？其实可以总结为八个字：<strong>问题、技术、风格和定义</strong>，由问题到实现，由概要到细节。</p> 
<p>问题域往往比较好确定，技术选型在需求和限制分析清楚的情况下也不难做出选择，但是接口风格往往就考验 API 的设计功底了。在这部分中，易用性和通用性的平衡，接口粒度的控制，是非常重要的两个方面，这是需要通过不断地“权衡”来确定的。至于在接口定义的步骤中，细节很多，更多的内容需要我们在实践中多参考一些优秀的接口实现案例，逐渐积累经验。</p> 
<p>这一讲通篇都不断地提到了“权衡”，现在我来提一个关于权衡的小问题：</p> <ul> <li>在介绍 REST 的参数传递的时候，我们讲了 category 参数传递的两种方式，一种是通过路径传递，一种是通过 
Query String 的参数传递。你觉得哪些参数适合使用第一种，哪些参数更适合使用第二种？</li> </ul> <p>如果你还有余力，那我再提一个接口设计方面的问题：</p> 
<ul> <li>我们提到了 REST 风格下，我们使用 HTTP 的不同方法来应对增删改查这样不同的行为。但是，互联网的业务是很复杂的，有时候操作并非简单的增删改查，这种情况会考验我们的 
REST 设计功底。比如说，我们要给银行转账，即钱从一个人的账下转移到另一个人的账下，这样的复杂行为不属于增删改查中的任何一项，我们是否能使用 REST 风格来设计这样的转账接口呢？</li> 
</ul> <p>到今天为止，第一章，也就是“网络协议和 Web 接口“的内容我们就讲完了。网络协议部分，我们以 HTTP 为核心，介绍了它的特性和发展进程，展示了 TLS 连接建立和证书验证的原理，深入了 
Comet 和 WebSocket 等服务端消息推送技术，并通过抓包分析等实践，进一步加深了理解。Web 接口部分，我们结合图书馆的实例，学习和比较了 SOAP 和 REST 的实现和风格，并一步一步梳理了 
Web 接口设计的过程。</p> <p>最后，对于上面的问题你有什么答案，或是对于这一章的内容有什么思考和疑问，欢迎你在留言区中畅所欲言，我们一起探讨，相信能碰撞出很多新的火花。</p> 
<h2>扩展阅读</h2> <ul> <li>【基础】<a href="https://zh.wikipedia.org/wiki/HTTP%E7%8A%B6%E6%80%81%E7%A0%81">HTTP 
状态码</a> 和 <a href="https://zh.wikipedia.org/wiki/HTTP%E5%A4%B4%E5%AD%97%E6%AE%B5">HTTP 头字段</a>，我们在工作中会反复和各式各样的状态码和请求、响应中的头部字段打交道，因此通读并熟知一些常见的状态码是很有必要的。关于 
HTTP 状态码，有人把一些常见的状态码形象地对应到<a href="https://http.cat/">猫的照片</a>，或许能帮助你记忆，当然，如果你喜欢狗，那你可以看看<a 
href="https://httpstatusdogs.com/">这个</a>。</li> <li><a href="https://any-api.com/">Any API</a>，我们不能光闭门造车，还要去学习其它网站的 
Web API 设计，了解互联网上大家都是怎么做的。我们学习它们的实现，但请不要盲目，有不少接口由于种种原因，设计有一些亟待商榷的地方，请带上你批判的眼光。</li> <li><a 
href="https://martinfowler.com/articles/richardsonMaturityModel.html">Richardson Maturity Model</a>，这篇会有一些深度，大名鼎鼎的马丁·福勒（Martin 
Fowler）的文章，讲 REST 的一种成熟度模型，里面划分了从 0 级到 3 级这样 4 种成熟度级别，这种分级方式被一些人奉为圭臬。</li> </ul> <p><img src="https://static001.geekbang.org/resource/image/11/8b/1181246bbd51ce348d5729696d1dc28b.jpg" 
alt="unpreview"></p>', '', 'book', 0, 'full_html', 'zh-hans', 45, 45) 
 {executed in 1 msec}
2020-11-19 11:27:08.004 INFO  jdbc.sqltiming Line:373 - select nodefiledd0_.nid as nid1_9_, nodefiledd0_.changed as changed2_9_, nodefiledd0_.created 
as created3_9_, nodefiledd0_.default_langcode as default_4_9_, nodefiledd0_.langcode as langcode5_9_, 
nodefiledd0_.promote as promote6_9_, nodefiledd0_.revision_translation_affected as revision7_9_, 
nodefiledd0_.status as status8_9_, nodefiledd0_.sticky as sticky9_9_, nodefiledd0_.title as 
title10_9_, nodefiledd0_.type as type11_9_, nodefiledd0_.uid as uid12_9_, nodefiledd0_.vid 
as vid13_9_ from node_field_data nodefiledd0_ where nodefiledd0_.nid=45 
 {executed in 0 msec}
2020-11-19 11:27:08.004 INFO  jdbc.resultsettable Line:610 - 
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|-----|----|----|
|nid |changed |created |default_langcode |langcode |promote |revision_translation_affected |status |sticky |title |type |uid |vid |
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|-----|----|----|
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|-----|----|----|

2020-11-19 11:27:08.005 INFO  jdbc.sqltiming Line:373 - select nodefieldr0_.nid as nid1_10_0_, nodefieldr0_.changed as changed2_10_0_, nodefieldr0_.created 
as created3_10_0_, nodefieldr0_.default_langcode as default_4_10_0_, nodefieldr0_.langcode 
as langcode5_10_0_, nodefieldr0_.promote as promote6_10_0_, nodefieldr0_.revision_translation_affected 
as revision7_10_0_, nodefieldr0_.status as status8_10_0_, nodefieldr0_.sticky as sticky9_10_0_, 
nodefieldr0_.title as title10_10_0_, nodefieldr0_.uid as uid11_10_0_, nodefieldr0_.vid as vid12_10_0_ 
from node_field_revision nodefieldr0_ where nodefieldr0_.nid=45 
 {executed in 0 msec}
2020-11-19 11:27:08.006 INFO  jdbc.resultsettable Line:610 - 
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|----|----|
|nid |changed |created |default_langcode |langcode |promote |revision_translation_affected |status |sticky |title |uid |vid |
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|----|----|
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|----|----|

2020-11-19 11:27:08.007 INFO  jdbc.sqltiming Line:373 - insert into node_field_revision (changed, created, default_langcode, langcode, promote, revision_translation_affected, 
status, sticky, title, uid, vid, nid) values (1605756428, 1605756428, 1, 'zh-hans', 0, 1, 1, 
0, '05丨权衡的艺术：漫谈WebAPI的设计', 1, 45, 45) 
 {executed in 0 msec}
2020-11-19 11:27:08.010 INFO  jdbc.sqltiming Line:373 - select nodefiledd0_.nid as nid1_9_0_, nodefiledd0_.changed as changed2_9_0_, nodefiledd0_.created 
as created3_9_0_, nodefiledd0_.default_langcode as default_4_9_0_, nodefiledd0_.langcode as 
langcode5_9_0_, nodefiledd0_.promote as promote6_9_0_, nodefiledd0_.revision_translation_affected 
as revision7_9_0_, nodefiledd0_.status as status8_9_0_, nodefiledd0_.sticky as sticky9_9_0_, 
nodefiledd0_.title as title10_9_0_, nodefiledd0_.type as type11_9_0_, nodefiledd0_.uid as uid12_9_0_, 
nodefiledd0_.vid as vid13_9_0_ from node_field_data nodefiledd0_ where nodefiledd0_.nid=45 
 {executed in 0 msec}
2020-11-19 11:27:08.010 INFO  jdbc.resultsettable Line:610 - 
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|-----|----|----|
|nid |changed |created |default_langcode |langcode |promote |revision_translation_affected |status |sticky |title |type |uid |vid |
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|-----|----|----|
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|-----|----|----|

2020-11-19 11:27:08.012 INFO  jdbc.sqltiming Line:373 - insert into node_field_data (changed, created, default_langcode, langcode, promote, revision_translation_affected, 
status, sticky, title, type, uid, vid, nid) values (1605756428, 1605756428, 1, 'zh-hans', 0, 
1, 1, 0, '05丨权衡的艺术：漫谈WebAPI的设计', 'book', 1, 45, 45) 
 {executed in 0 msec}
2020-11-19 11:27:08.016 INFO  jdbc.sqltiming Line:373 - select bookfieldm0_.entity_id as entity_i1_7_, bookfieldm0_.bundle as bundle2_7_, bookfieldm0_.delta 
as delta3_7_, bookfieldm0_.langcode as langcode4_7_, bookfieldm0_.field_media_value as field_me5_7_, 
bookfieldm0_.revision_id as revision6_7_ from node__field_media bookfieldm0_ where bookfieldm0_.entity_id=45 
 {executed in 0 msec}
2020-11-19 11:27:08.017 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------------|------------|
|entity_id |bundle |delta |langcode |field_media_value |revision_id |
|----------|-------|------|---------|------------------|------------|
|----------|-------|------|---------|------------------|------------|

2020-11-19 11:27:08.018 INFO  jdbc.sqltiming Line:373 - select bookfieldm0_.entity_id as entity_i1_7_0_, bookfieldm0_.bundle as bundle2_7_0_, bookfieldm0_.delta 
as delta3_7_0_, bookfieldm0_.langcode as langcode4_7_0_, bookfieldm0_.field_media_value as 
field_me5_7_0_, bookfieldm0_.revision_id as revision6_7_0_ from node__field_media bookfieldm0_ 
where bookfieldm0_.entity_id=45 
 {executed in 1 msec}
2020-11-19 11:27:08.018 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------------|------------|
|entity_id |bundle |delta |langcode |field_media_value |revision_id |
|----------|-------|------|---------|------------------|------------|
|----------|-------|------|---------|------------------|------------|

2020-11-19 11:27:08.020 INFO  jdbc.sqltiming Line:373 - insert into node__field_media (bundle, delta, langcode, field_media_value, revision_id, entity_id) 
values ('book', 0, 'zh-hans', 'https://qdall01.baidupcs.com/file/2c672befadbae66e6f10b1f87f022a26?bkt=en-2e2b5030dd6ff037fc941981451cb09fb25959674b4f29c1cf88abd0d7075dfe6b9f671190c5d198&fid=3757516097-778750-924158919577517&time=1605756426&sign=FDTAXUGERLQlBHSKfWqir-DCb740ccc5511e5e8fedcff06b081203-bPA4G93ymyuLcFAbJkWurFzdpjU%3D&to=92&size=16005696&sta_dx=16005696&sta_cs=3939&sta_ft=m4a&sta_ct=7&sta_mt=0&fm2=MH%2CYangquan%2CAnywhere%2C%2Cshanghai%2Cct&ctime=1569224663&mtime=1605754779&resv0=-1&resv1=0&resv2=rlim&resv3=2&resv4=16005696&vuk=3757516097&iv=0&htype=&randtype=em&newver=1&newfm=1&secfm=1&flow_ver=3&pkey=en-2d8e83422b154e9cd2d7431ffdcb577b12d9b04e59c00907a55364e79826b4b5652149e0e7c8bfe3&sl=76480590&expires=8h&rt=pr&r=307009642&mlogid=7502348527269446489&vbdid=2247232042&fin=05%E4%B8%A8%E6%9D%83%E8%A1%A1%E7%9A%84%E8%89%BA%E6%9C%AF%EF%BC%9A%E6%BC%AB%E8%B0%88WebAPI%E7%9A%84%E8%AE%BE%E8%AE%A1.m4a&bflag=92,34-92&rtype=1&dp-logid=7502348527269446489&dp-callid=0.1.1&hps=1&tsl=80&csl=80&fsl=-1&csign=yVzLQPCt4DblfMLqd2BCjd2RnqQ%3D&so=0&ut=6&uter=0&serv=0&uc=1458616558&ti=76168191086d6f2908831cb14549d1d5edca54cebe5950fc&hflag=30&adg=c_15d187590626c675056c89c8026cfc17&reqlabel=778750_l_1bf9445f27094ab64c9f1cb0bdf7ccfa_-1_dd2c452b8e51a0c74130d7cf32c48a2d&ibp=1&by=themis&filename=05%E4%B8%A8%E6%9D%83%E8%A1%A1%E7%9A%84%E8%89%BA%E6%9C%AF%EF%BC%9A%E6%BC%AB%E8%B0%88WebAPI%E7%9A%84%E8%AE%BE%E8%AE%A1.m4a', 
45, 45) 
 {executed in 0 msec}
2020-11-19 11:27:08.026 INFO  jdbc.sqltiming Line:373 - select nodefieldm0_.entity_id as entity_i1_16_0_, nodefieldm0_.bundle as bundle2_16_0_, nodefieldm0_.delta 
as delta3_16_0_, nodefieldm0_.langcode as langcode4_16_0_, nodefieldm0_.field_media_value as 
field_me5_16_0_, nodefieldm0_.revision_id as revision6_16_0_ from node_revision__field_media 
nodefieldm0_ where nodefieldm0_.entity_id=45 
 {executed in 1 msec}
2020-11-19 11:27:08.027 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------------|------------|
|entity_id |bundle |delta |langcode |field_media_value |revision_id |
|----------|-------|------|---------|------------------|------------|
|----------|-------|------|---------|------------------|------------|

2020-11-19 11:27:08.029 INFO  jdbc.sqltiming Line:373 - insert into node_revision__field_media (bundle, delta, langcode, field_media_value, revision_id, 
entity_id) values ('book', 0, 'zh-hans', 'https://qdall01.baidupcs.com/file/2c672befadbae66e6f10b1f87f022a26?bkt=en-2e2b5030dd6ff037fc941981451cb09fb25959674b4f29c1cf88abd0d7075dfe6b9f671190c5d198&fid=3757516097-778750-924158919577517&time=1605756426&sign=FDTAXUGERLQlBHSKfWqir-DCb740ccc5511e5e8fedcff06b081203-bPA4G93ymyuLcFAbJkWurFzdpjU%3D&to=92&size=16005696&sta_dx=16005696&sta_cs=3939&sta_ft=m4a&sta_ct=7&sta_mt=0&fm2=MH%2CYangquan%2CAnywhere%2C%2Cshanghai%2Cct&ctime=1569224663&mtime=1605754779&resv0=-1&resv1=0&resv2=rlim&resv3=2&resv4=16005696&vuk=3757516097&iv=0&htype=&randtype=em&newver=1&newfm=1&secfm=1&flow_ver=3&pkey=en-2d8e83422b154e9cd2d7431ffdcb577b12d9b04e59c00907a55364e79826b4b5652149e0e7c8bfe3&sl=76480590&expires=8h&rt=pr&r=307009642&mlogid=7502348527269446489&vbdid=2247232042&fin=05%E4%B8%A8%E6%9D%83%E8%A1%A1%E7%9A%84%E8%89%BA%E6%9C%AF%EF%BC%9A%E6%BC%AB%E8%B0%88WebAPI%E7%9A%84%E8%AE%BE%E8%AE%A1.m4a&bflag=92,34-92&rtype=1&dp-logid=7502348527269446489&dp-callid=0.1.1&hps=1&tsl=80&csl=80&fsl=-1&csign=yVzLQPCt4DblfMLqd2BCjd2RnqQ%3D&so=0&ut=6&uter=0&serv=0&uc=1458616558&ti=76168191086d6f2908831cb14549d1d5edca54cebe5950fc&hflag=30&adg=c_15d187590626c675056c89c8026cfc17&reqlabel=778750_l_1bf9445f27094ab64c9f1cb0bdf7ccfa_-1_dd2c452b8e51a0c74130d7cf32c48a2d&ibp=1&by=themis&filename=05%E4%B8%A8%E6%9D%83%E8%A1%A1%E7%9A%84%E8%89%BA%E6%9C%AF%EF%BC%9A%E6%BC%AB%E8%B0%88WebAPI%E7%9A%84%E8%AE%BE%E8%AE%A1.m4a', 
45, 45) 
 {executed in 1 msec}
2020-11-19 11:27:08.032 INFO  jdbc.sqltiming Line:373 - select bookfieldc0_.entity_id as entity_i1_4_, bookfieldc0_.bundle as bundle2_4_, bookfieldc0_.field_comment_value 
as field_co3_4_, bookfieldc0_.delta as delta4_4_, bookfieldc0_.field_comment_format as field_co5_4_, 
bookfieldc0_.langcode as langcode6_4_, bookfieldc0_.revision_id as revision7_4_ from node__field_comment 
bookfieldc0_ where bookfieldc0_.entity_id=45 
 {executed in 0 msec}
2020-11-19 11:27:08.033 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|--------------------|------|---------------------|---------|------------|
|entity_id |bundle |field_comment_value |delta |field_comment_format |langcode |revision_id |
|----------|-------|--------------------|------|---------------------|---------|------------|
|----------|-------|--------------------|------|---------------------|---------|------------|

2020-11-19 11:27:08.033 INFO  jdbc.sqltiming Line:373 - select bookfieldc0_.entity_id as entity_i1_4_0_, bookfieldc0_.bundle as bundle2_4_0_, bookfieldc0_.field_comment_value 
as field_co3_4_0_, bookfieldc0_.delta as delta4_4_0_, bookfieldc0_.field_comment_format as 
field_co5_4_0_, bookfieldc0_.langcode as langcode6_4_0_, bookfieldc0_.revision_id as revision7_4_0_ 
from node__field_comment bookfieldc0_ where bookfieldc0_.entity_id=45 
 {executed in 0 msec}
2020-11-19 11:27:08.034 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|--------------------|------|---------------------|---------|------------|
|entity_id |bundle |field_comment_value |delta |field_comment_format |langcode |revision_id |
|----------|-------|--------------------|------|---------------------|---------|------------|
|----------|-------|--------------------|------|---------------------|---------|------------|

2020-11-19 11:27:08.036 INFO  jdbc.sqltiming Line:373 - insert into node__field_comment (bundle, field_comment_value, delta, field_comment_format, 
langcode, revision_id, entity_id) values ('book', '<li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/17/45/5c/e5fee325.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>panlatent</span> <span class="_1bkbsnjg_0">置顶</span> </div> <div class="_1H1Z49Dr_0"> 
2019-09-21 </div> </div> <!----> </div> <div> <div class="_3M6kV3zb_0 _3D2NkqD6_0"> 结合上一讲内容，想问问老师对 
graphql 的看法，以及如何权衡 graphql / rest 两种api 。 </div> <!----> <div class="_2xNIY4NG_0"> <p class="_33BLbmw4_0">作者回复: 
这其实是个很好的问题。<br><br>我对 GraphQL 的理解简单来说是这样的，仅供参考。它本质上是一种声明式的 DSL，把接口逻辑从服务端拿到客户端来，客户端来决定做什么查询，执行什么操作，资源的概念被彻底弱化了。<br><br>和基于资源的 
REST 相比，因为可以更加细粒度地控制需要什么数据，减少了多次调用或者是不需要的数据返回造成的开销。当然，它也有许多弱点，比如复杂性更高（客户端需要理解复杂的业务数据模型），不容易使用缓存等等。<br><br>我觉得它应该是 
REST 风格的一种补充，而不是绝对的替代。有很多场景，比如复杂的数据查询，使用 GraphQL 可以做得很灵活，且有比较高的效率。而多数业务场景，REST 确是更好的选择。</p> 
</div> <div class="_1w8H0ktn_0 _2A421P4G_0"> <div class="_2jsFl-X0_0"> <i class="iconfont"></i> 
<span></span> </div> <div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class="">3</span> 
</div> <!----> </div> </div> </div></li> <li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/16/bc/25/1c92a90c.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>tt</span> <span class="_1bkbsnjg_0">置顶</span> </div> <div class="_1H1Z49Dr_0"> 2019-09-20 
</div> </div> <!----> </div> <div> <div class="_3M6kV3zb_0"> 1、突然有个想法，通过路径传递参数相当于非web系统设计的定长报文或固定分隔符报文，可读性比较差，可以更多的实现对外部的信息隐藏。 
<br> <br>而通过query参数传递相当于URL承载的键值对报文，可读性比较好。 <br> <br>实现上，通过路径传递的话，在后端实现url解析即请求路由的时候需要完成参数的判断，使用一些开发框架可能更简单，但是这个过程不是完全由实现业务的人来控制，是不是会影响整个系统的扩展性以及处理效率呢？ 
<br> <br>所以我觉得通过路径传递参数适合参数种类及个数比较少的情况， <br> <br> <br>2、对于银行转账如何用rest风格设计接口，我觉得可以用“变换”的思维，把转账这个动作“变换”或“视作”为一个创建一笔“转账”业务对象的操作，这个业务对象有若干属性，比如收付款账号、金额等，从而继续使用rest风格。 
<br> <br>此外，老师有没有关于web api鉴权和授权方面的参考链接呢？ </div> <div class="_2r3UB1GX_0"> <span>展开</span><i 
class="iconfont"></i> </div> <div class="_2xNIY4NG_0"> <p class="_33BLbmw4_0">作者回复: 感谢回答。<br>关于 
1，我觉得你说得很好。路径传递“隐含”了这个 key，而使用 Query String 的键值对的方式，则显式指定了 key。从这个角度来说，确实后者更为“明确”。<br><br>但是，“可读性”并不一定是指定了 
key 的更好，可读性毕竟是一个和个人理解密切相关的判断。通常在路径层次较短，且路径的定义符合人的认知的时候（比如“资源/分类/唯一ID”，这样由大到小的递进），路径传递参数的方式也具有很高的可读性。<br><br>在使用框架处理的难度方面，我认为这两种方式并没有太大区别。<br><br>另外，使用 
Query String 的方式灵活性上要更高，比如可以通过合理的配置自动构造和注入一个复杂的参数对象，这方面我们会在下一章学到。<br><br>关于 2，说得非常好，这种把一个复杂行为转变为可进行 
CRUD 的“资源”，就是一种很有效的处理方法。<br><br>对于你最后关于鉴权和授权的问题，我计划在第 5 章谈到。</p> </div> <div class="_1w8H0ktn_0 
_2A421P4G_0"> <div class="_2jsFl-X0_0"> <i class="iconfont"></i> <span></span> </div> <div 
class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class="">2</span> </div> <!----> </div> 
</div> </div></li> <li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/10/88/21/50b2418a.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>alan</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2019-09-22 </div> </div> <!----> 
</div> <div> <div class="_3M6kV3zb_0"> 老师，为啥说204是最常见的返回码？不是200吗？ </div> <div class="_2r3UB1GX_0"> 
<span>展开</span><i class="iconfont"></i> </div> <div class="_2xNIY4NG_0"> <p class="_33BLbmw4_0">作者回复: 
看场景了。对于 Web API 来说，如果是一个命令接口，常常见到返回 204，表示操作成功，但不需要消息体。</p> </div> <div class="_1w8H0ktn_0 
_2A421P4G_0"> <div class="_2jsFl-X0_0"> <i class="iconfont"></i> <span></span> </div> <div 
class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class="">1</span> </div> <!----> </div> 
</div> </div></li> <li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/10/cc/ce/39c470ee.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>jxs1211</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2019-09-23 </div> </div> <!----> 
</div> <div> <div class="_3M6kV3zb_0"> sql建议使用pk进行查询，如果使用name这样的业务相关的字段进行查询，可以提高理解性，是否也应该加索引，提高查询效率 
</div> <div class="_2r3UB1GX_0"> <span>展开</span><i class="iconfont"></i> </div> <!----> <div 
class="_1w8H0ktn_0 _2A421P4G_0"> <div class="_2jsFl-X0_0"> <i class="iconfont"></i> <span></span> 
</div> <div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class=""></span> </div> <!----> 
</div> </div> </div></li> <li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/14/34/df/64e3d533.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>leslie</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2019-09-23 </div> </div> <!----> 
</div> <div> <div class="_3M6kV3zb_0"> 问题、技术、风格和定义：这个似乎不止在web api的设计中会有这个问题，我觉得在现在的数据系统/存储中间件 
的设计中其实现在典型的出现了；毕竟现在一旦设计软件就不是过去传统的C/S或B/S。 <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;昨天一个同行问我一个问题：我们有前端开发，我们需要架构师；我就反问了一句“你们需要的是什么架构？”分析"问题"、寻找“技术"、选择“风格”、定义"需求"。架构师这个已经有点泛泛了：就像全栈一样，好的全栈其实才是一个好的架构师-他能权衡从前端-开发-数据系统-网络设计。各种模块的权衡才是最困难的事情；老师觉得呢？其实很多架构师都是有明显的缺陷的。 
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;老师说权衡的艺术：其实好的全栈才能成为一个好的架构师，否则我们只能去说软件架构、数据系统架构、网络及安全架构；老师怎么看？ 
</div> <div class="_2r3UB1GX_0"> <span>展开</span><i class="iconfont"></i> </div> <!----> <div 
class="_1w8H0ktn_0 _2A421P4G_0"> <div class="_2jsFl-X0_0"> <i class="iconfont"></i> <span></span> 
</div> <div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class=""></span> </div> <!----> 
</div> </div> </div></li> <li class="reJj6Thl_0"><img src="http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83erbY9UsqHZhhVoI69yXNibBBg0TRdUVsKLMg2UZ1R3NJxXdMicqceI5yhdKZ5Ad6CJYO0XpFHlJzIYQ/132" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>饭团</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2019-09-21 </div> </div> <!----> </div> 
<div> <div class="_3M6kV3zb_0"> 我感觉路径选择不够灵活，因为他默认了各级参数所对应的含义！在需要加入参数或者调整参数顺序的时候就会带来诸多不便！我看到的大部分对外接口都是在指定到特定目录后（应该是该功能的功能模块），参数通过或则query_string的形式传输过来！ 
<br>也就是说如果一个接口使用纯路径选择，是不是就适合于功能较为简单，参数偏少的情况！而大部分情况都是混合使用 </div> <div class="_2r3UB1GX_0"> <span>展开</span><i 
class="iconfont"></i> </div> <div class="_2xNIY4NG_0"> <p class="_33BLbmw4_0">作者回复: 👍，说得很好。</p> 
</div> <div class="_1w8H0ktn_0 _2A421P4G_0"> <div class="_2jsFl-X0_0"> <i class="iconfont"></i> 
<span></span> </div> <div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class=""></span> 
</div> <!----> </div> </div> </div></li> <li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/10/df/63/cf317827.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>anginiit</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2019-09-20 </div> </div> <!----> 
</div> <div> <div class="_3M6kV3zb_0 _3D2NkqD6_0"> 一直只关心技术 对于设计思想层面的考虑为0，这篇文章对我来说读的一头雾水。学习，学习。。。 
</div> <!----> <!----> <div class="_1w8H0ktn_0 _2A421P4G_0"> <div class="_2jsFl-X0_0"> <i class="iconfont"></i> 
<span></span> </div> <div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class=""></span> 
</div> <!----> </div> </div> </div></li> <li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/17/e3/45/d4d3c265.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>编程爱好者</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2019-09-20 </div> </div> <!----> 
</div> <div> <div class="_3M6kV3zb_0"> 全栈工程师不是技术方面的问题，而是灵魂是否有趣的问题，很喜欢作者结尾分享的链接，这门课程是告诉我们如何成为一个有趣的程序员 
</div> <div class="_2r3UB1GX_0"> <span>展开</span><i class="iconfont"></i> </div> <div class="_2xNIY4NG_0"> 
<p class="_33BLbmw4_0">作者回复: 感谢评价！</p> </div> <div class="_1w8H0ktn_0 _2A421P4G_0"> <div class="_2jsFl-X0_0"> 
<i class="iconfont"></i> <span></span> </div> <div class="_2P4B1Hdm_0"> <i class="iconfont"></i> 
<span class=""></span> </div> <!----> </div> </div> </div></li>', 0, 'full_html', 'zh-hans', 
45, 45) 
 {executed in 1 msec}
2020-11-19 11:27:08.039 INFO  jdbc.sqltiming Line:373 - select nodefieldc0_.entity_id as entity_i1_13_0_, nodefieldc0_.bundle as bundle2_13_0_, nodefieldc0_.field_comment_value 
as field_co3_13_0_, nodefieldc0_.delta as delta4_13_0_, nodefieldc0_.field_comment_format as 
field_co5_13_0_, nodefieldc0_.langcode as langcode6_13_0_, nodefieldc0_.revision_id as revision7_13_0_ 
from node_revision__field_comment nodefieldc0_ where nodefieldc0_.entity_id=45 
 {executed in 0 msec}
2020-11-19 11:27:08.040 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|--------------------|------|---------------------|---------|------------|
|entity_id |bundle |field_comment_value |delta |field_comment_format |langcode |revision_id |
|----------|-------|--------------------|------|---------------------|---------|------------|
|----------|-------|--------------------|------|---------------------|---------|------------|

2020-11-19 11:27:08.042 INFO  jdbc.sqltiming Line:373 - insert into node_revision__field_comment (bundle, field_comment_value, delta, field_comment_format, 
langcode, revision_id, entity_id) values ('book', '<li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/17/45/5c/e5fee325.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>panlatent</span> <span class="_1bkbsnjg_0">置顶</span> </div> <div class="_1H1Z49Dr_0"> 
2019-09-21 </div> </div> <!----> </div> <div> <div class="_3M6kV3zb_0 _3D2NkqD6_0"> 结合上一讲内容，想问问老师对 
graphql 的看法，以及如何权衡 graphql / rest 两种api 。 </div> <!----> <div class="_2xNIY4NG_0"> <p class="_33BLbmw4_0">作者回复: 
这其实是个很好的问题。<br><br>我对 GraphQL 的理解简单来说是这样的，仅供参考。它本质上是一种声明式的 DSL，把接口逻辑从服务端拿到客户端来，客户端来决定做什么查询，执行什么操作，资源的概念被彻底弱化了。<br><br>和基于资源的 
REST 相比，因为可以更加细粒度地控制需要什么数据，减少了多次调用或者是不需要的数据返回造成的开销。当然，它也有许多弱点，比如复杂性更高（客户端需要理解复杂的业务数据模型），不容易使用缓存等等。<br><br>我觉得它应该是 
REST 风格的一种补充，而不是绝对的替代。有很多场景，比如复杂的数据查询，使用 GraphQL 可以做得很灵活，且有比较高的效率。而多数业务场景，REST 确是更好的选择。</p> 
</div> <div class="_1w8H0ktn_0 _2A421P4G_0"> <div class="_2jsFl-X0_0"> <i class="iconfont"></i> 
<span></span> </div> <div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class="">3</span> 
</div> <!----> </div> </div> </div></li> <li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/16/bc/25/1c92a90c.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>tt</span> <span class="_1bkbsnjg_0">置顶</span> </div> <div class="_1H1Z49Dr_0"> 2019-09-20 
</div> </div> <!----> </div> <div> <div class="_3M6kV3zb_0"> 1、突然有个想法，通过路径传递参数相当于非web系统设计的定长报文或固定分隔符报文，可读性比较差，可以更多的实现对外部的信息隐藏。 
<br> <br>而通过query参数传递相当于URL承载的键值对报文，可读性比较好。 <br> <br>实现上，通过路径传递的话，在后端实现url解析即请求路由的时候需要完成参数的判断，使用一些开发框架可能更简单，但是这个过程不是完全由实现业务的人来控制，是不是会影响整个系统的扩展性以及处理效率呢？ 
<br> <br>所以我觉得通过路径传递参数适合参数种类及个数比较少的情况， <br> <br> <br>2、对于银行转账如何用rest风格设计接口，我觉得可以用“变换”的思维，把转账这个动作“变换”或“视作”为一个创建一笔“转账”业务对象的操作，这个业务对象有若干属性，比如收付款账号、金额等，从而继续使用rest风格。 
<br> <br>此外，老师有没有关于web api鉴权和授权方面的参考链接呢？ </div> <div class="_2r3UB1GX_0"> <span>展开</span><i 
class="iconfont"></i> </div> <div class="_2xNIY4NG_0"> <p class="_33BLbmw4_0">作者回复: 感谢回答。<br>关于 
1，我觉得你说得很好。路径传递“隐含”了这个 key，而使用 Query String 的键值对的方式，则显式指定了 key。从这个角度来说，确实后者更为“明确”。<br><br>但是，“可读性”并不一定是指定了 
key 的更好，可读性毕竟是一个和个人理解密切相关的判断。通常在路径层次较短，且路径的定义符合人的认知的时候（比如“资源/分类/唯一ID”，这样由大到小的递进），路径传递参数的方式也具有很高的可读性。<br><br>在使用框架处理的难度方面，我认为这两种方式并没有太大区别。<br><br>另外，使用 
Query String 的方式灵活性上要更高，比如可以通过合理的配置自动构造和注入一个复杂的参数对象，这方面我们会在下一章学到。<br><br>关于 2，说得非常好，这种把一个复杂行为转变为可进行 
CRUD 的“资源”，就是一种很有效的处理方法。<br><br>对于你最后关于鉴权和授权的问题，我计划在第 5 章谈到。</p> </div> <div class="_1w8H0ktn_0 
_2A421P4G_0"> <div class="_2jsFl-X0_0"> <i class="iconfont"></i> <span></span> </div> <div 
class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class="">2</span> </div> <!----> </div> 
</div> </div></li> <li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/10/88/21/50b2418a.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>alan</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2019-09-22 </div> </div> <!----> 
</div> <div> <div class="_3M6kV3zb_0"> 老师，为啥说204是最常见的返回码？不是200吗？ </div> <div class="_2r3UB1GX_0"> 
<span>展开</span><i class="iconfont"></i> </div> <div class="_2xNIY4NG_0"> <p class="_33BLbmw4_0">作者回复: 
看场景了。对于 Web API 来说，如果是一个命令接口，常常见到返回 204，表示操作成功，但不需要消息体。</p> </div> <div class="_1w8H0ktn_0 
_2A421P4G_0"> <div class="_2jsFl-X0_0"> <i class="iconfont"></i> <span></span> </div> <div 
class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class="">1</span> </div> <!----> </div> 
</div> </div></li> <li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/10/cc/ce/39c470ee.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>jxs1211</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2019-09-23 </div> </div> <!----> 
</div> <div> <div class="_3M6kV3zb_0"> sql建议使用pk进行查询，如果使用name这样的业务相关的字段进行查询，可以提高理解性，是否也应该加索引，提高查询效率 
</div> <div class="_2r3UB1GX_0"> <span>展开</span><i class="iconfont"></i> </div> <!----> <div 
class="_1w8H0ktn_0 _2A421P4G_0"> <div class="_2jsFl-X0_0"> <i class="iconfont"></i> <span></span> 
</div> <div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class=""></span> </div> <!----> 
</div> </div> </div></li> <li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/14/34/df/64e3d533.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>leslie</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2019-09-23 </div> </div> <!----> 
</div> <div> <div class="_3M6kV3zb_0"> 问题、技术、风格和定义：这个似乎不止在web api的设计中会有这个问题，我觉得在现在的数据系统/存储中间件 
的设计中其实现在典型的出现了；毕竟现在一旦设计软件就不是过去传统的C/S或B/S。 <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;昨天一个同行问我一个问题：我们有前端开发，我们需要架构师；我就反问了一句“你们需要的是什么架构？”分析"问题"、寻找“技术"、选择“风格”、定义"需求"。架构师这个已经有点泛泛了：就像全栈一样，好的全栈其实才是一个好的架构师-他能权衡从前端-开发-数据系统-网络设计。各种模块的权衡才是最困难的事情；老师觉得呢？其实很多架构师都是有明显的缺陷的。 
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;老师说权衡的艺术：其实好的全栈才能成为一个好的架构师，否则我们只能去说软件架构、数据系统架构、网络及安全架构；老师怎么看？ 
</div> <div class="_2r3UB1GX_0"> <span>展开</span><i class="iconfont"></i> </div> <!----> <div 
class="_1w8H0ktn_0 _2A421P4G_0"> <div class="_2jsFl-X0_0"> <i class="iconfont"></i> <span></span> 
</div> <div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class=""></span> </div> <!----> 
</div> </div> </div></li> <li class="reJj6Thl_0"><img src="http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83erbY9UsqHZhhVoI69yXNibBBg0TRdUVsKLMg2UZ1R3NJxXdMicqceI5yhdKZ5Ad6CJYO0XpFHlJzIYQ/132" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>饭团</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2019-09-21 </div> </div> <!----> </div> 
<div> <div class="_3M6kV3zb_0"> 我感觉路径选择不够灵活，因为他默认了各级参数所对应的含义！在需要加入参数或者调整参数顺序的时候就会带来诸多不便！我看到的大部分对外接口都是在指定到特定目录后（应该是该功能的功能模块），参数通过或则query_string的形式传输过来！ 
<br>也就是说如果一个接口使用纯路径选择，是不是就适合于功能较为简单，参数偏少的情况！而大部分情况都是混合使用 </div> <div class="_2r3UB1GX_0"> <span>展开</span><i 
class="iconfont"></i> </div> <div class="_2xNIY4NG_0"> <p class="_33BLbmw4_0">作者回复: 👍，说得很好。</p> 
</div> <div class="_1w8H0ktn_0 _2A421P4G_0"> <div class="_2jsFl-X0_0"> <i class="iconfont"></i> 
<span></span> </div> <div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class=""></span> 
</div> <!----> </div> </div> </div></li> <li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/10/df/63/cf317827.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>anginiit</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2019-09-20 </div> </div> <!----> 
</div> <div> <div class="_3M6kV3zb_0 _3D2NkqD6_0"> 一直只关心技术 对于设计思想层面的考虑为0，这篇文章对我来说读的一头雾水。学习，学习。。。 
</div> <!----> <!----> <div class="_1w8H0ktn_0 _2A421P4G_0"> <div class="_2jsFl-X0_0"> <i class="iconfont"></i> 
<span></span> </div> <div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class=""></span> 
</div> <!----> </div> </div> </div></li> <li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/17/e3/45/d4d3c265.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>编程爱好者</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2019-09-20 </div> </div> <!----> 
</div> <div> <div class="_3M6kV3zb_0"> 全栈工程师不是技术方面的问题，而是灵魂是否有趣的问题，很喜欢作者结尾分享的链接，这门课程是告诉我们如何成为一个有趣的程序员 
</div> <div class="_2r3UB1GX_0"> <span>展开</span><i class="iconfont"></i> </div> <div class="_2xNIY4NG_0"> 
<p class="_33BLbmw4_0">作者回复: 感谢评价！</p> </div> <div class="_1w8H0ktn_0 _2A421P4G_0"> <div class="_2jsFl-X0_0"> 
<i class="iconfont"></i> <span></span> </div> <div class="_2P4B1Hdm_0"> <i class="iconfont"></i> 
<span class=""></span> </div> <!----> </div> </div> </div></li>', 0, 'full_html', 'zh-hans', 
45, 45) 
 {executed in 0 msec}
2020-11-19 11:27:08.045 INFO  jdbc.sqltiming Line:373 - select bookfieldt0_.entity_id as entity_i1_8_, bookfieldt0_.bundle as bundle2_8_, bookfieldt0_.delta 
as delta3_8_, bookfieldt0_.langcode as langcode4_8_, bookfieldt0_.revision_id as revision5_8_, 
bookfieldt0_.field_thumb_value as field_th6_8_ from node__field_thumb bookfieldt0_ where bookfieldt0_.entity_id=45 
 {executed in 1 msec}
2020-11-19 11:27:08.045 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------|------------------|
|entity_id |bundle |delta |langcode |revision_id |field_thumb_value |
|----------|-------|------|---------|------------|------------------|
|----------|-------|------|---------|------------|------------------|

2020-11-19 11:27:08.046 INFO  jdbc.sqltiming Line:373 - select bookfieldt0_.entity_id as entity_i1_8_0_, bookfieldt0_.bundle as bundle2_8_0_, bookfieldt0_.delta 
as delta3_8_0_, bookfieldt0_.langcode as langcode4_8_0_, bookfieldt0_.revision_id as revision5_8_0_, 
bookfieldt0_.field_thumb_value as field_th6_8_0_ from node__field_thumb bookfieldt0_ where 
bookfieldt0_.entity_id=45 
 {executed in 0 msec}
2020-11-19 11:27:08.047 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------|------------------|
|entity_id |bundle |delta |langcode |revision_id |field_thumb_value |
|----------|-------|------|---------|------------|------------------|
|----------|-------|------|---------|------------|------------------|

2020-11-19 11:27:08.048 INFO  jdbc.sqltiming Line:373 - insert into node__field_thumb (bundle, delta, langcode, revision_id, field_thumb_value, entity_id) 
values ('book', 0, 'zh-hans', 45, 'https://static001.geekbang.org/resource/image/02/6f/02aaf171ff9a26c74634bcff3350a36f.jpg', 
45) 
 {executed in 0 msec}
2020-11-19 11:27:08.051 INFO  jdbc.sqltiming Line:373 - select nodefieldt0_.entity_id as entity_i1_17_0_, nodefieldt0_.bundle as bundle2_17_0_, nodefieldt0_.delta 
as delta3_17_0_, nodefieldt0_.langcode as langcode4_17_0_, nodefieldt0_.revision_id as revision5_17_0_, 
nodefieldt0_.field_thumb_value as field_th6_17_0_ from node_revision__field_thumb nodefieldt0_ 
where nodefieldt0_.entity_id=45 
 {executed in 0 msec}
2020-11-19 11:27:08.052 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------|------------------|
|entity_id |bundle |delta |langcode |revision_id |field_thumb_value |
|----------|-------|------|---------|------------|------------------|
|----------|-------|------|---------|------------|------------------|

2020-11-19 11:27:08.054 INFO  jdbc.sqltiming Line:373 - insert into node_revision__field_thumb (bundle, delta, langcode, revision_id, field_thumb_value, 
entity_id) values ('book', 0, 'zh-hans', 45, 'https://static001.geekbang.org/resource/image/02/6f/02aaf171ff9a26c74634bcff3350a36f.jpg', 
45) 
 {executed in 0 msec}
2020-11-19 11:27:08.058 INFO  jdbc.sqltiming Line:373 - select bookfieldf0_.entity_id as entity_i1_5_0_, bookfieldf0_.bundle as bundle2_5_0_, bookfieldf0_.delta 
as delta3_5_0_, bookfieldf0_.field_fenlei_target_id as field_fe4_5_0_, bookfieldf0_.langcode 
as langcode5_5_0_, bookfieldf0_.revision_id as revision6_5_0_ from node__field_fenlei bookfieldf0_ 
where bookfieldf0_.entity_id=45 
 {executed in 1 msec}
2020-11-19 11:27:08.058 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------------|---------|------------|
|entity_id |bundle |delta |field_fenlei_target_id |langcode |revision_id |
|----------|-------|------|-----------------------|---------|------------|
|----------|-------|------|-----------------------|---------|------------|

2020-11-19 11:27:08.060 INFO  jdbc.sqltiming Line:373 - insert into node__field_fenlei (bundle, delta, field_fenlei_target_id, langcode, revision_id, 
entity_id) values ('book', 0, 1, 'zh-hans', 45, 45) 
 {executed in 0 msec}
2020-11-19 11:27:08.065 INFO  jdbc.sqltiming Line:373 - select nodefieldf0_.entity_id as entity_i1_14_0_, nodefieldf0_.bundle as bundle2_14_0_, nodefieldf0_.delta 
as delta3_14_0_, nodefieldf0_.field_fenlei_target_id as field_fe4_14_0_, nodefieldf0_.langcode 
as langcode5_14_0_, nodefieldf0_.revision_id as revision6_14_0_ from node_revision__field_fenlei 
nodefieldf0_ where nodefieldf0_.entity_id=45 
 {executed in 0 msec}
2020-11-19 11:27:08.066 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------------|---------|------------|
|entity_id |bundle |delta |field_fenlei_target_id |langcode |revision_id |
|----------|-------|------|-----------------------|---------|------------|
|----------|-------|------|-----------------------|---------|------------|

2020-11-19 11:27:08.068 INFO  jdbc.sqltiming Line:373 - insert into node_revision__field_fenlei (bundle, delta, field_fenlei_target_id, langcode, revision_id, 
entity_id) values ('book', 0, 1, 'zh-hans', 45, 45) 
 {executed in 1 msec}
2020-11-19 11:27:45.217 INFO  jdbc.sqltiming Line:373 - select bookfieldf0_.entity_id as entity_i1_6_, bookfieldf0_.bundle as bundle2_6_, bookfieldf0_.delta 
as delta3_6_, bookfieldf0_.field_fsid_value as field_fs4_6_, bookfieldf0_.langcode as langcode5_6_, 
bookfieldf0_.revision_id as revision6_6_ from node__field_fsid bookfieldf0_ where bookfieldf0_.field_fsid_value='86444922167822' 
 {executed in 0 msec}
2020-11-19 11:27:45.218 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------|---------|------------|
|entity_id |bundle |delta |field_fsid_value |langcode |revision_id |
|----------|-------|------|-----------------|---------|------------|
|----------|-------|------|-----------------|---------|------------|

2020-11-19 11:27:45.219 INFO  jdbc.sqltiming Line:373 - insert into node_revision (langcode, nid, revision_default, revision_timestamp, revision_uid) 
values ('zh-hans', 0, 1, 1605756465, 1) 
 {executed in 0 msec}
2020-11-19 11:27:45.220 INFO  jdbc.sqltiming Line:373 - getGeneratedKeys on query: insert into node_revision (langcode, nid, revision_default, revision_timestamp, 
revision_uid) values ('zh-hans', 0, 1, 1605756465, 1) 
 {executed in 0 msec}
2020-11-19 11:27:45.221 INFO  jdbc.resultsettable Line:610 - 
|--------------|
|generated_key |
|--------------|
|46            |
|--------------|

2020-11-19 11:27:45.230 INFO  jdbc.sqltiming Line:373 - insert into node (langcode, type, uuid, vid) values ('zh-hans', 'book', 'be0b9735-f48a-4693-8ee0-fb7d7aa64531', 
46) 
 {executed in 0 msec}
2020-11-19 11:27:45.230 INFO  jdbc.sqltiming Line:373 - getGeneratedKeys on query: insert into node (langcode, type, uuid, vid) values ('zh-hans', 
'book', 'be0b9735-f48a-4693-8ee0-fb7d7aa64531', 46) 
 {executed in 0 msec}
2020-11-19 11:27:45.231 INFO  jdbc.resultsettable Line:610 - 
|--------------|
|generated_key |
|--------------|
|46            |
|--------------|

2020-11-19 11:27:45.236 INFO  jdbc.sqltiming Line:373 - update node_revision set langcode='zh-hans', nid=46, revision_default=1, revision_timestamp=1605756465, 
revision_uid=1 where vid=46 
 {executed in 0 msec}
2020-11-19 11:27:45.241 INFO  jdbc.sqltiming Line:373 - select bookfieldf0_.entity_id as entity_i1_6_0_, bookfieldf0_.bundle as bundle2_6_0_, bookfieldf0_.delta 
as delta3_6_0_, bookfieldf0_.field_fsid_value as field_fs4_6_0_, bookfieldf0_.langcode as langcode5_6_0_, 
bookfieldf0_.revision_id as revision6_6_0_ from node__field_fsid bookfieldf0_ where bookfieldf0_.entity_id=46 
 {executed in 1 msec}
2020-11-19 11:27:45.241 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------|---------|------------|
|entity_id |bundle |delta |field_fsid_value |langcode |revision_id |
|----------|-------|------|-----------------|---------|------------|
|----------|-------|------|-----------------|---------|------------|

2020-11-19 11:27:45.243 INFO  jdbc.sqltiming Line:373 - insert into node__field_fsid (bundle, delta, field_fsid_value, langcode, revision_id, entity_id) 
values ('book', 0, '86444922167822', 'zh-hans', 46, 46) 
 {executed in 0 msec}
2020-11-19 11:27:45.246 INFO  jdbc.sqltiming Line:373 - select nodefieldf0_.entity_id as entity_i1_15_0_, nodefieldf0_.bundle as bundle2_15_0_, nodefieldf0_.delta 
as delta3_15_0_, nodefieldf0_.field_fsid_value as field_fs4_15_0_, nodefieldf0_.langcode as 
langcode5_15_0_, nodefieldf0_.revision_id as revision6_15_0_ from node_revision__field_fsid 
nodefieldf0_ where nodefieldf0_.entity_id=46 
 {executed in 0 msec}
2020-11-19 11:27:45.246 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------|---------|------------|
|entity_id |bundle |delta |field_fsid_value |langcode |revision_id |
|----------|-------|------|-----------------|---------|------------|
|----------|-------|------|-----------------|---------|------------|

2020-11-19 11:27:45.248 INFO  jdbc.sqltiming Line:373 - insert into node_revision__field_fsid (bundle, delta, field_fsid_value, langcode, revision_id, 
entity_id) values ('book', 0, '86444922167822', 'zh-hans', 46, 46) 
 {executed in 0 msec}
2020-11-19 11:27:45.251 INFO  jdbc.sqltiming Line:373 - select bookentity0_.nid as nid1_1_, bookentity0_.bid as bid2_1_, bookentity0_.depth as depth3_1_, 
bookentity0_.has_children as has_chil4_1_, bookentity0_.p1 as p5_1_, bookentity0_.p2 as p6_1_, 
bookentity0_.p3 as p7_1_, bookentity0_.p4 as p8_1_, bookentity0_.p5 as p9_1_, bookentity0_.pid 
as pid10_1_, bookentity0_.weight as weight11_1_ from book bookentity0_ where bookentity0_.nid=46 
 {executed in 1 msec}
2020-11-19 11:27:45.251 INFO  jdbc.resultsettable Line:610 - 
|----|----|------|-------------|---|---|---|---|---|----|-------|
|nid |bid |depth |has_children |p1 |p2 |p3 |p4 |p5 |pid |weight |
|----|----|------|-------------|---|---|---|---|---|----|-------|
|----|----|------|-------------|---|---|---|---|---|----|-------|

2020-11-19 11:27:45.251 INFO  jdbc.sqltiming Line:373 - select bookentity0_.nid as nid1_1_0_, bookentity0_.bid as bid2_1_0_, bookentity0_.depth as 
depth3_1_0_, bookentity0_.has_children as has_chil4_1_0_, bookentity0_.p1 as p5_1_0_, bookentity0_.p2 
as p6_1_0_, bookentity0_.p3 as p7_1_0_, bookentity0_.p4 as p8_1_0_, bookentity0_.p5 as p9_1_0_, 
bookentity0_.pid as pid10_1_0_, bookentity0_.weight as weight11_1_0_ from book bookentity0_ 
where bookentity0_.nid=46 
 {executed in 0 msec}
2020-11-19 11:27:45.252 INFO  jdbc.resultsettable Line:610 - 
|----|----|------|-------------|---|---|---|---|---|----|-------|
|nid |bid |depth |has_children |p1 |p2 |p3 |p4 |p5 |pid |weight |
|----|----|------|-------------|---|---|---|---|---|----|-------|
|----|----|------|-------------|---|---|---|---|---|----|-------|

2020-11-19 11:27:45.253 INFO  jdbc.sqltiming Line:373 - insert into book (bid, depth, has_children, p1, p2, p3, p4, p5, pid, weight, nid) values (1, 
3, 0, 1, 43, 46, 0, 0, 43, 0, 46) 
 {executed in 0 msec}
2020-11-19 11:27:45.256 INFO  jdbc.sqltiming Line:373 - select nodebodyen0_.entity_id as entity_i1_3_, nodebodyen0_.body_value as body_val2_3_, nodebodyen0_.body_summary 
as body_sum3_3_, nodebodyen0_.bundle as bundle4_3_, nodebodyen0_.delta as delta5_3_, nodebodyen0_.body_format 
as body_for6_3_, nodebodyen0_.langcode as langcode7_3_, nodebodyen0_.revision_id as revision8_3_ 
from node__body nodebodyen0_ where nodebodyen0_.entity_id=46 
 {executed in 0 msec}
2020-11-19 11:27:45.256 INFO  jdbc.resultsettable Line:610 - 
|----------|-----------|-------------|-------|------|------------|---------|------------|
|entity_id |body_value |body_summary |bundle |delta |body_format |langcode |revision_id |
|----------|-----------|-------------|-------|------|------------|---------|------------|
|----------|-----------|-------------|-------|------|------------|---------|------------|

2020-11-19 11:27:45.257 INFO  jdbc.sqltiming Line:373 - select nodebodyre0_.entity_id as entity_i1_12_0_, nodebodyre0_.body_value as body_val2_12_0_, 
nodebodyre0_.body_summary as body_sum3_12_0_, nodebodyre0_.bundle as bundle4_12_0_, nodebodyre0_.delta 
as delta5_12_0_, nodebodyre0_.body_format as body_for6_12_0_, nodebodyre0_.langcode as langcode7_12_0_, 
nodebodyre0_.revision_id as revision8_12_0_ from node_revision__body nodebodyre0_ where nodebodyre0_.entity_id=46 
 {executed in 0 msec}
2020-11-19 11:27:45.257 INFO  jdbc.resultsettable Line:610 - 
|----------|-----------|-------------|-------|------|------------|---------|------------|
|entity_id |body_value |body_summary |bundle |delta |body_format |langcode |revision_id |
|----------|-----------|-------------|-------|------|------------|---------|------------|
|----------|-----------|-------------|-------|------|------------|---------|------------|

2020-11-19 11:27:45.260 INFO  jdbc.sqltiming Line:373 - insert into node_revision__body (body_value, body_summary, bundle, delta, body_format, langcode, 
revision_id, entity_id) values ('<p>你好，我是四火。</p> <p>今天我要邀请两位风格迥异的主角登上舞台，一位西装革履，另一位随性洒脱。前面那位，代表着工整、严谨和细致；后面那位，代表着自由、灵活和简约。</p> 
<p>它们来自两个不同的时代，却同时活跃于当今的互联网，并担当着重量级的角色，影响了一批新技术的诞生。今天，就让我们来认识下它们，它们的名字，分别叫做 SOAP 和 REST。</p> 
<h2>概念</h2> <p>SOAP，Simple Object Access Protocol，即简单对象访问协议，定义了数据对象传输的格式，以便在网络的节点之间交换信息。你可能会问，HTTP 
不就是干这事的吗？其实，它们都在 OSI 7 层模型的应用层上，但却互不冲突，SOAP 并不依赖于 HTTP 而存在，而且它们可以互相配合。</p> <p>HTTP 负责信息的传输，比如传递文本数据，关心的是消息的送达，但却不关心这个数据代表着什么。这个数据可能本来是一个内存里的对象，是一篇文章，或者是一张图片。但是 
SOAP 恰恰相反，它关心的就是怎样把这个数据给序列化成 XML 格式的文本，在传输到对端以后，再还原回来。</p> <p>用一个形象的比喻就是，<strong>消息传输就像快递，HTTP 
主要关心的是信封，而 SOAP 主要关心的是信封里的物件。</strong>今天我们讨论的 SOAP，不仅仅是协议本身，更主要的是它的风格。</p><!-- [[[read_end]]] 
--> <p>REST，Representational State Transfer，即表现层状态转换，指的是一种为了信息能在互联网上顺利传递而设计的软件架构风格。对，请注意，<strong>SOAP 
是协议，但 REST 是风格，而非协议或标准</strong>，至于 HTTP，它是 REST 风格的重要载体。重要，但不是唯一，因为载体并不只有 HTTP 一个，比如还有 HTML 
和 XML，它们恰当地互相配合，组合在一起，来贯彻和体现 REST 的风格。</p> <p>SOAP 和 REST，由于概念层次上的不同，其实原本是无法放到一起比较的，但是当我们旨在风格层面上讨论 
SOAP 和 REST 的时候，这件事却变得可行而有趣了。</p> <p>现在让我们用一个实际例子来进一步认识它们。这个例子很常见，假设我们要设计一个图书馆，馆中的书可以增删改查（CRUD），特别是要添加一本书的时候，我们分别来看看，应用 
SOAP 该怎么做，应用 REST 又该怎么做。</p> <h2>SOAP</h2> <p>这是一个最简单的给图书馆添加一本书的 XML 消息体：</p> <pre style="position: 
relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
&lt;?xml version="1.0" encoding="UTF-8"?&gt; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> &lt;soap:Envelope </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> xmlns:soap="https://www.w3.org/2003/05/soap-envelope/" </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> soap:encodingStyle="https://www.w3.org/2003/05/soap-encoding"&gt; 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> &lt;soap:Body xmlns:b="..."&gt; </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> &lt;b:CreateBook&gt; </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="7"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> &lt;b:Name&gt;...&lt;/m:Name&gt; </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="8"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> &lt;b:Author&gt;...&lt;/m:Author&gt; </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="9"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> ... </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="10"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> &lt;/b:CreateBook&gt; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="11"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> &lt;/soap:Body&gt; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="12"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> &lt;/soap:Envelope&gt; </div></td> </tr> </tbody> </table></code> 
<div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 </div></pre> <p>让我来简单解释一下：</p> 
<p>1. 第一行指明了这个消息本身格式是 XML，包括它的版本号和编码格式。</p> <p>2. 这里的很多标签都带有“soap:”的前缀，其实，这里的“soap”就是 XML 的命名空间（其中“xmlns”就是指“xml 
namespace”），并且通过 XML schema 的方式预先定义好了如下两个 SOAP 消息必须要遵从的规则：</p> <ul> <li> <p>一个是代码片段第 3 行的 <a 
href="https://www.w3.org/2003/05/soap-envelope/">soap-envelope</a>，它定义了基本的语法规则，比如标签的从属关系，比如同级某标签的个数限制等等，举例来说，你可以看到例子中有一个 
Body 标签位于 Envelope 内部，这就是它定义的；</p> </li> <li> <p>另一个是代码片段第 4 行的 <a href="https://www.w3.org/2003/05/soap-encoding">soap-encoding</a>，它定义了编码和数据类型等规则。</p> 
</li> </ul> <p>3. 在 Body 标签内部，有一个 CreateBook 标签，这是我们的业务标签，命名空间 b 也是我们自己定义的。通过在内部封装姓名（Name）和作者（Author）等书本信息，实现了在图书馆中添加书本的需求。</p> 
<p>上面是一个最简单的例子，实际在 Envelope 中还可以添加 Head 标签，用于存放头部信息，在 Body 中可以添加 Fault 标签，用于存放错误信息。关于这些，都在 
XML schema 中做了严格的定义，通过它可以帮助验证一个 XML 是否符合格式，从而可以在最短的时间内验证并发现消息中的格式问题。</p> <p>SOAP 通常是通过 HTTP 
POST 的方式发送到对端的，这个图书馆对书本的增删改查操作，URL 可以是同一个，这是因为 SOAP 消息的具体内容写明了具体要干什么（上述的 CreateBook 标签）。比如下面这个例子，请注意其中的 
Content-Type，它是令响应具备自我描述特性的重要组成部分：</p> <pre style="position: relative;"><code> <table class="hljs-ln"> 
<tbody> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> POST /books HTTP/1.1 </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> Host: xxx </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> Content-Type: application/soap+xml; charset=utf-8 </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> Content-Length: xxx </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> ... (省略前述的 SOAP 消息体) </div></td> </tr> </tbody> </table></code> 
<div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 </div></pre> <p>最后，谈谈经常和 
SOAP 放在一起谈论的 WSDL，Web Service Description Language。</p> <p>WSDL 用于描述一个 Web Service，说白了，就是用来说明某个 
Web 服务该怎样使用，有怎样的接口方法，支持怎样的参数，会有怎样的返回。由于支持 SOAP 的服务端接口是经常使用 WSDL 来描述，因此我们才看到它们总被放在一起讨论，于是在这种情况下，<strong>WSDL 
常常被形容成 SOAP 服务的使用说明书</strong>，但是请注意，本质上它们之间不存在依赖关系。</p> <p><strong>这种将服务和服务的描述解耦开设计的方式非常普遍</strong>，希望你可以去类比和联想。在软件的世界里，我们经常谈论这个“描述”的行为，以及描述者和被描述者。比如元属性描述数据，方法签名描述方法，类描述对象等等。</p> 
<h2>REST</h2> <p>现在，我们再来看 REST 的做法。<strong>REST 的核心要素包括资源、表现层和状态转换这三个部分。</strong>我们把前面客户端发送请求的过程使用 
REST 风格再来实现一遍，你将看到这三个要点是怎样体现出来的：</p> <h3>1. 协议</h3> <p>我们将使用 HTTP 协议，在加密的情况下，协议是 HTTPS，但这对我们的实现来说没有什么区别。</p> 
<h3>2. URL</h3> <p>通常来说，这个 URL 要包括域名、版本号以及实体名称，而这个 URL 整体，代表了 REST 中的一类或一项“资源”。比如说：</p> <pre 
style="position: relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> https://xxx/v1/books </div></td> </tr> </tbody> </table></code> 
<div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 </div></pre> <p>请注意其中的实体名称，它往往是一个单纯的名词，并且以复数形式出现。</p> 
<p>这里提到了 URL，我想给经常混用的 URL、URI 做个简要的说明：URL 指的是 Uniform Resource Locator，URI 指的是 Uniform Resource 
Identifier，前者是统一资源定位符，后者是统一资源标识符。<strong>Identifier 可以有多种形式，而 locator 只是其中一种，因此 URI 更宽泛，URL 
只是 URI 的其中一种形式</strong>。</p> <p>当我们提到一个完整的地址，例如 <a href="https://www.google.com">https://www.google.com</a>， 
它就是 URL，因为它可以被“定位”，它当然也是 URI；但是如果我们只提到上面地址的一个片段，例如 www.google.com，那么由于缺少了具体协议，我们无法完成完整的定位，因此这样的东西只能被叫做一个标识符，故而只能算 
URI，而非 URL。</p> <h3>3. 方法</h3> <p>HTTP 的方法反映了这个接口上将执行的行为，如果用自然语言描述，它将是一个动词。比如说，给图书馆添加一本图书，那么这个行为将是“添加”。在以 
REST 风格主导的设计中，我们将使用这样的 HTTP 方法来代表增删改查（CRUD）的不同动作：</p> <p><img src="https://static001.geekbang.org/resource/image/2f/6c/2f80b22c23fb5382e359ece6082c2f6c.jpg" 
alt=""></p> <p>重点解释下表格的最后两列：</p> <ul> <li><strong>幂等性指的是对服务端的数据状态，执行多次操作是否和执行一次产生的结果一样。</strong>从表格中你可以看到，创建资源单位不是幂等的，执行多次就意味着创建了多个资源单位，而其它操作都是幂等的。通常来说，<strong>幂等操作是可以被重试而不产生副作用的。</strong></li> 
<li><strong>安全性指的是该操作是否对服务端的数据状态产生了影响。</strong>从表格中可以看到，获取资源的操作是安全的，不会对资源数据产生影响，但是其它操作都是不安全的。一定条件下，<strong>安全操作是可以被缓存的</strong>，而不安全的操作，必定对服务端的状态产生了影响，这体现了 
REST 的“状态转换”这一要素。</li> </ul> <p>全栈系统的设计和优化都需要紧密围绕幂等性和安全性进行，这是两个非常重要的概念，在我们后续的学习中，你还会反复见到它们，并和它们打交道。</p> 
<p>你看，通过这样的办法，就把 HTTP 的方法和实际对资源的操作行为绑定起来了。当然，还有一些其它方法，比较常见的有：</p> <ul> <li>PATCH：和 PUT 类似，也用于资源更新，但支持的是资源单位的部分更新，并且在资源不存在的时候，能够自动创建资源，这个方法实际使用比较少。</li> 
<li>HEAD：这个方法只返回资源的头部，避免了资源本身获取和传输的开销。这种方法很有用，经常用来检查资源是否存在，以及有无修改。</li> <li>OPTIONS：这个方法常用来返回服务器对于指定资源所支持的方法列表。</li> 
</ul> <h3>4. 正文</h3> <p>POST 和 PUT 请求都是有 HTTP 正文的，正文的类型和 Content-Type 的选取有关，比如 JSON 就是最典型的一种格式。请不要轻视这里的 
Content-Type，从本质上说，它代表了资源的表现形式，从而体现了 REST 定义中的“表现层”这一要素。</p> <p>最后，回到我们实际的图书馆添加图书的问题。SOAP 添加一本书的消息，用 
REST 风格的 POST 请求实现就会变成这样：</p> <pre style="position: relative;"><code> <table class="hljs-ln"> 
<tbody> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> POST /v1/books HTTP/1.1 </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> HOST: ... </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> Content-Type: application/json </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="5"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
{ </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> "name": "...", </div></td> </tr> <tr> 
<td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="7"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> "author": "...", </div></td> </tr> <tr> 
<td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="8"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> ... </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="9"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> } </div></td> </tr> </tbody> </table></code> <div class="richcontent-pre-copy"> 
<span class="iconfont"></span>复制代码 </div></pre> <h2>风格之争</h2> <p>看到这儿，你应该已经感受到了，SOAP 和 REST 
代表了两种迥异的风格。在我们取舍技术的时候，如果没有给出具体场景和限制，我们往往是很难讲出谁更“好”，而是需要进行比较，权衡利弊的。</p> <p>SOAP 明显是更“成熟”的那一个。它在数据传输的协议层面做了更多的工作，藉由 
XML schema，它具备更严格的检查和校验，配合 WSDL，在真正发送请求前，几乎就对所有远程接口事无巨细的问题有了答案。但是，它的复杂度令人望而生畏，也是它最受人诟病的地方。</p> 
<p>REST 则相反，新接口的学习成本很低，只需要知道资源名称，根据我们熟知的规约，就可以创建出 CRUD 的请求来。但是直到真正发送请求去测试为止，并没有办法百分百确定远程接口的调用是否能工作，或者说，并不知道接口定义上是否有不规范、不合常规的坑在里面。</p> 
<p>对于互联网来说，SOAP 已经是一项“古老”的技术了，晚辈 REST 似乎更切合互联网的潮流。在大多数情况下，REST 要易用和流行得多，于是很多人都不喜欢繁琐的 SOAP 协议。<strong>技术的发展总是有这样的规律，一开始无论问题还是办法都很简单，可是随着需求的进一步增加，解决的方法也缓慢演化，如 
SOAP 一般强大而复杂，直到某一天突然掉到谷底，如 REST 一般返璞归真。</strong></p> <p>但是别忘了，有利必有弊。首先，正是因为 REST 只是一个缺乏限制的风格，而非一个严谨的规范，有太多不明确、不一致的实现导致的问题，这些问题轻者给接口调用者带来困惑，重者导致接口调用错误，甚至服务端数据错误。</p> 
<p>其次，REST 通过 HTTP 方法实现本身，也受到了 HTTP 方法的局限性制约。比如最常见的 GET 请求，有时需要一个复杂的查询条件集合，因此参数需要结构化，而 GET 
只支持一串键值对组合的参数传递，无法适应业务需要。对于这样的问题，有一些 workaround，比如使用 POST 消息体来传递查询条件的结构体，但那已经偏离了 REST 的最佳实践，丢失了 
GET 本身的优势，也带来了实现不一致等一系列问题。</p> <p>最后，REST 还存在的一个更本质的问题，资源是它的核心概念，这原本带来了抽象和简洁的优势，但如今也成为了它的桎梏。或者说，前面反复提到的增删改查是它最拿手的本事，可是互联网的需求是千变万化的，远不只有简单的增删改查。有时需要一个复杂的多步操作，有时则需要一个异步事务（需要回调或者二次查询等等方式来实现），这些都没有一个完美统一的 
REST 风格的解决方案。即便实现出来了，也可谓五花八门，同时失去了以往我们所熟知的 REST 的简洁优势。</p> <p><strong>互联网总在变复杂，但矛盾的是，人们却希望互联网上的交互会不断变简单。</strong>于是这引发了 
REST 的流行，可即便 REST 再流行，依旧有它不适合的场景；SOAP 虽古老，依然有它的用武之地。</p> <p>对于全栈工程师或者期待修炼全栈技能的你我来说，trade-off 
是永恒的话题。另外，除了 SOAP 和 REST，其实我们还有其它选择。我将在下一讲，结合实例具体介绍如何选择技术，并设计和实现远程接口。</p> <h2>总结思考</h2> <p>今天我们认识并学习了 
SOAP 和 REST 这样两种截然不同的风格，前者工整、严谨和细致，后者自由、灵活和简约。两道思考题如下：</p> <ul> <li>在做技术比较的时候，文中已经简单介绍了 REST 
和 SOAP 的优劣，你觉得，它们各自适合怎样的业务场景呢？</li> <li>有位程序员朋友在应用 RESTful 风格设计用户管理系统的接口时，“删除单个用户”功能的 URL 举例如下，你觉得有哪些问题？</li> 
</ul> <pre style="position: relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> http://xxx/deleteUser?userName=James </div></td> </tr> </tbody> 
</table></code> <div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 </div></pre> 
<p>今天的内容就到这里，希望你已经享受到了技术学习的快乐，如果你还有余力，请继续学习下面的选修课堂和扩展阅读。最后，对于上面的问题，或者你对今天的学习有什么感受，欢迎在留言区和我讨论！</p> 
<h2>选修课堂：动手调用 RESTful API</h2> <p>学习全栈怎么能不动手实践呢，现在就让我们开始吧。有一些在线工具，预置了 REST 风格的接口服务，我们可以使用命令行去指定不同的 
HTTP 方法，发送一些不同的 HTTP 请求，观察返回，通过实际的练习，相信你能够更好地理解 REST。这样的工具有很多，你可以自行搜索，也可以直接选择 <a href="https://reqres.in/">REQ | RES</a>：</p> 
<p><img src="https://static001.geekbang.org/resource/image/2d/b8/2d216d1910348056c1631d46f0f099b8.png" 
alt=""></p> <p>你可以使用网站上预置的请求，但我更推荐你自己写 curl 命令。比如发送一个 GET 请求，列出所有用户：</p> <pre style="position: 
relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
curl -v https://reqres.in/api/users | jq </div></td> </tr> </tbody> </table></code> <div class="richcontent-pre-copy"> 
<span class="iconfont"></span>复制代码 </div></pre> <p>其中的 -v 参数可以帮助输出详尽的信息，包括请求和响应的完整信息，当然也可以不用；后面的 
“| jq” 是为了让返回的 JSON 数据展示更美观，当然，你需要安装 <a href="https://stedolan.github.io/jq/">jq</a>。如果你没有安装，不使用 
jq 管道也是完全可以的。</p> <p>再比如，使用 POST 请求创建一个用户：</p> <pre style="position: relative;"><code> <table 
class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" 
data-line-number="1"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> curl 
-X POST -d ''{"name":"xxx", "job":"yyy"}'' -H "Content-Type: application/json" https://reqres.in/api/users 
| jq </div></td> </tr> </tbody> </table></code> <div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 
</div></pre> <p>这里使用了 -x 参数指定其为 POST 请求，之后的 Content-Type 是必不可少的，而 JSON 形式的 user 对象则通过参数 -d 
传了过去。</p> <p>最后得到了这样的结果：</p> <pre style="position: relative;"><code> <table class="hljs-ln"> 
<tbody> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> ... (省略请求统计信息) </div></td> </tr> <tr> 
<td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> "name": "xxx", </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> "job": "yyy", </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> "id": "585", </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> "createdAt": "2019-07-20T22:19:49.825Z" </div></td> </tr> <tr> <td 
class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="7"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> } </div></td> </tr> </tbody> </table></code> 
<div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 </div></pre> <h2>扩展阅读</h2> 
<ul> <li>W3Cschool 上的 <a href="https://www.w3cschool.cn/soap/?">SOAP 教程</a>，如果你对 SOAP 不够熟悉，那么你可以参考这个简明扼要的教程。</li> 
<li>【基础】<a href="https://www.restapitutorial.com/">REST API Tutorial</a>，REST 的教程很多，这是我觉得非常简洁和清晰的一个。</li> 
<li>ProgrammableWeb 上的 <a href="https://www.programmableweb.com/apis/directory">Web API 列表</a>，排名最靠前的 
10 个 API，其中有 9 个的架构风格都是 REST，这也从侧面应证了 REST 在互联网的趋势。</li> <li><a href="https://www.infoq.cn/article/rest-soap-when-to-use-each">REST 
和 SOAP：谁更好，或者都好？</a>这是一篇内容精悍的译文，分别介绍了适合 REST 和 SOAP 的场景。</li> </ul> <p><img src="https://static001.geekbang.org/resource/image/11/8b/1181246bbd51ce348d5729696d1dc28b.jpg" 
alt="unpreview"></p>', '', 'book', 0, 'full_html', 'zh-hans', 46, 46) 
 {executed in 0 msec}
2020-11-19 11:27:45.263 INFO  jdbc.sqltiming Line:373 - select nodebodyen0_.entity_id as entity_i1_3_0_, nodebodyen0_.body_value as body_val2_3_0_, 
nodebodyen0_.body_summary as body_sum3_3_0_, nodebodyen0_.bundle as bundle4_3_0_, nodebodyen0_.delta 
as delta5_3_0_, nodebodyen0_.body_format as body_for6_3_0_, nodebodyen0_.langcode as langcode7_3_0_, 
nodebodyen0_.revision_id as revision8_3_0_ from node__body nodebodyen0_ where nodebodyen0_.entity_id=46 
 {executed in 0 msec}
2020-11-19 11:27:45.263 INFO  jdbc.resultsettable Line:610 - 
|----------|-----------|-------------|-------|------|------------|---------|------------|
|entity_id |body_value |body_summary |bundle |delta |body_format |langcode |revision_id |
|----------|-----------|-------------|-------|------|------------|---------|------------|
|----------|-----------|-------------|-------|------|------------|---------|------------|

2020-11-19 11:27:45.265 INFO  jdbc.sqltiming Line:373 - insert into node__body (body_value, body_summary, bundle, delta, body_format, langcode, revision_id, 
entity_id) values ('<p>你好，我是四火。</p> <p>今天我要邀请两位风格迥异的主角登上舞台，一位西装革履，另一位随性洒脱。前面那位，代表着工整、严谨和细致；后面那位，代表着自由、灵活和简约。</p> 
<p>它们来自两个不同的时代，却同时活跃于当今的互联网，并担当着重量级的角色，影响了一批新技术的诞生。今天，就让我们来认识下它们，它们的名字，分别叫做 SOAP 和 REST。</p> 
<h2>概念</h2> <p>SOAP，Simple Object Access Protocol，即简单对象访问协议，定义了数据对象传输的格式，以便在网络的节点之间交换信息。你可能会问，HTTP 
不就是干这事的吗？其实，它们都在 OSI 7 层模型的应用层上，但却互不冲突，SOAP 并不依赖于 HTTP 而存在，而且它们可以互相配合。</p> <p>HTTP 负责信息的传输，比如传递文本数据，关心的是消息的送达，但却不关心这个数据代表着什么。这个数据可能本来是一个内存里的对象，是一篇文章，或者是一张图片。但是 
SOAP 恰恰相反，它关心的就是怎样把这个数据给序列化成 XML 格式的文本，在传输到对端以后，再还原回来。</p> <p>用一个形象的比喻就是，<strong>消息传输就像快递，HTTP 
主要关心的是信封，而 SOAP 主要关心的是信封里的物件。</strong>今天我们讨论的 SOAP，不仅仅是协议本身，更主要的是它的风格。</p><!-- [[[read_end]]] 
--> <p>REST，Representational State Transfer，即表现层状态转换，指的是一种为了信息能在互联网上顺利传递而设计的软件架构风格。对，请注意，<strong>SOAP 
是协议，但 REST 是风格，而非协议或标准</strong>，至于 HTTP，它是 REST 风格的重要载体。重要，但不是唯一，因为载体并不只有 HTTP 一个，比如还有 HTML 
和 XML，它们恰当地互相配合，组合在一起，来贯彻和体现 REST 的风格。</p> <p>SOAP 和 REST，由于概念层次上的不同，其实原本是无法放到一起比较的，但是当我们旨在风格层面上讨论 
SOAP 和 REST 的时候，这件事却变得可行而有趣了。</p> <p>现在让我们用一个实际例子来进一步认识它们。这个例子很常见，假设我们要设计一个图书馆，馆中的书可以增删改查（CRUD），特别是要添加一本书的时候，我们分别来看看，应用 
SOAP 该怎么做，应用 REST 又该怎么做。</p> <h2>SOAP</h2> <p>这是一个最简单的给图书馆添加一本书的 XML 消息体：</p> <pre style="position: 
relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
&lt;?xml version="1.0" encoding="UTF-8"?&gt; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> &lt;soap:Envelope </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> xmlns:soap="https://www.w3.org/2003/05/soap-envelope/" </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> soap:encodingStyle="https://www.w3.org/2003/05/soap-encoding"&gt; 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> &lt;soap:Body xmlns:b="..."&gt; </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> &lt;b:CreateBook&gt; </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="7"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> &lt;b:Name&gt;...&lt;/m:Name&gt; </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="8"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> &lt;b:Author&gt;...&lt;/m:Author&gt; </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="9"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> ... </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="10"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> &lt;/b:CreateBook&gt; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="11"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> &lt;/soap:Body&gt; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="12"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> &lt;/soap:Envelope&gt; </div></td> </tr> </tbody> </table></code> 
<div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 </div></pre> <p>让我来简单解释一下：</p> 
<p>1. 第一行指明了这个消息本身格式是 XML，包括它的版本号和编码格式。</p> <p>2. 这里的很多标签都带有“soap:”的前缀，其实，这里的“soap”就是 XML 的命名空间（其中“xmlns”就是指“xml 
namespace”），并且通过 XML schema 的方式预先定义好了如下两个 SOAP 消息必须要遵从的规则：</p> <ul> <li> <p>一个是代码片段第 3 行的 <a 
href="https://www.w3.org/2003/05/soap-envelope/">soap-envelope</a>，它定义了基本的语法规则，比如标签的从属关系，比如同级某标签的个数限制等等，举例来说，你可以看到例子中有一个 
Body 标签位于 Envelope 内部，这就是它定义的；</p> </li> <li> <p>另一个是代码片段第 4 行的 <a href="https://www.w3.org/2003/05/soap-encoding">soap-encoding</a>，它定义了编码和数据类型等规则。</p> 
</li> </ul> <p>3. 在 Body 标签内部，有一个 CreateBook 标签，这是我们的业务标签，命名空间 b 也是我们自己定义的。通过在内部封装姓名（Name）和作者（Author）等书本信息，实现了在图书馆中添加书本的需求。</p> 
<p>上面是一个最简单的例子，实际在 Envelope 中还可以添加 Head 标签，用于存放头部信息，在 Body 中可以添加 Fault 标签，用于存放错误信息。关于这些，都在 
XML schema 中做了严格的定义，通过它可以帮助验证一个 XML 是否符合格式，从而可以在最短的时间内验证并发现消息中的格式问题。</p> <p>SOAP 通常是通过 HTTP 
POST 的方式发送到对端的，这个图书馆对书本的增删改查操作，URL 可以是同一个，这是因为 SOAP 消息的具体内容写明了具体要干什么（上述的 CreateBook 标签）。比如下面这个例子，请注意其中的 
Content-Type，它是令响应具备自我描述特性的重要组成部分：</p> <pre style="position: relative;"><code> <table class="hljs-ln"> 
<tbody> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> POST /books HTTP/1.1 </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> Host: xxx </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> Content-Type: application/soap+xml; charset=utf-8 </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> Content-Length: xxx </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> ... (省略前述的 SOAP 消息体) </div></td> </tr> </tbody> </table></code> 
<div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 </div></pre> <p>最后，谈谈经常和 
SOAP 放在一起谈论的 WSDL，Web Service Description Language。</p> <p>WSDL 用于描述一个 Web Service，说白了，就是用来说明某个 
Web 服务该怎样使用，有怎样的接口方法，支持怎样的参数，会有怎样的返回。由于支持 SOAP 的服务端接口是经常使用 WSDL 来描述，因此我们才看到它们总被放在一起讨论，于是在这种情况下，<strong>WSDL 
常常被形容成 SOAP 服务的使用说明书</strong>，但是请注意，本质上它们之间不存在依赖关系。</p> <p><strong>这种将服务和服务的描述解耦开设计的方式非常普遍</strong>，希望你可以去类比和联想。在软件的世界里，我们经常谈论这个“描述”的行为，以及描述者和被描述者。比如元属性描述数据，方法签名描述方法，类描述对象等等。</p> 
<h2>REST</h2> <p>现在，我们再来看 REST 的做法。<strong>REST 的核心要素包括资源、表现层和状态转换这三个部分。</strong>我们把前面客户端发送请求的过程使用 
REST 风格再来实现一遍，你将看到这三个要点是怎样体现出来的：</p> <h3>1. 协议</h3> <p>我们将使用 HTTP 协议，在加密的情况下，协议是 HTTPS，但这对我们的实现来说没有什么区别。</p> 
<h3>2. URL</h3> <p>通常来说，这个 URL 要包括域名、版本号以及实体名称，而这个 URL 整体，代表了 REST 中的一类或一项“资源”。比如说：</p> <pre 
style="position: relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> https://xxx/v1/books </div></td> </tr> </tbody> </table></code> 
<div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 </div></pre> <p>请注意其中的实体名称，它往往是一个单纯的名词，并且以复数形式出现。</p> 
<p>这里提到了 URL，我想给经常混用的 URL、URI 做个简要的说明：URL 指的是 Uniform Resource Locator，URI 指的是 Uniform Resource 
Identifier，前者是统一资源定位符，后者是统一资源标识符。<strong>Identifier 可以有多种形式，而 locator 只是其中一种，因此 URI 更宽泛，URL 
只是 URI 的其中一种形式</strong>。</p> <p>当我们提到一个完整的地址，例如 <a href="https://www.google.com">https://www.google.com</a>， 
它就是 URL，因为它可以被“定位”，它当然也是 URI；但是如果我们只提到上面地址的一个片段，例如 www.google.com，那么由于缺少了具体协议，我们无法完成完整的定位，因此这样的东西只能被叫做一个标识符，故而只能算 
URI，而非 URL。</p> <h3>3. 方法</h3> <p>HTTP 的方法反映了这个接口上将执行的行为，如果用自然语言描述，它将是一个动词。比如说，给图书馆添加一本图书，那么这个行为将是“添加”。在以 
REST 风格主导的设计中，我们将使用这样的 HTTP 方法来代表增删改查（CRUD）的不同动作：</p> <p><img src="https://static001.geekbang.org/resource/image/2f/6c/2f80b22c23fb5382e359ece6082c2f6c.jpg" 
alt=""></p> <p>重点解释下表格的最后两列：</p> <ul> <li><strong>幂等性指的是对服务端的数据状态，执行多次操作是否和执行一次产生的结果一样。</strong>从表格中你可以看到，创建资源单位不是幂等的，执行多次就意味着创建了多个资源单位，而其它操作都是幂等的。通常来说，<strong>幂等操作是可以被重试而不产生副作用的。</strong></li> 
<li><strong>安全性指的是该操作是否对服务端的数据状态产生了影响。</strong>从表格中可以看到，获取资源的操作是安全的，不会对资源数据产生影响，但是其它操作都是不安全的。一定条件下，<strong>安全操作是可以被缓存的</strong>，而不安全的操作，必定对服务端的状态产生了影响，这体现了 
REST 的“状态转换”这一要素。</li> </ul> <p>全栈系统的设计和优化都需要紧密围绕幂等性和安全性进行，这是两个非常重要的概念，在我们后续的学习中，你还会反复见到它们，并和它们打交道。</p> 
<p>你看，通过这样的办法，就把 HTTP 的方法和实际对资源的操作行为绑定起来了。当然，还有一些其它方法，比较常见的有：</p> <ul> <li>PATCH：和 PUT 类似，也用于资源更新，但支持的是资源单位的部分更新，并且在资源不存在的时候，能够自动创建资源，这个方法实际使用比较少。</li> 
<li>HEAD：这个方法只返回资源的头部，避免了资源本身获取和传输的开销。这种方法很有用，经常用来检查资源是否存在，以及有无修改。</li> <li>OPTIONS：这个方法常用来返回服务器对于指定资源所支持的方法列表。</li> 
</ul> <h3>4. 正文</h3> <p>POST 和 PUT 请求都是有 HTTP 正文的，正文的类型和 Content-Type 的选取有关，比如 JSON 就是最典型的一种格式。请不要轻视这里的 
Content-Type，从本质上说，它代表了资源的表现形式，从而体现了 REST 定义中的“表现层”这一要素。</p> <p>最后，回到我们实际的图书馆添加图书的问题。SOAP 添加一本书的消息，用 
REST 风格的 POST 请求实现就会变成这样：</p> <pre style="position: relative;"><code> <table class="hljs-ln"> 
<tbody> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> POST /v1/books HTTP/1.1 </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> HOST: ... </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> Content-Type: application/json </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="5"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
{ </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> "name": "...", </div></td> </tr> <tr> 
<td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="7"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> "author": "...", </div></td> </tr> <tr> 
<td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="8"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> ... </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="9"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> } </div></td> </tr> </tbody> </table></code> <div class="richcontent-pre-copy"> 
<span class="iconfont"></span>复制代码 </div></pre> <h2>风格之争</h2> <p>看到这儿，你应该已经感受到了，SOAP 和 REST 
代表了两种迥异的风格。在我们取舍技术的时候，如果没有给出具体场景和限制，我们往往是很难讲出谁更“好”，而是需要进行比较，权衡利弊的。</p> <p>SOAP 明显是更“成熟”的那一个。它在数据传输的协议层面做了更多的工作，藉由 
XML schema，它具备更严格的检查和校验，配合 WSDL，在真正发送请求前，几乎就对所有远程接口事无巨细的问题有了答案。但是，它的复杂度令人望而生畏，也是它最受人诟病的地方。</p> 
<p>REST 则相反，新接口的学习成本很低，只需要知道资源名称，根据我们熟知的规约，就可以创建出 CRUD 的请求来。但是直到真正发送请求去测试为止，并没有办法百分百确定远程接口的调用是否能工作，或者说，并不知道接口定义上是否有不规范、不合常规的坑在里面。</p> 
<p>对于互联网来说，SOAP 已经是一项“古老”的技术了，晚辈 REST 似乎更切合互联网的潮流。在大多数情况下，REST 要易用和流行得多，于是很多人都不喜欢繁琐的 SOAP 协议。<strong>技术的发展总是有这样的规律，一开始无论问题还是办法都很简单，可是随着需求的进一步增加，解决的方法也缓慢演化，如 
SOAP 一般强大而复杂，直到某一天突然掉到谷底，如 REST 一般返璞归真。</strong></p> <p>但是别忘了，有利必有弊。首先，正是因为 REST 只是一个缺乏限制的风格，而非一个严谨的规范，有太多不明确、不一致的实现导致的问题，这些问题轻者给接口调用者带来困惑，重者导致接口调用错误，甚至服务端数据错误。</p> 
<p>其次，REST 通过 HTTP 方法实现本身，也受到了 HTTP 方法的局限性制约。比如最常见的 GET 请求，有时需要一个复杂的查询条件集合，因此参数需要结构化，而 GET 
只支持一串键值对组合的参数传递，无法适应业务需要。对于这样的问题，有一些 workaround，比如使用 POST 消息体来传递查询条件的结构体，但那已经偏离了 REST 的最佳实践，丢失了 
GET 本身的优势，也带来了实现不一致等一系列问题。</p> <p>最后，REST 还存在的一个更本质的问题，资源是它的核心概念，这原本带来了抽象和简洁的优势，但如今也成为了它的桎梏。或者说，前面反复提到的增删改查是它最拿手的本事，可是互联网的需求是千变万化的，远不只有简单的增删改查。有时需要一个复杂的多步操作，有时则需要一个异步事务（需要回调或者二次查询等等方式来实现），这些都没有一个完美统一的 
REST 风格的解决方案。即便实现出来了，也可谓五花八门，同时失去了以往我们所熟知的 REST 的简洁优势。</p> <p><strong>互联网总在变复杂，但矛盾的是，人们却希望互联网上的交互会不断变简单。</strong>于是这引发了 
REST 的流行，可即便 REST 再流行，依旧有它不适合的场景；SOAP 虽古老，依然有它的用武之地。</p> <p>对于全栈工程师或者期待修炼全栈技能的你我来说，trade-off 
是永恒的话题。另外，除了 SOAP 和 REST，其实我们还有其它选择。我将在下一讲，结合实例具体介绍如何选择技术，并设计和实现远程接口。</p> <h2>总结思考</h2> <p>今天我们认识并学习了 
SOAP 和 REST 这样两种截然不同的风格，前者工整、严谨和细致，后者自由、灵活和简约。两道思考题如下：</p> <ul> <li>在做技术比较的时候，文中已经简单介绍了 REST 
和 SOAP 的优劣，你觉得，它们各自适合怎样的业务场景呢？</li> <li>有位程序员朋友在应用 RESTful 风格设计用户管理系统的接口时，“删除单个用户”功能的 URL 举例如下，你觉得有哪些问题？</li> 
</ul> <pre style="position: relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> http://xxx/deleteUser?userName=James </div></td> </tr> </tbody> 
</table></code> <div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 </div></pre> 
<p>今天的内容就到这里，希望你已经享受到了技术学习的快乐，如果你还有余力，请继续学习下面的选修课堂和扩展阅读。最后，对于上面的问题，或者你对今天的学习有什么感受，欢迎在留言区和我讨论！</p> 
<h2>选修课堂：动手调用 RESTful API</h2> <p>学习全栈怎么能不动手实践呢，现在就让我们开始吧。有一些在线工具，预置了 REST 风格的接口服务，我们可以使用命令行去指定不同的 
HTTP 方法，发送一些不同的 HTTP 请求，观察返回，通过实际的练习，相信你能够更好地理解 REST。这样的工具有很多，你可以自行搜索，也可以直接选择 <a href="https://reqres.in/">REQ | RES</a>：</p> 
<p><img src="https://static001.geekbang.org/resource/image/2d/b8/2d216d1910348056c1631d46f0f099b8.png" 
alt=""></p> <p>你可以使用网站上预置的请求，但我更推荐你自己写 curl 命令。比如发送一个 GET 请求，列出所有用户：</p> <pre style="position: 
relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
curl -v https://reqres.in/api/users | jq </div></td> </tr> </tbody> </table></code> <div class="richcontent-pre-copy"> 
<span class="iconfont"></span>复制代码 </div></pre> <p>其中的 -v 参数可以帮助输出详尽的信息，包括请求和响应的完整信息，当然也可以不用；后面的 
“| jq” 是为了让返回的 JSON 数据展示更美观，当然，你需要安装 <a href="https://stedolan.github.io/jq/">jq</a>。如果你没有安装，不使用 
jq 管道也是完全可以的。</p> <p>再比如，使用 POST 请求创建一个用户：</p> <pre style="position: relative;"><code> <table 
class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" 
data-line-number="1"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> curl 
-X POST -d ''{"name":"xxx", "job":"yyy"}'' -H "Content-Type: application/json" https://reqres.in/api/users 
| jq </div></td> </tr> </tbody> </table></code> <div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 
</div></pre> <p>这里使用了 -x 参数指定其为 POST 请求，之后的 Content-Type 是必不可少的，而 JSON 形式的 user 对象则通过参数 -d 
传了过去。</p> <p>最后得到了这样的结果：</p> <pre style="position: relative;"><code> <table class="hljs-ln"> 
<tbody> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> ... (省略请求统计信息) </div></td> </tr> <tr> 
<td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> "name": "xxx", </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> "job": "yyy", </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> "id": "585", </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> "createdAt": "2019-07-20T22:19:49.825Z" </div></td> </tr> <tr> <td 
class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="7"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> } </div></td> </tr> </tbody> </table></code> 
<div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 </div></pre> <h2>扩展阅读</h2> 
<ul> <li>W3Cschool 上的 <a href="https://www.w3cschool.cn/soap/?">SOAP 教程</a>，如果你对 SOAP 不够熟悉，那么你可以参考这个简明扼要的教程。</li> 
<li>【基础】<a href="https://www.restapitutorial.com/">REST API Tutorial</a>，REST 的教程很多，这是我觉得非常简洁和清晰的一个。</li> 
<li>ProgrammableWeb 上的 <a href="https://www.programmableweb.com/apis/directory">Web API 列表</a>，排名最靠前的 
10 个 API，其中有 9 个的架构风格都是 REST，这也从侧面应证了 REST 在互联网的趋势。</li> <li><a href="https://www.infoq.cn/article/rest-soap-when-to-use-each">REST 
和 SOAP：谁更好，或者都好？</a>这是一篇内容精悍的译文，分别介绍了适合 REST 和 SOAP 的场景。</li> </ul> <p><img src="https://static001.geekbang.org/resource/image/11/8b/1181246bbd51ce348d5729696d1dc28b.jpg" 
alt="unpreview"></p>', '', 'book', 0, 'full_html', 'zh-hans', 46, 46) 
 {executed in 0 msec}
2020-11-19 11:27:45.268 INFO  jdbc.sqltiming Line:373 - select nodefiledd0_.nid as nid1_9_, nodefiledd0_.changed as changed2_9_, nodefiledd0_.created 
as created3_9_, nodefiledd0_.default_langcode as default_4_9_, nodefiledd0_.langcode as langcode5_9_, 
nodefiledd0_.promote as promote6_9_, nodefiledd0_.revision_translation_affected as revision7_9_, 
nodefiledd0_.status as status8_9_, nodefiledd0_.sticky as sticky9_9_, nodefiledd0_.title as 
title10_9_, nodefiledd0_.type as type11_9_, nodefiledd0_.uid as uid12_9_, nodefiledd0_.vid 
as vid13_9_ from node_field_data nodefiledd0_ where nodefiledd0_.nid=46 
 {executed in 0 msec}
2020-11-19 11:27:45.269 INFO  jdbc.resultsettable Line:610 - 
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|-----|----|----|
|nid |changed |created |default_langcode |langcode |promote |revision_translation_affected |status |sticky |title |type |uid |vid |
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|-----|----|----|
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|-----|----|----|

2020-11-19 11:27:45.269 INFO  jdbc.sqltiming Line:373 - select nodefieldr0_.nid as nid1_10_0_, nodefieldr0_.changed as changed2_10_0_, nodefieldr0_.created 
as created3_10_0_, nodefieldr0_.default_langcode as default_4_10_0_, nodefieldr0_.langcode 
as langcode5_10_0_, nodefieldr0_.promote as promote6_10_0_, nodefieldr0_.revision_translation_affected 
as revision7_10_0_, nodefieldr0_.status as status8_10_0_, nodefieldr0_.sticky as sticky9_10_0_, 
nodefieldr0_.title as title10_10_0_, nodefieldr0_.uid as uid11_10_0_, nodefieldr0_.vid as vid12_10_0_ 
from node_field_revision nodefieldr0_ where nodefieldr0_.nid=46 
 {executed in 0 msec}
2020-11-19 11:27:45.270 INFO  jdbc.resultsettable Line:610 - 
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|----|----|
|nid |changed |created |default_langcode |langcode |promote |revision_translation_affected |status |sticky |title |uid |vid |
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|----|----|
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|----|----|

2020-11-19 11:27:45.271 INFO  jdbc.sqltiming Line:373 - insert into node_field_revision (changed, created, default_langcode, langcode, promote, revision_translation_affected, 
status, sticky, title, uid, vid, nid) values (1605756465, 1605756465, 1, 'zh-hans', 0, 1, 1, 
0, '04丨工整与自由的风格之争：SOAP和REST', 1, 46, 46) 
 {executed in 0 msec}
2020-11-19 11:27:45.274 INFO  jdbc.sqltiming Line:373 - select nodefiledd0_.nid as nid1_9_0_, nodefiledd0_.changed as changed2_9_0_, nodefiledd0_.created 
as created3_9_0_, nodefiledd0_.default_langcode as default_4_9_0_, nodefiledd0_.langcode as 
langcode5_9_0_, nodefiledd0_.promote as promote6_9_0_, nodefiledd0_.revision_translation_affected 
as revision7_9_0_, nodefiledd0_.status as status8_9_0_, nodefiledd0_.sticky as sticky9_9_0_, 
nodefiledd0_.title as title10_9_0_, nodefiledd0_.type as type11_9_0_, nodefiledd0_.uid as uid12_9_0_, 
nodefiledd0_.vid as vid13_9_0_ from node_field_data nodefiledd0_ where nodefiledd0_.nid=46 
 {executed in 1 msec}
2020-11-19 11:27:45.274 INFO  jdbc.resultsettable Line:610 - 
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|-----|----|----|
|nid |changed |created |default_langcode |langcode |promote |revision_translation_affected |status |sticky |title |type |uid |vid |
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|-----|----|----|
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|-----|----|----|

2020-11-19 11:27:45.276 INFO  jdbc.sqltiming Line:373 - insert into node_field_data (changed, created, default_langcode, langcode, promote, revision_translation_affected, 
status, sticky, title, type, uid, vid, nid) values (1605756465, 1605756465, 1, 'zh-hans', 0, 
1, 1, 0, '04丨工整与自由的风格之争：SOAP和REST', 'book', 1, 46, 46) 
 {executed in 0 msec}
2020-11-19 11:27:45.278 INFO  jdbc.sqltiming Line:373 - select bookfieldm0_.entity_id as entity_i1_7_, bookfieldm0_.bundle as bundle2_7_, bookfieldm0_.delta 
as delta3_7_, bookfieldm0_.langcode as langcode4_7_, bookfieldm0_.field_media_value as field_me5_7_, 
bookfieldm0_.revision_id as revision6_7_ from node__field_media bookfieldm0_ where bookfieldm0_.entity_id=46 
 {executed in 0 msec}
2020-11-19 11:27:45.279 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------------|------------|
|entity_id |bundle |delta |langcode |field_media_value |revision_id |
|----------|-------|------|---------|------------------|------------|
|----------|-------|------|---------|------------------|------------|

2020-11-19 11:27:45.279 INFO  jdbc.sqltiming Line:373 - select bookfieldm0_.entity_id as entity_i1_7_0_, bookfieldm0_.bundle as bundle2_7_0_, bookfieldm0_.delta 
as delta3_7_0_, bookfieldm0_.langcode as langcode4_7_0_, bookfieldm0_.field_media_value as 
field_me5_7_0_, bookfieldm0_.revision_id as revision6_7_0_ from node__field_media bookfieldm0_ 
where bookfieldm0_.entity_id=46 
 {executed in 0 msec}
2020-11-19 11:27:45.280 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------------|------------|
|entity_id |bundle |delta |langcode |field_media_value |revision_id |
|----------|-------|------|---------|------------------|------------|
|----------|-------|------|---------|------------------|------------|

2020-11-19 11:27:45.281 INFO  jdbc.sqltiming Line:373 - insert into node__field_media (bundle, delta, langcode, field_media_value, revision_id, entity_id) 
values ('book', 0, 'zh-hans', 'https://qdall01.baidupcs.com/file/b4641218b1d4da995e0b8df7194e29c5?bkt=en-2bd419aa17f4904fea920d0be4c2555d748051d9a1094f3fe93ece139a58a6d1f636a6c5d8aefe2a&fid=3757516097-778750-923729005326983&time=1605756463&sign=FDTAXUGERLQlBHSKfWqir-DCb740ccc5511e5e8fedcff06b081203-wksDe2kZ5oYmvWkHpZbGB8u%2Bfhc%3D&to=92&size=16190260&sta_dx=16190260&sta_cs=3966&sta_ft=m4a&sta_ct=7&sta_mt=0&fm2=MH%2CYangquan%2CAnywhere%2C%2Cshanghai%2Cct&ctime=1569224646&mtime=1605754778&resv0=-1&resv1=0&resv2=rlim&resv3=2&resv4=16190260&vuk=3757516097&iv=0&htype=&randtype=em&newver=1&newfm=1&secfm=1&flow_ver=3&pkey=en-eff0561a52feb98402d3b6b8ea60c253e519a27026ea166629be5c939b33bae9bf3ef0cf4dd37cf4&sl=76480590&expires=8h&rt=pr&r=327275936&mlogid=7502358558202736406&vbdid=2247232042&fin=04%E4%B8%A8%E5%B7%A5%E6%95%B4%E4%B8%8E%E8%87%AA%E7%94%B1%E7%9A%84%E9%A3%8E%E6%A0%BC%E4%B9%8B%E4%BA%89%EF%BC%9ASOAP%E5%92%8CREST.m4a&bflag=92,34-92&rtype=1&dp-logid=7502358558202736406&dp-callid=0.1.1&hps=1&tsl=80&csl=80&fsl=-1&csign=yVzLQPCt4DblfMLqd2BCjd2RnqQ%3D&so=0&ut=6&uter=0&serv=0&uc=1458616558&ti=51702cd94a4865eeaf5bd8717da619af4a749368bc18404c&hflag=30&adg=c_15d187590626c675056c89c8026cfc17&reqlabel=778750_l_1bf9445f27094ab64c9f1cb0bdf7ccfa_-1_dd2c452b8e51a0c74130d7cf32c48a2d&ibp=1&by=themis&filename=04%E4%B8%A8%E5%B7%A5%E6%95%B4%E4%B8%8E%E8%87%AA%E7%94%B1%E7%9A%84%E9%A3%8E%E6%A0%BC%E4%B9%8B%E4%BA%89%EF%BC%9ASOAP%E5%92%8CREST.m4a', 
46, 46) 
 {executed in 0 msec}
2020-11-19 11:27:45.285 INFO  jdbc.sqltiming Line:373 - select nodefieldm0_.entity_id as entity_i1_16_0_, nodefieldm0_.bundle as bundle2_16_0_, nodefieldm0_.delta 
as delta3_16_0_, nodefieldm0_.langcode as langcode4_16_0_, nodefieldm0_.field_media_value as 
field_me5_16_0_, nodefieldm0_.revision_id as revision6_16_0_ from node_revision__field_media 
nodefieldm0_ where nodefieldm0_.entity_id=46 
 {executed in 0 msec}
2020-11-19 11:27:45.285 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------------|------------|
|entity_id |bundle |delta |langcode |field_media_value |revision_id |
|----------|-------|------|---------|------------------|------------|
|----------|-------|------|---------|------------------|------------|

2020-11-19 11:27:45.298 INFO  jdbc.sqltiming Line:373 - insert into node_revision__field_media (bundle, delta, langcode, field_media_value, revision_id, 
entity_id) values ('book', 0, 'zh-hans', 'https://qdall01.baidupcs.com/file/b4641218b1d4da995e0b8df7194e29c5?bkt=en-2bd419aa17f4904fea920d0be4c2555d748051d9a1094f3fe93ece139a58a6d1f636a6c5d8aefe2a&fid=3757516097-778750-923729005326983&time=1605756463&sign=FDTAXUGERLQlBHSKfWqir-DCb740ccc5511e5e8fedcff06b081203-wksDe2kZ5oYmvWkHpZbGB8u%2Bfhc%3D&to=92&size=16190260&sta_dx=16190260&sta_cs=3966&sta_ft=m4a&sta_ct=7&sta_mt=0&fm2=MH%2CYangquan%2CAnywhere%2C%2Cshanghai%2Cct&ctime=1569224646&mtime=1605754778&resv0=-1&resv1=0&resv2=rlim&resv3=2&resv4=16190260&vuk=3757516097&iv=0&htype=&randtype=em&newver=1&newfm=1&secfm=1&flow_ver=3&pkey=en-eff0561a52feb98402d3b6b8ea60c253e519a27026ea166629be5c939b33bae9bf3ef0cf4dd37cf4&sl=76480590&expires=8h&rt=pr&r=327275936&mlogid=7502358558202736406&vbdid=2247232042&fin=04%E4%B8%A8%E5%B7%A5%E6%95%B4%E4%B8%8E%E8%87%AA%E7%94%B1%E7%9A%84%E9%A3%8E%E6%A0%BC%E4%B9%8B%E4%BA%89%EF%BC%9ASOAP%E5%92%8CREST.m4a&bflag=92,34-92&rtype=1&dp-logid=7502358558202736406&dp-callid=0.1.1&hps=1&tsl=80&csl=80&fsl=-1&csign=yVzLQPCt4DblfMLqd2BCjd2RnqQ%3D&so=0&ut=6&uter=0&serv=0&uc=1458616558&ti=51702cd94a4865eeaf5bd8717da619af4a749368bc18404c&hflag=30&adg=c_15d187590626c675056c89c8026cfc17&reqlabel=778750_l_1bf9445f27094ab64c9f1cb0bdf7ccfa_-1_dd2c452b8e51a0c74130d7cf32c48a2d&ibp=1&by=themis&filename=04%E4%B8%A8%E5%B7%A5%E6%95%B4%E4%B8%8E%E8%87%AA%E7%94%B1%E7%9A%84%E9%A3%8E%E6%A0%BC%E4%B9%8B%E4%BA%89%EF%BC%9ASOAP%E5%92%8CREST.m4a', 
46, 46) 
 {executed in 11 msec}
2020-11-19 11:27:45.302 INFO  jdbc.sqltiming Line:373 - select bookfieldc0_.entity_id as entity_i1_4_, bookfieldc0_.bundle as bundle2_4_, bookfieldc0_.field_comment_value 
as field_co3_4_, bookfieldc0_.delta as delta4_4_, bookfieldc0_.field_comment_format as field_co5_4_, 
bookfieldc0_.langcode as langcode6_4_, bookfieldc0_.revision_id as revision7_4_ from node__field_comment 
bookfieldc0_ where bookfieldc0_.entity_id=46 
 {executed in 0 msec}
2020-11-19 11:27:45.303 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|--------------------|------|---------------------|---------|------------|
|entity_id |bundle |field_comment_value |delta |field_comment_format |langcode |revision_id |
|----------|-------|--------------------|------|---------------------|---------|------------|
|----------|-------|--------------------|------|---------------------|---------|------------|

2020-11-19 11:27:45.329 INFO  jdbc.sqltiming Line:373 - select bookfieldc0_.entity_id as entity_i1_4_0_, bookfieldc0_.bundle as bundle2_4_0_, bookfieldc0_.field_comment_value 
as field_co3_4_0_, bookfieldc0_.delta as delta4_4_0_, bookfieldc0_.field_comment_format as 
field_co5_4_0_, bookfieldc0_.langcode as langcode6_4_0_, bookfieldc0_.revision_id as revision7_4_0_ 
from node__field_comment bookfieldc0_ where bookfieldc0_.entity_id=46 
 {executed in 26 msec}
2020-11-19 11:27:45.330 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|--------------------|------|---------------------|---------|------------|
|entity_id |bundle |field_comment_value |delta |field_comment_format |langcode |revision_id |
|----------|-------|--------------------|------|---------------------|---------|------------|
|----------|-------|--------------------|------|---------------------|---------|------------|

2020-11-19 11:27:45.334 INFO  jdbc.sqltiming Line:373 - insert into node__field_comment (bundle, field_comment_value, delta, field_comment_format, 
langcode, revision_id, entity_id) values ('book', '<li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/0f/71/ed/45ab9f03.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>八哥</span> <span class="_1bkbsnjg_0">置顶</span> </div> <div class="_1H1Z49Dr_0"> 2019-09-18 
</div> </div> <!----> </div> <div> <div class="_3M6kV3zb_0"> 早期后台接口之间调用Web Service时用的SOAP协议多，比如订单和供应商之间接口调用等。后续RESTful风格更轻量级，开发者工程师更愿意使用。配合api文档，解决了联调过程中，接口没有定义规范等问题。 
<br> <br>userName不是唯一的，实际无法完成删除，delete是一个删除操作，不应该暴露在URL里面。 <br>应该是:/users/xxx。xxx是userId，然后请求的method设置为：DELETE。 
<br> <br> <br> </div> <div class="_2r3UB1GX_0"> <span>展开</span><i class="iconfont"></i> </div> 
<div class="_2xNIY4NG_0"> <p class="_33BLbmw4_0">作者回复: 感谢回答！回答正确。<br>第一个问题属于开放性的，当然，也有很多可供比较的其它方面。<br>对于删除用户的接口设计，回答得非常全面：<br>（1）动作要以 
HTTP 方法体现出来，而不是放在 URL 里面；<br>（2）要使用 userId，而不是 name，userId 才是唯一的。<br>（3）资源使用复数“users”，完全正确。</p> 
</div> <div class="_1w8H0ktn_0 _2A421P4G_0"> <div class="_2jsFl-X0_0"> <i class="iconfont"></i> 
<span></span> </div> <div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class="">3</span> 
</div> <!----> </div> </div> </div></li> <li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/14/34/df/64e3d533.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>leslie</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2019-09-18 </div> </div> <!----> 
</div> <div> <div class="_3M6kV3zb_0"> RESTFUL设计删除单个用户"http://xxx/deleteUser?userName=James"的问题如下：1)get/put/post/delete不是应当接完后再加/再去跟具体的么？至少应当改成"http://xxx/delete/userName/James" 
<br>2)其实这种具体的值不应当直接放到这里：我记得当年自己做开发的时候就不会允许暴露账号信息的 <br>其实那里直接写到"http://xxx/delete/userName"样子就不会再在HTTP里面看到了；当年经典的SQL注入不就是全部明文写在里面了么。 
<br>&nbsp;&nbsp;&nbsp;&nbsp;REST架构和风格这块我在开课时曾说过希望能改善自己Coding的问题：按照老师REST那块的Coding演示：其实username=James应当放到Content-Type: 
application/json里面并且写出username:James;HTTP部分只到"http://xxx/delete/username"这样就OK了；翻阅了一些网站现在的写法，发现大多类似；具体答案：等待老师的揭晓。 
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;谢谢老师的分享：期待下节课的内容。 <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</div> <div class="_2r3UB1GX_0"> <span>展开</span><i class="iconfont"></i> </div> <div class="_2xNIY4NG_0"> 
<p class="_33BLbmw4_0">作者回复: 感谢回答！<br>严格来说，行为应当放到 HTTP 方法中去，而不是 URL 中。还有使用 userName 本身的问题，你可以看一下另一位朋友的回答。当然，现在不少接口其实并不是很符合 
REST 风格的，方法放在 URL 中就是其中一个方面。至于不允许暴露账号信息是特殊的业务需要，能想到这一点非常好，但它并非 REST 的要求。 </p> </div> <div class="_1w8H0ktn_0 
_2A421P4G_0"> <div class="_2jsFl-X0_0"> <i class="iconfont"></i> <span></span> </div> <div 
class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class="">2</span> </div> <!----> </div> 
</div> </div></li> <li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/13/db/26/54f2c164.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>靠人品去赢</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2019-09-20 </div> </div> <!----> 
</div> <div> <div class="_3M6kV3zb_0"> （1）两种都用过，之前在银行类使用过webservice，就是很典型的，就是约定好字段一个不多一个不少按照WSDL上来。后面公司用的是Rest，看文档反正你要的我都给你了，需求变更也不怕反正能满足你就是了。 
<br>（2）参数选择不对，命名不规范，用户名称不是唯一的很可能重复，即使是唯一的，博大精深的汉字也能教育你，可能某个系统编码库不全，一些少见的字造成不必要的麻烦，什么飞龙在天的䶮可能结果是不一样的。还有接口命名，先是模块再是功能，如users/deleteUserById?id=XXX。看过一本书给的建议命名是不要怕长，总比看上去提示太少一脸懵逼强。 
<br> <br>老师对命名有没有理解，之前没注意过现在虽然有意识的修改，争取见词知意，但还是有些没做好，像前一阵包名有大写字母和下划线被人吐槽看着蛋疼。 </div> <div class="_2r3UB1GX_0"> 
<span>展开</span><i class="iconfont"></i> </div> <div class="_2xNIY4NG_0"> <p class="_33BLbmw4_0">作者回复: 
接口命名方面，没有统一的标准，但你可以看看第五讲扩展阅读的 AnyAPI，看看其他人是怎么做的，大多数接口服务的命名风格是一致的。</p> </div> <div class="_1w8H0ktn_0 
_2A421P4G_0"> <div class="_2jsFl-X0_0"> <i class="iconfont"></i> <span></span> </div> <div 
class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class="">1</span> </div> <!----> </div> 
</div> </div></li> <li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/14/66/c6/d779dfb6.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>松松</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2019-09-18 </div> </div> <!----> </div> 
<div> <div class="_3M6kV3zb_0"> 米用过，但如果米理解错的话，RESTful风格是用URI标识要操作的资源，用HTTP请求行为表示要对资源执行的动作，所以delete这个“行为”不应该出现在URI里吧，总不能get这个用户和del这个用户操作的还是不同的资源？ 
</div> <div class="_2r3UB1GX_0"> <span>展开</span><i class="iconfont"></i> </div> <div class="_2xNIY4NG_0"> 
<p class="_33BLbmw4_0">作者回复: 对，行为不能出现在 URI 里面，你可以看一下另一位朋友 的回答。</p> </div> <div class="_1w8H0ktn_0 
_2A421P4G_0"> <div class="_2jsFl-X0_0"> <i class="iconfont"></i> <span></span> </div> <div 
class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class="">1</span> </div> <!----> </div> 
</div> </div></li> <li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/12/51/cd/d6fe851f.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>Gopher</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2019-09-20 </div> </div> <!----> 
</div> <div> <div class="_3M6kV3zb_0"> RESTful 风格的API：（系统接口：正交化，统一化/标准化，结构化） <br>1.正交化资源（名词）和动作（动词） 
<br>2.资源的描述要统一（URI），先模块/位置，再资源/标识符，最后可以附加简单的参数（?x="y"#label）。复杂的参数应当结构化，通过Header传递 <br>3.动作要标准化（AEMR等有限集合），个性化需求可以通过API查询接口获取/协同 
<br> <br>函数风格的API：（模块接口：正交化，结构化，模型化） <br>1.动词作为函数名，名词作为参数（正交化） <br>2.常见类型的参数（数量也不能太多）可以简单罗列，复杂的参数应当结构化为对象来传递，参数太复杂或数量太多时就需要考虑拆分函数（结构化） 
<br>3.函数存在于模块里面，它的目的是实现DSL（模型化），自然不能标准化。但它操作的对象相对单纯，因此函数语义（主要通过通过函数名称表达）相对更加明确，可以实现言简意赅 </div> 
<div class="_2r3UB1GX_0"> <span>展开</span><i class="iconfont"></i> </div> <div class="_2xNIY4NG_0"> 
<p class="_33BLbmw4_0">作者回复: 👍</p> </div> <div class="_1w8H0ktn_0 _2A421P4G_0"> <div class="_2jsFl-X0_0"> 
<i class="iconfont"></i> <span></span> </div> <div class="_2P4B1Hdm_0"> <i class="iconfont"></i> 
<span class=""></span> </div> <!----> </div> </div> </div></li> <li class="reJj6Thl_0"><img 
src="https://static001.geekbang.org/account/avatar/00/18/43/36/3201f4a4.jpg" class="_2273kGdT_0"> 
<div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> <span>OnFire</span> 
<!----> </div> <div class="_1H1Z49Dr_0"> 2019-09-19 </div> </div> <!----> </div> <div> <div 
class="_3M6kV3zb_0"> 目前外包在银行做供应链业务，soap与restful混用，新接口基本都不用soap了，像soap这种结构相对复杂的方案会逐渐被淘汰吧，restful更简单明了 
</div> <div class="_2r3UB1GX_0"> <span>展开</span><i class="iconfont"></i> </div> <!----> <div 
class="_1w8H0ktn_0 _2A421P4G_0"> <div class="_2jsFl-X0_0"> <i class="iconfont"></i> <span></span> 
</div> <div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class=""></span> </div> <!----> 
</div> </div> </div></li> <li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/10/df/63/cf317827.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>anginiit</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2019-09-19 </div> </div> <!----> 
</div> <div> <div class="_3M6kV3zb_0 _3D2NkqD6_0"> 之前一个项目 ws和rest都有用到，rest是自己项目前后台请求使用，ws是请求第三方的接口使用。只是停留在使用阶段 
还没有深入的了解过，借着这一课 认真学习下。 </div> <!----> <!----> <div class="_1w8H0ktn_0 _2A421P4G_0"> <div class="_2jsFl-X0_0"> 
<i class="iconfont"></i> <span></span> </div> <div class="_2P4B1Hdm_0"> <i class="iconfont"></i> 
<span class=""></span> </div> <!----> </div> </div> </div></li> <li class="reJj6Thl_0"><img 
src="https://static001.geekbang.org/account/avatar/00/0f/4d/fd/0aa0e39f.jpg" class="_2273kGdT_0"> 
<div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> <span>许童童</span> 
<!----> </div> <div class="_1H1Z49Dr_0"> 2019-09-18 </div> </div> <!----> </div> <div> <div 
class="_3M6kV3zb_0 _3D2NkqD6_0"> 项目中用的基本上都是REST，我觉得用SOAP的只有以前遗留下来的代码了。 </div> <!----> <div 
class="_2xNIY4NG_0"> <p class="_33BLbmw4_0">作者回复: SOAP 还是常有使用的，特别是一些电信软件、传统软件等领域。当然，确实 REST 
更常见。</p> </div> <div class="_1w8H0ktn_0 _2A421P4G_0"> <div class="_2jsFl-X0_0"> <i class="iconfont"></i> 
<span></span> </div> <div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class=""></span> 
</div> <!----> </div> </div> </div></li> <li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/18/28/d9/78dfd983.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>sky</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2019-09-18 </div> </div> <!----> 
</div> <div> <div class="_3M6kV3zb_0"> 项目中基本上用的都是restful。soap用着别扭 </div> <div class="_2r3UB1GX_0"> 
<span>展开</span><i class="iconfont"></i> </div> <div class="_2xNIY4NG_0"> <p class="_33BLbmw4_0">作者回复: 
为什么别扭？:)</p> </div> <div class="_1w8H0ktn_0 _2A421P4G_0"> <div class="_2jsFl-X0_0"> <i class="iconfont"></i> 
<span>1</span> </div> <div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class=""></span> 
</div> <!----> </div> </div> </div></li>', 0, 'full_html', 'zh-hans', 46, 46) 
 {executed in 2 msec}
2020-11-19 11:27:45.338 INFO  jdbc.sqltiming Line:373 - select nodefieldc0_.entity_id as entity_i1_13_0_, nodefieldc0_.bundle as bundle2_13_0_, nodefieldc0_.field_comment_value 
as field_co3_13_0_, nodefieldc0_.delta as delta4_13_0_, nodefieldc0_.field_comment_format as 
field_co5_13_0_, nodefieldc0_.langcode as langcode6_13_0_, nodefieldc0_.revision_id as revision7_13_0_ 
from node_revision__field_comment nodefieldc0_ where nodefieldc0_.entity_id=46 
 {executed in 0 msec}
2020-11-19 11:27:45.338 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|--------------------|------|---------------------|---------|------------|
|entity_id |bundle |field_comment_value |delta |field_comment_format |langcode |revision_id |
|----------|-------|--------------------|------|---------------------|---------|------------|
|----------|-------|--------------------|------|---------------------|---------|------------|

2020-11-19 11:27:45.343 INFO  jdbc.sqltiming Line:373 - insert into node_revision__field_comment (bundle, field_comment_value, delta, field_comment_format, 
langcode, revision_id, entity_id) values ('book', '<li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/0f/71/ed/45ab9f03.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>八哥</span> <span class="_1bkbsnjg_0">置顶</span> </div> <div class="_1H1Z49Dr_0"> 2019-09-18 
</div> </div> <!----> </div> <div> <div class="_3M6kV3zb_0"> 早期后台接口之间调用Web Service时用的SOAP协议多，比如订单和供应商之间接口调用等。后续RESTful风格更轻量级，开发者工程师更愿意使用。配合api文档，解决了联调过程中，接口没有定义规范等问题。 
<br> <br>userName不是唯一的，实际无法完成删除，delete是一个删除操作，不应该暴露在URL里面。 <br>应该是:/users/xxx。xxx是userId，然后请求的method设置为：DELETE。 
<br> <br> <br> </div> <div class="_2r3UB1GX_0"> <span>展开</span><i class="iconfont"></i> </div> 
<div class="_2xNIY4NG_0"> <p class="_33BLbmw4_0">作者回复: 感谢回答！回答正确。<br>第一个问题属于开放性的，当然，也有很多可供比较的其它方面。<br>对于删除用户的接口设计，回答得非常全面：<br>（1）动作要以 
HTTP 方法体现出来，而不是放在 URL 里面；<br>（2）要使用 userId，而不是 name，userId 才是唯一的。<br>（3）资源使用复数“users”，完全正确。</p> 
</div> <div class="_1w8H0ktn_0 _2A421P4G_0"> <div class="_2jsFl-X0_0"> <i class="iconfont"></i> 
<span></span> </div> <div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class="">3</span> 
</div> <!----> </div> </div> </div></li> <li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/14/34/df/64e3d533.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>leslie</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2019-09-18 </div> </div> <!----> 
</div> <div> <div class="_3M6kV3zb_0"> RESTFUL设计删除单个用户"http://xxx/deleteUser?userName=James"的问题如下：1)get/put/post/delete不是应当接完后再加/再去跟具体的么？至少应当改成"http://xxx/delete/userName/James" 
<br>2)其实这种具体的值不应当直接放到这里：我记得当年自己做开发的时候就不会允许暴露账号信息的 <br>其实那里直接写到"http://xxx/delete/userName"样子就不会再在HTTP里面看到了；当年经典的SQL注入不就是全部明文写在里面了么。 
<br>&nbsp;&nbsp;&nbsp;&nbsp;REST架构和风格这块我在开课时曾说过希望能改善自己Coding的问题：按照老师REST那块的Coding演示：其实username=James应当放到Content-Type: 
application/json里面并且写出username:James;HTTP部分只到"http://xxx/delete/username"这样就OK了；翻阅了一些网站现在的写法，发现大多类似；具体答案：等待老师的揭晓。 
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;谢谢老师的分享：期待下节课的内容。 <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</div> <div class="_2r3UB1GX_0"> <span>展开</span><i class="iconfont"></i> </div> <div class="_2xNIY4NG_0"> 
<p class="_33BLbmw4_0">作者回复: 感谢回答！<br>严格来说，行为应当放到 HTTP 方法中去，而不是 URL 中。还有使用 userName 本身的问题，你可以看一下另一位朋友的回答。当然，现在不少接口其实并不是很符合 
REST 风格的，方法放在 URL 中就是其中一个方面。至于不允许暴露账号信息是特殊的业务需要，能想到这一点非常好，但它并非 REST 的要求。 </p> </div> <div class="_1w8H0ktn_0 
_2A421P4G_0"> <div class="_2jsFl-X0_0"> <i class="iconfont"></i> <span></span> </div> <div 
class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class="">2</span> </div> <!----> </div> 
</div> </div></li> <li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/13/db/26/54f2c164.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>靠人品去赢</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2019-09-20 </div> </div> <!----> 
</div> <div> <div class="_3M6kV3zb_0"> （1）两种都用过，之前在银行类使用过webservice，就是很典型的，就是约定好字段一个不多一个不少按照WSDL上来。后面公司用的是Rest，看文档反正你要的我都给你了，需求变更也不怕反正能满足你就是了。 
<br>（2）参数选择不对，命名不规范，用户名称不是唯一的很可能重复，即使是唯一的，博大精深的汉字也能教育你，可能某个系统编码库不全，一些少见的字造成不必要的麻烦，什么飞龙在天的䶮可能结果是不一样的。还有接口命名，先是模块再是功能，如users/deleteUserById?id=XXX。看过一本书给的建议命名是不要怕长，总比看上去提示太少一脸懵逼强。 
<br> <br>老师对命名有没有理解，之前没注意过现在虽然有意识的修改，争取见词知意，但还是有些没做好，像前一阵包名有大写字母和下划线被人吐槽看着蛋疼。 </div> <div class="_2r3UB1GX_0"> 
<span>展开</span><i class="iconfont"></i> </div> <div class="_2xNIY4NG_0"> <p class="_33BLbmw4_0">作者回复: 
接口命名方面，没有统一的标准，但你可以看看第五讲扩展阅读的 AnyAPI，看看其他人是怎么做的，大多数接口服务的命名风格是一致的。</p> </div> <div class="_1w8H0ktn_0 
_2A421P4G_0"> <div class="_2jsFl-X0_0"> <i class="iconfont"></i> <span></span> </div> <div 
class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class="">1</span> </div> <!----> </div> 
</div> </div></li> <li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/14/66/c6/d779dfb6.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>松松</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2019-09-18 </div> </div> <!----> </div> 
<div> <div class="_3M6kV3zb_0"> 米用过，但如果米理解错的话，RESTful风格是用URI标识要操作的资源，用HTTP请求行为表示要对资源执行的动作，所以delete这个“行为”不应该出现在URI里吧，总不能get这个用户和del这个用户操作的还是不同的资源？ 
</div> <div class="_2r3UB1GX_0"> <span>展开</span><i class="iconfont"></i> </div> <div class="_2xNIY4NG_0"> 
<p class="_33BLbmw4_0">作者回复: 对，行为不能出现在 URI 里面，你可以看一下另一位朋友 的回答。</p> </div> <div class="_1w8H0ktn_0 
_2A421P4G_0"> <div class="_2jsFl-X0_0"> <i class="iconfont"></i> <span></span> </div> <div 
class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class="">1</span> </div> <!----> </div> 
</div> </div></li> <li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/12/51/cd/d6fe851f.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>Gopher</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2019-09-20 </div> </div> <!----> 
</div> <div> <div class="_3M6kV3zb_0"> RESTful 风格的API：（系统接口：正交化，统一化/标准化，结构化） <br>1.正交化资源（名词）和动作（动词） 
<br>2.资源的描述要统一（URI），先模块/位置，再资源/标识符，最后可以附加简单的参数（?x="y"#label）。复杂的参数应当结构化，通过Header传递 <br>3.动作要标准化（AEMR等有限集合），个性化需求可以通过API查询接口获取/协同 
<br> <br>函数风格的API：（模块接口：正交化，结构化，模型化） <br>1.动词作为函数名，名词作为参数（正交化） <br>2.常见类型的参数（数量也不能太多）可以简单罗列，复杂的参数应当结构化为对象来传递，参数太复杂或数量太多时就需要考虑拆分函数（结构化） 
<br>3.函数存在于模块里面，它的目的是实现DSL（模型化），自然不能标准化。但它操作的对象相对单纯，因此函数语义（主要通过通过函数名称表达）相对更加明确，可以实现言简意赅 </div> 
<div class="_2r3UB1GX_0"> <span>展开</span><i class="iconfont"></i> </div> <div class="_2xNIY4NG_0"> 
<p class="_33BLbmw4_0">作者回复: 👍</p> </div> <div class="_1w8H0ktn_0 _2A421P4G_0"> <div class="_2jsFl-X0_0"> 
<i class="iconfont"></i> <span></span> </div> <div class="_2P4B1Hdm_0"> <i class="iconfont"></i> 
<span class=""></span> </div> <!----> </div> </div> </div></li> <li class="reJj6Thl_0"><img 
src="https://static001.geekbang.org/account/avatar/00/18/43/36/3201f4a4.jpg" class="_2273kGdT_0"> 
<div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> <span>OnFire</span> 
<!----> </div> <div class="_1H1Z49Dr_0"> 2019-09-19 </div> </div> <!----> </div> <div> <div 
class="_3M6kV3zb_0"> 目前外包在银行做供应链业务，soap与restful混用，新接口基本都不用soap了，像soap这种结构相对复杂的方案会逐渐被淘汰吧，restful更简单明了 
</div> <div class="_2r3UB1GX_0"> <span>展开</span><i class="iconfont"></i> </div> <!----> <div 
class="_1w8H0ktn_0 _2A421P4G_0"> <div class="_2jsFl-X0_0"> <i class="iconfont"></i> <span></span> 
</div> <div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class=""></span> </div> <!----> 
</div> </div> </div></li> <li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/10/df/63/cf317827.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>anginiit</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2019-09-19 </div> </div> <!----> 
</div> <div> <div class="_3M6kV3zb_0 _3D2NkqD6_0"> 之前一个项目 ws和rest都有用到，rest是自己项目前后台请求使用，ws是请求第三方的接口使用。只是停留在使用阶段 
还没有深入的了解过，借着这一课 认真学习下。 </div> <!----> <!----> <div class="_1w8H0ktn_0 _2A421P4G_0"> <div class="_2jsFl-X0_0"> 
<i class="iconfont"></i> <span></span> </div> <div class="_2P4B1Hdm_0"> <i class="iconfont"></i> 
<span class=""></span> </div> <!----> </div> </div> </div></li> <li class="reJj6Thl_0"><img 
src="https://static001.geekbang.org/account/avatar/00/0f/4d/fd/0aa0e39f.jpg" class="_2273kGdT_0"> 
<div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> <span>许童童</span> 
<!----> </div> <div class="_1H1Z49Dr_0"> 2019-09-18 </div> </div> <!----> </div> <div> <div 
class="_3M6kV3zb_0 _3D2NkqD6_0"> 项目中用的基本上都是REST，我觉得用SOAP的只有以前遗留下来的代码了。 </div> <!----> <div 
class="_2xNIY4NG_0"> <p class="_33BLbmw4_0">作者回复: SOAP 还是常有使用的，特别是一些电信软件、传统软件等领域。当然，确实 REST 
更常见。</p> </div> <div class="_1w8H0ktn_0 _2A421P4G_0"> <div class="_2jsFl-X0_0"> <i class="iconfont"></i> 
<span></span> </div> <div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class=""></span> 
</div> <!----> </div> </div> </div></li> <li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/18/28/d9/78dfd983.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>sky</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2019-09-18 </div> </div> <!----> 
</div> <div> <div class="_3M6kV3zb_0"> 项目中基本上用的都是restful。soap用着别扭 </div> <div class="_2r3UB1GX_0"> 
<span>展开</span><i class="iconfont"></i> </div> <div class="_2xNIY4NG_0"> <p class="_33BLbmw4_0">作者回复: 
为什么别扭？:)</p> </div> <div class="_1w8H0ktn_0 _2A421P4G_0"> <div class="_2jsFl-X0_0"> <i class="iconfont"></i> 
<span>1</span> </div> <div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class=""></span> 
</div> <!----> </div> </div> </div></li>', 0, 'full_html', 'zh-hans', 46, 46) 
 {executed in 2 msec}
2020-11-19 11:27:45.346 INFO  jdbc.sqltiming Line:373 - select bookfieldt0_.entity_id as entity_i1_8_, bookfieldt0_.bundle as bundle2_8_, bookfieldt0_.delta 
as delta3_8_, bookfieldt0_.langcode as langcode4_8_, bookfieldt0_.revision_id as revision5_8_, 
bookfieldt0_.field_thumb_value as field_th6_8_ from node__field_thumb bookfieldt0_ where bookfieldt0_.entity_id=46 
 {executed in 0 msec}
2020-11-19 11:27:45.346 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------|------------------|
|entity_id |bundle |delta |langcode |revision_id |field_thumb_value |
|----------|-------|------|---------|------------|------------------|
|----------|-------|------|---------|------------|------------------|

2020-11-19 11:27:45.347 INFO  jdbc.sqltiming Line:373 - select bookfieldt0_.entity_id as entity_i1_8_0_, bookfieldt0_.bundle as bundle2_8_0_, bookfieldt0_.delta 
as delta3_8_0_, bookfieldt0_.langcode as langcode4_8_0_, bookfieldt0_.revision_id as revision5_8_0_, 
bookfieldt0_.field_thumb_value as field_th6_8_0_ from node__field_thumb bookfieldt0_ where 
bookfieldt0_.entity_id=46 
 {executed in 0 msec}
2020-11-19 11:27:45.347 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------|------------------|
|entity_id |bundle |delta |langcode |revision_id |field_thumb_value |
|----------|-------|------|---------|------------|------------------|
|----------|-------|------|---------|------------|------------------|

2020-11-19 11:27:45.349 INFO  jdbc.sqltiming Line:373 - insert into node__field_thumb (bundle, delta, langcode, revision_id, field_thumb_value, entity_id) 
values ('book', 0, 'zh-hans', 46, 'https://static001.geekbang.org/resource/image/da/1f/dad309ec4cdde9a4e80d64b248309f1f.jpg', 
46) 
 {executed in 0 msec}
2020-11-19 11:27:45.352 INFO  jdbc.sqltiming Line:373 - select nodefieldt0_.entity_id as entity_i1_17_0_, nodefieldt0_.bundle as bundle2_17_0_, nodefieldt0_.delta 
as delta3_17_0_, nodefieldt0_.langcode as langcode4_17_0_, nodefieldt0_.revision_id as revision5_17_0_, 
nodefieldt0_.field_thumb_value as field_th6_17_0_ from node_revision__field_thumb nodefieldt0_ 
where nodefieldt0_.entity_id=46 
 {executed in 0 msec}
2020-11-19 11:27:45.352 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------|------------------|
|entity_id |bundle |delta |langcode |revision_id |field_thumb_value |
|----------|-------|------|---------|------------|------------------|
|----------|-------|------|---------|------------|------------------|

2020-11-19 11:27:45.354 INFO  jdbc.sqltiming Line:373 - insert into node_revision__field_thumb (bundle, delta, langcode, revision_id, field_thumb_value, 
entity_id) values ('book', 0, 'zh-hans', 46, 'https://static001.geekbang.org/resource/image/da/1f/dad309ec4cdde9a4e80d64b248309f1f.jpg', 
46) 
 {executed in 0 msec}
2020-11-19 11:27:45.357 INFO  jdbc.sqltiming Line:373 - select bookfieldf0_.entity_id as entity_i1_5_0_, bookfieldf0_.bundle as bundle2_5_0_, bookfieldf0_.delta 
as delta3_5_0_, bookfieldf0_.field_fenlei_target_id as field_fe4_5_0_, bookfieldf0_.langcode 
as langcode5_5_0_, bookfieldf0_.revision_id as revision6_5_0_ from node__field_fenlei bookfieldf0_ 
where bookfieldf0_.entity_id=46 
 {executed in 0 msec}
2020-11-19 11:27:45.358 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------------|---------|------------|
|entity_id |bundle |delta |field_fenlei_target_id |langcode |revision_id |
|----------|-------|------|-----------------------|---------|------------|
|----------|-------|------|-----------------------|---------|------------|

2020-11-19 11:27:45.360 INFO  jdbc.sqltiming Line:373 - insert into node__field_fenlei (bundle, delta, field_fenlei_target_id, langcode, revision_id, 
entity_id) values ('book', 0, 1, 'zh-hans', 46, 46) 
 {executed in 0 msec}
2020-11-19 11:27:45.365 INFO  jdbc.sqltiming Line:373 - select nodefieldf0_.entity_id as entity_i1_14_0_, nodefieldf0_.bundle as bundle2_14_0_, nodefieldf0_.delta 
as delta3_14_0_, nodefieldf0_.field_fenlei_target_id as field_fe4_14_0_, nodefieldf0_.langcode 
as langcode5_14_0_, nodefieldf0_.revision_id as revision6_14_0_ from node_revision__field_fenlei 
nodefieldf0_ where nodefieldf0_.entity_id=46 
 {executed in 0 msec}
2020-11-19 11:27:45.365 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------------|---------|------------|
|entity_id |bundle |delta |field_fenlei_target_id |langcode |revision_id |
|----------|-------|------|-----------------------|---------|------------|
|----------|-------|------|-----------------------|---------|------------|

2020-11-19 11:27:45.367 INFO  jdbc.sqltiming Line:373 - insert into node_revision__field_fenlei (bundle, delta, field_fenlei_target_id, langcode, revision_id, 
entity_id) values ('book', 0, 1, 'zh-hans', 46, 46) 
 {executed in 0 msec}
2020-11-19 14:23:42.800 INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean Line:598 - Closing JPA EntityManagerFactory for persistence unit 'default'
2020-11-19 14:23:42.801 INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Line:218 - Shutting down ExecutorService 'applicationTaskExecutor'
2020-11-19 14:23:42.801 INFO  com.zaxxer.hikari.HikariDataSource Line:350 - HikariPool-1 - Shutdown initiated...
2020-11-19 14:23:42.803 INFO  com.zaxxer.hikari.HikariDataSource Line:352 - HikariPool-1 - Shutdown completed.
2020-11-19 16:10:35.939 INFO  geek.me.javaapi.JavaApiApplication Line:651 - No active profile set, falling back to default profiles: default
2020-11-19 16:10:36.306 INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate Line:127 - Bootstrapping Spring Data JPA repositories in DEFERRED mode.
2020-11-19 16:10:36.389 INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate Line:187 - Finished Spring Data repository scanning in 76ms. Found 20 JPA repository interfaces.
2020-11-19 16:10:36.511 INFO  org.springframework.cloud.context.scope.GenericScope Line:295 - BeanFactory id=b5c0e1e1-69da-3b46-8083-9bc08899a254
2020-11-19 16:10:36.777 INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer Line:108 - Tomcat initialized with port(s): 8080 (http)
2020-11-19 16:10:36.784 INFO  org.apache.coyote.http11.Http11NioProtocol Line:173 - Initializing ProtocolHandler ["http-nio-8080"]
2020-11-19 16:10:36.784 INFO  org.apache.catalina.core.StandardService Line:173 - Starting service [Tomcat]
2020-11-19 16:10:36.785 INFO  org.apache.catalina.core.StandardEngine Line:173 - Starting Servlet engine: [Apache Tomcat/9.0.37]
2020-11-19 16:10:36.862 INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Line:173 - Initializing Spring embedded WebApplicationContext
2020-11-19 16:10:36.862 INFO  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext Line:285 - Root WebApplicationContext: initialization completed in 910 ms
2020-11-19 16:10:36.995 INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Line:181 - Initializing ExecutorService 'applicationTaskExecutor'
2020-11-19 16:10:37.003 INFO  com.zaxxer.hikari.HikariDataSource Line:110 - HikariPool-1 - Starting...
2020-11-19 16:10:37.118 INFO  com.zaxxer.hikari.HikariDataSource Line:123 - HikariPool-1 - Start completed.
2020-11-19 16:10:37.208 INFO  org.hibernate.jpa.internal.util.LogHelper Line:31  - HHH000204: Processing PersistenceUnitInfo [name: default]
2020-11-19 16:10:37.257 INFO  org.hibernate.Version Line:44  - HHH000412: Hibernate ORM core version 5.4.20.Final
2020-11-19 16:10:37.359 INFO  org.hibernate.annotations.common.Version Line:49  - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-11-19 16:10:37.445 INFO  com.netflix.config.sources.URLConfigurationSource Line:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-11-19 16:10:37.450 INFO  com.netflix.config.sources.URLConfigurationSource Line:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-11-19 16:10:37.453 INFO  org.hibernate.dialect.Dialect Line:170 - HHH000400: Using dialect: org.hibernate.dialect.MySQL55Dialect
2020-11-19 16:10:38.063 INFO  org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator Line:52  - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-11-19 16:10:38.069 INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean Line:416 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-11-19 16:10:38.890 INFO  org.springframework.cloud.commons.util.InetUtils Line:170 - Cannot determine local hostname
2020-11-19 16:10:38.964 INFO  org.apache.coyote.http11.Http11NioProtocol Line:173 - Starting ProtocolHandler ["http-nio-8080"]
2020-11-19 16:10:38.980 INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer Line:220 - Tomcat started on port(s): 8080 (http) with context path ''
2020-11-19 16:10:40.078 INFO  org.springframework.cloud.commons.util.InetUtils Line:170 - Cannot determine local hostname
2020-11-19 16:10:40.083 INFO  org.springframework.data.repository.config.DeferredRepositoryInitializationListener Line:49  - Triggering deferred initialization of Spring Data repositories…
2020-11-19 16:10:40.239 INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Line:173 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-11-19 16:10:40.239 INFO  org.springframework.web.servlet.DispatcherServlet Line:525 - Initializing Servlet 'dispatcherServlet'
2020-11-19 16:10:40.245 INFO  org.springframework.web.servlet.DispatcherServlet Line:547 - Completed initialization in 6 ms
2020-11-19 16:10:40.677 INFO  org.springframework.data.repository.config.DeferredRepositoryInitializationListener Line:53  - Spring Data repositories initialized!
2020-11-19 16:10:40.682 INFO  geek.me.javaapi.JavaApiApplication Line:61  - Started JavaApiApplication in 7.646 seconds (JVM running for 8.489)
2020-11-19 16:15:12.494 INFO  jdbc.sqltiming Line:373 - select queueentit0_.item_id as item_id1_19_, queueentit0_.base_path as base_pat2_19_, queueentit0_.name 
as name3_19_, queueentit0_.todo as todo4_19_ from queue_new queueentit0_ where queueentit0_.todo=1 
 {executed in 1 msec}
2020-11-19 16:15:12.513 INFO  jdbc.resultsettable Line:610 - 
|-----------------|-------------------------------|--------------------|-----|
|item_id          |base_path                      |name                |todo |
|-----------------|-------------------------------|--------------------|-----|
|283828550600385  |00-资源文件/14-极客时间/01-专栏课/051-99/ |87-全栈工程师修炼指南        |1    |
|300655922831157  |00-资源文件/14-极客时间/01-专栏课/051-99/ |52-透视HTTP协议         |1    |
|390535478164697  |00-资源文件/14-极客时间/01-专栏课/051-99/ |51-白话法律42讲          |1    |
|409602706903658  |00-资源文件/14-极客时间/01-专栏课/051-99/ |77-从0打造音视频直播系统      |1    |
|459081746926346  |00-资源文件/14-极客时间/01-专栏课/051-99/ |99-JavaScript核心原理解析 |1    |
|476330106989327  |00-资源文件/14-极客时间/01-专栏课/051-99/ |88-高并发系统设计40问       |1    |
|621195835058382  |00-资源文件/14-极客时间/01-专栏课/051-99/ |97-项目管理实战20讲        |1    |
|626896109933850  |00-资源文件/14-极客时间/01-专栏课/051-99/ |98-设计模式之美           |1    |
|773737007105338  |00-资源文件/14-极客时间/01-专栏课/051-99/ |53-OpenResty从入门到实战  |1    |
|781941951179116  |00-资源文件/14-极客时间/01-专栏课/051-99/ |75-编辑训练营            |1    |
|787964344536295  |00-资源文件/14-极客时间/01-专栏课/051-99/ |80-网络编程实战           |1    |
|789557280998655  |00-资源文件/14-极客时间/01-专栏课/051-99/ |86-即时消息技术剖析与实战      |1    |
|823812106395779  |00-资源文件/14-极客时间/01-专栏课/051-99/ |74-Flutter核心技术与实战   |1    |
|855137735533744  |00-资源文件/14-极客时间/01-专栏课/051-99/ |94-DDD实战课           |1    |
|861073733380654  |00-资源文件/14-极客时间/01-专栏课/051-99/ |90-分布式技术原理与算法解析     |1    |
|876595205877896  |00-资源文件/14-极客时间/01-专栏课/051-99/ |91-说透中台             |1    |
|877479874575179  |00-资源文件/14-极客时间/01-专栏课/051-99/ |83-编译原理之美           |1    |
|936433950782588  |00-资源文件/14-极客时间/01-专栏课/051-99/ |95-苏杰的产品创新课         |1    |
|952316731239648  |00-资源文件/14-极客时间/01-专栏课/051-99/ |92-DevOps实战笔记       |1    |
|954967934009220  |00-资源文件/14-极客时间/01-专栏课/051-99/ |73-黄勇的OKR实战笔记       |1    |
|1004252009859251 |00-资源文件/14-极客时间/01-专栏课/051-99/ |85-研发效率破局之道         |1    |
|1009872364102685 |00-资源文件/14-极客时间/01-专栏课/051-99/ |81-浏览器工作原理与实践       |1    |
|1022101157981678 |00-资源文件/14-极客时间/01-专栏课/051-99/ |79-消息队列高手课          |1    |
|-----------------|-------------------------------|--------------------|-----|

2020-11-19 16:15:21.437 INFO  jdbc.sqltiming Line:373 - select bookfieldf0_.entity_id as entity_i1_7_, bookfieldf0_.bundle as bundle2_7_, bookfieldf0_.delta 
as delta3_7_, bookfieldf0_.field_fsid_value as field_fs4_7_, bookfieldf0_.langcode as langcode5_7_, 
bookfieldf0_.revision_id as revision6_7_ from node__field_fsid bookfieldf0_ where bookfieldf0_.field_fsid_value='283828550600385' 
 {executed in 6 msec}
2020-11-19 16:15:21.440 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------|---------|------------|
|entity_id |bundle |delta |field_fsid_value |langcode |revision_id |
|----------|-------|------|-----------------|---------|------------|
|1         |book   |0     |283828550600385  |zh-hans  |1           |
|----------|-------|------|-----------------|---------|------------|

2020-11-19 16:15:21.449 INFO  jdbc.sqltiming Line:373 - select nodeentity0_.nid as nid1_3_, nodeentity0_.langcode as langcode2_3_, nodeentity0_.type 
as type3_3_, nodeentity0_.uuid as uuid4_3_, nodeentity0_.vid as vid5_3_ from node nodeentity0_ 
where nodeentity0_.nid=1 
 {executed in 1 msec}
2020-11-19 16:15:21.451 INFO  jdbc.resultsettable Line:610 - 
|----|---------|-----|-------------------------------------|----|
|nid |langcode |type |uuid                                 |vid |
|----|---------|-----|-------------------------------------|----|
|1   |zh-hans  |book |4bb8e624-5f97-4aae-b6e2-3b2e1b596579 |1   |
|----|---------|-----|-------------------------------------|----|

2020-11-19 16:15:21.488 INFO  jdbc.sqltiming Line:373 - select nodefieldf0_.entity_id as entity_i1_16_0_, nodefieldf0_.bundle as bundle2_16_0_, nodefieldf0_.delta 
as delta3_16_0_, nodefieldf0_.field_fsid_value as field_fs4_16_0_, nodefieldf0_.langcode as 
langcode5_16_0_, nodefieldf0_.revision_id as revision6_16_0_ from node_revision__field_fsid 
nodefieldf0_ where nodefieldf0_.entity_id=1 
 {executed in 1 msec}
2020-11-19 16:15:21.489 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------|---------|------------|
|entity_id |bundle |delta |field_fsid_value |langcode |revision_id |
|----------|-------|------|-----------------|---------|------------|
|[unread]  |book   |0     |283828550600385  |zh-hans  |1           |
|----------|-------|------|-----------------|---------|------------|

2020-11-19 16:15:21.492 INFO  jdbc.sqltiming Line:373 - select bookentity0_.nid as nid1_1_, bookentity0_.bid as bid2_1_, bookentity0_.depth as depth3_1_, 
bookentity0_.has_children as has_chil4_1_, bookentity0_.p1 as p5_1_, bookentity0_.p2 as p6_1_, 
bookentity0_.p3 as p7_1_, bookentity0_.p4 as p8_1_, bookentity0_.p5 as p9_1_, bookentity0_.pid 
as pid10_1_, bookentity0_.weight as weight11_1_ from book bookentity0_ where bookentity0_.nid=1 
 {executed in 0 msec}
2020-11-19 16:15:21.493 INFO  jdbc.resultsettable Line:610 - 
|----|----|------|-------------|---|---|---|---|---|----|-------|
|nid |bid |depth |has_children |p1 |p2 |p3 |p4 |p5 |pid |weight |
|----|----|------|-------------|---|---|---|---|---|----|-------|
|1   |1   |1     |1            |1  |0  |0  |0  |0  |0   |0      |
|----|----|------|-------------|---|---|---|---|---|----|-------|

2020-11-19 16:15:21.500 INFO  jdbc.sqltiming Line:373 - select nodebodyen0_.entity_id as entity_i1_4_, nodebodyen0_.body_value as body_val2_4_, nodebodyen0_.body_summary 
as body_sum3_4_, nodebodyen0_.bundle as bundle4_4_, nodebodyen0_.delta as delta5_4_, nodebodyen0_.body_format 
as body_for6_4_, nodebodyen0_.langcode as langcode7_4_, nodebodyen0_.revision_id as revision8_4_ 
from node__body nodebodyen0_ where nodebodyen0_.entity_id=1 
 {executed in 2 msec}
2020-11-19 16:15:21.501 INFO  jdbc.resultsettable Line:610 - 
|----------|-----------|-------------|-------|------|------------|---------|------------|
|entity_id |body_value |body_summary |bundle |delta |body_format |langcode |revision_id |
|----------|-----------|-------------|-------|------|------------|---------|------------|
|1         |           |             |book   |0     |full_html   |zh-hans  |1           |
|----------|-----------|-------------|-------|------|------------|---------|------------|

2020-11-19 16:15:21.505 INFO  jdbc.sqltiming Line:373 - select nodebodyre0_.entity_id as entity_i1_13_0_, nodebodyre0_.body_value as body_val2_13_0_, 
nodebodyre0_.body_summary as body_sum3_13_0_, nodebodyre0_.bundle as bundle4_13_0_, nodebodyre0_.delta 
as delta5_13_0_, nodebodyre0_.body_format as body_for6_13_0_, nodebodyre0_.langcode as langcode7_13_0_, 
nodebodyre0_.revision_id as revision8_13_0_ from node_revision__body nodebodyre0_ where nodebodyre0_.entity_id=1 
 {executed in 1 msec}
2020-11-19 16:15:21.506 INFO  jdbc.resultsettable Line:610 - 
|----------|-----------|-------------|-------|------|------------|---------|------------|
|entity_id |body_value |body_summary |bundle |delta |body_format |langcode |revision_id |
|----------|-----------|-------------|-------|------|------------|---------|------------|
|[unread]  |           |             |book   |0     |full_html   |zh-hans  |1           |
|----------|-----------|-------------|-------|------|------------|---------|------------|

2020-11-19 16:15:21.513 INFO  jdbc.sqltiming Line:373 - select nodefiledd0_.nid as nid1_10_, nodefiledd0_.changed as changed2_10_, nodefiledd0_.created 
as created3_10_, nodefiledd0_.default_langcode as default_4_10_, nodefiledd0_.langcode as langcode5_10_, 
nodefiledd0_.promote as promote6_10_, nodefiledd0_.revision_translation_affected as revision7_10_, 
nodefiledd0_.status as status8_10_, nodefiledd0_.sticky as sticky9_10_, nodefiledd0_.title 
as title10_10_, nodefiledd0_.type as type11_10_, nodefiledd0_.uid as uid12_10_, nodefiledd0_.vid 
as vid13_10_ from node_field_data nodefiledd0_ where nodefiledd0_.nid=1 
 {executed in 1 msec}
2020-11-19 16:15:21.514 INFO  jdbc.resultsettable Line:610 - 
|----|-----------|-----------|-----------------|---------|--------|------------------------------|-------|-------|-------------|-----|----|----|
|nid |changed    |created    |default_langcode |langcode |promote |revision_translation_affected |status |sticky |title        |type |uid |vid |
|----|-----------|-----------|-----------------|---------|--------|------------------------------|-------|-------|-------------|-----|----|----|
|1   |1605754780 |1605754780 |1                |zh-hans  |0       |1                             |1      |0      |87-全栈工程师修炼指南 |book |1   |1   |
|----|-----------|-----------|-----------------|---------|--------|------------------------------|-------|-------|-------------|-----|----|----|

2020-11-19 16:15:21.518 INFO  jdbc.sqltiming Line:373 - select nodefieldr0_.nid as nid1_11_0_, nodefieldr0_.changed as changed2_11_0_, nodefieldr0_.created 
as created3_11_0_, nodefieldr0_.default_langcode as default_4_11_0_, nodefieldr0_.langcode 
as langcode5_11_0_, nodefieldr0_.promote as promote6_11_0_, nodefieldr0_.revision_translation_affected 
as revision7_11_0_, nodefieldr0_.status as status8_11_0_, nodefieldr0_.sticky as sticky9_11_0_, 
nodefieldr0_.title as title10_11_0_, nodefieldr0_.uid as uid11_11_0_, nodefieldr0_.vid as vid12_11_0_ 
from node_field_revision nodefieldr0_ where nodefieldr0_.nid=1 
 {executed in 1 msec}
2020-11-19 16:15:21.519 INFO  jdbc.resultsettable Line:610 - 
|---------|-----------|-----------|-----------------|---------|--------|------------------------------|-------|-------|-------------|----|----|
|nid      |changed    |created    |default_langcode |langcode |promote |revision_translation_affected |status |sticky |title        |uid |vid |
|---------|-----------|-----------|-----------------|---------|--------|------------------------------|-------|-------|-------------|----|----|
|[unread] |1605754780 |1605754780 |1                |zh-hans  |0       |1                             |1      |0      |87-全栈工程师修炼指南 |1   |1   |
|---------|-----------|-----------|-----------------|---------|--------|------------------------------|-------|-------|-------------|----|----|

2020-11-19 16:15:21.526 INFO  jdbc.sqltiming Line:373 - update node_field_data set changed=1605773721, created=1605773721, default_langcode=1, langcode='zh-hans', 
promote=0, revision_translation_affected=1, status=1, sticky=0, title='87-全栈工程师修炼指南', type='book', 
uid=1, vid=1 where nid=1 
 {executed in 1 msec}
2020-11-19 16:15:21.527 INFO  jdbc.sqltiming Line:373 - update node_field_revision set changed=1605773721, created=1605773721, default_langcode=1, 
langcode='zh-hans', promote=0, revision_translation_affected=1, status=1, sticky=0, title='87-全栈工程师修炼指南', 
uid=1, vid=1 where nid=1 
 {executed in 0 msec}
2020-11-19 16:15:21.536 INFO  jdbc.sqltiming Line:373 - select bookfieldm0_.entity_id as entity_i1_8_, bookfieldm0_.bundle as bundle2_8_, bookfieldm0_.delta 
as delta3_8_, bookfieldm0_.langcode as langcode4_8_, bookfieldm0_.field_media_value as field_me5_8_, 
bookfieldm0_.revision_id as revision6_8_ from node__field_media bookfieldm0_ where bookfieldm0_.entity_id=1 
 {executed in 1 msec}
2020-11-19 16:15:21.536 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------------|------------|
|entity_id |bundle |delta |langcode |field_media_value |revision_id |
|----------|-------|------|---------|------------------|------------|
|1         |book   |0     |zh-hans  |                  |1           |
|----------|-------|------|---------|------------------|------------|

2020-11-19 16:15:21.543 INFO  jdbc.sqltiming Line:373 - select nodefieldm0_.entity_id as entity_i1_17_0_, nodefieldm0_.bundle as bundle2_17_0_, nodefieldm0_.delta 
as delta3_17_0_, nodefieldm0_.langcode as langcode4_17_0_, nodefieldm0_.field_media_value as 
field_me5_17_0_, nodefieldm0_.revision_id as revision6_17_0_ from node_revision__field_media 
nodefieldm0_ where nodefieldm0_.entity_id=1 
 {executed in 1 msec}
2020-11-19 16:15:21.544 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------------|------------|
|entity_id |bundle |delta |langcode |field_media_value |revision_id |
|----------|-------|------|---------|------------------|------------|
|[unread]  |book   |0     |zh-hans  |                  |1           |
|----------|-------|------|---------|------------------|------------|

2020-11-19 16:15:21.548 INFO  jdbc.sqltiming Line:373 - select bookfieldc0_.entity_id as entity_i1_5_, bookfieldc0_.bundle as bundle2_5_, bookfieldc0_.field_comment_value 
as field_co3_5_, bookfieldc0_.delta as delta4_5_, bookfieldc0_.field_comment_format as field_co5_5_, 
bookfieldc0_.langcode as langcode6_5_, bookfieldc0_.revision_id as revision7_5_ from node__field_comment 
bookfieldc0_ where bookfieldc0_.entity_id=1 
 {executed in 1 msec}
2020-11-19 16:15:21.549 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|--------------------|------|---------------------|---------|------------|
|entity_id |bundle |field_comment_value |delta |field_comment_format |langcode |revision_id |
|----------|-------|--------------------|------|---------------------|---------|------------|
|1         |book   |                    |0     |full_html            |zh-hans  |1           |
|----------|-------|--------------------|------|---------------------|---------|------------|

2020-11-19 16:15:21.555 INFO  jdbc.sqltiming Line:373 - select nodefieldc0_.entity_id as entity_i1_14_0_, nodefieldc0_.bundle as bundle2_14_0_, nodefieldc0_.field_comment_value 
as field_co3_14_0_, nodefieldc0_.delta as delta4_14_0_, nodefieldc0_.field_comment_format as 
field_co5_14_0_, nodefieldc0_.langcode as langcode6_14_0_, nodefieldc0_.revision_id as revision7_14_0_ 
from node_revision__field_comment nodefieldc0_ where nodefieldc0_.entity_id=1 
 {executed in 1 msec}
2020-11-19 16:15:21.556 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|--------------------|------|---------------------|---------|------------|
|entity_id |bundle |field_comment_value |delta |field_comment_format |langcode |revision_id |
|----------|-------|--------------------|------|---------------------|---------|------------|
|[unread]  |book   |                    |0     |full_html            |zh-hans  |1           |
|----------|-------|--------------------|------|---------------------|---------|------------|

2020-11-19 16:15:21.560 INFO  jdbc.sqltiming Line:373 - select bookfieldt0_.entity_id as entity_i1_9_, bookfieldt0_.bundle as bundle2_9_, bookfieldt0_.delta 
as delta3_9_, bookfieldt0_.langcode as langcode4_9_, bookfieldt0_.revision_id as revision5_9_, 
bookfieldt0_.field_thumb_value as field_th6_9_ from node__field_thumb bookfieldt0_ where bookfieldt0_.entity_id=1 
 {executed in 1 msec}
2020-11-19 16:15:21.560 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------|------------------|
|entity_id |bundle |delta |langcode |revision_id |field_thumb_value |
|----------|-------|------|---------|------------|------------------|
|1         |book   |0     |zh-hans  |1           |                  |
|----------|-------|------|---------|------------|------------------|

2020-11-19 16:15:21.566 INFO  jdbc.sqltiming Line:373 - select nodefieldt0_.entity_id as entity_i1_18_0_, nodefieldt0_.bundle as bundle2_18_0_, nodefieldt0_.delta 
as delta3_18_0_, nodefieldt0_.langcode as langcode4_18_0_, nodefieldt0_.revision_id as revision5_18_0_, 
nodefieldt0_.field_thumb_value as field_th6_18_0_ from node_revision__field_thumb nodefieldt0_ 
where nodefieldt0_.entity_id=1 
 {executed in 0 msec}
2020-11-19 16:15:21.567 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------|------------------|
|entity_id |bundle |delta |langcode |revision_id |field_thumb_value |
|----------|-------|------|---------|------------|------------------|
|[unread]  |book   |0     |zh-hans  |1           |                  |
|----------|-------|------|---------|------------|------------------|

2020-11-19 16:15:21.573 INFO  jdbc.sqltiming Line:373 - select bookfieldf0_.entity_id as entity_i1_6_0_, bookfieldf0_.bundle as bundle2_6_0_, bookfieldf0_.delta 
as delta3_6_0_, bookfieldf0_.field_fenlei_target_id as field_fe4_6_0_, bookfieldf0_.langcode 
as langcode5_6_0_, bookfieldf0_.revision_id as revision6_6_0_ from node__field_fenlei bookfieldf0_ 
where bookfieldf0_.entity_id=1 
 {executed in 1 msec}
2020-11-19 16:15:21.574 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------------|---------|------------|
|entity_id |bundle |delta |field_fenlei_target_id |langcode |revision_id |
|----------|-------|------|-----------------------|---------|------------|
|[unread]  |book   |0     |1                      |zh-hans  |1           |
|----------|-------|------|-----------------------|---------|------------|

2020-11-19 16:15:21.578 INFO  jdbc.sqltiming Line:373 - select nodefieldf0_.entity_id as entity_i1_15_0_, nodefieldf0_.bundle as bundle2_15_0_, nodefieldf0_.delta 
as delta3_15_0_, nodefieldf0_.field_fenlei_target_id as field_fe4_15_0_, nodefieldf0_.langcode 
as langcode5_15_0_, nodefieldf0_.revision_id as revision6_15_0_ from node_revision__field_fenlei 
nodefieldf0_ where nodefieldf0_.entity_id=1 
 {executed in 1 msec}
2020-11-19 16:15:21.579 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------------|---------|------------|
|entity_id |bundle |delta |field_fenlei_target_id |langcode |revision_id |
|----------|-------|------|-----------------------|---------|------------|
|[unread]  |book   |0     |1                      |zh-hans  |1           |
|----------|-------|------|-----------------------|---------|------------|

2020-11-19 16:15:22.259 INFO  jdbc.sqltiming Line:373 - select bookfieldf0_.entity_id as entity_i1_7_, bookfieldf0_.bundle as bundle2_7_, bookfieldf0_.delta 
as delta3_7_, bookfieldf0_.field_fsid_value as field_fs4_7_, bookfieldf0_.langcode as langcode5_7_, 
bookfieldf0_.revision_id as revision6_7_ from node__field_fsid bookfieldf0_ where bookfieldf0_.field_fsid_value='568347143558516' 
 {executed in 1 msec}
2020-11-19 16:15:22.260 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------|---------|------------|
|entity_id |bundle |delta |field_fsid_value |langcode |revision_id |
|----------|-------|------|-----------------|---------|------------|
|2         |book   |0     |568347143558516  |zh-hans  |2           |
|----------|-------|------|-----------------|---------|------------|

2020-11-19 16:15:22.261 INFO  jdbc.sqltiming Line:373 - select nodeentity0_.nid as nid1_3_, nodeentity0_.langcode as langcode2_3_, nodeentity0_.type 
as type3_3_, nodeentity0_.uuid as uuid4_3_, nodeentity0_.vid as vid5_3_ from node nodeentity0_ 
where nodeentity0_.nid=2 
 {executed in 0 msec}
2020-11-19 16:15:22.262 INFO  jdbc.resultsettable Line:610 - 
|----|---------|-----|-------------------------------------|----|
|nid |langcode |type |uuid                                 |vid |
|----|---------|-----|-------------------------------------|----|
|2   |zh-hans  |book |d915ec1c-b08c-4c6a-ae15-dd21d3de8ea1 |2   |
|----|---------|-----|-------------------------------------|----|

2020-11-19 16:15:22.266 INFO  jdbc.sqltiming Line:373 - select nodefieldf0_.entity_id as entity_i1_16_0_, nodefieldf0_.bundle as bundle2_16_0_, nodefieldf0_.delta 
as delta3_16_0_, nodefieldf0_.field_fsid_value as field_fs4_16_0_, nodefieldf0_.langcode as 
langcode5_16_0_, nodefieldf0_.revision_id as revision6_16_0_ from node_revision__field_fsid 
nodefieldf0_ where nodefieldf0_.entity_id=2 
 {executed in 0 msec}
2020-11-19 16:15:22.267 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------|---------|------------|
|entity_id |bundle |delta |field_fsid_value |langcode |revision_id |
|----------|-------|------|-----------------|---------|------------|
|[unread]  |book   |0     |568347143558516  |zh-hans  |2           |
|----------|-------|------|-----------------|---------|------------|

2020-11-19 16:15:22.270 INFO  jdbc.sqltiming Line:373 - select bookentity0_.nid as nid1_1_, bookentity0_.bid as bid2_1_, bookentity0_.depth as depth3_1_, 
bookentity0_.has_children as has_chil4_1_, bookentity0_.p1 as p5_1_, bookentity0_.p2 as p6_1_, 
bookentity0_.p3 as p7_1_, bookentity0_.p4 as p8_1_, bookentity0_.p5 as p9_1_, bookentity0_.pid 
as pid10_1_, bookentity0_.weight as weight11_1_ from book bookentity0_ where bookentity0_.nid=2 
 {executed in 1 msec}
2020-11-19 16:15:22.271 INFO  jdbc.resultsettable Line:610 - 
|----|----|------|-------------|---|---|---|---|---|----|-------|
|nid |bid |depth |has_children |p1 |p2 |p3 |p4 |p5 |pid |weight |
|----|----|------|-------------|---|---|---|---|---|----|-------|
|2   |1   |2     |1            |1  |2  |0  |0  |0  |1   |0      |
|----|----|------|-------------|---|---|---|---|---|----|-------|

2020-11-19 16:15:22.275 INFO  jdbc.sqltiming Line:373 - select nodebodyen0_.entity_id as entity_i1_4_, nodebodyen0_.body_value as body_val2_4_, nodebodyen0_.body_summary 
as body_sum3_4_, nodebodyen0_.bundle as bundle4_4_, nodebodyen0_.delta as delta5_4_, nodebodyen0_.body_format 
as body_for6_4_, nodebodyen0_.langcode as langcode7_4_, nodebodyen0_.revision_id as revision8_4_ 
from node__body nodebodyen0_ where nodebodyen0_.entity_id=2 
 {executed in 1 msec}
2020-11-19 16:15:22.276 INFO  jdbc.resultsettable Line:610 - 
|----------|-----------|-------------|-------|------|------------|---------|------------|
|entity_id |body_value |body_summary |bundle |delta |body_format |langcode |revision_id |
|----------|-----------|-------------|-------|------|------------|---------|------------|
|2         |           |             |book   |0     |full_html   |zh-hans  |2           |
|----------|-----------|-------------|-------|------|------------|---------|------------|

2020-11-19 16:15:22.277 INFO  jdbc.sqltiming Line:373 - select nodebodyre0_.entity_id as entity_i1_13_0_, nodebodyre0_.body_value as body_val2_13_0_, 
nodebodyre0_.body_summary as body_sum3_13_0_, nodebodyre0_.bundle as bundle4_13_0_, nodebodyre0_.delta 
as delta5_13_0_, nodebodyre0_.body_format as body_for6_13_0_, nodebodyre0_.langcode as langcode7_13_0_, 
nodebodyre0_.revision_id as revision8_13_0_ from node_revision__body nodebodyre0_ where nodebodyre0_.entity_id=2 
 {executed in 0 msec}
2020-11-19 16:15:22.278 INFO  jdbc.resultsettable Line:610 - 
|----------|-----------|-------------|-------|------|------------|---------|------------|
|entity_id |body_value |body_summary |bundle |delta |body_format |langcode |revision_id |
|----------|-----------|-------------|-------|------|------------|---------|------------|
|[unread]  |           |             |book   |0     |full_html   |zh-hans  |2           |
|----------|-----------|-------------|-------|------|------------|---------|------------|

2020-11-19 16:15:22.282 INFO  jdbc.sqltiming Line:373 - select nodefiledd0_.nid as nid1_10_, nodefiledd0_.changed as changed2_10_, nodefiledd0_.created 
as created3_10_, nodefiledd0_.default_langcode as default_4_10_, nodefiledd0_.langcode as langcode5_10_, 
nodefiledd0_.promote as promote6_10_, nodefiledd0_.revision_translation_affected as revision7_10_, 
nodefiledd0_.status as status8_10_, nodefiledd0_.sticky as sticky9_10_, nodefiledd0_.title 
as title10_10_, nodefiledd0_.type as type11_10_, nodefiledd0_.uid as uid12_10_, nodefiledd0_.vid 
as vid13_10_ from node_field_data nodefiledd0_ where nodefiledd0_.nid=2 
 {executed in 1 msec}
2020-11-19 16:15:22.283 INFO  jdbc.resultsettable Line:610 - 
|----|-----------|-----------|-----------------|---------|--------|------------------------------|-------|-------|-------------|-----|----|----|
|nid |changed    |created    |default_langcode |langcode |promote |revision_translation_affected |status |sticky |title        |type |uid |vid |
|----|-----------|-----------|-----------------|---------|--------|------------------------------|-------|-------|-------------|-----|----|----|
|2   |1605754782 |1605754782 |1                |zh-hans  |0       |1                             |1      |0      |07丨全栈回顾 (1讲) |book |1   |2   |
|----|-----------|-----------|-----------------|---------|--------|------------------------------|-------|-------|-------------|-----|----|----|

2020-11-19 16:15:22.284 INFO  jdbc.sqltiming Line:373 - select nodefieldr0_.nid as nid1_11_0_, nodefieldr0_.changed as changed2_11_0_, nodefieldr0_.created 
as created3_11_0_, nodefieldr0_.default_langcode as default_4_11_0_, nodefieldr0_.langcode 
as langcode5_11_0_, nodefieldr0_.promote as promote6_11_0_, nodefieldr0_.revision_translation_affected 
as revision7_11_0_, nodefieldr0_.status as status8_11_0_, nodefieldr0_.sticky as sticky9_11_0_, 
nodefieldr0_.title as title10_11_0_, nodefieldr0_.uid as uid11_11_0_, nodefieldr0_.vid as vid12_11_0_ 
from node_field_revision nodefieldr0_ where nodefieldr0_.nid=2 
 {executed in 0 msec}
2020-11-19 16:15:22.285 INFO  jdbc.resultsettable Line:610 - 
|---------|-----------|-----------|-----------------|---------|--------|------------------------------|-------|-------|-------------|----|----|
|nid      |changed    |created    |default_langcode |langcode |promote |revision_translation_affected |status |sticky |title        |uid |vid |
|---------|-----------|-----------|-----------------|---------|--------|------------------------------|-------|-------|-------------|----|----|
|[unread] |1605754782 |1605754782 |1                |zh-hans  |0       |1                             |1      |0      |07丨全栈回顾 (1讲) |1   |2   |
|---------|-----------|-----------|-----------------|---------|--------|------------------------------|-------|-------|-------------|----|----|

2020-11-19 16:15:22.287 INFO  jdbc.sqltiming Line:373 - update node_field_data set changed=1605773722, created=1605773722, default_langcode=1, langcode='zh-hans', 
promote=0, revision_translation_affected=1, status=1, sticky=0, title='07丨全栈回顾 (1讲)', type='book', 
uid=1, vid=2 where nid=2 
 {executed in 1 msec}
2020-11-19 16:15:22.288 INFO  jdbc.sqltiming Line:373 - update node_field_revision set changed=1605773722, created=1605773722, default_langcode=1, 
langcode='zh-hans', promote=0, revision_translation_affected=1, status=1, sticky=0, title='07丨全栈回顾 
(1讲)', uid=1, vid=2 where nid=2 
 {executed in 0 msec}
2020-11-19 16:15:22.292 INFO  jdbc.sqltiming Line:373 - select bookfieldm0_.entity_id as entity_i1_8_, bookfieldm0_.bundle as bundle2_8_, bookfieldm0_.delta 
as delta3_8_, bookfieldm0_.langcode as langcode4_8_, bookfieldm0_.field_media_value as field_me5_8_, 
bookfieldm0_.revision_id as revision6_8_ from node__field_media bookfieldm0_ where bookfieldm0_.entity_id=2 
 {executed in 0 msec}
2020-11-19 16:15:22.293 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------------|------------|
|entity_id |bundle |delta |langcode |field_media_value |revision_id |
|----------|-------|------|---------|------------------|------------|
|2         |book   |0     |zh-hans  |                  |2           |
|----------|-------|------|---------|------------------|------------|

2020-11-19 16:15:22.295 INFO  jdbc.sqltiming Line:373 - select nodefieldm0_.entity_id as entity_i1_17_0_, nodefieldm0_.bundle as bundle2_17_0_, nodefieldm0_.delta 
as delta3_17_0_, nodefieldm0_.langcode as langcode4_17_0_, nodefieldm0_.field_media_value as 
field_me5_17_0_, nodefieldm0_.revision_id as revision6_17_0_ from node_revision__field_media 
nodefieldm0_ where nodefieldm0_.entity_id=2 
 {executed in 0 msec}
2020-11-19 16:15:22.296 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------------|------------|
|entity_id |bundle |delta |langcode |field_media_value |revision_id |
|----------|-------|------|---------|------------------|------------|
|[unread]  |book   |0     |zh-hans  |                  |2           |
|----------|-------|------|---------|------------------|------------|

2020-11-19 16:15:22.297 INFO  jdbc.sqltiming Line:373 - select bookfieldc0_.entity_id as entity_i1_5_, bookfieldc0_.bundle as bundle2_5_, bookfieldc0_.field_comment_value 
as field_co3_5_, bookfieldc0_.delta as delta4_5_, bookfieldc0_.field_comment_format as field_co5_5_, 
bookfieldc0_.langcode as langcode6_5_, bookfieldc0_.revision_id as revision7_5_ from node__field_comment 
bookfieldc0_ where bookfieldc0_.entity_id=2 
 {executed in 0 msec}
2020-11-19 16:15:22.298 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|--------------------|------|---------------------|---------|------------|
|entity_id |bundle |field_comment_value |delta |field_comment_format |langcode |revision_id |
|----------|-------|--------------------|------|---------------------|---------|------------|
|2         |book   |                    |0     |full_html            |zh-hans  |2           |
|----------|-------|--------------------|------|---------------------|---------|------------|

2020-11-19 16:15:22.300 INFO  jdbc.sqltiming Line:373 - select nodefieldc0_.entity_id as entity_i1_14_0_, nodefieldc0_.bundle as bundle2_14_0_, nodefieldc0_.field_comment_value 
as field_co3_14_0_, nodefieldc0_.delta as delta4_14_0_, nodefieldc0_.field_comment_format as 
field_co5_14_0_, nodefieldc0_.langcode as langcode6_14_0_, nodefieldc0_.revision_id as revision7_14_0_ 
from node_revision__field_comment nodefieldc0_ where nodefieldc0_.entity_id=2 
 {executed in 0 msec}
2020-11-19 16:15:22.300 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|--------------------|------|---------------------|---------|------------|
|entity_id |bundle |field_comment_value |delta |field_comment_format |langcode |revision_id |
|----------|-------|--------------------|------|---------------------|---------|------------|
|[unread]  |book   |                    |0     |full_html            |zh-hans  |2           |
|----------|-------|--------------------|------|---------------------|---------|------------|

2020-11-19 16:15:22.302 INFO  jdbc.sqltiming Line:373 - select bookfieldt0_.entity_id as entity_i1_9_, bookfieldt0_.bundle as bundle2_9_, bookfieldt0_.delta 
as delta3_9_, bookfieldt0_.langcode as langcode4_9_, bookfieldt0_.revision_id as revision5_9_, 
bookfieldt0_.field_thumb_value as field_th6_9_ from node__field_thumb bookfieldt0_ where bookfieldt0_.entity_id=2 
 {executed in 1 msec}
2020-11-19 16:15:22.302 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------|------------------|
|entity_id |bundle |delta |langcode |revision_id |field_thumb_value |
|----------|-------|------|---------|------------|------------------|
|2         |book   |0     |zh-hans  |2           |                  |
|----------|-------|------|---------|------------|------------------|

2020-11-19 16:15:22.304 INFO  jdbc.sqltiming Line:373 - select nodefieldt0_.entity_id as entity_i1_18_0_, nodefieldt0_.bundle as bundle2_18_0_, nodefieldt0_.delta 
as delta3_18_0_, nodefieldt0_.langcode as langcode4_18_0_, nodefieldt0_.revision_id as revision5_18_0_, 
nodefieldt0_.field_thumb_value as field_th6_18_0_ from node_revision__field_thumb nodefieldt0_ 
where nodefieldt0_.entity_id=2 
 {executed in 0 msec}
2020-11-19 16:15:22.305 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------|------------------|
|entity_id |bundle |delta |langcode |revision_id |field_thumb_value |
|----------|-------|------|---------|------------|------------------|
|[unread]  |book   |0     |zh-hans  |2           |                  |
|----------|-------|------|---------|------------|------------------|

2020-11-19 16:15:22.307 INFO  jdbc.sqltiming Line:373 - select bookfieldf0_.entity_id as entity_i1_6_0_, bookfieldf0_.bundle as bundle2_6_0_, bookfieldf0_.delta 
as delta3_6_0_, bookfieldf0_.field_fenlei_target_id as field_fe4_6_0_, bookfieldf0_.langcode 
as langcode5_6_0_, bookfieldf0_.revision_id as revision6_6_0_ from node__field_fenlei bookfieldf0_ 
where bookfieldf0_.entity_id=2 
 {executed in 0 msec}
2020-11-19 16:15:22.308 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------------|---------|------------|
|entity_id |bundle |delta |field_fenlei_target_id |langcode |revision_id |
|----------|-------|------|-----------------------|---------|------------|
|[unread]  |book   |0     |1                      |zh-hans  |2           |
|----------|-------|------|-----------------------|---------|------------|

2020-11-19 16:15:22.310 INFO  jdbc.sqltiming Line:373 - select nodefieldf0_.entity_id as entity_i1_15_0_, nodefieldf0_.bundle as bundle2_15_0_, nodefieldf0_.delta 
as delta3_15_0_, nodefieldf0_.field_fenlei_target_id as field_fe4_15_0_, nodefieldf0_.langcode 
as langcode5_15_0_, nodefieldf0_.revision_id as revision6_15_0_ from node_revision__field_fenlei 
nodefieldf0_ where nodefieldf0_.entity_id=2 
 {executed in 0 msec}
2020-11-19 16:15:22.311 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------------|---------|------------|
|entity_id |bundle |delta |field_fenlei_target_id |langcode |revision_id |
|----------|-------|------|-----------------------|---------|------------|
|[unread]  |book   |0     |1                      |zh-hans  |2           |
|----------|-------|------|-----------------------|---------|------------|

2020-11-19 16:15:23.006 INFO  jdbc.sqltiming Line:373 - select bookchecke0_.item_id as item_id1_2_, bookchecke0_.got as got2_2_, bookchecke0_.name 
as name3_2_ from book_check bookchecke0_ where bookchecke0_.item_id=71438951108017 and bookchecke0_.name='net_content' 
 {executed in 5 msec}
2020-11-19 16:15:23.007 INFO  jdbc.resultsettable Line:610 - 
|--------|----|-----|
|item_id |got |name |
|--------|----|-----|
|--------|----|-----|

2020-11-19 16:16:06.259 INFO  jdbc.sqltiming Line:373 - select bookchecke0_.item_id as item_id1_2_0_, bookchecke0_.got as got2_2_0_, bookchecke0_.name 
as name3_2_0_ from book_check bookchecke0_ where bookchecke0_.item_id=71438951108017 
 {executed in 0 msec}
2020-11-19 16:16:06.259 INFO  jdbc.resultsettable Line:610 - 
|--------|----|-----|
|item_id |got |name |
|--------|----|-----|
|--------|----|-----|

2020-11-19 16:16:06.265 INFO  jdbc.sqltiming Line:373 - insert into book_check (got, name, item_id) values (1, 'net_content', 71438951108017) 
 {executed in 0 msec}
2020-11-19 16:16:06.269 INFO  jdbc.sqltiming Line:373 - select bookchecke0_.item_id as item_id1_2_, bookchecke0_.got as got2_2_, bookchecke0_.name 
as name3_2_ from book_check bookchecke0_ where bookchecke0_.item_id=71438951108017 and bookchecke0_.name='media' 
 {executed in 0 msec}
2020-11-19 16:16:06.269 INFO  jdbc.resultsettable Line:610 - 
|--------|----|-----|
|item_id |got |name |
|--------|----|-----|
|--------|----|-----|

2020-11-19 16:16:06.676 INFO  jdbc.sqltiming Line:373 - update book_check set got=1, name='media' where item_id=71438951108017 
 {executed in 0 msec}
2020-11-19 16:16:06.684 INFO  jdbc.sqltiming Line:373 - select bookfieldf0_.entity_id as entity_i1_7_, bookfieldf0_.bundle as bundle2_7_, bookfieldf0_.delta 
as delta3_7_, bookfieldf0_.field_fsid_value as field_fs4_7_, bookfieldf0_.langcode as langcode5_7_, 
bookfieldf0_.revision_id as revision6_7_ from node__field_fsid bookfieldf0_ where bookfieldf0_.field_fsid_value='71438951108017' 
 {executed in 0 msec}
2020-11-19 16:16:06.685 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------|---------|------------|
|entity_id |bundle |delta |field_fsid_value |langcode |revision_id |
|----------|-------|------|-----------------|---------|------------|
|3         |book   |0     |71438951108017   |zh-hans  |3           |
|----------|-------|------|-----------------|---------|------------|

2020-11-19 16:16:06.686 INFO  jdbc.sqltiming Line:373 - select nodeentity0_.nid as nid1_3_, nodeentity0_.langcode as langcode2_3_, nodeentity0_.type 
as type3_3_, nodeentity0_.uuid as uuid4_3_, nodeentity0_.vid as vid5_3_ from node nodeentity0_ 
where nodeentity0_.nid=3 
 {executed in 0 msec}
2020-11-19 16:16:06.687 INFO  jdbc.resultsettable Line:610 - 
|----|---------|-----|-------------------------------------|----|
|nid |langcode |type |uuid                                 |vid |
|----|---------|-----|-------------------------------------|----|
|3   |zh-hans  |book |1ca40684-a6c1-479d-8594-a242029a060e |3   |
|----|---------|-----|-------------------------------------|----|

2020-11-19 16:16:06.689 INFO  jdbc.sqltiming Line:373 - select nodefieldf0_.entity_id as entity_i1_16_0_, nodefieldf0_.bundle as bundle2_16_0_, nodefieldf0_.delta 
as delta3_16_0_, nodefieldf0_.field_fsid_value as field_fs4_16_0_, nodefieldf0_.langcode as 
langcode5_16_0_, nodefieldf0_.revision_id as revision6_16_0_ from node_revision__field_fsid 
nodefieldf0_ where nodefieldf0_.entity_id=3 
 {executed in 1 msec}
2020-11-19 16:16:06.689 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------|---------|------------|
|entity_id |bundle |delta |field_fsid_value |langcode |revision_id |
|----------|-------|------|-----------------|---------|------------|
|[unread]  |book   |0     |71438951108017   |zh-hans  |3           |
|----------|-------|------|-----------------|---------|------------|

2020-11-19 16:16:06.691 INFO  jdbc.sqltiming Line:373 - select bookentity0_.nid as nid1_1_, bookentity0_.bid as bid2_1_, bookentity0_.depth as depth3_1_, 
bookentity0_.has_children as has_chil4_1_, bookentity0_.p1 as p5_1_, bookentity0_.p2 as p6_1_, 
bookentity0_.p3 as p7_1_, bookentity0_.p4 as p8_1_, bookentity0_.p5 as p9_1_, bookentity0_.pid 
as pid10_1_, bookentity0_.weight as weight11_1_ from book bookentity0_ where bookentity0_.nid=3 
 {executed in 0 msec}
2020-11-19 16:16:06.692 INFO  jdbc.resultsettable Line:610 - 
|----|----|------|-------------|---|---|---|---|---|----|-------|
|nid |bid |depth |has_children |p1 |p2 |p3 |p4 |p5 |pid |weight |
|----|----|------|-------------|---|---|---|---|---|----|-------|
|3   |1   |3     |0            |1  |2  |3  |0  |0  |2   |0      |
|----|----|------|-------------|---|---|---|---|---|----|-------|

2020-11-19 16:16:06.694 INFO  jdbc.sqltiming Line:373 - select nodebodyen0_.entity_id as entity_i1_4_, nodebodyen0_.body_value as body_val2_4_, nodebodyen0_.body_summary 
as body_sum3_4_, nodebodyen0_.bundle as bundle4_4_, nodebodyen0_.delta as delta5_4_, nodebodyen0_.body_format 
as body_for6_4_, nodebodyen0_.langcode as langcode7_4_, nodebodyen0_.revision_id as revision8_4_ 
from node__body nodebodyen0_ where nodebodyen0_.entity_id=3 
 {executed in 1 msec}
2020-11-19 16:16:06.704 INFO  jdbc.resultsettable Line:610 - 
|----------||-------------|-------|------|------------|---------|------------|
|entity_id |body_value|body_summary |bundle |delta |body_format |langcode |revision_id |
|----------||-------------|-------|------|------------|---------|------------|
|3         |<div data-slate-editor="true" data-key="928" autocorrect="off" spellcheck="false" data-gramm="false" style="outline: none; white-space: pre-wrap; overflow-wrap: break-word;">
 <div class="se-5b3bdcd9 " data-slate-type="paragraph" data-slate-object="block" data-key="929">
  <span data-slate-object="text" data-key="930"><span data-slate-leaf="true" data-offset-key="930:0" data-first-offset="true"><span data-slate-string="true">你好，我是四火。</span></span></span>
 </div>
 <div class="se-d5bb7d18 " data-slate-type="paragraph" data-slate-object="block" data-key="931">
  <span data-slate-object="text" data-key="932"><span data-slate-leaf="true" data-offset-key="932:0" data-first-offset="true"><span data-slate-string="true">这是这个专栏的最后一讲了。</span></span></span>
 </div>
 <h2 class="se-5fcad9b1" data-slate-type="heading" data-slate-object="block" data-key="933"><span data-slate-object="text" data-key="934"><span data-slate-leaf="true" data-offset-key="934:0" data-first-offset="true"><span data-slate-string="true">回顾一下，我们学到了什么？</span></span></span></h2>
 <div class="se-eb31d66e " data-slate-type="paragraph" data-slate-object="block" data-key="935">
  <span data-slate-object="text" data-key="936"><span data-slate-leaf="true" data-offset-key="936:0" data-first-offset="true"><span data-slate-string="true">现在，是时候来回顾一下我们学过的 Web 全栈树了。这里我按章节进行划分，把每一讲的标题和主要内容做成了一张思维导图，帮助你回顾。</span></span></span>
 </div>
 <div class="se-b9e7b880" data-slate-type="image" data-slate-object="block" data-key="937">
  <img class="se-4334ba90" src="https://static001.geekbang.org/resource/image/29/4a/2961de2a299d887fefa7731dc8d28a4a.png">
 </div>
 <div class="se-f0bd987b " data-slate-type="paragraph" data-slate-object="block" data-key="938">
  <span data-slate-object="text" data-key="939"><span data-slate-leaf="true" data-offset-key="939:0" data-first-offset="true"><span data-slate-string="true">下面我把它展开来，你可以顺着这个展开的内容，回顾自己所学。</span></span></span>
 </div>
 <h3 class="se-3ded67bd" data-slate-type="heading" data-slate-object="block" data-key="940"><span data-slate-object="text" data-key="941"><span data-slate-leaf="true" data-offset-key="941:0" data-first-offset="true"><span data-slate-string="true">第一章：网络协议和 Web 接口</span></span></span></h3>
 <div class="se-b11b2856 " data-slate-type="paragraph" data-slate-object="block" data-key="942">
  <span data-slate-object="text" data-key="943"><span data-slate-leaf="true" data-offset-key="943:0" data-first-offset="true"><span data-slate-string="true">第一章是网络协议和 Web 接口，我以 HTTP 为核心，介绍了它的演进历史、相关技术，以及它的局限性：</span></span></span>
 </div>
 <div class="se-0da04aaf" data-slate-type="list" data-slate-object="block" data-key="944">
  <div class="se-b5582af6 se-4b5d5342" data-slate-type="list-line" data-slate-object="block" data-key="945">
   <span data-slate-object="text" data-key="946"><span data-slate-leaf="true" data-offset-key="946:0" data-first-offset="true"><span data-slate-string="true">对于安全传输方面的局限，我介绍了 HTTPS 的原理；</span></span></span>
  </div>
  <div class="se-807c7aab se-9ac48236" data-slate-type="list-line" data-slate-object="block" data-key="947">
   <span data-slate-object="text" data-key="948"><span data-slate-leaf="true" data-offset-key="948:0" data-first-offset="true"><span data-slate-string="true">对于交互模式上的局限，我介绍了一些服务端推送技术；</span></span></span>
  </div>
  <div class="se-1f2e4218 se-57540395" data-slate-type="list-line" data-slate-object="block" data-key="949">
   <span data-slate-object="text" data-key="950"><span data-slate-leaf="true" data-offset-key="950:0" data-first-offset="true"><span data-slate-string="true">对于无状态连接的局限，在第五章我介绍了客户端和服务端的会话。</span></span></span>
  </div>
 </div>
 <div class="se-c4f6f7b9 " data-slate-type="paragraph" data-slate-object="block" data-key="951">
  <span data-slate-object="text" data-key="952"><span data-slate-leaf="true" data-offset-key="952:0" data-first-offset="true"><span data-slate-string="true">也是从这一章开始，我们开始接触了 push 和 pull 这两个“对立”的套路，对于整个专栏，我们在各个层面的技术中把它们拿出来反复比较，权衡利弊。</span></span></span>
 </div>
 <div class="se-f29e43b1 " data-slate-type="paragraph" data-slate-object="block" data-key="953">
  <span data-slate-object="text" data-key="954"><span data-slate-leaf="true" data-offset-key="954:0" data-first-offset="true"><span data-slate-string="true">对于 Web 接口部分，我从 SOAP 和 REST 所代表的两大设计风格开始，梳理了 Web 接口设计的过程，以及需要考虑的零零总总各个方面。</span></span></span>
 </div>
 <h3 class="se-77b435fe" data-slate-type="heading" data-slate-object="block" data-key="955"><span data-slate-object="text" data-key="956"><span data-slate-leaf="true" data-offset-key="956:0" data-first-offset="true"><span data-slate-string="true">第二章：欢迎来到 MVC 的世界</span></span></span></h3>
 <div class="se-e16f3a5d " data-slate-type="paragraph" data-slate-object="block" data-key="957">
  <span data-slate-object="text" data-key="958"><span data-slate-leaf="true" data-offset-key="958:0" data-first-offset="true"><span data-slate-string="true">第二章我主要针对 MVC 这个对于网站和其它 Web 应用开发来说，最重要的架构和设计模式，介绍演进、分层，并逐层仔细深挖：</span></span></span>
 </div>
 <div class="se-bf3c628f" data-slate-type="list" data-slate-object="block" data-key="959">
  <div class="se-01817fd3 se-25892bc2" data-slate-type="list-line" data-slate-object="block" data-key="960">
   <span data-slate-object="text" data-key="961"><span data-slate-leaf="true" data-offset-key="961:0" data-first-offset="true"><span data-slate-string="true">模型层，我介绍了贫血模型和充血模型，以及常见的 CQRS 模式；</span></span></span>
  </div>
  <div class="se-471c6b55 se-97ca79bc" data-slate-type="list-line" data-slate-object="block" data-key="962">
   <span data-slate-object="text" data-key="963"><span data-slate-leaf="true" data-offset-key="963:0" data-first-offset="true"><span data-slate-string="true">视图层，页面聚合是我们的重点，包括客户端聚合和服务端聚合，特别是模板引擎的工作原理；</span></span></span>
  </div>
  <div class="se-4c30cf6e se-db31c0d4" data-slate-type="list-line" data-slate-object="block" data-key="964">
   <span data-slate-object="text" data-key="965"><span data-slate-leaf="true" data-offset-key="965:0" data-first-offset="true"><span data-slate-string="true">控制器层，我把这一层拆分为几个方面，梳理了控制器在 MVC 架构中的工作步骤。</span></span></span>
  </div>
 </div>
 <div class="se-7866cb7a " data-slate-type="paragraph" data-slate-object="block" data-key="966">
  <span data-slate-object="text" data-key="967"><span data-slate-leaf="true" data-offset-key="967:0" data-first-offset="true"><span data-slate-string="true">之后我们将 MVC 泛化，了解了其它重要的设计模式和套路，包括 AOP 和 IoC，以及实现切面编程所需的代理技术；还有其它著名的 JavaEE 模式，特别是拦截过滤器和数据访问对象模式。</span></span></span>
 </div>
 <h3 class="se-6733a337" data-slate-type="heading" data-slate-object="block" data-key="968"><span data-slate-object="text" data-key="969"><span data-slate-leaf="true" data-offset-key="969:0" data-first-offset="true"><span data-slate-string="true">第三章：从后端到前端</span></span></span></h3>
 <div class="se-00b38802 " data-slate-type="paragraph" data-slate-object="block" data-key="970">
  <span data-slate-object="text" data-key="971"><span data-slate-leaf="true" data-offset-key="971:0" data-first-offset="true"><span data-slate-string="true">第三章主要讲前端技术。首先我从一个大体上俯瞰的角度，阐述了我所理解的前端技术的“不同”，特别是思维模式的不同。</span></span></span>
 </div>
 <div class="se-73606031 " data-slate-type="paragraph" data-slate-object="block" data-key="972">
  <span data-slate-object="text" data-key="973"><span data-slate-leaf="true" data-offset-key="973:0" data-first-offset="true"><span data-slate-string="true">然后我介绍了一些前端技术重要的知识点，比如 JavaScript 面向对象，包括封装、继承和多态的实现方式，也包括对象创建的原理。接着我以 React 和 Angular，以及它们的重要特性为例，介绍了百花齐放的前端 MVC 框架为我们带来的变革。</span></span></span>
 </div>
 <div class="se-0d6ef2c8 " data-slate-type="paragraph" data-slate-object="block" data-key="974">
  <span data-slate-object="text" data-key="975"><span data-slate-leaf="true" data-offset-key="975:0" data-first-offset="true"><span data-slate-string="true">在页面设计和交互布局一讲中，我使用实际例子介绍了页面设计方面的一些原则和思路，包括渐进增强和优雅降级等等。</span></span></span>
 </div>
 <div class="se-b064b7e6 " data-slate-type="paragraph" data-slate-object="block" data-key="976">
  <span data-slate-object="text" data-key="977"><span data-slate-leaf="true" data-offset-key="977:0" data-first-offset="true"><span data-slate-string="true">接着在数据可视化一讲中，我仔细比较了当今最重要的两种 Web 绘图标准，SVG 和 Canvas，并介绍了 Flot 和 D3.js 这两个可视化的库。</span></span></span>
 </div>
 <div class="se-71622bf5 " data-slate-type="paragraph" data-slate-object="block" data-key="978">
  <span data-slate-object="text" data-key="979"><span data-slate-leaf="true" data-offset-key="979:0" data-first-offset="true"><span data-slate-string="true">最后是 JavaScript 异步编程的技术，我们重新回归 JavaScript，我梳理了最重要的几个技术要点，这也是这一章相对比较难的一讲。</span></span></span>
 </div>
 <h3 class="se-007fa24e" data-slate-type="heading" data-slate-object="block" data-key="980"><span data-slate-object="text" data-key="981"><span data-slate-leaf="true" data-offset-key="981:0" data-first-offset="true"><span data-slate-string="true">第四章：数据持久化</span></span></span></h3>
 <div class="se-86711bed " data-slate-type="paragraph" data-slate-object="block" data-key="982">
  <span data-slate-object="text" data-key="983"><span data-slate-leaf="true" data-offset-key="983:0" data-first-offset="true"><span data-slate-string="true">继续往技术栈的下方挖，数据持久化。在这一章的一开始，我首先介绍了这一层中互联网应用最广泛的技术之一——缓存，讲了它的本质、应用和常见的坑，以及缓存框架的设计要点。</span></span></span>
 </div>
 <div class="se-d8f08ed0 " data-slate-type="paragraph" data-slate-object="block" data-key="984">
  <span data-slate-object="text" data-key="985"><span data-slate-leaf="true" data-offset-key="985:0" data-first-offset="true"><span data-slate-string="true">接着是数据一致性，我介绍了它的概念，还有围绕它而产生的常见架构技术。有了数据一致性的基础知识，我们就进一步学习了 CAP 的原理，包括它的本质、常见的误区，以及我们该怎样根据 CAP 去做技术选型。</span></span></span>
 </div>
 <div class="se-b6d1c6e3 " data-slate-type="paragraph" data-slate-object="block" data-key="986">
  <span data-slate-object="text" data-key="987"><span data-slate-leaf="true" data-offset-key="987:0" data-first-offset="true"><span data-slate-string="true">最后则是数据持久层的设计，包括理论部分、关系数据库和非关系数据库的一些设计要点；以及实例部分，包括几个范例系统：搜索引擎、地理信息系统和电商网站。</span></span></span>
 </div>
 <h3 class="se-4688dd01" data-slate-type="heading" data-slate-object="block" data-key="988"><span data-slate-object="text" data-key="989"><span data-slate-leaf="true" data-offset-key="989:0" data-first-offset="true"><span data-slate-string="true">第五章：寻找最佳实践</span></span></span></h3>
 <div class="se-a9c3f076 " data-slate-type="paragraph" data-slate-object="block" data-key="990">
  <span data-slate-object="text" data-key="991"><span data-slate-leaf="true" data-offset-key="991:0" data-first-offset="true"><span data-slate-string="true">在第五章中，我们跳出了全栈技术纵深方向上具体某一层的限制，而是从一个横向的角度去分析相关的实践技术。</span></span></span>
 </div>
 <div class="se-ff8dfc10 " data-slate-type="paragraph" data-slate-object="block" data-key="992">
  <span data-slate-object="text" data-key="993"><span data-slate-leaf="true" data-offset-key="993:0" data-first-offset="true"><span data-slate-string="true">在 Ops 三部曲中，我分别介绍了：</span></span></span>
 </div>
 <div class="se-e2b2268d" data-slate-type="list" data-slate-object="block" data-key="994">
  <div class="se-e673f0a4 se-14e1ba7a" data-slate-type="list-line" data-slate-object="block" data-key="995">
   <span data-slate-object="text" data-key="996"><span data-slate-leaf="true" data-offset-key="996:0" data-first-offset="true"><span data-slate-string="true">配置管理，有哪些配置管理的技术，我们该选择怎样的方式去做配置管理；</span></span></span>
  </div>
  <div class="se-14cc6eaf se-00479ed7" data-slate-type="list-line" data-slate-object="block" data-key="997">
   <span data-slate-object="text" data-key="998"><span data-slate-leaf="true" data-offset-key="998:0" data-first-offset="true"><span data-slate-string="true">集群部署，我介绍了集群部署的方式，部署下的负载分担原理和策略算法，以及集群部署下常见的话题——Session 和 Cookie；</span></span></span>
  </div>
  <div class="se-2e10591e se-671b3fc9" data-slate-type="list-line" data-slate-object="block" data-key="999">
   <span data-slate-object="text" data-key="1000"><span data-slate-leaf="true" data-offset-key="1000:0" data-first-offset="true"><span data-slate-string="true">测试和发布，围绕 CI/CD 介绍了 pipeline 的含义、内容和挑战，以及不同类型的测试在其上集成的方式。</span></span></span>
  </div>
 </div>
 <div class="se-3c82a969 " data-slate-type="paragraph" data-slate-object="block" data-key="1001">
  <span data-slate-object="text" data-key="1002"><span data-slate-leaf="true" data-offset-key="1002:0" data-first-offset="true"><span data-slate-string="true">在网络安全那一讲中，我着重介绍了常见的 Web 攻击方式的原理，包括 XSS、CSRF、SQL 注入、HTTP 和 DNS 劫持，以及 DDoS。</span></span></span>
 </div>
 <div class="se-74eb6730 " data-slate-type="paragraph" data-slate-object="block" data-key="1003">
  <span data-slate-object="text" data-key="1004"><span data-slate-leaf="true" data-offset-key="1004:0" data-first-offset="true"><span data-slate-string="true">最后则是 SEO 这一讲，我介绍了 SEO 和白帽、黑帽的含义，以及一些常见的 SEO 技术，包括站内优化和站外优化。</span></span></span>
 </div>
 <h3 class="se-f171329f" data-slate-type="heading" data-slate-object="block" data-key="1005"><span data-slate-object="text" data-key="1006"><span data-slate-leaf="true" data-offset-key="1006:0" data-first-offset="true"><span data-slate-string="true">第六章：专题</span></span></span></h3>
 <div class="se-35737743 " data-slate-type="paragraph" data-slate-object="block" data-key="1007">
  <span data-slate-object="text" data-key="1008"><span data-slate-leaf="true" data-offset-key="1008:0" data-first-offset="true"><span data-slate-string="true">在第六章，我选取了四大专题分别展开介绍。</span></span></span>
 </div>
 <div class="se-acba53a6 " data-slate-type="paragraph" data-slate-object="block" data-key="1009">
  <span data-slate-object="text" data-key="1010"><span data-slate-leaf="true" data-offset-key="1010:0" data-first-offset="true"><span data-slate-string="true">在网站性能优化一讲，首先我介绍了一些基础知识，包括性能优化和软件设计的关系，性能优化的关注点，性能测试和指标，以及寻找性能瓶颈的思路；接着按照产品架构调整、后端和持久层优化，以及前端和网络层优化这样三个部分，分别介绍相应的常见性能优化技术。</span></span></span>
 </div>
 <div class="se-f3034b0c " data-slate-type="paragraph" data-slate-object="block" data-key="1011">
  <span data-slate-object="text" data-key="1012"><span data-slate-leaf="true" data-offset-key="1012:0" data-first-offset="true"><span data-slate-string="true">在全栈开发中的算法这一讲，我以这样几大场景为主线，介绍了一些重要的算法：</span></span></span>
 </div>
 <div class="se-a41ce5dd" data-slate-type="list" data-slate-object="block" data-key="1013">
  <div class="se-fe7ed91f se-9d677a7b" data-slate-type="list-line" data-slate-object="block" data-key="1014">
   <span data-slate-object="text" data-key="1015"><span data-slate-leaf="true" data-offset-key="1015:0" data-first-offset="true"><span data-slate-string="true">流量控制算法，包括基于固定时间窗口和滑动时间窗口的流量控制，漏桶算法和令牌桶算法；</span></span></span>
  </div>
  <div class="se-00e5b583 se-771effbd" data-slate-type="list-line" data-slate-object="block" data-key="1016">
   <span data-slate-object="text" data-key="1017"><span data-slate-leaf="true" data-offset-key="1017:0" data-first-offset="true"><span data-slate-string="true">Diffie–Hellman 密钥交换算法，从中我们学到了数学上超大质数在安全领域的一个典型应用；</span></span></span>
  </div>
  <div class="se-ee8af567 se-9571a9e2" data-slate-type="list-line" data-slate-object="block" data-key="1018">
   <span data-slate-object="text" data-key="1019"><span data-slate-leaf="true" data-offset-key="1019:0" data-first-offset="true"><span data-slate-string="true">数据压缩算法，包括哈夫曼编码、RLE 编码和算术编码，从而帮助我们理解，如今繁多的压缩技术的最基本的原理。</span></span></span>
  </div>
 </div>
 <div class="se-7093b0ec " data-slate-type="paragraph" data-slate-object="block" data-key="1020">
  <span data-slate-object="text" data-key="1021"><span data-slate-leaf="true" data-offset-key="1021:0" data-first-offset="true"><span data-slate-string="true">在分页这一讲中，我讲了分页的分类和几种实现分页的技术，最后则是分页的常见问题——重复数据，它背后可能的原因和相应的解决方案。</span></span></span>
 </div>
 <div class="se-96b37b4e " data-slate-type="paragraph" data-slate-object="block" data-key="1022">
  <span data-slate-object="text" data-key="1023"><span data-slate-leaf="true" data-offset-key="1023:0" data-first-offset="true"><span data-slate-string="true">在最后的 XML、JSON 和 YAML 这一讲，我把这几个数据承载格式的优劣进行了仔细的比较，包括简洁和严谨的程度，与 JavaScript 的亲和力，schema、转义方式和路径表达式等等。</span></span></span>
 </div>
 <h3 class="se-f9868207" data-slate-type="heading" data-slate-object="block" data-key="1024"><span data-slate-object="text" data-key="1025"><span data-slate-leaf="true" data-offset-key="1025:0" data-first-offset="true"><span data-slate-string="true">其它</span></span></span></h3>
 <div class="se-522f870c " data-slate-type="paragraph" data-slate-object="block" data-key="1026">
  <span data-slate-object="text" data-key="1027"><span data-slate-leaf="true" data-offset-key="1027:0" data-first-offset="true"><span data-slate-string="true">以上是技术方面的“硬通货”，对于非技术方面，我通过特别放送等等的形式，讨论了一些我认为比较重要，尤其是对于 Web 全栈工程师来说比较重要的话题。</span></span></span>
 </div>
 <div class="se-5514c9f0" data-slate-type="list" data-slate-object="block" data-key="1028">
  <div class="se-acc1206e se-9b366da8" data-slate-type="list-line" data-slate-object="block" data-key="1029">
   <span data-slate-object="text" data-key="1030"><span data-slate-leaf="true" data-offset-key="1030:0" data-first-offset="true"><span data-slate-string="true">怎样去理解 Web 全栈技术，全栈技术应该怎样学习，需要遵从怎样的学习策略；</span></span></span>
  </div>
  <div class="se-1cc2d59d se-cc136f77" data-slate-type="list-line" data-slate-object="block" data-key="1031">
   <span data-slate-object="text" data-key="1032"><span data-slate-leaf="true" data-offset-key="1032:0" data-first-offset="true"><span data-slate-string="true">北美全栈工程师的招聘，招人会秉持怎样的理念，整个流程是怎样的；</span></span></span>
  </div>
  <div class="se-a09c6af4 se-62cddb5e" data-slate-type="list-line" data-slate-object="block" data-key="1033">
   <span data-slate-object="text" data-key="1034"><span data-slate-leaf="true" data-offset-key="1034:0" data-first-offset="true"><span data-slate-string="true">技术修炼应该怎样进行取舍和选择，哪些技术应该深挖，哪些则可以点到即止；</span></span></span>
  </div>
  <div class="se-2a5cc4e9 se-bc442791" data-slate-type="list-line" data-slate-object="block" data-key="1035">
   <span data-slate-object="text" data-key="1036"><span data-slate-leaf="true" data-offset-key="1036:0" data-first-offset="true"><span data-slate-string="true">全栈团队的构成一般是怎样的，有哪些重要的角色；</span></span></span>
  </div>
  <div class="se-a8549dc1 se-ec9d37f4" data-slate-type="list-line" data-slate-object="block" data-key="1037">
   <span data-slate-object="text" data-key="1038"><span data-slate-leaf="true" data-offset-key="1038:0" data-first-offset="true"><span data-slate-string="true">代码审查为什么不可或缺，有哪些争议和好处，又有哪些技巧；</span></span></span>
  </div>
  <div class="se-b85846fc se-3fc8908e" data-slate-type="list-line" data-slate-object="block" data-key="1039">
   <span data-slate-object="text" data-key="1040"><span data-slate-leaf="true" data-offset-key="1040:0" data-first-offset="true"><span data-slate-string="true">程序员为什么要学英语，重要性在哪里，又有哪些好办法；</span></span></span>
  </div>
  <div class="se-e86a0ac9 se-8b4943ad" data-slate-type="list-line" data-slate-object="block" data-key="1041">
   <span data-slate-object="text" data-key="1042"><span data-slate-leaf="true" data-offset-key="1042:0" data-first-offset="true"><span data-slate-string="true">作为 Web 全栈工程师，我们还有哪些发展方向可以考虑，我们为什么需要让项目和团队也“全栈化”？</span></span></span>
  </div>
 </div>
 <h2 class="se-968e7cd7" data-slate-type="heading" data-slate-object="block" data-key="1043"><span data-slate-object="text" data-key="1044"><span data-slate-leaf="true" data-offset-key="1044:0" data-first-offset="true"><span data-slate-string="true">继续提升的重要两步</span></span></span></h2>
 <div class="se-100836cc " data-slate-type="paragraph" data-slate-object="block" data-key="1045">
  <span data-slate-object="text" data-key="1046"><span data-slate-leaf="true" data-offset-key="1046:0" data-first-offset="true"><span data-slate-string="true">对于我们专栏已经覆盖到的这些技能树的枝枝丫丫，我还想特别强调两个方面，这两个方面其实我们已经谈到过了，但是我觉得在今天，我们需要再拿出来稍稍强化一下。因为在我看来，它们有些特殊——它们对于程序员进一步发展至关重要，它们也是“成为更好的全栈工程师”所必须迈出的两步，但是谈论的人却很少。</span></span></span>
 </div>
 <h3 class="se-025c273f" data-slate-type="heading" data-slate-object="block" data-key="1047"><span data-slate-object="text" data-key="1048"><span data-slate-leaf="true" data-offset-key="1048:0" data-first-offset="true"><span data-slate-string="true">1. 从做项目到做产品</span></span></span></h3>
 <div class="se-73e5bd13 " data-slate-type="paragraph" data-slate-object="block" data-key="1049">
  <span data-slate-object="text" data-key="1050"><span data-slate-leaf="true" data-offset-key="1050:0" data-first-offset="true"><span data-slate-string="true">你还记得吗？ </span></span></span><a data-slate-type="link" data-slate-object="inline" data-key="1051" class="se-9a604d3a se-490c3d6a"><span data-slate-object="text" data-key="1052"><span data-slate-leaf="true" data-offset-key="1052:0" data-first-offset="true"><span data-slate-string="true">[第 28 讲]</span></span></span></a><span data-slate-object="text" data-key="1053"><span data-slate-leaf="true" data-offset-key="1053:0" data-first-offset="true"><span data-slate-string="true"> 的选修课堂，我介绍了程序员独立性的几个阶段，不知道你属于哪一个阶段呢？作为职业生涯进阶的一部分，如果你还停留在“做项目”的阶段，那么你需要在某一天切换到“做产品”的模式上来，完成程序员独立性的升级。事实上，“做项目”，终归只是“做产品”整个过程中很小的一部分，只有对于产品多个阶段的不断地迭代、回馈，程序员很多方面的认识才能不断进化。</span></span></span>
 </div>
 <div class="se-f6eeb795 " data-slate-type="paragraph" data-slate-object="block" data-key="1054">
  <span data-slate-object="text" data-key="1055"><span data-slate-leaf="true" data-offset-key="1055:0" data-first-offset="true"><span data-slate-string="true">举个例子，对于程序员来说，oncall（定位和修复线上问题）就是“做产品”必经的一环，也是团队“吃自己的狗食”的重要一环。这个过程可以反哺开发阶段，没有这样的过程，就不会真正体会到代码质量的重要性，就不会彻底意识到单元测试的重要性，也不会对代码评审的必要性有深刻的认识。</span></span></span>
 </div>
 <div class="se-88a38031 " data-slate-type="paragraph" data-slate-object="block" data-key="1056">
  <span data-slate-object="text" data-key="1057"><span data-slate-leaf="true" data-offset-key="1057:0" data-first-offset="true"><span data-slate-string="true">因此，如果你还只有“做项目”的经验，我建议你，在未来给自己寻找做产品的机会。</span></span></span>
 </div>
 <h3 class="se-7305d892" data-slate-type="heading" data-slate-object="block" data-key="1058"><span data-slate-object="text" data-key="1059"><span data-slate-leaf="true" data-offset-key="1059:0" data-first-offset="true"><span data-slate-string="true">2. 保持技术上的包容心</span></span></span></h3>
 <div class="se-02fdc4c7 " data-slate-type="paragraph" data-slate-object="block" data-key="1060">
  <span data-slate-object="text" data-key="1061"><span data-slate-leaf="true" data-offset-key="1061:0" data-first-offset="true"><span data-slate-string="true">在 </span></span></span><a data-slate-type="link" data-slate-object="inline" data-key="1062" class="se-9a604d3a se-490c3d6a"><span data-slate-object="text" data-key="1063"><span data-slate-leaf="true" data-offset-key="1063:0" data-first-offset="true"><span data-slate-string="true">[第 14 讲]</span></span></span></a><span data-slate-object="text" data-key="1064"><span data-slate-leaf="true" data-offset-key="1064:0" data-first-offset="true"><span data-slate-string="true"> 我就谈到过这个给自己“贴标签”的问题，有些程序员工作没几年，无论是有意识还是无意识地，就已经给自己贴上了过于明确的技术分类的标签。</span></span></span>
 </div>
 <div class="se-9e772ca3 " data-slate-type="paragraph" data-slate-object="block" data-key="1065">
  <span data-slate-object="text" data-key="1066"><span data-slate-leaf="true" data-offset-key="1066:0" data-first-offset="true"><span data-slate-string="true">比如说，给自己贴上“PHP 工程师”的标签，理由是觉得 PHP 是最好的语言，因此求职的时候非 PHP 的岗位一概不考虑；比如，只想做 Billing 系统，其它的业务领域和项目一概不考虑；再比如，极度强调自己是“技术人”，而特别排斥管理技巧、沟通合作能力等这些被鄙视为“非干货”、“非实战”的内容，可是对于几乎所有的职业生涯技术路线来说，它们其实都是非常重要，且绕不开的槛。</span></span></span>
 </div>
 <div class="se-4bda2846 " data-slate-type="paragraph" data-slate-object="block" data-key="1067">
  <span data-slate-object="text" data-key="1068"><span data-slate-leaf="true" data-offset-key="1068:0" data-first-offset="true"><span data-slate-string="true">再说说具体的技术，每个人都有偏好，但是不要因为自己的偏好，在技术的选择上失去程序员应有的理性判断，甚至将应当去接纳和学习的技术拒之门外。因为你也不知道哪一天，一个新领域、一门新技术会像浪潮一样涌来，就像几年前的云计算，这两年的区块链。只有那些有着包容心的程序员，才能去接纳和抓住机会。这也正如我在 </span></span></span><a data-slate-type="link" data-slate-object="inline" data-key="1069" class="se-9a604d3a se-490c3d6a"><span data-slate-object="text" data-key="1070"><span data-slate-leaf="true" data-offset-key="1070:0" data-first-offset="true"><span data-slate-string="true">[开篇词]</span></span></span></a><span data-slate-object="text" data-key="1071"><span data-slate-leaf="true" data-offset-key="1071:0" data-first-offset="true"><span data-slate-string="true"> 中所说的，最终也许我们需要“学得精”，但是一开始我们一定要“学得杂”。</span></span></span>
 </div>
 <h2 class="se-738cea3a" data-slate-type="heading" data-slate-object="block" data-key="1072"><span data-slate-object="text" data-key="1073"><span data-slate-leaf="true" data-offset-key="1073:0" data-first-offset="true"><span data-slate-string="true">送君千里，终须一别</span></span></span></h2>
 <div class="se-2a3e61a7 " data-slate-type="paragraph" data-slate-object="block" data-key="1074">
  <span data-slate-object="text" data-key="1075"><span data-slate-leaf="true" data-offset-key="1075:0" data-first-offset="true"><span data-slate-string="true">任何一段旅程都有终点，这个专栏也不例外。</span></span></span>
 </div>
 <div class="se-6fe3f139 " data-slate-type="paragraph" data-slate-object="block" data-key="1076">
  <span data-slate-object="text" data-key="1077"><span data-slate-leaf="true" data-offset-key="1077:0" data-first-offset="true"><span data-slate-string="true">今天，你学到了这里，我最想大声地和你说一句话——祝贺你！从试读到购买，再到完整学习，我相信你已经一马当先，击败了一些人。现在，我希望你可以继续一马当先，不止在这个专栏，还在你今后的学习、工作和生活中。</span></span></span>
 </div>
 <div class="se-43602414 " data-slate-type="paragraph" data-slate-object="block" data-key="1078">
  <span data-slate-object="text" data-key="1079"><span data-slate-leaf="true" data-offset-key="1079:0" data-first-offset="true"><span data-slate-string="true">回头看，整个专栏正文部分共计 40 讲，全部加起来有二十多万字。如果在一开始写专栏的时候跟我说，我会做到这个程度，我一定不相信。在这个过程当中，从主题选择、大纲确定、内容试写，到正式写作、绘图、审校、录音，整个过程确实让我颇为疲惫。一篇文章耗时最长的部分并非写作，而是内容选择和构思，比如怎样让你的收获最大化，得到更加通用的原理、套路 ，而不是停留在某个单一的技术表面上。但是，就像我在专栏上线以前想的那样，我觉得这是一件自己可以尽量认真做好的、很有意义的事情。现在看起来，我觉得可以稍微松口气了。</span></span></span>
 </div>
 <div class="se-006c2d3e " data-slate-type="paragraph" data-slate-object="block" data-key="1080">
  <span data-slate-object="text" data-key="1081"><span data-slate-leaf="true" data-offset-key="1081:0" data-first-offset="true"><span data-slate-string="true">在这里，我要说，感谢你可以阅读这个专栏，并且特别感谢那些积极在留言区交流的朋友，关于全栈的内容，我们还可以继续在留言区沟通，也欢迎你访问我的</span></span></span><a data-slate-type="link" data-slate-object="inline" data-key="1082" class="se-9a604d3a se-490c3d6a"><span data-slate-object="text" data-key="1083"><span data-slate-leaf="true" data-offset-key="1083:0" data-first-offset="true"><span data-slate-string="true">个人博客</span></span></span></a><span data-slate-object="text" data-key="1084"><span data-slate-leaf="true" data-offset-key="1084:0" data-first-offset="true"><span data-slate-string="true">，和我继续交流。</span></span></span>
 </div>
 <div class="se-a6a94ca4 " data-slate-type="paragraph" data-slate-object="block" data-key="1085">
  <span data-slate-object="text" data-key="1086"><span data-slate-leaf="true" data-offset-key="1086:0" data-first-offset="true"><span data-slate-string="true">世界变化太快，技术发展太快，我们“被迫”成为了全栈工程师。</span></span></span>
 </div>
 <div class="se-86221bdc " data-slate-type="paragraph" data-slate-object="block" data-key="1087">
  <span data-slate-object="text" data-key="1088"><span data-slate-leaf="true" data-offset-key="1088:0" data-first-offset="true"><span class="se-743dcd75" data-slate-type="bold" data-slate-object="mark"><span data-slate-string="true">全栈，不只是一种技术分类，还代表了一种态度：理性、包容、好学。</span></span></span></span><span data-slate-object="text" data-key="1089"><span data-slate-leaf="true" data-offset-key="1089:0" data-first-offset="true"><span data-slate-string="true">希望你可以从这个专栏得到你想要的，但更多的收获，需要你在线下继续努力。毕竟，《全栈工程师修炼指南》这个专栏结束了，而你的全栈之路却才刚刚开始。</span></span></span>
 </div>
 <div class="se-1b9ef6e9 " data-slate-type="paragraph" data-slate-object="block" data-key="1090">
  <span data-slate-object="text" data-key="1091"><span data-slate-leaf="true" data-offset-key="1091:0" data-first-offset="true"><span data-slate-string="true">好，我是四火，我们后会有期！</span></span></span>
 </div>
 <div class="se-429fd270 " data-slate-type="paragraph" data-slate-object="block" data-key="1092">
  <span data-slate-object="text" data-key="1093"><span data-slate-leaf="true" data-offset-key="1093:0" data-first-offset="true"><span class="se-7e735c66" data-slate-type="primary" data-slate-object="mark"><span data-slate-string="true">最后，文末有一份调查问卷，希望你可以抽出两分钟的时间填写一下。我会认真倾听你对这个专栏的意见或者建议，期待你的反馈！</span></span></span></span>
 </div>
 <div class="se-ae26b95d" data-slate-type="image" data-slate-object="block" data-key="1094">
  <a href="https://jinshuju.net/f/514fSy"><img class="se-c1613d83" src="https://static001.geekbang.org/resource/image/3f/3d/3f7b46f38bc0603c33fb4bf299d6763d.jpg"></a>
 </div>
</div> |             |book   |0     |full_html   |zh-hans  |3           |
|----------||-------------|-------|------|------------|---------|------------|

2020-11-19 16:16:06.708 INFO  jdbc.sqltiming Line:373 - select nodebodyre0_.entity_id as entity_i1_13_0_, nodebodyre0_.body_value as body_val2_13_0_, 
nodebodyre0_.body_summary as body_sum3_13_0_, nodebodyre0_.bundle as bundle4_13_0_, nodebodyre0_.delta 
as delta5_13_0_, nodebodyre0_.body_format as body_for6_13_0_, nodebodyre0_.langcode as langcode7_13_0_, 
nodebodyre0_.revision_id as revision8_13_0_ from node_revision__body nodebodyre0_ where nodebodyre0_.entity_id=3 
 {executed in 1 msec}
2020-11-19 16:16:06.715 INFO  jdbc.resultsettable Line:610 - 
|----------||-------------|-------|------|------------|---------|------------|
|entity_id |body_value|body_summary |bundle |delta |body_format |langcode |revision_id |
|----------||-------------|-------|------|------------|---------|------------|
|[unread]  |<div data-slate-editor="true" data-key="928" autocorrect="off" spellcheck="false" data-gramm="false" style="outline: none; white-space: pre-wrap; overflow-wrap: break-word;">
 <div class="se-5b3bdcd9 " data-slate-type="paragraph" data-slate-object="block" data-key="929">
  <span data-slate-object="text" data-key="930"><span data-slate-leaf="true" data-offset-key="930:0" data-first-offset="true"><span data-slate-string="true">你好，我是四火。</span></span></span>
 </div>
 <div class="se-d5bb7d18 " data-slate-type="paragraph" data-slate-object="block" data-key="931">
  <span data-slate-object="text" data-key="932"><span data-slate-leaf="true" data-offset-key="932:0" data-first-offset="true"><span data-slate-string="true">这是这个专栏的最后一讲了。</span></span></span>
 </div>
 <h2 class="se-5fcad9b1" data-slate-type="heading" data-slate-object="block" data-key="933"><span data-slate-object="text" data-key="934"><span data-slate-leaf="true" data-offset-key="934:0" data-first-offset="true"><span data-slate-string="true">回顾一下，我们学到了什么？</span></span></span></h2>
 <div class="se-eb31d66e " data-slate-type="paragraph" data-slate-object="block" data-key="935">
  <span data-slate-object="text" data-key="936"><span data-slate-leaf="true" data-offset-key="936:0" data-first-offset="true"><span data-slate-string="true">现在，是时候来回顾一下我们学过的 Web 全栈树了。这里我按章节进行划分，把每一讲的标题和主要内容做成了一张思维导图，帮助你回顾。</span></span></span>
 </div>
 <div class="se-b9e7b880" data-slate-type="image" data-slate-object="block" data-key="937">
  <img class="se-4334ba90" src="https://static001.geekbang.org/resource/image/29/4a/2961de2a299d887fefa7731dc8d28a4a.png">
 </div>
 <div class="se-f0bd987b " data-slate-type="paragraph" data-slate-object="block" data-key="938">
  <span data-slate-object="text" data-key="939"><span data-slate-leaf="true" data-offset-key="939:0" data-first-offset="true"><span data-slate-string="true">下面我把它展开来，你可以顺着这个展开的内容，回顾自己所学。</span></span></span>
 </div>
 <h3 class="se-3ded67bd" data-slate-type="heading" data-slate-object="block" data-key="940"><span data-slate-object="text" data-key="941"><span data-slate-leaf="true" data-offset-key="941:0" data-first-offset="true"><span data-slate-string="true">第一章：网络协议和 Web 接口</span></span></span></h3>
 <div class="se-b11b2856 " data-slate-type="paragraph" data-slate-object="block" data-key="942">
  <span data-slate-object="text" data-key="943"><span data-slate-leaf="true" data-offset-key="943:0" data-first-offset="true"><span data-slate-string="true">第一章是网络协议和 Web 接口，我以 HTTP 为核心，介绍了它的演进历史、相关技术，以及它的局限性：</span></span></span>
 </div>
 <div class="se-0da04aaf" data-slate-type="list" data-slate-object="block" data-key="944">
  <div class="se-b5582af6 se-4b5d5342" data-slate-type="list-line" data-slate-object="block" data-key="945">
   <span data-slate-object="text" data-key="946"><span data-slate-leaf="true" data-offset-key="946:0" data-first-offset="true"><span data-slate-string="true">对于安全传输方面的局限，我介绍了 HTTPS 的原理；</span></span></span>
  </div>
  <div class="se-807c7aab se-9ac48236" data-slate-type="list-line" data-slate-object="block" data-key="947">
   <span data-slate-object="text" data-key="948"><span data-slate-leaf="true" data-offset-key="948:0" data-first-offset="true"><span data-slate-string="true">对于交互模式上的局限，我介绍了一些服务端推送技术；</span></span></span>
  </div>
  <div class="se-1f2e4218 se-57540395" data-slate-type="list-line" data-slate-object="block" data-key="949">
   <span data-slate-object="text" data-key="950"><span data-slate-leaf="true" data-offset-key="950:0" data-first-offset="true"><span data-slate-string="true">对于无状态连接的局限，在第五章我介绍了客户端和服务端的会话。</span></span></span>
  </div>
 </div>
 <div class="se-c4f6f7b9 " data-slate-type="paragraph" data-slate-object="block" data-key="951">
  <span data-slate-object="text" data-key="952"><span data-slate-leaf="true" data-offset-key="952:0" data-first-offset="true"><span data-slate-string="true">也是从这一章开始，我们开始接触了 push 和 pull 这两个“对立”的套路，对于整个专栏，我们在各个层面的技术中把它们拿出来反复比较，权衡利弊。</span></span></span>
 </div>
 <div class="se-f29e43b1 " data-slate-type="paragraph" data-slate-object="block" data-key="953">
  <span data-slate-object="text" data-key="954"><span data-slate-leaf="true" data-offset-key="954:0" data-first-offset="true"><span data-slate-string="true">对于 Web 接口部分，我从 SOAP 和 REST 所代表的两大设计风格开始，梳理了 Web 接口设计的过程，以及需要考虑的零零总总各个方面。</span></span></span>
 </div>
 <h3 class="se-77b435fe" data-slate-type="heading" data-slate-object="block" data-key="955"><span data-slate-object="text" data-key="956"><span data-slate-leaf="true" data-offset-key="956:0" data-first-offset="true"><span data-slate-string="true">第二章：欢迎来到 MVC 的世界</span></span></span></h3>
 <div class="se-e16f3a5d " data-slate-type="paragraph" data-slate-object="block" data-key="957">
  <span data-slate-object="text" data-key="958"><span data-slate-leaf="true" data-offset-key="958:0" data-first-offset="true"><span data-slate-string="true">第二章我主要针对 MVC 这个对于网站和其它 Web 应用开发来说，最重要的架构和设计模式，介绍演进、分层，并逐层仔细深挖：</span></span></span>
 </div>
 <div class="se-bf3c628f" data-slate-type="list" data-slate-object="block" data-key="959">
  <div class="se-01817fd3 se-25892bc2" data-slate-type="list-line" data-slate-object="block" data-key="960">
   <span data-slate-object="text" data-key="961"><span data-slate-leaf="true" data-offset-key="961:0" data-first-offset="true"><span data-slate-string="true">模型层，我介绍了贫血模型和充血模型，以及常见的 CQRS 模式；</span></span></span>
  </div>
  <div class="se-471c6b55 se-97ca79bc" data-slate-type="list-line" data-slate-object="block" data-key="962">
   <span data-slate-object="text" data-key="963"><span data-slate-leaf="true" data-offset-key="963:0" data-first-offset="true"><span data-slate-string="true">视图层，页面聚合是我们的重点，包括客户端聚合和服务端聚合，特别是模板引擎的工作原理；</span></span></span>
  </div>
  <div class="se-4c30cf6e se-db31c0d4" data-slate-type="list-line" data-slate-object="block" data-key="964">
   <span data-slate-object="text" data-key="965"><span data-slate-leaf="true" data-offset-key="965:0" data-first-offset="true"><span data-slate-string="true">控制器层，我把这一层拆分为几个方面，梳理了控制器在 MVC 架构中的工作步骤。</span></span></span>
  </div>
 </div>
 <div class="se-7866cb7a " data-slate-type="paragraph" data-slate-object="block" data-key="966">
  <span data-slate-object="text" data-key="967"><span data-slate-leaf="true" data-offset-key="967:0" data-first-offset="true"><span data-slate-string="true">之后我们将 MVC 泛化，了解了其它重要的设计模式和套路，包括 AOP 和 IoC，以及实现切面编程所需的代理技术；还有其它著名的 JavaEE 模式，特别是拦截过滤器和数据访问对象模式。</span></span></span>
 </div>
 <h3 class="se-6733a337" data-slate-type="heading" data-slate-object="block" data-key="968"><span data-slate-object="text" data-key="969"><span data-slate-leaf="true" data-offset-key="969:0" data-first-offset="true"><span data-slate-string="true">第三章：从后端到前端</span></span></span></h3>
 <div class="se-00b38802 " data-slate-type="paragraph" data-slate-object="block" data-key="970">
  <span data-slate-object="text" data-key="971"><span data-slate-leaf="true" data-offset-key="971:0" data-first-offset="true"><span data-slate-string="true">第三章主要讲前端技术。首先我从一个大体上俯瞰的角度，阐述了我所理解的前端技术的“不同”，特别是思维模式的不同。</span></span></span>
 </div>
 <div class="se-73606031 " data-slate-type="paragraph" data-slate-object="block" data-key="972">
  <span data-slate-object="text" data-key="973"><span data-slate-leaf="true" data-offset-key="973:0" data-first-offset="true"><span data-slate-string="true">然后我介绍了一些前端技术重要的知识点，比如 JavaScript 面向对象，包括封装、继承和多态的实现方式，也包括对象创建的原理。接着我以 React 和 Angular，以及它们的重要特性为例，介绍了百花齐放的前端 MVC 框架为我们带来的变革。</span></span></span>
 </div>
 <div class="se-0d6ef2c8 " data-slate-type="paragraph" data-slate-object="block" data-key="974">
  <span data-slate-object="text" data-key="975"><span data-slate-leaf="true" data-offset-key="975:0" data-first-offset="true"><span data-slate-string="true">在页面设计和交互布局一讲中，我使用实际例子介绍了页面设计方面的一些原则和思路，包括渐进增强和优雅降级等等。</span></span></span>
 </div>
 <div class="se-b064b7e6 " data-slate-type="paragraph" data-slate-object="block" data-key="976">
  <span data-slate-object="text" data-key="977"><span data-slate-leaf="true" data-offset-key="977:0" data-first-offset="true"><span data-slate-string="true">接着在数据可视化一讲中，我仔细比较了当今最重要的两种 Web 绘图标准，SVG 和 Canvas，并介绍了 Flot 和 D3.js 这两个可视化的库。</span></span></span>
 </div>
 <div class="se-71622bf5 " data-slate-type="paragraph" data-slate-object="block" data-key="978">
  <span data-slate-object="text" data-key="979"><span data-slate-leaf="true" data-offset-key="979:0" data-first-offset="true"><span data-slate-string="true">最后是 JavaScript 异步编程的技术，我们重新回归 JavaScript，我梳理了最重要的几个技术要点，这也是这一章相对比较难的一讲。</span></span></span>
 </div>
 <h3 class="se-007fa24e" data-slate-type="heading" data-slate-object="block" data-key="980"><span data-slate-object="text" data-key="981"><span data-slate-leaf="true" data-offset-key="981:0" data-first-offset="true"><span data-slate-string="true">第四章：数据持久化</span></span></span></h3>
 <div class="se-86711bed " data-slate-type="paragraph" data-slate-object="block" data-key="982">
  <span data-slate-object="text" data-key="983"><span data-slate-leaf="true" data-offset-key="983:0" data-first-offset="true"><span data-slate-string="true">继续往技术栈的下方挖，数据持久化。在这一章的一开始，我首先介绍了这一层中互联网应用最广泛的技术之一——缓存，讲了它的本质、应用和常见的坑，以及缓存框架的设计要点。</span></span></span>
 </div>
 <div class="se-d8f08ed0 " data-slate-type="paragraph" data-slate-object="block" data-key="984">
  <span data-slate-object="text" data-key="985"><span data-slate-leaf="true" data-offset-key="985:0" data-first-offset="true"><span data-slate-string="true">接着是数据一致性，我介绍了它的概念，还有围绕它而产生的常见架构技术。有了数据一致性的基础知识，我们就进一步学习了 CAP 的原理，包括它的本质、常见的误区，以及我们该怎样根据 CAP 去做技术选型。</span></span></span>
 </div>
 <div class="se-b6d1c6e3 " data-slate-type="paragraph" data-slate-object="block" data-key="986">
  <span data-slate-object="text" data-key="987"><span data-slate-leaf="true" data-offset-key="987:0" data-first-offset="true"><span data-slate-string="true">最后则是数据持久层的设计，包括理论部分、关系数据库和非关系数据库的一些设计要点；以及实例部分，包括几个范例系统：搜索引擎、地理信息系统和电商网站。</span></span></span>
 </div>
 <h3 class="se-4688dd01" data-slate-type="heading" data-slate-object="block" data-key="988"><span data-slate-object="text" data-key="989"><span data-slate-leaf="true" data-offset-key="989:0" data-first-offset="true"><span data-slate-string="true">第五章：寻找最佳实践</span></span></span></h3>
 <div class="se-a9c3f076 " data-slate-type="paragraph" data-slate-object="block" data-key="990">
  <span data-slate-object="text" data-key="991"><span data-slate-leaf="true" data-offset-key="991:0" data-first-offset="true"><span data-slate-string="true">在第五章中，我们跳出了全栈技术纵深方向上具体某一层的限制，而是从一个横向的角度去分析相关的实践技术。</span></span></span>
 </div>
 <div class="se-ff8dfc10 " data-slate-type="paragraph" data-slate-object="block" data-key="992">
  <span data-slate-object="text" data-key="993"><span data-slate-leaf="true" data-offset-key="993:0" data-first-offset="true"><span data-slate-string="true">在 Ops 三部曲中，我分别介绍了：</span></span></span>
 </div>
 <div class="se-e2b2268d" data-slate-type="list" data-slate-object="block" data-key="994">
  <div class="se-e673f0a4 se-14e1ba7a" data-slate-type="list-line" data-slate-object="block" data-key="995">
   <span data-slate-object="text" data-key="996"><span data-slate-leaf="true" data-offset-key="996:0" data-first-offset="true"><span data-slate-string="true">配置管理，有哪些配置管理的技术，我们该选择怎样的方式去做配置管理；</span></span></span>
  </div>
  <div class="se-14cc6eaf se-00479ed7" data-slate-type="list-line" data-slate-object="block" data-key="997">
   <span data-slate-object="text" data-key="998"><span data-slate-leaf="true" data-offset-key="998:0" data-first-offset="true"><span data-slate-string="true">集群部署，我介绍了集群部署的方式，部署下的负载分担原理和策略算法，以及集群部署下常见的话题——Session 和 Cookie；</span></span></span>
  </div>
  <div class="se-2e10591e se-671b3fc9" data-slate-type="list-line" data-slate-object="block" data-key="999">
   <span data-slate-object="text" data-key="1000"><span data-slate-leaf="true" data-offset-key="1000:0" data-first-offset="true"><span data-slate-string="true">测试和发布，围绕 CI/CD 介绍了 pipeline 的含义、内容和挑战，以及不同类型的测试在其上集成的方式。</span></span></span>
  </div>
 </div>
 <div class="se-3c82a969 " data-slate-type="paragraph" data-slate-object="block" data-key="1001">
  <span data-slate-object="text" data-key="1002"><span data-slate-leaf="true" data-offset-key="1002:0" data-first-offset="true"><span data-slate-string="true">在网络安全那一讲中，我着重介绍了常见的 Web 攻击方式的原理，包括 XSS、CSRF、SQL 注入、HTTP 和 DNS 劫持，以及 DDoS。</span></span></span>
 </div>
 <div class="se-74eb6730 " data-slate-type="paragraph" data-slate-object="block" data-key="1003">
  <span data-slate-object="text" data-key="1004"><span data-slate-leaf="true" data-offset-key="1004:0" data-first-offset="true"><span data-slate-string="true">最后则是 SEO 这一讲，我介绍了 SEO 和白帽、黑帽的含义，以及一些常见的 SEO 技术，包括站内优化和站外优化。</span></span></span>
 </div>
 <h3 class="se-f171329f" data-slate-type="heading" data-slate-object="block" data-key="1005"><span data-slate-object="text" data-key="1006"><span data-slate-leaf="true" data-offset-key="1006:0" data-first-offset="true"><span data-slate-string="true">第六章：专题</span></span></span></h3>
 <div class="se-35737743 " data-slate-type="paragraph" data-slate-object="block" data-key="1007">
  <span data-slate-object="text" data-key="1008"><span data-slate-leaf="true" data-offset-key="1008:0" data-first-offset="true"><span data-slate-string="true">在第六章，我选取了四大专题分别展开介绍。</span></span></span>
 </div>
 <div class="se-acba53a6 " data-slate-type="paragraph" data-slate-object="block" data-key="1009">
  <span data-slate-object="text" data-key="1010"><span data-slate-leaf="true" data-offset-key="1010:0" data-first-offset="true"><span data-slate-string="true">在网站性能优化一讲，首先我介绍了一些基础知识，包括性能优化和软件设计的关系，性能优化的关注点，性能测试和指标，以及寻找性能瓶颈的思路；接着按照产品架构调整、后端和持久层优化，以及前端和网络层优化这样三个部分，分别介绍相应的常见性能优化技术。</span></span></span>
 </div>
 <div class="se-f3034b0c " data-slate-type="paragraph" data-slate-object="block" data-key="1011">
  <span data-slate-object="text" data-key="1012"><span data-slate-leaf="true" data-offset-key="1012:0" data-first-offset="true"><span data-slate-string="true">在全栈开发中的算法这一讲，我以这样几大场景为主线，介绍了一些重要的算法：</span></span></span>
 </div>
 <div class="se-a41ce5dd" data-slate-type="list" data-slate-object="block" data-key="1013">
  <div class="se-fe7ed91f se-9d677a7b" data-slate-type="list-line" data-slate-object="block" data-key="1014">
   <span data-slate-object="text" data-key="1015"><span data-slate-leaf="true" data-offset-key="1015:0" data-first-offset="true"><span data-slate-string="true">流量控制算法，包括基于固定时间窗口和滑动时间窗口的流量控制，漏桶算法和令牌桶算法；</span></span></span>
  </div>
  <div class="se-00e5b583 se-771effbd" data-slate-type="list-line" data-slate-object="block" data-key="1016">
   <span data-slate-object="text" data-key="1017"><span data-slate-leaf="true" data-offset-key="1017:0" data-first-offset="true"><span data-slate-string="true">Diffie–Hellman 密钥交换算法，从中我们学到了数学上超大质数在安全领域的一个典型应用；</span></span></span>
  </div>
  <div class="se-ee8af567 se-9571a9e2" data-slate-type="list-line" data-slate-object="block" data-key="1018">
   <span data-slate-object="text" data-key="1019"><span data-slate-leaf="true" data-offset-key="1019:0" data-first-offset="true"><span data-slate-string="true">数据压缩算法，包括哈夫曼编码、RLE 编码和算术编码，从而帮助我们理解，如今繁多的压缩技术的最基本的原理。</span></span></span>
  </div>
 </div>
 <div class="se-7093b0ec " data-slate-type="paragraph" data-slate-object="block" data-key="1020">
  <span data-slate-object="text" data-key="1021"><span data-slate-leaf="true" data-offset-key="1021:0" data-first-offset="true"><span data-slate-string="true">在分页这一讲中，我讲了分页的分类和几种实现分页的技术，最后则是分页的常见问题——重复数据，它背后可能的原因和相应的解决方案。</span></span></span>
 </div>
 <div class="se-96b37b4e " data-slate-type="paragraph" data-slate-object="block" data-key="1022">
  <span data-slate-object="text" data-key="1023"><span data-slate-leaf="true" data-offset-key="1023:0" data-first-offset="true"><span data-slate-string="true">在最后的 XML、JSON 和 YAML 这一讲，我把这几个数据承载格式的优劣进行了仔细的比较，包括简洁和严谨的程度，与 JavaScript 的亲和力，schema、转义方式和路径表达式等等。</span></span></span>
 </div>
 <h3 class="se-f9868207" data-slate-type="heading" data-slate-object="block" data-key="1024"><span data-slate-object="text" data-key="1025"><span data-slate-leaf="true" data-offset-key="1025:0" data-first-offset="true"><span data-slate-string="true">其它</span></span></span></h3>
 <div class="se-522f870c " data-slate-type="paragraph" data-slate-object="block" data-key="1026">
  <span data-slate-object="text" data-key="1027"><span data-slate-leaf="true" data-offset-key="1027:0" data-first-offset="true"><span data-slate-string="true">以上是技术方面的“硬通货”，对于非技术方面，我通过特别放送等等的形式，讨论了一些我认为比较重要，尤其是对于 Web 全栈工程师来说比较重要的话题。</span></span></span>
 </div>
 <div class="se-5514c9f0" data-slate-type="list" data-slate-object="block" data-key="1028">
  <div class="se-acc1206e se-9b366da8" data-slate-type="list-line" data-slate-object="block" data-key="1029">
   <span data-slate-object="text" data-key="1030"><span data-slate-leaf="true" data-offset-key="1030:0" data-first-offset="true"><span data-slate-string="true">怎样去理解 Web 全栈技术，全栈技术应该怎样学习，需要遵从怎样的学习策略；</span></span></span>
  </div>
  <div class="se-1cc2d59d se-cc136f77" data-slate-type="list-line" data-slate-object="block" data-key="1031">
   <span data-slate-object="text" data-key="1032"><span data-slate-leaf="true" data-offset-key="1032:0" data-first-offset="true"><span data-slate-string="true">北美全栈工程师的招聘，招人会秉持怎样的理念，整个流程是怎样的；</span></span></span>
  </div>
  <div class="se-a09c6af4 se-62cddb5e" data-slate-type="list-line" data-slate-object="block" data-key="1033">
   <span data-slate-object="text" data-key="1034"><span data-slate-leaf="true" data-offset-key="1034:0" data-first-offset="true"><span data-slate-string="true">技术修炼应该怎样进行取舍和选择，哪些技术应该深挖，哪些则可以点到即止；</span></span></span>
  </div>
  <div class="se-2a5cc4e9 se-bc442791" data-slate-type="list-line" data-slate-object="block" data-key="1035">
   <span data-slate-object="text" data-key="1036"><span data-slate-leaf="true" data-offset-key="1036:0" data-first-offset="true"><span data-slate-string="true">全栈团队的构成一般是怎样的，有哪些重要的角色；</span></span></span>
  </div>
  <div class="se-a8549dc1 se-ec9d37f4" data-slate-type="list-line" data-slate-object="block" data-key="1037">
   <span data-slate-object="text" data-key="1038"><span data-slate-leaf="true" data-offset-key="1038:0" data-first-offset="true"><span data-slate-string="true">代码审查为什么不可或缺，有哪些争议和好处，又有哪些技巧；</span></span></span>
  </div>
  <div class="se-b85846fc se-3fc8908e" data-slate-type="list-line" data-slate-object="block" data-key="1039">
   <span data-slate-object="text" data-key="1040"><span data-slate-leaf="true" data-offset-key="1040:0" data-first-offset="true"><span data-slate-string="true">程序员为什么要学英语，重要性在哪里，又有哪些好办法；</span></span></span>
  </div>
  <div class="se-e86a0ac9 se-8b4943ad" data-slate-type="list-line" data-slate-object="block" data-key="1041">
   <span data-slate-object="text" data-key="1042"><span data-slate-leaf="true" data-offset-key="1042:0" data-first-offset="true"><span data-slate-string="true">作为 Web 全栈工程师，我们还有哪些发展方向可以考虑，我们为什么需要让项目和团队也“全栈化”？</span></span></span>
  </div>
 </div>
 <h2 class="se-968e7cd7" data-slate-type="heading" data-slate-object="block" data-key="1043"><span data-slate-object="text" data-key="1044"><span data-slate-leaf="true" data-offset-key="1044:0" data-first-offset="true"><span data-slate-string="true">继续提升的重要两步</span></span></span></h2>
 <div class="se-100836cc " data-slate-type="paragraph" data-slate-object="block" data-key="1045">
  <span data-slate-object="text" data-key="1046"><span data-slate-leaf="true" data-offset-key="1046:0" data-first-offset="true"><span data-slate-string="true">对于我们专栏已经覆盖到的这些技能树的枝枝丫丫，我还想特别强调两个方面，这两个方面其实我们已经谈到过了，但是我觉得在今天，我们需要再拿出来稍稍强化一下。因为在我看来，它们有些特殊——它们对于程序员进一步发展至关重要，它们也是“成为更好的全栈工程师”所必须迈出的两步，但是谈论的人却很少。</span></span></span>
 </div>
 <h3 class="se-025c273f" data-slate-type="heading" data-slate-object="block" data-key="1047"><span data-slate-object="text" data-key="1048"><span data-slate-leaf="true" data-offset-key="1048:0" data-first-offset="true"><span data-slate-string="true">1. 从做项目到做产品</span></span></span></h3>
 <div class="se-73e5bd13 " data-slate-type="paragraph" data-slate-object="block" data-key="1049">
  <span data-slate-object="text" data-key="1050"><span data-slate-leaf="true" data-offset-key="1050:0" data-first-offset="true"><span data-slate-string="true">你还记得吗？ </span></span></span><a data-slate-type="link" data-slate-object="inline" data-key="1051" class="se-9a604d3a se-490c3d6a"><span data-slate-object="text" data-key="1052"><span data-slate-leaf="true" data-offset-key="1052:0" data-first-offset="true"><span data-slate-string="true">[第 28 讲]</span></span></span></a><span data-slate-object="text" data-key="1053"><span data-slate-leaf="true" data-offset-key="1053:0" data-first-offset="true"><span data-slate-string="true"> 的选修课堂，我介绍了程序员独立性的几个阶段，不知道你属于哪一个阶段呢？作为职业生涯进阶的一部分，如果你还停留在“做项目”的阶段，那么你需要在某一天切换到“做产品”的模式上来，完成程序员独立性的升级。事实上，“做项目”，终归只是“做产品”整个过程中很小的一部分，只有对于产品多个阶段的不断地迭代、回馈，程序员很多方面的认识才能不断进化。</span></span></span>
 </div>
 <div class="se-f6eeb795 " data-slate-type="paragraph" data-slate-object="block" data-key="1054">
  <span data-slate-object="text" data-key="1055"><span data-slate-leaf="true" data-offset-key="1055:0" data-first-offset="true"><span data-slate-string="true">举个例子，对于程序员来说，oncall（定位和修复线上问题）就是“做产品”必经的一环，也是团队“吃自己的狗食”的重要一环。这个过程可以反哺开发阶段，没有这样的过程，就不会真正体会到代码质量的重要性，就不会彻底意识到单元测试的重要性，也不会对代码评审的必要性有深刻的认识。</span></span></span>
 </div>
 <div class="se-88a38031 " data-slate-type="paragraph" data-slate-object="block" data-key="1056">
  <span data-slate-object="text" data-key="1057"><span data-slate-leaf="true" data-offset-key="1057:0" data-first-offset="true"><span data-slate-string="true">因此，如果你还只有“做项目”的经验，我建议你，在未来给自己寻找做产品的机会。</span></span></span>
 </div>
 <h3 class="se-7305d892" data-slate-type="heading" data-slate-object="block" data-key="1058"><span data-slate-object="text" data-key="1059"><span data-slate-leaf="true" data-offset-key="1059:0" data-first-offset="true"><span data-slate-string="true">2. 保持技术上的包容心</span></span></span></h3>
 <div class="se-02fdc4c7 " data-slate-type="paragraph" data-slate-object="block" data-key="1060">
  <span data-slate-object="text" data-key="1061"><span data-slate-leaf="true" data-offset-key="1061:0" data-first-offset="true"><span data-slate-string="true">在 </span></span></span><a data-slate-type="link" data-slate-object="inline" data-key="1062" class="se-9a604d3a se-490c3d6a"><span data-slate-object="text" data-key="1063"><span data-slate-leaf="true" data-offset-key="1063:0" data-first-offset="true"><span data-slate-string="true">[第 14 讲]</span></span></span></a><span data-slate-object="text" data-key="1064"><span data-slate-leaf="true" data-offset-key="1064:0" data-first-offset="true"><span data-slate-string="true"> 我就谈到过这个给自己“贴标签”的问题，有些程序员工作没几年，无论是有意识还是无意识地，就已经给自己贴上了过于明确的技术分类的标签。</span></span></span>
 </div>
 <div class="se-9e772ca3 " data-slate-type="paragraph" data-slate-object="block" data-key="1065">
  <span data-slate-object="text" data-key="1066"><span data-slate-leaf="true" data-offset-key="1066:0" data-first-offset="true"><span data-slate-string="true">比如说，给自己贴上“PHP 工程师”的标签，理由是觉得 PHP 是最好的语言，因此求职的时候非 PHP 的岗位一概不考虑；比如，只想做 Billing 系统，其它的业务领域和项目一概不考虑；再比如，极度强调自己是“技术人”，而特别排斥管理技巧、沟通合作能力等这些被鄙视为“非干货”、“非实战”的内容，可是对于几乎所有的职业生涯技术路线来说，它们其实都是非常重要，且绕不开的槛。</span></span></span>
 </div>
 <div class="se-4bda2846 " data-slate-type="paragraph" data-slate-object="block" data-key="1067">
  <span data-slate-object="text" data-key="1068"><span data-slate-leaf="true" data-offset-key="1068:0" data-first-offset="true"><span data-slate-string="true">再说说具体的技术，每个人都有偏好，但是不要因为自己的偏好，在技术的选择上失去程序员应有的理性判断，甚至将应当去接纳和学习的技术拒之门外。因为你也不知道哪一天，一个新领域、一门新技术会像浪潮一样涌来，就像几年前的云计算，这两年的区块链。只有那些有着包容心的程序员，才能去接纳和抓住机会。这也正如我在 </span></span></span><a data-slate-type="link" data-slate-object="inline" data-key="1069" class="se-9a604d3a se-490c3d6a"><span data-slate-object="text" data-key="1070"><span data-slate-leaf="true" data-offset-key="1070:0" data-first-offset="true"><span data-slate-string="true">[开篇词]</span></span></span></a><span data-slate-object="text" data-key="1071"><span data-slate-leaf="true" data-offset-key="1071:0" data-first-offset="true"><span data-slate-string="true"> 中所说的，最终也许我们需要“学得精”，但是一开始我们一定要“学得杂”。</span></span></span>
 </div>
 <h2 class="se-738cea3a" data-slate-type="heading" data-slate-object="block" data-key="1072"><span data-slate-object="text" data-key="1073"><span data-slate-leaf="true" data-offset-key="1073:0" data-first-offset="true"><span data-slate-string="true">送君千里，终须一别</span></span></span></h2>
 <div class="se-2a3e61a7 " data-slate-type="paragraph" data-slate-object="block" data-key="1074">
  <span data-slate-object="text" data-key="1075"><span data-slate-leaf="true" data-offset-key="1075:0" data-first-offset="true"><span data-slate-string="true">任何一段旅程都有终点，这个专栏也不例外。</span></span></span>
 </div>
 <div class="se-6fe3f139 " data-slate-type="paragraph" data-slate-object="block" data-key="1076">
  <span data-slate-object="text" data-key="1077"><span data-slate-leaf="true" data-offset-key="1077:0" data-first-offset="true"><span data-slate-string="true">今天，你学到了这里，我最想大声地和你说一句话——祝贺你！从试读到购买，再到完整学习，我相信你已经一马当先，击败了一些人。现在，我希望你可以继续一马当先，不止在这个专栏，还在你今后的学习、工作和生活中。</span></span></span>
 </div>
 <div class="se-43602414 " data-slate-type="paragraph" data-slate-object="block" data-key="1078">
  <span data-slate-object="text" data-key="1079"><span data-slate-leaf="true" data-offset-key="1079:0" data-first-offset="true"><span data-slate-string="true">回头看，整个专栏正文部分共计 40 讲，全部加起来有二十多万字。如果在一开始写专栏的时候跟我说，我会做到这个程度，我一定不相信。在这个过程当中，从主题选择、大纲确定、内容试写，到正式写作、绘图、审校、录音，整个过程确实让我颇为疲惫。一篇文章耗时最长的部分并非写作，而是内容选择和构思，比如怎样让你的收获最大化，得到更加通用的原理、套路 ，而不是停留在某个单一的技术表面上。但是，就像我在专栏上线以前想的那样，我觉得这是一件自己可以尽量认真做好的、很有意义的事情。现在看起来，我觉得可以稍微松口气了。</span></span></span>
 </div>
 <div class="se-006c2d3e " data-slate-type="paragraph" data-slate-object="block" data-key="1080">
  <span data-slate-object="text" data-key="1081"><span data-slate-leaf="true" data-offset-key="1081:0" data-first-offset="true"><span data-slate-string="true">在这里，我要说，感谢你可以阅读这个专栏，并且特别感谢那些积极在留言区交流的朋友，关于全栈的内容，我们还可以继续在留言区沟通，也欢迎你访问我的</span></span></span><a data-slate-type="link" data-slate-object="inline" data-key="1082" class="se-9a604d3a se-490c3d6a"><span data-slate-object="text" data-key="1083"><span data-slate-leaf="true" data-offset-key="1083:0" data-first-offset="true"><span data-slate-string="true">个人博客</span></span></span></a><span data-slate-object="text" data-key="1084"><span data-slate-leaf="true" data-offset-key="1084:0" data-first-offset="true"><span data-slate-string="true">，和我继续交流。</span></span></span>
 </div>
 <div class="se-a6a94ca4 " data-slate-type="paragraph" data-slate-object="block" data-key="1085">
  <span data-slate-object="text" data-key="1086"><span data-slate-leaf="true" data-offset-key="1086:0" data-first-offset="true"><span data-slate-string="true">世界变化太快，技术发展太快，我们“被迫”成为了全栈工程师。</span></span></span>
 </div>
 <div class="se-86221bdc " data-slate-type="paragraph" data-slate-object="block" data-key="1087">
  <span data-slate-object="text" data-key="1088"><span data-slate-leaf="true" data-offset-key="1088:0" data-first-offset="true"><span class="se-743dcd75" data-slate-type="bold" data-slate-object="mark"><span data-slate-string="true">全栈，不只是一种技术分类，还代表了一种态度：理性、包容、好学。</span></span></span></span><span data-slate-object="text" data-key="1089"><span data-slate-leaf="true" data-offset-key="1089:0" data-first-offset="true"><span data-slate-string="true">希望你可以从这个专栏得到你想要的，但更多的收获，需要你在线下继续努力。毕竟，《全栈工程师修炼指南》这个专栏结束了，而你的全栈之路却才刚刚开始。</span></span></span>
 </div>
 <div class="se-1b9ef6e9 " data-slate-type="paragraph" data-slate-object="block" data-key="1090">
  <span data-slate-object="text" data-key="1091"><span data-slate-leaf="true" data-offset-key="1091:0" data-first-offset="true"><span data-slate-string="true">好，我是四火，我们后会有期！</span></span></span>
 </div>
 <div class="se-429fd270 " data-slate-type="paragraph" data-slate-object="block" data-key="1092">
  <span data-slate-object="text" data-key="1093"><span data-slate-leaf="true" data-offset-key="1093:0" data-first-offset="true"><span class="se-7e735c66" data-slate-type="primary" data-slate-object="mark"><span data-slate-string="true">最后，文末有一份调查问卷，希望你可以抽出两分钟的时间填写一下。我会认真倾听你对这个专栏的意见或者建议，期待你的反馈！</span></span></span></span>
 </div>
 <div class="se-ae26b95d" data-slate-type="image" data-slate-object="block" data-key="1094">
  <a href="https://jinshuju.net/f/514fSy"><img class="se-c1613d83" src="https://static001.geekbang.org/resource/image/3f/3d/3f7b46f38bc0603c33fb4bf299d6763d.jpg"></a>
 </div>
</div> |             |book   |0     |full_html   |zh-hans  |3           |
|----------||-------------|-------|------|------------|---------|------------|

2020-11-19 16:16:06.720 INFO  jdbc.sqltiming Line:373 - select nodefiledd0_.nid as nid1_10_, nodefiledd0_.changed as changed2_10_, nodefiledd0_.created 
as created3_10_, nodefiledd0_.default_langcode as default_4_10_, nodefiledd0_.langcode as langcode5_10_, 
nodefiledd0_.promote as promote6_10_, nodefiledd0_.revision_translation_affected as revision7_10_, 
nodefiledd0_.status as status8_10_, nodefiledd0_.sticky as sticky9_10_, nodefiledd0_.title 
as title10_10_, nodefiledd0_.type as type11_10_, nodefiledd0_.uid as uid12_10_, nodefiledd0_.vid 
as vid13_10_ from node_field_data nodefiledd0_ where nodefiledd0_.nid=3 
 {executed in 0 msec}
2020-11-19 16:16:06.721 INFO  jdbc.resultsettable Line:610 - 
|----|-----------|-----------|-----------------|---------|--------|------------------------------|-------|-------|-----------------|-----|----|----|
|nid |changed    |created    |default_langcode |langcode |promote |revision_translation_affected |status |sticky |title            |type |uid |vid |
|----|-----------|-----------|-----------------|---------|--------|------------------------------|-------|-------|-----------------|-----|----|----|
|3   |1605754826 |1605754826 |1                |zh-hans  |0       |1                             |1      |0      |全栈回顾丨成为更好的全栈工程师！ |book |1   |3   |
|----|-----------|-----------|-----------------|---------|--------|------------------------------|-------|-------|-----------------|-----|----|----|

2020-11-19 16:16:06.722 INFO  jdbc.sqltiming Line:373 - select nodefieldr0_.nid as nid1_11_0_, nodefieldr0_.changed as changed2_11_0_, nodefieldr0_.created 
as created3_11_0_, nodefieldr0_.default_langcode as default_4_11_0_, nodefieldr0_.langcode 
as langcode5_11_0_, nodefieldr0_.promote as promote6_11_0_, nodefieldr0_.revision_translation_affected 
as revision7_11_0_, nodefieldr0_.status as status8_11_0_, nodefieldr0_.sticky as sticky9_11_0_, 
nodefieldr0_.title as title10_11_0_, nodefieldr0_.uid as uid11_11_0_, nodefieldr0_.vid as vid12_11_0_ 
from node_field_revision nodefieldr0_ where nodefieldr0_.nid=3 
 {executed in 0 msec}
2020-11-19 16:16:06.723 INFO  jdbc.resultsettable Line:610 - 
|---------|-----------|-----------|-----------------|---------|--------|------------------------------|-------|-------|-----------------|----|----|
|nid      |changed    |created    |default_langcode |langcode |promote |revision_translation_affected |status |sticky |title            |uid |vid |
|---------|-----------|-----------|-----------------|---------|--------|------------------------------|-------|-------|-----------------|----|----|
|[unread] |1605754826 |1605754826 |1                |zh-hans  |0       |1                             |1      |0      |全栈回顾丨成为更好的全栈工程师！ |1   |3   |
|---------|-----------|-----------|-----------------|---------|--------|------------------------------|-------|-------|-----------------|----|----|

2020-11-19 16:16:06.724 INFO  jdbc.sqltiming Line:373 - update node_field_data set changed=1605773766, created=1605773766, default_langcode=1, langcode='zh-hans', 
promote=0, revision_translation_affected=1, status=1, sticky=0, title='全栈回顾丨成为更好的全栈工程师！', type='book', 
uid=1, vid=3 where nid=3 
 {executed in 1 msec}
2020-11-19 16:16:06.724 INFO  jdbc.sqltiming Line:373 - update node_field_revision set changed=1605773766, created=1605773766, default_langcode=1, 
langcode='zh-hans', promote=0, revision_translation_affected=1, status=1, sticky=0, title='全栈回顾丨成为更好的全栈工程师！', 
uid=1, vid=3 where nid=3 
 {executed in 0 msec}
2020-11-19 16:16:06.728 INFO  jdbc.sqltiming Line:373 - select bookfieldm0_.entity_id as entity_i1_8_, bookfieldm0_.bundle as bundle2_8_, bookfieldm0_.delta 
as delta3_8_, bookfieldm0_.langcode as langcode4_8_, bookfieldm0_.field_media_value as field_me5_8_, 
bookfieldm0_.revision_id as revision6_8_ from node__field_media bookfieldm0_ where bookfieldm0_.entity_id=3 
 {executed in 0 msec}
2020-11-19 16:16:06.729 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------||------------|
|entity_id |bundle |delta |langcode |field_media_value|revision_id |
|----------|-------|------|---------||------------|
|3         |book   |0     |zh-hans  |https://qdall01.baidupcs.com/file/e7911bdc4h88c3fa4e189d49089c9373?bkt=en-d3a65691252603d3fecc9f504bc78bd2b60e41ea93ecb93ec870c3073148257c8f9b892b6c77d77a&fid=3757516097-778750-696161537579718&time=1605754825&sign=FDTAXUGERLQlBHSKfWqir-DCb740ccc5511e5e8fedcff06b081203-3jF%2FfDK8fxD7RsFVAuyD7fUS3Z0%3D&to=92&size=9306649&sta_dx=9306649&sta_cs=1615&sta_ft=m4a&sta_ct=6&sta_mt=0&fm2=MH%2CYangquan%2CAnywhere%2C%2Cshanghai%2Cct&ctime=1576766146&mtime=1605754778&resv0=-1&resv1=0&resv2=rlim&resv3=2&resv4=9306649&vuk=3757516097&iv=0&htype=&randtype=em&newver=1&newfm=1&secfm=1&flow_ver=3&pkey=en-2b51a744225f8fc2baebef4630c320d905eb2c368996ea591714e9b67466a0c4cc2688fda075116e&sl=76480590&expires=8h&rt=pr&r=809662133&mlogid=7501918660288732089&vbdid=2247232042&fin=%E5%85%A8%E6%A0%88%E5%9B%9E%E9%A1%BE%E4%B8%A8%E6%88%90%E4%B8%BA%E6%9B%B4%E5%A5%BD%E7%9A%84%E5%85%A8%E6%A0%88%E5%B7%A5%E7%A8%8B%E5%B8%88%EF%BC%81.m4a&bflag=92,34-92&rtype=1&dp-logid=7501918660288732089&dp-callid=0.1.1&hps=1&tsl=80&csl=80&fsl=-1&csign=yVzLQPCt4DblfMLqd2BCjd2RnqQ%3D&so=0&ut=6&uter=0&serv=0&uc=1458616558&ti=c77a2290e27174be43f6bf90bbc18f8ee19a01257a999ddf305a5e1275657320&hflag=30&adg=c_15d187590626c675056c89c8026cfc17&reqlabel=778750_l_1bf9445f27094ab64c9f1cb0bdf7ccfa_-1_dd2c452b8e51a0c74130d7cf32c48a2d&ibp=1&by=themis&filename=%E5%85%A8%E6%A0%88%E5%9B%9E%E9%A1%BE%E4%B8%A8%E6%88%90%E4%B8%BA%E6%9B%B4%E5%A5%BD%E7%9A%84%E5%85%A8%E6%A0%88%E5%B7%A5%E7%A8%8B%E5%B8%88%EF%BC%81.m4a |3           |
|----------|-------|------|---------||------------|

2020-11-19 16:16:06.731 INFO  jdbc.sqltiming Line:373 - update node__field_media set bundle='book', delta=0, langcode='zh-hans', field_media_value='https://qdall01.baidupcs.com/file/e7911bdc4h88c3fa4e189d49089c9373?bkt=en-d3a65691252603d3fecc9f504bc78bd2b60e41ea93ecb93ec870c3073148257c8f9b892b6c77d77a&fid=3757516097-778750-316431814634926&time=1605773764&sign=FDTAXUGERLQlBHSKfWqir-DCb740ccc5511e5e8fedcff06b081203-CxqQ%2BxICzWW%2F7mWSdpuEynDEBHM%3D&to=92&size=9306649&sta_dx=9306649&sta_cs=1618&sta_ft=m4a&sta_ct=6&sta_mt=0&fm2=MH%2CYangquan%2CAnywhere%2C%2Cshanghai%2Cct&ctime=1576766146&mtime=1605773715&resv0=-1&resv1=0&resv2=rlim&resv3=2&resv4=9306649&vuk=3757516097&iv=0&htype=&randtype=em&newver=1&newfm=1&secfm=1&flow_ver=3&pkey=en-2b51a744225f8fc2baebef4630c320d905eb2c368996ea591714e9b67466a0c4cc2688fda075116e&sl=76480590&expires=8h&rt=pr&r=715115188&mlogid=7507002756206741609&vbdid=2247232042&fin=%E5%85%A8%E6%A0%88%E5%9B%9E%E9%A1%BE%E4%B8%A8%E6%88%90%E4%B8%BA%E6%9B%B4%E5%A5%BD%E7%9A%84%E5%85%A8%E6%A0%88%E5%B7%A5%E7%A8%8B%E5%B8%88%EF%BC%81.m4a&bflag=92,34-92&rtype=1&dp-logid=7507002756206741609&dp-callid=0.1.1&hps=1&tsl=80&csl=80&fsl=-1&csign=yVzLQPCt4DblfMLqd2BCjd2RnqQ%3D&so=0&ut=6&uter=0&serv=0&uc=1458616558&ti=34c17094e7d5a0c938b1e1a2a8d30f8b7cb412f6930e0062&hflag=30&adg=c_15d187590626c675056c89c8026cfc17&reqlabel=778750_l_1bf9445f27094ab64c9f1cb0bdf7ccfa_-1_dd2c452b8e51a0c74130d7cf32c48a2d&ibp=1&by=themis&filename=%E5%85%A8%E6%A0%88%E5%9B%9E%E9%A1%BE%E4%B8%A8%E6%88%90%E4%B8%BA%E6%9B%B4%E5%A5%BD%E7%9A%84%E5%85%A8%E6%A0%88%E5%B7%A5%E7%A8%8B%E5%B8%88%EF%BC%81.m4a', 
revision_id=3 where entity_id=3 
 {executed in 1 msec}
2020-11-19 16:16:06.738 INFO  jdbc.sqltiming Line:373 - select nodefieldm0_.entity_id as entity_i1_17_0_, nodefieldm0_.bundle as bundle2_17_0_, nodefieldm0_.delta 
as delta3_17_0_, nodefieldm0_.langcode as langcode4_17_0_, nodefieldm0_.field_media_value as 
field_me5_17_0_, nodefieldm0_.revision_id as revision6_17_0_ from node_revision__field_media 
nodefieldm0_ where nodefieldm0_.entity_id=3 
 {executed in 1 msec}
2020-11-19 16:16:06.739 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------||------------|
|entity_id |bundle |delta |langcode |field_media_value|revision_id |
|----------|-------|------|---------||------------|
|[unread]  |book   |0     |zh-hans  |https://qdall01.baidupcs.com/file/e7911bdc4h88c3fa4e189d49089c9373?bkt=en-d3a65691252603d3fecc9f504bc78bd2b60e41ea93ecb93ec870c3073148257c8f9b892b6c77d77a&fid=3757516097-778750-696161537579718&time=1605754825&sign=FDTAXUGERLQlBHSKfWqir-DCb740ccc5511e5e8fedcff06b081203-3jF%2FfDK8fxD7RsFVAuyD7fUS3Z0%3D&to=92&size=9306649&sta_dx=9306649&sta_cs=1615&sta_ft=m4a&sta_ct=6&sta_mt=0&fm2=MH%2CYangquan%2CAnywhere%2C%2Cshanghai%2Cct&ctime=1576766146&mtime=1605754778&resv0=-1&resv1=0&resv2=rlim&resv3=2&resv4=9306649&vuk=3757516097&iv=0&htype=&randtype=em&newver=1&newfm=1&secfm=1&flow_ver=3&pkey=en-2b51a744225f8fc2baebef4630c320d905eb2c368996ea591714e9b67466a0c4cc2688fda075116e&sl=76480590&expires=8h&rt=pr&r=809662133&mlogid=7501918660288732089&vbdid=2247232042&fin=%E5%85%A8%E6%A0%88%E5%9B%9E%E9%A1%BE%E4%B8%A8%E6%88%90%E4%B8%BA%E6%9B%B4%E5%A5%BD%E7%9A%84%E5%85%A8%E6%A0%88%E5%B7%A5%E7%A8%8B%E5%B8%88%EF%BC%81.m4a&bflag=92,34-92&rtype=1&dp-logid=7501918660288732089&dp-callid=0.1.1&hps=1&tsl=80&csl=80&fsl=-1&csign=yVzLQPCt4DblfMLqd2BCjd2RnqQ%3D&so=0&ut=6&uter=0&serv=0&uc=1458616558&ti=c77a2290e27174be43f6bf90bbc18f8ee19a01257a999ddf305a5e1275657320&hflag=30&adg=c_15d187590626c675056c89c8026cfc17&reqlabel=778750_l_1bf9445f27094ab64c9f1cb0bdf7ccfa_-1_dd2c452b8e51a0c74130d7cf32c48a2d&ibp=1&by=themis&filename=%E5%85%A8%E6%A0%88%E5%9B%9E%E9%A1%BE%E4%B8%A8%E6%88%90%E4%B8%BA%E6%9B%B4%E5%A5%BD%E7%9A%84%E5%85%A8%E6%A0%88%E5%B7%A5%E7%A8%8B%E5%B8%88%EF%BC%81.m4a |3           |
|----------|-------|------|---------||------------|

2020-11-19 16:16:06.740 INFO  jdbc.sqltiming Line:373 - update node_revision__field_media set bundle='book', delta=0, langcode='zh-hans', field_media_value='https://qdall01.baidupcs.com/file/e7911bdc4h88c3fa4e189d49089c9373?bkt=en-d3a65691252603d3fecc9f504bc78bd2b60e41ea93ecb93ec870c3073148257c8f9b892b6c77d77a&fid=3757516097-778750-316431814634926&time=1605773764&sign=FDTAXUGERLQlBHSKfWqir-DCb740ccc5511e5e8fedcff06b081203-CxqQ%2BxICzWW%2F7mWSdpuEynDEBHM%3D&to=92&size=9306649&sta_dx=9306649&sta_cs=1618&sta_ft=m4a&sta_ct=6&sta_mt=0&fm2=MH%2CYangquan%2CAnywhere%2C%2Cshanghai%2Cct&ctime=1576766146&mtime=1605773715&resv0=-1&resv1=0&resv2=rlim&resv3=2&resv4=9306649&vuk=3757516097&iv=0&htype=&randtype=em&newver=1&newfm=1&secfm=1&flow_ver=3&pkey=en-2b51a744225f8fc2baebef4630c320d905eb2c368996ea591714e9b67466a0c4cc2688fda075116e&sl=76480590&expires=8h&rt=pr&r=715115188&mlogid=7507002756206741609&vbdid=2247232042&fin=%E5%85%A8%E6%A0%88%E5%9B%9E%E9%A1%BE%E4%B8%A8%E6%88%90%E4%B8%BA%E6%9B%B4%E5%A5%BD%E7%9A%84%E5%85%A8%E6%A0%88%E5%B7%A5%E7%A8%8B%E5%B8%88%EF%BC%81.m4a&bflag=92,34-92&rtype=1&dp-logid=7507002756206741609&dp-callid=0.1.1&hps=1&tsl=80&csl=80&fsl=-1&csign=yVzLQPCt4DblfMLqd2BCjd2RnqQ%3D&so=0&ut=6&uter=0&serv=0&uc=1458616558&ti=34c17094e7d5a0c938b1e1a2a8d30f8b7cb412f6930e0062&hflag=30&adg=c_15d187590626c675056c89c8026cfc17&reqlabel=778750_l_1bf9445f27094ab64c9f1cb0bdf7ccfa_-1_dd2c452b8e51a0c74130d7cf32c48a2d&ibp=1&by=themis&filename=%E5%85%A8%E6%A0%88%E5%9B%9E%E9%A1%BE%E4%B8%A8%E6%88%90%E4%B8%BA%E6%9B%B4%E5%A5%BD%E7%9A%84%E5%85%A8%E6%A0%88%E5%B7%A5%E7%A8%8B%E5%B8%88%EF%BC%81.m4a', 
revision_id=3 where entity_id=3 
 {executed in 1 msec}
2020-11-19 16:16:06.744 INFO  jdbc.sqltiming Line:373 - select bookfieldc0_.entity_id as entity_i1_5_, bookfieldc0_.bundle as bundle2_5_, bookfieldc0_.field_comment_value 
as field_co3_5_, bookfieldc0_.delta as delta4_5_, bookfieldc0_.field_comment_format as field_co5_5_, 
bookfieldc0_.langcode as langcode6_5_, bookfieldc0_.revision_id as revision7_5_ from node__field_comment 
bookfieldc0_ where bookfieldc0_.entity_id=3 
 {executed in 0 msec}
2020-11-19 16:16:06.747 INFO  jdbc.resultsettable Line:610 - 
|----------|-------||------|---------------------|---------|------------|
|entity_id |bundle |field_comment_value|delta |field_comment_format |langcode |revision_id |
|----------|-------||------|---------------------|---------|------------|
|3         |book   |<li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/14/34/df/64e3d533.jpg" class="_2273kGdT_0"> 
 <div class="_2CG0SquK_0">
  <div class="_304R4gla_0">
   <div>
    <div class="_18Dng5rT_0">
     <a>leslie</a> <!---->
    </div> 
    <div class="_1H1Z49Dr_0">
     2019-12-13
    </div>
   </div> <!---->
  </div> 
  <div>
   <div class="_3M6kV3zb_0">
     "全栈，不只是一种技术分类，还代表了一种态度：理性、包容、好学。"其实老师说漏了一点"整体性"，这是从开始学到课程结束给我的收获。 
    <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;还记得课前必读章节的学习路径篇和老师在留言区沟通过：对于全栈弱的是编程，毕竟十年没写程序代码了，确实偏弱；学习课程的同时其实我已经在极客大学的算法训练营去修炼了一回，刚好两边同时结束。
    <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;不知不觉从教师节跟到了差不多圣诞节：总算是又坚持学完了一门功课，自己又进步了一点；谈谈个人对于课程的收获。
    <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.整体性：全栈其实是从程序的最初前端-&gt;后端-&gt;数据系统-&gt;web架构/操作系统-&gt;网络这么一个整体的过程，这是我在课程中看到和学到的；
    <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.知识性：部分内容其实其它课程又提及，不同的老师出发点不同，全栈的观点和某个专长的老师讲的又不一样；
    <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.针对性：这种针对性是细节，可能许多东西我们有概念可是经常会去忽略掉；程序是细节决定成败，不经意的细节可能就决定了最终的结局。
    <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;学习的时光总是非常辛苦而愉快的："付出时的辛苦，收获时的喜悦"。感谢老师一路以来的分享与教诲：希望后续在老师的个人博客里面能继续交流学习，愿老师未来一切顺利，谢谢老师。
   </div> 
   <div class="_2r3UB1GX_0">
    <span>展开</span><i class="iconfont"></i>
   </div> 
   <div class="_2xNIY4NG_0">
    <p class="_33BLbmw4_0">作者回复: 感谢阅读和评论 👍</p>
   </div> 
   <div class="_1w8H0ktn_0 _2A421P4G_0">
    <div class="_2jsFl-X0_0">
     <i class="iconfont"></i> <span></span>
    </div> 
    <div class="_2P4B1Hdm_0">
     <i class="iconfont"></i> <span class="">1</span>
    </div> <!---->
   </div>
  </div>
 </div></li>
<li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/11/0b/5f/2cc4060c.jpg" class="_2273kGdT_0"> 
 <div class="_2CG0SquK_0">
  <div class="_304R4gla_0">
   <div>
    <div class="_18Dng5rT_0">
     <a>子豪sirius</a> <!---->
    </div> 
    <div class="_1H1Z49Dr_0">
     2019-12-16
    </div>
   </div> <!---->
  </div> 
  <div>
   <div class="_3M6kV3zb_0">
    感谢老师为我们贡献这么一门优秀的课程，收获了很多。我工作快十年，最近也对自己的职业感到迷茫。学了课程后，发现自己有很多知识点和领域不足，平时工作也没有思考过，这篇课程很多地方启迪了。这篇课程还有很多没看懂的地方，会反复阅读，温故知新。下一步我会尝试构建自己的全栈知识体系，寻找职业的下一个目标
   </div> 
   <div class="_2r3UB1GX_0">
    <span>展开</span><i class="iconfont"></i>
   </div> 
   <div class="_2xNIY4NG_0">
    <p class="_33BLbmw4_0">作者回复: 👍</p>
   </div> 
   <div class="_1w8H0ktn_0 _2A421P4G_0">
    <div class="_2jsFl-X0_0">
     <i class="iconfont"></i> <span></span>
    </div> 
    <div class="_2P4B1Hdm_0">
     <i class="iconfont"></i> <span class=""></span>
    </div> <!---->
   </div>
  </div>
 </div></li>
<li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/13/f9/a1/667f0b2b.jpg" class="_2273kGdT_0"> 
 <div class="_2CG0SquK_0">
  <div class="_304R4gla_0">
   <div>
    <div class="_18Dng5rT_0">
     <a>小靓仔</a> <!---->
    </div> 
    <div class="_1H1Z49Dr_0">
     2019-12-16
    </div>
   </div> <!---->
  </div> 
  <div>
   <div class="_3M6kV3zb_0">
    请问老师，您说的做项目是不是就是指单纯的功能开发，而做产品就是用心去做，不只是为了单纯的完成任务，上升到另一个层次，考虑的更多
   </div> 
   <div class="_2r3UB1GX_0">
    <span>展开</span><i class="iconfont"></i>
   </div> 
   <div class="_2xNIY4NG_0">
    <p class="_33BLbmw4_0">作者回复: 你可以看一下第28讲的选修课堂，做产品要比做项目包含多得多的内容，而不只是“用心”两个字而已。简单来说，做产品，需要在产品的整个生命周期做不同的工作，比如我举的这个产品维护和线上问题修复的例子，这不是做一两个项目就能覆盖得到的。再比如说，单个项目交付可能就一个月的时间，但是整个产品的生命周期可能有好几年。</p>
   </div> 
   <div class="_1w8H0ktn_0 _2A421P4G_0">
    <div class="_2jsFl-X0_0">
     <i class="iconfont"></i> <span></span>
    </div> 
    <div class="_2P4B1Hdm_0">
     <i class="iconfont"></i> <span class=""></span>
    </div> <!---->
   </div>
  </div>
 </div></li>
<li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/15/04/8a/59355a67.jpg" class="_2273kGdT_0"> 
 <div class="_2CG0SquK_0">
  <div class="_304R4gla_0">
   <div>
    <div class="_18Dng5rT_0">
     <a>koko_zhk</a> <!---->
    </div> 
    <div class="_1H1Z49Dr_0">
     2019-12-13
    </div>
   </div> <!---->
  </div> 
  <div>
   <div class="_3M6kV3zb_0">
    全栈：海纳百川，有容乃大
   </div> 
   <div class="_2r3UB1GX_0">
    <span>展开</span><i class="iconfont"></i>
   </div> <!----> 
   <div class="_1w8H0ktn_0 _2A421P4G_0">
    <div class="_2jsFl-X0_0">
     <i class="iconfont"></i> <span></span>
    </div> 
    <div class="_2P4B1Hdm_0">
     <i class="iconfont"></i> <span class=""></span>
    </div> <!---->
   </div>
  </div>
 </div></li>
<li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/13/db/26/54f2c164.jpg" class="_2273kGdT_0"> 
 <div class="_2CG0SquK_0">
  <div class="_304R4gla_0">
   <div>
    <div class="_18Dng5rT_0">
     <a>靠人品去赢</a> <!---->
    </div> 
    <div class="_1H1Z49Dr_0">
     2019-12-13
    </div>
   </div> <!---->
  </div> 
  <div>
   <div class="_3M6kV3zb_0">
    绝对值回票价，但是可惜不能再追专栏，有点不舍。
   </div> 
   <div class="_2r3UB1GX_0">
    <span>展开</span><i class="iconfont"></i>
   </div> 
   <div class="_2xNIY4NG_0">
    <p class="_33BLbmw4_0">作者回复: 谢谢</p>
   </div> 
   <div class="_1w8H0ktn_0 _2A421P4G_0">
    <div class="_2jsFl-X0_0">
     <i class="iconfont"></i> <span></span>
    </div> 
    <div class="_2P4B1Hdm_0">
     <i class="iconfont"></i> <span class=""></span>
    </div> <!---->
   </div>
  </div>
 </div></li>
<li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/0f/4d/fd/0aa0e39f.jpg" class="_2273kGdT_0"> 
 <div class="_2CG0SquK_0">
  <div class="_304R4gla_0">
   <div>
    <div class="_18Dng5rT_0">
     <a>许童童</a> <!---->
    </div> 
    <div class="_1H1Z49Dr_0">
     2019-12-13
    </div>
   </div> <!---->
  </div> 
  <div>
   <div class="_3M6kV3zb_0">
    感谢老师，给我们带来这么好的课程，一路跟着老师学下来，收获是真的不少，其实人生也像是做全栈，不能把自己局限在某一个范围内，勇敢的跨出自己的舒适区，向着未知去探索自己的边界，这也许就是全栈在人生上的意义吧。
   </div> 
   <div class="_2r3UB1GX_0">
    <span>展开</span><i class="iconfont"></i>
   </div> 
   <div class="_2xNIY4NG_0">
    <p class="_33BLbmw4_0">作者回复: 👍</p>
   </div> 
   <div class="_1w8H0ktn_0 _2A421P4G_0">
    <div class="_2jsFl-X0_0">
     <i class="iconfont"></i> <span></span>
    </div> 
    <div class="_2P4B1Hdm_0">
     <i class="iconfont"></i> <span class=""></span>
    </div> <!---->
   </div>
  </div>
 </div></li>
<li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/16/bc/25/1c92a90c.jpg" class="_2273kGdT_0"> 
 <div class="_2CG0SquK_0">
  <div class="_304R4gla_0">
   <div>
    <div class="_18Dng5rT_0">
     <a>tt</a> <!---->
    </div> 
    <div class="_1H1Z49Dr_0">
     2019-12-13
    </div>
   </div> <!---->
  </div> 
  <div>
   <div class="_3M6kV3zb_0">
    感谢老师一路带给我的启发！
   </div> 
   <div class="_2r3UB1GX_0">
    <span>展开</span><i class="iconfont"></i>
   </div> 
   <div class="_2xNIY4NG_0">
    <p class="_33BLbmw4_0">作者回复: 不客气</p>
   </div> 
   <div class="_1w8H0ktn_0 _2A421P4G_0">
    <div class="_2jsFl-X0_0">
     <i class="iconfont"></i> <span></span>
    </div> 
    <div class="_2P4B1Hdm_0">
     <i class="iconfont"></i> <span class=""></span>
    </div> <!---->
   </div>
  </div>
 </div></li> |0     |full_html            |zh-hans  |3           |
|----------|-------||------|---------------------|---------|------------|

2020-11-19 16:16:06.749 INFO  jdbc.sqltiming Line:373 - select nodefieldc0_.entity_id as entity_i1_14_0_, nodefieldc0_.bundle as bundle2_14_0_, nodefieldc0_.field_comment_value 
as field_co3_14_0_, nodefieldc0_.delta as delta4_14_0_, nodefieldc0_.field_comment_format as 
field_co5_14_0_, nodefieldc0_.langcode as langcode6_14_0_, nodefieldc0_.revision_id as revision7_14_0_ 
from node_revision__field_comment nodefieldc0_ where nodefieldc0_.entity_id=3 
 {executed in 0 msec}
2020-11-19 16:16:06.752 INFO  jdbc.resultsettable Line:610 - 
|----------|-------||------|---------------------|---------|------------|
|entity_id |bundle |field_comment_value|delta |field_comment_format |langcode |revision_id |
|----------|-------||------|---------------------|---------|------------|
|[unread]  |book   |<li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/14/34/df/64e3d533.jpg" class="_2273kGdT_0"> 
 <div class="_2CG0SquK_0">
  <div class="_304R4gla_0">
   <div>
    <div class="_18Dng5rT_0">
     <a>leslie</a> <!---->
    </div> 
    <div class="_1H1Z49Dr_0">
     2019-12-13
    </div>
   </div> <!---->
  </div> 
  <div>
   <div class="_3M6kV3zb_0">
     "全栈，不只是一种技术分类，还代表了一种态度：理性、包容、好学。"其实老师说漏了一点"整体性"，这是从开始学到课程结束给我的收获。 
    <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;还记得课前必读章节的学习路径篇和老师在留言区沟通过：对于全栈弱的是编程，毕竟十年没写程序代码了，确实偏弱；学习课程的同时其实我已经在极客大学的算法训练营去修炼了一回，刚好两边同时结束。
    <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;不知不觉从教师节跟到了差不多圣诞节：总算是又坚持学完了一门功课，自己又进步了一点；谈谈个人对于课程的收获。
    <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.整体性：全栈其实是从程序的最初前端-&gt;后端-&gt;数据系统-&gt;web架构/操作系统-&gt;网络这么一个整体的过程，这是我在课程中看到和学到的；
    <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.知识性：部分内容其实其它课程又提及，不同的老师出发点不同，全栈的观点和某个专长的老师讲的又不一样；
    <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.针对性：这种针对性是细节，可能许多东西我们有概念可是经常会去忽略掉；程序是细节决定成败，不经意的细节可能就决定了最终的结局。
    <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;学习的时光总是非常辛苦而愉快的："付出时的辛苦，收获时的喜悦"。感谢老师一路以来的分享与教诲：希望后续在老师的个人博客里面能继续交流学习，愿老师未来一切顺利，谢谢老师。
   </div> 
   <div class="_2r3UB1GX_0">
    <span>展开</span><i class="iconfont"></i>
   </div> 
   <div class="_2xNIY4NG_0">
    <p class="_33BLbmw4_0">作者回复: 感谢阅读和评论 👍</p>
   </div> 
   <div class="_1w8H0ktn_0 _2A421P4G_0">
    <div class="_2jsFl-X0_0">
     <i class="iconfont"></i> <span></span>
    </div> 
    <div class="_2P4B1Hdm_0">
     <i class="iconfont"></i> <span class="">1</span>
    </div> <!---->
   </div>
  </div>
 </div></li>
<li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/11/0b/5f/2cc4060c.jpg" class="_2273kGdT_0"> 
 <div class="_2CG0SquK_0">
  <div class="_304R4gla_0">
   <div>
    <div class="_18Dng5rT_0">
     <a>子豪sirius</a> <!---->
    </div> 
    <div class="_1H1Z49Dr_0">
     2019-12-16
    </div>
   </div> <!---->
  </div> 
  <div>
   <div class="_3M6kV3zb_0">
    感谢老师为我们贡献这么一门优秀的课程，收获了很多。我工作快十年，最近也对自己的职业感到迷茫。学了课程后，发现自己有很多知识点和领域不足，平时工作也没有思考过，这篇课程很多地方启迪了。这篇课程还有很多没看懂的地方，会反复阅读，温故知新。下一步我会尝试构建自己的全栈知识体系，寻找职业的下一个目标
   </div> 
   <div class="_2r3UB1GX_0">
    <span>展开</span><i class="iconfont"></i>
   </div> 
   <div class="_2xNIY4NG_0">
    <p class="_33BLbmw4_0">作者回复: 👍</p>
   </div> 
   <div class="_1w8H0ktn_0 _2A421P4G_0">
    <div class="_2jsFl-X0_0">
     <i class="iconfont"></i> <span></span>
    </div> 
    <div class="_2P4B1Hdm_0">
     <i class="iconfont"></i> <span class=""></span>
    </div> <!---->
   </div>
  </div>
 </div></li>
<li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/13/f9/a1/667f0b2b.jpg" class="_2273kGdT_0"> 
 <div class="_2CG0SquK_0">
  <div class="_304R4gla_0">
   <div>
    <div class="_18Dng5rT_0">
     <a>小靓仔</a> <!---->
    </div> 
    <div class="_1H1Z49Dr_0">
     2019-12-16
    </div>
   </div> <!---->
  </div> 
  <div>
   <div class="_3M6kV3zb_0">
    请问老师，您说的做项目是不是就是指单纯的功能开发，而做产品就是用心去做，不只是为了单纯的完成任务，上升到另一个层次，考虑的更多
   </div> 
   <div class="_2r3UB1GX_0">
    <span>展开</span><i class="iconfont"></i>
   </div> 
   <div class="_2xNIY4NG_0">
    <p class="_33BLbmw4_0">作者回复: 你可以看一下第28讲的选修课堂，做产品要比做项目包含多得多的内容，而不只是“用心”两个字而已。简单来说，做产品，需要在产品的整个生命周期做不同的工作，比如我举的这个产品维护和线上问题修复的例子，这不是做一两个项目就能覆盖得到的。再比如说，单个项目交付可能就一个月的时间，但是整个产品的生命周期可能有好几年。</p>
   </div> 
   <div class="_1w8H0ktn_0 _2A421P4G_0">
    <div class="_2jsFl-X0_0">
     <i class="iconfont"></i> <span></span>
    </div> 
    <div class="_2P4B1Hdm_0">
     <i class="iconfont"></i> <span class=""></span>
    </div> <!---->
   </div>
  </div>
 </div></li>
<li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/15/04/8a/59355a67.jpg" class="_2273kGdT_0"> 
 <div class="_2CG0SquK_0">
  <div class="_304R4gla_0">
   <div>
    <div class="_18Dng5rT_0">
     <a>koko_zhk</a> <!---->
    </div> 
    <div class="_1H1Z49Dr_0">
     2019-12-13
    </div>
   </div> <!---->
  </div> 
  <div>
   <div class="_3M6kV3zb_0">
    全栈：海纳百川，有容乃大
   </div> 
   <div class="_2r3UB1GX_0">
    <span>展开</span><i class="iconfont"></i>
   </div> <!----> 
   <div class="_1w8H0ktn_0 _2A421P4G_0">
    <div class="_2jsFl-X0_0">
     <i class="iconfont"></i> <span></span>
    </div> 
    <div class="_2P4B1Hdm_0">
     <i class="iconfont"></i> <span class=""></span>
    </div> <!---->
   </div>
  </div>
 </div></li>
<li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/13/db/26/54f2c164.jpg" class="_2273kGdT_0"> 
 <div class="_2CG0SquK_0">
  <div class="_304R4gla_0">
   <div>
    <div class="_18Dng5rT_0">
     <a>靠人品去赢</a> <!---->
    </div> 
    <div class="_1H1Z49Dr_0">
     2019-12-13
    </div>
   </div> <!---->
  </div> 
  <div>
   <div class="_3M6kV3zb_0">
    绝对值回票价，但是可惜不能再追专栏，有点不舍。
   </div> 
   <div class="_2r3UB1GX_0">
    <span>展开</span><i class="iconfont"></i>
   </div> 
   <div class="_2xNIY4NG_0">
    <p class="_33BLbmw4_0">作者回复: 谢谢</p>
   </div> 
   <div class="_1w8H0ktn_0 _2A421P4G_0">
    <div class="_2jsFl-X0_0">
     <i class="iconfont"></i> <span></span>
    </div> 
    <div class="_2P4B1Hdm_0">
     <i class="iconfont"></i> <span class=""></span>
    </div> <!---->
   </div>
  </div>
 </div></li>
<li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/0f/4d/fd/0aa0e39f.jpg" class="_2273kGdT_0"> 
 <div class="_2CG0SquK_0">
  <div class="_304R4gla_0">
   <div>
    <div class="_18Dng5rT_0">
     <a>许童童</a> <!---->
    </div> 
    <div class="_1H1Z49Dr_0">
     2019-12-13
    </div>
   </div> <!---->
  </div> 
  <div>
   <div class="_3M6kV3zb_0">
    感谢老师，给我们带来这么好的课程，一路跟着老师学下来，收获是真的不少，其实人生也像是做全栈，不能把自己局限在某一个范围内，勇敢的跨出自己的舒适区，向着未知去探索自己的边界，这也许就是全栈在人生上的意义吧。
   </div> 
   <div class="_2r3UB1GX_0">
    <span>展开</span><i class="iconfont"></i>
   </div> 
   <div class="_2xNIY4NG_0">
    <p class="_33BLbmw4_0">作者回复: 👍</p>
   </div> 
   <div class="_1w8H0ktn_0 _2A421P4G_0">
    <div class="_2jsFl-X0_0">
     <i class="iconfont"></i> <span></span>
    </div> 
    <div class="_2P4B1Hdm_0">
     <i class="iconfont"></i> <span class=""></span>
    </div> <!---->
   </div>
  </div>
 </div></li>
<li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/16/bc/25/1c92a90c.jpg" class="_2273kGdT_0"> 
 <div class="_2CG0SquK_0">
  <div class="_304R4gla_0">
   <div>
    <div class="_18Dng5rT_0">
     <a>tt</a> <!---->
    </div> 
    <div class="_1H1Z49Dr_0">
     2019-12-13
    </div>
   </div> <!---->
  </div> 
  <div>
   <div class="_3M6kV3zb_0">
    感谢老师一路带给我的启发！
   </div> 
   <div class="_2r3UB1GX_0">
    <span>展开</span><i class="iconfont"></i>
   </div> 
   <div class="_2xNIY4NG_0">
    <p class="_33BLbmw4_0">作者回复: 不客气</p>
   </div> 
   <div class="_1w8H0ktn_0 _2A421P4G_0">
    <div class="_2jsFl-X0_0">
     <i class="iconfont"></i> <span></span>
    </div> 
    <div class="_2P4B1Hdm_0">
     <i class="iconfont"></i> <span class=""></span>
    </div> <!---->
   </div>
  </div>
 </div></li> |0     |full_html            |zh-hans  |3           |
|----------|-------||------|---------------------|---------|------------|

2020-11-19 16:16:06.754 INFO  jdbc.sqltiming Line:373 - select bookfieldt0_.entity_id as entity_i1_9_, bookfieldt0_.bundle as bundle2_9_, bookfieldt0_.delta 
as delta3_9_, bookfieldt0_.langcode as langcode4_9_, bookfieldt0_.revision_id as revision5_9_, 
bookfieldt0_.field_thumb_value as field_th6_9_ from node__field_thumb bookfieldt0_ where bookfieldt0_.entity_id=3 
 {executed in 0 msec}
2020-11-19 16:16:06.755 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------|-----------------------------------------------------------------------------------------|
|entity_id |bundle |delta |langcode |revision_id |field_thumb_value                                                                        |
|----------|-------|------|---------|------------|-----------------------------------------------------------------------------------------|
|3         |book   |0     |zh-hans  |3           |https://static001.geekbang.org/resource/image/1a/89/1a833841999b24e1436f5f29107fb589.jpg |
|----------|-------|------|---------|------------|-----------------------------------------------------------------------------------------|

2020-11-19 16:16:06.757 INFO  jdbc.sqltiming Line:373 - select nodefieldt0_.entity_id as entity_i1_18_0_, nodefieldt0_.bundle as bundle2_18_0_, nodefieldt0_.delta 
as delta3_18_0_, nodefieldt0_.langcode as langcode4_18_0_, nodefieldt0_.revision_id as revision5_18_0_, 
nodefieldt0_.field_thumb_value as field_th6_18_0_ from node_revision__field_thumb nodefieldt0_ 
where nodefieldt0_.entity_id=3 
 {executed in 1 msec}
2020-11-19 16:16:06.757 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------|-----------------------------------------------------------------------------------------|
|entity_id |bundle |delta |langcode |revision_id |field_thumb_value                                                                        |
|----------|-------|------|---------|------------|-----------------------------------------------------------------------------------------|
|[unread]  |book   |0     |zh-hans  |3           |https://static001.geekbang.org/resource/image/1a/89/1a833841999b24e1436f5f29107fb589.jpg |
|----------|-------|------|---------|------------|-----------------------------------------------------------------------------------------|

2020-11-19 16:16:06.759 INFO  jdbc.sqltiming Line:373 - select bookfieldf0_.entity_id as entity_i1_6_0_, bookfieldf0_.bundle as bundle2_6_0_, bookfieldf0_.delta 
as delta3_6_0_, bookfieldf0_.field_fenlei_target_id as field_fe4_6_0_, bookfieldf0_.langcode 
as langcode5_6_0_, bookfieldf0_.revision_id as revision6_6_0_ from node__field_fenlei bookfieldf0_ 
where bookfieldf0_.entity_id=3 
 {executed in 0 msec}
2020-11-19 16:16:06.759 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------------|---------|------------|
|entity_id |bundle |delta |field_fenlei_target_id |langcode |revision_id |
|----------|-------|------|-----------------------|---------|------------|
|[unread]  |book   |0     |1                      |zh-hans  |3           |
|----------|-------|------|-----------------------|---------|------------|

2020-11-19 16:16:06.761 INFO  jdbc.sqltiming Line:373 - select nodefieldf0_.entity_id as entity_i1_15_0_, nodefieldf0_.bundle as bundle2_15_0_, nodefieldf0_.delta 
as delta3_15_0_, nodefieldf0_.field_fenlei_target_id as field_fe4_15_0_, nodefieldf0_.langcode 
as langcode5_15_0_, nodefieldf0_.revision_id as revision6_15_0_ from node_revision__field_fenlei 
nodefieldf0_ where nodefieldf0_.entity_id=3 
 {executed in 0 msec}
2020-11-19 16:16:06.761 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------------|---------|------------|
|entity_id |bundle |delta |field_fenlei_target_id |langcode |revision_id |
|----------|-------|------|-----------------------|---------|------------|
|[unread]  |book   |0     |1                      |zh-hans  |3           |
|----------|-------|------|-----------------------|---------|------------|

2020-11-19 16:16:06.763 INFO  jdbc.sqltiming Line:373 - select bookfieldf0_.entity_id as entity_i1_7_, bookfieldf0_.bundle as bundle2_7_, bookfieldf0_.delta 
as delta3_7_, bookfieldf0_.field_fsid_value as field_fs4_7_, bookfieldf0_.langcode as langcode5_7_, 
bookfieldf0_.revision_id as revision6_7_ from node__field_fsid bookfieldf0_ where bookfieldf0_.field_fsid_value='531972004415189' 
 {executed in 0 msec}
2020-11-19 16:16:06.763 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------|---------|------------|
|entity_id |bundle |delta |field_fsid_value |langcode |revision_id |
|----------|-------|------|-----------------|---------|------------|
|4         |book   |0     |531972004415189  |zh-hans  |4           |
|----------|-------|------|-----------------|---------|------------|

2020-11-19 16:16:06.764 INFO  jdbc.sqltiming Line:373 - select nodeentity0_.nid as nid1_3_, nodeentity0_.langcode as langcode2_3_, nodeentity0_.type 
as type3_3_, nodeentity0_.uuid as uuid4_3_, nodeentity0_.vid as vid5_3_ from node nodeentity0_ 
where nodeentity0_.nid=4 
 {executed in 0 msec}
2020-11-19 16:16:06.765 INFO  jdbc.resultsettable Line:610 - 
|----|---------|-----|-------------------------------------|----|
|nid |langcode |type |uuid                                 |vid |
|----|---------|-----|-------------------------------------|----|
|4   |zh-hans  |book |d17d89b9-9997-4888-9992-4242ccefbff5 |4   |
|----|---------|-----|-------------------------------------|----|

2020-11-19 16:16:06.767 INFO  jdbc.sqltiming Line:373 - select nodefieldf0_.entity_id as entity_i1_16_0_, nodefieldf0_.bundle as bundle2_16_0_, nodefieldf0_.delta 
as delta3_16_0_, nodefieldf0_.field_fsid_value as field_fs4_16_0_, nodefieldf0_.langcode as 
langcode5_16_0_, nodefieldf0_.revision_id as revision6_16_0_ from node_revision__field_fsid 
nodefieldf0_ where nodefieldf0_.entity_id=4 
 {executed in 0 msec}
2020-11-19 16:16:06.768 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------|---------|------------|
|entity_id |bundle |delta |field_fsid_value |langcode |revision_id |
|----------|-------|------|-----------------|---------|------------|
|[unread]  |book   |0     |531972004415189  |zh-hans  |4           |
|----------|-------|------|-----------------|---------|------------|

2020-11-19 16:16:06.769 INFO  jdbc.sqltiming Line:373 - select bookentity0_.nid as nid1_1_, bookentity0_.bid as bid2_1_, bookentity0_.depth as depth3_1_, 
bookentity0_.has_children as has_chil4_1_, bookentity0_.p1 as p5_1_, bookentity0_.p2 as p6_1_, 
bookentity0_.p3 as p7_1_, bookentity0_.p4 as p8_1_, bookentity0_.p5 as p9_1_, bookentity0_.pid 
as pid10_1_, bookentity0_.weight as weight11_1_ from book bookentity0_ where bookentity0_.nid=4 
 {executed in 0 msec}
2020-11-19 16:16:06.770 INFO  jdbc.resultsettable Line:610 - 
|----|----|------|-------------|---|---|---|---|---|----|-------|
|nid |bid |depth |has_children |p1 |p2 |p3 |p4 |p5 |pid |weight |
|----|----|------|-------------|---|---|---|---|---|----|-------|
|4   |1   |2     |1            |1  |4  |0  |0  |0  |1   |0      |
|----|----|------|-------------|---|---|---|---|---|----|-------|

2020-11-19 16:16:06.772 INFO  jdbc.sqltiming Line:373 - select nodebodyen0_.entity_id as entity_i1_4_, nodebodyen0_.body_value as body_val2_4_, nodebodyen0_.body_summary 
as body_sum3_4_, nodebodyen0_.bundle as bundle4_4_, nodebodyen0_.delta as delta5_4_, nodebodyen0_.body_format 
as body_for6_4_, nodebodyen0_.langcode as langcode7_4_, nodebodyen0_.revision_id as revision8_4_ 
from node__body nodebodyen0_ where nodebodyen0_.entity_id=4 
 {executed in 1 msec}
2020-11-19 16:16:06.772 INFO  jdbc.resultsettable Line:610 - 
|----------|-----------|-------------|-------|------|------------|---------|------------|
|entity_id |body_value |body_summary |bundle |delta |body_format |langcode |revision_id |
|----------|-----------|-------------|-------|------|------------|---------|------------|
|4         |           |             |book   |0     |full_html   |zh-hans  |4           |
|----------|-----------|-------------|-------|------|------------|---------|------------|

2020-11-19 16:16:06.773 INFO  jdbc.sqltiming Line:373 - select nodebodyre0_.entity_id as entity_i1_13_0_, nodebodyre0_.body_value as body_val2_13_0_, 
nodebodyre0_.body_summary as body_sum3_13_0_, nodebodyre0_.bundle as bundle4_13_0_, nodebodyre0_.delta 
as delta5_13_0_, nodebodyre0_.body_format as body_for6_13_0_, nodebodyre0_.langcode as langcode7_13_0_, 
nodebodyre0_.revision_id as revision8_13_0_ from node_revision__body nodebodyre0_ where nodebodyre0_.entity_id=4 
 {executed in 0 msec}
2020-11-19 16:16:06.774 INFO  jdbc.resultsettable Line:610 - 
|----------|-----------|-------------|-------|------|------------|---------|------------|
|entity_id |body_value |body_summary |bundle |delta |body_format |langcode |revision_id |
|----------|-----------|-------------|-------|------|------------|---------|------------|
|[unread]  |           |             |book   |0     |full_html   |zh-hans  |4           |
|----------|-----------|-------------|-------|------|------------|---------|------------|

2020-11-19 16:16:06.776 INFO  jdbc.sqltiming Line:373 - select nodefiledd0_.nid as nid1_10_, nodefiledd0_.changed as changed2_10_, nodefiledd0_.created 
as created3_10_, nodefiledd0_.default_langcode as default_4_10_, nodefiledd0_.langcode as langcode5_10_, 
nodefiledd0_.promote as promote6_10_, nodefiledd0_.revision_translation_affected as revision7_10_, 
nodefiledd0_.status as status8_10_, nodefiledd0_.sticky as sticky9_10_, nodefiledd0_.title 
as title10_10_, nodefiledd0_.type as type11_10_, nodefiledd0_.uid as uid12_10_, nodefiledd0_.vid 
as vid13_10_ from node_field_data nodefiledd0_ where nodefiledd0_.nid=4 
 {executed in 0 msec}
2020-11-19 16:16:06.777 INFO  jdbc.resultsettable Line:610 - 
|----|-----------|-----------|-----------------|---------|--------|------------------------------|-------|-------|---------------|-----|----|----|
|nid |changed    |created    |default_langcode |langcode |promote |revision_translation_affected |status |sticky |title          |type |uid |vid |
|----|-----------|-----------|-----------------|---------|--------|------------------------------|-------|-------|---------------|-----|----|----|
|4   |1605754826 |1605754826 |1                |zh-hans  |0       |1                             |1      |0      |06丨第六章 专题 (7讲) |book |1   |4   |
|----|-----------|-----------|-----------------|---------|--------|------------------------------|-------|-------|---------------|-----|----|----|

2020-11-19 16:16:06.778 INFO  jdbc.sqltiming Line:373 - select nodefieldr0_.nid as nid1_11_0_, nodefieldr0_.changed as changed2_11_0_, nodefieldr0_.created 
as created3_11_0_, nodefieldr0_.default_langcode as default_4_11_0_, nodefieldr0_.langcode 
as langcode5_11_0_, nodefieldr0_.promote as promote6_11_0_, nodefieldr0_.revision_translation_affected 
as revision7_11_0_, nodefieldr0_.status as status8_11_0_, nodefieldr0_.sticky as sticky9_11_0_, 
nodefieldr0_.title as title10_11_0_, nodefieldr0_.uid as uid11_11_0_, nodefieldr0_.vid as vid12_11_0_ 
from node_field_revision nodefieldr0_ where nodefieldr0_.nid=4 
 {executed in 1 msec}
2020-11-19 16:16:06.778 INFO  jdbc.resultsettable Line:610 - 
|---------|-----------|-----------|-----------------|---------|--------|------------------------------|-------|-------|---------------|----|----|
|nid      |changed    |created    |default_langcode |langcode |promote |revision_translation_affected |status |sticky |title          |uid |vid |
|---------|-----------|-----------|-----------------|---------|--------|------------------------------|-------|-------|---------------|----|----|
|[unread] |1605754826 |1605754826 |1                |zh-hans  |0       |1                             |1      |0      |06丨第六章 专题 (7讲) |1   |4   |
|---------|-----------|-----------|-----------------|---------|--------|------------------------------|-------|-------|---------------|----|----|

2020-11-19 16:16:06.779 INFO  jdbc.sqltiming Line:373 - update node_field_data set changed=1605773766, created=1605773766, default_langcode=1, langcode='zh-hans', 
promote=0, revision_translation_affected=1, status=1, sticky=0, title='06丨第六章 专题 (7讲)', type='book', 
uid=1, vid=4 where nid=4 
 {executed in 0 msec}
2020-11-19 16:16:06.780 INFO  jdbc.sqltiming Line:373 - update node_field_revision set changed=1605773766, created=1605773766, default_langcode=1, 
langcode='zh-hans', promote=0, revision_translation_affected=1, status=1, sticky=0, title='06丨第六章 
专题 (7讲)', uid=1, vid=4 where nid=4 
 {executed in 0 msec}
2020-11-19 16:16:06.785 INFO  jdbc.sqltiming Line:373 - select bookfieldm0_.entity_id as entity_i1_8_, bookfieldm0_.bundle as bundle2_8_, bookfieldm0_.delta 
as delta3_8_, bookfieldm0_.langcode as langcode4_8_, bookfieldm0_.field_media_value as field_me5_8_, 
bookfieldm0_.revision_id as revision6_8_ from node__field_media bookfieldm0_ where bookfieldm0_.entity_id=4 
 {executed in 1 msec}
2020-11-19 16:16:06.785 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------------|------------|
|entity_id |bundle |delta |langcode |field_media_value |revision_id |
|----------|-------|------|---------|------------------|------------|
|4         |book   |0     |zh-hans  |                  |4           |
|----------|-------|------|---------|------------------|------------|

2020-11-19 16:16:06.787 INFO  jdbc.sqltiming Line:373 - select nodefieldm0_.entity_id as entity_i1_17_0_, nodefieldm0_.bundle as bundle2_17_0_, nodefieldm0_.delta 
as delta3_17_0_, nodefieldm0_.langcode as langcode4_17_0_, nodefieldm0_.field_media_value as 
field_me5_17_0_, nodefieldm0_.revision_id as revision6_17_0_ from node_revision__field_media 
nodefieldm0_ where nodefieldm0_.entity_id=4 
 {executed in 0 msec}
2020-11-19 16:16:06.788 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------------|------------|
|entity_id |bundle |delta |langcode |field_media_value |revision_id |
|----------|-------|------|---------|------------------|------------|
|[unread]  |book   |0     |zh-hans  |                  |4           |
|----------|-------|------|---------|------------------|------------|

2020-11-19 16:16:06.790 INFO  jdbc.sqltiming Line:373 - select bookfieldc0_.entity_id as entity_i1_5_, bookfieldc0_.bundle as bundle2_5_, bookfieldc0_.field_comment_value 
as field_co3_5_, bookfieldc0_.delta as delta4_5_, bookfieldc0_.field_comment_format as field_co5_5_, 
bookfieldc0_.langcode as langcode6_5_, bookfieldc0_.revision_id as revision7_5_ from node__field_comment 
bookfieldc0_ where bookfieldc0_.entity_id=4 
 {executed in 1 msec}
2020-11-19 16:16:06.790 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|--------------------|------|---------------------|---------|------------|
|entity_id |bundle |field_comment_value |delta |field_comment_format |langcode |revision_id |
|----------|-------|--------------------|------|---------------------|---------|------------|
|4         |book   |                    |0     |full_html            |zh-hans  |4           |
|----------|-------|--------------------|------|---------------------|---------|------------|

2020-11-19 16:16:06.792 INFO  jdbc.sqltiming Line:373 - select nodefieldc0_.entity_id as entity_i1_14_0_, nodefieldc0_.bundle as bundle2_14_0_, nodefieldc0_.field_comment_value 
as field_co3_14_0_, nodefieldc0_.delta as delta4_14_0_, nodefieldc0_.field_comment_format as 
field_co5_14_0_, nodefieldc0_.langcode as langcode6_14_0_, nodefieldc0_.revision_id as revision7_14_0_ 
from node_revision__field_comment nodefieldc0_ where nodefieldc0_.entity_id=4 
 {executed in 0 msec}
2020-11-19 16:16:06.793 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|--------------------|------|---------------------|---------|------------|
|entity_id |bundle |field_comment_value |delta |field_comment_format |langcode |revision_id |
|----------|-------|--------------------|------|---------------------|---------|------------|
|[unread]  |book   |                    |0     |full_html            |zh-hans  |4           |
|----------|-------|--------------------|------|---------------------|---------|------------|

2020-11-19 16:16:06.794 INFO  jdbc.sqltiming Line:373 - select bookfieldt0_.entity_id as entity_i1_9_, bookfieldt0_.bundle as bundle2_9_, bookfieldt0_.delta 
as delta3_9_, bookfieldt0_.langcode as langcode4_9_, bookfieldt0_.revision_id as revision5_9_, 
bookfieldt0_.field_thumb_value as field_th6_9_ from node__field_thumb bookfieldt0_ where bookfieldt0_.entity_id=4 
 {executed in 0 msec}
2020-11-19 16:16:06.795 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------|------------------|
|entity_id |bundle |delta |langcode |revision_id |field_thumb_value |
|----------|-------|------|---------|------------|------------------|
|4         |book   |0     |zh-hans  |4           |                  |
|----------|-------|------|---------|------------|------------------|

2020-11-19 16:16:06.796 INFO  jdbc.sqltiming Line:373 - select nodefieldt0_.entity_id as entity_i1_18_0_, nodefieldt0_.bundle as bundle2_18_0_, nodefieldt0_.delta 
as delta3_18_0_, nodefieldt0_.langcode as langcode4_18_0_, nodefieldt0_.revision_id as revision5_18_0_, 
nodefieldt0_.field_thumb_value as field_th6_18_0_ from node_revision__field_thumb nodefieldt0_ 
where nodefieldt0_.entity_id=4 
 {executed in 0 msec}
2020-11-19 16:16:06.797 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------|------------------|
|entity_id |bundle |delta |langcode |revision_id |field_thumb_value |
|----------|-------|------|---------|------------|------------------|
|[unread]  |book   |0     |zh-hans  |4           |                  |
|----------|-------|------|---------|------------|------------------|

2020-11-19 16:16:06.799 INFO  jdbc.sqltiming Line:373 - select bookfieldf0_.entity_id as entity_i1_6_0_, bookfieldf0_.bundle as bundle2_6_0_, bookfieldf0_.delta 
as delta3_6_0_, bookfieldf0_.field_fenlei_target_id as field_fe4_6_0_, bookfieldf0_.langcode 
as langcode5_6_0_, bookfieldf0_.revision_id as revision6_6_0_ from node__field_fenlei bookfieldf0_ 
where bookfieldf0_.entity_id=4 
 {executed in 1 msec}
2020-11-19 16:16:06.799 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------------|---------|------------|
|entity_id |bundle |delta |field_fenlei_target_id |langcode |revision_id |
|----------|-------|------|-----------------------|---------|------------|
|[unread]  |book   |0     |1                      |zh-hans  |4           |
|----------|-------|------|-----------------------|---------|------------|

2020-11-19 16:16:06.801 INFO  jdbc.sqltiming Line:373 - select nodefieldf0_.entity_id as entity_i1_15_0_, nodefieldf0_.bundle as bundle2_15_0_, nodefieldf0_.delta 
as delta3_15_0_, nodefieldf0_.field_fenlei_target_id as field_fe4_15_0_, nodefieldf0_.langcode 
as langcode5_15_0_, nodefieldf0_.revision_id as revision6_15_0_ from node_revision__field_fenlei 
nodefieldf0_ where nodefieldf0_.entity_id=4 
 {executed in 0 msec}
2020-11-19 16:16:06.802 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------------|---------|------------|
|entity_id |bundle |delta |field_fenlei_target_id |langcode |revision_id |
|----------|-------|------|-----------------------|---------|------------|
|[unread]  |book   |0     |1                      |zh-hans  |4           |
|----------|-------|------|-----------------------|---------|------------|

2020-11-19 16:16:07.956 INFO  jdbc.sqltiming Line:373 - select bookchecke0_.item_id as item_id1_2_, bookchecke0_.got as got2_2_, bookchecke0_.name 
as name3_2_ from book_check bookchecke0_ where bookchecke0_.item_id=786040107286715 and bookchecke0_.name='net_content' 
 {executed in 1 msec}
2020-11-19 16:16:07.957 INFO  jdbc.resultsettable Line:610 - 
|--------|----|-----|
|item_id |got |name |
|--------|----|-----|
|--------|----|-----|

2020-11-19 16:16:16.011 INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean Line:598 - Closing JPA EntityManagerFactory for persistence unit 'default'
2020-11-19 16:16:16.012 INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Line:218 - Shutting down ExecutorService 'applicationTaskExecutor'
2020-11-19 16:16:16.012 INFO  com.zaxxer.hikari.HikariDataSource Line:350 - HikariPool-1 - Shutdown initiated...
2020-11-19 16:16:16.017 INFO  com.zaxxer.hikari.HikariDataSource Line:352 - HikariPool-1 - Shutdown completed.
2020-11-19 16:18:14.536 INFO  geek.me.javaapi.JavaApiApplication Line:651 - No active profile set, falling back to default profiles: default
2020-11-19 16:18:14.903 INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate Line:127 - Bootstrapping Spring Data JPA repositories in DEFERRED mode.
2020-11-19 16:18:15.004 INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate Line:187 - Finished Spring Data repository scanning in 96ms. Found 20 JPA repository interfaces.
2020-11-19 16:18:15.137 INFO  org.springframework.cloud.context.scope.GenericScope Line:295 - BeanFactory id=b5c0e1e1-69da-3b46-8083-9bc08899a254
2020-11-19 16:18:15.405 INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer Line:108 - Tomcat initialized with port(s): 8080 (http)
2020-11-19 16:18:15.412 INFO  org.apache.coyote.http11.Http11NioProtocol Line:173 - Initializing ProtocolHandler ["http-nio-8080"]
2020-11-19 16:18:15.413 INFO  org.apache.catalina.core.StandardService Line:173 - Starting service [Tomcat]
2020-11-19 16:18:15.413 INFO  org.apache.catalina.core.StandardEngine Line:173 - Starting Servlet engine: [Apache Tomcat/9.0.37]
2020-11-19 16:18:15.489 INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Line:173 - Initializing Spring embedded WebApplicationContext
2020-11-19 16:18:15.489 INFO  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext Line:285 - Root WebApplicationContext: initialization completed in 939 ms
2020-11-19 16:18:15.630 INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Line:181 - Initializing ExecutorService 'applicationTaskExecutor'
2020-11-19 16:18:15.639 INFO  com.zaxxer.hikari.HikariDataSource Line:110 - HikariPool-1 - Starting...
2020-11-19 16:18:15.735 INFO  com.zaxxer.hikari.HikariDataSource Line:123 - HikariPool-1 - Start completed.
2020-11-19 16:18:15.834 INFO  org.hibernate.jpa.internal.util.LogHelper Line:31  - HHH000204: Processing PersistenceUnitInfo [name: default]
2020-11-19 16:18:15.877 INFO  org.hibernate.Version Line:44  - HHH000412: Hibernate ORM core version 5.4.20.Final
2020-11-19 16:18:15.980 INFO  org.hibernate.annotations.common.Version Line:49  - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-11-19 16:18:16.070 INFO  com.netflix.config.sources.URLConfigurationSource Line:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-11-19 16:18:16.073 INFO  org.hibernate.dialect.Dialect Line:170 - HHH000400: Using dialect: org.hibernate.dialect.MySQL55Dialect
2020-11-19 16:18:16.073 INFO  com.netflix.config.sources.URLConfigurationSource Line:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-11-19 16:18:16.690 INFO  org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator Line:52  - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-11-19 16:18:16.696 INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean Line:416 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-11-19 16:18:17.516 INFO  org.springframework.cloud.commons.util.InetUtils Line:170 - Cannot determine local hostname
2020-11-19 16:18:17.595 INFO  org.apache.coyote.http11.Http11NioProtocol Line:173 - Starting ProtocolHandler ["http-nio-8080"]
2020-11-19 16:18:17.614 INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer Line:220 - Tomcat started on port(s): 8080 (http) with context path ''
2020-11-19 16:18:18.233 INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Line:173 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-11-19 16:18:18.233 INFO  org.springframework.web.servlet.DispatcherServlet Line:525 - Initializing Servlet 'dispatcherServlet'
2020-11-19 16:18:18.239 INFO  org.springframework.web.servlet.DispatcherServlet Line:547 - Completed initialization in 6 ms
2020-11-19 16:18:18.715 INFO  org.springframework.cloud.commons.util.InetUtils Line:170 - Cannot determine local hostname
2020-11-19 16:18:18.717 INFO  org.springframework.data.repository.config.DeferredRepositoryInitializationListener Line:49  - Triggering deferred initialization of Spring Data repositories…
2020-11-19 16:18:19.291 INFO  org.springframework.data.repository.config.DeferredRepositoryInitializationListener Line:53  - Spring Data repositories initialized!
2020-11-19 16:18:19.296 INFO  geek.me.javaapi.JavaApiApplication Line:61  - Started JavaApiApplication in 7.637 seconds (JVM running for 8.466)
2020-11-19 16:18:54.167 INFO  jdbc.sqltiming Line:373 - select queueentit0_.item_id as item_id1_19_, queueentit0_.base_path as base_pat2_19_, queueentit0_.name 
as name3_19_, queueentit0_.todo as todo4_19_ from queue_new queueentit0_ where queueentit0_.todo=1 
 {executed in 1 msec}
2020-11-19 16:18:54.180 INFO  jdbc.resultsettable Line:610 - 
|-----------------|-------------------------------|--------------------|-----|
|item_id          |base_path                      |name                |todo |
|-----------------|-------------------------------|--------------------|-----|
|283828550600385  |00-资源文件/14-极客时间/01-专栏课/051-99/ |87-全栈工程师修炼指南        |1    |
|300655922831157  |00-资源文件/14-极客时间/01-专栏课/051-99/ |52-透视HTTP协议         |1    |
|390535478164697  |00-资源文件/14-极客时间/01-专栏课/051-99/ |51-白话法律42讲          |1    |
|409602706903658  |00-资源文件/14-极客时间/01-专栏课/051-99/ |77-从0打造音视频直播系统      |1    |
|459081746926346  |00-资源文件/14-极客时间/01-专栏课/051-99/ |99-JavaScript核心原理解析 |1    |
|476330106989327  |00-资源文件/14-极客时间/01-专栏课/051-99/ |88-高并发系统设计40问       |1    |
|621195835058382  |00-资源文件/14-极客时间/01-专栏课/051-99/ |97-项目管理实战20讲        |1    |
|626896109933850  |00-资源文件/14-极客时间/01-专栏课/051-99/ |98-设计模式之美           |1    |
|773737007105338  |00-资源文件/14-极客时间/01-专栏课/051-99/ |53-OpenResty从入门到实战  |1    |
|781941951179116  |00-资源文件/14-极客时间/01-专栏课/051-99/ |75-编辑训练营            |1    |
|787964344536295  |00-资源文件/14-极客时间/01-专栏课/051-99/ |80-网络编程实战           |1    |
|789557280998655  |00-资源文件/14-极客时间/01-专栏课/051-99/ |86-即时消息技术剖析与实战      |1    |
|823812106395779  |00-资源文件/14-极客时间/01-专栏课/051-99/ |74-Flutter核心技术与实战   |1    |
|855137735533744  |00-资源文件/14-极客时间/01-专栏课/051-99/ |94-DDD实战课           |1    |
|861073733380654  |00-资源文件/14-极客时间/01-专栏课/051-99/ |90-分布式技术原理与算法解析     |1    |
|876595205877896  |00-资源文件/14-极客时间/01-专栏课/051-99/ |91-说透中台             |1    |
|877479874575179  |00-资源文件/14-极客时间/01-专栏课/051-99/ |83-编译原理之美           |1    |
|936433950782588  |00-资源文件/14-极客时间/01-专栏课/051-99/ |95-苏杰的产品创新课         |1    |
|952316731239648  |00-资源文件/14-极客时间/01-专栏课/051-99/ |92-DevOps实战笔记       |1    |
|954967934009220  |00-资源文件/14-极客时间/01-专栏课/051-99/ |73-黄勇的OKR实战笔记       |1    |
|1004252009859251 |00-资源文件/14-极客时间/01-专栏课/051-99/ |85-研发效率破局之道         |1    |
|1009872364102685 |00-资源文件/14-极客时间/01-专栏课/051-99/ |81-浏览器工作原理与实践       |1    |
|1022101157981678 |00-资源文件/14-极客时间/01-专栏课/051-99/ |79-消息队列高手课          |1    |
|-----------------|-------------------------------|--------------------|-----|

2020-11-19 16:19:03.880 INFO  jdbc.sqltiming Line:373 - select bookfieldf0_.entity_id as entity_i1_7_, bookfieldf0_.bundle as bundle2_7_, bookfieldf0_.delta 
as delta3_7_, bookfieldf0_.field_fsid_value as field_fs4_7_, bookfieldf0_.langcode as langcode5_7_, 
bookfieldf0_.revision_id as revision6_7_ from node__field_fsid bookfieldf0_ where bookfieldf0_.field_fsid_value='283828550600385' 
 {executed in 1 msec}
2020-11-19 16:19:03.881 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------|---------|------------|
|entity_id |bundle |delta |field_fsid_value |langcode |revision_id |
|----------|-------|------|-----------------|---------|------------|
|1         |book   |0     |283828550600385  |zh-hans  |1           |
|----------|-------|------|-----------------|---------|------------|

2020-11-19 16:19:03.888 INFO  jdbc.sqltiming Line:373 - select nodeentity0_.nid as nid1_3_, nodeentity0_.langcode as langcode2_3_, nodeentity0_.type 
as type3_3_, nodeentity0_.uuid as uuid4_3_, nodeentity0_.vid as vid5_3_ from node nodeentity0_ 
where nodeentity0_.nid=1 
 {executed in 1 msec}
2020-11-19 16:19:03.889 INFO  jdbc.resultsettable Line:610 - 
|----|---------|-----|-------------------------------------|----|
|nid |langcode |type |uuid                                 |vid |
|----|---------|-----|-------------------------------------|----|
|1   |zh-hans  |book |4bb8e624-5f97-4aae-b6e2-3b2e1b596579 |1   |
|----|---------|-----|-------------------------------------|----|

2020-11-19 16:19:03.926 INFO  jdbc.sqltiming Line:373 - select nodefieldf0_.entity_id as entity_i1_16_0_, nodefieldf0_.bundle as bundle2_16_0_, nodefieldf0_.delta 
as delta3_16_0_, nodefieldf0_.field_fsid_value as field_fs4_16_0_, nodefieldf0_.langcode as 
langcode5_16_0_, nodefieldf0_.revision_id as revision6_16_0_ from node_revision__field_fsid 
nodefieldf0_ where nodefieldf0_.entity_id=1 
 {executed in 1 msec}
2020-11-19 16:19:03.926 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------|---------|------------|
|entity_id |bundle |delta |field_fsid_value |langcode |revision_id |
|----------|-------|------|-----------------|---------|------------|
|[unread]  |book   |0     |283828550600385  |zh-hans  |1           |
|----------|-------|------|-----------------|---------|------------|

2020-11-19 16:19:03.931 INFO  jdbc.sqltiming Line:373 - select bookentity0_.nid as nid1_1_, bookentity0_.bid as bid2_1_, bookentity0_.depth as depth3_1_, 
bookentity0_.has_children as has_chil4_1_, bookentity0_.p1 as p5_1_, bookentity0_.p2 as p6_1_, 
bookentity0_.p3 as p7_1_, bookentity0_.p4 as p8_1_, bookentity0_.p5 as p9_1_, bookentity0_.pid 
as pid10_1_, bookentity0_.weight as weight11_1_ from book bookentity0_ where bookentity0_.nid=1 
 {executed in 1 msec}
2020-11-19 16:19:03.932 INFO  jdbc.resultsettable Line:610 - 
|----|----|------|-------------|---|---|---|---|---|----|-------|
|nid |bid |depth |has_children |p1 |p2 |p3 |p4 |p5 |pid |weight |
|----|----|------|-------------|---|---|---|---|---|----|-------|
|1   |1   |1     |1            |1  |0  |0  |0  |0  |0   |0      |
|----|----|------|-------------|---|---|---|---|---|----|-------|

2020-11-19 16:19:03.939 INFO  jdbc.sqltiming Line:373 - select nodebodyen0_.entity_id as entity_i1_4_, nodebodyen0_.body_value as body_val2_4_, nodebodyen0_.body_summary 
as body_sum3_4_, nodebodyen0_.bundle as bundle4_4_, nodebodyen0_.delta as delta5_4_, nodebodyen0_.body_format 
as body_for6_4_, nodebodyen0_.langcode as langcode7_4_, nodebodyen0_.revision_id as revision8_4_ 
from node__body nodebodyen0_ where nodebodyen0_.entity_id=1 
 {executed in 2 msec}
2020-11-19 16:19:03.940 INFO  jdbc.resultsettable Line:610 - 
|----------|-----------|-------------|-------|------|------------|---------|------------|
|entity_id |body_value |body_summary |bundle |delta |body_format |langcode |revision_id |
|----------|-----------|-------------|-------|------|------------|---------|------------|
|1         |           |             |book   |0     |full_html   |zh-hans  |1           |
|----------|-----------|-------------|-------|------|------------|---------|------------|

2020-11-19 16:19:03.944 INFO  jdbc.sqltiming Line:373 - select nodebodyre0_.entity_id as entity_i1_13_0_, nodebodyre0_.body_value as body_val2_13_0_, 
nodebodyre0_.body_summary as body_sum3_13_0_, nodebodyre0_.bundle as bundle4_13_0_, nodebodyre0_.delta 
as delta5_13_0_, nodebodyre0_.body_format as body_for6_13_0_, nodebodyre0_.langcode as langcode7_13_0_, 
nodebodyre0_.revision_id as revision8_13_0_ from node_revision__body nodebodyre0_ where nodebodyre0_.entity_id=1 
 {executed in 1 msec}
2020-11-19 16:19:03.945 INFO  jdbc.resultsettable Line:610 - 
|----------|-----------|-------------|-------|------|------------|---------|------------|
|entity_id |body_value |body_summary |bundle |delta |body_format |langcode |revision_id |
|----------|-----------|-------------|-------|------|------------|---------|------------|
|[unread]  |           |             |book   |0     |full_html   |zh-hans  |1           |
|----------|-----------|-------------|-------|------|------------|---------|------------|

2020-11-19 16:19:03.951 INFO  jdbc.sqltiming Line:373 - select nodefiledd0_.nid as nid1_10_, nodefiledd0_.changed as changed2_10_, nodefiledd0_.created 
as created3_10_, nodefiledd0_.default_langcode as default_4_10_, nodefiledd0_.langcode as langcode5_10_, 
nodefiledd0_.promote as promote6_10_, nodefiledd0_.revision_translation_affected as revision7_10_, 
nodefiledd0_.status as status8_10_, nodefiledd0_.sticky as sticky9_10_, nodefiledd0_.title 
as title10_10_, nodefiledd0_.type as type11_10_, nodefiledd0_.uid as uid12_10_, nodefiledd0_.vid 
as vid13_10_ from node_field_data nodefiledd0_ where nodefiledd0_.nid=1 
 {executed in 1 msec}
2020-11-19 16:19:03.952 INFO  jdbc.resultsettable Line:610 - 
|----|-----------|-----------|-----------------|---------|--------|------------------------------|-------|-------|-------------|-----|----|----|
|nid |changed    |created    |default_langcode |langcode |promote |revision_translation_affected |status |sticky |title        |type |uid |vid |
|----|-----------|-----------|-----------------|---------|--------|------------------------------|-------|-------|-------------|-----|----|----|
|1   |1605773721 |1605773721 |1                |zh-hans  |0       |1                             |1      |0      |87-全栈工程师修炼指南 |book |1   |1   |
|----|-----------|-----------|-----------------|---------|--------|------------------------------|-------|-------|-------------|-----|----|----|

2020-11-19 16:19:03.955 INFO  jdbc.sqltiming Line:373 - select nodefieldr0_.nid as nid1_11_0_, nodefieldr0_.changed as changed2_11_0_, nodefieldr0_.created 
as created3_11_0_, nodefieldr0_.default_langcode as default_4_11_0_, nodefieldr0_.langcode 
as langcode5_11_0_, nodefieldr0_.promote as promote6_11_0_, nodefieldr0_.revision_translation_affected 
as revision7_11_0_, nodefieldr0_.status as status8_11_0_, nodefieldr0_.sticky as sticky9_11_0_, 
nodefieldr0_.title as title10_11_0_, nodefieldr0_.uid as uid11_11_0_, nodefieldr0_.vid as vid12_11_0_ 
from node_field_revision nodefieldr0_ where nodefieldr0_.nid=1 
 {executed in 0 msec}
2020-11-19 16:19:03.956 INFO  jdbc.resultsettable Line:610 - 
|---------|-----------|-----------|-----------------|---------|--------|------------------------------|-------|-------|-------------|----|----|
|nid      |changed    |created    |default_langcode |langcode |promote |revision_translation_affected |status |sticky |title        |uid |vid |
|---------|-----------|-----------|-----------------|---------|--------|------------------------------|-------|-------|-------------|----|----|
|[unread] |1605773721 |1605773721 |1                |zh-hans  |0       |1                             |1      |0      |87-全栈工程师修炼指南 |1   |1   |
|---------|-----------|-----------|-----------------|---------|--------|------------------------------|-------|-------|-------------|----|----|

2020-11-19 16:19:03.966 INFO  jdbc.sqltiming Line:373 - update node_field_data set changed=1605773943, created=1605773943, default_langcode=1, langcode='zh-hans', 
promote=0, revision_translation_affected=1, status=1, sticky=0, title='87-全栈工程师修炼指南', type='book', 
uid=1, vid=1 where nid=1 
 {executed in 4 msec}
2020-11-19 16:19:03.967 INFO  jdbc.sqltiming Line:373 - update node_field_revision set changed=1605773943, created=1605773943, default_langcode=1, 
langcode='zh-hans', promote=0, revision_translation_affected=1, status=1, sticky=0, title='87-全栈工程师修炼指南', 
uid=1, vid=1 where nid=1 
 {executed in 0 msec}
2020-11-19 16:19:03.976 INFO  jdbc.sqltiming Line:373 - select bookfieldm0_.entity_id as entity_i1_8_, bookfieldm0_.bundle as bundle2_8_, bookfieldm0_.delta 
as delta3_8_, bookfieldm0_.langcode as langcode4_8_, bookfieldm0_.field_media_value as field_me5_8_, 
bookfieldm0_.revision_id as revision6_8_ from node__field_media bookfieldm0_ where bookfieldm0_.entity_id=1 
 {executed in 0 msec}
2020-11-19 16:19:03.977 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------------|------------|
|entity_id |bundle |delta |langcode |field_media_value |revision_id |
|----------|-------|------|---------|------------------|------------|
|1         |book   |0     |zh-hans  |                  |1           |
|----------|-------|------|---------|------------------|------------|

2020-11-19 16:19:03.982 INFO  jdbc.sqltiming Line:373 - select nodefieldm0_.entity_id as entity_i1_17_0_, nodefieldm0_.bundle as bundle2_17_0_, nodefieldm0_.delta 
as delta3_17_0_, nodefieldm0_.langcode as langcode4_17_0_, nodefieldm0_.field_media_value as 
field_me5_17_0_, nodefieldm0_.revision_id as revision6_17_0_ from node_revision__field_media 
nodefieldm0_ where nodefieldm0_.entity_id=1 
 {executed in 0 msec}
2020-11-19 16:19:03.983 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------------|------------|
|entity_id |bundle |delta |langcode |field_media_value |revision_id |
|----------|-------|------|---------|------------------|------------|
|[unread]  |book   |0     |zh-hans  |                  |1           |
|----------|-------|------|---------|------------------|------------|

2020-11-19 16:19:03.986 INFO  jdbc.sqltiming Line:373 - select bookfieldc0_.entity_id as entity_i1_5_, bookfieldc0_.bundle as bundle2_5_, bookfieldc0_.field_comment_value 
as field_co3_5_, bookfieldc0_.delta as delta4_5_, bookfieldc0_.field_comment_format as field_co5_5_, 
bookfieldc0_.langcode as langcode6_5_, bookfieldc0_.revision_id as revision7_5_ from node__field_comment 
bookfieldc0_ where bookfieldc0_.entity_id=1 
 {executed in 0 msec}
2020-11-19 16:19:03.987 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|--------------------|------|---------------------|---------|------------|
|entity_id |bundle |field_comment_value |delta |field_comment_format |langcode |revision_id |
|----------|-------|--------------------|------|---------------------|---------|------------|
|1         |book   |                    |0     |full_html            |zh-hans  |1           |
|----------|-------|--------------------|------|---------------------|---------|------------|

2020-11-19 16:19:03.994 INFO  jdbc.sqltiming Line:373 - select nodefieldc0_.entity_id as entity_i1_14_0_, nodefieldc0_.bundle as bundle2_14_0_, nodefieldc0_.field_comment_value 
as field_co3_14_0_, nodefieldc0_.delta as delta4_14_0_, nodefieldc0_.field_comment_format as 
field_co5_14_0_, nodefieldc0_.langcode as langcode6_14_0_, nodefieldc0_.revision_id as revision7_14_0_ 
from node_revision__field_comment nodefieldc0_ where nodefieldc0_.entity_id=1 
 {executed in 1 msec}
2020-11-19 16:19:03.994 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|--------------------|------|---------------------|---------|------------|
|entity_id |bundle |field_comment_value |delta |field_comment_format |langcode |revision_id |
|----------|-------|--------------------|------|---------------------|---------|------------|
|[unread]  |book   |                    |0     |full_html            |zh-hans  |1           |
|----------|-------|--------------------|------|---------------------|---------|------------|

2020-11-19 16:19:03.997 INFO  jdbc.sqltiming Line:373 - select bookfieldt0_.entity_id as entity_i1_9_, bookfieldt0_.bundle as bundle2_9_, bookfieldt0_.delta 
as delta3_9_, bookfieldt0_.langcode as langcode4_9_, bookfieldt0_.revision_id as revision5_9_, 
bookfieldt0_.field_thumb_value as field_th6_9_ from node__field_thumb bookfieldt0_ where bookfieldt0_.entity_id=1 
 {executed in 0 msec}
2020-11-19 16:19:03.998 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------|------------------|
|entity_id |bundle |delta |langcode |revision_id |field_thumb_value |
|----------|-------|------|---------|------------|------------------|
|1         |book   |0     |zh-hans  |1           |                  |
|----------|-------|------|---------|------------|------------------|

2020-11-19 16:19:04.004 INFO  jdbc.sqltiming Line:373 - select nodefieldt0_.entity_id as entity_i1_18_0_, nodefieldt0_.bundle as bundle2_18_0_, nodefieldt0_.delta 
as delta3_18_0_, nodefieldt0_.langcode as langcode4_18_0_, nodefieldt0_.revision_id as revision5_18_0_, 
nodefieldt0_.field_thumb_value as field_th6_18_0_ from node_revision__field_thumb nodefieldt0_ 
where nodefieldt0_.entity_id=1 
 {executed in 1 msec}
2020-11-19 16:19:04.004 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------|------------------|
|entity_id |bundle |delta |langcode |revision_id |field_thumb_value |
|----------|-------|------|---------|------------|------------------|
|[unread]  |book   |0     |zh-hans  |1           |                  |
|----------|-------|------|---------|------------|------------------|

2020-11-19 16:19:04.008 INFO  jdbc.sqltiming Line:373 - select bookfieldf0_.entity_id as entity_i1_6_0_, bookfieldf0_.bundle as bundle2_6_0_, bookfieldf0_.delta 
as delta3_6_0_, bookfieldf0_.field_fenlei_target_id as field_fe4_6_0_, bookfieldf0_.langcode 
as langcode5_6_0_, bookfieldf0_.revision_id as revision6_6_0_ from node__field_fenlei bookfieldf0_ 
where bookfieldf0_.entity_id=1 
 {executed in 0 msec}
2020-11-19 16:19:04.009 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------------|---------|------------|
|entity_id |bundle |delta |field_fenlei_target_id |langcode |revision_id |
|----------|-------|------|-----------------------|---------|------------|
|[unread]  |book   |0     |1                      |zh-hans  |1           |
|----------|-------|------|-----------------------|---------|------------|

2020-11-19 16:19:04.014 INFO  jdbc.sqltiming Line:373 - select nodefieldf0_.entity_id as entity_i1_15_0_, nodefieldf0_.bundle as bundle2_15_0_, nodefieldf0_.delta 
as delta3_15_0_, nodefieldf0_.field_fenlei_target_id as field_fe4_15_0_, nodefieldf0_.langcode 
as langcode5_15_0_, nodefieldf0_.revision_id as revision6_15_0_ from node_revision__field_fenlei 
nodefieldf0_ where nodefieldf0_.entity_id=1 
 {executed in 2 msec}
2020-11-19 16:19:04.014 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------------|---------|------------|
|entity_id |bundle |delta |field_fenlei_target_id |langcode |revision_id |
|----------|-------|------|-----------------------|---------|------------|
|[unread]  |book   |0     |1                      |zh-hans  |1           |
|----------|-------|------|-----------------------|---------|------------|

2020-11-19 16:19:04.674 INFO  jdbc.sqltiming Line:373 - select bookfieldf0_.entity_id as entity_i1_7_, bookfieldf0_.bundle as bundle2_7_, bookfieldf0_.delta 
as delta3_7_, bookfieldf0_.field_fsid_value as field_fs4_7_, bookfieldf0_.langcode as langcode5_7_, 
bookfieldf0_.revision_id as revision6_7_ from node__field_fsid bookfieldf0_ where bookfieldf0_.field_fsid_value='568347143558516' 
 {executed in 1 msec}
2020-11-19 16:19:04.676 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------|---------|------------|
|entity_id |bundle |delta |field_fsid_value |langcode |revision_id |
|----------|-------|------|-----------------|---------|------------|
|2         |book   |0     |568347143558516  |zh-hans  |2           |
|----------|-------|------|-----------------|---------|------------|

2020-11-19 16:19:04.678 INFO  jdbc.sqltiming Line:373 - select nodeentity0_.nid as nid1_3_, nodeentity0_.langcode as langcode2_3_, nodeentity0_.type 
as type3_3_, nodeentity0_.uuid as uuid4_3_, nodeentity0_.vid as vid5_3_ from node nodeentity0_ 
where nodeentity0_.nid=2 
 {executed in 0 msec}
2020-11-19 16:19:04.679 INFO  jdbc.resultsettable Line:610 - 
|----|---------|-----|-------------------------------------|----|
|nid |langcode |type |uuid                                 |vid |
|----|---------|-----|-------------------------------------|----|
|2   |zh-hans  |book |d915ec1c-b08c-4c6a-ae15-dd21d3de8ea1 |2   |
|----|---------|-----|-------------------------------------|----|

2020-11-19 16:19:04.686 INFO  jdbc.sqltiming Line:373 - select nodefieldf0_.entity_id as entity_i1_16_0_, nodefieldf0_.bundle as bundle2_16_0_, nodefieldf0_.delta 
as delta3_16_0_, nodefieldf0_.field_fsid_value as field_fs4_16_0_, nodefieldf0_.langcode as 
langcode5_16_0_, nodefieldf0_.revision_id as revision6_16_0_ from node_revision__field_fsid 
nodefieldf0_ where nodefieldf0_.entity_id=2 
 {executed in 0 msec}
2020-11-19 16:19:04.687 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------|---------|------------|
|entity_id |bundle |delta |field_fsid_value |langcode |revision_id |
|----------|-------|------|-----------------|---------|------------|
|[unread]  |book   |0     |568347143558516  |zh-hans  |2           |
|----------|-------|------|-----------------|---------|------------|

2020-11-19 16:19:04.690 INFO  jdbc.sqltiming Line:373 - select bookentity0_.nid as nid1_1_, bookentity0_.bid as bid2_1_, bookentity0_.depth as depth3_1_, 
bookentity0_.has_children as has_chil4_1_, bookentity0_.p1 as p5_1_, bookentity0_.p2 as p6_1_, 
bookentity0_.p3 as p7_1_, bookentity0_.p4 as p8_1_, bookentity0_.p5 as p9_1_, bookentity0_.pid 
as pid10_1_, bookentity0_.weight as weight11_1_ from book bookentity0_ where bookentity0_.nid=2 
 {executed in 0 msec}
2020-11-19 16:19:04.692 INFO  jdbc.resultsettable Line:610 - 
|----|----|------|-------------|---|---|---|---|---|----|-------|
|nid |bid |depth |has_children |p1 |p2 |p3 |p4 |p5 |pid |weight |
|----|----|------|-------------|---|---|---|---|---|----|-------|
|2   |1   |2     |1            |1  |2  |0  |0  |0  |1   |0      |
|----|----|------|-------------|---|---|---|---|---|----|-------|

2020-11-19 16:19:04.696 INFO  jdbc.sqltiming Line:373 - select nodebodyen0_.entity_id as entity_i1_4_, nodebodyen0_.body_value as body_val2_4_, nodebodyen0_.body_summary 
as body_sum3_4_, nodebodyen0_.bundle as bundle4_4_, nodebodyen0_.delta as delta5_4_, nodebodyen0_.body_format 
as body_for6_4_, nodebodyen0_.langcode as langcode7_4_, nodebodyen0_.revision_id as revision8_4_ 
from node__body nodebodyen0_ where nodebodyen0_.entity_id=2 
 {executed in 1 msec}
2020-11-19 16:19:04.697 INFO  jdbc.resultsettable Line:610 - 
|----------|-----------|-------------|-------|------|------------|---------|------------|
|entity_id |body_value |body_summary |bundle |delta |body_format |langcode |revision_id |
|----------|-----------|-------------|-------|------|------------|---------|------------|
|2         |           |             |book   |0     |full_html   |zh-hans  |2           |
|----------|-----------|-------------|-------|------|------------|---------|------------|

2020-11-19 16:19:04.699 INFO  jdbc.sqltiming Line:373 - select nodebodyre0_.entity_id as entity_i1_13_0_, nodebodyre0_.body_value as body_val2_13_0_, 
nodebodyre0_.body_summary as body_sum3_13_0_, nodebodyre0_.bundle as bundle4_13_0_, nodebodyre0_.delta 
as delta5_13_0_, nodebodyre0_.body_format as body_for6_13_0_, nodebodyre0_.langcode as langcode7_13_0_, 
nodebodyre0_.revision_id as revision8_13_0_ from node_revision__body nodebodyre0_ where nodebodyre0_.entity_id=2 
 {executed in 0 msec}
2020-11-19 16:19:04.700 INFO  jdbc.resultsettable Line:610 - 
|----------|-----------|-------------|-------|------|------------|---------|------------|
|entity_id |body_value |body_summary |bundle |delta |body_format |langcode |revision_id |
|----------|-----------|-------------|-------|------|------------|---------|------------|
|[unread]  |           |             |book   |0     |full_html   |zh-hans  |2           |
|----------|-----------|-------------|-------|------|------------|---------|------------|

2020-11-19 16:19:04.703 INFO  jdbc.sqltiming Line:373 - select nodefiledd0_.nid as nid1_10_, nodefiledd0_.changed as changed2_10_, nodefiledd0_.created 
as created3_10_, nodefiledd0_.default_langcode as default_4_10_, nodefiledd0_.langcode as langcode5_10_, 
nodefiledd0_.promote as promote6_10_, nodefiledd0_.revision_translation_affected as revision7_10_, 
nodefiledd0_.status as status8_10_, nodefiledd0_.sticky as sticky9_10_, nodefiledd0_.title 
as title10_10_, nodefiledd0_.type as type11_10_, nodefiledd0_.uid as uid12_10_, nodefiledd0_.vid 
as vid13_10_ from node_field_data nodefiledd0_ where nodefiledd0_.nid=2 
 {executed in 0 msec}
2020-11-19 16:19:04.704 INFO  jdbc.resultsettable Line:610 - 
|----|-----------|-----------|-----------------|---------|--------|------------------------------|-------|-------|-------------|-----|----|----|
|nid |changed    |created    |default_langcode |langcode |promote |revision_translation_affected |status |sticky |title        |type |uid |vid |
|----|-----------|-----------|-----------------|---------|--------|------------------------------|-------|-------|-------------|-----|----|----|
|2   |1605773722 |1605773722 |1                |zh-hans  |0       |1                             |1      |0      |07丨全栈回顾 (1讲) |book |1   |2   |
|----|-----------|-----------|-----------------|---------|--------|------------------------------|-------|-------|-------------|-----|----|----|

2020-11-19 16:19:04.706 INFO  jdbc.sqltiming Line:373 - select nodefieldr0_.nid as nid1_11_0_, nodefieldr0_.changed as changed2_11_0_, nodefieldr0_.created 
as created3_11_0_, nodefieldr0_.default_langcode as default_4_11_0_, nodefieldr0_.langcode 
as langcode5_11_0_, nodefieldr0_.promote as promote6_11_0_, nodefieldr0_.revision_translation_affected 
as revision7_11_0_, nodefieldr0_.status as status8_11_0_, nodefieldr0_.sticky as sticky9_11_0_, 
nodefieldr0_.title as title10_11_0_, nodefieldr0_.uid as uid11_11_0_, nodefieldr0_.vid as vid12_11_0_ 
from node_field_revision nodefieldr0_ where nodefieldr0_.nid=2 
 {executed in 1 msec}
2020-11-19 16:19:04.707 INFO  jdbc.resultsettable Line:610 - 
|---------|-----------|-----------|-----------------|---------|--------|------------------------------|-------|-------|-------------|----|----|
|nid      |changed    |created    |default_langcode |langcode |promote |revision_translation_affected |status |sticky |title        |uid |vid |
|---------|-----------|-----------|-----------------|---------|--------|------------------------------|-------|-------|-------------|----|----|
|[unread] |1605773722 |1605773722 |1                |zh-hans  |0       |1                             |1      |0      |07丨全栈回顾 (1讲) |1   |2   |
|---------|-----------|-----------|-----------------|---------|--------|------------------------------|-------|-------|-------------|----|----|

2020-11-19 16:19:04.713 INFO  jdbc.sqltiming Line:373 - update node_field_data set changed=1605773944, created=1605773944, default_langcode=1, langcode='zh-hans', 
promote=0, revision_translation_affected=1, status=1, sticky=0, title='07丨全栈回顾 (1讲)', type='book', 
uid=1, vid=2 where nid=2 
 {executed in 5 msec}
2020-11-19 16:19:04.714 INFO  jdbc.sqltiming Line:373 - update node_field_revision set changed=1605773944, created=1605773944, default_langcode=1, 
langcode='zh-hans', promote=0, revision_translation_affected=1, status=1, sticky=0, title='07丨全栈回顾 
(1讲)', uid=1, vid=2 where nid=2 
 {executed in 0 msec}
2020-11-19 16:19:04.718 INFO  jdbc.sqltiming Line:373 - select bookfieldm0_.entity_id as entity_i1_8_, bookfieldm0_.bundle as bundle2_8_, bookfieldm0_.delta 
as delta3_8_, bookfieldm0_.langcode as langcode4_8_, bookfieldm0_.field_media_value as field_me5_8_, 
bookfieldm0_.revision_id as revision6_8_ from node__field_media bookfieldm0_ where bookfieldm0_.entity_id=2 
 {executed in 0 msec}
2020-11-19 16:19:04.719 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------------|------------|
|entity_id |bundle |delta |langcode |field_media_value |revision_id |
|----------|-------|------|---------|------------------|------------|
|2         |book   |0     |zh-hans  |                  |2           |
|----------|-------|------|---------|------------------|------------|

2020-11-19 16:19:04.721 INFO  jdbc.sqltiming Line:373 - select nodefieldm0_.entity_id as entity_i1_17_0_, nodefieldm0_.bundle as bundle2_17_0_, nodefieldm0_.delta 
as delta3_17_0_, nodefieldm0_.langcode as langcode4_17_0_, nodefieldm0_.field_media_value as 
field_me5_17_0_, nodefieldm0_.revision_id as revision6_17_0_ from node_revision__field_media 
nodefieldm0_ where nodefieldm0_.entity_id=2 
 {executed in 1 msec}
2020-11-19 16:19:04.721 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------------|------------|
|entity_id |bundle |delta |langcode |field_media_value |revision_id |
|----------|-------|------|---------|------------------|------------|
|[unread]  |book   |0     |zh-hans  |                  |2           |
|----------|-------|------|---------|------------------|------------|

2020-11-19 16:19:04.723 INFO  jdbc.sqltiming Line:373 - select bookfieldc0_.entity_id as entity_i1_5_, bookfieldc0_.bundle as bundle2_5_, bookfieldc0_.field_comment_value 
as field_co3_5_, bookfieldc0_.delta as delta4_5_, bookfieldc0_.field_comment_format as field_co5_5_, 
bookfieldc0_.langcode as langcode6_5_, bookfieldc0_.revision_id as revision7_5_ from node__field_comment 
bookfieldc0_ where bookfieldc0_.entity_id=2 
 {executed in 1 msec}
2020-11-19 16:19:04.723 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|--------------------|------|---------------------|---------|------------|
|entity_id |bundle |field_comment_value |delta |field_comment_format |langcode |revision_id |
|----------|-------|--------------------|------|---------------------|---------|------------|
|2         |book   |                    |0     |full_html            |zh-hans  |2           |
|----------|-------|--------------------|------|---------------------|---------|------------|

2020-11-19 16:19:04.725 INFO  jdbc.sqltiming Line:373 - select nodefieldc0_.entity_id as entity_i1_14_0_, nodefieldc0_.bundle as bundle2_14_0_, nodefieldc0_.field_comment_value 
as field_co3_14_0_, nodefieldc0_.delta as delta4_14_0_, nodefieldc0_.field_comment_format as 
field_co5_14_0_, nodefieldc0_.langcode as langcode6_14_0_, nodefieldc0_.revision_id as revision7_14_0_ 
from node_revision__field_comment nodefieldc0_ where nodefieldc0_.entity_id=2 
 {executed in 0 msec}
2020-11-19 16:19:04.726 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|--------------------|------|---------------------|---------|------------|
|entity_id |bundle |field_comment_value |delta |field_comment_format |langcode |revision_id |
|----------|-------|--------------------|------|---------------------|---------|------------|
|[unread]  |book   |                    |0     |full_html            |zh-hans  |2           |
|----------|-------|--------------------|------|---------------------|---------|------------|

2020-11-19 16:19:04.728 INFO  jdbc.sqltiming Line:373 - select bookfieldt0_.entity_id as entity_i1_9_, bookfieldt0_.bundle as bundle2_9_, bookfieldt0_.delta 
as delta3_9_, bookfieldt0_.langcode as langcode4_9_, bookfieldt0_.revision_id as revision5_9_, 
bookfieldt0_.field_thumb_value as field_th6_9_ from node__field_thumb bookfieldt0_ where bookfieldt0_.entity_id=2 
 {executed in 1 msec}
2020-11-19 16:19:04.728 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------|------------------|
|entity_id |bundle |delta |langcode |revision_id |field_thumb_value |
|----------|-------|------|---------|------------|------------------|
|2         |book   |0     |zh-hans  |2           |                  |
|----------|-------|------|---------|------------|------------------|

2020-11-19 16:19:04.730 INFO  jdbc.sqltiming Line:373 - select nodefieldt0_.entity_id as entity_i1_18_0_, nodefieldt0_.bundle as bundle2_18_0_, nodefieldt0_.delta 
as delta3_18_0_, nodefieldt0_.langcode as langcode4_18_0_, nodefieldt0_.revision_id as revision5_18_0_, 
nodefieldt0_.field_thumb_value as field_th6_18_0_ from node_revision__field_thumb nodefieldt0_ 
where nodefieldt0_.entity_id=2 
 {executed in 0 msec}
2020-11-19 16:19:04.731 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------|------------------|
|entity_id |bundle |delta |langcode |revision_id |field_thumb_value |
|----------|-------|------|---------|------------|------------------|
|[unread]  |book   |0     |zh-hans  |2           |                  |
|----------|-------|------|---------|------------|------------------|

2020-11-19 16:19:04.732 INFO  jdbc.sqltiming Line:373 - select bookfieldf0_.entity_id as entity_i1_6_0_, bookfieldf0_.bundle as bundle2_6_0_, bookfieldf0_.delta 
as delta3_6_0_, bookfieldf0_.field_fenlei_target_id as field_fe4_6_0_, bookfieldf0_.langcode 
as langcode5_6_0_, bookfieldf0_.revision_id as revision6_6_0_ from node__field_fenlei bookfieldf0_ 
where bookfieldf0_.entity_id=2 
 {executed in 0 msec}
2020-11-19 16:19:04.733 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------------|---------|------------|
|entity_id |bundle |delta |field_fenlei_target_id |langcode |revision_id |
|----------|-------|------|-----------------------|---------|------------|
|[unread]  |book   |0     |1                      |zh-hans  |2           |
|----------|-------|------|-----------------------|---------|------------|

2020-11-19 16:19:04.734 INFO  jdbc.sqltiming Line:373 - select nodefieldf0_.entity_id as entity_i1_15_0_, nodefieldf0_.bundle as bundle2_15_0_, nodefieldf0_.delta 
as delta3_15_0_, nodefieldf0_.field_fenlei_target_id as field_fe4_15_0_, nodefieldf0_.langcode 
as langcode5_15_0_, nodefieldf0_.revision_id as revision6_15_0_ from node_revision__field_fenlei 
nodefieldf0_ where nodefieldf0_.entity_id=2 
 {executed in 0 msec}
2020-11-19 16:19:04.735 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------------|---------|------------|
|entity_id |bundle |delta |field_fenlei_target_id |langcode |revision_id |
|----------|-------|------|-----------------------|---------|------------|
|[unread]  |book   |0     |1                      |zh-hans  |2           |
|----------|-------|------|-----------------------|---------|------------|

2020-11-19 16:21:40.089 INFO  jdbc.sqltiming Line:373 - select bookchecke0_.item_id as item_id1_2_, bookchecke0_.got as got2_2_, bookchecke0_.name 
as name3_2_ from book_check bookchecke0_ where bookchecke0_.item_id=71438951108017 and bookchecke0_.name='net_content' 
 {executed in 8 msec}
2020-11-19 16:21:40.093 INFO  jdbc.resultsettable Line:610 - 
|--------|----|-----|
|item_id |got |name |
|--------|----|-----|
|--------|----|-----|

2020-11-19 16:22:47.234 INFO  jdbc.sqltiming Line:373 - select bookchecke0_.item_id as item_id1_2_0_, bookchecke0_.got as got2_2_0_, bookchecke0_.name 
as name3_2_0_ from book_check bookchecke0_ where bookchecke0_.item_id=71438951108017 
 {executed in 1 msec}
2020-11-19 16:22:47.237 INFO  jdbc.resultsettable Line:610 - 
|--------|----|-----|
|item_id |got |name |
|--------|----|-----|
|--------|----|-----|

2020-11-19 16:22:47.264 INFO  jdbc.sqltiming Line:373 - insert into book_check (got, name, item_id) values (1, 'net_content', 71438951108017) 
 {executed in 0 msec}
2020-11-19 16:23:18.715 INFO  jdbc.sqltiming Line:373 - select bookchecke0_.item_id as item_id1_2_, bookchecke0_.got as got2_2_, bookchecke0_.name 
as name3_2_ from book_check bookchecke0_ where bookchecke0_.item_id=71438951108017 and bookchecke0_.name='media' 
 {executed in 20 msec}
2020-11-19 16:23:18.716 INFO  jdbc.resultsettable Line:610 - 
|--------|----|-----|
|item_id |got |name |
|--------|----|-----|
|--------|----|-----|

2020-11-19 16:23:19.221 INFO  jdbc.sqltiming Line:373 - update book_check set got=1, name='media' where item_id=71438951108017 
 {executed in 5 msec}
2020-11-19 16:23:19.228 INFO  jdbc.sqltiming Line:373 - select bookfieldf0_.entity_id as entity_i1_7_, bookfieldf0_.bundle as bundle2_7_, bookfieldf0_.delta 
as delta3_7_, bookfieldf0_.field_fsid_value as field_fs4_7_, bookfieldf0_.langcode as langcode5_7_, 
bookfieldf0_.revision_id as revision6_7_ from node__field_fsid bookfieldf0_ where bookfieldf0_.field_fsid_value='71438951108017' 
 {executed in 1 msec}
2020-11-19 16:23:19.229 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------|---------|------------|
|entity_id |bundle |delta |field_fsid_value |langcode |revision_id |
|----------|-------|------|-----------------|---------|------------|
|3         |book   |0     |71438951108017   |zh-hans  |3           |
|----------|-------|------|-----------------|---------|------------|

2020-11-19 16:23:19.230 INFO  jdbc.sqltiming Line:373 - select nodeentity0_.nid as nid1_3_, nodeentity0_.langcode as langcode2_3_, nodeentity0_.type 
as type3_3_, nodeentity0_.uuid as uuid4_3_, nodeentity0_.vid as vid5_3_ from node nodeentity0_ 
where nodeentity0_.nid=3 
 {executed in 0 msec}
2020-11-19 16:23:19.231 INFO  jdbc.resultsettable Line:610 - 
|----|---------|-----|-------------------------------------|----|
|nid |langcode |type |uuid                                 |vid |
|----|---------|-----|-------------------------------------|----|
|3   |zh-hans  |book |1ca40684-a6c1-479d-8594-a242029a060e |3   |
|----|---------|-----|-------------------------------------|----|

2020-11-19 16:23:19.235 INFO  jdbc.sqltiming Line:373 - select nodefieldf0_.entity_id as entity_i1_16_0_, nodefieldf0_.bundle as bundle2_16_0_, nodefieldf0_.delta 
as delta3_16_0_, nodefieldf0_.field_fsid_value as field_fs4_16_0_, nodefieldf0_.langcode as 
langcode5_16_0_, nodefieldf0_.revision_id as revision6_16_0_ from node_revision__field_fsid 
nodefieldf0_ where nodefieldf0_.entity_id=3 
 {executed in 0 msec}
2020-11-19 16:23:19.236 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------|---------|------------|
|entity_id |bundle |delta |field_fsid_value |langcode |revision_id |
|----------|-------|------|-----------------|---------|------------|
|[unread]  |book   |0     |71438951108017   |zh-hans  |3           |
|----------|-------|------|-----------------|---------|------------|

2020-11-19 16:23:19.244 INFO  jdbc.sqltiming Line:373 - select bookentity0_.nid as nid1_1_, bookentity0_.bid as bid2_1_, bookentity0_.depth as depth3_1_, 
bookentity0_.has_children as has_chil4_1_, bookentity0_.p1 as p5_1_, bookentity0_.p2 as p6_1_, 
bookentity0_.p3 as p7_1_, bookentity0_.p4 as p8_1_, bookentity0_.p5 as p9_1_, bookentity0_.pid 
as pid10_1_, bookentity0_.weight as weight11_1_ from book bookentity0_ where bookentity0_.nid=3 
 {executed in 0 msec}
2020-11-19 16:23:19.245 INFO  jdbc.resultsettable Line:610 - 
|----|----|------|-------------|---|---|---|---|---|----|-------|
|nid |bid |depth |has_children |p1 |p2 |p3 |p4 |p5 |pid |weight |
|----|----|------|-------------|---|---|---|---|---|----|-------|
|3   |1   |3     |0            |1  |2  |3  |0  |0  |2   |0      |
|----|----|------|-------------|---|---|---|---|---|----|-------|

2020-11-19 16:23:19.253 INFO  jdbc.sqltiming Line:373 - select nodebodyen0_.entity_id as entity_i1_4_, nodebodyen0_.body_value as body_val2_4_, nodebodyen0_.body_summary 
as body_sum3_4_, nodebodyen0_.bundle as bundle4_4_, nodebodyen0_.delta as delta5_4_, nodebodyen0_.body_format 
as body_for6_4_, nodebodyen0_.langcode as langcode7_4_, nodebodyen0_.revision_id as revision8_4_ 
from node__body nodebodyen0_ where nodebodyen0_.entity_id=3 
 {executed in 2 msec}
2020-11-19 16:23:19.261 INFO  jdbc.resultsettable Line:610 - 
|----------||-------------|-------|------|------------|---------|------------|
|entity_id |body_value|body_summary |bundle |delta |body_format |langcode |revision_id |
|----------||-------------|-------|------|------------|---------|------------|
|3         |<div data-slate-editor="true" data-key="928" autocorrect="off" spellcheck="false" data-gramm="false" style="outline: none; white-space: pre-wrap; overflow-wrap: break-word;">
 <div class="se-5b3bdcd9 " data-slate-type="paragraph" data-slate-object="block" data-key="929">
  <span data-slate-object="text" data-key="930"><span data-slate-leaf="true" data-offset-key="930:0" data-first-offset="true"><span data-slate-string="true">你好，我是四火。</span></span></span>
 </div>
 <div class="se-d5bb7d18 " data-slate-type="paragraph" data-slate-object="block" data-key="931">
  <span data-slate-object="text" data-key="932"><span data-slate-leaf="true" data-offset-key="932:0" data-first-offset="true"><span data-slate-string="true">这是这个专栏的最后一讲了。</span></span></span>
 </div>
 <h2 class="se-5fcad9b1" data-slate-type="heading" data-slate-object="block" data-key="933"><span data-slate-object="text" data-key="934"><span data-slate-leaf="true" data-offset-key="934:0" data-first-offset="true"><span data-slate-string="true">回顾一下，我们学到了什么？</span></span></span></h2>
 <div class="se-eb31d66e " data-slate-type="paragraph" data-slate-object="block" data-key="935">
  <span data-slate-object="text" data-key="936"><span data-slate-leaf="true" data-offset-key="936:0" data-first-offset="true"><span data-slate-string="true">现在，是时候来回顾一下我们学过的 Web 全栈树了。这里我按章节进行划分，把每一讲的标题和主要内容做成了一张思维导图，帮助你回顾。</span></span></span>
 </div>
 <div class="se-b9e7b880" data-slate-type="image" data-slate-object="block" data-key="937">
  <img class="se-4334ba90" src="https://static001.geekbang.org/resource/image/29/4a/2961de2a299d887fefa7731dc8d28a4a.png">
 </div>
 <div class="se-f0bd987b " data-slate-type="paragraph" data-slate-object="block" data-key="938">
  <span data-slate-object="text" data-key="939"><span data-slate-leaf="true" data-offset-key="939:0" data-first-offset="true"><span data-slate-string="true">下面我把它展开来，你可以顺着这个展开的内容，回顾自己所学。</span></span></span>
 </div>
 <h3 class="se-3ded67bd" data-slate-type="heading" data-slate-object="block" data-key="940"><span data-slate-object="text" data-key="941"><span data-slate-leaf="true" data-offset-key="941:0" data-first-offset="true"><span data-slate-string="true">第一章：网络协议和 Web 接口</span></span></span></h3>
 <div class="se-b11b2856 " data-slate-type="paragraph" data-slate-object="block" data-key="942">
  <span data-slate-object="text" data-key="943"><span data-slate-leaf="true" data-offset-key="943:0" data-first-offset="true"><span data-slate-string="true">第一章是网络协议和 Web 接口，我以 HTTP 为核心，介绍了它的演进历史、相关技术，以及它的局限性：</span></span></span>
 </div>
 <div class="se-0da04aaf" data-slate-type="list" data-slate-object="block" data-key="944">
  <div class="se-b5582af6 se-4b5d5342" data-slate-type="list-line" data-slate-object="block" data-key="945">
   <span data-slate-object="text" data-key="946"><span data-slate-leaf="true" data-offset-key="946:0" data-first-offset="true"><span data-slate-string="true">对于安全传输方面的局限，我介绍了 HTTPS 的原理；</span></span></span>
  </div>
  <div class="se-807c7aab se-9ac48236" data-slate-type="list-line" data-slate-object="block" data-key="947">
   <span data-slate-object="text" data-key="948"><span data-slate-leaf="true" data-offset-key="948:0" data-first-offset="true"><span data-slate-string="true">对于交互模式上的局限，我介绍了一些服务端推送技术；</span></span></span>
  </div>
  <div class="se-1f2e4218 se-57540395" data-slate-type="list-line" data-slate-object="block" data-key="949">
   <span data-slate-object="text" data-key="950"><span data-slate-leaf="true" data-offset-key="950:0" data-first-offset="true"><span data-slate-string="true">对于无状态连接的局限，在第五章我介绍了客户端和服务端的会话。</span></span></span>
  </div>
 </div>
 <div class="se-c4f6f7b9 " data-slate-type="paragraph" data-slate-object="block" data-key="951">
  <span data-slate-object="text" data-key="952"><span data-slate-leaf="true" data-offset-key="952:0" data-first-offset="true"><span data-slate-string="true">也是从这一章开始，我们开始接触了 push 和 pull 这两个“对立”的套路，对于整个专栏，我们在各个层面的技术中把它们拿出来反复比较，权衡利弊。</span></span></span>
 </div>
 <div class="se-f29e43b1 " data-slate-type="paragraph" data-slate-object="block" data-key="953">
  <span data-slate-object="text" data-key="954"><span data-slate-leaf="true" data-offset-key="954:0" data-first-offset="true"><span data-slate-string="true">对于 Web 接口部分，我从 SOAP 和 REST 所代表的两大设计风格开始，梳理了 Web 接口设计的过程，以及需要考虑的零零总总各个方面。</span></span></span>
 </div>
 <h3 class="se-77b435fe" data-slate-type="heading" data-slate-object="block" data-key="955"><span data-slate-object="text" data-key="956"><span data-slate-leaf="true" data-offset-key="956:0" data-first-offset="true"><span data-slate-string="true">第二章：欢迎来到 MVC 的世界</span></span></span></h3>
 <div class="se-e16f3a5d " data-slate-type="paragraph" data-slate-object="block" data-key="957">
  <span data-slate-object="text" data-key="958"><span data-slate-leaf="true" data-offset-key="958:0" data-first-offset="true"><span data-slate-string="true">第二章我主要针对 MVC 这个对于网站和其它 Web 应用开发来说，最重要的架构和设计模式，介绍演进、分层，并逐层仔细深挖：</span></span></span>
 </div>
 <div class="se-bf3c628f" data-slate-type="list" data-slate-object="block" data-key="959">
  <div class="se-01817fd3 se-25892bc2" data-slate-type="list-line" data-slate-object="block" data-key="960">
   <span data-slate-object="text" data-key="961"><span data-slate-leaf="true" data-offset-key="961:0" data-first-offset="true"><span data-slate-string="true">模型层，我介绍了贫血模型和充血模型，以及常见的 CQRS 模式；</span></span></span>
  </div>
  <div class="se-471c6b55 se-97ca79bc" data-slate-type="list-line" data-slate-object="block" data-key="962">
   <span data-slate-object="text" data-key="963"><span data-slate-leaf="true" data-offset-key="963:0" data-first-offset="true"><span data-slate-string="true">视图层，页面聚合是我们的重点，包括客户端聚合和服务端聚合，特别是模板引擎的工作原理；</span></span></span>
  </div>
  <div class="se-4c30cf6e se-db31c0d4" data-slate-type="list-line" data-slate-object="block" data-key="964">
   <span data-slate-object="text" data-key="965"><span data-slate-leaf="true" data-offset-key="965:0" data-first-offset="true"><span data-slate-string="true">控制器层，我把这一层拆分为几个方面，梳理了控制器在 MVC 架构中的工作步骤。</span></span></span>
  </div>
 </div>
 <div class="se-7866cb7a " data-slate-type="paragraph" data-slate-object="block" data-key="966">
  <span data-slate-object="text" data-key="967"><span data-slate-leaf="true" data-offset-key="967:0" data-first-offset="true"><span data-slate-string="true">之后我们将 MVC 泛化，了解了其它重要的设计模式和套路，包括 AOP 和 IoC，以及实现切面编程所需的代理技术；还有其它著名的 JavaEE 模式，特别是拦截过滤器和数据访问对象模式。</span></span></span>
 </div>
 <h3 class="se-6733a337" data-slate-type="heading" data-slate-object="block" data-key="968"><span data-slate-object="text" data-key="969"><span data-slate-leaf="true" data-offset-key="969:0" data-first-offset="true"><span data-slate-string="true">第三章：从后端到前端</span></span></span></h3>
 <div class="se-00b38802 " data-slate-type="paragraph" data-slate-object="block" data-key="970">
  <span data-slate-object="text" data-key="971"><span data-slate-leaf="true" data-offset-key="971:0" data-first-offset="true"><span data-slate-string="true">第三章主要讲前端技术。首先我从一个大体上俯瞰的角度，阐述了我所理解的前端技术的“不同”，特别是思维模式的不同。</span></span></span>
 </div>
 <div class="se-73606031 " data-slate-type="paragraph" data-slate-object="block" data-key="972">
  <span data-slate-object="text" data-key="973"><span data-slate-leaf="true" data-offset-key="973:0" data-first-offset="true"><span data-slate-string="true">然后我介绍了一些前端技术重要的知识点，比如 JavaScript 面向对象，包括封装、继承和多态的实现方式，也包括对象创建的原理。接着我以 React 和 Angular，以及它们的重要特性为例，介绍了百花齐放的前端 MVC 框架为我们带来的变革。</span></span></span>
 </div>
 <div class="se-0d6ef2c8 " data-slate-type="paragraph" data-slate-object="block" data-key="974">
  <span data-slate-object="text" data-key="975"><span data-slate-leaf="true" data-offset-key="975:0" data-first-offset="true"><span data-slate-string="true">在页面设计和交互布局一讲中，我使用实际例子介绍了页面设计方面的一些原则和思路，包括渐进增强和优雅降级等等。</span></span></span>
 </div>
 <div class="se-b064b7e6 " data-slate-type="paragraph" data-slate-object="block" data-key="976">
  <span data-slate-object="text" data-key="977"><span data-slate-leaf="true" data-offset-key="977:0" data-first-offset="true"><span data-slate-string="true">接着在数据可视化一讲中，我仔细比较了当今最重要的两种 Web 绘图标准，SVG 和 Canvas，并介绍了 Flot 和 D3.js 这两个可视化的库。</span></span></span>
 </div>
 <div class="se-71622bf5 " data-slate-type="paragraph" data-slate-object="block" data-key="978">
  <span data-slate-object="text" data-key="979"><span data-slate-leaf="true" data-offset-key="979:0" data-first-offset="true"><span data-slate-string="true">最后是 JavaScript 异步编程的技术，我们重新回归 JavaScript，我梳理了最重要的几个技术要点，这也是这一章相对比较难的一讲。</span></span></span>
 </div>
 <h3 class="se-007fa24e" data-slate-type="heading" data-slate-object="block" data-key="980"><span data-slate-object="text" data-key="981"><span data-slate-leaf="true" data-offset-key="981:0" data-first-offset="true"><span data-slate-string="true">第四章：数据持久化</span></span></span></h3>
 <div class="se-86711bed " data-slate-type="paragraph" data-slate-object="block" data-key="982">
  <span data-slate-object="text" data-key="983"><span data-slate-leaf="true" data-offset-key="983:0" data-first-offset="true"><span data-slate-string="true">继续往技术栈的下方挖，数据持久化。在这一章的一开始，我首先介绍了这一层中互联网应用最广泛的技术之一——缓存，讲了它的本质、应用和常见的坑，以及缓存框架的设计要点。</span></span></span>
 </div>
 <div class="se-d8f08ed0 " data-slate-type="paragraph" data-slate-object="block" data-key="984">
  <span data-slate-object="text" data-key="985"><span data-slate-leaf="true" data-offset-key="985:0" data-first-offset="true"><span data-slate-string="true">接着是数据一致性，我介绍了它的概念，还有围绕它而产生的常见架构技术。有了数据一致性的基础知识，我们就进一步学习了 CAP 的原理，包括它的本质、常见的误区，以及我们该怎样根据 CAP 去做技术选型。</span></span></span>
 </div>
 <div class="se-b6d1c6e3 " data-slate-type="paragraph" data-slate-object="block" data-key="986">
  <span data-slate-object="text" data-key="987"><span data-slate-leaf="true" data-offset-key="987:0" data-first-offset="true"><span data-slate-string="true">最后则是数据持久层的设计，包括理论部分、关系数据库和非关系数据库的一些设计要点；以及实例部分，包括几个范例系统：搜索引擎、地理信息系统和电商网站。</span></span></span>
 </div>
 <h3 class="se-4688dd01" data-slate-type="heading" data-slate-object="block" data-key="988"><span data-slate-object="text" data-key="989"><span data-slate-leaf="true" data-offset-key="989:0" data-first-offset="true"><span data-slate-string="true">第五章：寻找最佳实践</span></span></span></h3>
 <div class="se-a9c3f076 " data-slate-type="paragraph" data-slate-object="block" data-key="990">
  <span data-slate-object="text" data-key="991"><span data-slate-leaf="true" data-offset-key="991:0" data-first-offset="true"><span data-slate-string="true">在第五章中，我们跳出了全栈技术纵深方向上具体某一层的限制，而是从一个横向的角度去分析相关的实践技术。</span></span></span>
 </div>
 <div class="se-ff8dfc10 " data-slate-type="paragraph" data-slate-object="block" data-key="992">
  <span data-slate-object="text" data-key="993"><span data-slate-leaf="true" data-offset-key="993:0" data-first-offset="true"><span data-slate-string="true">在 Ops 三部曲中，我分别介绍了：</span></span></span>
 </div>
 <div class="se-e2b2268d" data-slate-type="list" data-slate-object="block" data-key="994">
  <div class="se-e673f0a4 se-14e1ba7a" data-slate-type="list-line" data-slate-object="block" data-key="995">
   <span data-slate-object="text" data-key="996"><span data-slate-leaf="true" data-offset-key="996:0" data-first-offset="true"><span data-slate-string="true">配置管理，有哪些配置管理的技术，我们该选择怎样的方式去做配置管理；</span></span></span>
  </div>
  <div class="se-14cc6eaf se-00479ed7" data-slate-type="list-line" data-slate-object="block" data-key="997">
   <span data-slate-object="text" data-key="998"><span data-slate-leaf="true" data-offset-key="998:0" data-first-offset="true"><span data-slate-string="true">集群部署，我介绍了集群部署的方式，部署下的负载分担原理和策略算法，以及集群部署下常见的话题——Session 和 Cookie；</span></span></span>
  </div>
  <div class="se-2e10591e se-671b3fc9" data-slate-type="list-line" data-slate-object="block" data-key="999">
   <span data-slate-object="text" data-key="1000"><span data-slate-leaf="true" data-offset-key="1000:0" data-first-offset="true"><span data-slate-string="true">测试和发布，围绕 CI/CD 介绍了 pipeline 的含义、内容和挑战，以及不同类型的测试在其上集成的方式。</span></span></span>
  </div>
 </div>
 <div class="se-3c82a969 " data-slate-type="paragraph" data-slate-object="block" data-key="1001">
  <span data-slate-object="text" data-key="1002"><span data-slate-leaf="true" data-offset-key="1002:0" data-first-offset="true"><span data-slate-string="true">在网络安全那一讲中，我着重介绍了常见的 Web 攻击方式的原理，包括 XSS、CSRF、SQL 注入、HTTP 和 DNS 劫持，以及 DDoS。</span></span></span>
 </div>
 <div class="se-74eb6730 " data-slate-type="paragraph" data-slate-object="block" data-key="1003">
  <span data-slate-object="text" data-key="1004"><span data-slate-leaf="true" data-offset-key="1004:0" data-first-offset="true"><span data-slate-string="true">最后则是 SEO 这一讲，我介绍了 SEO 和白帽、黑帽的含义，以及一些常见的 SEO 技术，包括站内优化和站外优化。</span></span></span>
 </div>
 <h3 class="se-f171329f" data-slate-type="heading" data-slate-object="block" data-key="1005"><span data-slate-object="text" data-key="1006"><span data-slate-leaf="true" data-offset-key="1006:0" data-first-offset="true"><span data-slate-string="true">第六章：专题</span></span></span></h3>
 <div class="se-35737743 " data-slate-type="paragraph" data-slate-object="block" data-key="1007">
  <span data-slate-object="text" data-key="1008"><span data-slate-leaf="true" data-offset-key="1008:0" data-first-offset="true"><span data-slate-string="true">在第六章，我选取了四大专题分别展开介绍。</span></span></span>
 </div>
 <div class="se-acba53a6 " data-slate-type="paragraph" data-slate-object="block" data-key="1009">
  <span data-slate-object="text" data-key="1010"><span data-slate-leaf="true" data-offset-key="1010:0" data-first-offset="true"><span data-slate-string="true">在网站性能优化一讲，首先我介绍了一些基础知识，包括性能优化和软件设计的关系，性能优化的关注点，性能测试和指标，以及寻找性能瓶颈的思路；接着按照产品架构调整、后端和持久层优化，以及前端和网络层优化这样三个部分，分别介绍相应的常见性能优化技术。</span></span></span>
 </div>
 <div class="se-f3034b0c " data-slate-type="paragraph" data-slate-object="block" data-key="1011">
  <span data-slate-object="text" data-key="1012"><span data-slate-leaf="true" data-offset-key="1012:0" data-first-offset="true"><span data-slate-string="true">在全栈开发中的算法这一讲，我以这样几大场景为主线，介绍了一些重要的算法：</span></span></span>
 </div>
 <div class="se-a41ce5dd" data-slate-type="list" data-slate-object="block" data-key="1013">
  <div class="se-fe7ed91f se-9d677a7b" data-slate-type="list-line" data-slate-object="block" data-key="1014">
   <span data-slate-object="text" data-key="1015"><span data-slate-leaf="true" data-offset-key="1015:0" data-first-offset="true"><span data-slate-string="true">流量控制算法，包括基于固定时间窗口和滑动时间窗口的流量控制，漏桶算法和令牌桶算法；</span></span></span>
  </div>
  <div class="se-00e5b583 se-771effbd" data-slate-type="list-line" data-slate-object="block" data-key="1016">
   <span data-slate-object="text" data-key="1017"><span data-slate-leaf="true" data-offset-key="1017:0" data-first-offset="true"><span data-slate-string="true">Diffie–Hellman 密钥交换算法，从中我们学到了数学上超大质数在安全领域的一个典型应用；</span></span></span>
  </div>
  <div class="se-ee8af567 se-9571a9e2" data-slate-type="list-line" data-slate-object="block" data-key="1018">
   <span data-slate-object="text" data-key="1019"><span data-slate-leaf="true" data-offset-key="1019:0" data-first-offset="true"><span data-slate-string="true">数据压缩算法，包括哈夫曼编码、RLE 编码和算术编码，从而帮助我们理解，如今繁多的压缩技术的最基本的原理。</span></span></span>
  </div>
 </div>
 <div class="se-7093b0ec " data-slate-type="paragraph" data-slate-object="block" data-key="1020">
  <span data-slate-object="text" data-key="1021"><span data-slate-leaf="true" data-offset-key="1021:0" data-first-offset="true"><span data-slate-string="true">在分页这一讲中，我讲了分页的分类和几种实现分页的技术，最后则是分页的常见问题——重复数据，它背后可能的原因和相应的解决方案。</span></span></span>
 </div>
 <div class="se-96b37b4e " data-slate-type="paragraph" data-slate-object="block" data-key="1022">
  <span data-slate-object="text" data-key="1023"><span data-slate-leaf="true" data-offset-key="1023:0" data-first-offset="true"><span data-slate-string="true">在最后的 XML、JSON 和 YAML 这一讲，我把这几个数据承载格式的优劣进行了仔细的比较，包括简洁和严谨的程度，与 JavaScript 的亲和力，schema、转义方式和路径表达式等等。</span></span></span>
 </div>
 <h3 class="se-f9868207" data-slate-type="heading" data-slate-object="block" data-key="1024"><span data-slate-object="text" data-key="1025"><span data-slate-leaf="true" data-offset-key="1025:0" data-first-offset="true"><span data-slate-string="true">其它</span></span></span></h3>
 <div class="se-522f870c " data-slate-type="paragraph" data-slate-object="block" data-key="1026">
  <span data-slate-object="text" data-key="1027"><span data-slate-leaf="true" data-offset-key="1027:0" data-first-offset="true"><span data-slate-string="true">以上是技术方面的“硬通货”，对于非技术方面，我通过特别放送等等的形式，讨论了一些我认为比较重要，尤其是对于 Web 全栈工程师来说比较重要的话题。</span></span></span>
 </div>
 <div class="se-5514c9f0" data-slate-type="list" data-slate-object="block" data-key="1028">
  <div class="se-acc1206e se-9b366da8" data-slate-type="list-line" data-slate-object="block" data-key="1029">
   <span data-slate-object="text" data-key="1030"><span data-slate-leaf="true" data-offset-key="1030:0" data-first-offset="true"><span data-slate-string="true">怎样去理解 Web 全栈技术，全栈技术应该怎样学习，需要遵从怎样的学习策略；</span></span></span>
  </div>
  <div class="se-1cc2d59d se-cc136f77" data-slate-type="list-line" data-slate-object="block" data-key="1031">
   <span data-slate-object="text" data-key="1032"><span data-slate-leaf="true" data-offset-key="1032:0" data-first-offset="true"><span data-slate-string="true">北美全栈工程师的招聘，招人会秉持怎样的理念，整个流程是怎样的；</span></span></span>
  </div>
  <div class="se-a09c6af4 se-62cddb5e" data-slate-type="list-line" data-slate-object="block" data-key="1033">
   <span data-slate-object="text" data-key="1034"><span data-slate-leaf="true" data-offset-key="1034:0" data-first-offset="true"><span data-slate-string="true">技术修炼应该怎样进行取舍和选择，哪些技术应该深挖，哪些则可以点到即止；</span></span></span>
  </div>
  <div class="se-2a5cc4e9 se-bc442791" data-slate-type="list-line" data-slate-object="block" data-key="1035">
   <span data-slate-object="text" data-key="1036"><span data-slate-leaf="true" data-offset-key="1036:0" data-first-offset="true"><span data-slate-string="true">全栈团队的构成一般是怎样的，有哪些重要的角色；</span></span></span>
  </div>
  <div class="se-a8549dc1 se-ec9d37f4" data-slate-type="list-line" data-slate-object="block" data-key="1037">
   <span data-slate-object="text" data-key="1038"><span data-slate-leaf="true" data-offset-key="1038:0" data-first-offset="true"><span data-slate-string="true">代码审查为什么不可或缺，有哪些争议和好处，又有哪些技巧；</span></span></span>
  </div>
  <div class="se-b85846fc se-3fc8908e" data-slate-type="list-line" data-slate-object="block" data-key="1039">
   <span data-slate-object="text" data-key="1040"><span data-slate-leaf="true" data-offset-key="1040:0" data-first-offset="true"><span data-slate-string="true">程序员为什么要学英语，重要性在哪里，又有哪些好办法；</span></span></span>
  </div>
  <div class="se-e86a0ac9 se-8b4943ad" data-slate-type="list-line" data-slate-object="block" data-key="1041">
   <span data-slate-object="text" data-key="1042"><span data-slate-leaf="true" data-offset-key="1042:0" data-first-offset="true"><span data-slate-string="true">作为 Web 全栈工程师，我们还有哪些发展方向可以考虑，我们为什么需要让项目和团队也“全栈化”？</span></span></span>
  </div>
 </div>
 <h2 class="se-968e7cd7" data-slate-type="heading" data-slate-object="block" data-key="1043"><span data-slate-object="text" data-key="1044"><span data-slate-leaf="true" data-offset-key="1044:0" data-first-offset="true"><span data-slate-string="true">继续提升的重要两步</span></span></span></h2>
 <div class="se-100836cc " data-slate-type="paragraph" data-slate-object="block" data-key="1045">
  <span data-slate-object="text" data-key="1046"><span data-slate-leaf="true" data-offset-key="1046:0" data-first-offset="true"><span data-slate-string="true">对于我们专栏已经覆盖到的这些技能树的枝枝丫丫，我还想特别强调两个方面，这两个方面其实我们已经谈到过了，但是我觉得在今天，我们需要再拿出来稍稍强化一下。因为在我看来，它们有些特殊——它们对于程序员进一步发展至关重要，它们也是“成为更好的全栈工程师”所必须迈出的两步，但是谈论的人却很少。</span></span></span>
 </div>
 <h3 class="se-025c273f" data-slate-type="heading" data-slate-object="block" data-key="1047"><span data-slate-object="text" data-key="1048"><span data-slate-leaf="true" data-offset-key="1048:0" data-first-offset="true"><span data-slate-string="true">1. 从做项目到做产品</span></span></span></h3>
 <div class="se-73e5bd13 " data-slate-type="paragraph" data-slate-object="block" data-key="1049">
  <span data-slate-object="text" data-key="1050"><span data-slate-leaf="true" data-offset-key="1050:0" data-first-offset="true"><span data-slate-string="true">你还记得吗？ </span></span></span><a data-slate-type="link" data-slate-object="inline" data-key="1051" class="se-9a604d3a se-490c3d6a"><span data-slate-object="text" data-key="1052"><span data-slate-leaf="true" data-offset-key="1052:0" data-first-offset="true"><span data-slate-string="true">[第 28 讲]</span></span></span></a><span data-slate-object="text" data-key="1053"><span data-slate-leaf="true" data-offset-key="1053:0" data-first-offset="true"><span data-slate-string="true"> 的选修课堂，我介绍了程序员独立性的几个阶段，不知道你属于哪一个阶段呢？作为职业生涯进阶的一部分，如果你还停留在“做项目”的阶段，那么你需要在某一天切换到“做产品”的模式上来，完成程序员独立性的升级。事实上，“做项目”，终归只是“做产品”整个过程中很小的一部分，只有对于产品多个阶段的不断地迭代、回馈，程序员很多方面的认识才能不断进化。</span></span></span>
 </div>
 <div class="se-f6eeb795 " data-slate-type="paragraph" data-slate-object="block" data-key="1054">
  <span data-slate-object="text" data-key="1055"><span data-slate-leaf="true" data-offset-key="1055:0" data-first-offset="true"><span data-slate-string="true">举个例子，对于程序员来说，oncall（定位和修复线上问题）就是“做产品”必经的一环，也是团队“吃自己的狗食”的重要一环。这个过程可以反哺开发阶段，没有这样的过程，就不会真正体会到代码质量的重要性，就不会彻底意识到单元测试的重要性，也不会对代码评审的必要性有深刻的认识。</span></span></span>
 </div>
 <div class="se-88a38031 " data-slate-type="paragraph" data-slate-object="block" data-key="1056">
  <span data-slate-object="text" data-key="1057"><span data-slate-leaf="true" data-offset-key="1057:0" data-first-offset="true"><span data-slate-string="true">因此，如果你还只有“做项目”的经验，我建议你，在未来给自己寻找做产品的机会。</span></span></span>
 </div>
 <h3 class="se-7305d892" data-slate-type="heading" data-slate-object="block" data-key="1058"><span data-slate-object="text" data-key="1059"><span data-slate-leaf="true" data-offset-key="1059:0" data-first-offset="true"><span data-slate-string="true">2. 保持技术上的包容心</span></span></span></h3>
 <div class="se-02fdc4c7 " data-slate-type="paragraph" data-slate-object="block" data-key="1060">
  <span data-slate-object="text" data-key="1061"><span data-slate-leaf="true" data-offset-key="1061:0" data-first-offset="true"><span data-slate-string="true">在 </span></span></span><a data-slate-type="link" data-slate-object="inline" data-key="1062" class="se-9a604d3a se-490c3d6a"><span data-slate-object="text" data-key="1063"><span data-slate-leaf="true" data-offset-key="1063:0" data-first-offset="true"><span data-slate-string="true">[第 14 讲]</span></span></span></a><span data-slate-object="text" data-key="1064"><span data-slate-leaf="true" data-offset-key="1064:0" data-first-offset="true"><span data-slate-string="true"> 我就谈到过这个给自己“贴标签”的问题，有些程序员工作没几年，无论是有意识还是无意识地，就已经给自己贴上了过于明确的技术分类的标签。</span></span></span>
 </div>
 <div class="se-9e772ca3 " data-slate-type="paragraph" data-slate-object="block" data-key="1065">
  <span data-slate-object="text" data-key="1066"><span data-slate-leaf="true" data-offset-key="1066:0" data-first-offset="true"><span data-slate-string="true">比如说，给自己贴上“PHP 工程师”的标签，理由是觉得 PHP 是最好的语言，因此求职的时候非 PHP 的岗位一概不考虑；比如，只想做 Billing 系统，其它的业务领域和项目一概不考虑；再比如，极度强调自己是“技术人”，而特别排斥管理技巧、沟通合作能力等这些被鄙视为“非干货”、“非实战”的内容，可是对于几乎所有的职业生涯技术路线来说，它们其实都是非常重要，且绕不开的槛。</span></span></span>
 </div>
 <div class="se-4bda2846 " data-slate-type="paragraph" data-slate-object="block" data-key="1067">
  <span data-slate-object="text" data-key="1068"><span data-slate-leaf="true" data-offset-key="1068:0" data-first-offset="true"><span data-slate-string="true">再说说具体的技术，每个人都有偏好，但是不要因为自己的偏好，在技术的选择上失去程序员应有的理性判断，甚至将应当去接纳和学习的技术拒之门外。因为你也不知道哪一天，一个新领域、一门新技术会像浪潮一样涌来，就像几年前的云计算，这两年的区块链。只有那些有着包容心的程序员，才能去接纳和抓住机会。这也正如我在 </span></span></span><a data-slate-type="link" data-slate-object="inline" data-key="1069" class="se-9a604d3a se-490c3d6a"><span data-slate-object="text" data-key="1070"><span data-slate-leaf="true" data-offset-key="1070:0" data-first-offset="true"><span data-slate-string="true">[开篇词]</span></span></span></a><span data-slate-object="text" data-key="1071"><span data-slate-leaf="true" data-offset-key="1071:0" data-first-offset="true"><span data-slate-string="true"> 中所说的，最终也许我们需要“学得精”，但是一开始我们一定要“学得杂”。</span></span></span>
 </div>
 <h2 class="se-738cea3a" data-slate-type="heading" data-slate-object="block" data-key="1072"><span data-slate-object="text" data-key="1073"><span data-slate-leaf="true" data-offset-key="1073:0" data-first-offset="true"><span data-slate-string="true">送君千里，终须一别</span></span></span></h2>
 <div class="se-2a3e61a7 " data-slate-type="paragraph" data-slate-object="block" data-key="1074">
  <span data-slate-object="text" data-key="1075"><span data-slate-leaf="true" data-offset-key="1075:0" data-first-offset="true"><span data-slate-string="true">任何一段旅程都有终点，这个专栏也不例外。</span></span></span>
 </div>
 <div class="se-6fe3f139 " data-slate-type="paragraph" data-slate-object="block" data-key="1076">
  <span data-slate-object="text" data-key="1077"><span data-slate-leaf="true" data-offset-key="1077:0" data-first-offset="true"><span data-slate-string="true">今天，你学到了这里，我最想大声地和你说一句话——祝贺你！从试读到购买，再到完整学习，我相信你已经一马当先，击败了一些人。现在，我希望你可以继续一马当先，不止在这个专栏，还在你今后的学习、工作和生活中。</span></span></span>
 </div>
 <div class="se-43602414 " data-slate-type="paragraph" data-slate-object="block" data-key="1078">
  <span data-slate-object="text" data-key="1079"><span data-slate-leaf="true" data-offset-key="1079:0" data-first-offset="true"><span data-slate-string="true">回头看，整个专栏正文部分共计 40 讲，全部加起来有二十多万字。如果在一开始写专栏的时候跟我说，我会做到这个程度，我一定不相信。在这个过程当中，从主题选择、大纲确定、内容试写，到正式写作、绘图、审校、录音，整个过程确实让我颇为疲惫。一篇文章耗时最长的部分并非写作，而是内容选择和构思，比如怎样让你的收获最大化，得到更加通用的原理、套路 ，而不是停留在某个单一的技术表面上。但是，就像我在专栏上线以前想的那样，我觉得这是一件自己可以尽量认真做好的、很有意义的事情。现在看起来，我觉得可以稍微松口气了。</span></span></span>
 </div>
 <div class="se-006c2d3e " data-slate-type="paragraph" data-slate-object="block" data-key="1080">
  <span data-slate-object="text" data-key="1081"><span data-slate-leaf="true" data-offset-key="1081:0" data-first-offset="true"><span data-slate-string="true">在这里，我要说，感谢你可以阅读这个专栏，并且特别感谢那些积极在留言区交流的朋友，关于全栈的内容，我们还可以继续在留言区沟通，也欢迎你访问我的</span></span></span><a data-slate-type="link" data-slate-object="inline" data-key="1082" class="se-9a604d3a se-490c3d6a"><span data-slate-object="text" data-key="1083"><span data-slate-leaf="true" data-offset-key="1083:0" data-first-offset="true"><span data-slate-string="true">个人博客</span></span></span></a><span data-slate-object="text" data-key="1084"><span data-slate-leaf="true" data-offset-key="1084:0" data-first-offset="true"><span data-slate-string="true">，和我继续交流。</span></span></span>
 </div>
 <div class="se-a6a94ca4 " data-slate-type="paragraph" data-slate-object="block" data-key="1085">
  <span data-slate-object="text" data-key="1086"><span data-slate-leaf="true" data-offset-key="1086:0" data-first-offset="true"><span data-slate-string="true">世界变化太快，技术发展太快，我们“被迫”成为了全栈工程师。</span></span></span>
 </div>
 <div class="se-86221bdc " data-slate-type="paragraph" data-slate-object="block" data-key="1087">
  <span data-slate-object="text" data-key="1088"><span data-slate-leaf="true" data-offset-key="1088:0" data-first-offset="true"><span class="se-743dcd75" data-slate-type="bold" data-slate-object="mark"><span data-slate-string="true">全栈，不只是一种技术分类，还代表了一种态度：理性、包容、好学。</span></span></span></span><span data-slate-object="text" data-key="1089"><span data-slate-leaf="true" data-offset-key="1089:0" data-first-offset="true"><span data-slate-string="true">希望你可以从这个专栏得到你想要的，但更多的收获，需要你在线下继续努力。毕竟，《全栈工程师修炼指南》这个专栏结束了，而你的全栈之路却才刚刚开始。</span></span></span>
 </div>
 <div class="se-1b9ef6e9 " data-slate-type="paragraph" data-slate-object="block" data-key="1090">
  <span data-slate-object="text" data-key="1091"><span data-slate-leaf="true" data-offset-key="1091:0" data-first-offset="true"><span data-slate-string="true">好，我是四火，我们后会有期！</span></span></span>
 </div>
 <div class="se-429fd270 " data-slate-type="paragraph" data-slate-object="block" data-key="1092">
  <span data-slate-object="text" data-key="1093"><span data-slate-leaf="true" data-offset-key="1093:0" data-first-offset="true"><span class="se-7e735c66" data-slate-type="primary" data-slate-object="mark"><span data-slate-string="true">最后，文末有一份调查问卷，希望你可以抽出两分钟的时间填写一下。我会认真倾听你对这个专栏的意见或者建议，期待你的反馈！</span></span></span></span>
 </div>
 <div class="se-ae26b95d" data-slate-type="image" data-slate-object="block" data-key="1094">
  <a href="https://jinshuju.net/f/514fSy"><img class="se-c1613d83" src="https://static001.geekbang.org/resource/image/3f/3d/3f7b46f38bc0603c33fb4bf299d6763d.jpg"></a>
 </div>
</div> |             |book   |0     |full_html   |zh-hans  |3           |
|----------||-------------|-------|------|------------|---------|------------|

