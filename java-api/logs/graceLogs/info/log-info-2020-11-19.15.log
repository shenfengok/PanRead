2020-11-19 17:55:36.291 INFO  jdbc.sqltiming Line:373 - update node_field_revision set changed=1605779736, created=1605779736, default_langcode=1, 
langcode='zh-hans', promote=0, revision_translation_affected=1, status=1, sticky=0, title='12丨唯有套路得人心：谈谈JavaEE的那些模式', 
uid=1, vid=37 where nid=37 
 {executed in 0 msec}
2020-11-19 17:55:36.300 INFO  jdbc.sqltiming Line:373 - select bookfieldm0_.entity_id as entity_i1_8_, bookfieldm0_.bundle as bundle2_8_, bookfieldm0_.delta 
as delta3_8_, bookfieldm0_.langcode as langcode4_8_, bookfieldm0_.field_media_value as field_me5_8_, 
bookfieldm0_.revision_id as revision6_8_ from node__field_media bookfieldm0_ where bookfieldm0_.entity_id=37 
 {executed in 1 msec}
2020-11-19 17:55:36.300 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------||------------|
|entity_id |bundle |delta |langcode |field_media_value|revision_id |
|----------|-------|------|---------||------------|
|37        |book   |0     |zh-hans  |https://qdall01.baidupcs.com/file/b162d78c140278c67f716192e0ad763b?bkt=en-07c9b0a504a37060db41da44d85860aae2ee4f517c0aae0e368e6b5eac9f7adc4ea4cd15f5fb4a4b&fid=3757516097-778750-652598925955165&time=1605756132&sign=FDTAXUGERLQlBHSKfWqir-DCb740ccc5511e5e8fedcff06b081203-bZNHE87HprCsTwFpDEZfD0vERSo%3D&to=92&size=14304021&sta_dx=14304021&sta_cs=3873&sta_ft=m4a&sta_ct=7&sta_mt=0&fm2=MH%2CYangquan%2CAnywhere%2C%2Cshanghai%2Cct&ctime=1570414495&mtime=1605754778&resv0=-1&resv1=0&resv2=rlim&resv3=2&resv4=14304021&vuk=3757516097&iv=0&htype=&randtype=em&newver=1&newfm=1&secfm=1&flow_ver=3&pkey=en-9bae22f3779cdcda823180f19e1ba39c35ddffd614fbd516bcd4c6139eec954d5729d3ae93e53236&sl=76480590&expires=8h&rt=pr&r=683399320&mlogid=7502269529331065997&vbdid=2247232042&fin=12%E4%B8%A8%E5%94%AF%E6%9C%89%E5%A5%97%E8%B7%AF%E5%BE%97%E4%BA%BA%E5%BF%83%EF%BC%9A%E8%B0%88%E8%B0%88JavaEE%E7%9A%84%E9%82%A3%E4%BA%9B%E6%A8%A1%E5%BC%8F.m4a&bflag=92,34-92&rtype=1&dp-logid=7502269529331065997&dp-callid=0.1.1&hps=1&tsl=80&csl=80&fsl=-1&csign=yVzLQPCt4DblfMLqd2BCjd2RnqQ%3D&so=0&ut=6&uter=0&serv=0&uc=1458616558&ti=5eee304bbb22b9c2acd18ff8009f13c8a0a90b7ac7ecc952305a5e1275657320&hflag=30&adg=c_15d187590626c675056c89c8026cfc17&reqlabel=778750_l_1bf9445f27094ab64c9f1cb0bdf7ccfa_-1_dd2c452b8e51a0c74130d7cf32c48a2d&ibp=1&by=themis&filename=12%E4%B8%A8%E5%94%AF%E6%9C%89%E5%A5%97%E8%B7%AF%E5%BE%97%E4%BA%BA%E5%BF%83%EF%BC%9A%E8%B0%88%E8%B0%88JavaEE%E7%9A%84%E9%82%A3%E4%BA%9B%E6%A8%A1%E5%BC%8F.m4a |37          |
|----------|-------|------|---------|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|------------|

2020-11-19 17:55:36.305 INFO  jdbc.sqltiming Line:373 - update node__field_media set bundle='book', delta=0, langcode='zh-hans', field_media_value='https://qdall01.baidupcs.com/file/b162d78c140278c67f716192e0ad763b?bkt=en-07c9b0a504a37060db41da44d85860aae2ee4f517c0aae0e368e6b5eac9f7adc4ea4cd15f5fb4a4b&fid=3757516097-778750-1074285291837031&time=1605779734&sign=FDTAXUGERLQlBHSKfWqir-DCb740ccc5511e5e8fedcff06b081203-2qNLwrksNabSK4Nbxc9AW8odom4%3D&to=92&size=14304021&sta_dx=14304021&sta_cs=3878&sta_ft=m4a&sta_ct=7&sta_mt=0&fm2=MH%2CYangquan%2CAnywhere%2C%2Cshanghai%2Cct&ctime=1570414495&mtime=1605778300&resv0=-1&resv1=0&resv2=rlim&resv3=2&resv4=14304021&vuk=3757516097&iv=0&htype=&randtype=em&newver=1&newfm=1&secfm=1&flow_ver=3&pkey=en-9bae22f3779cdcda823180f19e1ba39c35ddffd614fbd516bcd4c6139eec954d5729d3ae93e53236&sl=76480590&expires=8h&rt=pr&r=447182992&mlogid=7508605160983499541&vbdid=2247232042&fin=12%E4%B8%A8%E5%94%AF%E6%9C%89%E5%A5%97%E8%B7%AF%E5%BE%97%E4%BA%BA%E5%BF%83%EF%BC%9A%E8%B0%88%E8%B0%88JavaEE%E7%9A%84%E9%82%A3%E4%BA%9B%E6%A8%A1%E5%BC%8F.m4a&bflag=92,34-92&rtype=1&dp-logid=7508605160983499541&dp-callid=0.1.1&hps=1&tsl=80&csl=80&fsl=-1&csign=yVzLQPCt4DblfMLqd2BCjd2RnqQ%3D&so=0&ut=6&uter=0&serv=0&uc=1458616558&ti=5f2aaa70d2fd14de1734d8ca037459b2dee29e29dea88820&hflag=30&adg=c_15d187590626c675056c89c8026cfc17&reqlabel=778750_l_1bf9445f27094ab64c9f1cb0bdf7ccfa_-1_dd2c452b8e51a0c74130d7cf32c48a2d&ibp=1&by=themis&filename=12%E4%B8%A8%E5%94%AF%E6%9C%89%E5%A5%97%E8%B7%AF%E5%BE%97%E4%BA%BA%E5%BF%83%EF%BC%9A%E8%B0%88%E8%B0%88JavaEE%E7%9A%84%E9%82%A3%E4%BA%9B%E6%A8%A1%E5%BC%8F.m4a', 
revision_id=37 where entity_id=37 
 {executed in 0 msec}
2020-11-19 17:55:36.307 INFO  jdbc.sqltiming Line:373 - select nodefieldm0_.entity_id as entity_i1_17_0_, nodefieldm0_.bundle as bundle2_17_0_, nodefieldm0_.delta 
as delta3_17_0_, nodefieldm0_.langcode as langcode4_17_0_, nodefieldm0_.field_media_value as 
field_me5_17_0_, nodefieldm0_.revision_id as revision6_17_0_ from node_revision__field_media 
nodefieldm0_ where nodefieldm0_.entity_id=37 
 {executed in 0 msec}
2020-11-19 17:55:36.308 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------||------------|
|entity_id |bundle |delta |langcode |field_media_value|revision_id |
|----------|-------|------|---------||------------|
|[unread]  |book   |0     |zh-hans  |https://qdall01.baidupcs.com/file/b162d78c140278c67f716192e0ad763b?bkt=en-07c9b0a504a37060db41da44d85860aae2ee4f517c0aae0e368e6b5eac9f7adc4ea4cd15f5fb4a4b&fid=3757516097-778750-652598925955165&time=1605756132&sign=FDTAXUGERLQlBHSKfWqir-DCb740ccc5511e5e8fedcff06b081203-bZNHE87HprCsTwFpDEZfD0vERSo%3D&to=92&size=14304021&sta_dx=14304021&sta_cs=3873&sta_ft=m4a&sta_ct=7&sta_mt=0&fm2=MH%2CYangquan%2CAnywhere%2C%2Cshanghai%2Cct&ctime=1570414495&mtime=1605754778&resv0=-1&resv1=0&resv2=rlim&resv3=2&resv4=14304021&vuk=3757516097&iv=0&htype=&randtype=em&newver=1&newfm=1&secfm=1&flow_ver=3&pkey=en-9bae22f3779cdcda823180f19e1ba39c35ddffd614fbd516bcd4c6139eec954d5729d3ae93e53236&sl=76480590&expires=8h&rt=pr&r=683399320&mlogid=7502269529331065997&vbdid=2247232042&fin=12%E4%B8%A8%E5%94%AF%E6%9C%89%E5%A5%97%E8%B7%AF%E5%BE%97%E4%BA%BA%E5%BF%83%EF%BC%9A%E8%B0%88%E8%B0%88JavaEE%E7%9A%84%E9%82%A3%E4%BA%9B%E6%A8%A1%E5%BC%8F.m4a&bflag=92,34-92&rtype=1&dp-logid=7502269529331065997&dp-callid=0.1.1&hps=1&tsl=80&csl=80&fsl=-1&csign=yVzLQPCt4DblfMLqd2BCjd2RnqQ%3D&so=0&ut=6&uter=0&serv=0&uc=1458616558&ti=5eee304bbb22b9c2acd18ff8009f13c8a0a90b7ac7ecc952305a5e1275657320&hflag=30&adg=c_15d187590626c675056c89c8026cfc17&reqlabel=778750_l_1bf9445f27094ab64c9f1cb0bdf7ccfa_-1_dd2c452b8e51a0c74130d7cf32c48a2d&ibp=1&by=themis&filename=12%E4%B8%A8%E5%94%AF%E6%9C%89%E5%A5%97%E8%B7%AF%E5%BE%97%E4%BA%BA%E5%BF%83%EF%BC%9A%E8%B0%88%E8%B0%88JavaEE%E7%9A%84%E9%82%A3%E4%BA%9B%E6%A8%A1%E5%BC%8F.m4a |37          |
|----------|-------|------|---------||------------|

2020-11-19 17:55:36.313 INFO  jdbc.sqltiming Line:373 - update node_revision__field_media set bundle='book', delta=0, langcode='zh-hans', field_media_value='https://qdall01.baidupcs.com/file/b162d78c140278c67f716192e0ad763b?bkt=en-07c9b0a504a37060db41da44d85860aae2ee4f517c0aae0e368e6b5eac9f7adc4ea4cd15f5fb4a4b&fid=3757516097-778750-1074285291837031&time=1605779734&sign=FDTAXUGERLQlBHSKfWqir-DCb740ccc5511e5e8fedcff06b081203-2qNLwrksNabSK4Nbxc9AW8odom4%3D&to=92&size=14304021&sta_dx=14304021&sta_cs=3878&sta_ft=m4a&sta_ct=7&sta_mt=0&fm2=MH%2CYangquan%2CAnywhere%2C%2Cshanghai%2Cct&ctime=1570414495&mtime=1605778300&resv0=-1&resv1=0&resv2=rlim&resv3=2&resv4=14304021&vuk=3757516097&iv=0&htype=&randtype=em&newver=1&newfm=1&secfm=1&flow_ver=3&pkey=en-9bae22f3779cdcda823180f19e1ba39c35ddffd614fbd516bcd4c6139eec954d5729d3ae93e53236&sl=76480590&expires=8h&rt=pr&r=447182992&mlogid=7508605160983499541&vbdid=2247232042&fin=12%E4%B8%A8%E5%94%AF%E6%9C%89%E5%A5%97%E8%B7%AF%E5%BE%97%E4%BA%BA%E5%BF%83%EF%BC%9A%E8%B0%88%E8%B0%88JavaEE%E7%9A%84%E9%82%A3%E4%BA%9B%E6%A8%A1%E5%BC%8F.m4a&bflag=92,34-92&rtype=1&dp-logid=7508605160983499541&dp-callid=0.1.1&hps=1&tsl=80&csl=80&fsl=-1&csign=yVzLQPCt4DblfMLqd2BCjd2RnqQ%3D&so=0&ut=6&uter=0&serv=0&uc=1458616558&ti=5f2aaa70d2fd14de1734d8ca037459b2dee29e29dea88820&hflag=30&adg=c_15d187590626c675056c89c8026cfc17&reqlabel=778750_l_1bf9445f27094ab64c9f1cb0bdf7ccfa_-1_dd2c452b8e51a0c74130d7cf32c48a2d&ibp=1&by=themis&filename=12%E4%B8%A8%E5%94%AF%E6%9C%89%E5%A5%97%E8%B7%AF%E5%BE%97%E4%BA%BA%E5%BF%83%EF%BC%9A%E8%B0%88%E8%B0%88JavaEE%E7%9A%84%E9%82%A3%E4%BA%9B%E6%A8%A1%E5%BC%8F.m4a', 
revision_id=37 where entity_id=37 
 {executed in 0 msec}
2020-11-19 17:55:36.316 INFO  jdbc.sqltiming Line:373 - select bookfieldc0_.entity_id as entity_i1_5_, bookfieldc0_.bundle as bundle2_5_, bookfieldc0_.field_comment_value 
as field_co3_5_, bookfieldc0_.delta as delta4_5_, bookfieldc0_.field_comment_format as field_co5_5_, 
bookfieldc0_.langcode as langcode6_5_, bookfieldc0_.revision_id as revision7_5_ from node__field_comment 
bookfieldc0_ where bookfieldc0_.entity_id=37 
 {executed in 0 msec}
2020-11-19 17:55:36.316 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|--------------------|------|---------------------|---------|------------|
|entity_id |bundle |field_comment_value |delta |field_comment_format |langcode |revision_id |
|----------|-------|--------------------|------|---------------------|---------|------------|
|37        |book   |                    |0     |full_html            |zh-hans  |37          |
|----------|-------|--------------------|------|---------------------|---------|------------|

2020-11-19 17:55:36.321 INFO  jdbc.sqltiming Line:373 - select nodefieldc0_.entity_id as entity_i1_14_0_, nodefieldc0_.bundle as bundle2_14_0_, nodefieldc0_.field_comment_value 
as field_co3_14_0_, nodefieldc0_.delta as delta4_14_0_, nodefieldc0_.field_comment_format as 
field_co5_14_0_, nodefieldc0_.langcode as langcode6_14_0_, nodefieldc0_.revision_id as revision7_14_0_ 
from node_revision__field_comment nodefieldc0_ where nodefieldc0_.entity_id=37 
 {executed in 0 msec}
2020-11-19 17:55:36.322 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|--------------------|------|---------------------|---------|------------|
|entity_id |bundle |field_comment_value |delta |field_comment_format |langcode |revision_id |
|----------|-------|--------------------|------|---------------------|---------|------------|
|[unread]  |book   |                    |0     |full_html            |zh-hans  |37          |
|----------|-------|--------------------|------|---------------------|---------|------------|

2020-11-19 17:55:36.327 INFO  jdbc.sqltiming Line:373 - select bookfieldt0_.entity_id as entity_i1_9_, bookfieldt0_.bundle as bundle2_9_, bookfieldt0_.delta 
as delta3_9_, bookfieldt0_.langcode as langcode4_9_, bookfieldt0_.revision_id as revision5_9_, 
bookfieldt0_.field_thumb_value as field_th6_9_ from node__field_thumb bookfieldt0_ where bookfieldt0_.entity_id=37 
 {executed in 0 msec}
2020-11-19 17:55:36.327 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------|-----------------------------------------------------------------------------------------|
|entity_id |bundle |delta |langcode |revision_id |field_thumb_value                                                                        |
|----------|-------|------|---------|------------|-----------------------------------------------------------------------------------------|
|37        |book   |0     |zh-hans  |37          |https://static001.geekbang.org/resource/image/57/21/57002ada154c047e8ff5668351ddaf21.jpg |
|----------|-------|------|---------|------------|-----------------------------------------------------------------------------------------|

2020-11-19 17:55:36.332 INFO  jdbc.sqltiming Line:373 - select nodefieldt0_.entity_id as entity_i1_18_0_, nodefieldt0_.bundle as bundle2_18_0_, nodefieldt0_.delta 
as delta3_18_0_, nodefieldt0_.langcode as langcode4_18_0_, nodefieldt0_.revision_id as revision5_18_0_, 
nodefieldt0_.field_thumb_value as field_th6_18_0_ from node_revision__field_thumb nodefieldt0_ 
where nodefieldt0_.entity_id=37 
 {executed in 0 msec}
2020-11-19 17:55:36.333 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------|-----------------------------------------------------------------------------------------|
|entity_id |bundle |delta |langcode |revision_id |field_thumb_value                                                                        |
|----------|-------|------|---------|------------|-----------------------------------------------------------------------------------------|
|[unread]  |book   |0     |zh-hans  |37          |https://static001.geekbang.org/resource/image/57/21/57002ada154c047e8ff5668351ddaf21.jpg |
|----------|-------|------|---------|------------|-----------------------------------------------------------------------------------------|

2020-11-19 17:55:36.338 INFO  jdbc.sqltiming Line:373 - select bookfieldf0_.entity_id as entity_i1_6_0_, bookfieldf0_.bundle as bundle2_6_0_, bookfieldf0_.delta 
as delta3_6_0_, bookfieldf0_.field_fenlei_target_id as field_fe4_6_0_, bookfieldf0_.langcode 
as langcode5_6_0_, bookfieldf0_.revision_id as revision6_6_0_ from node__field_fenlei bookfieldf0_ 
where bookfieldf0_.entity_id=37 
 {executed in 1 msec}
2020-11-19 17:55:36.338 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------------|---------|------------|
|entity_id |bundle |delta |field_fenlei_target_id |langcode |revision_id |
|----------|-------|------|-----------------------|---------|------------|
|[unread]  |book   |0     |1                      |zh-hans  |37          |
|----------|-------|------|-----------------------|---------|------------|

2020-11-19 17:55:36.343 INFO  jdbc.sqltiming Line:373 - select nodefieldf0_.entity_id as entity_i1_15_0_, nodefieldf0_.bundle as bundle2_15_0_, nodefieldf0_.delta 
as delta3_15_0_, nodefieldf0_.field_fenlei_target_id as field_fe4_15_0_, nodefieldf0_.langcode 
as langcode5_15_0_, nodefieldf0_.revision_id as revision6_15_0_ from node_revision__field_fenlei 
nodefieldf0_ where nodefieldf0_.entity_id=37 
 {executed in 0 msec}
2020-11-19 17:55:36.344 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------------|---------|------------|
|entity_id |bundle |delta |field_fenlei_target_id |langcode |revision_id |
|----------|-------|------|-----------------------|---------|------------|
|[unread]  |book   |0     |1                      |zh-hans  |37          |
|----------|-------|------|-----------------------|---------|------------|

2020-11-19 17:55:36.349 INFO  jdbc.sqltiming Line:373 - select bookchecke0_.item_id as item_id1_2_, bookchecke0_.fsid as fsid2_2_, bookchecke0_.got 
as got3_2_, bookchecke0_.name as name4_2_ from book_check bookchecke0_ where bookchecke0_.fsid='806919862409703' 
and bookchecke0_.name='net_content' 
 {executed in 0 msec}
2020-11-19 17:55:36.349 INFO  jdbc.resultsettable Line:610 - 
|--------|-----|----|-----|
|item_id |fsid |got |name |
|--------|-----|----|-----|
|--------|-----|----|-----|

2020-11-19 17:56:12.831 INFO  jdbc.sqltiming Line:373 - select bookchecke0_.item_id as item_id1_2_, bookchecke0_.fsid as fsid2_2_, bookchecke0_.got 
as got3_2_, bookchecke0_.name as name4_2_ from book_check bookchecke0_ where bookchecke0_.fsid='806919862409703' 
and bookchecke0_.name='net_content' 
 {executed in 0 msec}
2020-11-19 17:56:12.831 INFO  jdbc.resultsettable Line:610 - 
|--------|-----|----|-----|
|item_id |fsid |got |name |
|--------|-----|----|-----|
|--------|-----|----|-----|

2020-11-19 17:56:12.832 INFO  jdbc.sqltiming Line:373 - insert into book_check (fsid, got, name) values ('806919862409703', 1, 'net_content') 
 {executed in 0 msec}
2020-11-19 17:56:12.833 INFO  jdbc.sqltiming Line:373 - getGeneratedKeys on query: insert into book_check (fsid, got, name) values ('806919862409703', 
1, 'net_content') 
 {executed in 0 msec}
2020-11-19 17:56:12.833 INFO  jdbc.resultsettable Line:610 - 
|--------------|
|generated_key |
|--------------|
|63            |
|--------------|

2020-11-19 17:56:12.853 INFO  jdbc.sqltiming Line:373 - select bookchecke0_.item_id as item_id1_2_, bookchecke0_.fsid as fsid2_2_, bookchecke0_.got 
as got3_2_, bookchecke0_.name as name4_2_ from book_check bookchecke0_ where bookchecke0_.fsid='806919862409703' 
and bookchecke0_.name='media' 
 {executed in 0 msec}
2020-11-19 17:56:12.853 INFO  jdbc.resultsettable Line:610 - 
|--------|-----|----|-----|
|item_id |fsid |got |name |
|--------|-----|----|-----|
|--------|-----|----|-----|

2020-11-19 17:56:13.277 INFO  jdbc.sqltiming Line:373 - select bookchecke0_.item_id as item_id1_2_, bookchecke0_.fsid as fsid2_2_, bookchecke0_.got 
as got3_2_, bookchecke0_.name as name4_2_ from book_check bookchecke0_ where bookchecke0_.fsid='806919862409703' 
and bookchecke0_.name='media' 
 {executed in 0 msec}
2020-11-19 17:56:13.278 INFO  jdbc.resultsettable Line:610 - 
|--------|-----|----|-----|
|item_id |fsid |got |name |
|--------|-----|----|-----|
|--------|-----|----|-----|

2020-11-19 17:56:13.279 INFO  jdbc.sqltiming Line:373 - insert into book_check (fsid, got, name) values ('806919862409703', 1, 'media') 
 {executed in 0 msec}
2020-11-19 17:56:13.280 INFO  jdbc.sqltiming Line:373 - getGeneratedKeys on query: insert into book_check (fsid, got, name) values ('806919862409703', 
1, 'media') 
 {executed in 0 msec}
2020-11-19 17:56:13.281 INFO  jdbc.resultsettable Line:610 - 
|--------------|
|generated_key |
|--------------|
|64            |
|--------------|

2020-11-19 17:56:13.300 INFO  jdbc.sqltiming Line:373 - select bookfieldf0_.entity_id as entity_i1_7_, bookfieldf0_.bundle as bundle2_7_, bookfieldf0_.delta 
as delta3_7_, bookfieldf0_.field_fsid_value as field_fs4_7_, bookfieldf0_.langcode as langcode5_7_, 
bookfieldf0_.revision_id as revision6_7_ from node__field_fsid bookfieldf0_ where bookfieldf0_.field_fsid_value='806919862409703' 
 {executed in 1 msec}
2020-11-19 17:56:13.300 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------|---------|------------|
|entity_id |bundle |delta |field_fsid_value |langcode |revision_id |
|----------|-------|------|-----------------|---------|------------|
|38        |book   |0     |806919862409703  |zh-hans  |38          |
|----------|-------|------|-----------------|---------|------------|

2020-11-19 17:56:13.301 INFO  jdbc.sqltiming Line:373 - select nodeentity0_.nid as nid1_3_, nodeentity0_.langcode as langcode2_3_, nodeentity0_.type 
as type3_3_, nodeentity0_.uuid as uuid4_3_, nodeentity0_.vid as vid5_3_ from node nodeentity0_ 
where nodeentity0_.nid=38 
 {executed in 0 msec}
2020-11-19 17:56:13.301 INFO  jdbc.resultsettable Line:610 - 
|----|---------|-----|-------------------------------------|----|
|nid |langcode |type |uuid                                 |vid |
|----|---------|-----|-------------------------------------|----|
|38  |zh-hans  |book |4e5bf0e5-20e8-4d8e-b152-4146d62b8fb1 |38  |
|----|---------|-----|-------------------------------------|----|

2020-11-19 17:56:13.307 INFO  jdbc.sqltiming Line:373 - select nodefieldf0_.entity_id as entity_i1_16_0_, nodefieldf0_.bundle as bundle2_16_0_, nodefieldf0_.delta 
as delta3_16_0_, nodefieldf0_.field_fsid_value as field_fs4_16_0_, nodefieldf0_.langcode as 
langcode5_16_0_, nodefieldf0_.revision_id as revision6_16_0_ from node_revision__field_fsid 
nodefieldf0_ where nodefieldf0_.entity_id=38 
 {executed in 1 msec}
2020-11-19 17:56:13.307 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------|---------|------------|
|entity_id |bundle |delta |field_fsid_value |langcode |revision_id |
|----------|-------|------|-----------------|---------|------------|
|[unread]  |book   |0     |806919862409703  |zh-hans  |38          |
|----------|-------|------|-----------------|---------|------------|

2020-11-19 17:56:13.313 INFO  jdbc.sqltiming Line:373 - select bookentity0_.nid as nid1_1_, bookentity0_.bid as bid2_1_, bookentity0_.depth as depth3_1_, 
bookentity0_.has_children as has_chil4_1_, bookentity0_.p1 as p5_1_, bookentity0_.p2 as p6_1_, 
bookentity0_.p3 as p7_1_, bookentity0_.p4 as p8_1_, bookentity0_.p5 as p9_1_, bookentity0_.pid 
as pid10_1_, bookentity0_.weight as weight11_1_ from book bookentity0_ where bookentity0_.nid=38 
 {executed in 0 msec}
2020-11-19 17:56:13.314 INFO  jdbc.resultsettable Line:610 - 
|----|----|------|-------------|---|---|---|---|---|----|-------|
|nid |bid |depth |has_children |p1 |p2 |p3 |p4 |p5 |pid |weight |
|----|----|------|-------------|---|---|---|---|---|----|-------|
|38  |1   |3     |0            |1  |35 |38 |0  |0  |35  |0      |
|----|----|------|-------------|---|---|---|---|---|----|-------|

2020-11-19 17:56:13.320 INFO  jdbc.sqltiming Line:373 - select nodebodyen0_.entity_id as entity_i1_4_, nodebodyen0_.body_value as body_val2_4_, nodebodyen0_.body_summary 
as body_sum3_4_, nodebodyen0_.bundle as bundle4_4_, nodebodyen0_.delta as delta5_4_, nodebodyen0_.body_format 
as body_for6_4_, nodebodyen0_.langcode as langcode7_4_, nodebodyen0_.revision_id as revision8_4_ 
from node__body nodebodyen0_ where nodebodyen0_.entity_id=38 
 {executed in 1 msec}
2020-11-19 17:56:13.328 INFO  jdbc.resultsettable Line:610 - 
|----------||-------------|-------|------|------------|---------|------------|
|entity_id |body_value|body_summary |bundle |delta |body_format |langcode |revision_id |
|----------||-------------|-------|------|------------|---------|------------|
|38        |<p>你好，我是四火。</p>
<p>今天我们要接触一个和 MVC 密切相关的，能带来思维模式改变的编程范型——面向切面编程（AOP，Aspect Oriented Programming）。</p>
<h2>“给我一把锤子，满世界都是钉子”</h2>
<p>我记得曾经有这样一个相当流行的观点，是说，编程语言只需要学习一门就够了，学那么多也没有用，因为技术是一通百通的，别的编程语言可以说是大同小异。我相信至今抱有这种观点的程序员也不在少数。</p>
<p>可惜，事实远没有那么美好。这个观点主要有两处值得商榷：</p>
<ul> 
 <li>其一，不同的技术，在一定程度上确实是相通的，可是，技术之间的关联性，远不是“一通百通”这四个简简单单的字能够解释的。妄想仅仅凭借精通一门编程语言，就能够自动打通其它所有编程语言的任督二脉，这是不现实的。</li> 
 <li>其二，通常来说，说编程语言大同小异其实是很不客观的。编程语言经过了长时间的发展演化，如今已经发展出非常多的类型，用作编程语言分类标准之一的编程范型也可谓是百花齐放。</li> 
</ul>
<p>因此我们要学习多种编程语言，特别是那些能带来新的思维模式的编程语言。现在，把这个观点泛化到普遍的软件技术上，也一样适用。我们都知道要“一切从实际出发”，都知道要“具体问题具体分析”，可是，<strong>在眼界还不够开阔的时候，特别是职业生涯的早期，程序员在武器库里的武器还非常有限的时候，依然无法避免“给我一把锤子，满世界都是钉子”，在技术选择的时候眼光相对局限。</strong></p><!-- [[[read_end]]] -->
<p>所以我们要学习全栈技术，尤其是要学习这些不一样，但一定层面上和已掌握知识相通的典型技术。今天我们要学习的这项在 MVC 框架中广泛使用的技术，是和面向对象编程一类层面的编程范型，叫做面向切面编程。</p>
<p>互联网有许多功能，如果使用传统的基于单个请求处理流程的方式来编码，代码就会非常繁琐，而使用 AOP 的方式，代码可以得到很大程度上的简化。希望通过今天的学习，你的武器库里，能够多一把重型机枪。</p>
<h2>AOP 的概念</h2>
<p><strong>面向切面编程是一种通过横切关注点（Cross-cutting Concerns）分离来增强代码模块性的方法，它能够在不修改业务主体代码的情况下，对它添加额外的行为。</strong></p>
<p>不好理解吗？没关系，我们来对它做进一步的说明。</p>
<p>首先需要明确的是，AOP 的目标是增强代码模块性，也就是说，本质上它是一种“解耦”的方法，在这方面它和我们之前介绍的分层等方法是类似的，可是，它分离代码的角度与我们传统、自然的模块设计思路截然不同。</p>
<p>我们来看下面这样一个例子，对于图书馆系统来说，有许多业务流程，其中借书和还书是最典型的两条。对于这些业务流程来说，从图书系统接收到请求开始，需要完成若干个步骤，但这些步骤都有一些“共性”，比如鉴权，比如事务控制：</p>
<p><img src="https://static001.geekbang.org/resource/image/f1/2c/f17118dd2cb4f0132c76fd152a3c062c.png" alt=""></p>
<p>那么，如果我们按照自然的思考方式，我们会把代码按照流程分解成一个一个的步骤，在每个步骤完成的前后添加这些“共性”逻辑。可是这样，这些逻辑就会散落在代码各处了，即便我们把它们按照重复代码抽取的原则，抽出来放到单独的方法中，这样的方法的“调用”还是散落在各处，无论是对软件工程上的可维护性，还是代码阅读时对于业务流程的专注度，都是不利的。</p>
<p>藉由 AOP 则可以有效地解决这些问题，对于图中横向的业务流程，我们能够保持它们独立不变，而把鉴权、事务这样的公共功能，彻底拿出去，放到单独的地方，这样整个业务流程就变得纯粹和干净，没有任何代码残留的痕迹，就好像武林高手彻底隐形了一般，但是，功能却没有任何丢失。就好比面条一般顺下来的业务流程，水平地切了几刀，每一刀，都是一个 AOP 的功能实现。</p>
<p>我们可能在 Java 的世界中谈论 AOP 比较多，但请注意，它并不是 Java 范畴的概念，它不依赖于任何框架，也和编程语言本身无关。</p>
<h2>Spring 中的应用</h2>
<p><a href="https://spring.io/">Spring</a> 作为一个应用程序框架，提供了对于 AOP 功能上完整的支持，下面让我们通过例子来学习。还记得我们在 <a href="https://time.geekbang.org/column/article/141679">[第 08 讲]</a> 中举例介绍的将图书借出的方法吗？</p>
<pre style="position: relative;"><code>
  <table class="hljs-ln">
   <tbody>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
       public class BookService {
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
        public Book lendOut(String bookId, String userId, Date date) { ... (0) }
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
       }
      </div></td>
    </tr>
   </tbody>
  </table></code>
 <div class="richcontent-pre-copy">
  <span class="iconfont"></span>复制代码
 </div></pre>
<p>现在，我们要给很多的业务方法以 AOP 的方式添加功能，而 lendOut 就是其中之一。定义一个 TransactionAspect 类：</p>
<pre style="position: relative;"><code>
  <table class="hljs-ln">
   <tbody>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
       public class TransactionAspect {
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
        public void doBefore(JoinPoint jp) { ... (1) }
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
        public void doAfter(JoinPoint jp) { ... (2) }
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
        public void doThrowing(JoinPoint jp, Throwable ex) { ... (3) }
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
        public void doAround(ProceedingJoinPoint pjp) throws Throwable {
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
        ... (4)
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="7"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
        pjp.proceed();
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="8"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
        ... (5)
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="9"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
        }
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="10"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
       }
      </div></td>
    </tr>
   </tbody>
  </table></code>
 <div class="richcontent-pre-copy">
  <span class="iconfont"></span>复制代码
 </div></pre>
<p>你看，我给每一处可以实现的代码都用数字做了标记。我们希望在 doBefore 方法中添加事务开始逻辑，doAfter 方法中添加事务结束的提交逻辑，doThrowing 方法中添加事务失败的回滚逻辑，而在 doAround 方法中业务执行前后添加日志打印逻辑，其中的 pjp.proceed() 方法表示对原方法的调用。</p>
<p>接着，我们需要写一些 XML 配置，目的就是把原方法和 AOP 的切面功能连接起来。配置片段如下：</p>
<pre style="position: relative;"><code>
  <table class="hljs-ln">
   <tbody>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
       &lt;bean id="bookService" class="xxx.BookService"&gt;&lt;/bean&gt;
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
       &lt;bean id="transactionAspect" class="xxx.TransactionAspect"&gt;&lt;/bean&gt;
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line"> 
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
       &lt;aop:config&gt;
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
        &lt;aop:pointcut expression="execution(* xxx.BookService.*(..))" id="transactionPointcut"/&gt;
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
        &lt;aop:aspect ref="transactionAspect"&gt;
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="7"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
        &lt;aop:before method="doBefore" pointcut-ref="transactionPointcut"/&gt;
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="8"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
        &lt;aop:after-returning method="doAfter" pointcut-ref="transactionPointcut"/&gt;
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="9"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
        &lt;aop:after-throwing method="doThrowing" pointcut-ref="transactionPointcut" throwing="ex"/&gt;
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="10"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
        &lt;aop:around method="doAround" pointcut-ref="transactionPointcut"/&gt;
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="11"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
        &lt;/aop:aspect&gt;
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="12"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
       &lt;/aop:config&gt;
      </div></td>
    </tr>
   </tbody>
  </table></code>
 <div class="richcontent-pre-copy">
  <span class="iconfont"></span>复制代码
 </div></pre>
<p>在这段配置中，前两行分别是对 BookService 和 TransactionAspect 这两个 Bean 的声明，接下来在 aop:config 中，我们定义了 pointcut 的切面匹配表达式，表示要捕获 BookService 的所有方法，并在 aop:aspect 标签内定义了我们希望实施的 AOP 功能。</p>
<p>在实际执行的过程中，如果没有异常抛出，上述这些逻辑的执行顺序将是：</p>
<pre style="position: relative;"><code>
  <table class="hljs-ln">
   <tbody>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
       (1) → (4) → (0) → (5) → (2)
      </div></td>
    </tr>
   </tbody>
  </table></code>
 <div class="richcontent-pre-copy">
  <span class="iconfont"></span>复制代码
 </div></pre>
<h2>实现原理</h2>
<p>讲了 AOP 怎样配置，怎么表现，现在我要来讲讲它的实现原理了。通过这部分内容，希望你可以搞清楚，为什么不需要对代码做任何改动，就可以在业务逻辑的流水中切一刀，插入我们想要执行的其它逻辑呢？</p>
<p>对于常见的实现，我们根据其作用的不同时间阶段进行分类，有这样两种：</p>
<p><strong>编译期间的静态织入，又称为编译时增强。</strong>织入（Weaving），指的是将切面代码和源业务代码链接起来的过程。<a href="https://www.eclipse.org/aspectj/">AspectJ</a> 就是这样一个面向切面的 Java 语言扩展，称呼其为语言的“扩展”，就是因为它扩展了 Java 语言的语法，需要特定的编译器来把 AspectJ 的代码编译成 JVM 可识别的 class 文件。</p>
<p><strong>运行期间的动态代理，又称为运行时增强。</strong>这种方式是在程序运行时，依靠预先创建或运行时创建的代理类来完成切面功能的。比如 JDK 基于接口的动态代理技术，或 <a href="https://github.com/cglib/cglib/wiki">CGLib</a> 基于类的代理对象生成技术就属于这一种。</p>
<p>Spring AOP 默认支持的是后者——运行期间的动态代理。至于具体实现，通常来说，我们应该优先考虑使用 JDK 的动态代理技术；但是如果目标类没有实现接口，我们只能退而求其次，使用 CGLib。</p>
<p>动态代理的方式由于在运行时完成代理类或代理对象的创建，需要用到 Java 的拦截、反射和字节码生成等技术，因此运行时的性能表现往往没有静态织入好，功能也有较多限制，但是由于使用起来简便（不需要语言扩展，不需要特殊的编译器等），它的实际应用更为广泛。</p>
<h2>控制反转 IoC</h2>
<p>通过 AOP 我们知道，某些问题如果我们换个角度来解决，会很大程度地简化代码。现在，让我们来了解在 Spring 中另一个经常和面向切面编程一起出现的概念——控制反转。控制反转是一种设计思想，也是通过“换个角度”来解决问题的。</p>
<p>控制反转，IoC，即 Inversion of Control，言下之意，指的是把原有的控制方向掉转过来了。在我们常规的程序流程中，对象是由主程序流程创建的，例如，在业务流程中使用 new 关键字来创建依赖对象。</p>
<p>但是，当我们使用 Spring 框架的时候，<strong>Spring 把对象创建的工作接管过来，它作为对象容器，来负责对象的查找、匹配、创建、装配，依赖管理，等等。而主程序流程，则不用关心对象是怎么来的，只需要使用对象就可以了。</strong>我们还是拿 BookService 举例子：</p>
<pre style="position: relative;"><code>
  <table class="hljs-ln">
   <tbody>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
       public class BookService {
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
        @Autowired
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
        private BookDao bookDao;
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
        @Autowired
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
        private LoanDao loanDao;
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
        public Book lendOut(String bookId, String userId, Date date) {
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="7"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
        bookDao.update( ... );
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="8"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
        loanDao.insert( ... );
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="9"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
        }
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="10"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
       }
      </div></td>
    </tr>
   </tbody>
  </table></code>
 <div class="richcontent-pre-copy">
  <span class="iconfont"></span>复制代码
 </div></pre>
<p>比如 BookService 的借出方法，假如它的实现中，我们希望：</p>
<ul> 
 <li>调用数据访问对象 bookDao 的方法来更新被借书的状态；</li> 
 <li>调用借阅行为的访问对象 loanDao 来增加一条借阅记录。</li> 
</ul>
<p>在这种情况下，我们可以通过 @Autowired 注解，让容器将实际的数据访问对象注入进来，主程序流程不用关心“下一层”的数据访问对象到底是怎么创建的，怎么初始化的，甚至是怎么注入进来的，而是直接用就可以了，因为这些对象都已经被 Spring 管理起来了。</p>
<p>如果这些注入的对象之间还存在依赖关系，初始化它们的顺序就至关重要了，可是在这种情况下，Service 层依然不用关心，因为 Spring 已经根据代码或配置中声明的依赖关系自动确定了。总之，Service 层的业务代码，只管调用其下的数据访问层的方法就好了。</p>
<p>读到这里，你可能会回想起前文 AOP 的内容，和 IoC 似乎有一个共同的特点：都是<strong>为了尽可能保证主流程的纯粹和简洁</strong>，而将这些不影响主流程的逻辑拿出去，只不过这两种技术，“拿出去”的是不同的逻辑。值得注意的是，对象之间的依赖关系，各层之间的依赖关系，并没有因为 IoC 而发生任何的改变。</p>
<p><strong>IoC 在实现上包含两种方式，一种叫做依赖查找（DL，Dependency Lookup），另一种叫做依赖注入（DI，Dependency Injection）。</strong>二者缺一不可，Spring 容器做到了两者，就如同上面的例子，容器需要先查找到 bookDao 和 loanDao 所对应的对象，再把它们注入进来。当然，我们平时听到的更多是第二种。</p>
<p>有了一个大致的感受，那么 IoC 到底能带来什么好处呢？我觉得主要有这样两个方面：</p>
<ul> 
 <li><strong>资源统一配置管理。</strong>这个方面很好，但并不是 IoC 最大的优势，因为，如果你不把资源交给容器管理，而是自己建立一个资源管理类来管理某项资源，一样可以得到“统一管理”的所有优势。</li> 
 <li><strong>业务代码不再包含依赖资源的访问逻辑，因此资源访问和业务流程的代码解耦开了。</strong>我觉得这里的“解耦”才是 IoC 最核心的优势，它让各层之间的依赖关系变得松散。就如同上面的代码例子一样，如果哪一天我想把它依赖的 bookDao 和 loanDao 替换掉（比如，我想为 Service 层做测试），Service 一行代码都不用改，它压根都不需要知道。</li> 
</ul>
<h2>总结思考</h2>
<p>今天我们一起学习了面向切面编程，从学习概念，熟悉配置，到了解实现原理，希望你对于 AOP 已经有了一个清晰的认识，在未来设计和开发系统的时候，无论技术怎样演进，框架怎么变化，始终知道什么时候需要它，并能够把它从你的武器库中拿出来使用。</p>
<p>现在我来提两个问题，我们一起讨论吧：</p>
<ul> 
 <li>你过去的项目中有没有应用 AOP 的例子，能说说吗？</li> 
 <li>我介绍了 AOP 的优点，但却没有提到它的缺点，但其实任何技术都是有两面性的，你觉得 AOP 的缺点都有哪些呢？</li> 
</ul>
<h2>选修课堂：实践 AOP 的运行时动态代理</h2>
<p>我们学习了 AOP 的实现原理，知道其中一种办法是通过 JDK 的动态代理技术来实现的。现在，我们就来写一点代码，用它实现一个小例子。</p>
<p>首先，请你准备好一个项目文件夹，我们会在其中创建一系列文件。你可以使用 Eclipse 来管理项目，也可以自己建立一个独立的文件夹，这都没有关系。</p>
<p>现在建立 BookService.java，这次我们把 BookService 定义为一个接口，包含 lendOut 方法，同时也创建它的实现 BookServiceImpl：</p>
<pre style="position: relative;"><code>
  <table class="hljs-ln">
   <tbody>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
       import java.text.MessageFormat;
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
       import java.util.Date;
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line"> 
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
       interface BookService {
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
        void lendOut(String bookId, String userId, Date date);
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
       }
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="7"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line"> 
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="8"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
       class BookServiceImpl implements BookService {
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="9"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
        @Override
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="10"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
        public void lendOut(String bookId, String userId, Date date) {
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="11"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
        System.out.println(MessageFormat.format("{0}: The book {1} is lent to {2}.", date, bookId, userId));
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="12"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
        }
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="13"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
       }
      </div></td>
    </tr>
   </tbody>
  </table></code>
 <div class="richcontent-pre-copy">
  <span class="iconfont"></span>复制代码
 </div></pre>
<p>然后，我们建立一个 ServiceInvocationHandler.java，在这里我们可以定义代理对象在对原对象的方法调用前后，添加的额外逻辑：</p>
<pre style="position: relative;"><code>
  <table class="hljs-ln">
   <tbody>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
       import java.lang.reflect.InvocationHandler;
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
       import java.lang.reflect.Method;
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line"> 
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
       class ServiceInvocationHandler implements InvocationHandler {
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
        private Object target;
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line"> 
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="7"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
        public ServiceInvocationHandler(Object target) {
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="8"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
        this.target = target;
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="9"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
        }
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="10"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line"> 
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="11"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
        @Override
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="12"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
        public Object invoke(Object proxy, Method method, Object[] args) throws Throwable {
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="13"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
        System.out.println("Before...");
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="14"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
        Object result = method.invoke(this.target, args);
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="15"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
        System.out.println("After...");
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="16"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
        return result;
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="17"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
        }
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="18"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
       }
      </div></td>
    </tr>
   </tbody>
  </table></code>
 <div class="richcontent-pre-copy">
  <span class="iconfont"></span>复制代码
 </div></pre>
<p>接着，我们建立一个 Client.java 类，作为程序的起点，通过动态代理的方式来调用源代码中的 lendOut 方法：</p>
<pre style="position: relative;"><code>
  <table class="hljs-ln">
   <tbody>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
       import java.lang.reflect.Proxy;
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
       import java.util.Date;
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line"> 
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
       public class Client {
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
        public static void main(String[] args) throws Exception {
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
        BookService bookService = (BookService) Proxy.newProxyInstance(
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="7"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
        BookService.class.getClassLoader(),
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="8"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
        new Class[]{ BookService.class },
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="9"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
        new ServiceInvocationHandler(new BookServiceImpl())
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="10"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
        );
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="11"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
        bookService.lendOut("123", "456", new Date());
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="12"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
        }
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="13"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
       }
      </div></td>
    </tr>
   </tbody>
  </table></code>
 <div class="richcontent-pre-copy">
  <span class="iconfont"></span>复制代码
 </div></pre>
<p>你看，我们创建了一个动态代理对象，并赋给 bookService，这个代理对象实际是会调用 BookServiceImpl 的，但调用的前后打印了额外的日志。并且，这个代理对象也实现自 BookService 接口，因此，对于 BookService 的使用者来说，它实际并不知道调用到的是 BookServiceImpl 还是它的代理对象。请看图示：</p>
<p><img src="https://static001.geekbang.org/resource/image/c3/9e/c39ca70be876a106e90e73d6946d849e.png" alt=""></p>
<p>好，现在我们把这些代码编译一下：</p>
<pre style="position: relative;"><code>
  <table class="hljs-ln">
   <tbody>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
       javac BookService.java ServiceInvocationHandler.java Client.java
      </div></td>
    </tr>
   </tbody>
  </table></code>
 <div class="richcontent-pre-copy">
  <span class="iconfont"></span>复制代码
 </div></pre>
<p>你应该能看到它们的 class 文件分别生成了。</p>
<p>最后，执行 Client 的 main 方法，就能看到相应的执行结果，它显示 lendBook 方法前后的 AOP 的逻辑被实际执行了：</p>
<pre style="position: relative;"><code>
  <table class="hljs-ln">
   <tbody>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
       java Client
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
       Before...
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
       8/10/19 11:42 AM: The book 123 is lent to 456.
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
       After...
      </div></td>
    </tr>
   </tbody>
  </table></code>
 <div class="richcontent-pre-copy">
  <span class="iconfont"></span>复制代码
 </div></pre>
<h2>扩展阅读</h2>
<ul> 
 <li>Spring 官方文档中<a href="https://docs.spring.io/spring/docs/current/spring-framework-reference/core.html#aop">关于 AOP 的教程</a>，如果你希望看到中文版，那么互联网上有不少对于这部分的翻译，只不过对应的 Spring 版本不同，内容大致是一样的，比如<a href="https://blog.csdn.net/wengcheng_k/article/details/79952358">这一篇</a>。</li> 
 <li><a href="https://www.baeldung.com/spring-aop-vs-aspectj">Comparing Spring AOP and AspectJ</a>，这是一篇关于静态织入和动态代理这两种 AOP 方式比较的文章。</li> 
 <li>对于 AspectJ，如果想一瞥其扩展的语法语义，维基百科的<a href="https://en.wikipedia.org/wiki/AspectJ">词条</a>就足矣；如果想了解某些细节，请参阅<a href="https://www.eclipse.org/aspectj/doc/released/adk15notebook/index.html">官方文档</a>。</li> 
</ul>
<p><img src="https://static001.geekbang.org/resource/image/11/8b/1181246bbd51ce348d5729696d1dc28b.jpg" alt="unpreview"></p> |             |book   |0     |full_html   |zh-hans  |38          |
|----------||-------------|-------|------|------------|---------|------------|

2020-11-19 17:56:13.338 INFO  jdbc.sqltiming Line:373 - select nodebodyre0_.entity_id as entity_i1_13_0_, nodebodyre0_.body_value as body_val2_13_0_, 
nodebodyre0_.body_summary as body_sum3_13_0_, nodebodyre0_.bundle as bundle4_13_0_, nodebodyre0_.delta 
as delta5_13_0_, nodebodyre0_.body_format as body_for6_13_0_, nodebodyre0_.langcode as langcode7_13_0_, 
nodebodyre0_.revision_id as revision8_13_0_ from node_revision__body nodebodyre0_ where nodebodyre0_.entity_id=38 
 {executed in 1 msec}
2020-11-19 17:56:13.346 INFO  jdbc.resultsettable Line:610 - 
|----------||-------------|-------|------|------------|---------|------------|
|entity_id |body_value|body_summary |bundle |delta |body_format |langcode |revision_id |
|----------||-------------|-------|------|------------|---------|------------|
|[unread]  |<p>你好，我是四火。</p>
<p>今天我们要接触一个和 MVC 密切相关的，能带来思维模式改变的编程范型——面向切面编程（AOP，Aspect Oriented Programming）。</p>
<h2>“给我一把锤子，满世界都是钉子”</h2>
<p>我记得曾经有这样一个相当流行的观点，是说，编程语言只需要学习一门就够了，学那么多也没有用，因为技术是一通百通的，别的编程语言可以说是大同小异。我相信至今抱有这种观点的程序员也不在少数。</p>
<p>可惜，事实远没有那么美好。这个观点主要有两处值得商榷：</p>
<ul> 
 <li>其一，不同的技术，在一定程度上确实是相通的，可是，技术之间的关联性，远不是“一通百通”这四个简简单单的字能够解释的。妄想仅仅凭借精通一门编程语言，就能够自动打通其它所有编程语言的任督二脉，这是不现实的。</li> 
 <li>其二，通常来说，说编程语言大同小异其实是很不客观的。编程语言经过了长时间的发展演化，如今已经发展出非常多的类型，用作编程语言分类标准之一的编程范型也可谓是百花齐放。</li> 
</ul>
<p>因此我们要学习多种编程语言，特别是那些能带来新的思维模式的编程语言。现在，把这个观点泛化到普遍的软件技术上，也一样适用。我们都知道要“一切从实际出发”，都知道要“具体问题具体分析”，可是，<strong>在眼界还不够开阔的时候，特别是职业生涯的早期，程序员在武器库里的武器还非常有限的时候，依然无法避免“给我一把锤子，满世界都是钉子”，在技术选择的时候眼光相对局限。</strong></p><!-- [[[read_end]]] -->
<p>所以我们要学习全栈技术，尤其是要学习这些不一样，但一定层面上和已掌握知识相通的典型技术。今天我们要学习的这项在 MVC 框架中广泛使用的技术，是和面向对象编程一类层面的编程范型，叫做面向切面编程。</p>
<p>互联网有许多功能，如果使用传统的基于单个请求处理流程的方式来编码，代码就会非常繁琐，而使用 AOP 的方式，代码可以得到很大程度上的简化。希望通过今天的学习，你的武器库里，能够多一把重型机枪。</p>
<h2>AOP 的概念</h2>
<p><strong>面向切面编程是一种通过横切关注点（Cross-cutting Concerns）分离来增强代码模块性的方法，它能够在不修改业务主体代码的情况下，对它添加额外的行为。</strong></p>
<p>不好理解吗？没关系，我们来对它做进一步的说明。</p>
<p>首先需要明确的是，AOP 的目标是增强代码模块性，也就是说，本质上它是一种“解耦”的方法，在这方面它和我们之前介绍的分层等方法是类似的，可是，它分离代码的角度与我们传统、自然的模块设计思路截然不同。</p>
<p>我们来看下面这样一个例子，对于图书馆系统来说，有许多业务流程，其中借书和还书是最典型的两条。对于这些业务流程来说，从图书系统接收到请求开始，需要完成若干个步骤，但这些步骤都有一些“共性”，比如鉴权，比如事务控制：</p>
<p><img src="https://static001.geekbang.org/resource/image/f1/2c/f17118dd2cb4f0132c76fd152a3c062c.png" alt=""></p>
<p>那么，如果我们按照自然的思考方式，我们会把代码按照流程分解成一个一个的步骤，在每个步骤完成的前后添加这些“共性”逻辑。可是这样，这些逻辑就会散落在代码各处了，即便我们把它们按照重复代码抽取的原则，抽出来放到单独的方法中，这样的方法的“调用”还是散落在各处，无论是对软件工程上的可维护性，还是代码阅读时对于业务流程的专注度，都是不利的。</p>
<p>藉由 AOP 则可以有效地解决这些问题，对于图中横向的业务流程，我们能够保持它们独立不变，而把鉴权、事务这样的公共功能，彻底拿出去，放到单独的地方，这样整个业务流程就变得纯粹和干净，没有任何代码残留的痕迹，就好像武林高手彻底隐形了一般，但是，功能却没有任何丢失。就好比面条一般顺下来的业务流程，水平地切了几刀，每一刀，都是一个 AOP 的功能实现。</p>
<p>我们可能在 Java 的世界中谈论 AOP 比较多，但请注意，它并不是 Java 范畴的概念，它不依赖于任何框架，也和编程语言本身无关。</p>
<h2>Spring 中的应用</h2>
<p><a href="https://spring.io/">Spring</a> 作为一个应用程序框架，提供了对于 AOP 功能上完整的支持，下面让我们通过例子来学习。还记得我们在 <a href="https://time.geekbang.org/column/article/141679">[第 08 讲]</a> 中举例介绍的将图书借出的方法吗？</p>
<pre style="position: relative;"><code>
  <table class="hljs-ln">
   <tbody>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
       public class BookService {
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
        public Book lendOut(String bookId, String userId, Date date) { ... (0) }
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
       }
      </div></td>
    </tr>
   </tbody>
  </table></code>
 <div class="richcontent-pre-copy">
  <span class="iconfont"></span>复制代码
 </div></pre>
<p>现在，我们要给很多的业务方法以 AOP 的方式添加功能，而 lendOut 就是其中之一。定义一个 TransactionAspect 类：</p>
<pre style="position: relative;"><code>
  <table class="hljs-ln">
   <tbody>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
       public class TransactionAspect {
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
        public void doBefore(JoinPoint jp) { ... (1) }
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
        public void doAfter(JoinPoint jp) { ... (2) }
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
        public void doThrowing(JoinPoint jp, Throwable ex) { ... (3) }
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
        public void doAround(ProceedingJoinPoint pjp) throws Throwable {
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
        ... (4)
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="7"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
        pjp.proceed();
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="8"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
        ... (5)
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="9"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
        }
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="10"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
       }
      </div></td>
    </tr>
   </tbody>
  </table></code>
 <div class="richcontent-pre-copy">
  <span class="iconfont"></span>复制代码
 </div></pre>
<p>你看，我给每一处可以实现的代码都用数字做了标记。我们希望在 doBefore 方法中添加事务开始逻辑，doAfter 方法中添加事务结束的提交逻辑，doThrowing 方法中添加事务失败的回滚逻辑，而在 doAround 方法中业务执行前后添加日志打印逻辑，其中的 pjp.proceed() 方法表示对原方法的调用。</p>
<p>接着，我们需要写一些 XML 配置，目的就是把原方法和 AOP 的切面功能连接起来。配置片段如下：</p>
<pre style="position: relative;"><code>
  <table class="hljs-ln">
   <tbody>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
       &lt;bean id="bookService" class="xxx.BookService"&gt;&lt;/bean&gt;
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
       &lt;bean id="transactionAspect" class="xxx.TransactionAspect"&gt;&lt;/bean&gt;
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line"> 
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
       &lt;aop:config&gt;
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
        &lt;aop:pointcut expression="execution(* xxx.BookService.*(..))" id="transactionPointcut"/&gt;
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
        &lt;aop:aspect ref="transactionAspect"&gt;
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="7"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
        &lt;aop:before method="doBefore" pointcut-ref="transactionPointcut"/&gt;
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="8"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
        &lt;aop:after-returning method="doAfter" pointcut-ref="transactionPointcut"/&gt;
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="9"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
        &lt;aop:after-throwing method="doThrowing" pointcut-ref="transactionPointcut" throwing="ex"/&gt;
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="10"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
        &lt;aop:around method="doAround" pointcut-ref="transactionPointcut"/&gt;
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="11"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
        &lt;/aop:aspect&gt;
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="12"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
       &lt;/aop:config&gt;
      </div></td>
    </tr>
   </tbody>
  </table></code>
 <div class="richcontent-pre-copy">
  <span class="iconfont"></span>复制代码
 </div></pre>
<p>在这段配置中，前两行分别是对 BookService 和 TransactionAspect 这两个 Bean 的声明，接下来在 aop:config 中，我们定义了 pointcut 的切面匹配表达式，表示要捕获 BookService 的所有方法，并在 aop:aspect 标签内定义了我们希望实施的 AOP 功能。</p>
<p>在实际执行的过程中，如果没有异常抛出，上述这些逻辑的执行顺序将是：</p>
<pre style="position: relative;"><code>
  <table class="hljs-ln">
   <tbody>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
       (1) → (4) → (0) → (5) → (2)
      </div></td>
    </tr>
   </tbody>
  </table></code>
 <div class="richcontent-pre-copy">
  <span class="iconfont"></span>复制代码
 </div></pre>
<h2>实现原理</h2>
<p>讲了 AOP 怎样配置，怎么表现，现在我要来讲讲它的实现原理了。通过这部分内容，希望你可以搞清楚，为什么不需要对代码做任何改动，就可以在业务逻辑的流水中切一刀，插入我们想要执行的其它逻辑呢？</p>
<p>对于常见的实现，我们根据其作用的不同时间阶段进行分类，有这样两种：</p>
<p><strong>编译期间的静态织入，又称为编译时增强。</strong>织入（Weaving），指的是将切面代码和源业务代码链接起来的过程。<a href="https://www.eclipse.org/aspectj/">AspectJ</a> 就是这样一个面向切面的 Java 语言扩展，称呼其为语言的“扩展”，就是因为它扩展了 Java 语言的语法，需要特定的编译器来把 AspectJ 的代码编译成 JVM 可识别的 class 文件。</p>
<p><strong>运行期间的动态代理，又称为运行时增强。</strong>这种方式是在程序运行时，依靠预先创建或运行时创建的代理类来完成切面功能的。比如 JDK 基于接口的动态代理技术，或 <a href="https://github.com/cglib/cglib/wiki">CGLib</a> 基于类的代理对象生成技术就属于这一种。</p>
<p>Spring AOP 默认支持的是后者——运行期间的动态代理。至于具体实现，通常来说，我们应该优先考虑使用 JDK 的动态代理技术；但是如果目标类没有实现接口，我们只能退而求其次，使用 CGLib。</p>
<p>动态代理的方式由于在运行时完成代理类或代理对象的创建，需要用到 Java 的拦截、反射和字节码生成等技术，因此运行时的性能表现往往没有静态织入好，功能也有较多限制，但是由于使用起来简便（不需要语言扩展，不需要特殊的编译器等），它的实际应用更为广泛。</p>
<h2>控制反转 IoC</h2>
<p>通过 AOP 我们知道，某些问题如果我们换个角度来解决，会很大程度地简化代码。现在，让我们来了解在 Spring 中另一个经常和面向切面编程一起出现的概念——控制反转。控制反转是一种设计思想，也是通过“换个角度”来解决问题的。</p>
<p>控制反转，IoC，即 Inversion of Control，言下之意，指的是把原有的控制方向掉转过来了。在我们常规的程序流程中，对象是由主程序流程创建的，例如，在业务流程中使用 new 关键字来创建依赖对象。</p>
<p>但是，当我们使用 Spring 框架的时候，<strong>Spring 把对象创建的工作接管过来，它作为对象容器，来负责对象的查找、匹配、创建、装配，依赖管理，等等。而主程序流程，则不用关心对象是怎么来的，只需要使用对象就可以了。</strong>我们还是拿 BookService 举例子：</p>
<pre style="position: relative;"><code>
  <table class="hljs-ln">
   <tbody>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
       public class BookService {
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
        @Autowired
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
        private BookDao bookDao;
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
        @Autowired
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
        private LoanDao loanDao;
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
        public Book lendOut(String bookId, String userId, Date date) {
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="7"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
        bookDao.update( ... );
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="8"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
        loanDao.insert( ... );
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="9"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
        }
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="10"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
       }
      </div></td>
    </tr>
   </tbody>
  </table></code>
 <div class="richcontent-pre-copy">
  <span class="iconfont"></span>复制代码
 </div></pre>
<p>比如 BookService 的借出方法，假如它的实现中，我们希望：</p>
<ul> 
 <li>调用数据访问对象 bookDao 的方法来更新被借书的状态；</li> 
 <li>调用借阅行为的访问对象 loanDao 来增加一条借阅记录。</li> 
</ul>
<p>在这种情况下，我们可以通过 @Autowired 注解，让容器将实际的数据访问对象注入进来，主程序流程不用关心“下一层”的数据访问对象到底是怎么创建的，怎么初始化的，甚至是怎么注入进来的，而是直接用就可以了，因为这些对象都已经被 Spring 管理起来了。</p>
<p>如果这些注入的对象之间还存在依赖关系，初始化它们的顺序就至关重要了，可是在这种情况下，Service 层依然不用关心，因为 Spring 已经根据代码或配置中声明的依赖关系自动确定了。总之，Service 层的业务代码，只管调用其下的数据访问层的方法就好了。</p>
<p>读到这里，你可能会回想起前文 AOP 的内容，和 IoC 似乎有一个共同的特点：都是<strong>为了尽可能保证主流程的纯粹和简洁</strong>，而将这些不影响主流程的逻辑拿出去，只不过这两种技术，“拿出去”的是不同的逻辑。值得注意的是，对象之间的依赖关系，各层之间的依赖关系，并没有因为 IoC 而发生任何的改变。</p>
<p><strong>IoC 在实现上包含两种方式，一种叫做依赖查找（DL，Dependency Lookup），另一种叫做依赖注入（DI，Dependency Injection）。</strong>二者缺一不可，Spring 容器做到了两者，就如同上面的例子，容器需要先查找到 bookDao 和 loanDao 所对应的对象，再把它们注入进来。当然，我们平时听到的更多是第二种。</p>
<p>有了一个大致的感受，那么 IoC 到底能带来什么好处呢？我觉得主要有这样两个方面：</p>
<ul> 
 <li><strong>资源统一配置管理。</strong>这个方面很好，但并不是 IoC 最大的优势，因为，如果你不把资源交给容器管理，而是自己建立一个资源管理类来管理某项资源，一样可以得到“统一管理”的所有优势。</li> 
 <li><strong>业务代码不再包含依赖资源的访问逻辑，因此资源访问和业务流程的代码解耦开了。</strong>我觉得这里的“解耦”才是 IoC 最核心的优势，它让各层之间的依赖关系变得松散。就如同上面的代码例子一样，如果哪一天我想把它依赖的 bookDao 和 loanDao 替换掉（比如，我想为 Service 层做测试），Service 一行代码都不用改，它压根都不需要知道。</li> 
</ul>
<h2>总结思考</h2>
<p>今天我们一起学习了面向切面编程，从学习概念，熟悉配置，到了解实现原理，希望你对于 AOP 已经有了一个清晰的认识，在未来设计和开发系统的时候，无论技术怎样演进，框架怎么变化，始终知道什么时候需要它，并能够把它从你的武器库中拿出来使用。</p>
<p>现在我来提两个问题，我们一起讨论吧：</p>
<ul> 
 <li>你过去的项目中有没有应用 AOP 的例子，能说说吗？</li> 
 <li>我介绍了 AOP 的优点，但却没有提到它的缺点，但其实任何技术都是有两面性的，你觉得 AOP 的缺点都有哪些呢？</li> 
</ul>
<h2>选修课堂：实践 AOP 的运行时动态代理</h2>
<p>我们学习了 AOP 的实现原理，知道其中一种办法是通过 JDK 的动态代理技术来实现的。现在，我们就来写一点代码，用它实现一个小例子。</p>
<p>首先，请你准备好一个项目文件夹，我们会在其中创建一系列文件。你可以使用 Eclipse 来管理项目，也可以自己建立一个独立的文件夹，这都没有关系。</p>
<p>现在建立 BookService.java，这次我们把 BookService 定义为一个接口，包含 lendOut 方法，同时也创建它的实现 BookServiceImpl：</p>
<pre style="position: relative;"><code>
  <table class="hljs-ln">
   <tbody>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
       import java.text.MessageFormat;
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
       import java.util.Date;
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line"> 
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
       interface BookService {
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
        void lendOut(String bookId, String userId, Date date);
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
       }
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="7"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line"> 
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="8"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
       class BookServiceImpl implements BookService {
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="9"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
        @Override
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="10"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
        public void lendOut(String bookId, String userId, Date date) {
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="11"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
        System.out.println(MessageFormat.format("{0}: The book {1} is lent to {2}.", date, bookId, userId));
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="12"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
        }
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="13"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
       }
      </div></td>
    </tr>
   </tbody>
  </table></code>
 <div class="richcontent-pre-copy">
  <span class="iconfont"></span>复制代码
 </div></pre>
<p>然后，我们建立一个 ServiceInvocationHandler.java，在这里我们可以定义代理对象在对原对象的方法调用前后，添加的额外逻辑：</p>
<pre style="position: relative;"><code>
  <table class="hljs-ln">
   <tbody>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
       import java.lang.reflect.InvocationHandler;
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
       import java.lang.reflect.Method;
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line"> 
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
       class ServiceInvocationHandler implements InvocationHandler {
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
        private Object target;
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line"> 
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="7"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
        public ServiceInvocationHandler(Object target) {
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="8"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
        this.target = target;
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="9"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
        }
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="10"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line"> 
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="11"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
        @Override
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="12"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
        public Object invoke(Object proxy, Method method, Object[] args) throws Throwable {
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="13"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
        System.out.println("Before...");
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="14"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
        Object result = method.invoke(this.target, args);
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="15"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
        System.out.println("After...");
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="16"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
        return result;
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="17"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
        }
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="18"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
       }
      </div></td>
    </tr>
   </tbody>
  </table></code>
 <div class="richcontent-pre-copy">
  <span class="iconfont"></span>复制代码
 </div></pre>
<p>接着，我们建立一个 Client.java 类，作为程序的起点，通过动态代理的方式来调用源代码中的 lendOut 方法：</p>
<pre style="position: relative;"><code>
  <table class="hljs-ln">
   <tbody>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
       import java.lang.reflect.Proxy;
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
       import java.util.Date;
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line"> 
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
       public class Client {
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
        public static void main(String[] args) throws Exception {
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
        BookService bookService = (BookService) Proxy.newProxyInstance(
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="7"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
        BookService.class.getClassLoader(),
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="8"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
        new Class[]{ BookService.class },
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="9"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
        new ServiceInvocationHandler(new BookServiceImpl())
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="10"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
        );
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="11"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
        bookService.lendOut("123", "456", new Date());
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="12"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
        }
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="13"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
       }
      </div></td>
    </tr>
   </tbody>
  </table></code>
 <div class="richcontent-pre-copy">
  <span class="iconfont"></span>复制代码
 </div></pre>
<p>你看，我们创建了一个动态代理对象，并赋给 bookService，这个代理对象实际是会调用 BookServiceImpl 的，但调用的前后打印了额外的日志。并且，这个代理对象也实现自 BookService 接口，因此，对于 BookService 的使用者来说，它实际并不知道调用到的是 BookServiceImpl 还是它的代理对象。请看图示：</p>
<p><img src="https://static001.geekbang.org/resource/image/c3/9e/c39ca70be876a106e90e73d6946d849e.png" alt=""></p>
<p>好，现在我们把这些代码编译一下：</p>
<pre style="position: relative;"><code>
  <table class="hljs-ln">
   <tbody>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
       javac BookService.java ServiceInvocationHandler.java Client.java
      </div></td>
    </tr>
   </tbody>
  </table></code>
 <div class="richcontent-pre-copy">
  <span class="iconfont"></span>复制代码
 </div></pre>
<p>你应该能看到它们的 class 文件分别生成了。</p>
<p>最后，执行 Client 的 main 方法，就能看到相应的执行结果，它显示 lendBook 方法前后的 AOP 的逻辑被实际执行了：</p>
<pre style="position: relative;"><code>
  <table class="hljs-ln">
   <tbody>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
       java Client
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
       Before...
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
       8/10/19 11:42 AM: The book 123 is lent to 456.
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
       After...
      </div></td>
    </tr>
   </tbody>
  </table></code>
 <div class="richcontent-pre-copy">
  <span class="iconfont"></span>复制代码
 </div></pre>
<h2>扩展阅读</h2>
<ul> 
 <li>Spring 官方文档中<a href="https://docs.spring.io/spring/docs/current/spring-framework-reference/core.html#aop">关于 AOP 的教程</a>，如果你希望看到中文版，那么互联网上有不少对于这部分的翻译，只不过对应的 Spring 版本不同，内容大致是一样的，比如<a href="https://blog.csdn.net/wengcheng_k/article/details/79952358">这一篇</a>。</li> 
 <li><a href="https://www.baeldung.com/spring-aop-vs-aspectj">Comparing Spring AOP and AspectJ</a>，这是一篇关于静态织入和动态代理这两种 AOP 方式比较的文章。</li> 
 <li>对于 AspectJ，如果想一瞥其扩展的语法语义，维基百科的<a href="https://en.wikipedia.org/wiki/AspectJ">词条</a>就足矣；如果想了解某些细节，请参阅<a href="https://www.eclipse.org/aspectj/doc/released/adk15notebook/index.html">官方文档</a>。</li> 
</ul>
<p><img src="https://static001.geekbang.org/resource/image/11/8b/1181246bbd51ce348d5729696d1dc28b.jpg" alt="unpreview"></p> |             |book   |0     |full_html   |zh-hans  |38          |
|----------||-------------|-------|------|------------|---------|------------|

2020-11-19 17:56:13.358 INFO  jdbc.sqltiming Line:373 - select nodefiledd0_.nid as nid1_10_, nodefiledd0_.changed as changed2_10_, nodefiledd0_.created 
as created3_10_, nodefiledd0_.default_langcode as default_4_10_, nodefiledd0_.langcode as langcode5_10_, 
nodefiledd0_.promote as promote6_10_, nodefiledd0_.revision_translation_affected as revision7_10_, 
nodefiledd0_.status as status8_10_, nodefiledd0_.sticky as sticky9_10_, nodefiledd0_.title 
as title10_10_, nodefiledd0_.type as type11_10_, nodefiledd0_.uid as uid12_10_, nodefiledd0_.vid 
as vid13_10_ from node_field_data nodefiledd0_ where nodefiledd0_.nid=38 
 {executed in 1 msec}
2020-11-19 17:56:13.358 INFO  jdbc.resultsettable Line:610 - 
|----|-----------|-----------|-----------------|---------|--------|------------------------------|-------|-------|---------------|-----|----|----|
|nid |changed    |created    |default_langcode |langcode |promote |revision_translation_affected |status |sticky |title          |type |uid |vid |
|----|-----------|-----------|-----------------|---------|--------|------------------------------|-------|-------|---------------|-----|----|----|
|38  |1605756170 |1605756170 |1                |zh-hans  |0       |1                             |1      |0      |11丨剑走偏锋：面向切面编程 |book |1   |38  |
|----|-----------|-----------|-----------------|---------|--------|------------------------------|-------|-------|---------------|-----|----|----|

2020-11-19 17:56:13.359 INFO  jdbc.sqltiming Line:373 - select nodefieldr0_.nid as nid1_11_0_, nodefieldr0_.changed as changed2_11_0_, nodefieldr0_.created 
as created3_11_0_, nodefieldr0_.default_langcode as default_4_11_0_, nodefieldr0_.langcode 
as langcode5_11_0_, nodefieldr0_.promote as promote6_11_0_, nodefieldr0_.revision_translation_affected 
as revision7_11_0_, nodefieldr0_.status as status8_11_0_, nodefieldr0_.sticky as sticky9_11_0_, 
nodefieldr0_.title as title10_11_0_, nodefieldr0_.uid as uid11_11_0_, nodefieldr0_.vid as vid12_11_0_ 
from node_field_revision nodefieldr0_ where nodefieldr0_.nid=38 
 {executed in 0 msec}
2020-11-19 17:56:13.359 INFO  jdbc.resultsettable Line:610 - 
|---------|-----------|-----------|-----------------|---------|--------|------------------------------|-------|-------|---------------|----|----|
|nid      |changed    |created    |default_langcode |langcode |promote |revision_translation_affected |status |sticky |title          |uid |vid |
|---------|-----------|-----------|-----------------|---------|--------|------------------------------|-------|-------|---------------|----|----|
|[unread] |1605756170 |1605756170 |1                |zh-hans  |0       |1                             |1      |0      |11丨剑走偏锋：面向切面编程 |1   |38  |
|---------|-----------|-----------|-----------------|---------|--------|------------------------------|-------|-------|---------------|----|----|

2020-11-19 17:56:13.365 INFO  jdbc.sqltiming Line:373 - update node_field_data set changed=1605779773, created=1605779773, default_langcode=1, langcode='zh-hans', 
promote=0, revision_translation_affected=1, status=1, sticky=0, title='11丨剑走偏锋：面向切面编程', type='book', 
uid=1, vid=38 where nid=38 
 {executed in 1 msec}
2020-11-19 17:56:13.365 INFO  jdbc.sqltiming Line:373 - update node_field_revision set changed=1605779773, created=1605779773, default_langcode=1, 
langcode='zh-hans', promote=0, revision_translation_affected=1, status=1, sticky=0, title='11丨剑走偏锋：面向切面编程', 
uid=1, vid=38 where nid=38 
 {executed in 0 msec}
2020-11-19 17:56:13.374 INFO  jdbc.sqltiming Line:373 - select bookfieldm0_.entity_id as entity_i1_8_, bookfieldm0_.bundle as bundle2_8_, bookfieldm0_.delta 
as delta3_8_, bookfieldm0_.langcode as langcode4_8_, bookfieldm0_.field_media_value as field_me5_8_, 
bookfieldm0_.revision_id as revision6_8_ from node__field_media bookfieldm0_ where bookfieldm0_.entity_id=38 
 {executed in 0 msec}
2020-11-19 17:56:13.375 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------||------------|
|entity_id |bundle |delta |langcode |field_media_value                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              |revision_id |
|----------|-------|------|---------||------------|
|38        |book   |0     |zh-hans  |https://qdall01.baidupcs.com/file/7c7f9770c56208046b2d4cab40c27aed?bkt=en-038bee77e919b76a0c384fd3d0db9910318319c91076626f25f47e8a14d653c9c2ed30c47896832c&fid=3757516097-778750-781094517826930&time=1605756169&sign=FDTAXUGERLQlBHSKfWqir-DCb740ccc5511e5e8fedcff06b081203-z5F1IGzqEeq4o1Yj4ZqvmqYo8Os%3D&to=92&size=12939652&sta_dx=12939652&sta_cs=3868&sta_ft=m4a&sta_ct=7&sta_mt=0&fm2=MH%2CYangquan%2CAnywhere%2C%2Cshanghai%2Cct&ctime=1570414486&mtime=1605754779&resv0=-1&resv1=0&resv2=rlim&resv3=2&resv4=12939652&vuk=3757516097&iv=0&htype=&randtype=em&newver=1&newfm=1&secfm=1&flow_ver=3&pkey=en-40b167508497573ed1bc084ed48df4758e0dde3f5e5ad865b6bb6eb304c7d13399c62dabadde1654&sl=76480590&expires=8h&rt=pr&r=260776873&mlogid=7502279444894909358&vbdid=2247232042&fin=11%E4%B8%A8%E5%89%91%E8%B5%B0%E5%81%8F%E9%94%8B%EF%BC%9A%E9%9D%A2%E5%90%91%E5%88%87%E9%9D%A2%E7%BC%96%E7%A8%8B.m4a&bflag=92,34-92&rtype=1&dp-logid=7502279444894909358&dp-callid=0.1.1&hps=1&tsl=80&csl=80&fsl=-1&csign=yVzLQPCt4DblfMLqd2BCjd2RnqQ%3D&so=0&ut=6&uter=0&serv=0&uc=1458616558&ti=12146e4ffd7df3c96ce0bb4474c9a675289b64a25f677fc1&hflag=30&adg=c_15d187590626c675056c89c8026cfc17&reqlabel=778750_l_1bf9445f27094ab64c9f1cb0bdf7ccfa_-1_dd2c452b8e51a0c74130d7cf32c48a2d&ibp=1&by=themis&filename=11%E4%B8%A8%E5%89%91%E8%B5%B0%E5%81%8F%E9%94%8B%EF%BC%9A%E9%9D%A2%E5%90%91%E5%88%87%E9%9D%A2%E7%BC%96%E7%A8%8B.m4a |38          |
|----------|-------|------|---------||------------|

2020-11-19 17:56:13.380 INFO  jdbc.sqltiming Line:373 - update node__field_media set bundle='book', delta=0, langcode='zh-hans', field_media_value='https://qdall01.baidupcs.com/file/7c7f9770c56208046b2d4cab40c27aed?bkt=en-038bee77e919b76a0c384fd3d0db9910318319c91076626f25f47e8a14d653c9c2ed30c47896832c&fid=3757516097-778750-675448893296050&time=1605779771&sign=FDTAXUGERLQlBHSKfWqir-DCb740ccc5511e5e8fedcff06b081203-9qoJC1gz78XYTF9gcaGKdj1SdXQ%3D&to=92&size=12939652&sta_dx=12939652&sta_cs=3873&sta_ft=m4a&sta_ct=7&sta_mt=0&fm2=MH%2CYangquan%2CAnywhere%2C%2Cshanghai%2Cct&ctime=1570414486&mtime=1605778300&resv0=-1&resv1=0&resv2=rlim&resv3=2&resv4=12939652&vuk=3757516097&iv=0&htype=&randtype=em&newver=1&newfm=1&secfm=1&flow_ver=3&pkey=en-40b167508497573ed1bc084ed48df4758e0dde3f5e5ad865b6bb6eb304c7d13399c62dabadde1654&sl=76480590&expires=8h&rt=pr&r=976458929&mlogid=7508615091011843505&vbdid=2247232042&fin=11%E4%B8%A8%E5%89%91%E8%B5%B0%E5%81%8F%E9%94%8B%EF%BC%9A%E9%9D%A2%E5%90%91%E5%88%87%E9%9D%A2%E7%BC%96%E7%A8%8B.m4a&bflag=92,34-92&rtype=1&dp-logid=7508615091011843505&dp-callid=0.1.1&hps=1&tsl=80&csl=80&fsl=-1&csign=yVzLQPCt4DblfMLqd2BCjd2RnqQ%3D&so=0&ut=6&uter=0&serv=0&uc=1458616558&ti=648eaef5c3fa81d1b7732bb0cde1becc3edc3400df5c51eb&hflag=30&adg=c_15d187590626c675056c89c8026cfc17&reqlabel=778750_l_1bf9445f27094ab64c9f1cb0bdf7ccfa_-1_dd2c452b8e51a0c74130d7cf32c48a2d&ibp=1&by=themis&filename=11%E4%B8%A8%E5%89%91%E8%B5%B0%E5%81%8F%E9%94%8B%EF%BC%9A%E9%9D%A2%E5%90%91%E5%88%87%E9%9D%A2%E7%BC%96%E7%A8%8B.m4a', 
revision_id=38 where entity_id=38 
 {executed in 1 msec}
2020-11-19 17:56:13.382 INFO  jdbc.sqltiming Line:373 - select nodefieldm0_.entity_id as entity_i1_17_0_, nodefieldm0_.bundle as bundle2_17_0_, nodefieldm0_.delta 
as delta3_17_0_, nodefieldm0_.langcode as langcode4_17_0_, nodefieldm0_.field_media_value as 
field_me5_17_0_, nodefieldm0_.revision_id as revision6_17_0_ from node_revision__field_media 
nodefieldm0_ where nodefieldm0_.entity_id=38 
 {executed in 0 msec}
2020-11-19 17:56:13.383 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------||------------|
|entity_id |bundle |delta |langcode |field_media_value|revision_id |
|----------|-------|------|---------||------------|
|[unread]  |book   |0     |zh-hans  |https://qdall01.baidupcs.com/file/7c7f9770c56208046b2d4cab40c27aed?bkt=en-038bee77e919b76a0c384fd3d0db9910318319c91076626f25f47e8a14d653c9c2ed30c47896832c&fid=3757516097-778750-781094517826930&time=1605756169&sign=FDTAXUGERLQlBHSKfWqir-DCb740ccc5511e5e8fedcff06b081203-z5F1IGzqEeq4o1Yj4ZqvmqYo8Os%3D&to=92&size=12939652&sta_dx=12939652&sta_cs=3868&sta_ft=m4a&sta_ct=7&sta_mt=0&fm2=MH%2CYangquan%2CAnywhere%2C%2Cshanghai%2Cct&ctime=1570414486&mtime=1605754779&resv0=-1&resv1=0&resv2=rlim&resv3=2&resv4=12939652&vuk=3757516097&iv=0&htype=&randtype=em&newver=1&newfm=1&secfm=1&flow_ver=3&pkey=en-40b167508497573ed1bc084ed48df4758e0dde3f5e5ad865b6bb6eb304c7d13399c62dabadde1654&sl=76480590&expires=8h&rt=pr&r=260776873&mlogid=7502279444894909358&vbdid=2247232042&fin=11%E4%B8%A8%E5%89%91%E8%B5%B0%E5%81%8F%E9%94%8B%EF%BC%9A%E9%9D%A2%E5%90%91%E5%88%87%E9%9D%A2%E7%BC%96%E7%A8%8B.m4a&bflag=92,34-92&rtype=1&dp-logid=7502279444894909358&dp-callid=0.1.1&hps=1&tsl=80&csl=80&fsl=-1&csign=yVzLQPCt4DblfMLqd2BCjd2RnqQ%3D&so=0&ut=6&uter=0&serv=0&uc=1458616558&ti=12146e4ffd7df3c96ce0bb4474c9a675289b64a25f677fc1&hflag=30&adg=c_15d187590626c675056c89c8026cfc17&reqlabel=778750_l_1bf9445f27094ab64c9f1cb0bdf7ccfa_-1_dd2c452b8e51a0c74130d7cf32c48a2d&ibp=1&by=themis&filename=11%E4%B8%A8%E5%89%91%E8%B5%B0%E5%81%8F%E9%94%8B%EF%BC%9A%E9%9D%A2%E5%90%91%E5%88%87%E9%9D%A2%E7%BC%96%E7%A8%8B.m4a |38          |
|----------|-------|------|---------||------------|

2020-11-19 17:56:13.388 INFO  jdbc.sqltiming Line:373 - update node_revision__field_media set bundle='book', delta=0, langcode='zh-hans', field_media_value='https://qdall01.baidupcs.com/file/7c7f9770c56208046b2d4cab40c27aed?bkt=en-038bee77e919b76a0c384fd3d0db9910318319c91076626f25f47e8a14d653c9c2ed30c47896832c&fid=3757516097-778750-675448893296050&time=1605779771&sign=FDTAXUGERLQlBHSKfWqir-DCb740ccc5511e5e8fedcff06b081203-9qoJC1gz78XYTF9gcaGKdj1SdXQ%3D&to=92&size=12939652&sta_dx=12939652&sta_cs=3873&sta_ft=m4a&sta_ct=7&sta_mt=0&fm2=MH%2CYangquan%2CAnywhere%2C%2Cshanghai%2Cct&ctime=1570414486&mtime=1605778300&resv0=-1&resv1=0&resv2=rlim&resv3=2&resv4=12939652&vuk=3757516097&iv=0&htype=&randtype=em&newver=1&newfm=1&secfm=1&flow_ver=3&pkey=en-40b167508497573ed1bc084ed48df4758e0dde3f5e5ad865b6bb6eb304c7d13399c62dabadde1654&sl=76480590&expires=8h&rt=pr&r=976458929&mlogid=7508615091011843505&vbdid=2247232042&fin=11%E4%B8%A8%E5%89%91%E8%B5%B0%E5%81%8F%E9%94%8B%EF%BC%9A%E9%9D%A2%E5%90%91%E5%88%87%E9%9D%A2%E7%BC%96%E7%A8%8B.m4a&bflag=92,34-92&rtype=1&dp-logid=7508615091011843505&dp-callid=0.1.1&hps=1&tsl=80&csl=80&fsl=-1&csign=yVzLQPCt4DblfMLqd2BCjd2RnqQ%3D&so=0&ut=6&uter=0&serv=0&uc=1458616558&ti=648eaef5c3fa81d1b7732bb0cde1becc3edc3400df5c51eb&hflag=30&adg=c_15d187590626c675056c89c8026cfc17&reqlabel=778750_l_1bf9445f27094ab64c9f1cb0bdf7ccfa_-1_dd2c452b8e51a0c74130d7cf32c48a2d&ibp=1&by=themis&filename=11%E4%B8%A8%E5%89%91%E8%B5%B0%E5%81%8F%E9%94%8B%EF%BC%9A%E9%9D%A2%E5%90%91%E5%88%87%E9%9D%A2%E7%BC%96%E7%A8%8B.m4a', 
revision_id=38 where entity_id=38 
 {executed in 0 msec}
2020-11-19 17:56:13.391 INFO  jdbc.sqltiming Line:373 - select bookfieldc0_.entity_id as entity_i1_5_, bookfieldc0_.bundle as bundle2_5_, bookfieldc0_.field_comment_value 
as field_co3_5_, bookfieldc0_.delta as delta4_5_, bookfieldc0_.field_comment_format as field_co5_5_, 
bookfieldc0_.langcode as langcode6_5_, bookfieldc0_.revision_id as revision7_5_ from node__field_comment 
bookfieldc0_ where bookfieldc0_.entity_id=38 
 {executed in 0 msec}
2020-11-19 17:56:13.392 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|------|---------------------|---------|------------|
|entity_id |bundle |field_comment_value|delta |field_comment_format |langcode |revision_id |
|----------|-------||------|---------------------|---------|------------|
|38        |book   |<li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/18/28/d9/78dfd983.jpg" class="_2273kGdT_0"> 
 <div class="_2CG0SquK_0">
  <div class="_304R4gla_0">
   <div>
    <div class="_18Dng5rT_0">
     <span>sky</span> <!---->
    </div> 
    <div class="_1H1Z49Dr_0">
     2019-10-05
    </div>
   </div> <!---->
  </div> 
  <div>
   <div class="_3M6kV3zb_0">
    iOS里用的runtime的一些方法也是aop了
   </div> 
   <div class="_2r3UB1GX_0">
    <span>展开</span><i class="iconfont"></i>
   </div> <!----> 
   <div class="_1w8H0ktn_0 _2A421P4G_0">
    <div class="_2jsFl-X0_0">
     <i class="iconfont"></i> <span></span>
    </div> 
    <div class="_2P4B1Hdm_0">
     <i class="iconfont"></i> <span class=""></span>
    </div> <!---->
   </div>
  </div>
 </div></li>
<li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/11/5a/55/411f95a8.jpg" class="_2273kGdT_0"> 
 <div class="_2CG0SquK_0">
  <div class="_304R4gla_0">
   <div>
    <div class="_18Dng5rT_0">
     <span>我叫徐小晋</span> <!---->
    </div> 
    <div class="_1H1Z49Dr_0">
     2019-10-05
    </div>
   </div> <!---->
  </div> 
  <div>
   <div class="_3M6kV3zb_0">
    老师您好。SpringBoot中分层，model层,dao层，service层，controller层。上层通过@Autowired来使用下层的方法，这个就是文中说到的Ioc吗？
   </div> 
   <div class="_2r3UB1GX_0">
    <span>展开</span><i class="iconfont"></i>
   </div> <!----> 
   <div class="_1w8H0ktn_0 _2A421P4G_0">
    <div class="_2jsFl-X0_0">
     <i class="iconfont"></i> <span></span>
    </div> 
    <div class="_2P4B1Hdm_0">
     <i class="iconfont"></i> <span class=""></span>
    </div> <!---->
   </div>
  </div>
 </div></li> |0     |full_html            |zh-hans  |38          |
|----------|-------||------|---------------------|---------|------------|

2020-11-19 17:56:13.397 INFO  jdbc.sqltiming Line:373 - select nodefieldc0_.entity_id as entity_i1_14_0_, nodefieldc0_.bundle as bundle2_14_0_, nodefieldc0_.field_comment_value 
as field_co3_14_0_, nodefieldc0_.delta as delta4_14_0_, nodefieldc0_.field_comment_format as 
field_co5_14_0_, nodefieldc0_.langcode as langcode6_14_0_, nodefieldc0_.revision_id as revision7_14_0_ 
from node_revision__field_comment nodefieldc0_ where nodefieldc0_.entity_id=38 
 {executed in 0 msec}
2020-11-19 17:56:13.398 INFO  jdbc.resultsettable Line:610 - 
|----------|-------||------|---------------------|---------|------------|
|entity_id |bundle |field_comment_value|delta |field_comment_format |langcode |revision_id |
|----------|-------|---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|------|---------------------|---------|------------|
|[unread]  |book   |<li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/18/28/d9/78dfd983.jpg" class="_2273kGdT_0"> 
 <div class="_2CG0SquK_0">
  <div class="_304R4gla_0">
   <div>
    <div class="_18Dng5rT_0">
     <span>sky</span> <!---->
    </div> 
    <div class="_1H1Z49Dr_0">
     2019-10-05
    </div>
   </div> <!---->
  </div> 
  <div>
   <div class="_3M6kV3zb_0">
    iOS里用的runtime的一些方法也是aop了
   </div> 
   <div class="_2r3UB1GX_0">
    <span>展开</span><i class="iconfont"></i>
   </div> <!----> 
   <div class="_1w8H0ktn_0 _2A421P4G_0">
    <div class="_2jsFl-X0_0">
     <i class="iconfont"></i> <span></span>
    </div> 
    <div class="_2P4B1Hdm_0">
     <i class="iconfont"></i> <span class=""></span>
    </div> <!---->
   </div>
  </div>
 </div></li>
<li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/11/5a/55/411f95a8.jpg" class="_2273kGdT_0"> 
 <div class="_2CG0SquK_0">
  <div class="_304R4gla_0">
   <div>
    <div class="_18Dng5rT_0">
     <span>我叫徐小晋</span> <!---->
    </div> 
    <div class="_1H1Z49Dr_0">
     2019-10-05
    </div>
   </div> <!---->
  </div> 
  <div>
   <div class="_3M6kV3zb_0">
    老师您好。SpringBoot中分层，model层,dao层，service层，controller层。上层通过@Autowired来使用下层的方法，这个就是文中说到的Ioc吗？
   </div> 
   <div class="_2r3UB1GX_0">
    <span>展开</span><i class="iconfont"></i>
   </div> <!----> 
   <div class="_1w8H0ktn_0 _2A421P4G_0">
    <div class="_2jsFl-X0_0">
     <i class="iconfont"></i> <span></span>
    </div> 
    <div class="_2P4B1Hdm_0">
     <i class="iconfont"></i> <span class=""></span>
    </div> <!---->
   </div>
  </div>
 </div></li> |0     |full_html            |zh-hans  |38          |
|----------|-------||------|---------------------|---------|------------|

2020-11-19 17:56:13.403 INFO  jdbc.sqltiming Line:373 - select bookfieldt0_.entity_id as entity_i1_9_, bookfieldt0_.bundle as bundle2_9_, bookfieldt0_.delta 
as delta3_9_, bookfieldt0_.langcode as langcode4_9_, bookfieldt0_.revision_id as revision5_9_, 
bookfieldt0_.field_thumb_value as field_th6_9_ from node__field_thumb bookfieldt0_ where bookfieldt0_.entity_id=38 
 {executed in 0 msec}
2020-11-19 17:56:13.403 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------|-----------------------------------------------------------------------------------------|
|entity_id |bundle |delta |langcode |revision_id |field_thumb_value                                                                        |
|----------|-------|------|---------|------------|-----------------------------------------------------------------------------------------|
|38        |book   |0     |zh-hans  |38          |https://static001.geekbang.org/resource/image/01/92/01a86d15c9fa1160536712acae462892.jpg |
|----------|-------|------|---------|------------|-----------------------------------------------------------------------------------------|

2020-11-19 17:56:13.409 INFO  jdbc.sqltiming Line:373 - select nodefieldt0_.entity_id as entity_i1_18_0_, nodefieldt0_.bundle as bundle2_18_0_, nodefieldt0_.delta 
as delta3_18_0_, nodefieldt0_.langcode as langcode4_18_0_, nodefieldt0_.revision_id as revision5_18_0_, 
nodefieldt0_.field_thumb_value as field_th6_18_0_ from node_revision__field_thumb nodefieldt0_ 
where nodefieldt0_.entity_id=38 
 {executed in 1 msec}
2020-11-19 17:56:13.409 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------|-----------------------------------------------------------------------------------------|
|entity_id |bundle |delta |langcode |revision_id |field_thumb_value                                                                        |
|----------|-------|------|---------|------------|-----------------------------------------------------------------------------------------|
|[unread]  |book   |0     |zh-hans  |38          |https://static001.geekbang.org/resource/image/01/92/01a86d15c9fa1160536712acae462892.jpg |
|----------|-------|------|---------|------------|-----------------------------------------------------------------------------------------|

2020-11-19 17:56:13.414 INFO  jdbc.sqltiming Line:373 - select bookfieldf0_.entity_id as entity_i1_6_0_, bookfieldf0_.bundle as bundle2_6_0_, bookfieldf0_.delta 
as delta3_6_0_, bookfieldf0_.field_fenlei_target_id as field_fe4_6_0_, bookfieldf0_.langcode 
as langcode5_6_0_, bookfieldf0_.revision_id as revision6_6_0_ from node__field_fenlei bookfieldf0_ 
where bookfieldf0_.entity_id=38 
 {executed in 0 msec}
2020-11-19 17:56:13.415 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------------|---------|------------|
|entity_id |bundle |delta |field_fenlei_target_id |langcode |revision_id |
|----------|-------|------|-----------------------|---------|------------|
|[unread]  |book   |0     |1                      |zh-hans  |38          |
|----------|-------|------|-----------------------|---------|------------|

2020-11-19 17:56:13.420 INFO  jdbc.sqltiming Line:373 - select nodefieldf0_.entity_id as entity_i1_15_0_, nodefieldf0_.bundle as bundle2_15_0_, nodefieldf0_.delta 
as delta3_15_0_, nodefieldf0_.field_fenlei_target_id as field_fe4_15_0_, nodefieldf0_.langcode 
as langcode5_15_0_, nodefieldf0_.revision_id as revision6_15_0_ from node_revision__field_fenlei 
nodefieldf0_ where nodefieldf0_.entity_id=38 
 {executed in 0 msec}
2020-11-19 17:56:13.420 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------------|---------|------------|
|entity_id |bundle |delta |field_fenlei_target_id |langcode |revision_id |
|----------|-------|------|-----------------------|---------|------------|
|[unread]  |book   |0     |1                      |zh-hans  |38          |
|----------|-------|------|-----------------------|---------|------------|

2020-11-19 17:56:13.426 INFO  jdbc.sqltiming Line:373 - select bookchecke0_.item_id as item_id1_2_, bookchecke0_.fsid as fsid2_2_, bookchecke0_.got 
as got3_2_, bookchecke0_.name as name4_2_ from book_check bookchecke0_ where bookchecke0_.fsid='36253398013312' 
and bookchecke0_.name='net_content' 
 {executed in 1 msec}
2020-11-19 17:56:13.426 INFO  jdbc.resultsettable Line:610 - 
|--------|-----|----|-----|
|item_id |fsid |got |name |
|--------|-----|----|-----|
|--------|-----|----|-----|

2020-11-19 17:56:50.480 INFO  jdbc.sqltiming Line:373 - select bookchecke0_.item_id as item_id1_2_, bookchecke0_.fsid as fsid2_2_, bookchecke0_.got 
as got3_2_, bookchecke0_.name as name4_2_ from book_check bookchecke0_ where bookchecke0_.fsid='36253398013312' 
and bookchecke0_.name='net_content' 
 {executed in 0 msec}
2020-11-19 17:56:50.481 INFO  jdbc.resultsettable Line:610 - 
|--------|-----|----|-----|
|item_id |fsid |got |name |
|--------|-----|----|-----|
|--------|-----|----|-----|

2020-11-19 17:56:50.483 INFO  jdbc.sqltiming Line:373 - insert into book_check (fsid, got, name) values ('36253398013312', 1, 'net_content') 
 {executed in 0 msec}
2020-11-19 17:56:50.483 INFO  jdbc.sqltiming Line:373 - getGeneratedKeys on query: insert into book_check (fsid, got, name) values ('36253398013312', 
1, 'net_content') 
 {executed in 0 msec}
2020-11-19 17:56:50.484 INFO  jdbc.resultsettable Line:610 - 
|--------------|
|generated_key |
|--------------|
|65            |
|--------------|

2020-11-19 17:56:50.507 INFO  jdbc.sqltiming Line:373 - select bookchecke0_.item_id as item_id1_2_, bookchecke0_.fsid as fsid2_2_, bookchecke0_.got 
as got3_2_, bookchecke0_.name as name4_2_ from book_check bookchecke0_ where bookchecke0_.fsid='36253398013312' 
and bookchecke0_.name='media' 
 {executed in 0 msec}
2020-11-19 17:56:50.508 INFO  jdbc.resultsettable Line:610 - 
|--------|-----|----|-----|
|item_id |fsid |got |name |
|--------|-----|----|-----|
|--------|-----|----|-----|

2020-11-19 17:56:50.924 INFO  jdbc.sqltiming Line:373 - select bookchecke0_.item_id as item_id1_2_, bookchecke0_.fsid as fsid2_2_, bookchecke0_.got 
as got3_2_, bookchecke0_.name as name4_2_ from book_check bookchecke0_ where bookchecke0_.fsid='36253398013312' 
and bookchecke0_.name='media' 
 {executed in 1 msec}
2020-11-19 17:56:50.924 INFO  jdbc.resultsettable Line:610 - 
|--------|-----|----|-----|
|item_id |fsid |got |name |
|--------|-----|----|-----|
|--------|-----|----|-----|

2020-11-19 17:56:50.926 INFO  jdbc.sqltiming Line:373 - insert into book_check (fsid, got, name) values ('36253398013312', 1, 'media') 
 {executed in 0 msec}
2020-11-19 17:56:50.927 INFO  jdbc.sqltiming Line:373 - getGeneratedKeys on query: insert into book_check (fsid, got, name) values ('36253398013312', 
1, 'media') 
 {executed in 0 msec}
2020-11-19 17:56:50.928 INFO  jdbc.resultsettable Line:610 - 
|--------------|
|generated_key |
|--------------|
|66            |
|--------------|

2020-11-19 17:56:50.950 INFO  jdbc.sqltiming Line:373 - select bookfieldf0_.entity_id as entity_i1_7_, bookfieldf0_.bundle as bundle2_7_, bookfieldf0_.delta 
as delta3_7_, bookfieldf0_.field_fsid_value as field_fs4_7_, bookfieldf0_.langcode as langcode5_7_, 
bookfieldf0_.revision_id as revision6_7_ from node__field_fsid bookfieldf0_ where bookfieldf0_.field_fsid_value='36253398013312' 
 {executed in 0 msec}
2020-11-19 17:56:50.950 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------|---------|------------|
|entity_id |bundle |delta |field_fsid_value |langcode |revision_id |
|----------|-------|------|-----------------|---------|------------|
|39        |book   |0     |36253398013312   |zh-hans  |39          |
|----------|-------|------|-----------------|---------|------------|

2020-11-19 17:56:50.951 INFO  jdbc.sqltiming Line:373 - select nodeentity0_.nid as nid1_3_, nodeentity0_.langcode as langcode2_3_, nodeentity0_.type 
as type3_3_, nodeentity0_.uuid as uuid4_3_, nodeentity0_.vid as vid5_3_ from node nodeentity0_ 
where nodeentity0_.nid=39 
 {executed in 0 msec}
2020-11-19 17:56:50.951 INFO  jdbc.resultsettable Line:610 - 
|----|---------|-----|-------------------------------------|----|
|nid |langcode |type |uuid                                 |vid |
|----|---------|-----|-------------------------------------|----|
|39  |zh-hans  |book |788a1498-74f4-49ea-86f0-be5db7ee2985 |39  |
|----|---------|-----|-------------------------------------|----|

2020-11-19 17:56:50.957 INFO  jdbc.sqltiming Line:373 - select nodefieldf0_.entity_id as entity_i1_16_0_, nodefieldf0_.bundle as bundle2_16_0_, nodefieldf0_.delta 
as delta3_16_0_, nodefieldf0_.field_fsid_value as field_fs4_16_0_, nodefieldf0_.langcode as 
langcode5_16_0_, nodefieldf0_.revision_id as revision6_16_0_ from node_revision__field_fsid 
nodefieldf0_ where nodefieldf0_.entity_id=39 
 {executed in 1 msec}
2020-11-19 17:56:50.957 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------|---------|------------|
|entity_id |bundle |delta |field_fsid_value |langcode |revision_id |
|----------|-------|------|-----------------|---------|------------|
|[unread]  |book   |0     |36253398013312   |zh-hans  |39          |
|----------|-------|------|-----------------|---------|------------|

2020-11-19 17:56:50.962 INFO  jdbc.sqltiming Line:373 - select bookentity0_.nid as nid1_1_, bookentity0_.bid as bid2_1_, bookentity0_.depth as depth3_1_, 
bookentity0_.has_children as has_chil4_1_, bookentity0_.p1 as p5_1_, bookentity0_.p2 as p6_1_, 
bookentity0_.p3 as p7_1_, bookentity0_.p4 as p8_1_, bookentity0_.p5 as p9_1_, bookentity0_.pid 
as pid10_1_, bookentity0_.weight as weight11_1_ from book bookentity0_ where bookentity0_.nid=39 
 {executed in 0 msec}
2020-11-19 17:56:50.963 INFO  jdbc.resultsettable Line:610 - 
|----|----|------|-------------|---|---|---|---|---|----|-------|
|nid |bid |depth |has_children |p1 |p2 |p3 |p4 |p5 |pid |weight |
|----|----|------|-------------|---|---|---|---|---|----|-------|
|39  |1   |3     |0            |1  |35 |39 |0  |0  |35  |0      |
|----|----|------|-------------|---|---|---|---|---|----|-------|

2020-11-19 17:56:50.969 INFO  jdbc.sqltiming Line:373 - select nodebodyen0_.entity_id as entity_i1_4_, nodebodyen0_.body_value as body_val2_4_, nodebodyen0_.body_summary 
as body_sum3_4_, nodebodyen0_.bundle as bundle4_4_, nodebodyen0_.delta as delta5_4_, nodebodyen0_.body_format 
as body_for6_4_, nodebodyen0_.langcode as langcode7_4_, nodebodyen0_.revision_id as revision8_4_ 
from node__body nodebodyen0_ where nodebodyen0_.entity_id=39 
 {executed in 1 msec}
2020-11-19 17:56:50.977 INFO  jdbc.resultsettable Line:610 - 
|----------||-------------|-------|------|------------|---------|------------|
|entity_id |body_value|body_summary |bundle |delta |body_format |langcode |revision_id |
|----------||-------------|-------|------|------------|---------|------------|
|39        |<p>你好，我是四火。</p>
<p>今天我们继续学习 MVC 架构，主要内容就是 MVC 架构的第三部分——控制器（Controller）。</p>
<p>控制器用于接收请求，校验参数，调用 Model 层获取业务数据，构造和绑定上下文，并转给 View 层去渲染。也就是说，控制器是 MVC 的大脑，它知道接下去该让谁去做什么事。控制器层是大多数 MVC 框架特别愿意做文章的地方，我相信你可能耳闻、了解，甚至熟练使用过一些 MVC 框架了。</p>
<p>那么与其去抽象地学习这一层的重要概念、原理，或是单纯地学习这些框架在这一层略显乏味的具体配置，我想我们今天“不走寻常路”一次，把这两者结合起来——<strong>我们来比较 Servlet、Struts 和 Sprint MVC 这三种常见的技术和 MVC 框架，在控制器层的工作路数，以及和业务代码整合配置的方式，看看任这些框架形式千变万化，到底有哪些其实是不变的“套路”呢？</strong></p>
<p>随着请求到达控制器，让我们顺着接下去的请求处理流程，看看控制器会通过怎样的步骤，履行完它的职责，并最终转到相应的视图吧。</p>
<h2>1. 路径映射和视图指向</h2>
<p>我们不妨把 MVC 架构的控制器想象成一个黑盒。当 HTTP 请求从客户端送达的时候，这个黑盒要完成一系列使命，那么它就有一个入口路由和一个出口路由：</p><!-- [[[read_end]]] -->
<ul> 
 <li><strong>入口路由就是路径映射，根据配置的规则，以及请求 URI 的路径，找到具体接收和处理这个请求的控制器逻辑；</strong></li> 
 <li><strong>出口路由就是视图指向，根据配置的规则，以及控制器处理完毕后返回的信息，找到需要渲染的视图页面。</strong></li> 
</ul>
<p>这两件事情，我们当然可以使用原始的 if-else 来完成，但是一般的 MVC 都提供了更清晰和独立的解决方案。</p>
<p>我们还是从老朋友 Servlet 开始讲起，在 Tomcat 的 web.xml 中，我们可以配置这样的路径映射：</p>
<pre style="position: relative;"><code>
  <table class="hljs-ln">
   <tbody>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
       &lt;servlet&gt;
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
        &lt;servlet-name&gt;BookServlet&lt;/servlet-name&gt;
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
        &lt;servlet-class&gt;com.xxx.xxx.BookServlet&lt;/servlet-class&gt;
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
       &lt;/servlet&gt;
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
       &lt;servlet-mapping&gt;
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
        &lt;servlet-name&gt;BookServlet&lt;/servlet-name&gt;
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="7"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
        &lt;url-pattern&gt;/books&lt;/url-pattern&gt;
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="8"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
       &lt;/servlet-mapping&gt;
      </div></td>
    </tr>
   </tbody>
  </table></code>
 <div class="richcontent-pre-copy">
  <span class="iconfont"></span>复制代码
 </div></pre>
<p>你看，对于路径映射，一旦请求是 /books 这种形式的，就会被转到 BookServlet 里去处理。而对于视图指向，Servlet 是通过代码完成的，比如：</p>
<pre style="position: relative;"><code>
  <table class="hljs-ln">
   <tbody>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
       request.getRequestDispatcher("/book.jsp").forward(request, response);
      </div></td>
    </tr>
   </tbody>
  </table></code>
 <div class="richcontent-pre-copy">
  <span class="iconfont"></span>复制代码
 </div></pre>
<p>但是，Servlet 路径映射的表达式匹配不够灵活，而且配置过于冗长；而视图指向更是完全通过代码调用来完成，视图的位置信息完全耦合在控制器主代码逻辑中，而且也并没有体现出配置的集中、清晰的管理优势。于是现今的 MVC 框架都提供了一套自己的映射匹配逻辑，例如 <a href="https://struts.apache.org/index.html">Struts 2</a>：</p>
<pre style="position: relative;"><code>
  <table class="hljs-ln">
   <tbody>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
       &lt;action name="books" class="xxx.xxx.BookAction"&gt;
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
        &lt;result name="success" type="dispatcher"&gt;/success.jsp&lt;/result&gt;
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
        &lt;result name="input" ... /&gt;
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
       &lt;/action&gt;
      </div></td>
    </tr>
   </tbody>
  </table></code>
 <div class="richcontent-pre-copy">
  <span class="iconfont"></span>复制代码
 </div></pre>
<p>其中，name=“books” 这样的配置就会将 /books 的请求转给 BookAction。至于接下来的两个 result 标签，是根据控制器返回的视图名来配对具体的视图页面，也就是说，一旦 BookAction 处理完毕，通过返回的视图名字，请求可以被转发给相应的视图。</p>
<p>这个路径映射的配置是简单一些了，可是都需要放在一个其它位置的、单独的 XML 中配置。不过，Java 5 开始支持注解，因此许多 MVC 框架都开始支持使用注解来让这样的配置变得更加轻量，也就是将路径映射和它所属的控制器代码放在一起。见下面 Struts 的例子：</p>
<pre style="position: relative;"><code>
  <table class="hljs-ln">
   <tbody>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
       public class BookAction extends ActionSupport {
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
        @Action(value="/books", results={
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
        @Result(name="success",location="/book.jsp")
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
        })
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
        public String get() {
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
        ...
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="7"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
        return "success";
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="8"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
        }
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="9"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
       }
      </div></td>
    </tr>
   </tbody>
  </table></code>
 <div class="richcontent-pre-copy">
  <span class="iconfont"></span>复制代码
 </div></pre>
<p>代码依然很好理解，当以 /books 为路径的 GET 请求到来时，会被转给 BookAction 的 get 方法。在控制器的活干完之后，根据返回的名称 success，下一步请求就会转到视图 /book.jsp 中去。</p>
<p>你看，对于路径映射和视图指向，为了不把这样的信息和主流程代码耦合在一起，上面讲了两种实现方法，它们各有优劣：</p>
<ul> 
 <li>放到配置文件中，好处是所有的映射都在一个文件里，方便管理。但是对于任何一个控制器逻辑，要寻找它对应的配置信息，需要去别的位置（即上文的 XML 中）寻找。<strong>这是一种代码横向分层解耦的方式，即分层方式和业务模块无关，或者说二者是“正交”的</strong>，这种方式我在 [第 11 讲] 讲解 IoC（控制反转）时会继续介绍。</li> 
 <li>使用注解，和控制器逻辑放在一起，好处是映射本身是和具体的控制器逻辑放在一起，当然，它们并非代码层面的耦合，而是通过注解的方式分离开。坏处是，如果需要考察所有的映射配置，那么就没有一个统一的文件可供概览。<strong>这是一种代码纵向分层解耦的方式，也就是说，配置是跟着业务模块走的</strong>。</li> 
</ul>
<p>无论使用以上哪一种方法，本质上都逃不过需要显式配置的命运。但无论哪种方法，其实都已经够简单了，可历史总是惊人的相似，总有帮“难伺候”的程序员，还是嫌麻烦！于是就有人想出了一个“终极偷懒”的办法——免掉配置。</p>
<p>这就需要利用 <strong>CoC 原则（Convention over Configuration，即规约优于配置）</strong>。比如，在使用 <a href="https://docs.spring.io/spring/docs/current/spring-framework-reference/web.html">Spring MVC</a> 这个 MVC 框架时，声明了 ControllerClassNameHandlerMapping 以后，对于这样没有配置任何映射信息的方法，会根据 Controller 类名的规约来完成映射：</p>
<pre style="position: relative;"><code>
  <table class="hljs-ln">
   <tbody>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
       public class BooksController extends AbstractController {
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
        @Override
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
        protected ModelAndView handleRequestInternal() throws Exception {
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
        ...
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
        }
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
       }
      </div></td>
    </tr>
   </tbody>
  </table></code>
 <div class="richcontent-pre-copy">
  <span class="iconfont"></span>复制代码
 </div></pre>
<p>在使用 /books 去访问的时候，请求就会被自动转交给定义好的控制器逻辑。</p>
<p>你看，规约优于配置看起来可以省掉很多工作对不对？没错！但是任何技术都有两面性，<strong>CoC 虽然省掉了一部分实际的配置工作，却没有改变映射匹配的流程本身，也不能省掉任何为了理解规约背后的“隐性知识”的学习成本</strong>。而且，规约往往只方便于解决最常见的配置，也就意味着，<strong>当需要更灵活的配置时，我们还是会被迫退化回显式配置</strong>。</p>
<h2>2. 请求参数绑定</h2>
<p>请求被送到了指定的控制器方法，接下去，需要从 HTTP 请求中把参数取出来，绑定到控制器这一层，以便使用。<strong>整个控制器的流程中，有两次重要的数据绑定，这是第一次，是为了控制器而绑定请求数据</strong>，后面在视图上下文构造这一步中还有一次绑定，那是为了视图而进行的。</p>
<p>和路径映射的配置一样，最先被考虑的方式，一定是用编程的方法实现的。比如在 Servlet 中，可以这样做：</p>
<pre style="position: relative;"><code>
  <table class="hljs-ln">
   <tbody>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
       request.getParameter("name")
      </div></td>
    </tr>
   </tbody>
  </table></code>
 <div class="richcontent-pre-copy">
  <span class="iconfont"></span>复制代码
 </div></pre>
<p>这并没有什么稀奇的对不对，想想我们前面学习的处理方法，参数应该能通过某种配置方式自动注入到控制器的对象属性或者方法参数中吧？一点都没错，并且，Struts 和 Spring MVC 各有各的做法，二者加起来，就恰巧印证了这句话。</p>
<p>还记得前面 Struts 的那个例子吗？给 BookAction 设置一个和参数同名的属性，并辅以规则的 get/set 方法，就能将请求中的参数自动注入。更强大的地方在于，如果这个属性是个复杂对象，只要参数按照规约命名了，那么它也能够被正确处理：</p>
<pre style="position: relative;"><code>
  <table class="hljs-ln">
   <tbody>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
       public class BookAction extends ActionSupport {
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
        private Page page;
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
        public void setPage { ... }
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
        public Page getPage { ... }
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
       }
      </div></td>
    </tr>
   </tbody>
  </table></code>
 <div class="richcontent-pre-copy">
  <span class="iconfont"></span>复制代码
 </div></pre>
<p>在这种设定下，如果 URI 是：</p>
<pre style="position: relative;"><code>
  <table class="hljs-ln">
   <tbody>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
       /books?page.pageSize=1&amp;page.pageNo=2&amp;page.orderBy=desc
      </div></td>
    </tr>
   </tbody>
  </table></code>
 <div class="richcontent-pre-copy">
  <span class="iconfont"></span>复制代码
 </div></pre>
<p>那么，pageSize、pageNo 和 orderBy 这三个值就会被设置到一个 Page 对象中，而这个 Page 对象则会被自动注入到 BookAction 的实例中去。</p>
<p>再来看看 Spring MVC 使用注解的方式来处理，和 URL 的结构放在一起观察，这种方式显然更为形象直观：</p>
<pre style="position: relative;"><code>
  <table class="hljs-ln">
   <tbody>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
       @RequestMapping("/{category}/books")
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
       public ModelAndView get(@PathVariable("category") String category, @RequestParam("author") String author){ ... }
      </div></td>
    </tr>
   </tbody>
  </table></code>
 <div class="richcontent-pre-copy">
  <span class="iconfont"></span>复制代码
 </div></pre>
<p>在这种配置下，如果 URI 是：</p>
<pre style="position: relative;"><code>
  <table class="hljs-ln">
   <tbody>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
       /comic/books?author=Jim
      </div></td>
    </tr>
   </tbody>
  </table></code>
 <div class="richcontent-pre-copy">
  <span class="iconfont"></span>复制代码
 </div></pre>
<p>那么，分类 comic 就会作为方法参数 category 的值传入，而作者 Jim 就会作为方法参数 author 的值传入。</p>
<h2>3. 参数验证</h2>
<p>参数验证的操作因为和请求对象密切相关，因此通常都是在控制器层完成的。在参数验证没有通过的情况下，往往会执行异常流程，转到错误页面，返回失败请求。Struts 提供了一个将参数验证解耦到配置文件的办法，请看下面的例子：</p>
<pre style="position: relative;"><code>
  <table class="hljs-ln">
   <tbody>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
       &lt;validators&gt;
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
        &lt;field name="name"&gt;
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
        &lt;field-validator type="requiredstring"&gt;
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
        &lt;param name="trim"&gt;true&lt;/param&gt;
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
        &lt;message&gt; 书名不得为空 &lt;/message&gt;
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
        &lt;/field-validator&gt;
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="7"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
        &lt;field-validator type="stringlength"&gt;
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="8"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
        &lt;param name="maxLength"&gt;100&lt;/param&gt;
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="9"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
        &lt;param name="minLength"&gt;1&lt;/param&gt;
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="10"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
        &lt;message&gt; 书名的长度必须在 1~100 之间 &lt;/message&gt;
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="11"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
        &lt;/field-validator&gt;
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="12"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
        &lt;/field&gt;
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="13"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
       &lt;/validators&gt;
      </div></td>
    </tr>
   </tbody>
  </table></code>
 <div class="richcontent-pre-copy">
  <span class="iconfont"></span>复制代码
 </div></pre>
<p>这就是一个非常简单的参数验证的规则，对于属性 name 定义了两条规则，一条是不得为空，另一条是长度必须在 1~100 之间，否则将返回错误信息。</p>
<p>类似的，Struts 也提供了基于注解的参数验证方式，上面的例子，如果使用注解来实现，就需要将注解加在自动注入参数的 set 方法处。代码见下：</p>
<pre style="position: relative;"><code>
  <table class="hljs-ln">
   <tbody>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
       @RequiredFieldValidator(trim = true, message = " 书名不得为空.")
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
       @StringLengthFieldValidator(minLength = "1", maxLength = "100", message = " 书名的长度必须在 1~100 之间 ")
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
       void setName(String name) { ... }
      </div></td>
    </tr>
   </tbody>
  </table></code>
 <div class="richcontent-pre-copy">
  <span class="iconfont"></span>复制代码
 </div></pre>
<h2>4. 视图上下文绑定</h2>
<p>在控制器中，我们经常需要将数据传入视图层，它可能会携带用户传入的参数，也可能会携带在控制器中查询模型得到的数据，而这个传入方式，就是<strong>将数据绑定到视图的上下文中。这就是我刚刚提到过的控制器层两大绑定中的第二个</strong>。</p>
<p>如果是使用 Servlet，那么我们一般可以用 setAttribute 的方法将参数设置到 request 对象中，这样在视图层就可以相应地使用 getAttribute 方法把该参数的值取出来。</p>
<pre style="position: relative;"><code>
  <table class="hljs-ln">
   <tbody>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
       request.setAttribute("page", xxx);
      </div></td>
    </tr>
   </tbody>
  </table></code>
 <div class="richcontent-pre-copy">
  <span class="iconfont"></span>复制代码
 </div></pre>
<p>对于 Struts 来说，它的方法和前面说的请求参数绑定统一了，即可以将想传递的值放到 Action 的对象属性中，这种方式绑定的属性，和请求参数自动绑定的属性没有什么区别，在视图层都可以直接从上下文中取出来。</p>
<p>接着前面 BookAction 的例子，绑定了一个 Page 对象，那么在视图层中就可以使用 OGNL（Object-Graph Navigation Language，对象导航图语言）表达式直接取得：</p>
<pre style="position: relative;"><code>
  <table class="hljs-ln">
   <tbody>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
       &lt;p&gt; 第 ${page.pageNo} 页 &lt;/p&gt;
      </div></td>
    </tr>
   </tbody>
  </table></code>
 <div class="richcontent-pre-copy">
  <span class="iconfont"></span>复制代码
 </div></pre>
<p>对于 Spring MVC，则是需要在控制器方法中传入一个类型为 Model 的对象，同时将需要绑定的对象通过调用 addAttribute 来完成绑定，这个过程和 Servlet 是类似的。</p>
<h2>总结思考</h2>
<p>今天我们学习了 MVC 架构中的控制器层，整个控制器的逻辑比较密集，从请求抵达，到转出到视图层去渲染，控制器的逻辑通常包括下面这几步，但是，严格说起来，下面这些步骤的任何一步，根据实际情况，都是可以省略的。</p>
<p><img src="https://static001.geekbang.org/resource/image/0a/34/0a0f9ad88c34ab5922e57e2b55ff6834.png" alt=""></p>
<p>我们对比了在原生 Servlet、Struts 框架和 Spring MVC 框架下，上面各个步骤的实现，希望你能够感悟到其中的“套路”。</p>
<p>是的，具体某一个框架的配置使用，是很容易学习和掌握的，这当然很好，但那只是死的知识，而这也只是机械记忆。而当我们去思考同一个框架中实现同一个特性的不同方法，或者是不同框架实现同一个特性的不同方法时，我们就会慢慢体会到技术的有趣之处。</p>
<p>因为我们会去思考，这些不同的“玩法”比较起来，各有什么优缺点，在实际应用中应该怎么去权衡和选择，甚至去想，如果让我去设计一个类似的特性，都有哪些办法可以实现。</p>
<p>好，下面我们就来检验一下今天所学的知识，请思考下面这样两个问题：</p>
<ul> 
 <li>我们提到了 MVC 框架中，两种常见的配置方式，一种是将配置放在横向解耦的单独一层，另一种是将配置和业务模块放在一起。你更喜欢哪一种，为什么？</li> 
 <li>在上面的图中，我列出了控制器层常见的六大步骤。那么，回想你经历过的项目，是将怎样的代码逻辑放在了控制器层呢？</li> 
</ul>
<p>对于今天学习的内容，对于思考题，以及通过比较学习“套路”的方式，如果你有想法，不妨和我在留言区一起讨论吧。</p>
<h2>选修课堂：动手实现一个简单的 MVC 系统</h2>
<p>这一章我们一直在学习 MVC，不动手实践是不行的。我们要使用 Servlet + JSP + JavaBean 这种相对原始的方法来实现一个最简单的 MVC 系统。</p>
<p>还记得我们在 <a href="https://time.geekbang.org/column/article/140196">[第 07 讲]</a> 中动手跑起来的 Tomcat 吗？现在请打开 Tomcat 的安装目录，设置好环境变量 CATALINA_HOME，以便于我们后面使用正确的 Tomcat 路径。以我的电脑为例：</p>
<pre style="position: relative;"><code>
  <table class="hljs-ln">
   <tbody>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
       export CATALINA_HOME=/usr/local/Cellar/tomcat/9.0.22/libexec
      </div></td>
    </tr>
   </tbody>
  </table></code>
 <div class="richcontent-pre-copy">
  <span class="iconfont"></span>复制代码
 </div></pre>
<p>我们打开 ${CATALINA_HOME}/webapps/ROOT/WEB-INF/web.xml，在 这个结束标签前，添加如下子标签：</p>
<pre style="position: relative;"><code>
  <table class="hljs-ln">
   <tbody>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
       &lt;servlet&gt;
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
        &lt;servlet-name&gt;BookServlet&lt;/servlet-name&gt;
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
        &lt;servlet-class&gt;BookServlet&lt;/servlet-class&gt;
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
       &lt;/servlet&gt;
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
       &lt;servlet-mapping&gt;
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
        &lt;servlet-name&gt;BookServlet&lt;/servlet-name&gt;
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="7"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
        &lt;url-pattern&gt;/books&lt;/url-pattern&gt;
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="8"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
        &lt;url-pattern&gt;/books/*&lt;/url-pattern&gt;
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="9"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
       &lt;/servlet-mapping&gt;
      </div></td>
    </tr>
   </tbody>
  </table></code>
 <div class="richcontent-pre-copy">
  <span class="iconfont"></span>复制代码
 </div></pre>
<p>注意这里配置了两个 URL 映射，/books 和 /books/{bookId} 两种类型的请求会全部映射到我们将建立的 Servlet 中。</p>
<p>在配置好 Servlet 的映射之后，进入 ${CATALINA_HOME}/webapps/ROOT/WEB-INF，并创建一个名为 classes 的文件夹，接着在这个文件夹下建立一个名为 BookServlet.java 的文件，并编辑它：</p>
<pre style="position: relative;"><code>
  <table class="hljs-ln">
   <tbody>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
       import java.io.IOException;
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
       import javax.servlet.ServletException;
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
       import javax.servlet.http.HttpServlet;
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
       import javax.servlet.http.HttpServletRequest;
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
       import javax.servlet.http.HttpServletResponse;
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line"> 
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="7"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
       public class BookServlet extends HttpServlet {
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="8"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
        protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="9"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
        String category = request.getParameter("category");
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="10"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
        request.setAttribute("categoryName", category);
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="11"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
        request.getRequestDispatcher("/book.jsp").forward(request, response);
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="12"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
        }
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="13"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
       }
      </div></td>
    </tr>
   </tbody>
  </table></code>
 <div class="richcontent-pre-copy">
  <span class="iconfont"></span>复制代码
 </div></pre>
<p>嗯，其实代码逻辑很简单，把 URL 中的 category 参数的值取出来，给一个新名字 categoryName 并传给 book.jsp。</p>
<p>好，接下来我们就要把上面的 Java 源文件编译成 class 文件了，执行：</p>
<pre style="position: relative;"><code>
  <table class="hljs-ln">
   <tbody>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
       javac BookServlet.java -classpath ${CATALINA_HOME}/lib/servlet-api.jar
      </div></td>
    </tr>
   </tbody>
  </table></code>
 <div class="richcontent-pre-copy">
  <span class="iconfont"></span>复制代码
 </div></pre>
<p>其中 servlet-api.jar 是 Tomcat 中存放的编译运行 Servlet 所必须的类库。这样，你应该能看到在 classes 目录下生成了 BookServlet.class 文件。</p>
<p>接着，在 ${CATALINA_HOME}/webapps/ROOT 下建立 book.jsp，并写入：</p>
<pre style="position: relative;"><code>
  <table class="hljs-ln">
   <tbody>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
       &lt;jsp:useBean id="date" class="java.util.Date" /&gt;
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
       Category name: &lt;%=request.getAttribute("categoryName") %&gt;, date: ${date.getYear()+1900}-${date.getMonth()+1}-${date.getDate()}
      </div></td>
    </tr>
   </tbody>
  </table></code>
 <div class="richcontent-pre-copy">
  <span class="iconfont"></span>复制代码
 </div></pre>
<p>第一行表示创建并使用一个 Date 类型的 JavaBean，第二行在显示结果的时候，category 使用了 JSP 特有的 scriptlet 的表达式，而日期则使用了 OGNL 表达式。注意 Date 对象返回的年份是以 1900 年为基准的偏移量，因此需要加上 1900；而返回的月份是从 0 开始往后排的，因此需要加上修正值 1。</p>
<p>好了，大功告成，我们快来执行 Tomcat 看看结果吧！启动 Tomcat：</p>
<pre style="position: relative;"><code>
  <table class="hljs-ln">
   <tbody>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
       catalina run
      </div></td>
    </tr>
   </tbody>
  </table></code>
 <div class="richcontent-pre-copy">
  <span class="iconfont"></span>复制代码
 </div></pre>
<p>打开浏览器，访问：</p>
<pre style="position: relative;"><code>
  <table class="hljs-ln">
   <tbody>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
       http://localhost:8080/books?category=art
      </div></td>
    </tr>
   </tbody>
  </table></code>
 <div class="richcontent-pre-copy">
  <span class="iconfont"></span>复制代码
 </div></pre>
<p>如果你看到类似如下字样，那么，恭喜你，成功了！现在，你可以回想一下刚才的实现，这些代码该怎样对应到 MVC 各个部分呢？</p>
<pre style="position: relative;"><code>
  <table class="hljs-ln">
   <tbody>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
       Category name: art, date: 2019-8-5
      </div></td>
    </tr>
   </tbody>
  </table></code>
 <div class="richcontent-pre-copy">
  <span class="iconfont"></span>复制代码
 </div></pre>
<h2>扩展阅读</h2>
<ul> 
 <li>对于 <a href="https://struts.apache.org/index.html">Struts</a> 和 <a href="https://docs.spring.io/spring/docs/current/spring-framework-reference/web.html">Spring MVC</a>，文中已经给出了官方链接，如果你想阅读简洁的中文版教程，可以看看这个 <a href="https://doc.yonyoucloud.com/doc/wiki/project/struts-2/architecture.html">Struts 2 教程</a>和这个 <a href="https://www.w3cschool.cn/wkspring/9pf81ha5.html">Spring MVC 教程</a>。</li> 
 <li>文中提到了使用 ControllerClassNameHandlerMapping 来贯彻“规约优于配置”的思想，达到对具体的映射免配置的目的，如果你感兴趣的话，<a href="https://www.tutorialspoint.com/springmvc/springmvc_controllerclassnamehandlermapping">Spring MVC - Controller Class Name Handler Mapping Example</a> 这篇文章有很好的介绍。</li> 
 <li><a href="https://www.ibm.com/developerworks/cn/opensource/os-cn-ognl/index.html">OGNL 语言介绍与实践</a>，文中提到了 OGNL 表达式，感兴趣的话这篇文章是很好的入门。</li> 
</ul>
<p><img src="https://static001.geekbang.org/resource/image/11/8b/1181246bbd51ce348d5729696d1dc28b.jpg" alt="unpreview"></p> |             |book   |0     |full_html   |zh-hans  |39          |
|----------||-------------|-------|------|------------|---------|------------|

2020-11-19 17:56:50.981 INFO  jdbc.sqltiming Line:373 - select nodebodyre0_.entity_id as entity_i1_13_0_, nodebodyre0_.body_value as body_val2_13_0_, 
nodebodyre0_.body_summary as body_sum3_13_0_, nodebodyre0_.bundle as bundle4_13_0_, nodebodyre0_.delta 
as delta5_13_0_, nodebodyre0_.body_format as body_for6_13_0_, nodebodyre0_.langcode as langcode7_13_0_, 
nodebodyre0_.revision_id as revision8_13_0_ from node_revision__body nodebodyre0_ where nodebodyre0_.entity_id=39 
 {executed in 1 msec}
2020-11-19 17:56:50.990 INFO  jdbc.resultsettable Line:610 - 
|----------||-------------|-------|------|------------|---------|------------|
|entity_id |body_value|body_summary |bundle |delta |body_format |langcode |revision_id |
|----------||-------------|-------|------|------------|---------|------------|
|[unread]  |<p>你好，我是四火。</p>
<p>今天我们继续学习 MVC 架构，主要内容就是 MVC 架构的第三部分——控制器（Controller）。</p>
<p>控制器用于接收请求，校验参数，调用 Model 层获取业务数据，构造和绑定上下文，并转给 View 层去渲染。也就是说，控制器是 MVC 的大脑，它知道接下去该让谁去做什么事。控制器层是大多数 MVC 框架特别愿意做文章的地方，我相信你可能耳闻、了解，甚至熟练使用过一些 MVC 框架了。</p>
<p>那么与其去抽象地学习这一层的重要概念、原理，或是单纯地学习这些框架在这一层略显乏味的具体配置，我想我们今天“不走寻常路”一次，把这两者结合起来——<strong>我们来比较 Servlet、Struts 和 Sprint MVC 这三种常见的技术和 MVC 框架，在控制器层的工作路数，以及和业务代码整合配置的方式，看看任这些框架形式千变万化，到底有哪些其实是不变的“套路”呢？</strong></p>
<p>随着请求到达控制器，让我们顺着接下去的请求处理流程，看看控制器会通过怎样的步骤，履行完它的职责，并最终转到相应的视图吧。</p>
<h2>1. 路径映射和视图指向</h2>
<p>我们不妨把 MVC 架构的控制器想象成一个黑盒。当 HTTP 请求从客户端送达的时候，这个黑盒要完成一系列使命，那么它就有一个入口路由和一个出口路由：</p><!-- [[[read_end]]] -->
<ul> 
 <li><strong>入口路由就是路径映射，根据配置的规则，以及请求 URI 的路径，找到具体接收和处理这个请求的控制器逻辑；</strong></li> 
 <li><strong>出口路由就是视图指向，根据配置的规则，以及控制器处理完毕后返回的信息，找到需要渲染的视图页面。</strong></li> 
</ul>
<p>这两件事情，我们当然可以使用原始的 if-else 来完成，但是一般的 MVC 都提供了更清晰和独立的解决方案。</p>
<p>我们还是从老朋友 Servlet 开始讲起，在 Tomcat 的 web.xml 中，我们可以配置这样的路径映射：</p>
<pre style="position: relative;"><code>
  <table class="hljs-ln">
   <tbody>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
       &lt;servlet&gt;
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
        &lt;servlet-name&gt;BookServlet&lt;/servlet-name&gt;
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
        &lt;servlet-class&gt;com.xxx.xxx.BookServlet&lt;/servlet-class&gt;
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
       &lt;/servlet&gt;
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
       &lt;servlet-mapping&gt;
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
        &lt;servlet-name&gt;BookServlet&lt;/servlet-name&gt;
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="7"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
        &lt;url-pattern&gt;/books&lt;/url-pattern&gt;
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="8"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
       &lt;/servlet-mapping&gt;
      </div></td>
    </tr>
   </tbody>
  </table></code>
 <div class="richcontent-pre-copy">
  <span class="iconfont"></span>复制代码
 </div></pre>
<p>你看，对于路径映射，一旦请求是 /books 这种形式的，就会被转到 BookServlet 里去处理。而对于视图指向，Servlet 是通过代码完成的，比如：</p>
<pre style="position: relative;"><code>
  <table class="hljs-ln">
   <tbody>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
       request.getRequestDispatcher("/book.jsp").forward(request, response);
      </div></td>
    </tr>
   </tbody>
  </table></code>
 <div class="richcontent-pre-copy">
  <span class="iconfont"></span>复制代码
 </div></pre>
<p>但是，Servlet 路径映射的表达式匹配不够灵活，而且配置过于冗长；而视图指向更是完全通过代码调用来完成，视图的位置信息完全耦合在控制器主代码逻辑中，而且也并没有体现出配置的集中、清晰的管理优势。于是现今的 MVC 框架都提供了一套自己的映射匹配逻辑，例如 <a href="https://struts.apache.org/index.html">Struts 2</a>：</p>
<pre style="position: relative;"><code>
  <table class="hljs-ln">
   <tbody>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
       &lt;action name="books" class="xxx.xxx.BookAction"&gt;
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
        &lt;result name="success" type="dispatcher"&gt;/success.jsp&lt;/result&gt;
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
        &lt;result name="input" ... /&gt;
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
       &lt;/action&gt;
      </div></td>
    </tr>
   </tbody>
  </table></code>
 <div class="richcontent-pre-copy">
  <span class="iconfont"></span>复制代码
 </div></pre>
<p>其中，name=“books” 这样的配置就会将 /books 的请求转给 BookAction。至于接下来的两个 result 标签，是根据控制器返回的视图名来配对具体的视图页面，也就是说，一旦 BookAction 处理完毕，通过返回的视图名字，请求可以被转发给相应的视图。</p>
<p>这个路径映射的配置是简单一些了，可是都需要放在一个其它位置的、单独的 XML 中配置。不过，Java 5 开始支持注解，因此许多 MVC 框架都开始支持使用注解来让这样的配置变得更加轻量，也就是将路径映射和它所属的控制器代码放在一起。见下面 Struts 的例子：</p>
<pre style="position: relative;"><code>
  <table class="hljs-ln">
   <tbody>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
       public class BookAction extends ActionSupport {
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
        @Action(value="/books", results={
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
        @Result(name="success",location="/book.jsp")
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
        })
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
        public String get() {
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
        ...
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="7"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
        return "success";
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="8"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
        }
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="9"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
       }
      </div></td>
    </tr>
   </tbody>
  </table></code>
 <div class="richcontent-pre-copy">
  <span class="iconfont"></span>复制代码
 </div></pre>
<p>代码依然很好理解，当以 /books 为路径的 GET 请求到来时，会被转给 BookAction 的 get 方法。在控制器的活干完之后，根据返回的名称 success，下一步请求就会转到视图 /book.jsp 中去。</p>
<p>你看，对于路径映射和视图指向，为了不把这样的信息和主流程代码耦合在一起，上面讲了两种实现方法，它们各有优劣：</p>
<ul> 
 <li>放到配置文件中，好处是所有的映射都在一个文件里，方便管理。但是对于任何一个控制器逻辑，要寻找它对应的配置信息，需要去别的位置（即上文的 XML 中）寻找。<strong>这是一种代码横向分层解耦的方式，即分层方式和业务模块无关，或者说二者是“正交”的</strong>，这种方式我在 [第 11 讲] 讲解 IoC（控制反转）时会继续介绍。</li> 
 <li>使用注解，和控制器逻辑放在一起，好处是映射本身是和具体的控制器逻辑放在一起，当然，它们并非代码层面的耦合，而是通过注解的方式分离开。坏处是，如果需要考察所有的映射配置，那么就没有一个统一的文件可供概览。<strong>这是一种代码纵向分层解耦的方式，也就是说，配置是跟着业务模块走的</strong>。</li> 
</ul>
<p>无论使用以上哪一种方法，本质上都逃不过需要显式配置的命运。但无论哪种方法，其实都已经够简单了，可历史总是惊人的相似，总有帮“难伺候”的程序员，还是嫌麻烦！于是就有人想出了一个“终极偷懒”的办法——免掉配置。</p>
<p>这就需要利用 <strong>CoC 原则（Convention over Configuration，即规约优于配置）</strong>。比如，在使用 <a href="https://docs.spring.io/spring/docs/current/spring-framework-reference/web.html">Spring MVC</a> 这个 MVC 框架时，声明了 ControllerClassNameHandlerMapping 以后，对于这样没有配置任何映射信息的方法，会根据 Controller 类名的规约来完成映射：</p>
<pre style="position: relative;"><code>
  <table class="hljs-ln">
   <tbody>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
       public class BooksController extends AbstractController {
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
        @Override
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
        protected ModelAndView handleRequestInternal() throws Exception {
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
        ...
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
        }
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
       }
      </div></td>
    </tr>
   </tbody>
  </table></code>
 <div class="richcontent-pre-copy">
  <span class="iconfont"></span>复制代码
 </div></pre>
<p>在使用 /books 去访问的时候，请求就会被自动转交给定义好的控制器逻辑。</p>
<p>你看，规约优于配置看起来可以省掉很多工作对不对？没错！但是任何技术都有两面性，<strong>CoC 虽然省掉了一部分实际的配置工作，却没有改变映射匹配的流程本身，也不能省掉任何为了理解规约背后的“隐性知识”的学习成本</strong>。而且，规约往往只方便于解决最常见的配置，也就意味着，<strong>当需要更灵活的配置时，我们还是会被迫退化回显式配置</strong>。</p>
<h2>2. 请求参数绑定</h2>
<p>请求被送到了指定的控制器方法，接下去，需要从 HTTP 请求中把参数取出来，绑定到控制器这一层，以便使用。<strong>整个控制器的流程中，有两次重要的数据绑定，这是第一次，是为了控制器而绑定请求数据</strong>，后面在视图上下文构造这一步中还有一次绑定，那是为了视图而进行的。</p>
<p>和路径映射的配置一样，最先被考虑的方式，一定是用编程的方法实现的。比如在 Servlet 中，可以这样做：</p>
<pre style="position: relative;"><code>
  <table class="hljs-ln">
   <tbody>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
       request.getParameter("name")
      </div></td>
    </tr>
   </tbody>
  </table></code>
 <div class="richcontent-pre-copy">
  <span class="iconfont"></span>复制代码
 </div></pre>
<p>这并没有什么稀奇的对不对，想想我们前面学习的处理方法，参数应该能通过某种配置方式自动注入到控制器的对象属性或者方法参数中吧？一点都没错，并且，Struts 和 Spring MVC 各有各的做法，二者加起来，就恰巧印证了这句话。</p>
<p>还记得前面 Struts 的那个例子吗？给 BookAction 设置一个和参数同名的属性，并辅以规则的 get/set 方法，就能将请求中的参数自动注入。更强大的地方在于，如果这个属性是个复杂对象，只要参数按照规约命名了，那么它也能够被正确处理：</p>
<pre style="position: relative;"><code>
  <table class="hljs-ln">
   <tbody>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
       public class BookAction extends ActionSupport {
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
        private Page page;
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
        public void setPage { ... }
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
        public Page getPage { ... }
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
       }
      </div></td>
    </tr>
   </tbody>
  </table></code>
 <div class="richcontent-pre-copy">
  <span class="iconfont"></span>复制代码
 </div></pre>
<p>在这种设定下，如果 URI 是：</p>
<pre style="position: relative;"><code>
  <table class="hljs-ln">
   <tbody>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
       /books?page.pageSize=1&amp;page.pageNo=2&amp;page.orderBy=desc
      </div></td>
    </tr>
   </tbody>
  </table></code>
 <div class="richcontent-pre-copy">
  <span class="iconfont"></span>复制代码
 </div></pre>
<p>那么，pageSize、pageNo 和 orderBy 这三个值就会被设置到一个 Page 对象中，而这个 Page 对象则会被自动注入到 BookAction 的实例中去。</p>
<p>再来看看 Spring MVC 使用注解的方式来处理，和 URL 的结构放在一起观察，这种方式显然更为形象直观：</p>
<pre style="position: relative;"><code>
  <table class="hljs-ln">
   <tbody>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
       @RequestMapping("/{category}/books")
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
       public ModelAndView get(@PathVariable("category") String category, @RequestParam("author") String author){ ... }
      </div></td>
    </tr>
   </tbody>
  </table></code>
 <div class="richcontent-pre-copy">
  <span class="iconfont"></span>复制代码
 </div></pre>
<p>在这种配置下，如果 URI 是：</p>
<pre style="position: relative;"><code>
  <table class="hljs-ln">
   <tbody>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
       /comic/books?author=Jim
      </div></td>
    </tr>
   </tbody>
  </table></code>
 <div class="richcontent-pre-copy">
  <span class="iconfont"></span>复制代码
 </div></pre>
<p>那么，分类 comic 就会作为方法参数 category 的值传入，而作者 Jim 就会作为方法参数 author 的值传入。</p>
<h2>3. 参数验证</h2>
<p>参数验证的操作因为和请求对象密切相关，因此通常都是在控制器层完成的。在参数验证没有通过的情况下，往往会执行异常流程，转到错误页面，返回失败请求。Struts 提供了一个将参数验证解耦到配置文件的办法，请看下面的例子：</p>
<pre style="position: relative;"><code>
  <table class="hljs-ln">
   <tbody>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
       &lt;validators&gt;
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
        &lt;field name="name"&gt;
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
        &lt;field-validator type="requiredstring"&gt;
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
        &lt;param name="trim"&gt;true&lt;/param&gt;
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
        &lt;message&gt; 书名不得为空 &lt;/message&gt;
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
        &lt;/field-validator&gt;
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="7"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
        &lt;field-validator type="stringlength"&gt;
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="8"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
        &lt;param name="maxLength"&gt;100&lt;/param&gt;
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="9"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
        &lt;param name="minLength"&gt;1&lt;/param&gt;
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="10"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
        &lt;message&gt; 书名的长度必须在 1~100 之间 &lt;/message&gt;
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="11"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
        &lt;/field-validator&gt;
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="12"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
        &lt;/field&gt;
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="13"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
       &lt;/validators&gt;
      </div></td>
    </tr>
   </tbody>
  </table></code>
 <div class="richcontent-pre-copy">
  <span class="iconfont"></span>复制代码
 </div></pre>
<p>这就是一个非常简单的参数验证的规则，对于属性 name 定义了两条规则，一条是不得为空，另一条是长度必须在 1~100 之间，否则将返回错误信息。</p>
<p>类似的，Struts 也提供了基于注解的参数验证方式，上面的例子，如果使用注解来实现，就需要将注解加在自动注入参数的 set 方法处。代码见下：</p>
<pre style="position: relative;"><code>
  <table class="hljs-ln">
   <tbody>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
       @RequiredFieldValidator(trim = true, message = " 书名不得为空.")
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
       @StringLengthFieldValidator(minLength = "1", maxLength = "100", message = " 书名的长度必须在 1~100 之间 ")
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
       void setName(String name) { ... }
      </div></td>
    </tr>
   </tbody>
  </table></code>
 <div class="richcontent-pre-copy">
  <span class="iconfont"></span>复制代码
 </div></pre>
<h2>4. 视图上下文绑定</h2>
<p>在控制器中，我们经常需要将数据传入视图层，它可能会携带用户传入的参数，也可能会携带在控制器中查询模型得到的数据，而这个传入方式，就是<strong>将数据绑定到视图的上下文中。这就是我刚刚提到过的控制器层两大绑定中的第二个</strong>。</p>
<p>如果是使用 Servlet，那么我们一般可以用 setAttribute 的方法将参数设置到 request 对象中，这样在视图层就可以相应地使用 getAttribute 方法把该参数的值取出来。</p>
<pre style="position: relative;"><code>
  <table class="hljs-ln">
   <tbody>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
       request.setAttribute("page", xxx);
      </div></td>
    </tr>
   </tbody>
  </table></code>
 <div class="richcontent-pre-copy">
  <span class="iconfont"></span>复制代码
 </div></pre>
<p>对于 Struts 来说，它的方法和前面说的请求参数绑定统一了，即可以将想传递的值放到 Action 的对象属性中，这种方式绑定的属性，和请求参数自动绑定的属性没有什么区别，在视图层都可以直接从上下文中取出来。</p>
<p>接着前面 BookAction 的例子，绑定了一个 Page 对象，那么在视图层中就可以使用 OGNL（Object-Graph Navigation Language，对象导航图语言）表达式直接取得：</p>
<pre style="position: relative;"><code>
  <table class="hljs-ln">
   <tbody>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
       &lt;p&gt; 第 ${page.pageNo} 页 &lt;/p&gt;
      </div></td>
    </tr>
   </tbody>
  </table></code>
 <div class="richcontent-pre-copy">
  <span class="iconfont"></span>复制代码
 </div></pre>
<p>对于 Spring MVC，则是需要在控制器方法中传入一个类型为 Model 的对象，同时将需要绑定的对象通过调用 addAttribute 来完成绑定，这个过程和 Servlet 是类似的。</p>
<h2>总结思考</h2>
<p>今天我们学习了 MVC 架构中的控制器层，整个控制器的逻辑比较密集，从请求抵达，到转出到视图层去渲染，控制器的逻辑通常包括下面这几步，但是，严格说起来，下面这些步骤的任何一步，根据实际情况，都是可以省略的。</p>
<p><img src="https://static001.geekbang.org/resource/image/0a/34/0a0f9ad88c34ab5922e57e2b55ff6834.png" alt=""></p>
<p>我们对比了在原生 Servlet、Struts 框架和 Spring MVC 框架下，上面各个步骤的实现，希望你能够感悟到其中的“套路”。</p>
<p>是的，具体某一个框架的配置使用，是很容易学习和掌握的，这当然很好，但那只是死的知识，而这也只是机械记忆。而当我们去思考同一个框架中实现同一个特性的不同方法，或者是不同框架实现同一个特性的不同方法时，我们就会慢慢体会到技术的有趣之处。</p>
<p>因为我们会去思考，这些不同的“玩法”比较起来，各有什么优缺点，在实际应用中应该怎么去权衡和选择，甚至去想，如果让我去设计一个类似的特性，都有哪些办法可以实现。</p>
<p>好，下面我们就来检验一下今天所学的知识，请思考下面这样两个问题：</p>
<ul> 
 <li>我们提到了 MVC 框架中，两种常见的配置方式，一种是将配置放在横向解耦的单独一层，另一种是将配置和业务模块放在一起。你更喜欢哪一种，为什么？</li> 
 <li>在上面的图中，我列出了控制器层常见的六大步骤。那么，回想你经历过的项目，是将怎样的代码逻辑放在了控制器层呢？</li> 
</ul>
<p>对于今天学习的内容，对于思考题，以及通过比较学习“套路”的方式，如果你有想法，不妨和我在留言区一起讨论吧。</p>
<h2>选修课堂：动手实现一个简单的 MVC 系统</h2>
<p>这一章我们一直在学习 MVC，不动手实践是不行的。我们要使用 Servlet + JSP + JavaBean 这种相对原始的方法来实现一个最简单的 MVC 系统。</p>
<p>还记得我们在 <a href="https://time.geekbang.org/column/article/140196">[第 07 讲]</a> 中动手跑起来的 Tomcat 吗？现在请打开 Tomcat 的安装目录，设置好环境变量 CATALINA_HOME，以便于我们后面使用正确的 Tomcat 路径。以我的电脑为例：</p>
<pre style="position: relative;"><code>
  <table class="hljs-ln">
   <tbody>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
       export CATALINA_HOME=/usr/local/Cellar/tomcat/9.0.22/libexec
      </div></td>
    </tr>
   </tbody>
  </table></code>
 <div class="richcontent-pre-copy">
  <span class="iconfont"></span>复制代码
 </div></pre>
<p>我们打开 ${CATALINA_HOME}/webapps/ROOT/WEB-INF/web.xml，在 这个结束标签前，添加如下子标签：</p>
<pre style="position: relative;"><code>
  <table class="hljs-ln">
   <tbody>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
       &lt;servlet&gt;
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
        &lt;servlet-name&gt;BookServlet&lt;/servlet-name&gt;
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
        &lt;servlet-class&gt;BookServlet&lt;/servlet-class&gt;
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
       &lt;/servlet&gt;
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
       &lt;servlet-mapping&gt;
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
        &lt;servlet-name&gt;BookServlet&lt;/servlet-name&gt;
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="7"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
        &lt;url-pattern&gt;/books&lt;/url-pattern&gt;
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="8"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
        &lt;url-pattern&gt;/books/*&lt;/url-pattern&gt;
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="9"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
       &lt;/servlet-mapping&gt;
      </div></td>
    </tr>
   </tbody>
  </table></code>
 <div class="richcontent-pre-copy">
  <span class="iconfont"></span>复制代码
 </div></pre>
<p>注意这里配置了两个 URL 映射，/books 和 /books/{bookId} 两种类型的请求会全部映射到我们将建立的 Servlet 中。</p>
<p>在配置好 Servlet 的映射之后，进入 ${CATALINA_HOME}/webapps/ROOT/WEB-INF，并创建一个名为 classes 的文件夹，接着在这个文件夹下建立一个名为 BookServlet.java 的文件，并编辑它：</p>
<pre style="position: relative;"><code>
  <table class="hljs-ln">
   <tbody>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
       import java.io.IOException;
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
       import javax.servlet.ServletException;
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
       import javax.servlet.http.HttpServlet;
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
       import javax.servlet.http.HttpServletRequest;
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
       import javax.servlet.http.HttpServletResponse;
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line"> 
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="7"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
       public class BookServlet extends HttpServlet {
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="8"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
        protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="9"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
        String category = request.getParameter("category");
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="10"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
        request.setAttribute("categoryName", category);
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="11"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
        request.getRequestDispatcher("/book.jsp").forward(request, response);
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="12"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
        }
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="13"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
       }
      </div></td>
    </tr>
   </tbody>
  </table></code>
 <div class="richcontent-pre-copy">
  <span class="iconfont"></span>复制代码
 </div></pre>
<p>嗯，其实代码逻辑很简单，把 URL 中的 category 参数的值取出来，给一个新名字 categoryName 并传给 book.jsp。</p>
<p>好，接下来我们就要把上面的 Java 源文件编译成 class 文件了，执行：</p>
<pre style="position: relative;"><code>
  <table class="hljs-ln">
   <tbody>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
       javac BookServlet.java -classpath ${CATALINA_HOME}/lib/servlet-api.jar
      </div></td>
    </tr>
   </tbody>
  </table></code>
 <div class="richcontent-pre-copy">
  <span class="iconfont"></span>复制代码
 </div></pre>
<p>其中 servlet-api.jar 是 Tomcat 中存放的编译运行 Servlet 所必须的类库。这样，你应该能看到在 classes 目录下生成了 BookServlet.class 文件。</p>
<p>接着，在 ${CATALINA_HOME}/webapps/ROOT 下建立 book.jsp，并写入：</p>
<pre style="position: relative;"><code>
  <table class="hljs-ln">
   <tbody>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
       &lt;jsp:useBean id="date" class="java.util.Date" /&gt;
      </div></td>
    </tr>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
       Category name: &lt;%=request.getAttribute("categoryName") %&gt;, date: ${date.getYear()+1900}-${date.getMonth()+1}-${date.getDate()}
      </div></td>
    </tr>
   </tbody>
  </table></code>
 <div class="richcontent-pre-copy">
  <span class="iconfont"></span>复制代码
 </div></pre>
<p>第一行表示创建并使用一个 Date 类型的 JavaBean，第二行在显示结果的时候，category 使用了 JSP 特有的 scriptlet 的表达式，而日期则使用了 OGNL 表达式。注意 Date 对象返回的年份是以 1900 年为基准的偏移量，因此需要加上 1900；而返回的月份是从 0 开始往后排的，因此需要加上修正值 1。</p>
<p>好了，大功告成，我们快来执行 Tomcat 看看结果吧！启动 Tomcat：</p>
<pre style="position: relative;"><code>
  <table class="hljs-ln">
   <tbody>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
       catalina run
      </div></td>
    </tr>
   </tbody>
  </table></code>
 <div class="richcontent-pre-copy">
  <span class="iconfont"></span>复制代码
 </div></pre>
<p>打开浏览器，访问：</p>
<pre style="position: relative;"><code>
  <table class="hljs-ln">
   <tbody>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
       http://localhost:8080/books?category=art
      </div></td>
    </tr>
   </tbody>
  </table></code>
 <div class="richcontent-pre-copy">
  <span class="iconfont"></span>复制代码
 </div></pre>
<p>如果你看到类似如下字样，那么，恭喜你，成功了！现在，你可以回想一下刚才的实现，这些代码该怎样对应到 MVC 各个部分呢？</p>
<pre style="position: relative;"><code>
  <table class="hljs-ln">
   <tbody>
    <tr>
     <td class="hljs-ln-numbers">
      <div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td>
     <td class="hljs-ln-code">
      <div class="hljs-ln-line">
       Category name: art, date: 2019-8-5
      </div></td>
    </tr>
   </tbody>
  </table></code>
 <div class="richcontent-pre-copy">
  <span class="iconfont"></span>复制代码
 </div></pre>
<h2>扩展阅读</h2>
<ul> 
 <li>对于 <a href="https://struts.apache.org/index.html">Struts</a> 和 <a href="https://docs.spring.io/spring/docs/current/spring-framework-reference/web.html">Spring MVC</a>，文中已经给出了官方链接，如果你想阅读简洁的中文版教程，可以看看这个 <a href="https://doc.yonyoucloud.com/doc/wiki/project/struts-2/architecture.html">Struts 2 教程</a>和这个 <a href="https://www.w3cschool.cn/wkspring/9pf81ha5.html">Spring MVC 教程</a>。</li> 
 <li>文中提到了使用 ControllerClassNameHandlerMapping 来贯彻“规约优于配置”的思想，达到对具体的映射免配置的目的，如果你感兴趣的话，<a href="https://www.tutorialspoint.com/springmvc/springmvc_controllerclassnamehandlermapping">Spring MVC - Controller Class Name Handler Mapping Example</a> 这篇文章有很好的介绍。</li> 
 <li><a href="https://www.ibm.com/developerworks/cn/opensource/os-cn-ognl/index.html">OGNL 语言介绍与实践</a>，文中提到了 OGNL 表达式，感兴趣的话这篇文章是很好的入门。</li> 
</ul>
<p><img src="https://static001.geekbang.org/resource/image/11/8b/1181246bbd51ce348d5729696d1dc28b.jpg" alt="unpreview"></p> |             |book   |0     |full_html   |zh-hans  |39          |
|----------||-------------|-------|------|------------|---------|------------|

2020-11-19 17:56:51.003 INFO  jdbc.sqltiming Line:373 - select nodefiledd0_.nid as nid1_10_, nodefiledd0_.changed as changed2_10_, nodefiledd0_.created 
as created3_10_, nodefiledd0_.default_langcode as default_4_10_, nodefiledd0_.langcode as langcode5_10_, 
nodefiledd0_.promote as promote6_10_, nodefiledd0_.revision_translation_affected as revision7_10_, 
nodefiledd0_.status as status8_10_, nodefiledd0_.sticky as sticky9_10_, nodefiledd0_.title 
as title10_10_, nodefiledd0_.type as type11_10_, nodefiledd0_.uid as uid12_10_, nodefiledd0_.vid 
as vid13_10_ from node_field_data nodefiledd0_ where nodefiledd0_.nid=39 
 {executed in 1 msec}
2020-11-19 17:56:51.003 INFO  jdbc.resultsettable Line:610 - 
|----|-----------|-----------|-----------------|---------|--------|------------------------------|-------|-------|----------------------------|-----|----|----|
|nid |changed    |created    |default_langcode |langcode |promote |revision_translation_affected |status |sticky |title                       |type |uid |vid |
|----|-----------|-----------|-----------------|---------|--------|------------------------------|-------|-------|----------------------------|-----|----|----|
|39  |1605756208 |1605756208 |1                |zh-hans  |0       |1                             |1      |0      |10丨MVC架构解析：控制器（Controller）篇 |book |1   |39  |
|----|-----------|-----------|-----------------|---------|--------|------------------------------|-------|-------|----------------------------|-----|----|----|

2020-11-19 17:56:51.008 INFO  jdbc.sqltiming Line:373 - select nodefieldr0_.nid as nid1_11_0_, nodefieldr0_.changed as changed2_11_0_, nodefieldr0_.created 
as created3_11_0_, nodefieldr0_.default_langcode as default_4_11_0_, nodefieldr0_.langcode 
as langcode5_11_0_, nodefieldr0_.promote as promote6_11_0_, nodefieldr0_.revision_translation_affected 
as revision7_11_0_, nodefieldr0_.status as status8_11_0_, nodefieldr0_.sticky as sticky9_11_0_, 
nodefieldr0_.title as title10_11_0_, nodefieldr0_.uid as uid11_11_0_, nodefieldr0_.vid as vid12_11_0_ 
from node_field_revision nodefieldr0_ where nodefieldr0_.nid=39 
 {executed in 1 msec}
2020-11-19 17:56:51.009 INFO  jdbc.resultsettable Line:610 - 
|---------|-----------|-----------|-----------------|---------|--------|------------------------------|-------|-------|----------------------------|----|----|
|nid      |changed    |created    |default_langcode |langcode |promote |revision_translation_affected |status |sticky |title                       |uid |vid |
|---------|-----------|-----------|-----------------|---------|--------|------------------------------|-------|-------|----------------------------|----|----|
|[unread] |1605756208 |1605756208 |1                |zh-hans  |0       |1                             |1      |0      |10丨MVC架构解析：控制器（Controller）篇 |1   |39  |
|---------|-----------|-----------|-----------------|---------|--------|------------------------------|-------|-------|----------------------------|----|----|

2020-11-19 17:56:51.014 INFO  jdbc.sqltiming Line:373 - update node_field_data set changed=1605779811, created=1605779811, default_langcode=1, langcode='zh-hans', 
promote=0, revision_translation_affected=1, status=1, sticky=0, title='10丨MVC架构解析：控制器（Controller）篇', 
type='book', uid=1, vid=39 where nid=39 
 {executed in 0 msec}
2020-11-19 17:56:51.015 INFO  jdbc.sqltiming Line:373 - update node_field_revision set changed=1605779811, created=1605779811, default_langcode=1, 
langcode='zh-hans', promote=0, revision_translation_affected=1, status=1, sticky=0, title='10丨MVC架构解析：控制器（Controller）篇', 
uid=1, vid=39 where nid=39 
 {executed in 0 msec}
2020-11-19 17:56:51.023 INFO  jdbc.sqltiming Line:373 - select bookfieldm0_.entity_id as entity_i1_8_, bookfieldm0_.bundle as bundle2_8_, bookfieldm0_.delta 
as delta3_8_, bookfieldm0_.langcode as langcode4_8_, bookfieldm0_.field_media_value as field_me5_8_, 
bookfieldm0_.revision_id as revision6_8_ from node__field_media bookfieldm0_ where bookfieldm0_.entity_id=39 
 {executed in 0 msec}
2020-11-19 17:56:51.024 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|------------|
|entity_id |bundle |delta |langcode |field_media_value|revision_id |
|----------|-------|------|---------||------------|
|39        |book   |0     |zh-hans  |https://qdall01.baidupcs.com/file/8178f19a2912fcd55770d808effb6dec?bkt=en-26dcfdb4e5ee1a4930298e6fc2810c3c42b19417ea8173f4eeee2f07305a4be7cd0add1b242845e9&fid=3757516097-778750-30241195742902&time=1605756206&sign=FDTAXUGERLQlBHSKfWqir-DCb740ccc5511e5e8fedcff06b081203-hjGn3QtTblRUYG6jT9cvdKxy3h4%3D&to=92&size=13623314&sta_dx=13623314&sta_cs=3859&sta_ft=m4a&sta_ct=7&sta_mt=0&fm2=MH%2CYangquan%2CAnywhere%2C%2Cshanghai%2Cct&ctime=1570414486&mtime=1605754778&resv0=-1&resv1=0&resv2=rlim&resv3=2&resv4=13623314&vuk=3757516097&iv=0&htype=&randtype=em&newver=1&newfm=1&secfm=1&flow_ver=3&pkey=en-5ecdc0debc6326d9d2a6072b8c2b5a1e20fd8fd140e30610018152d07dab6094e1d1a3f4c4ce3390&sl=76480590&expires=8h&rt=pr&r=959203110&mlogid=7502289557144965213&vbdid=2247232042&fin=10%E4%B8%A8MVC%E6%9E%B6%E6%9E%84%E8%A7%A3%E6%9E%90%EF%BC%9A%E6%8E%A7%E5%88%B6%E5%99%A8%EF%BC%88Controller%EF%BC%89%E7%AF%87.m4a&bflag=92,34-92&rtype=1&dp-logid=7502289557144965213&dp-callid=0.1.1&hps=1&tsl=80&csl=80&fsl=-1&csign=yVzLQPCt4DblfMLqd2BCjd2RnqQ%3D&so=0&ut=6&uter=0&serv=0&uc=1458616558&ti=9feb8afe5adad8c3eaa7ef7e3cb3942ab75c1c6980981ac3&hflag=30&adg=c_15d187590626c675056c89c8026cfc17&reqlabel=778750_l_1bf9445f27094ab64c9f1cb0bdf7ccfa_-1_dd2c452b8e51a0c74130d7cf32c48a2d&ibp=1&by=themis&filename=10%E4%B8%A8MVC%E6%9E%B6%E6%9E%84%E8%A7%A3%E6%9E%90%EF%BC%9A%E6%8E%A7%E5%88%B6%E5%99%A8%EF%BC%88Controller%EF%BC%89%E7%AF%87.m4a |39          |
|----------|-------|------|---------||------------|

2020-11-19 17:56:51.029 INFO  jdbc.sqltiming Line:373 - update node__field_media set bundle='book', delta=0, langcode='zh-hans', field_media_value='https://qdall01.baidupcs.com/file/8178f19a2912fcd55770d808effb6dec?bkt=en-26dcfdb4e5ee1a4930298e6fc2810c3c42b19417ea8173f4eeee2f07305a4be7cd0add1b242845e9&fid=3757516097-778750-692024956521631&time=1605779808&sign=FDTAXUGERLQlBHSKfWqir-DCb740ccc5511e5e8fedcff06b081203-uNgXhfYt7mrusi9rxFrvcwxqBaA%3D&to=92&size=13623314&sta_dx=13623314&sta_cs=3864&sta_ft=m4a&sta_ct=7&sta_mt=0&fm2=MH%2CYangquan%2CAnywhere%2C%2Cshanghai%2Cct&ctime=1570414486&mtime=1605778299&resv0=-1&resv1=0&resv2=rlim&resv3=2&resv4=13623314&vuk=3757516097&iv=0&htype=&randtype=em&newver=1&newfm=1&secfm=1&flow_ver=3&pkey=en-5ecdc0debc6326d9d2a6072b8c2b5a1e20fd8fd140e30610018152d07dab6094e1d1a3f4c4ce3390&sl=76480590&expires=8h&rt=pr&r=184613383&mlogid=7508625197783973314&vbdid=2247232042&fin=10%E4%B8%A8MVC%E6%9E%B6%E6%9E%84%E8%A7%A3%E6%9E%90%EF%BC%9A%E6%8E%A7%E5%88%B6%E5%99%A8%EF%BC%88Controller%EF%BC%89%E7%AF%87.m4a&bflag=92,34-92&rtype=1&dp-logid=7508625197783973314&dp-callid=0.1.1&hps=1&tsl=80&csl=80&fsl=-1&csign=yVzLQPCt4DblfMLqd2BCjd2RnqQ%3D&so=0&ut=6&uter=0&serv=0&uc=1458616558&ti=34c17094e7d5a0c90eb5f62652fc409071210c2bffed00c8&hflag=30&adg=c_15d187590626c675056c89c8026cfc17&reqlabel=778750_l_1bf9445f27094ab64c9f1cb0bdf7ccfa_-1_dd2c452b8e51a0c74130d7cf32c48a2d&ibp=1&by=themis&filename=10%E4%B8%A8MVC%E6%9E%B6%E6%9E%84%E8%A7%A3%E6%9E%90%EF%BC%9A%E6%8E%A7%E5%88%B6%E5%99%A8%EF%BC%88Controller%EF%BC%89%E7%AF%87.m4a', 
revision_id=39 where entity_id=39 
 {executed in 0 msec}
2020-11-19 17:56:51.033 INFO  jdbc.sqltiming Line:373 - select nodefieldm0_.entity_id as entity_i1_17_0_, nodefieldm0_.bundle as bundle2_17_0_, nodefieldm0_.delta 
as delta3_17_0_, nodefieldm0_.langcode as langcode4_17_0_, nodefieldm0_.field_media_value as 
field_me5_17_0_, nodefieldm0_.revision_id as revision6_17_0_ from node_revision__field_media 
nodefieldm0_ where nodefieldm0_.entity_id=39 
 {executed in 0 msec}
2020-11-19 17:56:51.034 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------||------------|
|entity_id |bundle |delta |langcode |field_media_value|revision_id |
|----------|-------|------|---------||------------|
|[unread]  |book   |0     |zh-hans  |https://qdall01.baidupcs.com/file/8178f19a2912fcd55770d808effb6dec?bkt=en-26dcfdb4e5ee1a4930298e6fc2810c3c42b19417ea8173f4eeee2f07305a4be7cd0add1b242845e9&fid=3757516097-778750-30241195742902&time=1605756206&sign=FDTAXUGERLQlBHSKfWqir-DCb740ccc5511e5e8fedcff06b081203-hjGn3QtTblRUYG6jT9cvdKxy3h4%3D&to=92&size=13623314&sta_dx=13623314&sta_cs=3859&sta_ft=m4a&sta_ct=7&sta_mt=0&fm2=MH%2CYangquan%2CAnywhere%2C%2Cshanghai%2Cct&ctime=1570414486&mtime=1605754778&resv0=-1&resv1=0&resv2=rlim&resv3=2&resv4=13623314&vuk=3757516097&iv=0&htype=&randtype=em&newver=1&newfm=1&secfm=1&flow_ver=3&pkey=en-5ecdc0debc6326d9d2a6072b8c2b5a1e20fd8fd140e30610018152d07dab6094e1d1a3f4c4ce3390&sl=76480590&expires=8h&rt=pr&r=959203110&mlogid=7502289557144965213&vbdid=2247232042&fin=10%E4%B8%A8MVC%E6%9E%B6%E6%9E%84%E8%A7%A3%E6%9E%90%EF%BC%9A%E6%8E%A7%E5%88%B6%E5%99%A8%EF%BC%88Controller%EF%BC%89%E7%AF%87.m4a&bflag=92,34-92&rtype=1&dp-logid=7502289557144965213&dp-callid=0.1.1&hps=1&tsl=80&csl=80&fsl=-1&csign=yVzLQPCt4DblfMLqd2BCjd2RnqQ%3D&so=0&ut=6&uter=0&serv=0&uc=1458616558&ti=9feb8afe5adad8c3eaa7ef7e3cb3942ab75c1c6980981ac3&hflag=30&adg=c_15d187590626c675056c89c8026cfc17&reqlabel=778750_l_1bf9445f27094ab64c9f1cb0bdf7ccfa_-1_dd2c452b8e51a0c74130d7cf32c48a2d&ibp=1&by=themis&filename=10%E4%B8%A8MVC%E6%9E%B6%E6%9E%84%E8%A7%A3%E6%9E%90%EF%BC%9A%E6%8E%A7%E5%88%B6%E5%99%A8%EF%BC%88Controller%EF%BC%89%E7%AF%87.m4a |39          |
|----------|-------|------|---------|--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|------------|

2020-11-19 17:56:51.039 INFO  jdbc.sqltiming Line:373 - update node_revision__field_media set bundle='book', delta=0, langcode='zh-hans', field_media_value='https://qdall01.baidupcs.com/file/8178f19a2912fcd55770d808effb6dec?bkt=en-26dcfdb4e5ee1a4930298e6fc2810c3c42b19417ea8173f4eeee2f07305a4be7cd0add1b242845e9&fid=3757516097-778750-692024956521631&time=1605779808&sign=FDTAXUGERLQlBHSKfWqir-DCb740ccc5511e5e8fedcff06b081203-uNgXhfYt7mrusi9rxFrvcwxqBaA%3D&to=92&size=13623314&sta_dx=13623314&sta_cs=3864&sta_ft=m4a&sta_ct=7&sta_mt=0&fm2=MH%2CYangquan%2CAnywhere%2C%2Cshanghai%2Cct&ctime=1570414486&mtime=1605778299&resv0=-1&resv1=0&resv2=rlim&resv3=2&resv4=13623314&vuk=3757516097&iv=0&htype=&randtype=em&newver=1&newfm=1&secfm=1&flow_ver=3&pkey=en-5ecdc0debc6326d9d2a6072b8c2b5a1e20fd8fd140e30610018152d07dab6094e1d1a3f4c4ce3390&sl=76480590&expires=8h&rt=pr&r=184613383&mlogid=7508625197783973314&vbdid=2247232042&fin=10%E4%B8%A8MVC%E6%9E%B6%E6%9E%84%E8%A7%A3%E6%9E%90%EF%BC%9A%E6%8E%A7%E5%88%B6%E5%99%A8%EF%BC%88Controller%EF%BC%89%E7%AF%87.m4a&bflag=92,34-92&rtype=1&dp-logid=7508625197783973314&dp-callid=0.1.1&hps=1&tsl=80&csl=80&fsl=-1&csign=yVzLQPCt4DblfMLqd2BCjd2RnqQ%3D&so=0&ut=6&uter=0&serv=0&uc=1458616558&ti=34c17094e7d5a0c90eb5f62652fc409071210c2bffed00c8&hflag=30&adg=c_15d187590626c675056c89c8026cfc17&reqlabel=778750_l_1bf9445f27094ab64c9f1cb0bdf7ccfa_-1_dd2c452b8e51a0c74130d7cf32c48a2d&ibp=1&by=themis&filename=10%E4%B8%A8MVC%E6%9E%B6%E6%9E%84%E8%A7%A3%E6%9E%90%EF%BC%9A%E6%8E%A7%E5%88%B6%E5%99%A8%EF%BC%88Controller%EF%BC%89%E7%AF%87.m4a', 
revision_id=39 where entity_id=39 
 {executed in 1 msec}
2020-11-19 17:56:51.043 INFO  jdbc.sqltiming Line:373 - select bookfieldc0_.entity_id as entity_i1_5_, bookfieldc0_.bundle as bundle2_5_, bookfieldc0_.field_comment_value 
as field_co3_5_, bookfieldc0_.delta as delta4_5_, bookfieldc0_.field_comment_format as field_co5_5_, 
bookfieldc0_.langcode as langcode6_5_, bookfieldc0_.revision_id as revision7_5_ from node__field_comment 
bookfieldc0_ where bookfieldc0_.entity_id=39 
 {executed in 0 msec}
2020-11-19 17:56:51.044 INFO  jdbc.resultsettable Line:610 - 
|----------|-------||------|---------------------|---------|------------|
|entity_id |bundle |field_comment_value|delta |field_comment_format |langcode |revision_id |
|----------|-------||------|---------------------|---------|------------|
|39        |book   |<li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/10/59/1d/c7de1a9b.jpg" class="_2273kGdT_0"> 
 <div class="_2CG0SquK_0">
  <div class="_304R4gla_0">
   <div>
    <div class="_18Dng5rT_0">
     <span>Kada</span> <!---->
    </div> 
    <div class="_1H1Z49Dr_0">
     2019-10-03
    </div>
   </div> <!---->
  </div> 
  <div>
   <div class="_3M6kV3zb_0">
    Django使用配置文件，Flask使用装饰器。
   </div> 
   <div class="_2r3UB1GX_0">
    <span>展开</span><i class="iconfont"></i>
   </div> <!----> 
   <div class="_1w8H0ktn_0 _2A421P4G_0">
    <div class="_2jsFl-X0_0">
     <i class="iconfont"></i> <span></span>
    </div> 
    <div class="_2P4B1Hdm_0">
     <i class="iconfont"></i> <span class=""></span>
    </div> <!---->
   </div>
  </div>
 </div></li> |0     |full_html            |zh-hans  |39          |
|----------|-------||------|---------------------|---------|------------|

2020-11-19 17:56:51.049 INFO  jdbc.sqltiming Line:373 - select nodefieldc0_.entity_id as entity_i1_14_0_, nodefieldc0_.bundle as bundle2_14_0_, nodefieldc0_.field_comment_value 
as field_co3_14_0_, nodefieldc0_.delta as delta4_14_0_, nodefieldc0_.field_comment_format as 
field_co5_14_0_, nodefieldc0_.langcode as langcode6_14_0_, nodefieldc0_.revision_id as revision7_14_0_ 
from node_revision__field_comment nodefieldc0_ where nodefieldc0_.entity_id=39 
 {executed in 0 msec}
2020-11-19 17:56:51.050 INFO  jdbc.resultsettable Line:610 - 
|----------|-------||------|---------------------|---------|------------|
|entity_id |bundle |field_comment_value|delta |field_comment_format |langcode |revision_id |
|----------|-------||------|---------------------|---------|------------|
|[unread]  |book   |<li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/10/59/1d/c7de1a9b.jpg" class="_2273kGdT_0"> 
 <div class="_2CG0SquK_0">
  <div class="_304R4gla_0">
   <div>
    <div class="_18Dng5rT_0">
     <span>Kada</span> <!---->
    </div> 
    <div class="_1H1Z49Dr_0">
     2019-10-03
    </div>
   </div> <!---->
  </div> 
  <div>
   <div class="_3M6kV3zb_0">
    Django使用配置文件，Flask使用装饰器。
   </div> 
   <div class="_2r3UB1GX_0">
    <span>展开</span><i class="iconfont"></i>
   </div> <!----> 
   <div class="_1w8H0ktn_0 _2A421P4G_0">
    <div class="_2jsFl-X0_0">
     <i class="iconfont"></i> <span></span>
    </div> 
    <div class="_2P4B1Hdm_0">
     <i class="iconfont"></i> <span class=""></span>
    </div> <!---->
   </div>
  </div>
 </div></li> |0     |full_html            |zh-hans  |39          |
|----------|-------||------|---------------------|---------|------------|

2020-11-19 17:56:51.055 INFO  jdbc.sqltiming Line:373 - select bookfieldt0_.entity_id as entity_i1_9_, bookfieldt0_.bundle as bundle2_9_, bookfieldt0_.delta 
as delta3_9_, bookfieldt0_.langcode as langcode4_9_, bookfieldt0_.revision_id as revision5_9_, 
bookfieldt0_.field_thumb_value as field_th6_9_ from node__field_thumb bookfieldt0_ where bookfieldt0_.entity_id=39 
 {executed in 0 msec}
2020-11-19 17:56:51.055 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------|-----------------------------------------------------------------------------------------|
|entity_id |bundle |delta |langcode |revision_id |field_thumb_value                                                                        |
|----------|-------|------|---------|------------|-----------------------------------------------------------------------------------------|
|39        |book   |0     |zh-hans  |39          |https://static001.geekbang.org/resource/image/ec/e4/eca17dc7649c338b6f53015e6a38fde4.jpg |
|----------|-------|------|---------|------------|-----------------------------------------------------------------------------------------|

2020-11-19 17:56:51.061 INFO  jdbc.sqltiming Line:373 - select nodefieldt0_.entity_id as entity_i1_18_0_, nodefieldt0_.bundle as bundle2_18_0_, nodefieldt0_.delta 
as delta3_18_0_, nodefieldt0_.langcode as langcode4_18_0_, nodefieldt0_.revision_id as revision5_18_0_, 
nodefieldt0_.field_thumb_value as field_th6_18_0_ from node_revision__field_thumb nodefieldt0_ 
where nodefieldt0_.entity_id=39 
 {executed in 1 msec}
2020-11-19 17:56:51.061 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------|-----------------------------------------------------------------------------------------|
|entity_id |bundle |delta |langcode |revision_id |field_thumb_value                                                                        |
|----------|-------|------|---------|------------|-----------------------------------------------------------------------------------------|
|[unread]  |book   |0     |zh-hans  |39          |https://static001.geekbang.org/resource/image/ec/e4/eca17dc7649c338b6f53015e6a38fde4.jpg |
|----------|-------|------|---------|------------|-----------------------------------------------------------------------------------------|

2020-11-19 17:56:51.067 INFO  jdbc.sqltiming Line:373 - select bookfieldf0_.entity_id as entity_i1_6_0_, bookfieldf0_.bundle as bundle2_6_0_, bookfieldf0_.delta 
as delta3_6_0_, bookfieldf0_.field_fenlei_target_id as field_fe4_6_0_, bookfieldf0_.langcode 
as langcode5_6_0_, bookfieldf0_.revision_id as revision6_6_0_ from node__field_fenlei bookfieldf0_ 
where bookfieldf0_.entity_id=39 
 {executed in 1 msec}
2020-11-19 17:56:51.067 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------------|---------|------------|
|entity_id |bundle |delta |field_fenlei_target_id |langcode |revision_id |
|----------|-------|------|-----------------------|---------|------------|
|[unread]  |book   |0     |1                      |zh-hans  |39          |
|----------|-------|------|-----------------------|---------|------------|

2020-11-19 17:56:51.073 INFO  jdbc.sqltiming Line:373 - select nodefieldf0_.entity_id as entity_i1_15_0_, nodefieldf0_.bundle as bundle2_15_0_, nodefieldf0_.delta 
as delta3_15_0_, nodefieldf0_.field_fenlei_target_id as field_fe4_15_0_, nodefieldf0_.langcode 
as langcode5_15_0_, nodefieldf0_.revision_id as revision6_15_0_ from node_revision__field_fenlei 
nodefieldf0_ where nodefieldf0_.entity_id=39 
 {executed in 1 msec}
2020-11-19 17:56:51.073 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------------|---------|------------|
|entity_id |bundle |delta |field_fenlei_target_id |langcode |revision_id |
|----------|-------|------|-----------------------|---------|------------|
|[unread]  |book   |0     |1                      |zh-hans  |39          |
|----------|-------|------|-----------------------|---------|------------|

2020-11-19 17:56:51.079 INFO  jdbc.sqltiming Line:373 - select bookchecke0_.item_id as item_id1_2_, bookchecke0_.fsid as fsid2_2_, bookchecke0_.got 
as got3_2_, bookchecke0_.name as name4_2_ from book_check bookchecke0_ where bookchecke0_.fsid='162849410279807' 
and bookchecke0_.name='net_content' 
 {executed in 1 msec}
2020-11-19 17:56:51.079 INFO  jdbc.resultsettable Line:610 - 
|--------|-----|----|-----|
|item_id |fsid |got |name |
|--------|-----|----|-----|
|--------|-----|----|-----|

2020-11-19 19:57:35.698 INFO  geek.me.javaapi.JavaApiApplication Line:651 - No active profile set, falling back to default profiles: default
2020-11-19 19:57:37.934 INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate Line:127 - Bootstrapping Spring Data JPA repositories in DEFERRED mode.
2020-11-19 19:57:38.476 INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate Line:187 - Finished Spring Data repository scanning in 503ms. Found 20 JPA repository interfaces.
2020-11-19 19:57:39.295 INFO  org.springframework.cloud.context.scope.GenericScope Line:295 - BeanFactory id=a57235e8-b792-3882-8d3a-8bc20defb1fe
2020-11-19 19:57:40.864 INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer Line:108 - Tomcat initialized with port(s): 8080 (http)
2020-11-19 19:57:40.904 INFO  org.apache.coyote.http11.Http11NioProtocol Line:173 - Initializing ProtocolHandler ["http-nio-8080"]
2020-11-19 19:57:40.907 INFO  org.apache.catalina.core.StandardService Line:173 - Starting service [Tomcat]
2020-11-19 19:57:40.907 INFO  org.apache.catalina.core.StandardEngine Line:173 - Starting Servlet engine: [Apache Tomcat/9.0.37]
2020-11-19 19:57:41.405 INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Line:173 - Initializing Spring embedded WebApplicationContext
2020-11-19 19:57:41.406 INFO  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext Line:285 - Root WebApplicationContext: initialization completed in 5622 ms
2020-11-19 19:57:42.217 INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Line:181 - Initializing ExecutorService 'applicationTaskExecutor'
2020-11-19 19:57:42.261 INFO  com.zaxxer.hikari.HikariDataSource Line:110 - HikariPool-1 - Starting...
2020-11-19 19:57:42.781 INFO  com.zaxxer.hikari.HikariDataSource Line:123 - HikariPool-1 - Start completed.
2020-11-19 19:57:43.222 INFO  org.hibernate.jpa.internal.util.LogHelper Line:31  - HHH000204: Processing PersistenceUnitInfo [name: default]
2020-11-19 19:57:43.481 INFO  org.hibernate.Version Line:44  - HHH000412: Hibernate ORM core version 5.4.20.Final
2020-11-19 19:57:44.282 INFO  org.hibernate.annotations.common.Version Line:49  - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-11-19 19:57:44.707 INFO  com.netflix.config.sources.URLConfigurationSource Line:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-11-19 19:57:44.733 INFO  com.netflix.config.sources.URLConfigurationSource Line:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-11-19 19:57:44.895 INFO  org.hibernate.dialect.Dialect Line:170 - HHH000400: Using dialect: org.hibernate.dialect.MySQL55Dialect
2020-11-19 19:57:47.415 INFO  org.apache.coyote.http11.Http11NioProtocol Line:173 - Starting ProtocolHandler ["http-nio-8080"]
2020-11-19 19:57:47.560 INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer Line:220 - Tomcat started on port(s): 8080 (http) with context path ''
2020-11-19 19:57:47.938 INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Line:173 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-11-19 19:57:47.939 INFO  org.springframework.web.servlet.DispatcherServlet Line:525 - Initializing Servlet 'dispatcherServlet'
2020-11-19 19:57:47.980 INFO  org.springframework.web.servlet.DispatcherServlet Line:547 - Completed initialization in 40 ms
2020-11-19 19:57:48.552 INFO  org.springframework.data.repository.config.DeferredRepositoryInitializationListener Line:49  - Triggering deferred initialization of Spring Data repositories…
2020-11-19 19:57:48.749 INFO  org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator Line:52  - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-11-19 19:57:48.801 INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean Line:416 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-11-19 19:57:51.653 INFO  org.springframework.data.repository.config.DeferredRepositoryInitializationListener Line:53  - Spring Data repositories initialized!
2020-11-19 19:57:51.676 INFO  geek.me.javaapi.JavaApiApplication Line:61  - Started JavaApiApplication in 20.57 seconds (JVM running for 25.487)
2020-11-19 19:58:19.619 INFO  jdbc.sqltiming Line:373 - select queueentit0_.item_id as item_id1_19_0_, queueentit0_.base_path as base_pat2_19_0_, queueentit0_.name 
as name3_19_0_, queueentit0_.todo as todo4_19_0_ from queue_new queueentit0_ where queueentit0_.item_id=483242313422720 
 {executed in 8 msec}
2020-11-19 19:58:19.640 INFO  jdbc.resultsettable Line:610 - 
|--------|----------|-----|-----|
|item_id |base_path |name |todo |
|--------|----------|-----|-----|
|--------|----------|-----|-----|

2020-11-19 19:58:19.765 INFO  jdbc.sqltiming Line:373 - insert into queue_new (base_path, name, todo, item_id) values ('00-资源文件/14-极客时间/01-专栏课/01-50/', 
'新建文件夹', 1, 483242313422720) 
 {executed in 2 msec}
2020-11-19 19:58:19.781 INFO  jdbc.sqltiming Line:373 - select queueentit0_.item_id as item_id1_19_0_, queueentit0_.base_path as base_pat2_19_0_, queueentit0_.name 
as name3_19_0_, queueentit0_.todo as todo4_19_0_ from queue_new queueentit0_ where queueentit0_.item_id=930228242468283 
 {executed in 1 msec}
2020-11-19 19:58:19.784 INFO  jdbc.resultsettable Line:610 - 
|--------|----------|-----|-----|
|item_id |base_path |name |todo |
|--------|----------|-----|-----|
|--------|----------|-----|-----|

2020-11-19 19:58:19.790 INFO  jdbc.sqltiming Line:373 - insert into queue_new (base_path, name, todo, item_id) values ('00-资源文件/14-极客时间/01-专栏课/01-50/', 
'50-深入拆解Tomcat & Jetty', 1, 930228242468283) 
 {executed in 1 msec}
2020-11-19 19:58:19.799 INFO  jdbc.sqltiming Line:373 - select queueentit0_.item_id as item_id1_19_0_, queueentit0_.base_path as base_pat2_19_0_, queueentit0_.name 
as name3_19_0_, queueentit0_.todo as todo4_19_0_ from queue_new queueentit0_ where queueentit0_.item_id=230935031759751 
 {executed in 1 msec}
2020-11-19 19:58:19.802 INFO  jdbc.resultsettable Line:610 - 
|--------|----------|-----|-----|
|item_id |base_path |name |todo |
|--------|----------|-----|-----|
|--------|----------|-----|-----|

2020-11-19 19:58:19.807 INFO  jdbc.sqltiming Line:373 - insert into queue_new (base_path, name, todo, item_id) values ('00-资源文件/14-极客时间/01-专栏课/01-50/', 
'49-赵成的运维体系管理课', 1, 230935031759751) 
 {executed in 1 msec}
2020-11-19 19:58:19.816 INFO  jdbc.sqltiming Line:373 - select queueentit0_.item_id as item_id1_19_0_, queueentit0_.base_path as base_pat2_19_0_, queueentit0_.name 
as name3_19_0_, queueentit0_.todo as todo4_19_0_ from queue_new queueentit0_ where queueentit0_.item_id=416203002069578 
 {executed in 1 msec}
2020-11-19 19:58:19.819 INFO  jdbc.resultsettable Line:610 - 
|--------|----------|-----|-----|
|item_id |base_path |name |todo |
|--------|----------|-----|-----|
|--------|----------|-----|-----|

2020-11-19 19:58:19.825 INFO  jdbc.sqltiming Line:373 - insert into queue_new (base_path, name, todo, item_id) values ('00-资源文件/14-极客时间/01-专栏课/01-50/', 
'48-从0开始做增长', 1, 416203002069578) 
 {executed in 1 msec}
2020-11-19 19:58:19.836 INFO  jdbc.sqltiming Line:373 - select queueentit0_.item_id as item_id1_19_0_, queueentit0_.base_path as base_pat2_19_0_, queueentit0_.name 
as name3_19_0_, queueentit0_.todo as todo4_19_0_ from queue_new queueentit0_ where queueentit0_.item_id=454553781238242 
 {executed in 1 msec}
2020-11-19 19:58:19.838 INFO  jdbc.resultsettable Line:610 - 
|--------|----------|-----|-----|
|item_id |base_path |name |todo |
|--------|----------|-----|-----|
|--------|----------|-----|-----|

2020-11-19 19:58:19.844 INFO  jdbc.sqltiming Line:373 - insert into queue_new (base_path, name, todo, item_id) values ('00-资源文件/14-极客时间/01-专栏课/01-50/', 
'47-Java性能调优实战', 1, 454553781238242) 
 {executed in 1 msec}
2020-11-19 19:58:19.854 INFO  jdbc.sqltiming Line:373 - select queueentit0_.item_id as item_id1_19_0_, queueentit0_.base_path as base_pat2_19_0_, queueentit0_.name 
as name3_19_0_, queueentit0_.todo as todo4_19_0_ from queue_new queueentit0_ where queueentit0_.item_id=515518179556868 
 {executed in 1 msec}
2020-11-19 19:58:19.857 INFO  jdbc.resultsettable Line:610 - 
|--------|----------|-----|-----|
|item_id |base_path |name |todo |
|--------|----------|-----|-----|
|--------|----------|-----|-----|

2020-11-19 19:58:19.862 INFO  jdbc.sqltiming Line:373 - insert into queue_new (base_path, name, todo, item_id) values ('00-资源文件/14-极客时间/01-专栏课/01-50/', 
'46-Kafka核心技术与实战', 1, 515518179556868) 
 {executed in 1 msec}
2020-11-19 19:58:19.871 INFO  jdbc.sqltiming Line:373 - select queueentit0_.item_id as item_id1_19_0_, queueentit0_.base_path as base_pat2_19_0_, queueentit0_.name 
as name3_19_0_, queueentit0_.todo as todo4_19_0_ from queue_new queueentit0_ where queueentit0_.item_id=27598889448510 
 {executed in 1 msec}
2020-11-19 19:58:19.874 INFO  jdbc.resultsettable Line:610 - 
|--------|----------|-----|-----|
|item_id |base_path |name |todo |
|--------|----------|-----|-----|
|--------|----------|-----|-----|

2020-11-19 19:58:19.879 INFO  jdbc.sqltiming Line:373 - insert into queue_new (base_path, name, todo, item_id) values ('00-资源文件/14-极客时间/01-专栏课/01-50/', 
'45-从0开始学游戏开发', 1, 27598889448510) 
 {executed in 1 msec}
2020-11-19 19:58:19.890 INFO  jdbc.sqltiming Line:373 - select queueentit0_.item_id as item_id1_19_0_, queueentit0_.base_path as base_pat2_19_0_, queueentit0_.name 
as name3_19_0_, queueentit0_.todo as todo4_19_0_ from queue_new queueentit0_ where queueentit0_.item_id=523629932543972 
 {executed in 1 msec}
2020-11-19 19:58:19.893 INFO  jdbc.resultsettable Line:610 - 
|--------|----------|-----|-----|
|item_id |base_path |name |todo |
|--------|----------|-----|-----|
|--------|----------|-----|-----|

2020-11-19 19:58:19.900 INFO  jdbc.sqltiming Line:373 - insert into queue_new (base_path, name, todo, item_id) values ('00-资源文件/14-极客时间/01-专栏课/01-50/', 
'44-SQL必知必会', 1, 523629932543972) 
 {executed in 1 msec}
2020-11-19 19:58:19.909 INFO  jdbc.sqltiming Line:373 - select queueentit0_.item_id as item_id1_19_0_, queueentit0_.base_path as base_pat2_19_0_, queueentit0_.name 
as name3_19_0_, queueentit0_.todo as todo4_19_0_ from queue_new queueentit0_ where queueentit0_.item_id=259127881910466 
 {executed in 2 msec}
2020-11-19 19:58:19.911 INFO  jdbc.resultsettable Line:610 - 
|--------|----------|-----|-----|
|item_id |base_path |name |todo |
|--------|----------|-----|-----|
|--------|----------|-----|-----|

2020-11-19 19:58:19.917 INFO  jdbc.sqltiming Line:373 - insert into queue_new (base_path, name, todo, item_id) values ('00-资源文件/14-极客时间/01-专栏课/01-50/', 
'43-软件工程之美', 1, 259127881910466) 
 {executed in 1 msec}
2020-11-19 19:58:19.925 INFO  jdbc.sqltiming Line:373 - select queueentit0_.item_id as item_id1_19_0_, queueentit0_.base_path as base_pat2_19_0_, queueentit0_.name 
as name3_19_0_, queueentit0_.todo as todo4_19_0_ from queue_new queueentit0_ where queueentit0_.item_id=1069499803697394 
 {executed in 1 msec}
2020-11-19 19:58:19.927 INFO  jdbc.resultsettable Line:610 - 
|--------|----------|-----|-----|
|item_id |base_path |name |todo |
|--------|----------|-----|-----|
|--------|----------|-----|-----|

2020-11-19 19:58:19.933 INFO  jdbc.sqltiming Line:373 - insert into queue_new (base_path, name, todo, item_id) values ('00-资源文件/14-极客时间/01-专栏课/01-50/', 
'42 -代码精进之路', 1, 1069499803697394) 
 {executed in 1 msec}
2020-11-19 19:58:19.941 INFO  jdbc.sqltiming Line:373 - select queueentit0_.item_id as item_id1_19_0_, queueentit0_.base_path as base_pat2_19_0_, queueentit0_.name 
as name3_19_0_, queueentit0_.todo as todo4_19_0_ from queue_new queueentit0_ where queueentit0_.item_id=358164025219872 
 {executed in 1 msec}
2020-11-19 19:58:19.943 INFO  jdbc.resultsettable Line:610 - 
|--------|----------|-----|-----|
|item_id |base_path |name |todo |
|--------|----------|-----|-----|
|--------|----------|-----|-----|

2020-11-19 19:58:19.949 INFO  jdbc.sqltiming Line:373 - insert into queue_new (base_path, name, todo, item_id) values ('00-资源文件/14-极客时间/01-专栏课/01-50/', 
'41-10x程序员工作法', 1, 358164025219872) 
 {executed in 1 msec}
2020-11-19 19:58:19.957 INFO  jdbc.sqltiming Line:373 - select queueentit0_.item_id as item_id1_19_0_, queueentit0_.base_path as base_pat2_19_0_, queueentit0_.name 
as name3_19_0_, queueentit0_.todo as todo4_19_0_ from queue_new queueentit0_ where queueentit0_.item_id=898613456457502 
 {executed in 1 msec}
2020-11-19 19:58:19.959 INFO  jdbc.resultsettable Line:610 - 
|--------|----------|-----|-----|
|item_id |base_path |name |todo |
|--------|----------|-----|-----|
|--------|----------|-----|-----|

2020-11-19 19:58:19.964 INFO  jdbc.sqltiming Line:373 - insert into queue_new (base_path, name, todo, item_id) values ('00-资源文件/14-极客时间/01-专栏课/01-50/', 
'40-持续交付36讲', 1, 898613456457502) 
 {executed in 1 msec}
2020-11-19 19:58:19.977 INFO  jdbc.sqltiming Line:373 - select queueentit0_.item_id as item_id1_19_0_, queueentit0_.base_path as base_pat2_19_0_, queueentit0_.name 
as name3_19_0_, queueentit0_.todo as todo4_19_0_ from queue_new queueentit0_ where queueentit0_.item_id=102887340467989 
 {executed in 2 msec}
2020-11-19 19:58:19.979 INFO  jdbc.resultsettable Line:610 - 
|--------|----------|-----|-----|
|item_id |base_path |name |todo |
|--------|----------|-----|-----|
|--------|----------|-----|-----|

2020-11-19 19:58:19.984 INFO  jdbc.sqltiming Line:373 - insert into queue_new (base_path, name, todo, item_id) values ('00-资源文件/14-极客时间/01-专栏课/01-50/', 
'39-程序员进阶攻略', 1, 102887340467989) 
 {executed in 1 msec}
2020-11-19 19:58:19.992 INFO  jdbc.sqltiming Line:373 - select queueentit0_.item_id as item_id1_19_0_, queueentit0_.base_path as base_pat2_19_0_, queueentit0_.name 
as name3_19_0_, queueentit0_.todo as todo4_19_0_ from queue_new queueentit0_ where queueentit0_.item_id=573444380131948 
 {executed in 1 msec}
2020-11-19 19:58:19.994 INFO  jdbc.resultsettable Line:610 - 
|--------|----------|-----|-----|
|item_id |base_path |name |todo |
|--------|----------|-----|-----|
|--------|----------|-----|-----|

2020-11-19 19:58:20.000 INFO  jdbc.sqltiming Line:373 - insert into queue_new (base_path, name, todo, item_id) values ('00-资源文件/14-极客时间/01-专栏课/01-50/', 
'38-机器学习40讲', 1, 573444380131948) 
 {executed in 0 msec}
2020-11-19 19:58:20.008 INFO  jdbc.sqltiming Line:373 - select queueentit0_.item_id as item_id1_19_0_, queueentit0_.base_path as base_pat2_19_0_, queueentit0_.name 
as name3_19_0_, queueentit0_.todo as todo4_19_0_ from queue_new queueentit0_ where queueentit0_.item_id=764007294626889 
 {executed in 1 msec}
2020-11-19 19:58:20.010 INFO  jdbc.resultsettable Line:610 - 
|--------|----------|-----|-----|
|item_id |base_path |name |todo |
|--------|----------|-----|-----|
|--------|----------|-----|-----|

2020-11-19 19:58:20.015 INFO  jdbc.sqltiming Line:373 - insert into queue_new (base_path, name, todo, item_id) values ('00-资源文件/14-极客时间/01-专栏课/01-50/', 
'37-AI技术内参', 1, 764007294626889) 
 {executed in 1 msec}
2020-11-19 19:58:20.026 INFO  jdbc.sqltiming Line:373 - select queueentit0_.item_id as item_id1_19_0_, queueentit0_.base_path as base_pat2_19_0_, queueentit0_.name 
as name3_19_0_, queueentit0_.todo as todo4_19_0_ from queue_new queueentit0_ where queueentit0_.item_id=863635885586868 
 {executed in 1 msec}
2020-11-19 19:58:20.027 INFO  jdbc.resultsettable Line:610 - 
|--------|----------|-----|-----|
|item_id |base_path |name |todo |
|--------|----------|-----|-----|
|--------|----------|-----|-----|

2020-11-19 19:58:20.034 INFO  jdbc.sqltiming Line:373 - insert into queue_new (base_path, name, todo, item_id) values ('00-资源文件/14-极客时间/01-专栏课/01-50/', 
'36-大规模数据处理实战', 1, 863635885586868) 
 {executed in 1 msec}
2020-11-19 19:58:20.042 INFO  jdbc.sqltiming Line:373 - select queueentit0_.item_id as item_id1_19_0_, queueentit0_.base_path as base_pat2_19_0_, queueentit0_.name 
as name3_19_0_, queueentit0_.todo as todo4_19_0_ from queue_new queueentit0_ where queueentit0_.item_id=153904253858458 
 {executed in 1 msec}
2020-11-19 19:58:20.045 INFO  jdbc.resultsettable Line:610 - 
|--------|----------|-----|-----|
|item_id |base_path |name |todo |
|--------|----------|-----|-----|
|--------|----------|-----|-----|

2020-11-19 19:58:20.052 INFO  jdbc.sqltiming Line:373 - insert into queue_new (base_path, name, todo, item_id) values ('00-资源文件/14-极客时间/01-专栏课/01-50/', 
'35-面试现场', 1, 153904253858458) 
 {executed in 1 msec}
2020-11-19 19:58:20.061 INFO  jdbc.sqltiming Line:373 - select queueentit0_.item_id as item_id1_19_0_, queueentit0_.base_path as base_pat2_19_0_, queueentit0_.name 
as name3_19_0_, queueentit0_.todo as todo4_19_0_ from queue_new queueentit0_ where queueentit0_.item_id=522828559742288 
 {executed in 1 msec}
2020-11-19 19:58:20.063 INFO  jdbc.resultsettable Line:610 - 
|--------|----------|-----|-----|
|item_id |base_path |name |todo |
|--------|----------|-----|-----|
|--------|----------|-----|-----|

2020-11-19 19:58:20.070 INFO  jdbc.sqltiming Line:373 - insert into queue_new (base_path, name, todo, item_id) values ('00-资源文件/14-极客时间/01-专栏课/01-50/', 
'34-技术与商业案例解读', 1, 522828559742288) 
 {executed in 1 msec}
2020-11-19 19:58:20.078 INFO  jdbc.sqltiming Line:373 - select queueentit0_.item_id as item_id1_19_0_, queueentit0_.base_path as base_pat2_19_0_, queueentit0_.name 
as name3_19_0_, queueentit0_.todo as todo4_19_0_ from queue_new queueentit0_ where queueentit0_.item_id=976210791517984 
 {executed in 1 msec}
2020-11-19 19:58:20.080 INFO  jdbc.resultsettable Line:610 - 
|--------|----------|-----|-----|
|item_id |base_path |name |todo |
|--------|----------|-----|-----|
|--------|----------|-----|-----|

2020-11-19 19:58:20.086 INFO  jdbc.sqltiming Line:373 - insert into queue_new (base_path, name, todo, item_id) values ('00-资源文件/14-极客时间/01-专栏课/01-50/', 
'33-邱岳的产品手记', 1, 976210791517984) 
 {executed in 1 msec}
2020-11-19 19:58:20.095 INFO  jdbc.sqltiming Line:373 - select queueentit0_.item_id as item_id1_19_0_, queueentit0_.base_path as base_pat2_19_0_, queueentit0_.name 
as name3_19_0_, queueentit0_.todo as todo4_19_0_ from queue_new queueentit0_ where queueentit0_.item_id=196670984574483 
 {executed in 2 msec}
2020-11-19 19:58:20.099 INFO  jdbc.resultsettable Line:610 - 
|--------|----------|-----|-----|
|item_id |base_path |name |todo |
|--------|----------|-----|-----|
|--------|----------|-----|-----|

2020-11-19 19:58:20.105 INFO  jdbc.sqltiming Line:373 - insert into queue_new (base_path, name, todo, item_id) values ('00-资源文件/14-极客时间/01-专栏课/01-50/', 
'32-Python核心技术与实战', 1, 196670984574483) 
 {executed in 1 msec}
2020-11-19 19:58:20.114 INFO  jdbc.sqltiming Line:373 - select queueentit0_.item_id as item_id1_19_0_, queueentit0_.base_path as base_pat2_19_0_, queueentit0_.name 
as name3_19_0_, queueentit0_.todo as todo4_19_0_ from queue_new queueentit0_ where queueentit0_.item_id=173100507946229 
 {executed in 2 msec}
2020-11-19 19:58:20.116 INFO  jdbc.resultsettable Line:610 - 
|--------|----------|-----|-----|
|item_id |base_path |name |todo |
|--------|----------|-----|-----|
|--------|----------|-----|-----|

2020-11-19 19:58:20.121 INFO  jdbc.sqltiming Line:373 - insert into queue_new (base_path, name, todo, item_id) values ('00-资源文件/14-极客时间/01-专栏课/01-50/', 
'31-深入浅出计算机组成原理', 1, 173100507946229) 
 {executed in 1 msec}
2020-11-19 19:58:20.131 INFO  jdbc.sqltiming Line:373 - select queueentit0_.item_id as item_id1_19_0_, queueentit0_.base_path as base_pat2_19_0_, queueentit0_.name 
as name3_19_0_, queueentit0_.todo as todo4_19_0_ from queue_new queueentit0_ where queueentit0_.item_id=316423861762223 
 {executed in 2 msec}
2020-11-19 19:58:20.133 INFO  jdbc.resultsettable Line:610 - 
|--------|----------|-----|-----|
|item_id |base_path |name |todo |
|--------|----------|-----|-----|
|--------|----------|-----|-----|

2020-11-19 19:58:20.142 INFO  jdbc.sqltiming Line:373 - insert into queue_new (base_path, name, todo, item_id) values ('00-资源文件/14-极客时间/01-专栏课/01-50/', 
'30-推荐系统三十六式', 1, 316423861762223) 
 {executed in 4 msec}
2020-11-19 19:58:20.152 INFO  jdbc.sqltiming Line:373 - select queueentit0_.item_id as item_id1_19_0_, queueentit0_.base_path as base_pat2_19_0_, queueentit0_.name 
as name3_19_0_, queueentit0_.todo as todo4_19_0_ from queue_new queueentit0_ where queueentit0_.item_id=490710026198350 
 {executed in 1 msec}
2020-11-19 19:58:20.154 INFO  jdbc.resultsettable Line:610 - 
|--------|----------|-----|-----|
|item_id |base_path |name |todo |
|--------|----------|-----|-----|
|--------|----------|-----|-----|

2020-11-19 19:58:20.159 INFO  jdbc.sqltiming Line:373 - insert into queue_new (base_path, name, todo, item_id) values ('00-资源文件/14-极客时间/01-专栏课/01-50/', 
'29-朱赟的技术管理课', 1, 490710026198350) 
 {executed in 1 msec}
2020-11-19 19:58:20.168 INFO  jdbc.sqltiming Line:373 - select queueentit0_.item_id as item_id1_19_0_, queueentit0_.base_path as base_pat2_19_0_, queueentit0_.name 
as name3_19_0_, queueentit0_.todo as todo4_19_0_ from queue_new queueentit0_ where queueentit0_.item_id=998473067641081 
 {executed in 1 msec}
2020-11-19 19:58:20.170 INFO  jdbc.resultsettable Line:610 - 
|--------|----------|-----|-----|
|item_id |base_path |name |todo |
|--------|----------|-----|-----|
|--------|----------|-----|-----|

2020-11-19 19:58:20.223 INFO  jdbc.sqltiming Line:373 - insert into queue_new (base_path, name, todo, item_id) values ('00-资源文件/14-极客时间/01-专栏课/01-50/', 
'28-iOS开发高手课', 1, 998473067641081) 
 {executed in 49 msec}
2020-11-19 19:58:20.256 INFO  jdbc.sqltiming Line:373 - select queueentit0_.item_id as item_id1_19_0_, queueentit0_.base_path as base_pat2_19_0_, queueentit0_.name 
as name3_19_0_, queueentit0_.todo as todo4_19_0_ from queue_new queueentit0_ where queueentit0_.item_id=40470094302261 
 {executed in 2 msec}
2020-11-19 19:58:20.258 INFO  jdbc.resultsettable Line:610 - 
|--------|----------|-----|-----|
|item_id |base_path |name |todo |
|--------|----------|-----|-----|
|--------|----------|-----|-----|

2020-11-19 19:58:20.264 INFO  jdbc.sqltiming Line:373 - insert into queue_new (base_path, name, todo, item_id) values ('00-资源文件/14-极客时间/01-专栏课/01-50/', 
'27-Android开发高手课', 1, 40470094302261) 
 {executed in 1 msec}
2020-11-19 19:58:20.273 INFO  jdbc.sqltiming Line:373 - select queueentit0_.item_id as item_id1_19_0_, queueentit0_.base_path as base_pat2_19_0_, queueentit0_.name 
as name3_19_0_, queueentit0_.todo as todo4_19_0_ from queue_new queueentit0_ where queueentit0_.item_id=408324065293718 
 {executed in 1 msec}
2020-11-19 19:58:20.275 INFO  jdbc.resultsettable Line:610 - 
|--------|----------|-----|-----|
|item_id |base_path |name |todo |
|--------|----------|-----|-----|
|--------|----------|-----|-----|

2020-11-19 19:58:20.281 INFO  jdbc.sqltiming Line:373 - insert into queue_new (base_path, name, todo, item_id) values ('00-资源文件/14-极客时间/01-专栏课/01-50/', 
'26-人工智能基础课', 1, 408324065293718) 
 {executed in 1 msec}
2020-11-19 19:58:20.290 INFO  jdbc.sqltiming Line:373 - select queueentit0_.item_id as item_id1_19_0_, queueentit0_.base_path as base_pat2_19_0_, queueentit0_.name 
as name3_19_0_, queueentit0_.todo as todo4_19_0_ from queue_new queueentit0_ where queueentit0_.item_id=59265297881006 
 {executed in 1 msec}
2020-11-19 19:58:20.292 INFO  jdbc.resultsettable Line:610 - 
|--------|----------|-----|-----|
|item_id |base_path |name |todo |
|--------|----------|-----|-----|
|--------|----------|-----|-----|

2020-11-19 19:58:20.299 INFO  jdbc.sqltiming Line:373 - insert into queue_new (base_path, name, todo, item_id) values ('00-资源文件/14-极客时间/01-专栏课/01-50/', 
'25-软件测试52讲', 1, 59265297881006) 
 {executed in 3 msec}
2020-11-19 19:58:20.307 INFO  jdbc.sqltiming Line:373 - select queueentit0_.item_id as item_id1_19_0_, queueentit0_.base_path as base_pat2_19_0_, queueentit0_.name 
as name3_19_0_, queueentit0_.todo as todo4_19_0_ from queue_new queueentit0_ where queueentit0_.item_id=21489049867468 
 {executed in 1 msec}
2020-11-19 19:58:20.308 INFO  jdbc.resultsettable Line:610 - 
|--------|----------|-----|-----|
|item_id |base_path |name |todo |
|--------|----------|-----|-----|
|--------|----------|-----|-----|

2020-11-19 19:58:20.313 INFO  jdbc.sqltiming Line:373 - insert into queue_new (base_path, name, todo, item_id) values ('00-资源文件/14-极客时间/01-专栏课/01-50/', 
'24-Java并发编程实战', 1, 21489049867468) 
 {executed in 1 msec}
2020-11-19 19:58:20.323 INFO  jdbc.sqltiming Line:373 - select queueentit0_.item_id as item_id1_19_0_, queueentit0_.base_path as base_pat2_19_0_, queueentit0_.name 
as name3_19_0_, queueentit0_.todo as todo4_19_0_ from queue_new queueentit0_ where queueentit0_.item_id=726180354169294 
 {executed in 1 msec}
2020-11-19 19:58:20.325 INFO  jdbc.resultsettable Line:610 - 
|--------|----------|-----|-----|
|item_id |base_path |name |todo |
|--------|----------|-----|-----|
|--------|----------|-----|-----|

2020-11-19 19:58:20.331 INFO  jdbc.sqltiming Line:373 - insert into queue_new (base_path, name, todo, item_id) values ('00-资源文件/14-极客时间/01-专栏课/01-50/', 
'23-邱岳的产品实战', 1, 726180354169294) 
 {executed in 1 msec}
2020-11-19 19:58:20.340 INFO  jdbc.sqltiming Line:373 - select queueentit0_.item_id as item_id1_19_0_, queueentit0_.base_path as base_pat2_19_0_, queueentit0_.name 
as name3_19_0_, queueentit0_.todo as todo4_19_0_ from queue_new queueentit0_ where queueentit0_.item_id=1080130144710172 
 {executed in 2 msec}
2020-11-19 19:58:20.341 INFO  jdbc.resultsettable Line:610 - 
|--------|----------|-----|-----|
|item_id |base_path |name |todo |
|--------|----------|-----|-----|
|--------|----------|-----|-----|

2020-11-19 19:58:20.346 INFO  jdbc.sqltiming Line:373 - insert into queue_new (base_path, name, todo, item_id) values ('00-资源文件/14-极客时间/01-专栏课/01-50/', 
'22-硅谷产品实战36讲', 1, 1080130144710172) 
 {executed in 1 msec}
2020-11-19 19:58:20.355 INFO  jdbc.sqltiming Line:373 - select queueentit0_.item_id as item_id1_19_0_, queueentit0_.base_path as base_pat2_19_0_, queueentit0_.name 
as name3_19_0_, queueentit0_.todo as todo4_19_0_ from queue_new queueentit0_ where queueentit0_.item_id=838008654367537 
 {executed in 1 msec}
2020-11-19 19:58:20.357 INFO  jdbc.resultsettable Line:610 - 
|--------|----------|-----|-----|
|item_id |base_path |name |todo |
|--------|----------|-----|-----|
|--------|----------|-----|-----|

2020-11-19 19:58:20.362 INFO  jdbc.sqltiming Line:373 - insert into queue_new (base_path, name, todo, item_id) values ('00-资源文件/14-极客时间/01-专栏课/01-50/', 
'21-从0开始学大数据', 1, 838008654367537) 
 {executed in 1 msec}
2020-11-19 19:58:20.370 INFO  jdbc.sqltiming Line:373 - select queueentit0_.item_id as item_id1_19_0_, queueentit0_.base_path as base_pat2_19_0_, queueentit0_.name 
as name3_19_0_, queueentit0_.todo as todo4_19_0_ from queue_new queueentit0_ where queueentit0_.item_id=605943376923287 
 {executed in 0 msec}
2020-11-19 19:58:20.372 INFO  jdbc.resultsettable Line:610 - 
|--------|----------|-----|-----|
|item_id |base_path |name |todo |
|--------|----------|-----|-----|
|--------|----------|-----|-----|

2020-11-19 19:58:20.378 INFO  jdbc.sqltiming Line:373 - insert into queue_new (base_path, name, todo, item_id) values ('00-资源文件/14-极客时间/01-专栏课/01-50/', 
'20-技术领导力300讲', 1, 605943376923287) 
 {executed in 1 msec}
2020-11-19 19:58:20.386 INFO  jdbc.sqltiming Line:373 - select queueentit0_.item_id as item_id1_19_0_, queueentit0_.base_path as base_pat2_19_0_, queueentit0_.name 
as name3_19_0_, queueentit0_.todo as todo4_19_0_ from queue_new queueentit0_ where queueentit0_.item_id=820739868254222 
 {executed in 1 msec}
2020-11-19 19:58:20.388 INFO  jdbc.resultsettable Line:610 - 
|--------|----------|-----|-----|
|item_id |base_path |name |todo |
|--------|----------|-----|-----|
|--------|----------|-----|-----|

2020-11-19 19:58:20.392 INFO  jdbc.sqltiming Line:373 - insert into queue_new (base_path, name, todo, item_id) values ('00-资源文件/14-极客时间/01-专栏课/01-50/', 
'19-数据分析实战45讲', 1, 820739868254222) 
 {executed in 1 msec}
2020-11-19 19:58:20.400 INFO  jdbc.sqltiming Line:373 - select queueentit0_.item_id as item_id1_19_0_, queueentit0_.base_path as base_pat2_19_0_, queueentit0_.name 
as name3_19_0_, queueentit0_.todo as todo4_19_0_ from queue_new queueentit0_ where queueentit0_.item_id=753982223670808 
 {executed in 1 msec}
2020-11-19 19:58:20.402 INFO  jdbc.resultsettable Line:610 - 
|--------|----------|-----|-----|
|item_id |base_path |name |todo |
|--------|----------|-----|-----|
|--------|----------|-----|-----|

2020-11-19 19:58:20.406 INFO  jdbc.sqltiming Line:373 - insert into queue_new (base_path, name, todo, item_id) values ('00-资源文件/14-极客时间/01-专栏课/01-50/', 
'18-技术管理实战36讲', 1, 753982223670808) 
 {executed in 1 msec}
2020-11-19 19:58:20.414 INFO  jdbc.sqltiming Line:373 - select queueentit0_.item_id as item_id1_19_0_, queueentit0_.base_path as base_pat2_19_0_, queueentit0_.name 
as name3_19_0_, queueentit0_.todo as todo4_19_0_ from queue_new queueentit0_ where queueentit0_.item_id=612872410368332 
 {executed in 1 msec}
2020-11-19 19:58:20.415 INFO  jdbc.resultsettable Line:610 - 
|--------|----------|-----|-----|
|item_id |base_path |name |todo |
|--------|----------|-----|-----|
|--------|----------|-----|-----|

2020-11-19 19:58:20.420 INFO  jdbc.sqltiming Line:373 - insert into queue_new (base_path, name, todo, item_id) values ('00-资源文件/14-极客时间/01-专栏课/01-50/', 
'17-深入浅出区块链', 1, 612872410368332) 
 {executed in 1 msec}
2020-11-19 19:58:20.427 INFO  jdbc.sqltiming Line:373 - select queueentit0_.item_id as item_id1_19_0_, queueentit0_.base_path as base_pat2_19_0_, queueentit0_.name 
as name3_19_0_, queueentit0_.todo as todo4_19_0_ from queue_new queueentit0_ where queueentit0_.item_id=795802234194414 
 {executed in 1 msec}
2020-11-19 19:58:20.429 INFO  jdbc.resultsettable Line:610 - 
|--------|----------|-----|-----|
|item_id |base_path |name |todo |
|--------|----------|-----|-----|
|--------|----------|-----|-----|

2020-11-19 19:58:20.434 INFO  jdbc.sqltiming Line:373 - insert into queue_new (base_path, name, todo, item_id) values ('00-资源文件/14-极客时间/01-专栏课/01-50/', 
'16-从0开始学微服务', 1, 795802234194414) 
 {executed in 1 msec}
2020-11-19 19:58:20.441 INFO  jdbc.sqltiming Line:373 - select queueentit0_.item_id as item_id1_19_0_, queueentit0_.base_path as base_pat2_19_0_, queueentit0_.name 
as name3_19_0_, queueentit0_.todo as todo4_19_0_ from queue_new queueentit0_ where queueentit0_.item_id=324832329363742 
 {executed in 1 msec}
2020-11-19 19:58:20.443 INFO  jdbc.resultsettable Line:610 - 
|--------|----------|-----|-----|
|item_id |base_path |name |todo |
|--------|----------|-----|-----|
|--------|----------|-----|-----|

2020-11-19 19:58:20.448 INFO  jdbc.sqltiming Line:373 - insert into queue_new (base_path, name, todo, item_id) values ('00-资源文件/14-极客时间/01-专栏课/01-50/', 
'15-趣谈Linux操作系统', 1, 324832329363742) 
 {executed in 1 msec}
2020-11-19 19:58:20.455 INFO  jdbc.sqltiming Line:373 - select queueentit0_.item_id as item_id1_19_0_, queueentit0_.base_path as base_pat2_19_0_, queueentit0_.name 
as name3_19_0_, queueentit0_.todo as todo4_19_0_ from queue_new queueentit0_ where queueentit0_.item_id=868784738101290 
 {executed in 1 msec}
2020-11-19 19:58:20.457 INFO  jdbc.resultsettable Line:610 - 
|--------|----------|-----|-----|
|item_id |base_path |name |todo |
|--------|----------|-----|-----|
|--------|----------|-----|-----|

2020-11-19 19:58:20.461 INFO  jdbc.sqltiming Line:373 - insert into queue_new (base_path, name, todo, item_id) values ('00-资源文件/14-极客时间/01-专栏课/01-50/', 
'14-许式伟的架构课', 1, 868784738101290) 
 {executed in 1 msec}
2020-11-19 19:58:20.469 INFO  jdbc.sqltiming Line:373 - select queueentit0_.item_id as item_id1_19_0_, queueentit0_.base_path as base_pat2_19_0_, queueentit0_.name 
as name3_19_0_, queueentit0_.todo as todo4_19_0_ from queue_new queueentit0_ where queueentit0_.item_id=357340960398221 
 {executed in 1 msec}
2020-11-19 19:58:20.470 INFO  jdbc.resultsettable Line:610 - 
|--------|----------|-----|-----|
|item_id |base_path |name |todo |
|--------|----------|-----|-----|
|--------|----------|-----|-----|

2020-11-19 19:58:20.475 INFO  jdbc.sqltiming Line:373 - insert into queue_new (base_path, name, todo, item_id) values ('00-资源文件/14-极客时间/01-专栏课/01-50/', 
'13-深入剖析Kubernetes', 1, 357340960398221) 
 {executed in 0 msec}
2020-11-19 19:58:20.483 INFO  jdbc.sqltiming Line:373 - select queueentit0_.item_id as item_id1_19_0_, queueentit0_.base_path as base_pat2_19_0_, queueentit0_.name 
as name3_19_0_, queueentit0_.todo as todo4_19_0_ from queue_new queueentit0_ where queueentit0_.item_id=968336779497140 
 {executed in 1 msec}
2020-11-19 19:58:20.485 INFO  jdbc.resultsettable Line:610 - 
|--------|----------|-----|-----|
|item_id |base_path |name |todo |
|--------|----------|-----|-----|
|--------|----------|-----|-----|

2020-11-19 19:58:20.490 INFO  jdbc.sqltiming Line:373 - insert into queue_new (base_path, name, todo, item_id) values ('00-资源文件/14-极客时间/01-专栏课/01-50/', 
'12-Linux性能优化实战', 1, 968336779497140) 
 {executed in 1 msec}
2020-11-19 19:58:20.499 INFO  jdbc.sqltiming Line:373 - select queueentit0_.item_id as item_id1_19_0_, queueentit0_.base_path as base_pat2_19_0_, queueentit0_.name 
as name3_19_0_, queueentit0_.todo as todo4_19_0_ from queue_new queueentit0_ where queueentit0_.item_id=686983393201404 
 {executed in 1 msec}
2020-11-19 19:58:20.500 INFO  jdbc.resultsettable Line:610 - 
|--------|----------|-----|-----|
|item_id |base_path |name |todo |
|--------|----------|-----|-----|
|--------|----------|-----|-----|

2020-11-19 19:58:20.504 INFO  jdbc.sqltiming Line:373 - insert into queue_new (base_path, name, todo, item_id) values ('00-资源文件/14-极客时间/01-专栏课/01-50/', 
'11-程序员的数学基础课', 1, 686983393201404) 
 {executed in 1 msec}
2020-11-19 19:58:20.511 INFO  jdbc.sqltiming Line:373 - select queueentit0_.item_id as item_id1_19_0_, queueentit0_.base_path as base_pat2_19_0_, queueentit0_.name 
as name3_19_0_, queueentit0_.todo as todo4_19_0_ from queue_new queueentit0_ where queueentit0_.item_id=275786362405491 
 {executed in 1 msec}
2020-11-19 19:58:20.513 INFO  jdbc.resultsettable Line:610 - 
|--------|----------|-----|-----|
|item_id |base_path |name |todo |
|--------|----------|-----|-----|
|--------|----------|-----|-----|

2020-11-19 19:58:20.517 INFO  jdbc.sqltiming Line:373 - insert into queue_new (base_path, name, todo, item_id) values ('00-资源文件/14-极客时间/01-专栏课/01-50/', 
'10-如何设计一个秒杀系统', 1, 275786362405491) 
 {executed in 1 msec}
2020-11-19 19:58:20.525 INFO  jdbc.sqltiming Line:373 - select queueentit0_.item_id as item_id1_19_0_, queueentit0_.base_path as base_pat2_19_0_, queueentit0_.name 
as name3_19_0_, queueentit0_.todo as todo4_19_0_ from queue_new queueentit0_ where queueentit0_.item_id=226482490102513 
 {executed in 2 msec}
2020-11-19 19:58:20.527 INFO  jdbc.resultsettable Line:610 - 
|--------|----------|-----|-----|
|item_id |base_path |name |todo |
|--------|----------|-----|-----|
|--------|----------|-----|-----|

2020-11-19 19:58:20.532 INFO  jdbc.sqltiming Line:373 - insert into queue_new (base_path, name, todo, item_id) values ('00-资源文件/14-极客时间/01-专栏课/01-50/', 
'09-Go语言核心36讲', 1, 226482490102513) 
 {executed in 1 msec}
2020-11-19 19:58:20.540 INFO  jdbc.sqltiming Line:373 - select queueentit0_.item_id as item_id1_19_0_, queueentit0_.base_path as base_pat2_19_0_, queueentit0_.name 
as name3_19_0_, queueentit0_.todo as todo4_19_0_ from queue_new queueentit0_ where queueentit0_.item_id=2567197234077 
 {executed in 1 msec}
2020-11-19 19:58:20.542 INFO  jdbc.resultsettable Line:610 - 
|--------|----------|-----|-----|
|item_id |base_path |name |todo |
|--------|----------|-----|-----|
|--------|----------|-----|-----|

2020-11-19 19:58:20.546 INFO  jdbc.sqltiming Line:373 - insert into queue_new (base_path, name, todo, item_id) values ('00-资源文件/14-极客时间/01-专栏课/01-50/', 
'08-深入拆解Java虚拟机', 1, 2567197234077) 
 {executed in 1 msec}
2020-11-19 19:58:20.555 INFO  jdbc.sqltiming Line:373 - select queueentit0_.item_id as item_id1_19_0_, queueentit0_.base_path as base_pat2_19_0_, queueentit0_.name 
as name3_19_0_, queueentit0_.todo as todo4_19_0_ from queue_new queueentit0_ where queueentit0_.item_id=437150682821215 
 {executed in 2 msec}
2020-11-19 19:58:20.556 INFO  jdbc.resultsettable Line:610 - 
|--------|----------|-----|-----|
|item_id |base_path |name |todo |
|--------|----------|-----|-----|
|--------|----------|-----|-----|

2020-11-19 19:58:20.560 INFO  jdbc.sqltiming Line:373 - insert into queue_new (base_path, name, todo, item_id) values ('00-资源文件/14-极客时间/01-专栏课/01-50/', 
'07-重学前端', 1, 437150682821215) 
 {executed in 1 msec}
2020-11-19 19:58:20.568 INFO  jdbc.sqltiming Line:373 - select queueentit0_.item_id as item_id1_19_0_, queueentit0_.base_path as base_pat2_19_0_, queueentit0_.name 
as name3_19_0_, queueentit0_.todo as todo4_19_0_ from queue_new queueentit0_ where queueentit0_.item_id=299934684079928 
 {executed in 1 msec}
2020-11-19 19:58:20.570 INFO  jdbc.resultsettable Line:610 - 
|--------|----------|-----|-----|
|item_id |base_path |name |todo |
|--------|----------|-----|-----|
|--------|----------|-----|-----|

2020-11-19 19:58:20.574 INFO  jdbc.sqltiming Line:373 - insert into queue_new (base_path, name, todo, item_id) values ('00-资源文件/14-极客时间/01-专栏课/01-50/', 
'06-MySQL实战45讲', 1, 299934684079928) 
 {executed in 1 msec}
2020-11-19 19:58:20.584 INFO  jdbc.sqltiming Line:373 - select queueentit0_.item_id as item_id1_19_0_, queueentit0_.base_path as base_pat2_19_0_, queueentit0_.name 
as name3_19_0_, queueentit0_.todo as todo4_19_0_ from queue_new queueentit0_ where queueentit0_.item_id=351607690414206 
 {executed in 1 msec}
2020-11-19 19:58:20.586 INFO  jdbc.resultsettable Line:610 - 
|--------|----------|-----|-----|
|item_id |base_path |name |todo |
|--------|----------|-----|-----|
|--------|----------|-----|-----|

2020-11-19 19:58:20.591 INFO  jdbc.sqltiming Line:373 - insert into queue_new (base_path, name, todo, item_id) values ('00-资源文件/14-极客时间/01-专栏课/01-50/', 
'05-趣谈', 1, 351607690414206) 
 {executed in 1 msec}
2020-11-19 19:58:20.601 INFO  jdbc.sqltiming Line:373 - select queueentit0_.item_id as item_id1_19_0_, queueentit0_.base_path as base_pat2_19_0_, queueentit0_.name 
as name3_19_0_, queueentit0_.todo as todo4_19_0_ from queue_new queueentit0_ where queueentit0_.item_id=17976225100257 
 {executed in 4 msec}
2020-11-19 19:58:20.603 INFO  jdbc.resultsettable Line:610 - 
|--------|----------|-----|-----|
|item_id |base_path |name |todo |
|--------|----------|-----|-----|
|--------|----------|-----|-----|

2020-11-19 19:58:20.607 INFO  jdbc.sqltiming Line:373 - insert into queue_new (base_path, name, todo, item_id) values ('00-资源文件/14-极客时间/01-专栏课/01-50/', 
'04-左耳听风', 1, 17976225100257) 
 {executed in 1 msec}
2020-11-19 19:58:20.614 INFO  jdbc.sqltiming Line:373 - select queueentit0_.item_id as item_id1_19_0_, queueentit0_.base_path as base_pat2_19_0_, queueentit0_.name 
as name3_19_0_, queueentit0_.todo as todo4_19_0_ from queue_new queueentit0_ where queueentit0_.item_id=229684218633741 
 {executed in 1 msec}
2020-11-19 19:58:20.616 INFO  jdbc.resultsettable Line:610 - 
|--------|----------|-----|-----|
|item_id |base_path |name |todo |
|--------|----------|-----|-----|
|--------|----------|-----|-----|

2020-11-19 19:58:20.620 INFO  jdbc.sqltiming Line:373 - insert into queue_new (base_path, name, todo, item_id) values ('00-资源文件/14-极客时间/01-专栏课/01-50/', 
'03-从0开始学架构', 1, 229684218633741) 
 {executed in 1 msec}
2020-11-19 19:58:20.627 INFO  jdbc.sqltiming Line:373 - select queueentit0_.item_id as item_id1_19_0_, queueentit0_.base_path as base_pat2_19_0_, queueentit0_.name 
as name3_19_0_, queueentit0_.todo as todo4_19_0_ from queue_new queueentit0_ where queueentit0_.item_id=188123048142133 
 {executed in 1 msec}
2020-11-19 19:58:20.629 INFO  jdbc.resultsettable Line:610 - 
|--------|----------|-----|-----|
|item_id |base_path |name |todo |
|--------|----------|-----|-----|
|--------|----------|-----|-----|

2020-11-19 19:58:20.633 INFO  jdbc.sqltiming Line:373 - insert into queue_new (base_path, name, todo, item_id) values ('00-资源文件/14-极客时间/01-专栏课/01-50/', 
'02-Java核心技术面试精讲', 1, 188123048142133) 
 {executed in 1 msec}
2020-11-19 19:58:20.640 INFO  jdbc.sqltiming Line:373 - select queueentit0_.item_id as item_id1_19_0_, queueentit0_.base_path as base_pat2_19_0_, queueentit0_.name 
as name3_19_0_, queueentit0_.todo as todo4_19_0_ from queue_new queueentit0_ where queueentit0_.item_id=219716381517249 
 {executed in 1 msec}
2020-11-19 19:58:20.642 INFO  jdbc.resultsettable Line:610 - 
|--------|----------|-----|-----|
|item_id |base_path |name |todo |
|--------|----------|-----|-----|
|--------|----------|-----|-----|

2020-11-19 19:58:20.646 INFO  jdbc.sqltiming Line:373 - insert into queue_new (base_path, name, todo, item_id) values ('00-资源文件/14-极客时间/01-专栏课/01-50/', 
'01-数据结构与算法之美', 1, 219716381517249) 
 {executed in 1 msec}
2020-11-19 19:59:21.215 INFO  jdbc.sqltiming Line:373 - select queueentit0_.item_id as item_id1_19_0_, queueentit0_.base_path as base_pat2_19_0_, queueentit0_.name 
as name3_19_0_, queueentit0_.todo as todo4_19_0_ from queue_new queueentit0_ where queueentit0_.item_id=156208253445825 
 {executed in 6 msec}
2020-11-19 19:59:21.217 INFO  jdbc.resultsettable Line:610 - 
|--------|----------|-----|-----|
|item_id |base_path |name |todo |
|--------|----------|-----|-----|
|--------|----------|-----|-----|

2020-11-19 19:59:21.222 INFO  jdbc.sqltiming Line:373 - insert into queue_new (base_path, name, todo, item_id) values ('00-资源文件/14-极客时间/01-专栏课/100-/', 
'156-动态规划面试宝典', 1, 156208253445825) 
 {executed in 1 msec}
2020-11-19 19:59:21.234 INFO  jdbc.sqltiming Line:373 - select queueentit0_.item_id as item_id1_19_0_, queueentit0_.base_path as base_pat2_19_0_, queueentit0_.name 
as name3_19_0_, queueentit0_.todo as todo4_19_0_ from queue_new queueentit0_ where queueentit0_.item_id=1050459079191190 
 {executed in 3 msec}
2020-11-19 19:59:21.236 INFO  jdbc.resultsettable Line:610 - 
|--------|----------|-----|-----|
|item_id |base_path |name |todo |
|--------|----------|-----|-----|
|--------|----------|-----|-----|

2020-11-19 19:59:21.242 INFO  jdbc.sqltiming Line:373 - insert into queue_new (base_path, name, todo, item_id) values ('00-资源文件/14-极客时间/01-专栏课/100-/', 
'155-WebAssembly入门课', 1, 1050459079191190) 
 {executed in 2 msec}
2020-11-19 19:59:21.253 INFO  jdbc.sqltiming Line:373 - select queueentit0_.item_id as item_id1_19_0_, queueentit0_.base_path as base_pat2_19_0_, queueentit0_.name 
as name3_19_0_, queueentit0_.todo as todo4_19_0_ from queue_new queueentit0_ where queueentit0_.item_id=698835351218485 
 {executed in 2 msec}
2020-11-19 19:59:21.254 INFO  jdbc.resultsettable Line:610 - 
|--------|----------|-----|-----|
|item_id |base_path |name |todo |
|--------|----------|-----|-----|
|--------|----------|-----|-----|

2020-11-19 19:59:21.258 INFO  jdbc.sqltiming Line:373 - insert into queue_new (base_path, name, todo, item_id) values ('00-资源文件/14-极客时间/01-专栏课/100-/', 
'150-技术管理案例课', 1, 698835351218485) 
 {executed in 1 msec}
2020-11-19 19:59:21.265 INFO  jdbc.sqltiming Line:373 - select queueentit0_.item_id as item_id1_19_0_, queueentit0_.base_path as base_pat2_19_0_, queueentit0_.name 
as name3_19_0_, queueentit0_.todo as todo4_19_0_ from queue_new queueentit0_ where queueentit0_.item_id=363795959997616 
 {executed in 1 msec}
2020-11-19 19:59:21.267 INFO  jdbc.resultsettable Line:610 - 
|--------|----------|-----|-----|
|item_id |base_path |name |todo |
|--------|----------|-----|-----|
|--------|----------|-----|-----|

2020-11-19 19:59:21.270 INFO  jdbc.sqltiming Line:373 - insert into queue_new (base_path, name, todo, item_id) values ('00-资源文件/14-极客时间/01-专栏课/100-/', 
'149-Linux内核技术实战课', 1, 363795959997616) 
 {executed in 1 msec}
2020-11-19 19:59:21.278 INFO  jdbc.sqltiming Line:373 - select queueentit0_.item_id as item_id1_19_0_, queueentit0_.base_path as base_pat2_19_0_, queueentit0_.name 
as name3_19_0_, queueentit0_.todo as todo4_19_0_ from queue_new queueentit0_ where queueentit0_.item_id=1034853610404229 
 {executed in 1 msec}
2020-11-19 19:59:21.279 INFO  jdbc.resultsettable Line:610 - 
|--------|----------|-----|-----|
|item_id |base_path |name |todo |
|--------|----------|-----|-----|
|--------|----------|-----|-----|

2020-11-19 19:59:21.284 INFO  jdbc.sqltiming Line:373 - insert into queue_new (base_path, name, todo, item_id) values ('00-资源文件/14-极客时间/01-专栏课/100-/', 
'148-To B市场品牌实战课', 1, 1034853610404229) 
 {executed in 2 msec}
2020-11-19 19:59:21.295 INFO  jdbc.sqltiming Line:373 - select queueentit0_.item_id as item_id1_19_0_, queueentit0_.base_path as base_pat2_19_0_, queueentit0_.name 
as name3_19_0_, queueentit0_.todo as todo4_19_0_ from queue_new queueentit0_ where queueentit0_.item_id=635015970598106 
 {executed in 1 msec}
2020-11-19 19:59:21.297 INFO  jdbc.resultsettable Line:610 - 
|--------|----------|-----|-----|
|item_id |base_path |name |todo |
|--------|----------|-----|-----|
|--------|----------|-----|-----|

2020-11-19 19:59:21.301 INFO  jdbc.sqltiming Line:373 - insert into queue_new (base_path, name, todo, item_id) values ('00-资源文件/14-极客时间/01-专栏课/100-/', 
'147-分布式数据库30讲', 1, 635015970598106) 
 {executed in 0 msec}
2020-11-19 19:59:21.308 INFO  jdbc.sqltiming Line:373 - select queueentit0_.item_id as item_id1_19_0_, queueentit0_.base_path as base_pat2_19_0_, queueentit0_.name 
as name3_19_0_, queueentit0_.todo as todo4_19_0_ from queue_new queueentit0_ where queueentit0_.item_id=340183784365065 
 {executed in 2 msec}
2020-11-19 19:59:21.310 INFO  jdbc.resultsettable Line:610 - 
|--------|----------|-----|-----|
|item_id |base_path |name |todo |
|--------|----------|-----|-----|
|--------|----------|-----|-----|

2020-11-19 19:59:21.314 INFO  jdbc.sqltiming Line:373 - insert into queue_new (base_path, name, todo, item_id) values ('00-资源文件/14-极客时间/01-专栏课/100-/', 
'145-重学线性代数', 1, 340183784365065) 
 {executed in 1 msec}
2020-11-19 19:59:21.321 INFO  jdbc.sqltiming Line:373 - select queueentit0_.item_id as item_id1_19_0_, queueentit0_.base_path as base_pat2_19_0_, queueentit0_.name 
as name3_19_0_, queueentit0_.todo as todo4_19_0_ from queue_new queueentit0_ where queueentit0_.item_id=768924225267402 
 {executed in 2 msec}
2020-11-19 19:59:21.322 INFO  jdbc.resultsettable Line:610 - 
|--------|----------|-----|-----|
|item_id |base_path |name |todo |
|--------|----------|-----|-----|
|--------|----------|-----|-----|

2020-11-19 19:59:21.326 INFO  jdbc.sqltiming Line:373 - insert into queue_new (base_path, name, todo, item_id) values ('00-资源文件/14-极客时间/01-专栏课/100-/', 
'144-如何看懂一幅画', 1, 768924225267402) 
 {executed in 1 msec}
2020-11-19 19:59:21.334 INFO  jdbc.sqltiming Line:373 - select queueentit0_.item_id as item_id1_19_0_, queueentit0_.base_path as base_pat2_19_0_, queueentit0_.name 
as name3_19_0_, queueentit0_.todo as todo4_19_0_ from queue_new queueentit0_ where queueentit0_.item_id=236649184516446 
 {executed in 1 msec}
2020-11-19 19:59:21.335 INFO  jdbc.resultsettable Line:610 - 
|--------|----------|-----|-----|
|item_id |base_path |name |todo |
|--------|----------|-----|-----|
|--------|----------|-----|-----|

2020-11-19 19:59:21.339 INFO  jdbc.sqltiming Line:373 - insert into queue_new (base_path, name, todo, item_id) values ('00-资源文件/14-极客时间/01-专栏课/100-/', 
'143-Vim 实用技巧必知必会', 1, 236649184516446) 
 {executed in 1 msec}
2020-11-19 19:59:21.346 INFO  jdbc.sqltiming Line:373 - select queueentit0_.item_id as item_id1_19_0_, queueentit0_.base_path as base_pat2_19_0_, queueentit0_.name 
as name3_19_0_, queueentit0_.todo as todo4_19_0_ from queue_new queueentit0_ where queueentit0_.item_id=862346873236269 
 {executed in 1 msec}
2020-11-19 19:59:21.347 INFO  jdbc.resultsettable Line:610 - 
|--------|----------|-----|-----|
|item_id |base_path |name |todo |
|--------|----------|-----|-----|
|--------|----------|-----|-----|

2020-11-19 19:59:21.351 INFO  jdbc.sqltiming Line:373 - insert into queue_new (base_path, name, todo, item_id) values ('00-资源文件/14-极客时间/01-专栏课/100-/', 
'141-OAuth 2.0实战课', 1, 862346873236269) 
 {executed in 1 msec}
2020-11-19 19:59:21.357 INFO  jdbc.sqltiming Line:373 - select queueentit0_.item_id as item_id1_19_0_, queueentit0_.base_path as base_pat2_19_0_, queueentit0_.name 
as name3_19_0_, queueentit0_.todo as todo4_19_0_ from queue_new queueentit0_ where queueentit0_.item_id=189642839258247 
 {executed in 1 msec}
2020-11-19 19:59:21.359 INFO  jdbc.resultsettable Line:610 - 
|--------|----------|-----|-----|
|item_id |base_path |name |todo |
|--------|----------|-----|-----|
|--------|----------|-----|-----|

2020-11-19 19:59:21.363 INFO  jdbc.sqltiming Line:373 - insert into queue_new (base_path, name, todo, item_id) values ('00-资源文件/14-极客时间/01-专栏课/100-/', 
'139-跟月影学可视化', 1, 189642839258247) 
 {executed in 0 msec}
2020-11-19 19:59:21.369 INFO  jdbc.sqltiming Line:373 - select queueentit0_.item_id as item_id1_19_0_, queueentit0_.base_path as base_pat2_19_0_, queueentit0_.name 
as name3_19_0_, queueentit0_.todo as todo4_19_0_ from queue_new queueentit0_ where queueentit0_.item_id=265789733322663 
 {executed in 1 msec}
2020-11-19 19:59:21.371 INFO  jdbc.resultsettable Line:610 - 
|--------|----------|-----|-----|
|item_id |base_path |name |todo |
|--------|----------|-----|-----|
|--------|----------|-----|-----|

2020-11-19 19:59:21.374 INFO  jdbc.sqltiming Line:373 - insert into queue_new (base_path, name, todo, item_id) values ('00-资源文件/14-极客时间/01-专栏课/100-/', 
'137-正则表达式入门课', 1, 265789733322663) 
 {executed in 1 msec}
2020-11-19 19:59:21.381 INFO  jdbc.sqltiming Line:373 - select queueentit0_.item_id as item_id1_19_0_, queueentit0_.base_path as base_pat2_19_0_, queueentit0_.name 
as name3_19_0_, queueentit0_.todo as todo4_19_0_ from queue_new queueentit0_ where queueentit0_.item_id=362690645058896 
 {executed in 1 msec}
2020-11-19 19:59:21.383 INFO  jdbc.resultsettable Line:610 - 
|--------|----------|-----|-----|
|item_id |base_path |name |todo |
|--------|----------|-----|-----|
|--------|----------|-----|-----|

2020-11-19 19:59:21.387 INFO  jdbc.sqltiming Line:373 - insert into queue_new (base_path, name, todo, item_id) values ('00-资源文件/14-极客时间/01-专栏课/100-/', 
'136-编译原理实战课', 1, 362690645058896) 
 {executed in 1 msec}
2020-11-19 19:59:21.394 INFO  jdbc.sqltiming Line:373 - select queueentit0_.item_id as item_id1_19_0_, queueentit0_.base_path as base_pat2_19_0_, queueentit0_.name 
as name3_19_0_, queueentit0_.todo as todo4_19_0_ from queue_new queueentit0_ where queueentit0_.item_id=1009694361590758 
 {executed in 1 msec}
2020-11-19 19:59:21.396 INFO  jdbc.resultsettable Line:610 - 
|--------|----------|-----|-----|
|item_id |base_path |name |todo |
|--------|----------|-----|-----|
|--------|----------|-----|-----|

2020-11-19 19:59:21.399 INFO  jdbc.sqltiming Line:373 - insert into queue_new (base_path, name, todo, item_id) values ('00-资源文件/14-极客时间/01-专栏课/100-/', 
'134-软件设计之美', 1, 1009694361590758) 
 {executed in 1 msec}
2020-11-19 19:59:21.405 INFO  jdbc.sqltiming Line:373 - select queueentit0_.item_id as item_id1_19_0_, queueentit0_.base_path as base_pat2_19_0_, queueentit0_.name 
as name3_19_0_, queueentit0_.todo as todo4_19_0_ from queue_new queueentit0_ where queueentit0_.item_id=1043163351291812 
 {executed in 1 msec}
2020-11-19 19:59:21.407 INFO  jdbc.resultsettable Line:610 - 
|--------|----------|-----|-----|
|item_id |base_path |name |todo |
|--------|----------|-----|-----|
|--------|----------|-----|-----|

2020-11-19 19:59:21.410 INFO  jdbc.sqltiming Line:373 - insert into queue_new (base_path, name, todo, item_id) values ('00-资源文件/14-极客时间/01-专栏课/100-/', 
'133-职场求生攻略', 1, 1043163351291812) 
 {executed in 1 msec}
2020-11-19 19:59:21.419 INFO  jdbc.sqltiming Line:373 - select queueentit0_.item_id as item_id1_19_0_, queueentit0_.base_path as base_pat2_19_0_, queueentit0_.name 
as name3_19_0_, queueentit0_.todo as todo4_19_0_ from queue_new queueentit0_ where queueentit0_.item_id=1015719870973439 
 {executed in 1 msec}
2020-11-19 19:59:21.420 INFO  jdbc.resultsettable Line:610 - 
|--------|----------|-----|-----|
|item_id |base_path |name |todo |
|--------|----------|-----|-----|
|--------|----------|-----|-----|

2020-11-19 19:59:21.424 INFO  jdbc.sqltiming Line:373 - insert into queue_new (base_path, name, todo, item_id) values ('00-资源文件/14-极客时间/01-专栏课/100-/', 
'131-互联网人的英语私教课', 1, 1015719870973439) 
 {executed in 1 msec}
2020-11-19 19:59:21.431 INFO  jdbc.sqltiming Line:373 - select queueentit0_.item_id as item_id1_19_0_, queueentit0_.base_path as base_pat2_19_0_, queueentit0_.name 
as name3_19_0_, queueentit0_.todo as todo4_19_0_ from queue_new queueentit0_ where queueentit0_.item_id=548236384403719 
 {executed in 1 msec}
2020-11-19 19:59:21.433 INFO  jdbc.resultsettable Line:610 - 
|--------|----------|-----|-----|
|item_id |base_path |name |todo |
|--------|----------|-----|-----|
|--------|----------|-----|-----|

2020-11-19 19:59:21.437 INFO  jdbc.sqltiming Line:373 - insert into queue_new (base_path, name, todo, item_id) values ('00-资源文件/14-极客时间/01-专栏课/100-/', 
'130-罗剑锋的C++实战笔记', 1, 548236384403719) 
 {executed in 1 msec}
2020-11-19 19:59:21.445 INFO  jdbc.sqltiming Line:373 - select queueentit0_.item_id as item_id1_19_0_, queueentit0_.base_path as base_pat2_19_0_, queueentit0_.name 
as name3_19_0_, queueentit0_.todo as todo4_19_0_ from queue_new queueentit0_ where queueentit0_.item_id=247626502330214 
 {executed in 1 msec}
2020-11-19 19:59:21.447 INFO  jdbc.resultsettable Line:610 - 
|--------|----------|-----|-----|
|item_id |base_path |name |todo |
|--------|----------|-----|-----|
|--------|----------|-----|-----|

2020-11-19 19:59:21.451 INFO  jdbc.sqltiming Line:373 - insert into queue_new (base_path, name, todo, item_id) values ('00-资源文件/14-极客时间/01-专栏课/100-/', 
'129-系统性能调优必知必会', 1, 247626502330214) 
 {executed in 0 msec}
2020-11-19 19:59:21.459 INFO  jdbc.sqltiming Line:373 - select queueentit0_.item_id as item_id1_19_0_, queueentit0_.base_path as base_pat2_19_0_, queueentit0_.name 
as name3_19_0_, queueentit0_.todo as todo4_19_0_ from queue_new queueentit0_ where queueentit0_.item_id=30273335287282 
 {executed in 1 msec}
2020-11-19 19:59:21.461 INFO  jdbc.resultsettable Line:610 - 
|--------|----------|-----|-----|
|item_id |base_path |name |todo |
|--------|----------|-----|-----|
|--------|----------|-----|-----|

2020-11-19 19:59:21.464 INFO  jdbc.sqltiming Line:373 - insert into queue_new (base_path, name, todo, item_id) values ('00-资源文件/14-极客时间/01-专栏课/100-/', 
'128-视觉笔记入门课', 1, 30273335287282) 
 {executed in 1 msec}
2020-11-19 19:59:21.473 INFO  jdbc.sqltiming Line:373 - select queueentit0_.item_id as item_id1_19_0_, queueentit0_.base_path as base_pat2_19_0_, queueentit0_.name 
as name3_19_0_, queueentit0_.todo as todo4_19_0_ from queue_new queueentit0_ where queueentit0_.item_id=1094756506047680 
 {executed in 2 msec}
2020-11-19 19:59:21.474 INFO  jdbc.resultsettable Line:610 - 
|--------|----------|-----|-----|
|item_id |base_path |name |todo |
|--------|----------|-----|-----|
|--------|----------|-----|-----|

2020-11-19 19:59:21.478 INFO  jdbc.sqltiming Line:373 - insert into queue_new (base_path, name, todo, item_id) values ('00-资源文件/14-极客时间/01-专栏课/100-/', 
'127-Serverless入门课', 1, 1094756506047680) 
 {executed in 1 msec}
2020-11-19 19:59:21.487 INFO  jdbc.sqltiming Line:373 - select queueentit0_.item_id as item_id1_19_0_, queueentit0_.base_path as base_pat2_19_0_, queueentit0_.name 
as name3_19_0_, queueentit0_.todo as todo4_19_0_ from queue_new queueentit0_ where queueentit0_.item_id=871685579794828 
 {executed in 2 msec}
2020-11-19 19:59:21.489 INFO  jdbc.resultsettable Line:610 - 
|--------|----------|-----|-----|
|item_id |base_path |name |todo |
|--------|----------|-----|-----|
|--------|----------|-----|-----|

2020-11-19 19:59:21.492 INFO  jdbc.sqltiming Line:373 - insert into queue_new (base_path, name, todo, item_id) values ('00-资源文件/14-极客时间/01-专栏课/100-/', 
'126-Kafka核心源码解读', 1, 871685579794828) 
 {executed in 1 msec}
2020-11-19 19:59:21.499 INFO  jdbc.sqltiming Line:373 - select queueentit0_.item_id as item_id1_19_0_, queueentit0_.base_path as base_pat2_19_0_, queueentit0_.name 
as name3_19_0_, queueentit0_.todo as todo4_19_0_ from queue_new queueentit0_ where queueentit0_.item_id=942534675788112 
 {executed in 1 msec}
2020-11-19 19:59:21.501 INFO  jdbc.resultsettable Line:610 - 
|--------|----------|-----|-----|
|item_id |base_path |name |todo |
|--------|----------|-----|-----|
|--------|----------|-----|-----|

2020-11-19 19:59:21.505 INFO  jdbc.sqltiming Line:373 - insert into queue_new (base_path, name, todo, item_id) values ('00-资源文件/14-极客时间/01-专栏课/100-/', 
'124-数据中台实战课', 1, 942534675788112) 
 {executed in 1 msec}
2020-11-19 19:59:21.512 INFO  jdbc.sqltiming Line:373 - select queueentit0_.item_id as item_id1_19_0_, queueentit0_.base_path as base_pat2_19_0_, queueentit0_.name 
as name3_19_0_, queueentit0_.todo as todo4_19_0_ from queue_new queueentit0_ where queueentit0_.item_id=524148747141596 
 {executed in 1 msec}
2020-11-19 19:59:21.514 INFO  jdbc.resultsettable Line:610 - 
|--------|----------|-----|-----|
|item_id |base_path |name |todo |
|--------|----------|-----|-----|
|--------|----------|-----|-----|

2020-11-19 19:59:21.518 INFO  jdbc.sqltiming Line:373 - insert into queue_new (base_path, name, todo, item_id) values ('00-资源文件/14-极客时间/01-专栏课/100-/', 
'123-检索技术核心20讲', 1, 524148747141596) 
 {executed in 1 msec}
2020-11-19 19:59:21.525 INFO  jdbc.sqltiming Line:373 - select queueentit0_.item_id as item_id1_19_0_, queueentit0_.base_path as base_pat2_19_0_, queueentit0_.name 
as name3_19_0_, queueentit0_.todo as todo4_19_0_ from queue_new queueentit0_ where queueentit0_.item_id=320764270608622 
 {executed in 1 msec}
2020-11-19 19:59:21.527 INFO  jdbc.resultsettable Line:610 - 
|--------|----------|-----|-----|
|item_id |base_path |name |todo |
|--------|----------|-----|-----|
|--------|----------|-----|-----|

2020-11-19 19:59:21.530 INFO  jdbc.sqltiming Line:373 - insert into queue_new (base_path, name, todo, item_id) values ('00-资源文件/14-极客时间/01-专栏课/100-/', 
'122-SRE实战手册', 1, 320764270608622) 
 {executed in 0 msec}
2020-11-19 19:59:21.539 INFO  jdbc.sqltiming Line:373 - select queueentit0_.item_id as item_id1_19_0_, queueentit0_.base_path as base_pat2_19_0_, queueentit0_.name 
as name3_19_0_, queueentit0_.todo as todo4_19_0_ from queue_new queueentit0_ where queueentit0_.item_id=346275618842241 
 {executed in 1 msec}
2020-11-19 19:59:21.540 INFO  jdbc.resultsettable Line:610 - 
|--------|----------|-----|-----|
|item_id |base_path |name |todo |
|--------|----------|-----|-----|
|--------|----------|-----|-----|

2020-11-19 19:59:21.544 INFO  jdbc.sqltiming Line:373 - insert into queue_new (base_path, name, todo, item_id) values ('00-资源文件/14-极客时间/01-专栏课/100-/', 
'121-图解 Google V8', 1, 346275618842241) 
 {executed in 1 msec}
2020-11-19 19:59:21.551 INFO  jdbc.sqltiming Line:373 - select queueentit0_.item_id as item_id1_19_0_, queueentit0_.base_path as base_pat2_19_0_, queueentit0_.name 
as name3_19_0_, queueentit0_.todo as todo4_19_0_ from queue_new queueentit0_ where queueentit0_.item_id=585650065038261 
 {executed in 1 msec}
2020-11-19 19:59:21.553 INFO  jdbc.resultsettable Line:610 - 
|--------|----------|-----|-----|
|item_id |base_path |name |todo |
|--------|----------|-----|-----|
|--------|----------|-----|-----|

2020-11-19 19:59:21.557 INFO  jdbc.sqltiming Line:373 - insert into queue_new (base_path, name, todo, item_id) values ('00-资源文件/14-极客时间/01-专栏课/100-/', 
'119-Java 业务开发常见错误 100 例', 1, 585650065038261) 
 {executed in 1 msec}
2020-11-19 19:59:21.563 INFO  jdbc.sqltiming Line:373 - select queueentit0_.item_id as item_id1_19_0_, queueentit0_.base_path as base_pat2_19_0_, queueentit0_.name 
as name3_19_0_, queueentit0_.todo as todo4_19_0_ from queue_new queueentit0_ where queueentit0_.item_id=971040645034861 
 {executed in 0 msec}
2020-11-19 19:59:21.565 INFO  jdbc.resultsettable Line:610 - 
|--------|----------|-----|-----|
|item_id |base_path |name |todo |
|--------|----------|-----|-----|
|--------|----------|-----|-----|

2020-11-19 19:59:21.568 INFO  jdbc.sqltiming Line:373 - insert into queue_new (base_path, name, todo, item_id) values ('00-资源文件/14-极客时间/01-专栏课/100-/', 
'118-深入浅出云计算', 1, 971040645034861) 
 {executed in 0 msec}
2020-11-19 19:59:21.575 INFO  jdbc.sqltiming Line:373 - select queueentit0_.item_id as item_id1_19_0_, queueentit0_.base_path as base_pat2_19_0_, queueentit0_.name 
as name3_19_0_, queueentit0_.todo as todo4_19_0_ from queue_new queueentit0_ where queueentit0_.item_id=50160956307136 
 {executed in 1 msec}
2020-11-19 19:59:21.576 INFO  jdbc.resultsettable Line:610 - 
|--------|----------|-----|-----|
|item_id |base_path |name |todo |
|--------|----------|-----|-----|
|--------|----------|-----|-----|

2020-11-19 19:59:21.579 INFO  jdbc.sqltiming Line:373 - insert into queue_new (base_path, name, todo, item_id) values ('00-资源文件/14-极客时间/01-专栏课/100-/', 
'117-后端存储实战课', 1, 50160956307136) 
 {executed in 1 msec}
2020-11-19 19:59:21.586 INFO  jdbc.sqltiming Line:373 - select queueentit0_.item_id as item_id1_19_0_, queueentit0_.base_path as base_pat2_19_0_, queueentit0_.name 
as name3_19_0_, queueentit0_.todo as todo4_19_0_ from queue_new queueentit0_ where queueentit0_.item_id=1001679897721974 
 {executed in 1 msec}
2020-11-19 19:59:21.587 INFO  jdbc.resultsettable Line:610 - 
|--------|----------|-----|-----|
|item_id |base_path |name |todo |
|--------|----------|-----|-----|
|--------|----------|-----|-----|

2020-11-19 19:59:21.590 INFO  jdbc.sqltiming Line:373 - insert into queue_new (base_path, name, todo, item_id) values ('00-资源文件/14-极客时间/01-专栏课/100-/', 
'116-架构实战案例解析', 1, 1001679897721974) 
 {executed in 0 msec}
2020-11-19 19:59:21.597 INFO  jdbc.sqltiming Line:373 - select queueentit0_.item_id as item_id1_19_0_, queueentit0_.base_path as base_pat2_19_0_, queueentit0_.name 
as name3_19_0_, queueentit0_.todo as todo4_19_0_ from queue_new queueentit0_ where queueentit0_.item_id=1086978157709278 
 {executed in 1 msec}
2020-11-19 19:59:21.599 INFO  jdbc.resultsettable Line:610 - 
|--------|----------|-----|-----|
|item_id |base_path |name |todo |
|--------|----------|-----|-----|
|--------|----------|-----|-----|

2020-11-19 19:59:21.603 INFO  jdbc.sqltiming Line:373 - insert into queue_new (base_path, name, todo, item_id) values ('00-资源文件/14-极客时间/01-专栏课/100-/', 
'115-RPC实战与核心原理', 1, 1086978157709278) 
 {executed in 1 msec}
2020-11-19 19:59:21.610 INFO  jdbc.sqltiming Line:373 - select queueentit0_.item_id as item_id1_19_0_, queueentit0_.base_path as base_pat2_19_0_, queueentit0_.name 
as name3_19_0_, queueentit0_.todo as todo4_19_0_ from queue_new queueentit0_ where queueentit0_.item_id=669999397316387 
 {executed in 1 msec}
2020-11-19 19:59:21.612 INFO  jdbc.resultsettable Line:610 - 
|--------|----------|-----|-----|
|item_id |base_path |name |todo |
|--------|----------|-----|-----|
|--------|----------|-----|-----|

2020-11-19 19:59:21.615 INFO  jdbc.sqltiming Line:373 - insert into queue_new (base_path, name, todo, item_id) values ('00-资源文件/14-极客时间/01-专栏课/100-/', 
'114-分布式协议与算法实战', 1, 669999397316387) 
 {executed in 1 msec}
2020-11-19 19:59:21.622 INFO  jdbc.sqltiming Line:373 - select queueentit0_.item_id as item_id1_19_0_, queueentit0_.base_path as base_pat2_19_0_, queueentit0_.name 
as name3_19_0_, queueentit0_.todo as todo4_19_0_ from queue_new queueentit0_ where queueentit0_.item_id=185282258131952 
 {executed in 1 msec}
2020-11-19 19:59:21.624 INFO  jdbc.resultsettable Line:610 - 
|--------|----------|-----|-----|
|item_id |base_path |name |todo |
|--------|----------|-----|-----|
|--------|----------|-----|-----|

2020-11-19 19:59:21.627 INFO  jdbc.sqltiming Line:373 - insert into queue_new (base_path, name, todo, item_id) values ('00-资源文件/14-极客时间/01-专栏课/100-/', 
'113-接口测试实战课', 1, 185282258131952) 
 {executed in 1 msec}
2020-11-19 19:59:21.634 INFO  jdbc.sqltiming Line:373 - select queueentit0_.item_id as item_id1_19_0_, queueentit0_.base_path as base_pat2_19_0_, queueentit0_.name 
as name3_19_0_, queueentit0_.todo as todo4_19_0_ from queue_new queueentit0_ where queueentit0_.item_id=940770977340508 
 {executed in 1 msec}
2020-11-19 19:59:21.636 INFO  jdbc.resultsettable Line:610 - 
|--------|----------|-----|-----|
|item_id |base_path |name |todo |
|--------|----------|-----|-----|
|--------|----------|-----|-----|

2020-11-19 19:59:21.640 INFO  jdbc.sqltiming Line:373 - insert into queue_new (base_path, name, todo, item_id) values ('00-资源文件/14-极客时间/01-专栏课/100-/', 
'110-说透敏捷', 1, 940770977340508) 
 {executed in 1 msec}
2020-11-19 19:59:21.648 INFO  jdbc.sqltiming Line:373 - select queueentit0_.item_id as item_id1_19_0_, queueentit0_.base_path as base_pat2_19_0_, queueentit0_.name 
as name3_19_0_, queueentit0_.todo as todo4_19_0_ from queue_new queueentit0_ where queueentit0_.item_id=994224178551512 
 {executed in 1 msec}
2020-11-19 19:59:21.649 INFO  jdbc.resultsettable Line:610 - 
|--------|----------|-----|-----|
|item_id |base_path |name |todo |
|--------|----------|-----|-----|
|--------|----------|-----|-----|

2020-11-19 19:59:21.654 INFO  jdbc.sqltiming Line:373 - insert into queue_new (base_path, name, todo, item_id) values ('00-资源文件/14-极客时间/01-专栏课/100-/', 
'109-人人都能学会的编程入门课', 1, 994224178551512) 
 {executed in 1 msec}
2020-11-19 19:59:21.661 INFO  jdbc.sqltiming Line:373 - select queueentit0_.item_id as item_id1_19_0_, queueentit0_.base_path as base_pat2_19_0_, queueentit0_.name 
as name3_19_0_, queueentit0_.todo as todo4_19_0_ from queue_new queueentit0_ where queueentit0_.item_id=784914242559411 
 {executed in 1 msec}
2020-11-19 19:59:21.663 INFO  jdbc.resultsettable Line:610 - 
|--------|----------|-----|-----|
|item_id |base_path |name |todo |
|--------|----------|-----|-----|
|--------|----------|-----|-----|

2020-11-19 19:59:21.668 INFO  jdbc.sqltiming Line:373 - insert into queue_new (base_path, name, todo, item_id) values ('00-资源文件/14-极客时间/01-专栏课/100-/', 
'108-摄影入门课', 1, 784914242559411) 
 {executed in 2 msec}
2020-11-19 19:59:21.676 INFO  jdbc.sqltiming Line:373 - select queueentit0_.item_id as item_id1_19_0_, queueentit0_.base_path as base_pat2_19_0_, queueentit0_.name 
as name3_19_0_, queueentit0_.todo as todo4_19_0_ from queue_new queueentit0_ where queueentit0_.item_id=928104083811100 
 {executed in 1 msec}
2020-11-19 19:59:21.678 INFO  jdbc.resultsettable Line:610 - 
|--------|----------|-----|-----|
|item_id |base_path |name |todo |
|--------|----------|-----|-----|
|--------|----------|-----|-----|

2020-11-19 19:59:21.682 INFO  jdbc.sqltiming Line:373 - insert into queue_new (base_path, name, todo, item_id) values ('00-资源文件/14-极客时间/01-专栏课/100-/', 
'106-性能测试实战30讲', 1, 928104083811100) 
 {executed in 0 msec}
2020-11-19 19:59:21.689 INFO  jdbc.sqltiming Line:373 - select queueentit0_.item_id as item_id1_19_0_, queueentit0_.base_path as base_pat2_19_0_, queueentit0_.name 
as name3_19_0_, queueentit0_.todo as todo4_19_0_ from queue_new queueentit0_ where queueentit0_.item_id=681173628453061 
 {executed in 1 msec}
2020-11-19 19:59:21.691 INFO  jdbc.resultsettable Line:610 - 
|--------|----------|-----|-----|
|item_id |base_path |name |todo |
|--------|----------|-----|-----|
|--------|----------|-----|-----|

2020-11-19 19:59:21.694 INFO  jdbc.sqltiming Line:373 - insert into queue_new (base_path, name, todo, item_id) values ('00-资源文件/14-极客时间/01-专栏课/100-/', 
'105-安全攻防技能30讲', 1, 681173628453061) 
 {executed in 1 msec}
2020-11-19 19:59:21.702 INFO  jdbc.sqltiming Line:373 - select queueentit0_.item_id as item_id1_19_0_, queueentit0_.base_path as base_pat2_19_0_, queueentit0_.name 
as name3_19_0_, queueentit0_.todo as todo4_19_0_ from queue_new queueentit0_ where queueentit0_.item_id=582405746258252 
 {executed in 1 msec}
2020-11-19 19:59:21.703 INFO  jdbc.resultsettable Line:610 - 
|--------|----------|-----|-----|
|item_id |base_path |name |todo |
|--------|----------|-----|-----|
|--------|----------|-----|-----|

2020-11-19 19:59:21.707 INFO  jdbc.sqltiming Line:373 - insert into queue_new (base_path, name, todo, item_id) values ('00-资源文件/14-极客时间/01-专栏课/100-/', 
'104-性能工程高手课', 1, 582405746258252) 
 {executed in 1 msec}
2020-11-19 19:59:21.714 INFO  jdbc.sqltiming Line:373 - select queueentit0_.item_id as item_id1_19_0_, queueentit0_.base_path as base_pat2_19_0_, queueentit0_.name 
as name3_19_0_, queueentit0_.todo as todo4_19_0_ from queue_new queueentit0_ where queueentit0_.item_id=963736685390951 
 {executed in 1 msec}
2020-11-19 19:59:21.716 INFO  jdbc.resultsettable Line:610 - 
|--------|----------|-----|-----|
|item_id |base_path |name |todo |
|--------|----------|-----|-----|
|--------|----------|-----|-----|

2020-11-19 19:59:21.720 INFO  jdbc.sqltiming Line:373 - insert into queue_new (base_path, name, todo, item_id) values ('00-资源文件/14-极客时间/01-专栏课/100-/', 
'102-现代C++实战30讲', 1, 963736685390951) 
 {executed in 1 msec}
2020-11-19 19:59:21.728 INFO  jdbc.sqltiming Line:373 - select queueentit0_.item_id as item_id1_19_0_, queueentit0_.base_path as base_pat2_19_0_, queueentit0_.name 
as name3_19_0_, queueentit0_.todo as todo4_19_0_ from queue_new queueentit0_ where queueentit0_.item_id=163664295207354 
 {executed in 1 msec}
2020-11-19 19:59:21.729 INFO  jdbc.resultsettable Line:610 - 
|--------|----------|-----|-----|
|item_id |base_path |name |todo |
|--------|----------|-----|-----|
|--------|----------|-----|-----|

2020-11-19 19:59:21.734 INFO  jdbc.sqltiming Line:373 - insert into queue_new (base_path, name, todo, item_id) values ('00-资源文件/14-极客时间/01-专栏课/100-/', 
'101-后端技术面试38讲', 1, 163664295207354) 
 {executed in 1 msec}
2020-11-19 19:59:35.356 INFO  jdbc.sqltiming Line:373 - select queueentit0_.item_id as item_id1_19_0_, queueentit0_.base_path as base_pat2_19_0_, queueentit0_.name 
as name3_19_0_, queueentit0_.todo as todo4_19_0_ from queue_new queueentit0_ where queueentit0_.item_id=157440401439744 
 {executed in 1 msec}
2020-11-19 19:59:35.359 INFO  jdbc.resultsettable Line:610 - 
|--------|----------|-----|-----|
|item_id |base_path |name |todo |
|--------|----------|-----|-----|
|--------|----------|-----|-----|

2020-11-19 19:59:35.365 INFO  jdbc.sqltiming Line:373 - insert into queue_new (base_path, name, todo, item_id) values ('00-资源文件/14-极客时间/00-更新中的专栏/', 
'165-物联网开发实战', 1, 157440401439744) 
 {executed in 1 msec}
2020-11-19 19:59:35.381 INFO  jdbc.sqltiming Line:373 - select queueentit0_.item_id as item_id1_19_0_, queueentit0_.base_path as base_pat2_19_0_, queueentit0_.name 
as name3_19_0_, queueentit0_.todo as todo4_19_0_ from queue_new queueentit0_ where queueentit0_.item_id=284091118251452 
 {executed in 2 msec}
2020-11-19 19:59:35.387 INFO  jdbc.resultsettable Line:610 - 
|--------|----------|-----|-----|
|item_id |base_path |name |todo |
|--------|----------|-----|-----|
|--------|----------|-----|-----|

2020-11-19 19:59:35.396 INFO  jdbc.sqltiming Line:373 - insert into queue_new (base_path, name, todo, item_id) values ('00-资源文件/14-极客时间/00-更新中的专栏/', 
'162-乔新亮的CTO成长复盘', 1, 284091118251452) 
 {executed in 1 msec}
2020-11-19 19:59:35.407 INFO  jdbc.sqltiming Line:373 - select queueentit0_.item_id as item_id1_19_0_, queueentit0_.base_path as base_pat2_19_0_, queueentit0_.name 
as name3_19_0_, queueentit0_.todo as todo4_19_0_ from queue_new queueentit0_ where queueentit0_.item_id=1068644787528414 
 {executed in 1 msec}
2020-11-19 19:59:35.410 INFO  jdbc.resultsettable Line:610 - 
|--------|----------|-----|-----|
|item_id |base_path |name |todo |
|--------|----------|-----|-----|
|--------|----------|-----|-----|

2020-11-19 19:59:35.416 INFO  jdbc.sqltiming Line:373 - insert into queue_new (base_path, name, todo, item_id) values ('00-资源文件/14-极客时间/00-更新中的专栏/', 
'161-手机摄影', 1, 1068644787528414) 
 {executed in 1 msec}
2020-11-19 19:59:35.427 INFO  jdbc.sqltiming Line:373 - select queueentit0_.item_id as item_id1_19_0_, queueentit0_.base_path as base_pat2_19_0_, queueentit0_.name 
as name3_19_0_, queueentit0_.todo as todo4_19_0_ from queue_new queueentit0_ where queueentit0_.item_id=576527645406417 
 {executed in 1 msec}
2020-11-19 19:59:35.429 INFO  jdbc.resultsettable Line:610 - 
|--------|----------|-----|-----|
|item_id |base_path |name |todo |
|--------|----------|-----|-----|
|--------|----------|-----|-----|

2020-11-19 19:59:35.434 INFO  jdbc.sqltiming Line:373 - insert into queue_new (base_path, name, todo, item_id) values ('00-资源文件/14-极客时间/00-更新中的专栏/', 
'160-人人都用得上的写作课', 1, 576527645406417) 
 {executed in 1 msec}
2020-11-19 19:59:35.442 INFO  jdbc.sqltiming Line:373 - select queueentit0_.item_id as item_id1_19_0_, queueentit0_.base_path as base_pat2_19_0_, queueentit0_.name 
as name3_19_0_, queueentit0_.todo as todo4_19_0_ from queue_new queueentit0_ where queueentit0_.item_id=340284671035998 
 {executed in 1 msec}
2020-11-19 19:59:35.445 INFO  jdbc.resultsettable Line:610 - 
|--------|----------|-----|-----|
|item_id |base_path |name |todo |
|--------|----------|-----|-----|
|--------|----------|-----|-----|

2020-11-19 19:59:35.450 INFO  jdbc.sqltiming Line:373 - insert into queue_new (base_path, name, todo, item_id) values ('00-资源文件/14-极客时间/00-更新中的专栏/', 
'159-Go 并发编程实战课', 1, 340284671035998) 
 {executed in 1 msec}
2020-11-19 19:59:35.459 INFO  jdbc.sqltiming Line:373 - select queueentit0_.item_id as item_id1_19_0_, queueentit0_.base_path as base_pat2_19_0_, queueentit0_.name 
as name3_19_0_, queueentit0_.todo as todo4_19_0_ from queue_new queueentit0_ where queueentit0_.item_id=588673085542099 
 {executed in 1 msec}
2020-11-19 19:59:35.460 INFO  jdbc.resultsettable Line:610 - 
|--------|----------|-----|-----|
|item_id |base_path |name |todo |
|--------|----------|-----|-----|
|--------|----------|-----|-----|

2020-11-19 19:59:35.463 INFO  jdbc.sqltiming Line:373 - insert into queue_new (base_path, name, todo, item_id) values ('00-资源文件/14-极客时间/00-更新中的专栏/', 
'158-爱上跑步', 1, 588673085542099) 
 {executed in 0 msec}
2020-11-19 19:59:35.471 INFO  jdbc.sqltiming Line:373 - select queueentit0_.item_id as item_id1_19_0_, queueentit0_.base_path as base_pat2_19_0_, queueentit0_.name 
as name3_19_0_, queueentit0_.todo as todo4_19_0_ from queue_new queueentit0_ where queueentit0_.item_id=615903140553863 
 {executed in 0 msec}
2020-11-19 19:59:35.472 INFO  jdbc.resultsettable Line:610 - 
|--------|----------|-----|-----|
|item_id |base_path |name |todo |
|--------|----------|-----|-----|
|--------|----------|-----|-----|

2020-11-19 19:59:35.475 INFO  jdbc.sqltiming Line:373 - insert into queue_new (base_path, name, todo, item_id) values ('00-资源文件/14-极客时间/00-更新中的专栏/', 
'157-深度学习推荐系统实战', 1, 615903140553863) 
 {executed in 0 msec}
2020-11-19 19:59:35.482 INFO  jdbc.sqltiming Line:373 - select queueentit0_.item_id as item_id1_19_0_, queueentit0_.base_path as base_pat2_19_0_, queueentit0_.name 
as name3_19_0_, queueentit0_.todo as todo4_19_0_ from queue_new queueentit0_ where queueentit0_.item_id=962926283985387 
 {executed in 1 msec}
2020-11-19 19:59:35.484 INFO  jdbc.resultsettable Line:610 - 
|--------|----------|-----|-----|
|item_id |base_path |name |todo |
|--------|----------|-----|-----|
|--------|----------|-----|-----|

2020-11-19 19:59:35.487 INFO  jdbc.sqltiming Line:373 - insert into queue_new (base_path, name, todo, item_id) values ('00-资源文件/14-极客时间/00-更新中的专栏/', 
'154-用户体验设计实战课', 1, 962926283985387) 
 {executed in 1 msec}
2020-11-19 19:59:35.494 INFO  jdbc.sqltiming Line:373 - select queueentit0_.item_id as item_id1_19_0_, queueentit0_.base_path as base_pat2_19_0_, queueentit0_.name 
as name3_19_0_, queueentit0_.todo as todo4_19_0_ from queue_new queueentit0_ where queueentit0_.item_id=1119213978109346 
 {executed in 1 msec}
2020-11-19 19:59:35.496 INFO  jdbc.resultsettable Line:610 - 
|--------|----------|-----|-----|
|item_id |base_path |name |todo |
|--------|----------|-----|-----|
|--------|----------|-----|-----|

2020-11-19 19:59:35.499 INFO  jdbc.sqltiming Line:373 - insert into queue_new (base_path, name, todo, item_id) values ('00-资源文件/14-极客时间/00-更新中的专栏/', 
'146-Redis核心技术与实战', 1, 1119213978109346) 
 {executed in 0 msec}
2020-11-19 19:59:41.186 INFO  jdbc.sqltiming Line:373 - select queueentit0_.item_id as item_id1_19_0_, queueentit0_.base_path as base_pat2_19_0_, queueentit0_.name 
as name3_19_0_, queueentit0_.todo as todo4_19_0_ from queue_new queueentit0_ where queueentit0_.item_id=459081746926346 
 {executed in 3 msec}
2020-11-19 19:59:41.192 INFO  jdbc.resultsettable Line:610 - 
|--------|----------|-----|-----|
|item_id |base_path |name |todo |
|--------|----------|-----|-----|
|--------|----------|-----|-----|

2020-11-19 19:59:41.202 INFO  jdbc.sqltiming Line:373 - insert into queue_new (base_path, name, todo, item_id) values ('00-资源文件/14-极客时间/01-专栏课/051-99/', 
'99-JavaScript核心原理解析', 1, 459081746926346) 
 {executed in 2 msec}
2020-11-19 19:59:41.220 INFO  jdbc.sqltiming Line:373 - select queueentit0_.item_id as item_id1_19_0_, queueentit0_.base_path as base_pat2_19_0_, queueentit0_.name 
as name3_19_0_, queueentit0_.todo as todo4_19_0_ from queue_new queueentit0_ where queueentit0_.item_id=626896109933850 
 {executed in 2 msec}
2020-11-19 19:59:41.222 INFO  jdbc.resultsettable Line:610 - 
|--------|----------|-----|-----|
|item_id |base_path |name |todo |
|--------|----------|-----|-----|
|--------|----------|-----|-----|

2020-11-19 19:59:41.227 INFO  jdbc.sqltiming Line:373 - insert into queue_new (base_path, name, todo, item_id) values ('00-资源文件/14-极客时间/01-专栏课/051-99/', 
'98-设计模式之美', 1, 626896109933850) 
 {executed in 1 msec}
2020-11-19 19:59:41.237 INFO  jdbc.sqltiming Line:373 - select queueentit0_.item_id as item_id1_19_0_, queueentit0_.base_path as base_pat2_19_0_, queueentit0_.name 
as name3_19_0_, queueentit0_.todo as todo4_19_0_ from queue_new queueentit0_ where queueentit0_.item_id=621195835058382 
 {executed in 1 msec}
2020-11-19 19:59:41.239 INFO  jdbc.resultsettable Line:610 - 
|--------|----------|-----|-----|
|item_id |base_path |name |todo |
|--------|----------|-----|-----|
|--------|----------|-----|-----|

2020-11-19 19:59:41.257 INFO  jdbc.sqltiming Line:373 - insert into queue_new (base_path, name, todo, item_id) values ('00-资源文件/14-极客时间/01-专栏课/051-99/', 
'97-项目管理实战20讲', 1, 621195835058382) 
 {executed in 14 msec}
2020-11-19 19:59:41.266 INFO  jdbc.sqltiming Line:373 - select queueentit0_.item_id as item_id1_19_0_, queueentit0_.base_path as base_pat2_19_0_, queueentit0_.name 
as name3_19_0_, queueentit0_.todo as todo4_19_0_ from queue_new queueentit0_ where queueentit0_.item_id=936433950782588 
 {executed in 1 msec}
2020-11-19 19:59:41.267 INFO  jdbc.resultsettable Line:610 - 
|--------|----------|-----|-----|
|item_id |base_path |name |todo |
|--------|----------|-----|-----|
|--------|----------|-----|-----|

2020-11-19 19:59:41.270 INFO  jdbc.sqltiming Line:373 - insert into queue_new (base_path, name, todo, item_id) values ('00-资源文件/14-极客时间/01-专栏课/051-99/', 
'95-苏杰的产品创新课', 1, 936433950782588) 
 {executed in 0 msec}
2020-11-19 19:59:41.277 INFO  jdbc.sqltiming Line:373 - select queueentit0_.item_id as item_id1_19_0_, queueentit0_.base_path as base_pat2_19_0_, queueentit0_.name 
as name3_19_0_, queueentit0_.todo as todo4_19_0_ from queue_new queueentit0_ where queueentit0_.item_id=855137735533744 
 {executed in 1 msec}
2020-11-19 19:59:41.279 INFO  jdbc.resultsettable Line:610 - 
|--------|----------|-----|-----|
|item_id |base_path |name |todo |
|--------|----------|-----|-----|
|--------|----------|-----|-----|

2020-11-19 19:59:41.281 INFO  jdbc.sqltiming Line:373 - insert into queue_new (base_path, name, todo, item_id) values ('00-资源文件/14-极客时间/01-专栏课/051-99/', 
'94-DDD实战课', 1, 855137735533744) 
 {executed in 0 msec}
2020-11-19 19:59:41.288 INFO  jdbc.sqltiming Line:373 - select queueentit0_.item_id as item_id1_19_0_, queueentit0_.base_path as base_pat2_19_0_, queueentit0_.name 
as name3_19_0_, queueentit0_.todo as todo4_19_0_ from queue_new queueentit0_ where queueentit0_.item_id=952316731239648 
 {executed in 1 msec}
2020-11-19 19:59:41.290 INFO  jdbc.resultsettable Line:610 - 
|--------|----------|-----|-----|
|item_id |base_path |name |todo |
|--------|----------|-----|-----|
|--------|----------|-----|-----|

2020-11-19 19:59:41.293 INFO  jdbc.sqltiming Line:373 - insert into queue_new (base_path, name, todo, item_id) values ('00-资源文件/14-极客时间/01-专栏课/051-99/', 
'92-DevOps实战笔记', 1, 952316731239648) 
 {executed in 1 msec}
2020-11-19 19:59:41.299 INFO  jdbc.sqltiming Line:373 - select queueentit0_.item_id as item_id1_19_0_, queueentit0_.base_path as base_pat2_19_0_, queueentit0_.name 
as name3_19_0_, queueentit0_.todo as todo4_19_0_ from queue_new queueentit0_ where queueentit0_.item_id=876595205877896 
 {executed in 1 msec}
2020-11-19 19:59:41.301 INFO  jdbc.resultsettable Line:610 - 
|--------|----------|-----|-----|
|item_id |base_path |name |todo |
|--------|----------|-----|-----|
|--------|----------|-----|-----|

2020-11-19 19:59:41.304 INFO  jdbc.sqltiming Line:373 - insert into queue_new (base_path, name, todo, item_id) values ('00-资源文件/14-极客时间/01-专栏课/051-99/', 
'91-说透中台', 1, 876595205877896) 
 {executed in 0 msec}
2020-11-19 19:59:41.311 INFO  jdbc.sqltiming Line:373 - select queueentit0_.item_id as item_id1_19_0_, queueentit0_.base_path as base_pat2_19_0_, queueentit0_.name 
as name3_19_0_, queueentit0_.todo as todo4_19_0_ from queue_new queueentit0_ where queueentit0_.item_id=861073733380654 
 {executed in 1 msec}
2020-11-19 19:59:41.313 INFO  jdbc.resultsettable Line:610 - 
|--------|----------|-----|-----|
|item_id |base_path |name |todo |
|--------|----------|-----|-----|
|--------|----------|-----|-----|

2020-11-19 19:59:41.328 INFO  jdbc.sqltiming Line:373 - insert into queue_new (base_path, name, todo, item_id) values ('00-资源文件/14-极客时间/01-专栏课/051-99/', 
'90-分布式技术原理与算法解析', 1, 861073733380654) 
 {executed in 13 msec}
2020-11-19 19:59:41.340 INFO  jdbc.sqltiming Line:373 - select queueentit0_.item_id as item_id1_19_0_, queueentit0_.base_path as base_pat2_19_0_, queueentit0_.name 
as name3_19_0_, queueentit0_.todo as todo4_19_0_ from queue_new queueentit0_ where queueentit0_.item_id=476330106989327 
 {executed in 1 msec}
2020-11-19 19:59:41.342 INFO  jdbc.resultsettable Line:610 - 
|--------|----------|-----|-----|
|item_id |base_path |name |todo |
|--------|----------|-----|-----|
|--------|----------|-----|-----|

2020-11-19 19:59:41.346 INFO  jdbc.sqltiming Line:373 - insert into queue_new (base_path, name, todo, item_id) values ('00-资源文件/14-极客时间/01-专栏课/051-99/', 
'88-高并发系统设计40问', 1, 476330106989327) 
 {executed in 1 msec}
2020-11-19 19:59:41.353 INFO  jdbc.sqltiming Line:373 - select queueentit0_.item_id as item_id1_19_0_, queueentit0_.base_path as base_pat2_19_0_, queueentit0_.name 
as name3_19_0_, queueentit0_.todo as todo4_19_0_ from queue_new queueentit0_ where queueentit0_.item_id=283828550600385 
 {executed in 1 msec}
2020-11-19 19:59:41.355 INFO  jdbc.resultsettable Line:610 - 
|--------|----------|-----|-----|
|item_id |base_path |name |todo |
|--------|----------|-----|-----|
|--------|----------|-----|-----|

2020-11-19 19:59:41.358 INFO  jdbc.sqltiming Line:373 - insert into queue_new (base_path, name, todo, item_id) values ('00-资源文件/14-极客时间/01-专栏课/051-99/', 
'87-全栈工程师修炼指南', 1, 283828550600385) 
 {executed in 1 msec}
2020-11-19 19:59:41.364 INFO  jdbc.sqltiming Line:373 - select queueentit0_.item_id as item_id1_19_0_, queueentit0_.base_path as base_pat2_19_0_, queueentit0_.name 
as name3_19_0_, queueentit0_.todo as todo4_19_0_ from queue_new queueentit0_ where queueentit0_.item_id=789557280998655 
 {executed in 0 msec}
2020-11-19 19:59:41.366 INFO  jdbc.resultsettable Line:610 - 
|--------|----------|-----|-----|
|item_id |base_path |name |todo |
|--------|----------|-----|-----|
|--------|----------|-----|-----|

2020-11-19 19:59:41.369 INFO  jdbc.sqltiming Line:373 - insert into queue_new (base_path, name, todo, item_id) values ('00-资源文件/14-极客时间/01-专栏课/051-99/', 
'86-即时消息技术剖析与实战', 1, 789557280998655) 
 {executed in 1 msec}
2020-11-19 19:59:41.375 INFO  jdbc.sqltiming Line:373 - select queueentit0_.item_id as item_id1_19_0_, queueentit0_.base_path as base_pat2_19_0_, queueentit0_.name 
as name3_19_0_, queueentit0_.todo as todo4_19_0_ from queue_new queueentit0_ where queueentit0_.item_id=1004252009859251 
 {executed in 1 msec}
2020-11-19 19:59:41.377 INFO  jdbc.resultsettable Line:610 - 
|--------|----------|-----|-----|
|item_id |base_path |name |todo |
|--------|----------|-----|-----|
|--------|----------|-----|-----|

2020-11-19 19:59:41.380 INFO  jdbc.sqltiming Line:373 - insert into queue_new (base_path, name, todo, item_id) values ('00-资源文件/14-极客时间/01-专栏课/051-99/', 
'85-研发效率破局之道', 1, 1004252009859251) 
 {executed in 1 msec}
2020-11-19 19:59:41.387 INFO  jdbc.sqltiming Line:373 - select queueentit0_.item_id as item_id1_19_0_, queueentit0_.base_path as base_pat2_19_0_, queueentit0_.name 
as name3_19_0_, queueentit0_.todo as todo4_19_0_ from queue_new queueentit0_ where queueentit0_.item_id=877479874575179 
 {executed in 1 msec}
2020-11-19 19:59:41.388 INFO  jdbc.resultsettable Line:610 - 
|--------|----------|-----|-----|
|item_id |base_path |name |todo |
|--------|----------|-----|-----|
|--------|----------|-----|-----|

2020-11-19 19:59:41.392 INFO  jdbc.sqltiming Line:373 - insert into queue_new (base_path, name, todo, item_id) values ('00-资源文件/14-极客时间/01-专栏课/051-99/', 
'83-编译原理之美', 1, 877479874575179) 
 {executed in 1 msec}
2020-11-19 19:59:41.398 INFO  jdbc.sqltiming Line:373 - select queueentit0_.item_id as item_id1_19_0_, queueentit0_.base_path as base_pat2_19_0_, queueentit0_.name 
as name3_19_0_, queueentit0_.todo as todo4_19_0_ from queue_new queueentit0_ where queueentit0_.item_id=1009872364102685 
 {executed in 1 msec}
2020-11-19 19:59:41.400 INFO  jdbc.resultsettable Line:610 - 
|--------|----------|-----|-----|
|item_id |base_path |name |todo |
|--------|----------|-----|-----|
|--------|----------|-----|-----|

2020-11-19 19:59:41.404 INFO  jdbc.sqltiming Line:373 - insert into queue_new (base_path, name, todo, item_id) values ('00-资源文件/14-极客时间/01-专栏课/051-99/', 
'81-浏览器工作原理与实践', 1, 1009872364102685) 
 {executed in 1 msec}
2020-11-19 19:59:41.412 INFO  jdbc.sqltiming Line:373 - select queueentit0_.item_id as item_id1_19_0_, queueentit0_.base_path as base_pat2_19_0_, queueentit0_.name 
as name3_19_0_, queueentit0_.todo as todo4_19_0_ from queue_new queueentit0_ where queueentit0_.item_id=787964344536295 
 {executed in 2 msec}
2020-11-19 19:59:41.414 INFO  jdbc.resultsettable Line:610 - 
|--------|----------|-----|-----|
|item_id |base_path |name |todo |
|--------|----------|-----|-----|
|--------|----------|-----|-----|

2020-11-19 19:59:41.417 INFO  jdbc.sqltiming Line:373 - insert into queue_new (base_path, name, todo, item_id) values ('00-资源文件/14-极客时间/01-专栏课/051-99/', 
'80-网络编程实战', 1, 787964344536295) 
 {executed in 1 msec}
2020-11-19 19:59:41.425 INFO  jdbc.sqltiming Line:373 - select queueentit0_.item_id as item_id1_19_0_, queueentit0_.base_path as base_pat2_19_0_, queueentit0_.name 
as name3_19_0_, queueentit0_.todo as todo4_19_0_ from queue_new queueentit0_ where queueentit0_.item_id=1022101157981678 
 {executed in 1 msec}
2020-11-19 19:59:41.427 INFO  jdbc.resultsettable Line:610 - 
|--------|----------|-----|-----|
|item_id |base_path |name |todo |
|--------|----------|-----|-----|
|--------|----------|-----|-----|

2020-11-19 19:59:41.431 INFO  jdbc.sqltiming Line:373 - insert into queue_new (base_path, name, todo, item_id) values ('00-资源文件/14-极客时间/01-专栏课/051-99/', 
'79-消息队列高手课', 1, 1022101157981678) 
 {executed in 1 msec}
2020-11-19 19:59:41.438 INFO  jdbc.sqltiming Line:373 - select queueentit0_.item_id as item_id1_19_0_, queueentit0_.base_path as base_pat2_19_0_, queueentit0_.name 
as name3_19_0_, queueentit0_.todo as todo4_19_0_ from queue_new queueentit0_ where queueentit0_.item_id=409602706903658 
 {executed in 1 msec}
2020-11-19 19:59:41.441 INFO  jdbc.resultsettable Line:610 - 
|--------|----------|-----|-----|
|item_id |base_path |name |todo |
|--------|----------|-----|-----|
|--------|----------|-----|-----|

2020-11-19 19:59:41.444 INFO  jdbc.sqltiming Line:373 - insert into queue_new (base_path, name, todo, item_id) values ('00-资源文件/14-极客时间/01-专栏课/051-99/', 
'77-从0打造音视频直播系统', 1, 409602706903658) 
 {executed in 0 msec}
2020-11-19 19:59:41.452 INFO  jdbc.sqltiming Line:373 - select queueentit0_.item_id as item_id1_19_0_, queueentit0_.base_path as base_pat2_19_0_, queueentit0_.name 
as name3_19_0_, queueentit0_.todo as todo4_19_0_ from queue_new queueentit0_ where queueentit0_.item_id=781941951179116 
 {executed in 1 msec}
2020-11-19 19:59:41.453 INFO  jdbc.resultsettable Line:610 - 
|--------|----------|-----|-----|
|item_id |base_path |name |todo |
|--------|----------|-----|-----|
|--------|----------|-----|-----|

2020-11-19 19:59:41.457 INFO  jdbc.sqltiming Line:373 - insert into queue_new (base_path, name, todo, item_id) values ('00-资源文件/14-极客时间/01-专栏课/051-99/', 
'75-编辑训练营', 1, 781941951179116) 
 {executed in 0 msec}
2020-11-19 19:59:41.464 INFO  jdbc.sqltiming Line:373 - select queueentit0_.item_id as item_id1_19_0_, queueentit0_.base_path as base_pat2_19_0_, queueentit0_.name 
as name3_19_0_, queueentit0_.todo as todo4_19_0_ from queue_new queueentit0_ where queueentit0_.item_id=823812106395779 
 {executed in 1 msec}
2020-11-19 19:59:41.466 INFO  jdbc.resultsettable Line:610 - 
|--------|----------|-----|-----|
|item_id |base_path |name |todo |
|--------|----------|-----|-----|
|--------|----------|-----|-----|

2020-11-19 19:59:41.470 INFO  jdbc.sqltiming Line:373 - insert into queue_new (base_path, name, todo, item_id) values ('00-资源文件/14-极客时间/01-专栏课/051-99/', 
'74-Flutter核心技术与实战', 1, 823812106395779) 
 {executed in 1 msec}
2020-11-19 19:59:41.477 INFO  jdbc.sqltiming Line:373 - select queueentit0_.item_id as item_id1_19_0_, queueentit0_.base_path as base_pat2_19_0_, queueentit0_.name 
as name3_19_0_, queueentit0_.todo as todo4_19_0_ from queue_new queueentit0_ where queueentit0_.item_id=954967934009220 
 {executed in 1 msec}
2020-11-19 19:59:41.479 INFO  jdbc.resultsettable Line:610 - 
|--------|----------|-----|-----|
|item_id |base_path |name |todo |
|--------|----------|-----|-----|
|--------|----------|-----|-----|

2020-11-19 19:59:41.482 INFO  jdbc.sqltiming Line:373 - insert into queue_new (base_path, name, todo, item_id) values ('00-资源文件/14-极客时间/01-专栏课/051-99/', 
'73-黄勇的OKR实战笔记', 1, 954967934009220) 
 {executed in 1 msec}
2020-11-19 19:59:41.489 INFO  jdbc.sqltiming Line:373 - select queueentit0_.item_id as item_id1_19_0_, queueentit0_.base_path as base_pat2_19_0_, queueentit0_.name 
as name3_19_0_, queueentit0_.todo as todo4_19_0_ from queue_new queueentit0_ where queueentit0_.item_id=773737007105338 
 {executed in 1 msec}
2020-11-19 19:59:41.491 INFO  jdbc.resultsettable Line:610 - 
|--------|----------|-----|-----|
|item_id |base_path |name |todo |
|--------|----------|-----|-----|
|--------|----------|-----|-----|

2020-11-19 19:59:41.495 INFO  jdbc.sqltiming Line:373 - insert into queue_new (base_path, name, todo, item_id) values ('00-资源文件/14-极客时间/01-专栏课/051-99/', 
'53-OpenResty从入门到实战', 1, 773737007105338) 
 {executed in 1 msec}
2020-11-19 19:59:41.501 INFO  jdbc.sqltiming Line:373 - select queueentit0_.item_id as item_id1_19_0_, queueentit0_.base_path as base_pat2_19_0_, queueentit0_.name 
as name3_19_0_, queueentit0_.todo as todo4_19_0_ from queue_new queueentit0_ where queueentit0_.item_id=300655922831157 
 {executed in 1 msec}
2020-11-19 19:59:41.503 INFO  jdbc.resultsettable Line:610 - 
|--------|----------|-----|-----|
|item_id |base_path |name |todo |
|--------|----------|-----|-----|
|--------|----------|-----|-----|

2020-11-19 19:59:41.508 INFO  jdbc.sqltiming Line:373 - insert into queue_new (base_path, name, todo, item_id) values ('00-资源文件/14-极客时间/01-专栏课/051-99/', 
'52-透视HTTP协议', 1, 300655922831157) 
 {executed in 1 msec}
2020-11-19 19:59:41.514 INFO  jdbc.sqltiming Line:373 - select queueentit0_.item_id as item_id1_19_0_, queueentit0_.base_path as base_pat2_19_0_, queueentit0_.name 
as name3_19_0_, queueentit0_.todo as todo4_19_0_ from queue_new queueentit0_ where queueentit0_.item_id=390535478164697 
 {executed in 1 msec}
2020-11-19 19:59:41.516 INFO  jdbc.resultsettable Line:610 - 
|--------|----------|-----|-----|
|item_id |base_path |name |todo |
|--------|----------|-----|-----|
|--------|----------|-----|-----|

2020-11-19 19:59:41.519 INFO  jdbc.sqltiming Line:373 - insert into queue_new (base_path, name, todo, item_id) values ('00-资源文件/14-极客时间/01-专栏课/051-99/', 
'51-白话法律42讲', 1, 390535478164697) 
 {executed in 0 msec}
2020-11-19 20:00:50.878 INFO  jdbc.sqltiming Line:373 - select queueentit0_.item_id as item_id1_19_, queueentit0_.base_path as base_pat2_19_, queueentit0_.name 
as name3_19_, queueentit0_.todo as todo4_19_ from queue_new queueentit0_ where queueentit0_.todo=1 
 {executed in 6 msec}
2020-11-19 20:00:50.930 INFO  jdbc.resultsettable Line:610 - 
|-----------------|-------------------------------|------------------------|-----|
|item_id          |base_path                      |name                    |todo |
|-----------------|-------------------------------|------------------------|-----|
|2567197234077    |00-资源文件/14-极客时间/01-专栏课/01-50/  |08-深入拆解Java虚拟机          |1    |
|17976225100257   |00-资源文件/14-极客时间/01-专栏课/01-50/  |04-左耳听风                 |1    |
|21489049867468   |00-资源文件/14-极客时间/01-专栏课/01-50/  |24-Java并发编程实战           |1    |
|27598889448510   |00-资源文件/14-极客时间/01-专栏课/01-50/  |45-从0开始学游戏开发            |1    |
|30273335287282   |00-资源文件/14-极客时间/01-专栏课/100-/   |128-视觉笔记入门课             |1    |
|40470094302261   |00-资源文件/14-极客时间/01-专栏课/01-50/  |27-Android开发高手课         |1    |
|50160956307136   |00-资源文件/14-极客时间/01-专栏课/100-/   |117-后端存储实战课             |1    |
|59265297881006   |00-资源文件/14-极客时间/01-专栏课/01-50/  |25-软件测试52讲              |1    |
|102887340467989  |00-资源文件/14-极客时间/01-专栏课/01-50/  |39-程序员进阶攻略              |1    |
|153904253858458  |00-资源文件/14-极客时间/01-专栏课/01-50/  |35-面试现场                 |1    |
|156208253445825  |00-资源文件/14-极客时间/01-专栏课/100-/   |156-动态规划面试宝典            |1    |
|157440401439744  |00-资源文件/14-极客时间/00-更新中的专栏/     |165-物联网开发实战             |1    |
|163664295207354  |00-资源文件/14-极客时间/01-专栏课/100-/   |101-后端技术面试38讲           |1    |
|173100507946229  |00-资源文件/14-极客时间/01-专栏课/01-50/  |31-深入浅出计算机组成原理          |1    |
|185282258131952  |00-资源文件/14-极客时间/01-专栏课/100-/   |113-接口测试实战课             |1    |
|188123048142133  |00-资源文件/14-极客时间/01-专栏课/01-50/  |02-Java核心技术面试精讲         |1    |
|189642839258247  |00-资源文件/14-极客时间/01-专栏课/100-/   |139-跟月影学可视化             |1    |
|196670984574483  |00-资源文件/14-极客时间/01-专栏课/01-50/  |32-Python核心技术与实战        |1    |
|219716381517249  |00-资源文件/14-极客时间/01-专栏课/01-50/  |01-数据结构与算法之美            |1    |
|226482490102513  |00-资源文件/14-极客时间/01-专栏课/01-50/  |09-Go语言核心36讲            |1    |
|229684218633741  |00-资源文件/14-极客时间/01-专栏课/01-50/  |03-从0开始学架构              |1    |
|230935031759751  |00-资源文件/14-极客时间/01-专栏课/01-50/  |49-赵成的运维体系管理课           |1    |
|236649184516446  |00-资源文件/14-极客时间/01-专栏课/100-/   |143-Vim 实用技巧必知必会        |1    |
|247626502330214  |00-资源文件/14-极客时间/01-专栏课/100-/   |129-系统性能调优必知必会          |1    |
|259127881910466  |00-资源文件/14-极客时间/01-专栏课/01-50/  |43-软件工程之美               |1    |
|265789733322663  |00-资源文件/14-极客时间/01-专栏课/100-/   |137-正则表达式入门课            |1    |
|275786362405491  |00-资源文件/14-极客时间/01-专栏课/01-50/  |10-如何设计一个秒杀系统           |1    |
|283828550600385  |00-资源文件/14-极客时间/01-专栏课/051-99/ |87-全栈工程师修炼指南            |1    |
|284091118251452  |00-资源文件/14-极客时间/00-更新中的专栏/     |162-乔新亮的CTO成长复盘         |1    |
|299934684079928  |00-资源文件/14-极客时间/01-专栏课/01-50/  |06-MySQL实战45讲           |1    |
|300655922831157  |00-资源文件/14-极客时间/01-专栏课/051-99/ |52-透视HTTP协议             |1    |
|316423861762223  |00-资源文件/14-极客时间/01-专栏课/01-50/  |30-推荐系统三十六式             |1    |
|320764270608622  |00-资源文件/14-极客时间/01-专栏课/100-/   |122-SRE实战手册             |1    |
|324832329363742  |00-资源文件/14-极客时间/01-专栏课/01-50/  |15-趣谈Linux操作系统          |1    |
|340183784365065  |00-资源文件/14-极客时间/01-专栏课/100-/   |145-重学线性代数              |1    |
|340284671035998  |00-资源文件/14-极客时间/00-更新中的专栏/     |159-Go 并发编程实战课          |1    |
|346275618842241  |00-资源文件/14-极客时间/01-专栏课/100-/   |121-图解 Google V8        |1    |
|351607690414206  |00-资源文件/14-极客时间/01-专栏课/01-50/  |05-趣谈                   |1    |
|357340960398221  |00-资源文件/14-极客时间/01-专栏课/01-50/  |13-深入剖析Kubernetes       |1    |
|358164025219872  |00-资源文件/14-极客时间/01-专栏课/01-50/  |41-10x程序员工作法            |1    |
|362690645058896  |00-资源文件/14-极客时间/01-专栏课/100-/   |136-编译原理实战课             |1    |
|363795959997616  |00-资源文件/14-极客时间/01-专栏课/100-/   |149-Linux内核技术实战课        |1    |
|390535478164697  |00-资源文件/14-极客时间/01-专栏课/051-99/ |51-白话法律42讲              |1    |
|408324065293718  |00-资源文件/14-极客时间/01-专栏课/01-50/  |26-人工智能基础课              |1    |
|409602706903658  |00-资源文件/14-极客时间/01-专栏课/051-99/ |77-从0打造音视频直播系统          |1    |
|416203002069578  |00-资源文件/14-极客时间/01-专栏课/01-50/  |48-从0开始做增长              |1    |
|437150682821215  |00-资源文件/14-极客时间/01-专栏课/01-50/  |07-重学前端                 |1    |
|454553781238242  |00-资源文件/14-极客时间/01-专栏课/01-50/  |47-Java性能调优实战           |1    |
|459081746926346  |00-资源文件/14-极客时间/01-专栏课/051-99/ |99-JavaScript核心原理解析     |1    |
|476330106989327  |00-资源文件/14-极客时间/01-专栏课/051-99/ |88-高并发系统设计40问           |1    |
|490710026198350  |00-资源文件/14-极客时间/01-专栏课/01-50/  |29-朱赟的技术管理课             |1    |
|515518179556868  |00-资源文件/14-极客时间/01-专栏课/01-50/  |46-Kafka核心技术与实战         |1    |
|522828559742288  |00-资源文件/14-极客时间/01-专栏课/01-50/  |34-技术与商业案例解读            |1    |
|523629932543972  |00-资源文件/14-极客时间/01-专栏课/01-50/  |44-SQL必知必会              |1    |
|524148747141596  |00-资源文件/14-极客时间/01-专栏课/100-/   |123-检索技术核心20讲           |1    |
|548236384403719  |00-资源文件/14-极客时间/01-专栏课/100-/   |130-罗剑锋的C++实战笔记         |1    |
|573444380131948  |00-资源文件/14-极客时间/01-专栏课/01-50/  |38-机器学习40讲              |1    |
|576527645406417  |00-资源文件/14-极客时间/00-更新中的专栏/     |160-人人都用得上的写作课          |1    |
|582405746258252  |00-资源文件/14-极客时间/01-专栏课/100-/   |104-性能工程高手课             |1    |
|585650065038261  |00-资源文件/14-极客时间/01-专栏课/100-/   |119-Java 业务开发常见错误 100 例 |1    |
|588673085542099  |00-资源文件/14-极客时间/00-更新中的专栏/     |158-爱上跑步                |1    |
|605943376923287  |00-资源文件/14-极客时间/01-专栏课/01-50/  |20-技术领导力300讲            |1    |
|612872410368332  |00-资源文件/14-极客时间/01-专栏课/01-50/  |17-深入浅出区块链              |1    |
|615903140553863  |00-资源文件/14-极客时间/00-更新中的专栏/     |157-深度学习推荐系统实战          |1    |
|621195835058382  |00-资源文件/14-极客时间/01-专栏课/051-99/ |97-项目管理实战20讲            |1    |
|626896109933850  |00-资源文件/14-极客时间/01-专栏课/051-99/ |98-设计模式之美               |1    |
|635015970598106  |00-资源文件/14-极客时间/01-专栏课/100-/   |147-分布式数据库30讲           |1    |
|669999397316387  |00-资源文件/14-极客时间/01-专栏课/100-/   |114-分布式协议与算法实战          |1    |
|681173628453061  |00-资源文件/14-极客时间/01-专栏课/100-/   |105-安全攻防技能30讲           |1    |
|686983393201404  |00-资源文件/14-极客时间/01-专栏课/01-50/  |11-程序员的数学基础课            |1    |
|698835351218485  |00-资源文件/14-极客时间/01-专栏课/100-/   |150-技术管理案例课             |1    |
|726180354169294  |00-资源文件/14-极客时间/01-专栏课/01-50/  |23-邱岳的产品实战              |1    |
|753982223670808  |00-资源文件/14-极客时间/01-专栏课/01-50/  |18-技术管理实战36讲            |1    |
|764007294626889  |00-资源文件/14-极客时间/01-专栏课/01-50/  |37-AI技术内参               |1    |
|768924225267402  |00-资源文件/14-极客时间/01-专栏课/100-/   |144-如何看懂一幅画             |1    |
|773737007105338  |00-资源文件/14-极客时间/01-专栏课/051-99/ |53-OpenResty从入门到实战      |1    |
|781941951179116  |00-资源文件/14-极客时间/01-专栏课/051-99/ |75-编辑训练营                |1    |
|784914242559411  |00-资源文件/14-极客时间/01-专栏课/100-/   |108-摄影入门课               |1    |
|787964344536295  |00-资源文件/14-极客时间/01-专栏课/051-99/ |80-网络编程实战               |1    |
|789557280998655  |00-资源文件/14-极客时间/01-专栏课/051-99/ |86-即时消息技术剖析与实战          |1    |
|795802234194414  |00-资源文件/14-极客时间/01-专栏课/01-50/  |16-从0开始学微服务             |1    |
|820739868254222  |00-资源文件/14-极客时间/01-专栏课/01-50/  |19-数据分析实战45讲            |1    |
|823812106395779  |00-资源文件/14-极客时间/01-专栏课/051-99/ |74-Flutter核心技术与实战       |1    |
|838008654367537  |00-资源文件/14-极客时间/01-专栏课/01-50/  |21-从0开始学大数据             |1    |
|855137735533744  |00-资源文件/14-极客时间/01-专栏课/051-99/ |94-DDD实战课               |1    |
|861073733380654  |00-资源文件/14-极客时间/01-专栏课/051-99/ |90-分布式技术原理与算法解析         |1    |
|862346873236269  |00-资源文件/14-极客时间/01-专栏课/100-/   |141-OAuth 2.0实战课        |1    |
|863635885586868  |00-资源文件/14-极客时间/01-专栏课/01-50/  |36-大规模数据处理实战            |1    |
|868784738101290  |00-资源文件/14-极客时间/01-专栏课/01-50/  |14-许式伟的架构课              |1    |
|871685579794828  |00-资源文件/14-极客时间/01-专栏课/100-/   |126-Kafka核心源码解读         |1    |
|876595205877896  |00-资源文件/14-极客时间/01-专栏课/051-99/ |91-说透中台                 |1    |
|877479874575179  |00-资源文件/14-极客时间/01-专栏课/051-99/ |83-编译原理之美               |1    |
|898613456457502  |00-资源文件/14-极客时间/01-专栏课/01-50/  |40-持续交付36讲              |1    |
|928104083811100  |00-资源文件/14-极客时间/01-专栏课/100-/   |106-性能测试实战30讲           |1    |
|930228242468283  |00-资源文件/14-极客时间/01-专栏课/01-50/  |50-深入拆解Tomcat & Jetty   |1    |
|936433950782588  |00-资源文件/14-极客时间/01-专栏课/051-99/ |95-苏杰的产品创新课             |1    |
|940770977340508  |00-资源文件/14-极客时间/01-专栏课/100-/   |110-说透敏捷                |1    |
|942534675788112  |00-资源文件/14-极客时间/01-专栏课/100-/   |124-数据中台实战课             |1    |
|952316731239648  |00-资源文件/14-极客时间/01-专栏课/051-99/ |92-DevOps实战笔记           |1    |
|954967934009220  |00-资源文件/14-极客时间/01-专栏课/051-99/ |73-黄勇的OKR实战笔记           |1    |
|962926283985387  |00-资源文件/14-极客时间/00-更新中的专栏/     |154-用户体验设计实战课           |1    |
|963736685390951  |00-资源文件/14-极客时间/01-专栏课/100-/   |102-现代C++实战30讲          |1    |
|968336779497140  |00-资源文件/14-极客时间/01-专栏课/01-50/  |12-Linux性能优化实战          |1    |
|971040645034861  |00-资源文件/14-极客时间/01-专栏课/100-/   |118-深入浅出云计算             |1    |
|976210791517984  |00-资源文件/14-极客时间/01-专栏课/01-50/  |33-邱岳的产品手记              |1    |
|994224178551512  |00-资源文件/14-极客时间/01-专栏课/100-/   |109-人人都能学会的编程入门课        |1    |
|998473067641081  |00-资源文件/14-极客时间/01-专栏课/01-50/  |28-iOS开发高手课             |1    |
|1001679897721974 |00-资源文件/14-极客时间/01-专栏课/100-/   |116-架构实战案例解析            |1    |
|1004252009859251 |00-资源文件/14-极客时间/01-专栏课/051-99/ |85-研发效率破局之道             |1    |
|1009694361590758 |00-资源文件/14-极客时间/01-专栏课/100-/   |134-软件设计之美              |1    |
|1009872364102685 |00-资源文件/14-极客时间/01-专栏课/051-99/ |81-浏览器工作原理与实践           |1    |
|1015719870973439 |00-资源文件/14-极客时间/01-专栏课/100-/   |131-互联网人的英语私教课          |1    |
|1022101157981678 |00-资源文件/14-极客时间/01-专栏课/051-99/ |79-消息队列高手课              |1    |
|1034853610404229 |00-资源文件/14-极客时间/01-专栏课/100-/   |148-To B市场品牌实战课         |1    |
|1043163351291812 |00-资源文件/14-极客时间/01-专栏课/100-/   |133-职场求生攻略              |1    |
|1050459079191190 |00-资源文件/14-极客时间/01-专栏课/100-/   |155-WebAssembly入门课      |1    |
|1068644787528414 |00-资源文件/14-极客时间/00-更新中的专栏/     |161-手机摄影                |1    |
|1069499803697394 |00-资源文件/14-极客时间/01-专栏课/01-50/  |42 -代码精进之路              |1    |
|1080130144710172 |00-资源文件/14-极客时间/01-专栏课/01-50/  |22-硅谷产品实战36讲            |1    |
|1086978157709278 |00-资源文件/14-极客时间/01-专栏课/100-/   |115-RPC实战与核心原理          |1    |
|1094756506047680 |00-资源文件/14-极客时间/01-专栏课/100-/   |127-Serverless入门课       |1    |
|1119213978109346 |00-资源文件/14-极客时间/00-更新中的专栏/     |146-Redis核心技术与实战        |1    |
|-----------------|-------------------------------|------------------------|-----|

2020-11-19 20:02:34.044 INFO  geek.me.javaapi.JavaApiApplication Line:651 - No active profile set, falling back to default profiles: default
2020-11-19 20:02:36.322 INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate Line:127 - Bootstrapping Spring Data JPA repositories in DEFERRED mode.
2020-11-19 20:02:36.886 INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate Line:187 - Finished Spring Data repository scanning in 524ms. Found 20 JPA repository interfaces.
2020-11-19 20:02:37.648 INFO  org.springframework.cloud.context.scope.GenericScope Line:295 - BeanFactory id=a57235e8-b792-3882-8d3a-8bc20defb1fe
2020-11-19 20:02:39.262 INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer Line:108 - Tomcat initialized with port(s): 8080 (http)
2020-11-19 20:02:39.310 INFO  org.apache.coyote.http11.Http11NioProtocol Line:173 - Initializing ProtocolHandler ["http-nio-8080"]
2020-11-19 20:02:39.316 INFO  org.apache.catalina.core.StandardService Line:173 - Starting service [Tomcat]
2020-11-19 20:02:39.318 INFO  org.apache.catalina.core.StandardEngine Line:173 - Starting Servlet engine: [Apache Tomcat/9.0.37]
2020-11-19 20:02:39.882 INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Line:173 - Initializing Spring embedded WebApplicationContext
2020-11-19 20:02:39.883 INFO  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext Line:285 - Root WebApplicationContext: initialization completed in 5759 ms
2020-11-19 20:02:40.673 INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Line:181 - Initializing ExecutorService 'applicationTaskExecutor'
2020-11-19 20:02:40.718 INFO  com.zaxxer.hikari.HikariDataSource Line:110 - HikariPool-1 - Starting...
2020-11-19 20:02:41.237 INFO  com.zaxxer.hikari.HikariDataSource Line:123 - HikariPool-1 - Start completed.
2020-11-19 20:02:41.685 INFO  org.hibernate.jpa.internal.util.LogHelper Line:31  - HHH000204: Processing PersistenceUnitInfo [name: default]
2020-11-19 20:02:41.970 INFO  org.hibernate.Version Line:44  - HHH000412: Hibernate ORM core version 5.4.20.Final
2020-11-19 20:02:42.724 INFO  org.hibernate.annotations.common.Version Line:49  - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-11-19 20:02:43.175 INFO  com.netflix.config.sources.URLConfigurationSource Line:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-11-19 20:02:43.199 INFO  com.netflix.config.sources.URLConfigurationSource Line:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-11-19 20:02:43.356 INFO  org.hibernate.dialect.Dialect Line:170 - HHH000400: Using dialect: org.hibernate.dialect.MySQL55Dialect
2020-11-19 20:02:46.001 INFO  org.apache.coyote.http11.Http11NioProtocol Line:173 - Starting ProtocolHandler ["http-nio-8080"]
2020-11-19 20:02:46.134 INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer Line:220 - Tomcat started on port(s): 8080 (http) with context path ''
2020-11-19 20:02:46.931 INFO  org.springframework.data.repository.config.DeferredRepositoryInitializationListener Line:49  - Triggering deferred initialization of Spring Data repositories…
2020-11-19 20:02:47.089 INFO  org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator Line:52  - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-11-19 20:02:47.132 INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean Line:416 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-11-19 20:02:47.811 INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Line:173 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-11-19 20:02:47.812 INFO  org.springframework.web.servlet.DispatcherServlet Line:525 - Initializing Servlet 'dispatcherServlet'
2020-11-19 20:02:47.848 INFO  org.springframework.web.servlet.DispatcherServlet Line:547 - Completed initialization in 35 ms
2020-11-19 20:02:50.024 INFO  org.springframework.data.repository.config.DeferredRepositoryInitializationListener Line:53  - Spring Data repositories initialized!
2020-11-19 20:02:50.051 INFO  geek.me.javaapi.JavaApiApplication Line:61  - Started JavaApiApplication in 20.348 seconds (JVM running for 26.286)
2020-11-19 20:03:16.976 INFO  jdbc.sqltiming Line:373 - select queueentit0_.item_id as item_id1_19_, queueentit0_.base_path as base_pat2_19_, queueentit0_.name 
as name3_19_, queueentit0_.todo as todo4_19_ from queue_new queueentit0_ where queueentit0_.todo=1 
 {executed in 17 msec}
2020-11-19 20:03:17.104 INFO  jdbc.resultsettable Line:610 - 
|-----------------|-------------------------------|------------------------|-----|
|item_id          |base_path                      |name                    |todo |
|-----------------|-------------------------------|------------------------|-----|
|2567197234077    |00-资源文件/14-极客时间/01-专栏课/01-50/  |08-深入拆解Java虚拟机          |1    |
|17976225100257   |00-资源文件/14-极客时间/01-专栏课/01-50/  |04-左耳听风                 |1    |
|21489049867468   |00-资源文件/14-极客时间/01-专栏课/01-50/  |24-Java并发编程实战           |1    |
|27598889448510   |00-资源文件/14-极客时间/01-专栏课/01-50/  |45-从0开始学游戏开发            |1    |
|30273335287282   |00-资源文件/14-极客时间/01-专栏课/100-/   |128-视觉笔记入门课             |1    |
|40470094302261   |00-资源文件/14-极客时间/01-专栏课/01-50/  |27-Android开发高手课         |1    |
|50160956307136   |00-资源文件/14-极客时间/01-专栏课/100-/   |117-后端存储实战课             |1    |
|59265297881006   |00-资源文件/14-极客时间/01-专栏课/01-50/  |25-软件测试52讲              |1    |
|102887340467989  |00-资源文件/14-极客时间/01-专栏课/01-50/  |39-程序员进阶攻略              |1    |
|153904253858458  |00-资源文件/14-极客时间/01-专栏课/01-50/  |35-面试现场                 |1    |
|156208253445825  |00-资源文件/14-极客时间/01-专栏课/100-/   |156-动态规划面试宝典            |1    |
|157440401439744  |00-资源文件/14-极客时间/00-更新中的专栏/     |165-物联网开发实战             |1    |
|163664295207354  |00-资源文件/14-极客时间/01-专栏课/100-/   |101-后端技术面试38讲           |1    |
|173100507946229  |00-资源文件/14-极客时间/01-专栏课/01-50/  |31-深入浅出计算机组成原理          |1    |
|185282258131952  |00-资源文件/14-极客时间/01-专栏课/100-/   |113-接口测试实战课             |1    |
|188123048142133  |00-资源文件/14-极客时间/01-专栏课/01-50/  |02-Java核心技术面试精讲         |1    |
|189642839258247  |00-资源文件/14-极客时间/01-专栏课/100-/   |139-跟月影学可视化             |1    |
|196670984574483  |00-资源文件/14-极客时间/01-专栏课/01-50/  |32-Python核心技术与实战        |1    |
|219716381517249  |00-资源文件/14-极客时间/01-专栏课/01-50/  |01-数据结构与算法之美            |1    |
|226482490102513  |00-资源文件/14-极客时间/01-专栏课/01-50/  |09-Go语言核心36讲            |1    |
|229684218633741  |00-资源文件/14-极客时间/01-专栏课/01-50/  |03-从0开始学架构              |1    |
|230935031759751  |00-资源文件/14-极客时间/01-专栏课/01-50/  |49-赵成的运维体系管理课           |1    |
|236649184516446  |00-资源文件/14-极客时间/01-专栏课/100-/   |143-Vim 实用技巧必知必会        |1    |
|247626502330214  |00-资源文件/14-极客时间/01-专栏课/100-/   |129-系统性能调优必知必会          |1    |
|259127881910466  |00-资源文件/14-极客时间/01-专栏课/01-50/  |43-软件工程之美               |1    |
|265789733322663  |00-资源文件/14-极客时间/01-专栏课/100-/   |137-正则表达式入门课            |1    |
|275786362405491  |00-资源文件/14-极客时间/01-专栏课/01-50/  |10-如何设计一个秒杀系统           |1    |
|283828550600385  |00-资源文件/14-极客时间/01-专栏课/051-99/ |87-全栈工程师修炼指南            |1    |
|284091118251452  |00-资源文件/14-极客时间/00-更新中的专栏/     |162-乔新亮的CTO成长复盘         |1    |
|299934684079928  |00-资源文件/14-极客时间/01-专栏课/01-50/  |06-MySQL实战45讲           |1    |
|300655922831157  |00-资源文件/14-极客时间/01-专栏课/051-99/ |52-透视HTTP协议             |1    |
|316423861762223  |00-资源文件/14-极客时间/01-专栏课/01-50/  |30-推荐系统三十六式             |1    |
|320764270608622  |00-资源文件/14-极客时间/01-专栏课/100-/   |122-SRE实战手册             |1    |
|324832329363742  |00-资源文件/14-极客时间/01-专栏课/01-50/  |15-趣谈Linux操作系统          |1    |
|340183784365065  |00-资源文件/14-极客时间/01-专栏课/100-/   |145-重学线性代数              |1    |
|340284671035998  |00-资源文件/14-极客时间/00-更新中的专栏/     |159-Go 并发编程实战课          |1    |
|346275618842241  |00-资源文件/14-极客时间/01-专栏课/100-/   |121-图解 Google V8        |1    |
|351607690414206  |00-资源文件/14-极客时间/01-专栏课/01-50/  |05-趣谈                   |1    |
|357340960398221  |00-资源文件/14-极客时间/01-专栏课/01-50/  |13-深入剖析Kubernetes       |1    |
|358164025219872  |00-资源文件/14-极客时间/01-专栏课/01-50/  |41-10x程序员工作法            |1    |
|362690645058896  |00-资源文件/14-极客时间/01-专栏课/100-/   |136-编译原理实战课             |1    |
|363795959997616  |00-资源文件/14-极客时间/01-专栏课/100-/   |149-Linux内核技术实战课        |1    |
|390535478164697  |00-资源文件/14-极客时间/01-专栏课/051-99/ |51-白话法律42讲              |1    |
|408324065293718  |00-资源文件/14-极客时间/01-专栏课/01-50/  |26-人工智能基础课              |1    |
|409602706903658  |00-资源文件/14-极客时间/01-专栏课/051-99/ |77-从0打造音视频直播系统          |1    |
|416203002069578  |00-资源文件/14-极客时间/01-专栏课/01-50/  |48-从0开始做增长              |1    |
|437150682821215  |00-资源文件/14-极客时间/01-专栏课/01-50/  |07-重学前端                 |1    |
|454553781238242  |00-资源文件/14-极客时间/01-专栏课/01-50/  |47-Java性能调优实战           |1    |
|459081746926346  |00-资源文件/14-极客时间/01-专栏课/051-99/ |99-JavaScript核心原理解析     |1    |
|476330106989327  |00-资源文件/14-极客时间/01-专栏课/051-99/ |88-高并发系统设计40问           |1    |
|490710026198350  |00-资源文件/14-极客时间/01-专栏课/01-50/  |29-朱赟的技术管理课             |1    |
|515518179556868  |00-资源文件/14-极客时间/01-专栏课/01-50/  |46-Kafka核心技术与实战         |1    |
|522828559742288  |00-资源文件/14-极客时间/01-专栏课/01-50/  |34-技术与商业案例解读            |1    |
|523629932543972  |00-资源文件/14-极客时间/01-专栏课/01-50/  |44-SQL必知必会              |1    |
|524148747141596  |00-资源文件/14-极客时间/01-专栏课/100-/   |123-检索技术核心20讲           |1    |
|548236384403719  |00-资源文件/14-极客时间/01-专栏课/100-/   |130-罗剑锋的C++实战笔记         |1    |
|573444380131948  |00-资源文件/14-极客时间/01-专栏课/01-50/  |38-机器学习40讲              |1    |
|576527645406417  |00-资源文件/14-极客时间/00-更新中的专栏/     |160-人人都用得上的写作课          |1    |
|582405746258252  |00-资源文件/14-极客时间/01-专栏课/100-/   |104-性能工程高手课             |1    |
|585650065038261  |00-资源文件/14-极客时间/01-专栏课/100-/   |119-Java 业务开发常见错误 100 例 |1    |
|588673085542099  |00-资源文件/14-极客时间/00-更新中的专栏/     |158-爱上跑步                |1    |
|605943376923287  |00-资源文件/14-极客时间/01-专栏课/01-50/  |20-技术领导力300讲            |1    |
|612872410368332  |00-资源文件/14-极客时间/01-专栏课/01-50/  |17-深入浅出区块链              |1    |
|615903140553863  |00-资源文件/14-极客时间/00-更新中的专栏/     |157-深度学习推荐系统实战          |1    |
|621195835058382  |00-资源文件/14-极客时间/01-专栏课/051-99/ |97-项目管理实战20讲            |1    |
|626896109933850  |00-资源文件/14-极客时间/01-专栏课/051-99/ |98-设计模式之美               |1    |
|635015970598106  |00-资源文件/14-极客时间/01-专栏课/100-/   |147-分布式数据库30讲           |1    |
|669999397316387  |00-资源文件/14-极客时间/01-专栏课/100-/   |114-分布式协议与算法实战          |1    |
|681173628453061  |00-资源文件/14-极客时间/01-专栏课/100-/   |105-安全攻防技能30讲           |1    |
|686983393201404  |00-资源文件/14-极客时间/01-专栏课/01-50/  |11-程序员的数学基础课            |1    |
|698835351218485  |00-资源文件/14-极客时间/01-专栏课/100-/   |150-技术管理案例课             |1    |
|726180354169294  |00-资源文件/14-极客时间/01-专栏课/01-50/  |23-邱岳的产品实战              |1    |
|753982223670808  |00-资源文件/14-极客时间/01-专栏课/01-50/  |18-技术管理实战36讲            |1    |
|764007294626889  |00-资源文件/14-极客时间/01-专栏课/01-50/  |37-AI技术内参               |1    |
|768924225267402  |00-资源文件/14-极客时间/01-专栏课/100-/   |144-如何看懂一幅画             |1    |
|773737007105338  |00-资源文件/14-极客时间/01-专栏课/051-99/ |53-OpenResty从入门到实战      |1    |
|781941951179116  |00-资源文件/14-极客时间/01-专栏课/051-99/ |75-编辑训练营                |1    |
|784914242559411  |00-资源文件/14-极客时间/01-专栏课/100-/   |108-摄影入门课               |1    |
|787964344536295  |00-资源文件/14-极客时间/01-专栏课/051-99/ |80-网络编程实战               |1    |
|789557280998655  |00-资源文件/14-极客时间/01-专栏课/051-99/ |86-即时消息技术剖析与实战          |1    |
|795802234194414  |00-资源文件/14-极客时间/01-专栏课/01-50/  |16-从0开始学微服务             |1    |
|820739868254222  |00-资源文件/14-极客时间/01-专栏课/01-50/  |19-数据分析实战45讲            |1    |
|823812106395779  |00-资源文件/14-极客时间/01-专栏课/051-99/ |74-Flutter核心技术与实战       |1    |
|838008654367537  |00-资源文件/14-极客时间/01-专栏课/01-50/  |21-从0开始学大数据             |1    |
|855137735533744  |00-资源文件/14-极客时间/01-专栏课/051-99/ |94-DDD实战课               |1    |
|861073733380654  |00-资源文件/14-极客时间/01-专栏课/051-99/ |90-分布式技术原理与算法解析         |1    |
|862346873236269  |00-资源文件/14-极客时间/01-专栏课/100-/   |141-OAuth 2.0实战课        |1    |
|863635885586868  |00-资源文件/14-极客时间/01-专栏课/01-50/  |36-大规模数据处理实战            |1    |
|868784738101290  |00-资源文件/14-极客时间/01-专栏课/01-50/  |14-许式伟的架构课              |1    |
|871685579794828  |00-资源文件/14-极客时间/01-专栏课/100-/   |126-Kafka核心源码解读         |1    |
|876595205877896  |00-资源文件/14-极客时间/01-专栏课/051-99/ |91-说透中台                 |1    |
|877479874575179  |00-资源文件/14-极客时间/01-专栏课/051-99/ |83-编译原理之美               |1    |
|898613456457502  |00-资源文件/14-极客时间/01-专栏课/01-50/  |40-持续交付36讲              |1    |
|928104083811100  |00-资源文件/14-极客时间/01-专栏课/100-/   |106-性能测试实战30讲           |1    |
|930228242468283  |00-资源文件/14-极客时间/01-专栏课/01-50/  |50-深入拆解Tomcat & Jetty   |1    |
|936433950782588  |00-资源文件/14-极客时间/01-专栏课/051-99/ |95-苏杰的产品创新课             |1    |
|940770977340508  |00-资源文件/14-极客时间/01-专栏课/100-/   |110-说透敏捷                |1    |
|942534675788112  |00-资源文件/14-极客时间/01-专栏课/100-/   |124-数据中台实战课             |1    |
|952316731239648  |00-资源文件/14-极客时间/01-专栏课/051-99/ |92-DevOps实战笔记           |1    |
|954967934009220  |00-资源文件/14-极客时间/01-专栏课/051-99/ |73-黄勇的OKR实战笔记           |1    |
|962926283985387  |00-资源文件/14-极客时间/00-更新中的专栏/     |154-用户体验设计实战课           |1    |
|963736685390951  |00-资源文件/14-极客时间/01-专栏课/100-/   |102-现代C++实战30讲          |1    |
|968336779497140  |00-资源文件/14-极客时间/01-专栏课/01-50/  |12-Linux性能优化实战          |1    |
|971040645034861  |00-资源文件/14-极客时间/01-专栏课/100-/   |118-深入浅出云计算             |1    |
|976210791517984  |00-资源文件/14-极客时间/01-专栏课/01-50/  |33-邱岳的产品手记              |1    |
|994224178551512  |00-资源文件/14-极客时间/01-专栏课/100-/   |109-人人都能学会的编程入门课        |1    |
|998473067641081  |00-资源文件/14-极客时间/01-专栏课/01-50/  |28-iOS开发高手课             |1    |
|1001679897721974 |00-资源文件/14-极客时间/01-专栏课/100-/   |116-架构实战案例解析            |1    |
|1004252009859251 |00-资源文件/14-极客时间/01-专栏课/051-99/ |85-研发效率破局之道             |1    |
|1009694361590758 |00-资源文件/14-极客时间/01-专栏课/100-/   |134-软件设计之美              |1    |
|1009872364102685 |00-资源文件/14-极客时间/01-专栏课/051-99/ |81-浏览器工作原理与实践           |1    |
|1015719870973439 |00-资源文件/14-极客时间/01-专栏课/100-/   |131-互联网人的英语私教课          |1    |
|1022101157981678 |00-资源文件/14-极客时间/01-专栏课/051-99/ |79-消息队列高手课              |1    |
|1034853610404229 |00-资源文件/14-极客时间/01-专栏课/100-/   |148-To B市场品牌实战课         |1    |
|1043163351291812 |00-资源文件/14-极客时间/01-专栏课/100-/   |133-职场求生攻略              |1    |
|1050459079191190 |00-资源文件/14-极客时间/01-专栏课/100-/   |155-WebAssembly入门课      |1    |
|1068644787528414 |00-资源文件/14-极客时间/00-更新中的专栏/     |161-手机摄影                |1    |
|1069499803697394 |00-资源文件/14-极客时间/01-专栏课/01-50/  |42 -代码精进之路              |1    |
|1080130144710172 |00-资源文件/14-极客时间/01-专栏课/01-50/  |22-硅谷产品实战36讲            |1    |
|1086978157709278 |00-资源文件/14-极客时间/01-专栏课/100-/   |115-RPC实战与核心原理          |1    |
|1094756506047680 |00-资源文件/14-极客时间/01-专栏课/100-/   |127-Serverless入门课       |1    |
|1119213978109346 |00-资源文件/14-极客时间/00-更新中的专栏/     |146-Redis核心技术与实战        |1    |
|-----------------|-------------------------------|------------------------|-----|

2020-11-19 20:04:14.309 INFO  geek.me.javaapi.JavaApiApplication Line:651 - No active profile set, falling back to default profiles: default
2020-11-19 20:04:16.488 INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate Line:127 - Bootstrapping Spring Data JPA repositories in DEFERRED mode.
2020-11-19 20:04:17.071 INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate Line:187 - Finished Spring Data repository scanning in 546ms. Found 20 JPA repository interfaces.
2020-11-19 20:04:17.868 INFO  org.springframework.cloud.context.scope.GenericScope Line:295 - BeanFactory id=a57235e8-b792-3882-8d3a-8bc20defb1fe
2020-11-19 20:04:19.470 INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer Line:108 - Tomcat initialized with port(s): 8080 (http)
2020-11-19 20:04:19.512 INFO  org.apache.coyote.http11.Http11NioProtocol Line:173 - Initializing ProtocolHandler ["http-nio-8080"]
2020-11-19 20:04:19.514 INFO  org.apache.catalina.core.StandardService Line:173 - Starting service [Tomcat]
2020-11-19 20:04:19.516 INFO  org.apache.catalina.core.StandardEngine Line:173 - Starting Servlet engine: [Apache Tomcat/9.0.37]
2020-11-19 20:04:20.028 INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Line:173 - Initializing Spring embedded WebApplicationContext
2020-11-19 20:04:20.029 INFO  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext Line:285 - Root WebApplicationContext: initialization completed in 5644 ms
2020-11-19 20:04:20.844 INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Line:181 - Initializing ExecutorService 'applicationTaskExecutor'
2020-11-19 20:04:20.885 INFO  com.zaxxer.hikari.HikariDataSource Line:110 - HikariPool-1 - Starting...
2020-11-19 20:04:21.420 INFO  com.zaxxer.hikari.HikariDataSource Line:123 - HikariPool-1 - Start completed.
2020-11-19 20:04:21.858 INFO  org.hibernate.jpa.internal.util.LogHelper Line:31  - HHH000204: Processing PersistenceUnitInfo [name: default]
2020-11-19 20:04:22.118 INFO  org.hibernate.Version Line:44  - HHH000412: Hibernate ORM core version 5.4.20.Final
2020-11-19 20:04:22.847 INFO  org.hibernate.annotations.common.Version Line:49  - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-11-19 20:04:23.418 INFO  com.netflix.config.sources.URLConfigurationSource Line:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-11-19 20:04:23.441 INFO  com.netflix.config.sources.URLConfigurationSource Line:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-11-19 20:04:23.514 INFO  org.hibernate.dialect.Dialect Line:170 - HHH000400: Using dialect: org.hibernate.dialect.MySQL55Dialect
2020-11-19 20:04:26.384 INFO  org.apache.coyote.http11.Http11NioProtocol Line:173 - Starting ProtocolHandler ["http-nio-8080"]
2020-11-19 20:04:26.521 INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer Line:220 - Tomcat started on port(s): 8080 (http) with context path ''
2020-11-19 20:04:27.447 INFO  org.springframework.data.repository.config.DeferredRepositoryInitializationListener Line:49  - Triggering deferred initialization of Spring Data repositories…
2020-11-19 20:04:27.481 INFO  org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator Line:52  - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-11-19 20:04:27.557 INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean Line:416 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-11-19 20:04:27.672 INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Line:173 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-11-19 20:04:27.673 INFO  org.springframework.web.servlet.DispatcherServlet Line:525 - Initializing Servlet 'dispatcherServlet'
2020-11-19 20:04:28.329 INFO  org.springframework.web.servlet.DispatcherServlet Line:547 - Completed initialization in 654 ms
2020-11-19 20:04:30.688 INFO  org.springframework.data.repository.config.DeferredRepositoryInitializationListener Line:53  - Spring Data repositories initialized!
2020-11-19 20:04:30.714 INFO  geek.me.javaapi.JavaApiApplication Line:61  - Started JavaApiApplication in 21.282 seconds (JVM running for 25.874)
2020-11-19 20:04:46.129 INFO  jdbc.sqltiming Line:373 - select queueentit0_.item_id as item_id1_19_, queueentit0_.base_path as base_pat2_19_, queueentit0_.name 
as name3_19_, queueentit0_.todo as todo4_19_ from queue_new queueentit0_ where queueentit0_.todo=1 
 {executed in 19 msec}
2020-11-19 20:04:46.244 INFO  jdbc.resultsettable Line:610 - 
|-----------------|-------------------------------|------------------------|-----|
|item_id          |base_path                      |name                    |todo |
|-----------------|-------------------------------|------------------------|-----|
|2567197234077    |00-资源文件/14-极客时间/01-专栏课/01-50/  |08-深入拆解Java虚拟机          |1    |
|17976225100257   |00-资源文件/14-极客时间/01-专栏课/01-50/  |04-左耳听风                 |1    |
|21489049867468   |00-资源文件/14-极客时间/01-专栏课/01-50/  |24-Java并发编程实战           |1    |
|27598889448510   |00-资源文件/14-极客时间/01-专栏课/01-50/  |45-从0开始学游戏开发            |1    |
|30273335287282   |00-资源文件/14-极客时间/01-专栏课/100-/   |128-视觉笔记入门课             |1    |
|40470094302261   |00-资源文件/14-极客时间/01-专栏课/01-50/  |27-Android开发高手课         |1    |
|50160956307136   |00-资源文件/14-极客时间/01-专栏课/100-/   |117-后端存储实战课             |1    |
|59265297881006   |00-资源文件/14-极客时间/01-专栏课/01-50/  |25-软件测试52讲              |1    |
|102887340467989  |00-资源文件/14-极客时间/01-专栏课/01-50/  |39-程序员进阶攻略              |1    |
|153904253858458  |00-资源文件/14-极客时间/01-专栏课/01-50/  |35-面试现场                 |1    |
|156208253445825  |00-资源文件/14-极客时间/01-专栏课/100-/   |156-动态规划面试宝典            |1    |
|157440401439744  |00-资源文件/14-极客时间/00-更新中的专栏/     |165-物联网开发实战             |1    |
|163664295207354  |00-资源文件/14-极客时间/01-专栏课/100-/   |101-后端技术面试38讲           |1    |
|173100507946229  |00-资源文件/14-极客时间/01-专栏课/01-50/  |31-深入浅出计算机组成原理          |1    |
|185282258131952  |00-资源文件/14-极客时间/01-专栏课/100-/   |113-接口测试实战课             |1    |
|188123048142133  |00-资源文件/14-极客时间/01-专栏课/01-50/  |02-Java核心技术面试精讲         |1    |
|189642839258247  |00-资源文件/14-极客时间/01-专栏课/100-/   |139-跟月影学可视化             |1    |
|196670984574483  |00-资源文件/14-极客时间/01-专栏课/01-50/  |32-Python核心技术与实战        |1    |
|219716381517249  |00-资源文件/14-极客时间/01-专栏课/01-50/  |01-数据结构与算法之美            |1    |
|226482490102513  |00-资源文件/14-极客时间/01-专栏课/01-50/  |09-Go语言核心36讲            |1    |
|229684218633741  |00-资源文件/14-极客时间/01-专栏课/01-50/  |03-从0开始学架构              |1    |
|230935031759751  |00-资源文件/14-极客时间/01-专栏课/01-50/  |49-赵成的运维体系管理课           |1    |
|236649184516446  |00-资源文件/14-极客时间/01-专栏课/100-/   |143-Vim 实用技巧必知必会        |1    |
|247626502330214  |00-资源文件/14-极客时间/01-专栏课/100-/   |129-系统性能调优必知必会          |1    |
|259127881910466  |00-资源文件/14-极客时间/01-专栏课/01-50/  |43-软件工程之美               |1    |
|265789733322663  |00-资源文件/14-极客时间/01-专栏课/100-/   |137-正则表达式入门课            |1    |
|275786362405491  |00-资源文件/14-极客时间/01-专栏课/01-50/  |10-如何设计一个秒杀系统           |1    |
|283828550600385  |00-资源文件/14-极客时间/01-专栏课/051-99/ |87-全栈工程师修炼指南            |1    |
|284091118251452  |00-资源文件/14-极客时间/00-更新中的专栏/     |162-乔新亮的CTO成长复盘         |1    |
|299934684079928  |00-资源文件/14-极客时间/01-专栏课/01-50/  |06-MySQL实战45讲           |1    |
|300655922831157  |00-资源文件/14-极客时间/01-专栏课/051-99/ |52-透视HTTP协议             |1    |
|316423861762223  |00-资源文件/14-极客时间/01-专栏课/01-50/  |30-推荐系统三十六式             |1    |
|320764270608622  |00-资源文件/14-极客时间/01-专栏课/100-/   |122-SRE实战手册             |1    |
|324832329363742  |00-资源文件/14-极客时间/01-专栏课/01-50/  |15-趣谈Linux操作系统          |1    |
|340183784365065  |00-资源文件/14-极客时间/01-专栏课/100-/   |145-重学线性代数              |1    |
|340284671035998  |00-资源文件/14-极客时间/00-更新中的专栏/     |159-Go 并发编程实战课          |1    |
|346275618842241  |00-资源文件/14-极客时间/01-专栏课/100-/   |121-图解 Google V8        |1    |
|351607690414206  |00-资源文件/14-极客时间/01-专栏课/01-50/  |05-趣谈                   |1    |
|357340960398221  |00-资源文件/14-极客时间/01-专栏课/01-50/  |13-深入剖析Kubernetes       |1    |
|358164025219872  |00-资源文件/14-极客时间/01-专栏课/01-50/  |41-10x程序员工作法            |1    |
|362690645058896  |00-资源文件/14-极客时间/01-专栏课/100-/   |136-编译原理实战课             |1    |
|363795959997616  |00-资源文件/14-极客时间/01-专栏课/100-/   |149-Linux内核技术实战课        |1    |
|390535478164697  |00-资源文件/14-极客时间/01-专栏课/051-99/ |51-白话法律42讲              |1    |
|408324065293718  |00-资源文件/14-极客时间/01-专栏课/01-50/  |26-人工智能基础课              |1    |
|409602706903658  |00-资源文件/14-极客时间/01-专栏课/051-99/ |77-从0打造音视频直播系统          |1    |
|416203002069578  |00-资源文件/14-极客时间/01-专栏课/01-50/  |48-从0开始做增长              |1    |
|437150682821215  |00-资源文件/14-极客时间/01-专栏课/01-50/  |07-重学前端                 |1    |
|454553781238242  |00-资源文件/14-极客时间/01-专栏课/01-50/  |47-Java性能调优实战           |1    |
|459081746926346  |00-资源文件/14-极客时间/01-专栏课/051-99/ |99-JavaScript核心原理解析     |1    |
|476330106989327  |00-资源文件/14-极客时间/01-专栏课/051-99/ |88-高并发系统设计40问           |1    |
|490710026198350  |00-资源文件/14-极客时间/01-专栏课/01-50/  |29-朱赟的技术管理课             |1    |
|515518179556868  |00-资源文件/14-极客时间/01-专栏课/01-50/  |46-Kafka核心技术与实战         |1    |
|522828559742288  |00-资源文件/14-极客时间/01-专栏课/01-50/  |34-技术与商业案例解读            |1    |
|523629932543972  |00-资源文件/14-极客时间/01-专栏课/01-50/  |44-SQL必知必会              |1    |
|524148747141596  |00-资源文件/14-极客时间/01-专栏课/100-/   |123-检索技术核心20讲           |1    |
|548236384403719  |00-资源文件/14-极客时间/01-专栏课/100-/   |130-罗剑锋的C++实战笔记         |1    |
|573444380131948  |00-资源文件/14-极客时间/01-专栏课/01-50/  |38-机器学习40讲              |1    |
|576527645406417  |00-资源文件/14-极客时间/00-更新中的专栏/     |160-人人都用得上的写作课          |1    |
|582405746258252  |00-资源文件/14-极客时间/01-专栏课/100-/   |104-性能工程高手课             |1    |
|585650065038261  |00-资源文件/14-极客时间/01-专栏课/100-/   |119-Java 业务开发常见错误 100 例 |1    |
|588673085542099  |00-资源文件/14-极客时间/00-更新中的专栏/     |158-爱上跑步                |1    |
|605943376923287  |00-资源文件/14-极客时间/01-专栏课/01-50/  |20-技术领导力300讲            |1    |
|612872410368332  |00-资源文件/14-极客时间/01-专栏课/01-50/  |17-深入浅出区块链              |1    |
|615903140553863  |00-资源文件/14-极客时间/00-更新中的专栏/     |157-深度学习推荐系统实战          |1    |
|621195835058382  |00-资源文件/14-极客时间/01-专栏课/051-99/ |97-项目管理实战20讲            |1    |
|626896109933850  |00-资源文件/14-极客时间/01-专栏课/051-99/ |98-设计模式之美               |1    |
|635015970598106  |00-资源文件/14-极客时间/01-专栏课/100-/   |147-分布式数据库30讲           |1    |
|669999397316387  |00-资源文件/14-极客时间/01-专栏课/100-/   |114-分布式协议与算法实战          |1    |
|681173628453061  |00-资源文件/14-极客时间/01-专栏课/100-/   |105-安全攻防技能30讲           |1    |
|686983393201404  |00-资源文件/14-极客时间/01-专栏课/01-50/  |11-程序员的数学基础课            |1    |
|698835351218485  |00-资源文件/14-极客时间/01-专栏课/100-/   |150-技术管理案例课             |1    |
|726180354169294  |00-资源文件/14-极客时间/01-专栏课/01-50/  |23-邱岳的产品实战              |1    |
|753982223670808  |00-资源文件/14-极客时间/01-专栏课/01-50/  |18-技术管理实战36讲            |1    |
|764007294626889  |00-资源文件/14-极客时间/01-专栏课/01-50/  |37-AI技术内参               |1    |
|768924225267402  |00-资源文件/14-极客时间/01-专栏课/100-/   |144-如何看懂一幅画             |1    |
|773737007105338  |00-资源文件/14-极客时间/01-专栏课/051-99/ |53-OpenResty从入门到实战      |1    |
|781941951179116  |00-资源文件/14-极客时间/01-专栏课/051-99/ |75-编辑训练营                |1    |
|784914242559411  |00-资源文件/14-极客时间/01-专栏课/100-/   |108-摄影入门课               |1    |
|787964344536295  |00-资源文件/14-极客时间/01-专栏课/051-99/ |80-网络编程实战               |1    |
|789557280998655  |00-资源文件/14-极客时间/01-专栏课/051-99/ |86-即时消息技术剖析与实战          |1    |
|795802234194414  |00-资源文件/14-极客时间/01-专栏课/01-50/  |16-从0开始学微服务             |1    |
|820739868254222  |00-资源文件/14-极客时间/01-专栏课/01-50/  |19-数据分析实战45讲            |1    |
|823812106395779  |00-资源文件/14-极客时间/01-专栏课/051-99/ |74-Flutter核心技术与实战       |1    |
|838008654367537  |00-资源文件/14-极客时间/01-专栏课/01-50/  |21-从0开始学大数据             |1    |
|855137735533744  |00-资源文件/14-极客时间/01-专栏课/051-99/ |94-DDD实战课               |1    |
|861073733380654  |00-资源文件/14-极客时间/01-专栏课/051-99/ |90-分布式技术原理与算法解析         |1    |
|862346873236269  |00-资源文件/14-极客时间/01-专栏课/100-/   |141-OAuth 2.0实战课        |1    |
|863635885586868  |00-资源文件/14-极客时间/01-专栏课/01-50/  |36-大规模数据处理实战            |1    |
|868784738101290  |00-资源文件/14-极客时间/01-专栏课/01-50/  |14-许式伟的架构课              |1    |
|871685579794828  |00-资源文件/14-极客时间/01-专栏课/100-/   |126-Kafka核心源码解读         |1    |
|876595205877896  |00-资源文件/14-极客时间/01-专栏课/051-99/ |91-说透中台                 |1    |
|877479874575179  |00-资源文件/14-极客时间/01-专栏课/051-99/ |83-编译原理之美               |1    |
|898613456457502  |00-资源文件/14-极客时间/01-专栏课/01-50/  |40-持续交付36讲              |1    |
|928104083811100  |00-资源文件/14-极客时间/01-专栏课/100-/   |106-性能测试实战30讲           |1    |
|930228242468283  |00-资源文件/14-极客时间/01-专栏课/01-50/  |50-深入拆解Tomcat & Jetty   |1    |
|936433950782588  |00-资源文件/14-极客时间/01-专栏课/051-99/ |95-苏杰的产品创新课             |1    |
|940770977340508  |00-资源文件/14-极客时间/01-专栏课/100-/   |110-说透敏捷                |1    |
|942534675788112  |00-资源文件/14-极客时间/01-专栏课/100-/   |124-数据中台实战课             |1    |
|952316731239648  |00-资源文件/14-极客时间/01-专栏课/051-99/ |92-DevOps实战笔记           |1    |
|954967934009220  |00-资源文件/14-极客时间/01-专栏课/051-99/ |73-黄勇的OKR实战笔记           |1    |
|962926283985387  |00-资源文件/14-极客时间/00-更新中的专栏/     |154-用户体验设计实战课           |1    |
|963736685390951  |00-资源文件/14-极客时间/01-专栏课/100-/   |102-现代C++实战30讲          |1    |
|968336779497140  |00-资源文件/14-极客时间/01-专栏课/01-50/  |12-Linux性能优化实战          |1    |
|971040645034861  |00-资源文件/14-极客时间/01-专栏课/100-/   |118-深入浅出云计算             |1    |
|976210791517984  |00-资源文件/14-极客时间/01-专栏课/01-50/  |33-邱岳的产品手记              |1    |
|994224178551512  |00-资源文件/14-极客时间/01-专栏课/100-/   |109-人人都能学会的编程入门课        |1    |
|998473067641081  |00-资源文件/14-极客时间/01-专栏课/01-50/  |28-iOS开发高手课             |1    |
|1001679897721974 |00-资源文件/14-极客时间/01-专栏课/100-/   |116-架构实战案例解析            |1    |
|1004252009859251 |00-资源文件/14-极客时间/01-专栏课/051-99/ |85-研发效率破局之道             |1    |
|1009694361590758 |00-资源文件/14-极客时间/01-专栏课/100-/   |134-软件设计之美              |1    |
|1009872364102685 |00-资源文件/14-极客时间/01-专栏课/051-99/ |81-浏览器工作原理与实践           |1    |
|1015719870973439 |00-资源文件/14-极客时间/01-专栏课/100-/   |131-互联网人的英语私教课          |1    |
|1022101157981678 |00-资源文件/14-极客时间/01-专栏课/051-99/ |79-消息队列高手课              |1    |
|1034853610404229 |00-资源文件/14-极客时间/01-专栏课/100-/   |148-To B市场品牌实战课         |1    |
|1043163351291812 |00-资源文件/14-极客时间/01-专栏课/100-/   |133-职场求生攻略              |1    |
|1050459079191190 |00-资源文件/14-极客时间/01-专栏课/100-/   |155-WebAssembly入门课      |1    |
|1068644787528414 |00-资源文件/14-极客时间/00-更新中的专栏/     |161-手机摄影                |1    |
|1069499803697394 |00-资源文件/14-极客时间/01-专栏课/01-50/  |42 -代码精进之路              |1    |
|1080130144710172 |00-资源文件/14-极客时间/01-专栏课/01-50/  |22-硅谷产品实战36讲            |1    |
|1086978157709278 |00-资源文件/14-极客时间/01-专栏课/100-/   |115-RPC实战与核心原理          |1    |
|1094756506047680 |00-资源文件/14-极客时间/01-专栏课/100-/   |127-Serverless入门课       |1    |
|1119213978109346 |00-资源文件/14-极客时间/00-更新中的专栏/     |146-Redis核心技术与实战        |1    |
|-----------------|-------------------------------|------------------------|-----|

2020-11-19 20:04:57.731 INFO  jdbc.sqltiming Line:373 - select bookfieldf0_.entity_id as entity_i1_7_, bookfieldf0_.bundle as bundle2_7_, bookfieldf0_.delta 
as delta3_7_, bookfieldf0_.field_fsid_value as field_fs4_7_, bookfieldf0_.langcode as langcode5_7_, 
bookfieldf0_.revision_id as revision6_7_ from node__field_fsid bookfieldf0_ where bookfieldf0_.field_fsid_value='2567197234077' 
 {executed in 15 msec}
2020-11-19 20:04:57.734 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------|---------|------------|
|entity_id |bundle |delta |field_fsid_value |langcode |revision_id |
|----------|-------|------|-----------------|---------|------------|
|----------|-------|------|-----------------|---------|------------|

2020-11-19 20:04:57.862 INFO  jdbc.sqltiming Line:373 - insert into node_revision (langcode, nid, revision_default, revision_timestamp, revision_uid) 
values ('zh-hans', 0, 1, 1605787497, 1) 
 {executed in 13 msec}
2020-11-19 20:04:57.864 INFO  jdbc.sqltiming Line:373 - getGeneratedKeys on query: insert into node_revision (langcode, nid, revision_default, revision_timestamp, 
revision_uid) values ('zh-hans', 0, 1, 1605787497, 1) 
 {executed in 1 msec}
2020-11-19 20:04:57.871 INFO  jdbc.resultsettable Line:610 - 
|--------------|
|generated_key |
|--------------|
|1             |
|--------------|

2020-11-19 20:04:57.944 INFO  jdbc.sqltiming Line:373 - insert into node (langcode, type, uuid, vid) values ('zh-hans', 'book', '6a51653c-fbad-4e07-98ae-47d4308e9849', 
1) 
 {executed in 9 msec}
2020-11-19 20:04:57.946 INFO  jdbc.sqltiming Line:373 - getGeneratedKeys on query: insert into node (langcode, type, uuid, vid) values ('zh-hans', 
'book', '6a51653c-fbad-4e07-98ae-47d4308e9849', 1) 
 {executed in 1 msec}
2020-11-19 20:04:57.949 INFO  jdbc.resultsettable Line:610 - 
|--------------|
|generated_key |
|--------------|
|1             |
|--------------|

2020-11-19 20:04:58.019 INFO  jdbc.sqltiming Line:373 - update node_revision set langcode='zh-hans', nid=1, revision_default=1, revision_timestamp=1605787497, 
revision_uid=1 where vid=1 
 {executed in 3 msec}
2020-11-19 20:04:58.071 INFO  jdbc.sqltiming Line:373 - select bookfieldf0_.entity_id as entity_i1_7_0_, bookfieldf0_.bundle as bundle2_7_0_, bookfieldf0_.delta 
as delta3_7_0_, bookfieldf0_.field_fsid_value as field_fs4_7_0_, bookfieldf0_.langcode as langcode5_7_0_, 
bookfieldf0_.revision_id as revision6_7_0_ from node__field_fsid bookfieldf0_ where bookfieldf0_.entity_id=1 
 {executed in 2 msec}
2020-11-19 20:04:58.073 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------|---------|------------|
|entity_id |bundle |delta |field_fsid_value |langcode |revision_id |
|----------|-------|------|-----------------|---------|------------|
|----------|-------|------|-----------------|---------|------------|

2020-11-19 20:04:58.092 INFO  jdbc.sqltiming Line:373 - insert into node__field_fsid (bundle, delta, field_fsid_value, langcode, revision_id, entity_id) 
values ('book', 0, '2567197234077', 'zh-hans', 1, 1) 
 {executed in 2 msec}
2020-11-19 20:04:58.117 INFO  jdbc.sqltiming Line:373 - select nodefieldf0_.entity_id as entity_i1_16_0_, nodefieldf0_.bundle as bundle2_16_0_, nodefieldf0_.delta 
as delta3_16_0_, nodefieldf0_.field_fsid_value as field_fs4_16_0_, nodefieldf0_.langcode as 
langcode5_16_0_, nodefieldf0_.revision_id as revision6_16_0_ from node_revision__field_fsid 
nodefieldf0_ where nodefieldf0_.entity_id=1 
 {executed in 9 msec}
2020-11-19 20:04:58.120 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------|---------|------------|
|entity_id |bundle |delta |field_fsid_value |langcode |revision_id |
|----------|-------|------|-----------------|---------|------------|
|----------|-------|------|-----------------|---------|------------|

2020-11-19 20:04:58.131 INFO  jdbc.sqltiming Line:373 - insert into node_revision__field_fsid (bundle, delta, field_fsid_value, langcode, revision_id, 
entity_id) values ('book', 0, '2567197234077', 'zh-hans', 1, 1) 
 {executed in 2 msec}
2020-11-19 20:04:58.150 INFO  jdbc.sqltiming Line:373 - select bookentity0_.nid as nid1_1_, bookentity0_.bid as bid2_1_, bookentity0_.depth as depth3_1_, 
bookentity0_.has_children as has_chil4_1_, bookentity0_.p1 as p5_1_, bookentity0_.p2 as p6_1_, 
bookentity0_.p3 as p7_1_, bookentity0_.p4 as p8_1_, bookentity0_.p5 as p9_1_, bookentity0_.pid 
as pid10_1_, bookentity0_.weight as weight11_1_ from book bookentity0_ where bookentity0_.nid=1 
 {executed in 6 msec}
2020-11-19 20:04:58.152 INFO  jdbc.resultsettable Line:610 - 
|----|----|------|-------------|---|---|---|---|---|----|-------|
|nid |bid |depth |has_children |p1 |p2 |p3 |p4 |p5 |pid |weight |
|----|----|------|-------------|---|---|---|---|---|----|-------|
|----|----|------|-------------|---|---|---|---|---|----|-------|

2020-11-19 20:04:58.171 INFO  jdbc.sqltiming Line:373 - select bookentity0_.nid as nid1_1_0_, bookentity0_.bid as bid2_1_0_, bookentity0_.depth as 
depth3_1_0_, bookentity0_.has_children as has_chil4_1_0_, bookentity0_.p1 as p5_1_0_, bookentity0_.p2 
as p6_1_0_, bookentity0_.p3 as p7_1_0_, bookentity0_.p4 as p8_1_0_, bookentity0_.p5 as p9_1_0_, 
bookentity0_.pid as pid10_1_0_, bookentity0_.weight as weight11_1_0_ from book bookentity0_ 
where bookentity0_.nid=1 
 {executed in 2 msec}
2020-11-19 20:04:58.174 INFO  jdbc.resultsettable Line:610 - 
|----|----|------|-------------|---|---|---|---|---|----|-------|
|nid |bid |depth |has_children |p1 |p2 |p3 |p4 |p5 |pid |weight |
|----|----|------|-------------|---|---|---|---|---|----|-------|
|----|----|------|-------------|---|---|---|---|---|----|-------|

2020-11-19 20:04:58.190 INFO  jdbc.sqltiming Line:373 - insert into book (bid, depth, has_children, p1, p2, p3, p4, p5, pid, weight, nid) values (1, 
1, 1, 1, 0, 0, 0, 0, 0, 0, 1) 
 {executed in 3 msec}
2020-11-19 20:04:58.247 INFO  jdbc.sqltiming Line:373 - select nodebodyen0_.entity_id as entity_i1_4_, nodebodyen0_.body_value as body_val2_4_, nodebodyen0_.body_summary 
as body_sum3_4_, nodebodyen0_.bundle as bundle4_4_, nodebodyen0_.delta as delta5_4_, nodebodyen0_.body_format 
as body_for6_4_, nodebodyen0_.langcode as langcode7_4_, nodebodyen0_.revision_id as revision8_4_ 
from node__body nodebodyen0_ where nodebodyen0_.entity_id=1 
 {executed in 39 msec}
2020-11-19 20:04:58.250 INFO  jdbc.resultsettable Line:610 - 
|----------|-----------|-------------|-------|------|------------|---------|------------|
|entity_id |body_value |body_summary |bundle |delta |body_format |langcode |revision_id |
|----------|-----------|-------------|-------|------|------------|---------|------------|
|----------|-----------|-------------|-------|------|------------|---------|------------|

2020-11-19 20:04:58.288 INFO  jdbc.sqltiming Line:373 - select nodebodyre0_.entity_id as entity_i1_13_0_, nodebodyre0_.body_value as body_val2_13_0_, 
nodebodyre0_.body_summary as body_sum3_13_0_, nodebodyre0_.bundle as bundle4_13_0_, nodebodyre0_.delta 
as delta5_13_0_, nodebodyre0_.body_format as body_for6_13_0_, nodebodyre0_.langcode as langcode7_13_0_, 
nodebodyre0_.revision_id as revision8_13_0_ from node_revision__body nodebodyre0_ where nodebodyre0_.entity_id=1 
 {executed in 15 msec}
2020-11-19 20:04:58.290 INFO  jdbc.resultsettable Line:610 - 
|----------|-----------|-------------|-------|------|------------|---------|------------|
|entity_id |body_value |body_summary |bundle |delta |body_format |langcode |revision_id |
|----------|-----------|-------------|-------|------|------------|---------|------------|
|----------|-----------|-------------|-------|------|------------|---------|------------|

2020-11-19 20:04:58.301 INFO  jdbc.sqltiming Line:373 - insert into node_revision__body (body_value, body_summary, bundle, delta, body_format, langcode, 
revision_id, entity_id) values ('', '', 'book', 0, 'full_html', 'zh-hans', 1, 1) 
 {executed in 5 msec}
2020-11-19 20:04:58.322 INFO  jdbc.sqltiming Line:373 - select nodebodyen0_.entity_id as entity_i1_4_0_, nodebodyen0_.body_value as body_val2_4_0_, 
nodebodyen0_.body_summary as body_sum3_4_0_, nodebodyen0_.bundle as bundle4_4_0_, nodebodyen0_.delta 
as delta5_4_0_, nodebodyen0_.body_format as body_for6_4_0_, nodebodyen0_.langcode as langcode7_4_0_, 
nodebodyen0_.revision_id as revision8_4_0_ from node__body nodebodyen0_ where nodebodyen0_.entity_id=1 
 {executed in 2 msec}
2020-11-19 20:04:58.324 INFO  jdbc.resultsettable Line:610 - 
|----------|-----------|-------------|-------|------|------------|---------|------------|
|entity_id |body_value |body_summary |bundle |delta |body_format |langcode |revision_id |
|----------|-----------|-------------|-------|------|------------|---------|------------|
|----------|-----------|-------------|-------|------|------------|---------|------------|

2020-11-19 20:04:58.333 INFO  jdbc.sqltiming Line:373 - insert into node__body (body_value, body_summary, bundle, delta, body_format, langcode, revision_id, 
entity_id) values ('', '', 'book', 0, 'full_html', 'zh-hans', 1, 1) 
 {executed in 3 msec}
2020-11-19 20:04:58.353 INFO  jdbc.sqltiming Line:373 - select nodefiledd0_.nid as nid1_10_, nodefiledd0_.changed as changed2_10_, nodefiledd0_.created 
as created3_10_, nodefiledd0_.default_langcode as default_4_10_, nodefiledd0_.langcode as langcode5_10_, 
nodefiledd0_.promote as promote6_10_, nodefiledd0_.revision_translation_affected as revision7_10_, 
nodefiledd0_.status as status8_10_, nodefiledd0_.sticky as sticky9_10_, nodefiledd0_.title 
as title10_10_, nodefiledd0_.type as type11_10_, nodefiledd0_.uid as uid12_10_, nodefiledd0_.vid 
as vid13_10_ from node_field_data nodefiledd0_ where nodefiledd0_.nid=1 
 {executed in 7 msec}
2020-11-19 20:04:58.355 INFO  jdbc.resultsettable Line:610 - 
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|-----|----|----|
|nid |changed |created |default_langcode |langcode |promote |revision_translation_affected |status |sticky |title |type |uid |vid |
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|-----|----|----|
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|-----|----|----|

2020-11-19 20:04:58.374 INFO  jdbc.sqltiming Line:373 - select nodefieldr0_.nid as nid1_11_0_, nodefieldr0_.changed as changed2_11_0_, nodefieldr0_.created 
as created3_11_0_, nodefieldr0_.default_langcode as default_4_11_0_, nodefieldr0_.langcode 
as langcode5_11_0_, nodefieldr0_.promote as promote6_11_0_, nodefieldr0_.revision_translation_affected 
as revision7_11_0_, nodefieldr0_.status as status8_11_0_, nodefieldr0_.sticky as sticky9_11_0_, 
nodefieldr0_.title as title10_11_0_, nodefieldr0_.uid as uid11_11_0_, nodefieldr0_.vid as vid12_11_0_ 
from node_field_revision nodefieldr0_ where nodefieldr0_.nid=1 
 {executed in 6 msec}
2020-11-19 20:04:58.376 INFO  jdbc.resultsettable Line:610 - 
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|----|----|
|nid |changed |created |default_langcode |langcode |promote |revision_translation_affected |status |sticky |title |uid |vid |
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|----|----|
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|----|----|

2020-11-19 20:04:58.393 INFO  jdbc.sqltiming Line:373 - insert into node_field_revision (changed, created, default_langcode, langcode, promote, revision_translation_affected, 
status, sticky, title, uid, vid, nid) values (1605787498, 1605787498, 1, 'zh-hans', 0, 1, 1, 
0, '08-深入拆解Java虚拟机', 1, 1, 1) 
 {executed in 5 msec}
2020-11-19 20:04:58.413 INFO  jdbc.sqltiming Line:373 - select nodefiledd0_.nid as nid1_10_0_, nodefiledd0_.changed as changed2_10_0_, nodefiledd0_.created 
as created3_10_0_, nodefiledd0_.default_langcode as default_4_10_0_, nodefiledd0_.langcode 
as langcode5_10_0_, nodefiledd0_.promote as promote6_10_0_, nodefiledd0_.revision_translation_affected 
as revision7_10_0_, nodefiledd0_.status as status8_10_0_, nodefiledd0_.sticky as sticky9_10_0_, 
nodefiledd0_.title as title10_10_0_, nodefiledd0_.type as type11_10_0_, nodefiledd0_.uid as 
uid12_10_0_, nodefiledd0_.vid as vid13_10_0_ from node_field_data nodefiledd0_ where nodefiledd0_.nid=1 
 {executed in 1 msec}
2020-11-19 20:04:58.416 INFO  jdbc.resultsettable Line:610 - 
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|-----|----|----|
|nid |changed |created |default_langcode |langcode |promote |revision_translation_affected |status |sticky |title |type |uid |vid |
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|-----|----|----|
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|-----|----|----|

2020-11-19 20:04:58.433 INFO  jdbc.sqltiming Line:373 - insert into node_field_data (changed, created, default_langcode, langcode, promote, revision_translation_affected, 
status, sticky, title, type, uid, vid, nid) values (1605787498, 1605787498, 1, 'zh-hans', 0, 
1, 1, 0, '08-深入拆解Java虚拟机', 'book', 1, 1, 1) 
 {executed in 10 msec}
2020-11-19 20:04:58.459 INFO  jdbc.sqltiming Line:373 - select bookfieldm0_.entity_id as entity_i1_8_, bookfieldm0_.bundle as bundle2_8_, bookfieldm0_.delta 
as delta3_8_, bookfieldm0_.langcode as langcode4_8_, bookfieldm0_.field_media_value as field_me5_8_, 
bookfieldm0_.revision_id as revision6_8_ from node__field_media bookfieldm0_ where bookfieldm0_.entity_id=1 
 {executed in 11 msec}
2020-11-19 20:04:58.461 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------------|------------|
|entity_id |bundle |delta |langcode |field_media_value |revision_id |
|----------|-------|------|---------|------------------|------------|
|----------|-------|------|---------|------------------|------------|

2020-11-19 20:04:58.477 INFO  jdbc.sqltiming Line:373 - select bookfieldm0_.entity_id as entity_i1_8_0_, bookfieldm0_.bundle as bundle2_8_0_, bookfieldm0_.delta 
as delta3_8_0_, bookfieldm0_.langcode as langcode4_8_0_, bookfieldm0_.field_media_value as 
field_me5_8_0_, bookfieldm0_.revision_id as revision6_8_0_ from node__field_media bookfieldm0_ 
where bookfieldm0_.entity_id=1 
 {executed in 1 msec}
2020-11-19 20:04:58.479 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------------|------------|
|entity_id |bundle |delta |langcode |field_media_value |revision_id |
|----------|-------|------|---------|------------------|------------|
|----------|-------|------|---------|------------------|------------|

2020-11-19 20:04:58.493 INFO  jdbc.sqltiming Line:373 - insert into node__field_media (bundle, delta, langcode, field_media_value, revision_id, entity_id) 
values ('book', 0, 'zh-hans', '', 1, 1) 
 {executed in 8 msec}
2020-11-19 20:04:58.522 INFO  jdbc.sqltiming Line:373 - select nodefieldm0_.entity_id as entity_i1_17_0_, nodefieldm0_.bundle as bundle2_17_0_, nodefieldm0_.delta 
as delta3_17_0_, nodefieldm0_.langcode as langcode4_17_0_, nodefieldm0_.field_media_value as 
field_me5_17_0_, nodefieldm0_.revision_id as revision6_17_0_ from node_revision__field_media 
nodefieldm0_ where nodefieldm0_.entity_id=1 
 {executed in 11 msec}
2020-11-19 20:04:58.524 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------------|------------|
|entity_id |bundle |delta |langcode |field_media_value |revision_id |
|----------|-------|------|---------|------------------|------------|
|----------|-------|------|---------|------------------|------------|

2020-11-19 20:04:58.537 INFO  jdbc.sqltiming Line:373 - insert into node_revision__field_media (bundle, delta, langcode, field_media_value, revision_id, 
entity_id) values ('book', 0, 'zh-hans', '', 1, 1) 
 {executed in 9 msec}
2020-11-19 20:04:58.557 INFO  jdbc.sqltiming Line:373 - select bookfieldc0_.entity_id as entity_i1_5_, bookfieldc0_.bundle as bundle2_5_, bookfieldc0_.field_comment_value 
as field_co3_5_, bookfieldc0_.delta as delta4_5_, bookfieldc0_.field_comment_format as field_co5_5_, 
bookfieldc0_.langcode as langcode6_5_, bookfieldc0_.revision_id as revision7_5_ from node__field_comment 
bookfieldc0_ where bookfieldc0_.entity_id=1 
 {executed in 10 msec}
2020-11-19 20:04:58.559 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|--------------------|------|---------------------|---------|------------|
|entity_id |bundle |field_comment_value |delta |field_comment_format |langcode |revision_id |
|----------|-------|--------------------|------|---------------------|---------|------------|
|----------|-------|--------------------|------|---------------------|---------|------------|

2020-11-19 20:04:58.572 INFO  jdbc.sqltiming Line:373 - select bookfieldc0_.entity_id as entity_i1_5_0_, bookfieldc0_.bundle as bundle2_5_0_, bookfieldc0_.field_comment_value 
as field_co3_5_0_, bookfieldc0_.delta as delta4_5_0_, bookfieldc0_.field_comment_format as 
field_co5_5_0_, bookfieldc0_.langcode as langcode6_5_0_, bookfieldc0_.revision_id as revision7_5_0_ 
from node__field_comment bookfieldc0_ where bookfieldc0_.entity_id=1 
 {executed in 1 msec}
2020-11-19 20:04:58.574 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|--------------------|------|---------------------|---------|------------|
|entity_id |bundle |field_comment_value |delta |field_comment_format |langcode |revision_id |
|----------|-------|--------------------|------|---------------------|---------|------------|
|----------|-------|--------------------|------|---------------------|---------|------------|

2020-11-19 20:04:58.583 INFO  jdbc.sqltiming Line:373 - insert into node__field_comment (bundle, field_comment_value, delta, field_comment_format, 
langcode, revision_id, entity_id) values ('book', '', 0, 'full_html', 'zh-hans', 1, 1) 
 {executed in 4 msec}
2020-11-19 20:04:58.617 INFO  jdbc.sqltiming Line:373 - select nodefieldc0_.entity_id as entity_i1_14_0_, nodefieldc0_.bundle as bundle2_14_0_, nodefieldc0_.field_comment_value 
as field_co3_14_0_, nodefieldc0_.delta as delta4_14_0_, nodefieldc0_.field_comment_format as 
field_co5_14_0_, nodefieldc0_.langcode as langcode6_14_0_, nodefieldc0_.revision_id as revision7_14_0_ 
from node_revision__field_comment nodefieldc0_ where nodefieldc0_.entity_id=1 
 {executed in 13 msec}
2020-11-19 20:04:58.619 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|--------------------|------|---------------------|---------|------------|
|entity_id |bundle |field_comment_value |delta |field_comment_format |langcode |revision_id |
|----------|-------|--------------------|------|---------------------|---------|------------|
|----------|-------|--------------------|------|---------------------|---------|------------|

2020-11-19 20:04:58.632 INFO  jdbc.sqltiming Line:373 - insert into node_revision__field_comment (bundle, field_comment_value, delta, field_comment_format, 
langcode, revision_id, entity_id) values ('book', '', 0, 'full_html', 'zh-hans', 1, 1) 
 {executed in 6 msec}
2020-11-19 20:04:58.657 INFO  jdbc.sqltiming Line:373 - select bookfieldt0_.entity_id as entity_i1_9_, bookfieldt0_.bundle as bundle2_9_, bookfieldt0_.delta 
as delta3_9_, bookfieldt0_.langcode as langcode4_9_, bookfieldt0_.revision_id as revision5_9_, 
bookfieldt0_.field_thumb_value as field_th6_9_ from node__field_thumb bookfieldt0_ where bookfieldt0_.entity_id=1 
 {executed in 11 msec}
2020-11-19 20:04:58.659 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------|------------------|
|entity_id |bundle |delta |langcode |revision_id |field_thumb_value |
|----------|-------|------|---------|------------|------------------|
|----------|-------|------|---------|------------|------------------|

2020-11-19 20:04:58.675 INFO  jdbc.sqltiming Line:373 - select bookfieldt0_.entity_id as entity_i1_9_0_, bookfieldt0_.bundle as bundle2_9_0_, bookfieldt0_.delta 
as delta3_9_0_, bookfieldt0_.langcode as langcode4_9_0_, bookfieldt0_.revision_id as revision5_9_0_, 
bookfieldt0_.field_thumb_value as field_th6_9_0_ from node__field_thumb bookfieldt0_ where 
bookfieldt0_.entity_id=1 
 {executed in 1 msec}
2020-11-19 20:04:58.678 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------|------------------|
|entity_id |bundle |delta |langcode |revision_id |field_thumb_value |
|----------|-------|------|---------|------------|------------------|
|----------|-------|------|---------|------------|------------------|

2020-11-19 20:04:58.688 INFO  jdbc.sqltiming Line:373 - insert into node__field_thumb (bundle, delta, langcode, revision_id, field_thumb_value, entity_id) 
values ('book', 0, 'zh-hans', 1, '', 1) 
 {executed in 4 msec}
2020-11-19 20:04:58.717 INFO  jdbc.sqltiming Line:373 - select nodefieldt0_.entity_id as entity_i1_18_0_, nodefieldt0_.bundle as bundle2_18_0_, nodefieldt0_.delta 
as delta3_18_0_, nodefieldt0_.langcode as langcode4_18_0_, nodefieldt0_.revision_id as revision5_18_0_, 
nodefieldt0_.field_thumb_value as field_th6_18_0_ from node_revision__field_thumb nodefieldt0_ 
where nodefieldt0_.entity_id=1 
 {executed in 9 msec}
2020-11-19 20:04:58.719 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------|------------------|
|entity_id |bundle |delta |langcode |revision_id |field_thumb_value |
|----------|-------|------|---------|------------|------------------|
|----------|-------|------|---------|------------|------------------|

2020-11-19 20:04:58.727 INFO  jdbc.sqltiming Line:373 - insert into node_revision__field_thumb (bundle, delta, langcode, revision_id, field_thumb_value, 
entity_id) values ('book', 0, 'zh-hans', 1, '', 1) 
 {executed in 3 msec}
2020-11-19 20:04:58.755 INFO  jdbc.sqltiming Line:373 - select bookfieldf0_.entity_id as entity_i1_6_0_, bookfieldf0_.bundle as bundle2_6_0_, bookfieldf0_.delta 
as delta3_6_0_, bookfieldf0_.field_fenlei_target_id as field_fe4_6_0_, bookfieldf0_.langcode 
as langcode5_6_0_, bookfieldf0_.revision_id as revision6_6_0_ from node__field_fenlei bookfieldf0_ 
where bookfieldf0_.entity_id=1 
 {executed in 10 msec}
2020-11-19 20:04:58.757 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------------|---------|------------|
|entity_id |bundle |delta |field_fenlei_target_id |langcode |revision_id |
|----------|-------|------|-----------------------|---------|------------|
|----------|-------|------|-----------------------|---------|------------|

2020-11-19 20:04:58.764 INFO  jdbc.sqltiming Line:373 - insert into node__field_fenlei (bundle, delta, field_fenlei_target_id, langcode, revision_id, 
entity_id) values ('book', 0, 1, 'zh-hans', 1, 1) 
 {executed in 3 msec}
2020-11-19 20:04:58.790 INFO  jdbc.sqltiming Line:373 - select nodefieldf0_.entity_id as entity_i1_15_0_, nodefieldf0_.bundle as bundle2_15_0_, nodefieldf0_.delta 
as delta3_15_0_, nodefieldf0_.field_fenlei_target_id as field_fe4_15_0_, nodefieldf0_.langcode 
as langcode5_15_0_, nodefieldf0_.revision_id as revision6_15_0_ from node_revision__field_fenlei 
nodefieldf0_ where nodefieldf0_.entity_id=1 
 {executed in 10 msec}
2020-11-19 20:04:58.793 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------------|---------|------------|
|entity_id |bundle |delta |field_fenlei_target_id |langcode |revision_id |
|----------|-------|------|-----------------------|---------|------------|
|----------|-------|------|-----------------------|---------|------------|

2020-11-19 20:04:58.801 INFO  jdbc.sqltiming Line:373 - insert into node_revision__field_fenlei (bundle, delta, field_fenlei_target_id, langcode, revision_id, 
entity_id) values ('book', 0, 1, 'zh-hans', 1, 1) 
 {executed in 4 msec}
2020-11-19 20:04:59.665 INFO  jdbc.sqltiming Line:373 - select bookfieldf0_.entity_id as entity_i1_7_, bookfieldf0_.bundle as bundle2_7_, bookfieldf0_.delta 
as delta3_7_, bookfieldf0_.field_fsid_value as field_fs4_7_, bookfieldf0_.langcode as langcode5_7_, 
bookfieldf0_.revision_id as revision6_7_ from node__field_fsid bookfieldf0_ where bookfieldf0_.field_fsid_value='719651242834324' 
 {executed in 1 msec}
2020-11-19 20:04:59.668 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------|---------|------------|
|entity_id |bundle |delta |field_fsid_value |langcode |revision_id |
|----------|-------|------|-----------------|---------|------------|
|----------|-------|------|-----------------|---------|------------|

2020-11-19 20:04:59.674 INFO  jdbc.sqltiming Line:373 - insert into node_revision (langcode, nid, revision_default, revision_timestamp, revision_uid) 
values ('zh-hans', 0, 1, 1605787499, 1) 
 {executed in 2 msec}
2020-11-19 20:04:59.675 INFO  jdbc.sqltiming Line:373 - getGeneratedKeys on query: insert into node_revision (langcode, nid, revision_default, revision_timestamp, 
revision_uid) values ('zh-hans', 0, 1, 1605787499, 1) 
 {executed in 0 msec}
2020-11-19 20:04:59.677 INFO  jdbc.resultsettable Line:610 - 
|--------------|
|generated_key |
|--------------|
|2             |
|--------------|

2020-11-19 20:04:59.689 INFO  jdbc.sqltiming Line:373 - insert into node (langcode, type, uuid, vid) values ('zh-hans', 'book', '2f11a72d-19a7-41d3-ab39-763f31dbafc6', 
2) 
 {executed in 1 msec}
2020-11-19 20:04:59.690 INFO  jdbc.sqltiming Line:373 - getGeneratedKeys on query: insert into node (langcode, type, uuid, vid) values ('zh-hans', 
'book', '2f11a72d-19a7-41d3-ab39-763f31dbafc6', 2) 
 {executed in 0 msec}
2020-11-19 20:04:59.692 INFO  jdbc.resultsettable Line:610 - 
|--------------|
|generated_key |
|--------------|
|2             |
|--------------|

2020-11-19 20:04:59.703 INFO  jdbc.sqltiming Line:373 - update node_revision set langcode='zh-hans', nid=2, revision_default=1, revision_timestamp=1605787499, 
revision_uid=1 where vid=2 
 {executed in 1 msec}
2020-11-19 20:04:59.711 INFO  jdbc.sqltiming Line:373 - select bookfieldf0_.entity_id as entity_i1_7_0_, bookfieldf0_.bundle as bundle2_7_0_, bookfieldf0_.delta 
as delta3_7_0_, bookfieldf0_.field_fsid_value as field_fs4_7_0_, bookfieldf0_.langcode as langcode5_7_0_, 
bookfieldf0_.revision_id as revision6_7_0_ from node__field_fsid bookfieldf0_ where bookfieldf0_.entity_id=2 
 {executed in 1 msec}
2020-11-19 20:04:59.712 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------|---------|------------|
|entity_id |bundle |delta |field_fsid_value |langcode |revision_id |
|----------|-------|------|-----------------|---------|------------|
|----------|-------|------|-----------------|---------|------------|

2020-11-19 20:04:59.718 INFO  jdbc.sqltiming Line:373 - insert into node__field_fsid (bundle, delta, field_fsid_value, langcode, revision_id, entity_id) 
values ('book', 0, '719651242834324', 'zh-hans', 2, 2) 
 {executed in 1 msec}
2020-11-19 20:04:59.726 INFO  jdbc.sqltiming Line:373 - select nodefieldf0_.entity_id as entity_i1_16_0_, nodefieldf0_.bundle as bundle2_16_0_, nodefieldf0_.delta 
as delta3_16_0_, nodefieldf0_.field_fsid_value as field_fs4_16_0_, nodefieldf0_.langcode as 
langcode5_16_0_, nodefieldf0_.revision_id as revision6_16_0_ from node_revision__field_fsid 
nodefieldf0_ where nodefieldf0_.entity_id=2 
 {executed in 1 msec}
2020-11-19 20:04:59.728 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------|---------|------------|
|entity_id |bundle |delta |field_fsid_value |langcode |revision_id |
|----------|-------|------|-----------------|---------|------------|
|----------|-------|------|-----------------|---------|------------|

2020-11-19 20:04:59.733 INFO  jdbc.sqltiming Line:373 - insert into node_revision__field_fsid (bundle, delta, field_fsid_value, langcode, revision_id, 
entity_id) values ('book', 0, '719651242834324', 'zh-hans', 2, 2) 
 {executed in 0 msec}
2020-11-19 20:04:59.741 INFO  jdbc.sqltiming Line:373 - select bookentity0_.nid as nid1_1_, bookentity0_.bid as bid2_1_, bookentity0_.depth as depth3_1_, 
bookentity0_.has_children as has_chil4_1_, bookentity0_.p1 as p5_1_, bookentity0_.p2 as p6_1_, 
bookentity0_.p3 as p7_1_, bookentity0_.p4 as p8_1_, bookentity0_.p5 as p9_1_, bookentity0_.pid 
as pid10_1_, bookentity0_.weight as weight11_1_ from book bookentity0_ where bookentity0_.nid=2 
 {executed in 1 msec}
2020-11-19 20:04:59.743 INFO  jdbc.resultsettable Line:610 - 
|----|----|------|-------------|---|---|---|---|---|----|-------|
|nid |bid |depth |has_children |p1 |p2 |p3 |p4 |p5 |pid |weight |
|----|----|------|-------------|---|---|---|---|---|----|-------|
|----|----|------|-------------|---|---|---|---|---|----|-------|

2020-11-19 20:04:59.748 INFO  jdbc.sqltiming Line:373 - select bookentity0_.nid as nid1_1_0_, bookentity0_.bid as bid2_1_0_, bookentity0_.depth as 
depth3_1_0_, bookentity0_.has_children as has_chil4_1_0_, bookentity0_.p1 as p5_1_0_, bookentity0_.p2 
as p6_1_0_, bookentity0_.p3 as p7_1_0_, bookentity0_.p4 as p8_1_0_, bookentity0_.p5 as p9_1_0_, 
bookentity0_.pid as pid10_1_0_, bookentity0_.weight as weight11_1_0_ from book bookentity0_ 
where bookentity0_.nid=2 
 {executed in 1 msec}
2020-11-19 20:04:59.750 INFO  jdbc.resultsettable Line:610 - 
|----|----|------|-------------|---|---|---|---|---|----|-------|
|nid |bid |depth |has_children |p1 |p2 |p3 |p4 |p5 |pid |weight |
|----|----|------|-------------|---|---|---|---|---|----|-------|
|----|----|------|-------------|---|---|---|---|---|----|-------|

2020-11-19 20:04:59.756 INFO  jdbc.sqltiming Line:373 - insert into book (bid, depth, has_children, p1, p2, p3, p4, p5, pid, weight, nid) values (1, 
2, 1, 1, 2, 0, 0, 0, 1, 0, 2) 
 {executed in 1 msec}
2020-11-19 20:04:59.763 INFO  jdbc.sqltiming Line:373 - select nodebodyen0_.entity_id as entity_i1_4_, nodebodyen0_.body_value as body_val2_4_, nodebodyen0_.body_summary 
as body_sum3_4_, nodebodyen0_.bundle as bundle4_4_, nodebodyen0_.delta as delta5_4_, nodebodyen0_.body_format 
as body_for6_4_, nodebodyen0_.langcode as langcode7_4_, nodebodyen0_.revision_id as revision8_4_ 
from node__body nodebodyen0_ where nodebodyen0_.entity_id=2 
 {executed in 1 msec}
2020-11-19 20:04:59.765 INFO  jdbc.resultsettable Line:610 - 
|----------|-----------|-------------|-------|------|------------|---------|------------|
|entity_id |body_value |body_summary |bundle |delta |body_format |langcode |revision_id |
|----------|-----------|-------------|-------|------|------------|---------|------------|
|----------|-----------|-------------|-------|------|------------|---------|------------|

2020-11-19 20:04:59.770 INFO  jdbc.sqltiming Line:373 - select nodebodyre0_.entity_id as entity_i1_13_0_, nodebodyre0_.body_value as body_val2_13_0_, 
nodebodyre0_.body_summary as body_sum3_13_0_, nodebodyre0_.bundle as bundle4_13_0_, nodebodyre0_.delta 
as delta5_13_0_, nodebodyre0_.body_format as body_for6_13_0_, nodebodyre0_.langcode as langcode7_13_0_, 
nodebodyre0_.revision_id as revision8_13_0_ from node_revision__body nodebodyre0_ where nodebodyre0_.entity_id=2 
 {executed in 1 msec}
2020-11-19 20:04:59.773 INFO  jdbc.resultsettable Line:610 - 
|----------|-----------|-------------|-------|------|------------|---------|------------|
|entity_id |body_value |body_summary |bundle |delta |body_format |langcode |revision_id |
|----------|-----------|-------------|-------|------|------------|---------|------------|
|----------|-----------|-------------|-------|------|------------|---------|------------|

2020-11-19 20:04:59.778 INFO  jdbc.sqltiming Line:373 - insert into node_revision__body (body_value, body_summary, bundle, delta, body_format, langcode, 
revision_id, entity_id) values ('', '', 'book', 0, 'full_html', 'zh-hans', 2, 2) 
 {executed in 1 msec}
2020-11-19 20:04:59.787 INFO  jdbc.sqltiming Line:373 - select nodebodyen0_.entity_id as entity_i1_4_0_, nodebodyen0_.body_value as body_val2_4_0_, 
nodebodyen0_.body_summary as body_sum3_4_0_, nodebodyen0_.bundle as bundle4_4_0_, nodebodyen0_.delta 
as delta5_4_0_, nodebodyen0_.body_format as body_for6_4_0_, nodebodyen0_.langcode as langcode7_4_0_, 
nodebodyen0_.revision_id as revision8_4_0_ from node__body nodebodyen0_ where nodebodyen0_.entity_id=2 
 {executed in 2 msec}
2020-11-19 20:04:59.789 INFO  jdbc.resultsettable Line:610 - 
|----------|-----------|-------------|-------|------|------------|---------|------------|
|entity_id |body_value |body_summary |bundle |delta |body_format |langcode |revision_id |
|----------|-----------|-------------|-------|------|------------|---------|------------|
|----------|-----------|-------------|-------|------|------------|---------|------------|

2020-11-19 20:04:59.795 INFO  jdbc.sqltiming Line:373 - insert into node__body (body_value, body_summary, bundle, delta, body_format, langcode, revision_id, 
entity_id) values ('', '', 'book', 0, 'full_html', 'zh-hans', 2, 2) 
 {executed in 1 msec}
2020-11-19 20:04:59.802 INFO  jdbc.sqltiming Line:373 - select nodefiledd0_.nid as nid1_10_, nodefiledd0_.changed as changed2_10_, nodefiledd0_.created 
as created3_10_, nodefiledd0_.default_langcode as default_4_10_, nodefiledd0_.langcode as langcode5_10_, 
nodefiledd0_.promote as promote6_10_, nodefiledd0_.revision_translation_affected as revision7_10_, 
nodefiledd0_.status as status8_10_, nodefiledd0_.sticky as sticky9_10_, nodefiledd0_.title 
as title10_10_, nodefiledd0_.type as type11_10_, nodefiledd0_.uid as uid12_10_, nodefiledd0_.vid 
as vid13_10_ from node_field_data nodefiledd0_ where nodefiledd0_.nid=2 
 {executed in 2 msec}
2020-11-19 20:04:59.804 INFO  jdbc.resultsettable Line:610 - 
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|-----|----|----|
|nid |changed |created |default_langcode |langcode |promote |revision_translation_affected |status |sticky |title |type |uid |vid |
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|-----|----|----|
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|-----|----|----|

2020-11-19 20:04:59.810 INFO  jdbc.sqltiming Line:373 - select nodefieldr0_.nid as nid1_11_0_, nodefieldr0_.changed as changed2_11_0_, nodefieldr0_.created 
as created3_11_0_, nodefieldr0_.default_langcode as default_4_11_0_, nodefieldr0_.langcode 
as langcode5_11_0_, nodefieldr0_.promote as promote6_11_0_, nodefieldr0_.revision_translation_affected 
as revision7_11_0_, nodefieldr0_.status as status8_11_0_, nodefieldr0_.sticky as sticky9_11_0_, 
nodefieldr0_.title as title10_11_0_, nodefieldr0_.uid as uid11_11_0_, nodefieldr0_.vid as vid12_11_0_ 
from node_field_revision nodefieldr0_ where nodefieldr0_.nid=2 
 {executed in 1 msec}
2020-11-19 20:04:59.813 INFO  jdbc.resultsettable Line:610 - 
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|----|----|
|nid |changed |created |default_langcode |langcode |promote |revision_translation_affected |status |sticky |title |uid |vid |
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|----|----|
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|----|----|

2020-11-19 20:04:59.819 INFO  jdbc.sqltiming Line:373 - insert into node_field_revision (changed, created, default_langcode, langcode, promote, revision_translation_affected, 
status, sticky, title, uid, vid, nid) values (1605787499, 1605787499, 1, 'zh-hans', 0, 1, 1, 
0, '06-尾声 (1讲)', 1, 2, 2) 
 {executed in 1 msec}
2020-11-19 20:04:59.827 INFO  jdbc.sqltiming Line:373 - select nodefiledd0_.nid as nid1_10_0_, nodefiledd0_.changed as changed2_10_0_, nodefiledd0_.created 
as created3_10_0_, nodefiledd0_.default_langcode as default_4_10_0_, nodefiledd0_.langcode 
as langcode5_10_0_, nodefiledd0_.promote as promote6_10_0_, nodefiledd0_.revision_translation_affected 
as revision7_10_0_, nodefiledd0_.status as status8_10_0_, nodefiledd0_.sticky as sticky9_10_0_, 
nodefiledd0_.title as title10_10_0_, nodefiledd0_.type as type11_10_0_, nodefiledd0_.uid as 
uid12_10_0_, nodefiledd0_.vid as vid13_10_0_ from node_field_data nodefiledd0_ where nodefiledd0_.nid=2 
 {executed in 1 msec}
2020-11-19 20:04:59.830 INFO  jdbc.resultsettable Line:610 - 
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|-----|----|----|
|nid |changed |created |default_langcode |langcode |promote |revision_translation_affected |status |sticky |title |type |uid |vid |
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|-----|----|----|
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|-----|----|----|

2020-11-19 20:04:59.835 INFO  jdbc.sqltiming Line:373 - insert into node_field_data (changed, created, default_langcode, langcode, promote, revision_translation_affected, 
status, sticky, title, type, uid, vid, nid) values (1605787499, 1605787499, 1, 'zh-hans', 0, 
1, 1, 0, '06-尾声 (1讲)', 'book', 1, 2, 2) 
 {executed in 1 msec}
2020-11-19 20:04:59.845 INFO  jdbc.sqltiming Line:373 - select bookfieldm0_.entity_id as entity_i1_8_, bookfieldm0_.bundle as bundle2_8_, bookfieldm0_.delta 
as delta3_8_, bookfieldm0_.langcode as langcode4_8_, bookfieldm0_.field_media_value as field_me5_8_, 
bookfieldm0_.revision_id as revision6_8_ from node__field_media bookfieldm0_ where bookfieldm0_.entity_id=2 
 {executed in 1 msec}
2020-11-19 20:04:59.847 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------------|------------|
|entity_id |bundle |delta |langcode |field_media_value |revision_id |
|----------|-------|------|---------|------------------|------------|
|----------|-------|------|---------|------------------|------------|

2020-11-19 20:04:59.853 INFO  jdbc.sqltiming Line:373 - select bookfieldm0_.entity_id as entity_i1_8_0_, bookfieldm0_.bundle as bundle2_8_0_, bookfieldm0_.delta 
as delta3_8_0_, bookfieldm0_.langcode as langcode4_8_0_, bookfieldm0_.field_media_value as 
field_me5_8_0_, bookfieldm0_.revision_id as revision6_8_0_ from node__field_media bookfieldm0_ 
where bookfieldm0_.entity_id=2 
 {executed in 2 msec}
2020-11-19 20:04:59.855 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------------|------------|
|entity_id |bundle |delta |langcode |field_media_value |revision_id |
|----------|-------|------|---------|------------------|------------|
|----------|-------|------|---------|------------------|------------|

2020-11-19 20:04:59.864 INFO  jdbc.sqltiming Line:373 - insert into node__field_media (bundle, delta, langcode, field_media_value, revision_id, entity_id) 
values ('book', 0, 'zh-hans', '', 2, 2) 
 {executed in 3 msec}
2020-11-19 20:04:59.872 INFO  jdbc.sqltiming Line:373 - select nodefieldm0_.entity_id as entity_i1_17_0_, nodefieldm0_.bundle as bundle2_17_0_, nodefieldm0_.delta 
as delta3_17_0_, nodefieldm0_.langcode as langcode4_17_0_, nodefieldm0_.field_media_value as 
field_me5_17_0_, nodefieldm0_.revision_id as revision6_17_0_ from node_revision__field_media 
nodefieldm0_ where nodefieldm0_.entity_id=2 
 {executed in 1 msec}
2020-11-19 20:04:59.874 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------------|------------|
|entity_id |bundle |delta |langcode |field_media_value |revision_id |
|----------|-------|------|---------|------------------|------------|
|----------|-------|------|---------|------------------|------------|

2020-11-19 20:04:59.880 INFO  jdbc.sqltiming Line:373 - insert into node_revision__field_media (bundle, delta, langcode, field_media_value, revision_id, 
entity_id) values ('book', 0, 'zh-hans', '', 2, 2) 
 {executed in 1 msec}
2020-11-19 20:04:59.892 INFO  jdbc.sqltiming Line:373 - select bookfieldc0_.entity_id as entity_i1_5_, bookfieldc0_.bundle as bundle2_5_, bookfieldc0_.field_comment_value 
as field_co3_5_, bookfieldc0_.delta as delta4_5_, bookfieldc0_.field_comment_format as field_co5_5_, 
bookfieldc0_.langcode as langcode6_5_, bookfieldc0_.revision_id as revision7_5_ from node__field_comment 
bookfieldc0_ where bookfieldc0_.entity_id=2 
 {executed in 2 msec}
2020-11-19 20:04:59.894 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|--------------------|------|---------------------|---------|------------|
|entity_id |bundle |field_comment_value |delta |field_comment_format |langcode |revision_id |
|----------|-------|--------------------|------|---------------------|---------|------------|
|----------|-------|--------------------|------|---------------------|---------|------------|

2020-11-19 20:04:59.899 INFO  jdbc.sqltiming Line:373 - select bookfieldc0_.entity_id as entity_i1_5_0_, bookfieldc0_.bundle as bundle2_5_0_, bookfieldc0_.field_comment_value 
as field_co3_5_0_, bookfieldc0_.delta as delta4_5_0_, bookfieldc0_.field_comment_format as 
field_co5_5_0_, bookfieldc0_.langcode as langcode6_5_0_, bookfieldc0_.revision_id as revision7_5_0_ 
from node__field_comment bookfieldc0_ where bookfieldc0_.entity_id=2 
 {executed in 1 msec}
2020-11-19 20:04:59.903 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|--------------------|------|---------------------|---------|------------|
|entity_id |bundle |field_comment_value |delta |field_comment_format |langcode |revision_id |
|----------|-------|--------------------|------|---------------------|---------|------------|
|----------|-------|--------------------|------|---------------------|---------|------------|

2020-11-19 20:04:59.909 INFO  jdbc.sqltiming Line:373 - insert into node__field_comment (bundle, field_comment_value, delta, field_comment_format, 
langcode, revision_id, entity_id) values ('book', '', 0, 'full_html', 'zh-hans', 2, 2) 
 {executed in 2 msec}
2020-11-19 20:04:59.919 INFO  jdbc.sqltiming Line:373 - select nodefieldc0_.entity_id as entity_i1_14_0_, nodefieldc0_.bundle as bundle2_14_0_, nodefieldc0_.field_comment_value 
as field_co3_14_0_, nodefieldc0_.delta as delta4_14_0_, nodefieldc0_.field_comment_format as 
field_co5_14_0_, nodefieldc0_.langcode as langcode6_14_0_, nodefieldc0_.revision_id as revision7_14_0_ 
from node_revision__field_comment nodefieldc0_ where nodefieldc0_.entity_id=2 
 {executed in 3 msec}
2020-11-19 20:04:59.922 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|--------------------|------|---------------------|---------|------------|
|entity_id |bundle |field_comment_value |delta |field_comment_format |langcode |revision_id |
|----------|-------|--------------------|------|---------------------|---------|------------|
|----------|-------|--------------------|------|---------------------|---------|------------|

2020-11-19 20:04:59.928 INFO  jdbc.sqltiming Line:373 - insert into node_revision__field_comment (bundle, field_comment_value, delta, field_comment_format, 
langcode, revision_id, entity_id) values ('book', '', 0, 'full_html', 'zh-hans', 2, 2) 
 {executed in 1 msec}
2020-11-19 20:04:59.940 INFO  jdbc.sqltiming Line:373 - select bookfieldt0_.entity_id as entity_i1_9_, bookfieldt0_.bundle as bundle2_9_, bookfieldt0_.delta 
as delta3_9_, bookfieldt0_.langcode as langcode4_9_, bookfieldt0_.revision_id as revision5_9_, 
bookfieldt0_.field_thumb_value as field_th6_9_ from node__field_thumb bookfieldt0_ where bookfieldt0_.entity_id=2 
 {executed in 2 msec}
2020-11-19 20:04:59.943 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------|------------------|
|entity_id |bundle |delta |langcode |revision_id |field_thumb_value |
|----------|-------|------|---------|------------|------------------|
|----------|-------|------|---------|------------|------------------|

2020-11-19 20:04:59.949 INFO  jdbc.sqltiming Line:373 - select bookfieldt0_.entity_id as entity_i1_9_0_, bookfieldt0_.bundle as bundle2_9_0_, bookfieldt0_.delta 
as delta3_9_0_, bookfieldt0_.langcode as langcode4_9_0_, bookfieldt0_.revision_id as revision5_9_0_, 
bookfieldt0_.field_thumb_value as field_th6_9_0_ from node__field_thumb bookfieldt0_ where 
bookfieldt0_.entity_id=2 
 {executed in 2 msec}
2020-11-19 20:04:59.952 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------|------------------|
|entity_id |bundle |delta |langcode |revision_id |field_thumb_value |
|----------|-------|------|---------|------------|------------------|
|----------|-------|------|---------|------------|------------------|

2020-11-19 20:04:59.960 INFO  jdbc.sqltiming Line:373 - insert into node__field_thumb (bundle, delta, langcode, revision_id, field_thumb_value, entity_id) 
values ('book', 0, 'zh-hans', 2, '', 2) 
 {executed in 2 msec}
2020-11-19 20:04:59.973 INFO  jdbc.sqltiming Line:373 - select nodefieldt0_.entity_id as entity_i1_18_0_, nodefieldt0_.bundle as bundle2_18_0_, nodefieldt0_.delta 
as delta3_18_0_, nodefieldt0_.langcode as langcode4_18_0_, nodefieldt0_.revision_id as revision5_18_0_, 
nodefieldt0_.field_thumb_value as field_th6_18_0_ from node_revision__field_thumb nodefieldt0_ 
where nodefieldt0_.entity_id=2 
 {executed in 2 msec}
2020-11-19 20:04:59.976 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------|------------------|
|entity_id |bundle |delta |langcode |revision_id |field_thumb_value |
|----------|-------|------|---------|------------|------------------|
|----------|-------|------|---------|------------|------------------|

2020-11-19 20:04:59.982 INFO  jdbc.sqltiming Line:373 - insert into node_revision__field_thumb (bundle, delta, langcode, revision_id, field_thumb_value, 
entity_id) values ('book', 0, 'zh-hans', 2, '', 2) 
 {executed in 2 msec}
2020-11-19 20:04:59.994 INFO  jdbc.sqltiming Line:373 - select bookfieldf0_.entity_id as entity_i1_6_0_, bookfieldf0_.bundle as bundle2_6_0_, bookfieldf0_.delta 
as delta3_6_0_, bookfieldf0_.field_fenlei_target_id as field_fe4_6_0_, bookfieldf0_.langcode 
as langcode5_6_0_, bookfieldf0_.revision_id as revision6_6_0_ from node__field_fenlei bookfieldf0_ 
where bookfieldf0_.entity_id=2 
 {executed in 2 msec}
2020-11-19 20:04:59.996 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------------|---------|------------|
|entity_id |bundle |delta |field_fenlei_target_id |langcode |revision_id |
|----------|-------|------|-----------------------|---------|------------|
|----------|-------|------|-----------------------|---------|------------|

2020-11-19 20:05:00.002 INFO  jdbc.sqltiming Line:373 - insert into node__field_fenlei (bundle, delta, field_fenlei_target_id, langcode, revision_id, 
entity_id) values ('book', 0, 1, 'zh-hans', 2, 2) 
 {executed in 1 msec}
2020-11-19 20:05:00.014 INFO  jdbc.sqltiming Line:373 - select nodefieldf0_.entity_id as entity_i1_15_0_, nodefieldf0_.bundle as bundle2_15_0_, nodefieldf0_.delta 
as delta3_15_0_, nodefieldf0_.field_fenlei_target_id as field_fe4_15_0_, nodefieldf0_.langcode 
as langcode5_15_0_, nodefieldf0_.revision_id as revision6_15_0_ from node_revision__field_fenlei 
nodefieldf0_ where nodefieldf0_.entity_id=2 
 {executed in 2 msec}
2020-11-19 20:05:00.018 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------------|---------|------------|
|entity_id |bundle |delta |field_fenlei_target_id |langcode |revision_id |
|----------|-------|------|-----------------------|---------|------------|
|----------|-------|------|-----------------------|---------|------------|

2020-11-19 20:05:00.025 INFO  jdbc.sqltiming Line:373 - insert into node_revision__field_fenlei (bundle, delta, field_fenlei_target_id, langcode, revision_id, 
entity_id) values ('book', 0, 1, 'zh-hans', 2, 2) 
 {executed in 2 msec}
2020-11-19 20:05:00.766 INFO  jdbc.sqltiming Line:373 - select bookchecke0_.item_id as item_id1_2_, bookchecke0_.fsid as fsid2_2_, bookchecke0_.got 
as got3_2_, bookchecke0_.name as name4_2_ from book_check bookchecke0_ where bookchecke0_.fsid='495542398293026' 
and bookchecke0_.name='net_content' 
 {executed in 5 msec}
2020-11-19 20:05:00.771 INFO  jdbc.resultsettable Line:610 - 
|--------|-----|----|-----|
|item_id |fsid |got |name |
|--------|-----|----|-----|
|--------|-----|----|-----|

2020-11-19 20:05:23.373 INFO  jdbc.sqltiming Line:373 - select bookchecke0_.item_id as item_id1_2_, bookchecke0_.fsid as fsid2_2_, bookchecke0_.got 
as got3_2_, bookchecke0_.name as name4_2_ from book_check bookchecke0_ where bookchecke0_.fsid='495542398293026' 
and bookchecke0_.name='net_content' 
 {executed in 2 msec}
2020-11-19 20:05:23.374 INFO  jdbc.resultsettable Line:610 - 
|--------|-----|----|-----|
|item_id |fsid |got |name |
|--------|-----|----|-----|
|--------|-----|----|-----|

2020-11-19 20:05:23.387 INFO  jdbc.sqltiming Line:373 - insert into book_check (fsid, got, name) values ('495542398293026', 1, 'net_content') 
 {executed in 0 msec}
2020-11-19 20:05:23.388 INFO  jdbc.sqltiming Line:373 - getGeneratedKeys on query: insert into book_check (fsid, got, name) values ('495542398293026', 
1, 'net_content') 
 {executed in 0 msec}
2020-11-19 20:05:23.390 INFO  jdbc.resultsettable Line:610 - 
|--------------|
|generated_key |
|--------------|
|13            |
|--------------|

2020-11-19 20:05:23.400 INFO  jdbc.sqltiming Line:373 - select bookchecke0_.item_id as item_id1_2_, bookchecke0_.fsid as fsid2_2_, bookchecke0_.got 
as got3_2_, bookchecke0_.name as name4_2_ from book_check bookchecke0_ where bookchecke0_.fsid='495542398293026' 
and bookchecke0_.name='media' 
 {executed in 1 msec}
2020-11-19 20:05:23.402 INFO  jdbc.resultsettable Line:610 - 
|--------|-----|----|-----|
|item_id |fsid |got |name |
|--------|-----|----|-----|
|--------|-----|----|-----|

2020-11-19 20:05:23.743 INFO  jdbc.sqltiming Line:373 - select bookchecke0_.item_id as item_id1_2_, bookchecke0_.fsid as fsid2_2_, bookchecke0_.got 
as got3_2_, bookchecke0_.name as name4_2_ from book_check bookchecke0_ where bookchecke0_.fsid='495542398293026' 
and bookchecke0_.name='media' 
 {executed in 1 msec}
2020-11-19 20:05:23.745 INFO  jdbc.resultsettable Line:610 - 
|--------|-----|----|-----|
|item_id |fsid |got |name |
|--------|-----|----|-----|
|--------|-----|----|-----|

2020-11-19 20:05:23.750 INFO  jdbc.sqltiming Line:373 - insert into book_check (fsid, got, name) values ('495542398293026', 1, 'media') 
 {executed in 2 msec}
2020-11-19 20:05:23.751 INFO  jdbc.sqltiming Line:373 - getGeneratedKeys on query: insert into book_check (fsid, got, name) values ('495542398293026', 
1, 'media') 
 {executed in 0 msec}
2020-11-19 20:05:23.753 INFO  jdbc.resultsettable Line:610 - 
|--------------|
|generated_key |
|--------------|
|14            |
|--------------|

2020-11-19 20:05:23.764 INFO  jdbc.sqltiming Line:373 - select bookfieldf0_.entity_id as entity_i1_7_, bookfieldf0_.bundle as bundle2_7_, bookfieldf0_.delta 
as delta3_7_, bookfieldf0_.field_fsid_value as field_fs4_7_, bookfieldf0_.langcode as langcode5_7_, 
bookfieldf0_.revision_id as revision6_7_ from node__field_fsid bookfieldf0_ where bookfieldf0_.field_fsid_value='495542398293026' 
 {executed in 2 msec}
2020-11-19 20:05:23.766 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------|---------|------------|
|entity_id |bundle |delta |field_fsid_value |langcode |revision_id |
|----------|-------|------|-----------------|---------|------------|
|----------|-------|------|-----------------|---------|------------|

2020-11-19 20:05:23.771 INFO  jdbc.sqltiming Line:373 - insert into node_revision (langcode, nid, revision_default, revision_timestamp, revision_uid) 
values ('zh-hans', 0, 1, 1605787523, 1) 
 {executed in 1 msec}
2020-11-19 20:05:23.772 INFO  jdbc.sqltiming Line:373 - getGeneratedKeys on query: insert into node_revision (langcode, nid, revision_default, revision_timestamp, 
revision_uid) values ('zh-hans', 0, 1, 1605787523, 1) 
 {executed in 0 msec}
2020-11-19 20:05:23.774 INFO  jdbc.resultsettable Line:610 - 
|--------------|
|generated_key |
|--------------|
|3             |
|--------------|

2020-11-19 20:05:23.785 INFO  jdbc.sqltiming Line:373 - insert into node (langcode, type, uuid, vid) values ('zh-hans', 'book', 'd5b77a3f-fa7d-4a1f-8d36-50acf01b3150', 
3) 
 {executed in 1 msec}
2020-11-19 20:05:23.786 INFO  jdbc.sqltiming Line:373 - getGeneratedKeys on query: insert into node (langcode, type, uuid, vid) values ('zh-hans', 
'book', 'd5b77a3f-fa7d-4a1f-8d36-50acf01b3150', 3) 
 {executed in 0 msec}
2020-11-19 20:05:23.788 INFO  jdbc.resultsettable Line:610 - 
|--------------|
|generated_key |
|--------------|
|3             |
|--------------|

2020-11-19 20:05:23.801 INFO  jdbc.sqltiming Line:373 - update node_revision set langcode='zh-hans', nid=3, revision_default=1, revision_timestamp=1605787523, 
revision_uid=1 where vid=3 
 {executed in 1 msec}
2020-11-19 20:05:23.810 INFO  jdbc.sqltiming Line:373 - select bookfieldf0_.entity_id as entity_i1_7_0_, bookfieldf0_.bundle as bundle2_7_0_, bookfieldf0_.delta 
as delta3_7_0_, bookfieldf0_.field_fsid_value as field_fs4_7_0_, bookfieldf0_.langcode as langcode5_7_0_, 
bookfieldf0_.revision_id as revision6_7_0_ from node__field_fsid bookfieldf0_ where bookfieldf0_.entity_id=3 
 {executed in 1 msec}
2020-11-19 20:05:23.812 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------|---------|------------|
|entity_id |bundle |delta |field_fsid_value |langcode |revision_id |
|----------|-------|------|-----------------|---------|------------|
|----------|-------|------|-----------------|---------|------------|

2020-11-19 20:05:23.818 INFO  jdbc.sqltiming Line:373 - insert into node__field_fsid (bundle, delta, field_fsid_value, langcode, revision_id, entity_id) 
values ('book', 0, '495542398293026', 'zh-hans', 3, 3) 
 {executed in 1 msec}
2020-11-19 20:05:23.825 INFO  jdbc.sqltiming Line:373 - select nodefieldf0_.entity_id as entity_i1_16_0_, nodefieldf0_.bundle as bundle2_16_0_, nodefieldf0_.delta 
as delta3_16_0_, nodefieldf0_.field_fsid_value as field_fs4_16_0_, nodefieldf0_.langcode as 
langcode5_16_0_, nodefieldf0_.revision_id as revision6_16_0_ from node_revision__field_fsid 
nodefieldf0_ where nodefieldf0_.entity_id=3 
 {executed in 2 msec}
2020-11-19 20:05:23.826 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------|---------|------------|
|entity_id |bundle |delta |field_fsid_value |langcode |revision_id |
|----------|-------|------|-----------------|---------|------------|
|----------|-------|------|-----------------|---------|------------|

2020-11-19 20:05:23.832 INFO  jdbc.sqltiming Line:373 - insert into node_revision__field_fsid (bundle, delta, field_fsid_value, langcode, revision_id, 
entity_id) values ('book', 0, '495542398293026', 'zh-hans', 3, 3) 
 {executed in 1 msec}
2020-11-19 20:05:23.840 INFO  jdbc.sqltiming Line:373 - select bookentity0_.nid as nid1_1_, bookentity0_.bid as bid2_1_, bookentity0_.depth as depth3_1_, 
bookentity0_.has_children as has_chil4_1_, bookentity0_.p1 as p5_1_, bookentity0_.p2 as p6_1_, 
bookentity0_.p3 as p7_1_, bookentity0_.p4 as p8_1_, bookentity0_.p5 as p9_1_, bookentity0_.pid 
as pid10_1_, bookentity0_.weight as weight11_1_ from book bookentity0_ where bookentity0_.nid=3 
 {executed in 1 msec}
2020-11-19 20:05:23.841 INFO  jdbc.resultsettable Line:610 - 
|----|----|------|-------------|---|---|---|---|---|----|-------|
|nid |bid |depth |has_children |p1 |p2 |p3 |p4 |p5 |pid |weight |
|----|----|------|-------------|---|---|---|---|---|----|-------|
|----|----|------|-------------|---|---|---|---|---|----|-------|

2020-11-19 20:05:23.846 INFO  jdbc.sqltiming Line:373 - select bookentity0_.nid as nid1_1_0_, bookentity0_.bid as bid2_1_0_, bookentity0_.depth as 
depth3_1_0_, bookentity0_.has_children as has_chil4_1_0_, bookentity0_.p1 as p5_1_0_, bookentity0_.p2 
as p6_1_0_, bookentity0_.p3 as p7_1_0_, bookentity0_.p4 as p8_1_0_, bookentity0_.p5 as p9_1_0_, 
bookentity0_.pid as pid10_1_0_, bookentity0_.weight as weight11_1_0_ from book bookentity0_ 
where bookentity0_.nid=3 
 {executed in 1 msec}
2020-11-19 20:05:23.849 INFO  jdbc.resultsettable Line:610 - 
|----|----|------|-------------|---|---|---|---|---|----|-------|
|nid |bid |depth |has_children |p1 |p2 |p3 |p4 |p5 |pid |weight |
|----|----|------|-------------|---|---|---|---|---|----|-------|
|----|----|------|-------------|---|---|---|---|---|----|-------|

2020-11-19 20:05:23.855 INFO  jdbc.sqltiming Line:373 - insert into book (bid, depth, has_children, p1, p2, p3, p4, p5, pid, weight, nid) values (1, 
3, 0, 1, 2, 3, 0, 0, 2, 0, 3) 
 {executed in 1 msec}
2020-11-19 20:05:23.863 INFO  jdbc.sqltiming Line:373 - select nodebodyen0_.entity_id as entity_i1_4_, nodebodyen0_.body_value as body_val2_4_, nodebodyen0_.body_summary 
as body_sum3_4_, nodebodyen0_.bundle as bundle4_4_, nodebodyen0_.delta as delta5_4_, nodebodyen0_.body_format 
as body_for6_4_, nodebodyen0_.langcode as langcode7_4_, nodebodyen0_.revision_id as revision8_4_ 
from node__body nodebodyen0_ where nodebodyen0_.entity_id=3 
 {executed in 2 msec}
2020-11-19 20:05:23.865 INFO  jdbc.resultsettable Line:610 - 
|----------|-----------|-------------|-------|------|------------|---------|------------|
|entity_id |body_value |body_summary |bundle |delta |body_format |langcode |revision_id |
|----------|-----------|-------------|-------|------|------------|---------|------------|
|----------|-----------|-------------|-------|------|------------|---------|------------|

2020-11-19 20:05:23.870 INFO  jdbc.sqltiming Line:373 - select nodebodyre0_.entity_id as entity_i1_13_0_, nodebodyre0_.body_value as body_val2_13_0_, 
nodebodyre0_.body_summary as body_sum3_13_0_, nodebodyre0_.bundle as bundle4_13_0_, nodebodyre0_.delta 
as delta5_13_0_, nodebodyre0_.body_format as body_for6_13_0_, nodebodyre0_.langcode as langcode7_13_0_, 
nodebodyre0_.revision_id as revision8_13_0_ from node_revision__body nodebodyre0_ where nodebodyre0_.entity_id=3 
 {executed in 1 msec}
2020-11-19 20:05:23.872 INFO  jdbc.resultsettable Line:610 - 
|----------|-----------|-------------|-------|------|------------|---------|------------|
|entity_id |body_value |body_summary |bundle |delta |body_format |langcode |revision_id |
|----------|-----------|-------------|-------|------|------------|---------|------------|
|----------|-----------|-------------|-------|------|------------|---------|------------|

2020-11-19 20:05:23.879 INFO  jdbc.sqltiming Line:373 - insert into node_revision__body (body_value, body_summary, bundle, delta, body_format, langcode, 
revision_id, entity_id) values ('<p>说句实话，我也不知道是怎么写完这 36 篇技术文章的。</p> <p>一周三篇的文章接近近万字，说多不多，对我而言还是挺困难的一件事。基本上，我连续好几个月的业余时间都贡献给写作，甚至一度重温了博士阶段被论文支配的恐怖。我想，这大概也算是在工作相对清闲的国外环境下，体验了一把 
997 的生活。</p> <p>这一路下来，我感觉写专栏的最大问题，其实并不在于写作本身，而在于它对你精力的消耗，这种消耗甚至会让你无法专注于本职工作。因此，我也愈发地佩服能够持续分享技术的同行们。还好我的工作挺有趣的，每天开开心心地上班写代码，只是一到下班时间就蔫了，不得不应付编辑的催稿回家码字。</p> 
<p>我在写作的中途，多次感受到存稿不足的压力，以致于需要请年假来填补写作的空缺。不过，最后做到了风雨无阻、节假无休地一周三更，也算是幸不辱命吧。</p> <p>说回专栏吧。在思考专栏大纲时，我想着，最好能够和杨晓峰老师的 
Java 核心技术专栏形成互补，呈现给大家的内容相对更偏向于技术实现。</p> <p>因此，有读者曾反馈讲解的知识点是否太偏，不实用。当时我的回答是，我并不希望将专栏单纯写成一本工具书，这样的知识你可以从市面上任意买到一本书获得。</p> 
<p>我更希望的是，能够通过介绍 Java 虚拟机各个组件的设计和实现，让你之后遇到虚拟机相关的问题时，能够联想到具体的模块，甚至是对于其他语言的运行时，也可以举一反三相互对照。</p><!-- 
[[[read_end]]] --> <p>不过，当我看到 Aleksey Shipilev<a href="https://www.youtube.com/watch?v=VaWgOCDBxYw">介绍 
JMH 的讲座</a>时，发现大部分的内容专栏里都有涉及。于是心想，我还能够在上述答复中加一句：看老外的技术讲座再也不费劲了。</p> <p>还有一个想说的是关于专栏知识点的正确性。我认为虚拟机的设计可以写一些自己的理解，但是具体到目前 
HotSpot 的工程实现则是确定的。</p> <p>为此，几乎每篇专栏我都会大量阅读 HotSpot 的源代码，和同事讨论实现背后的设计理念，在这个过程中，我也发现了一些 HotSpot 
中的 Bug，或者年久失修的代码，又或者是设计不合理的地方。这大概也能够算作写专栏和我本职工作重叠的地方吧。</p> <p>我会仔细斟酌文章中每一句是否可以做到达意。即便是这样，文章肯定还有很多不足，比如叙述不够清楚，内容存在误导等问题。许多读者都热心地指了出来，在此感谢各位的宝贵意见。接下来一段时间，我会根据大家的建议，对前面的文章进行修订。</p> 
<p>专栏虽然到此已经结束了，但是并不代表你对 Java 虚拟机学习的停止， 我想，专栏的内容仅仅是为你打开了 JVM 学习的大门，里面的风景，还是需要你自己来探索。在文章的后面，我列出了一系列的 
Java 虚拟机技术的相关博客和阅读资料，你仍然可以继续加餐。</p> <p>你可以关注国内几位 Java 虚拟机大咖的微信公众号：R 大，个人认为是中文圈子里最了解 Java 虚拟机设计实现的人，你可以关注他的<a 
href="https://www.zhihu.com/people/rednaxelafx">知乎账号</a>；<a href="https://open.weixin.qq.com/qr/code?username=lovestblog">你假笨</a>，原阿里 
Java 虚拟机团队成员，现<a href="http://www.perfma.com/">PerfMa</a> CEO；<a href="https://open.weixin.qq.com/qr/code?username=jnby1978">江南白衣</a>，唯品会资深架构师；<a 
href="https://open.weixin.qq.com/qr/code?username=whywhy_zj">占小狼</a>，美团基础架构部技术专家；<a href="https://open.weixin.qq.com/qr/code?username=gh_9f3b2a4e2a74">杨晓峰</a>，前甲骨文首席工程师。</p> 
<p>如果英文阅读没问题的话，你可以关注<a href="http://cliffc.org/blog/">Cliff Click</a>、<a href="https://shipilev.net/">Aleksey 
Shipilëv</a>（他的<a href="https://shipilev.net/jvm-anatomy-park/">JVM Anatomy Park</a>十分有趣）和<a 
href="http://psy-lob-saw.blogspot.com/">Nitsan Wakart</a>的博客。你也可以关注<a href="http://openjdk.java.net/projects/mlvm/jvmlangsummit/">Java 
Virtual Machine Language Submit</a>和<a href="https://www.oracle.com/code-one/index.html">Oracle 
Code One</a>（前身是 JavaOne 大会）中关于 Java 虚拟机的演讲，以便掌握 Java 的最新发展动向。</p> <p>当然，如果对 GraalVM 感兴趣的话，你可以订阅我们团队的<a 
href="https://medium.com/graalvm">博客</a>。我会在之后考虑将文章逐一进行翻译。</p> <p>其他的阅读材料，你可以参考 R 大的这份<a href="https://www.douban.com/doulist/2545443/">书单</a>，或者这个<a 
href="https://github.com/deephacks/awesome-jvm">汇总贴</a>。</p> <p>如果这个专栏激发了你对 Java 虚拟机的学习热情，那么我建议你着手去阅读 
HotSpot 源代码，并且回馈给 OpenJDK 开源社区。这种回馈并不一定是提交 patch，也可以是 Bug report 或者改进建议等等。</p> <p>我也会不定期地在本专栏中发布新的 
Java 虚拟机相关内容，你如果有想要了解的内容，也可以给我留言反馈。</p> <p>最后，感谢一路以来的陪伴与支持，谢谢你，我们后会有期！</p> <p><a href="http://geektime.mikecrm.com/la5Dede"><img 
src="https://static001.geekbang.org/resource/image/7e/73/7e2399a300bc167caaecc747054ac573.jpg" 
alt=""></a></p>', '', 'book', 0, 'full_html', 'zh-hans', 3, 3) 
 {executed in 2 msec}
2020-11-19 20:05:23.889 INFO  jdbc.sqltiming Line:373 - select nodebodyen0_.entity_id as entity_i1_4_0_, nodebodyen0_.body_value as body_val2_4_0_, 
nodebodyen0_.body_summary as body_sum3_4_0_, nodebodyen0_.bundle as bundle4_4_0_, nodebodyen0_.delta 
as delta5_4_0_, nodebodyen0_.body_format as body_for6_4_0_, nodebodyen0_.langcode as langcode7_4_0_, 
nodebodyen0_.revision_id as revision8_4_0_ from node__body nodebodyen0_ where nodebodyen0_.entity_id=3 
 {executed in 1 msec}
2020-11-19 20:05:23.891 INFO  jdbc.resultsettable Line:610 - 
|----------|-----------|-------------|-------|------|------------|---------|------------|
|entity_id |body_value |body_summary |bundle |delta |body_format |langcode |revision_id |
|----------|-----------|-------------|-------|------|------------|---------|------------|
|----------|-----------|-------------|-------|------|------------|---------|------------|

2020-11-19 20:05:23.898 INFO  jdbc.sqltiming Line:373 - insert into node__body (body_value, body_summary, bundle, delta, body_format, langcode, revision_id, 
entity_id) values ('<p>说句实话，我也不知道是怎么写完这 36 篇技术文章的。</p> <p>一周三篇的文章接近近万字，说多不多，对我而言还是挺困难的一件事。基本上，我连续好几个月的业余时间都贡献给写作，甚至一度重温了博士阶段被论文支配的恐怖。我想，这大概也算是在工作相对清闲的国外环境下，体验了一把 
997 的生活。</p> <p>这一路下来，我感觉写专栏的最大问题，其实并不在于写作本身，而在于它对你精力的消耗，这种消耗甚至会让你无法专注于本职工作。因此，我也愈发地佩服能够持续分享技术的同行们。还好我的工作挺有趣的，每天开开心心地上班写代码，只是一到下班时间就蔫了，不得不应付编辑的催稿回家码字。</p> 
<p>我在写作的中途，多次感受到存稿不足的压力，以致于需要请年假来填补写作的空缺。不过，最后做到了风雨无阻、节假无休地一周三更，也算是幸不辱命吧。</p> <p>说回专栏吧。在思考专栏大纲时，我想着，最好能够和杨晓峰老师的 
Java 核心技术专栏形成互补，呈现给大家的内容相对更偏向于技术实现。</p> <p>因此，有读者曾反馈讲解的知识点是否太偏，不实用。当时我的回答是，我并不希望将专栏单纯写成一本工具书，这样的知识你可以从市面上任意买到一本书获得。</p> 
<p>我更希望的是，能够通过介绍 Java 虚拟机各个组件的设计和实现，让你之后遇到虚拟机相关的问题时，能够联想到具体的模块，甚至是对于其他语言的运行时，也可以举一反三相互对照。</p><!-- 
[[[read_end]]] --> <p>不过，当我看到 Aleksey Shipilev<a href="https://www.youtube.com/watch?v=VaWgOCDBxYw">介绍 
JMH 的讲座</a>时，发现大部分的内容专栏里都有涉及。于是心想，我还能够在上述答复中加一句：看老外的技术讲座再也不费劲了。</p> <p>还有一个想说的是关于专栏知识点的正确性。我认为虚拟机的设计可以写一些自己的理解，但是具体到目前 
HotSpot 的工程实现则是确定的。</p> <p>为此，几乎每篇专栏我都会大量阅读 HotSpot 的源代码，和同事讨论实现背后的设计理念，在这个过程中，我也发现了一些 HotSpot 
中的 Bug，或者年久失修的代码，又或者是设计不合理的地方。这大概也能够算作写专栏和我本职工作重叠的地方吧。</p> <p>我会仔细斟酌文章中每一句是否可以做到达意。即便是这样，文章肯定还有很多不足，比如叙述不够清楚，内容存在误导等问题。许多读者都热心地指了出来，在此感谢各位的宝贵意见。接下来一段时间，我会根据大家的建议，对前面的文章进行修订。</p> 
<p>专栏虽然到此已经结束了，但是并不代表你对 Java 虚拟机学习的停止， 我想，专栏的内容仅仅是为你打开了 JVM 学习的大门，里面的风景，还是需要你自己来探索。在文章的后面，我列出了一系列的 
Java 虚拟机技术的相关博客和阅读资料，你仍然可以继续加餐。</p> <p>你可以关注国内几位 Java 虚拟机大咖的微信公众号：R 大，个人认为是中文圈子里最了解 Java 虚拟机设计实现的人，你可以关注他的<a 
href="https://www.zhihu.com/people/rednaxelafx">知乎账号</a>；<a href="https://open.weixin.qq.com/qr/code?username=lovestblog">你假笨</a>，原阿里 
Java 虚拟机团队成员，现<a href="http://www.perfma.com/">PerfMa</a> CEO；<a href="https://open.weixin.qq.com/qr/code?username=jnby1978">江南白衣</a>，唯品会资深架构师；<a 
href="https://open.weixin.qq.com/qr/code?username=whywhy_zj">占小狼</a>，美团基础架构部技术专家；<a href="https://open.weixin.qq.com/qr/code?username=gh_9f3b2a4e2a74">杨晓峰</a>，前甲骨文首席工程师。</p> 
<p>如果英文阅读没问题的话，你可以关注<a href="http://cliffc.org/blog/">Cliff Click</a>、<a href="https://shipilev.net/">Aleksey 
Shipilëv</a>（他的<a href="https://shipilev.net/jvm-anatomy-park/">JVM Anatomy Park</a>十分有趣）和<a 
href="http://psy-lob-saw.blogspot.com/">Nitsan Wakart</a>的博客。你也可以关注<a href="http://openjdk.java.net/projects/mlvm/jvmlangsummit/">Java 
Virtual Machine Language Submit</a>和<a href="https://www.oracle.com/code-one/index.html">Oracle 
Code One</a>（前身是 JavaOne 大会）中关于 Java 虚拟机的演讲，以便掌握 Java 的最新发展动向。</p> <p>当然，如果对 GraalVM 感兴趣的话，你可以订阅我们团队的<a 
href="https://medium.com/graalvm">博客</a>。我会在之后考虑将文章逐一进行翻译。</p> <p>其他的阅读材料，你可以参考 R 大的这份<a href="https://www.douban.com/doulist/2545443/">书单</a>，或者这个<a 
href="https://github.com/deephacks/awesome-jvm">汇总贴</a>。</p> <p>如果这个专栏激发了你对 Java 虚拟机的学习热情，那么我建议你着手去阅读 
HotSpot 源代码，并且回馈给 OpenJDK 开源社区。这种回馈并不一定是提交 patch，也可以是 Bug report 或者改进建议等等。</p> <p>我也会不定期地在本专栏中发布新的 
Java 虚拟机相关内容，你如果有想要了解的内容，也可以给我留言反馈。</p> <p>最后，感谢一路以来的陪伴与支持，谢谢你，我们后会有期！</p> <p><a href="http://geektime.mikecrm.com/la5Dede"><img 
src="https://static001.geekbang.org/resource/image/7e/73/7e2399a300bc167caaecc747054ac573.jpg" 
alt=""></a></p>', '', 'book', 0, 'full_html', 'zh-hans', 3, 3) 
 {executed in 2 msec}
2020-11-19 20:05:23.912 INFO  jdbc.sqltiming Line:373 - select nodefiledd0_.nid as nid1_10_, nodefiledd0_.changed as changed2_10_, nodefiledd0_.created 
as created3_10_, nodefiledd0_.default_langcode as default_4_10_, nodefiledd0_.langcode as langcode5_10_, 
nodefiledd0_.promote as promote6_10_, nodefiledd0_.revision_translation_affected as revision7_10_, 
nodefiledd0_.status as status8_10_, nodefiledd0_.sticky as sticky9_10_, nodefiledd0_.title 
as title10_10_, nodefiledd0_.type as type11_10_, nodefiledd0_.uid as uid12_10_, nodefiledd0_.vid 
as vid13_10_ from node_field_data nodefiledd0_ where nodefiledd0_.nid=3 
 {executed in 2 msec}
2020-11-19 20:05:23.914 INFO  jdbc.resultsettable Line:610 - 
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|-----|----|----|
|nid |changed |created |default_langcode |langcode |promote |revision_translation_affected |status |sticky |title |type |uid |vid |
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|-----|----|----|
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|-----|----|----|

2020-11-19 20:05:23.920 INFO  jdbc.sqltiming Line:373 - select nodefieldr0_.nid as nid1_11_0_, nodefieldr0_.changed as changed2_11_0_, nodefieldr0_.created 
as created3_11_0_, nodefieldr0_.default_langcode as default_4_11_0_, nodefieldr0_.langcode 
as langcode5_11_0_, nodefieldr0_.promote as promote6_11_0_, nodefieldr0_.revision_translation_affected 
as revision7_11_0_, nodefieldr0_.status as status8_11_0_, nodefieldr0_.sticky as sticky9_11_0_, 
nodefieldr0_.title as title10_11_0_, nodefieldr0_.uid as uid11_11_0_, nodefieldr0_.vid as vid12_11_0_ 
from node_field_revision nodefieldr0_ where nodefieldr0_.nid=3 
 {executed in 2 msec}
2020-11-19 20:05:23.922 INFO  jdbc.resultsettable Line:610 - 
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|----|----|
|nid |changed |created |default_langcode |langcode |promote |revision_translation_affected |status |sticky |title |uid |vid |
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|----|----|
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|----|----|

2020-11-19 20:05:23.931 INFO  jdbc.sqltiming Line:373 - insert into node_field_revision (changed, created, default_langcode, langcode, promote, revision_translation_affected, 
status, sticky, title, uid, vid, nid) values (1605787523, 1605787523, 1, 'zh-hans', 0, 1, 1, 
0, '尾声丨道阻且长，努力加餐', 1, 3, 3) 
 {executed in 3 msec}
2020-11-19 20:05:23.942 INFO  jdbc.sqltiming Line:373 - select nodefiledd0_.nid as nid1_10_0_, nodefiledd0_.changed as changed2_10_0_, nodefiledd0_.created 
as created3_10_0_, nodefiledd0_.default_langcode as default_4_10_0_, nodefiledd0_.langcode 
as langcode5_10_0_, nodefiledd0_.promote as promote6_10_0_, nodefiledd0_.revision_translation_affected 
as revision7_10_0_, nodefiledd0_.status as status8_10_0_, nodefiledd0_.sticky as sticky9_10_0_, 
nodefiledd0_.title as title10_10_0_, nodefiledd0_.type as type11_10_0_, nodefiledd0_.uid as 
uid12_10_0_, nodefiledd0_.vid as vid13_10_0_ from node_field_data nodefiledd0_ where nodefiledd0_.nid=3 
 {executed in 1 msec}
2020-11-19 20:05:23.946 INFO  jdbc.resultsettable Line:610 - 
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|-----|----|----|
|nid |changed |created |default_langcode |langcode |promote |revision_translation_affected |status |sticky |title |type |uid |vid |
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|-----|----|----|
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|-----|----|----|

2020-11-19 20:05:23.954 INFO  jdbc.sqltiming Line:373 - insert into node_field_data (changed, created, default_langcode, langcode, promote, revision_translation_affected, 
status, sticky, title, type, uid, vid, nid) values (1605787523, 1605787523, 1, 'zh-hans', 0, 
1, 1, 0, '尾声丨道阻且长，努力加餐', 'book', 1, 3, 3) 
 {executed in 1 msec}
2020-11-19 20:05:23.971 INFO  jdbc.sqltiming Line:373 - select bookfieldm0_.entity_id as entity_i1_8_, bookfieldm0_.bundle as bundle2_8_, bookfieldm0_.delta 
as delta3_8_, bookfieldm0_.langcode as langcode4_8_, bookfieldm0_.field_media_value as field_me5_8_, 
bookfieldm0_.revision_id as revision6_8_ from node__field_media bookfieldm0_ where bookfieldm0_.entity_id=3 
 {executed in 6 msec}
2020-11-19 20:05:23.973 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------------|------------|
|entity_id |bundle |delta |langcode |field_media_value |revision_id |
|----------|-------|------|---------|------------------|------------|
|----------|-------|------|---------|------------------|------------|

2020-11-19 20:05:23.978 INFO  jdbc.sqltiming Line:373 - select bookfieldm0_.entity_id as entity_i1_8_0_, bookfieldm0_.bundle as bundle2_8_0_, bookfieldm0_.delta 
as delta3_8_0_, bookfieldm0_.langcode as langcode4_8_0_, bookfieldm0_.field_media_value as 
field_me5_8_0_, bookfieldm0_.revision_id as revision6_8_0_ from node__field_media bookfieldm0_ 
where bookfieldm0_.entity_id=3 
 {executed in 2 msec}
2020-11-19 20:05:23.980 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------------|------------|
|entity_id |bundle |delta |langcode |field_media_value |revision_id |
|----------|-------|------|---------|------------------|------------|
|----------|-------|------|---------|------------------|------------|

2020-11-19 20:05:23.990 INFO  jdbc.sqltiming Line:373 - insert into node__field_media (bundle, delta, langcode, field_media_value, revision_id, entity_id) 
values ('book', 0, 'zh-hans', 'https://qdall01.baidupcs.com/file/77f2a58c4e8976c6d756793dd34d69db?bkt=en-3f603aaf964434023845c826571ebdfcb5bbeaf16f87a9f5c82b72f5962d1d154fb0d532bdc5b3c72ffa88c0ac4f85f602f67fe07c946121bf2b6ff632ff09aa&fid=3757516097-778750-928244116300577&time=1605787522&sign=FDTAXUGERLQlBHSKfWqir-DCb740ccc5511e5e8fedcff06b081203-3fkdtr%2FVS86BMTJ%2F%2FvNWT00Q35k%3D&to=92&size=2717223&sta_dx=2717223&sta_cs=4385&sta_ft=mp3&sta_ct=7&sta_mt=0&fm2=MH%2CQingdao%2CAnywhere%2C%2Cshanghai%2Ccnc&ctime=1567182979&mtime=1605787492&resv0=-1&resv1=0&resv2=rlim&resv3=2&resv4=2717223&vuk=3757516097&iv=0&htype=&randtype=em&newver=1&newfm=1&secfm=1&flow_ver=3&pkey=en-023716c200db12fba58a25c53c9bcbbfbae6edc9d8635f1a293af13a0e74f83d97bf59005e00bf400adb4b772f7a7615652b50af0f8d0dcf305a5e1275657320&sl=76480590&expires=8h&rt=pr&r=616090522&mlogid=7510695783861262601&vbdid=64799653&fin=%E5%B0%BE%E5%A3%B0%E4%B8%A8%E9%81%93%E9%98%BB%E4%B8%94%E9%95%BF%EF%BC%8C%E5%8A%AA%E5%8A%9B%E5%8A%A0%E9%A4%90.mp3&bflag=92,34-92&rtype=1&dp-logid=7510695783861262601&dp-callid=0.1.1&hps=1&tsl=80&csl=80&fsl=-1&csign=yVzLQPCt4DblfMLqd2BCjd2RnqQ%3D&so=0&ut=6&uter=0&serv=0&uc=1458616558&ti=5902310e0d478cb60c9dc4f354ea6224b52b6139a1d9496a&hflag=30&adg=c_0f3c8fb981bae1fdae375754a6f1d609&reqlabel=778750_l_eeb31e180410b8be0e62f686c2b42c5d_-1_43d73532db4f9890a29565ef474ca519&ibp=1&by=themis&filename=%E5%B0%BE%E5%A3%B0%E4%B8%A8%E9%81%93%E9%98%BB%E4%B8%94%E9%95%BF%EF%BC%8C%E5%8A%AA%E5%8A%9B%E5%8A%A0%E9%A4%90.mp3', 
3, 3) 
 {executed in 3 msec}
2020-11-19 20:05:24.000 INFO  jdbc.sqltiming Line:373 - select nodefieldm0_.entity_id as entity_i1_17_0_, nodefieldm0_.bundle as bundle2_17_0_, nodefieldm0_.delta 
as delta3_17_0_, nodefieldm0_.langcode as langcode4_17_0_, nodefieldm0_.field_media_value as 
field_me5_17_0_, nodefieldm0_.revision_id as revision6_17_0_ from node_revision__field_media 
nodefieldm0_ where nodefieldm0_.entity_id=3 
 {executed in 2 msec}
2020-11-19 20:05:24.003 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------------|------------|
|entity_id |bundle |delta |langcode |field_media_value |revision_id |
|----------|-------|------|---------|------------------|------------|
|----------|-------|------|---------|------------------|------------|

2020-11-19 20:05:24.008 INFO  jdbc.sqltiming Line:373 - insert into node_revision__field_media (bundle, delta, langcode, field_media_value, revision_id, 
entity_id) values ('book', 0, 'zh-hans', 'https://qdall01.baidupcs.com/file/77f2a58c4e8976c6d756793dd34d69db?bkt=en-3f603aaf964434023845c826571ebdfcb5bbeaf16f87a9f5c82b72f5962d1d154fb0d532bdc5b3c72ffa88c0ac4f85f602f67fe07c946121bf2b6ff632ff09aa&fid=3757516097-778750-928244116300577&time=1605787522&sign=FDTAXUGERLQlBHSKfWqir-DCb740ccc5511e5e8fedcff06b081203-3fkdtr%2FVS86BMTJ%2F%2FvNWT00Q35k%3D&to=92&size=2717223&sta_dx=2717223&sta_cs=4385&sta_ft=mp3&sta_ct=7&sta_mt=0&fm2=MH%2CQingdao%2CAnywhere%2C%2Cshanghai%2Ccnc&ctime=1567182979&mtime=1605787492&resv0=-1&resv1=0&resv2=rlim&resv3=2&resv4=2717223&vuk=3757516097&iv=0&htype=&randtype=em&newver=1&newfm=1&secfm=1&flow_ver=3&pkey=en-023716c200db12fba58a25c53c9bcbbfbae6edc9d8635f1a293af13a0e74f83d97bf59005e00bf400adb4b772f7a7615652b50af0f8d0dcf305a5e1275657320&sl=76480590&expires=8h&rt=pr&r=616090522&mlogid=7510695783861262601&vbdid=64799653&fin=%E5%B0%BE%E5%A3%B0%E4%B8%A8%E9%81%93%E9%98%BB%E4%B8%94%E9%95%BF%EF%BC%8C%E5%8A%AA%E5%8A%9B%E5%8A%A0%E9%A4%90.mp3&bflag=92,34-92&rtype=1&dp-logid=7510695783861262601&dp-callid=0.1.1&hps=1&tsl=80&csl=80&fsl=-1&csign=yVzLQPCt4DblfMLqd2BCjd2RnqQ%3D&so=0&ut=6&uter=0&serv=0&uc=1458616558&ti=5902310e0d478cb60c9dc4f354ea6224b52b6139a1d9496a&hflag=30&adg=c_0f3c8fb981bae1fdae375754a6f1d609&reqlabel=778750_l_eeb31e180410b8be0e62f686c2b42c5d_-1_43d73532db4f9890a29565ef474ca519&ibp=1&by=themis&filename=%E5%B0%BE%E5%A3%B0%E4%B8%A8%E9%81%93%E9%98%BB%E4%B8%94%E9%95%BF%EF%BC%8C%E5%8A%AA%E5%8A%9B%E5%8A%A0%E9%A4%90.mp3', 
3, 3) 
 {executed in 1 msec}
2020-11-19 20:05:24.018 INFO  jdbc.sqltiming Line:373 - select bookfieldc0_.entity_id as entity_i1_5_, bookfieldc0_.bundle as bundle2_5_, bookfieldc0_.field_comment_value 
as field_co3_5_, bookfieldc0_.delta as delta4_5_, bookfieldc0_.field_comment_format as field_co5_5_, 
bookfieldc0_.langcode as langcode6_5_, bookfieldc0_.revision_id as revision7_5_ from node__field_comment 
bookfieldc0_ where bookfieldc0_.entity_id=3 
 {executed in 2 msec}
2020-11-19 20:05:24.020 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|--------------------|------|---------------------|---------|------------|
|entity_id |bundle |field_comment_value |delta |field_comment_format |langcode |revision_id |
|----------|-------|--------------------|------|---------------------|---------|------------|
|----------|-------|--------------------|------|---------------------|---------|------------|

2020-11-19 20:05:24.025 INFO  jdbc.sqltiming Line:373 - select bookfieldc0_.entity_id as entity_i1_5_0_, bookfieldc0_.bundle as bundle2_5_0_, bookfieldc0_.field_comment_value 
as field_co3_5_0_, bookfieldc0_.delta as delta4_5_0_, bookfieldc0_.field_comment_format as 
field_co5_5_0_, bookfieldc0_.langcode as langcode6_5_0_, bookfieldc0_.revision_id as revision7_5_0_ 
from node__field_comment bookfieldc0_ where bookfieldc0_.entity_id=3 
 {executed in 2 msec}
2020-11-19 20:05:24.027 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|--------------------|------|---------------------|---------|------------|
|entity_id |bundle |field_comment_value |delta |field_comment_format |langcode |revision_id |
|----------|-------|--------------------|------|---------------------|---------|------------|
|----------|-------|--------------------|------|---------------------|---------|------------|

2020-11-19 20:05:24.039 INFO  jdbc.sqltiming Line:373 - insert into node__field_comment (bundle, field_comment_value, delta, field_comment_format, 
langcode, revision_id, entity_id) values ('book', '<li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/0f/9b/2f/b7a3625e.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>LenX</span> <span class="_1bkbsnjg_0">置顶</span> </div> <div class="_1H1Z49Dr_0"> 2018-10-15 
</div> </div> <div class="_2eMTs2JE_0"> <div class="_2P4B1Hdm_0"> <i class="iconfont"></i> 
<span class="">10</span> </div> <!----> <!----> </div> </div> <div class="_3M6kV3zb_0"> 这个专栏让我对 
JVM 的实现产生了浓厚的兴趣。 </div> <div class="_2r3UB1GX_0"> <span>展开</span><i class="iconfont"></i> 
</div> <div class="_2xNIY4NG_0"> <p class="_33BLbmw4_0">作者回复: 多谢支持！</p> </div> </div></li> 
<li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/10/d4/f3/b73d8abf.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>三木子</span> <span class="_1bkbsnjg_0">置顶</span> </div> <div class="_1H1Z49Dr_0"> 2018-10-15 
</div> </div> <div class="_2eMTs2JE_0"> <div class="_2P4B1Hdm_0"> <i class="iconfont"></i> 
<span class="">4</span> </div> <!----> <!----> </div> </div> <div class="_3M6kV3zb_0 _3D2NkqD6_0"> 
本专栏是对市面上介绍虚拟机知识扩展和补充。物有所值。老师辛苦了！ </div> <!----> <div class="_2xNIY4NG_0"> <p class="_33BLbmw4_0">作者回复: 
多谢支持！</p> </div> </div></li> <li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/0f/67/f4/9a1feb59.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>godtrue</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2018-10-15 </div> </div> <div 
class="_2eMTs2JE_0"> <div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class="">7</span> 
</div> <!----> <!----> </div> </div> <div class="_3M6kV3zb_0"> 非常感谢，雨迪老师辛苦啦！ <br>这个专栏我一直在跟进学习，可能是功力不足，部分内容认为弄明白了，有些内容认为理解不到位，后续会继续努力！ 
<br>看了R大的书目和博文中学习的明目，顿感差距可用天壤之别来形容，这个专栏结束了，但这不是学习的结束而是新的开始！ <br>感谢您的一路陪伴，感谢🙏！ </div> <div 
class="_2r3UB1GX_0"> <span>展开</span><i class="iconfont"></i> </div> <div class="_2xNIY4NG_0"> 
<p class="_33BLbmw4_0">作者回复: 多谢godtrue的多条长评！印象深刻！</p> </div> </div></li> <li class="reJj6Thl_0"><img 
src="https://static001.geekbang.org/account/avatar/00/12/06/cf/94c4c485.jpg" class="_2273kGdT_0"> 
<div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> <span>航go</span> 
<!----> </div> <div class="_1H1Z49Dr_0"> 2018-11-16 </div> </div> <div class="_2eMTs2JE_0"> 
<div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class="">2</span> </div> <!----> 
<!----> </div> </div> <div class="_3M6kV3zb_0"> 一路看下来，虽然很多知识点暂时还消化不了，但是却有一个很强烈的感受：jvm还得好好学，不只是原理，还有为何如此设计。 
</div> <div class="_2r3UB1GX_0"> <span>展开</span><i class="iconfont"></i> </div> <!----> </div></li> 
<li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/11/5f/91/a9b51d4e.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>Desire</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2018-12-03 </div> </div> <div 
class="_2eMTs2JE_0"> <div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class="">1</span> 
</div> <!----> <!----> </div> </div> <div class="_3M6kV3zb_0 _3D2NkqD6_0"> 感谢，老师这么长时间，讲学。让我对jvm有所了解。还需要对jvm深入开展。 
</div> <!----> <div class="_2xNIY4NG_0"> <p class="_33BLbmw4_0">作者回复: 多谢支持！</p> </div> </div></li> 
<li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/0f/4a/80/a8cd1e7a.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>0x6c6a68</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2018-12-01 </div> </div> <div 
class="_2eMTs2JE_0"> <div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class="">1</span> 
</div> <!----> <!----> </div> </div> <div class="_3M6kV3zb_0"> 👍 </div> <div class="_2r3UB1GX_0"> 
<span>展开</span><i class="iconfont"></i> </div> <!----> </div></li> <li class="reJj6Thl_0"><img 
src="https://static001.geekbang.org/account/avatar/00/10/07/8c/51401220.jpg" class="_2273kGdT_0"> 
<div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> <span>小美</span> 
<!----> </div> <div class="_1H1Z49Dr_0"> 2018-11-19 </div> </div> <div class="_2eMTs2JE_0"> 
<div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class="">1</span> </div> <!----> 
<!----> </div> </div> <div class="_3M6kV3zb_0"> 在attach java agent的时候遇到99线升高的性能问题。有的资料上说class 
redefinition会阻塞线程，请问老师能详细讲解下吗？ </div> <div class="_2r3UB1GX_0"> <span>展开</span><i class="iconfont"></i> 
</div> <!----> </div></li> <li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/13/30/2b/bc5873c6.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>对方正在输...</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2018-11-19 </div> </div> <div 
class="_2eMTs2JE_0"> <div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class="">1</span> 
</div> <!----> <!----> </div> </div> <div class="_3M6kV3zb_0"> 感谢老师带来的干货,非常感谢 </div> <div class="_2r3UB1GX_0"> 
<span>展开</span><i class="iconfont"></i> </div> <div class="_2xNIY4NG_0"> <p class="_33BLbmw4_0">作者回复: 
谢谢支持！</p> </div> </div></li> <li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/10/c8/d5/e88c1805.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>JackLei</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2018-11-01 </div> </div> <div 
class="_2eMTs2JE_0"> <div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class="">1</span> 
</div> <!----> <!----> </div> </div> <div class="_3M6kV3zb_0"> 学完了，由衷的对老师说声谢谢！ </div> <div 
class="_2r3UB1GX_0"> <span>展开</span><i class="iconfont"></i> </div> <!----> </div></li> <li 
class="reJj6Thl_0"><img src="" class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> 
<div> <div class="_18Dng5rT_0"> <span>钟狼</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2018-10-29 
</div> </div> <div class="_2eMTs2JE_0"> <div class="_2P4B1Hdm_0"> <i class="iconfont"></i> 
<span class="">1</span> </div> <!----> <!----> </div> </div> <div class="_3M6kV3zb_0 _3D2NkqD6_0"> 
已坚持学完，后面还需多来几遍，感谢老师的专栏，辛苦了！ </div> <!----> <div class="_2xNIY4NG_0"> <p class="_33BLbmw4_0">作者回复: 
多谢支持！</p> </div> </div></li> <li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/12/08/d0/d3eee5a6.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>明山</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2018-10-22 </div> </div> <div class="_2eMTs2JE_0"> 
<div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class="">1</span> </div> <!----> 
<!----> </div> </div> <div class="_3M6kV3zb_0"> 老师讲的太赞了 </div> <div class="_2r3UB1GX_0"> <span>展开</span><i 
class="iconfont"></i> </div> <!----> </div></li> <li class="reJj6Thl_0"><img src="http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epYIx9hjexfzje0tM6cIBOv1C3J0Xm4eZkGaTzKQVbsIoDCyACzHzuyBKQbbjZNMKLYSucp0icyKrw/132" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>fengxingti...</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2018-10-19 </div> </div> 
<div class="_2eMTs2JE_0"> <div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class="">1</span> 
</div> <!----> <!----> </div> </div> <div class="_3M6kV3zb_0"> 物有所值。老师辛苦了！ </div> <div class="_2r3UB1GX_0"> 
<span>展开</span><i class="iconfont"></i> </div> <div class="_2xNIY4NG_0"> <p class="_33BLbmw4_0">作者回复: 
多谢支持！</p> </div> </div></li> <li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/12/32/83/f37fe355.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>笑看风云</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2018-10-19 </div> </div> <div class="_2eMTs2JE_0"> 
<div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class="">1</span> </div> <!----> 
<!----> </div> </div> <div class="_3M6kV3zb_0"> 动态语言像groovy，代码优化与java有哪些区别呢? </div> <div class="_2r3UB1GX_0"> 
<span>展开</span><i class="iconfont"></i> </div> <div class="_2xNIY4NG_0"> <p class="_33BLbmw4_0">作者回复: 
Groovy也是被编译为Java bytecode，所以在即时编译器看来是没有区别的。<br><br>不过，Groovy的编译器生成的bytecode模式可能和javac生成的不一样，如果是这样的话那需要调整inliner的配置。</p> 
</div> </div></li> <li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/0f/8b/cd/abb7bfe3.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>陈浩</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2018-10-18 </div> </div> <div class="_2eMTs2JE_0"> 
<div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class="">1</span> </div> <!----> 
<!----> </div> </div> <div class="_3M6kV3zb_0"> 这是我读过最硬核的技术专栏，感谢 </div> <div class="_2r3UB1GX_0"> 
<span>展开</span><i class="iconfont"></i> </div> <div class="_2xNIY4NG_0"> <p class="_33BLbmw4_0">作者回复: 
多谢支持！</p> </div> </div></li> <li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/12/28/77/56d8061c.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>Geek_7402d...</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2018-10-18 </div> </div> 
<div class="_2eMTs2JE_0"> <div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class="">1</span> 
</div> <!----> <!----> </div> </div> <div class="_3M6kV3zb_0"> 感谢老师！ </div> <div class="_2r3UB1GX_0"> 
<span>展开</span><i class="iconfont"></i> </div> <!----> </div></li> <li class="reJj6Thl_0"><img 
src="https://static001.geekbang.org/account/avatar/00/0f/fe/de/ef17bfaf.jpg" class="_2273kGdT_0"> 
<div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> <span>jony</span> 
<!----> </div> <div class="_1H1Z49Dr_0"> 2018-10-17 </div> </div> <div class="_2eMTs2JE_0"> 
<div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class="">1</span> </div> <!----> 
<!----> </div> </div> <div class="_3M6kV3zb_0"> 多谢 </div> <div class="_2r3UB1GX_0"> <span>展开</span><i 
class="iconfont"></i> </div> <!----> </div></li> <li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/0f/6a/d5/73c75eb3.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>夜行观星</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2018-10-17 </div> </div> <div class="_2eMTs2JE_0"> 
<div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class="">1</span> </div> <!----> 
<!----> </div> </div> <div class="_3M6kV3zb_0"> 感谢老师的辛苦付出。收获很大 </div> <div class="_2r3UB1GX_0"> 
<span>展开</span><i class="iconfont"></i> </div> <div class="_2xNIY4NG_0"> <p class="_33BLbmw4_0">作者回复: 
多谢支持！</p> </div> </div></li> <li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/10/c1/c2/a9ed2f9c.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>tiny</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2018-10-15 </div> </div> <div class="_2eMTs2JE_0"> 
<div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class="">1</span> </div> <!----> 
<!----> </div> </div> <div class="_3M6kV3zb_0 _3D2NkqD6_0"> 谢谢老师的付出，专题很值得收藏，定期拿出一章啃下😂 </div> 
<!----> <div class="_2xNIY4NG_0"> <p class="_33BLbmw4_0">作者回复: 可以在今后遇到实际问题时回来翻阅，提问题</p> </div> 
</div></li> <li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/0f/59/c9/f44cb7f3.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>爪哇夜未眠</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2018-10-15 </div> </div> <div class="_2eMTs2JE_0"> 
<div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class="">1</span> </div> <!----> 
<!----> </div> </div> <div class="_3M6kV3zb_0"> 郑老师的文章很精彩，不过确实需要比较深的基础知识，需要多学习几遍。 <br>感谢郑老师的传道授业解惑！ 
</div> <div class="_2r3UB1GX_0"> <span>展开</span><i class="iconfont"></i> </div> <div class="_2xNIY4NG_0"> 
<p class="_33BLbmw4_0">作者回复: 多谢支持！确实假设了读者有一定的基础知识。可以和其他资料参照着看。</p> </div> </div></li> <li class="reJj6Thl_0"><img 
src="https://static001.geekbang.org/account/avatar/00/12/d4/c4/be9f44bb.jpg" class="_2273kGdT_0"> 
<div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> <span>阿武</span> 
<!----> </div> <div class="_1H1Z49Dr_0"> 2018-10-15 </div> </div> <div class="_2eMTs2JE_0"> 
<div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class="">1</span> </div> <!----> 
<!----> </div> </div> <div class="_3M6kV3zb_0 _3D2NkqD6_0"> 感谢作者这么细心的专栏，虽然我因为技术资历较浅，还没研习虚拟机。但看了前几篇文章，感觉作者很用心，等算法和Java开发能力上升后，一定好好研习大大的文章。:-) 
</div> <!----> <div class="_2xNIY4NG_0"> <p class="_33BLbmw4_0">作者回复: 多谢支持！</p> </div> </div></li>', 
0, 'full_html', 'zh-hans', 3, 3) 
 {executed in 4 msec}
2020-11-19 20:05:24.054 INFO  jdbc.sqltiming Line:373 - select nodefieldc0_.entity_id as entity_i1_14_0_, nodefieldc0_.bundle as bundle2_14_0_, nodefieldc0_.field_comment_value 
as field_co3_14_0_, nodefieldc0_.delta as delta4_14_0_, nodefieldc0_.field_comment_format as 
field_co5_14_0_, nodefieldc0_.langcode as langcode6_14_0_, nodefieldc0_.revision_id as revision7_14_0_ 
from node_revision__field_comment nodefieldc0_ where nodefieldc0_.entity_id=3 
 {executed in 2 msec}
2020-11-19 20:05:24.056 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|--------------------|------|---------------------|---------|------------|
|entity_id |bundle |field_comment_value |delta |field_comment_format |langcode |revision_id |
|----------|-------|--------------------|------|---------------------|---------|------------|
|----------|-------|--------------------|------|---------------------|---------|------------|

2020-11-19 20:05:24.069 INFO  jdbc.sqltiming Line:373 - insert into node_revision__field_comment (bundle, field_comment_value, delta, field_comment_format, 
langcode, revision_id, entity_id) values ('book', '<li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/0f/9b/2f/b7a3625e.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>LenX</span> <span class="_1bkbsnjg_0">置顶</span> </div> <div class="_1H1Z49Dr_0"> 2018-10-15 
</div> </div> <div class="_2eMTs2JE_0"> <div class="_2P4B1Hdm_0"> <i class="iconfont"></i> 
<span class="">10</span> </div> <!----> <!----> </div> </div> <div class="_3M6kV3zb_0"> 这个专栏让我对 
JVM 的实现产生了浓厚的兴趣。 </div> <div class="_2r3UB1GX_0"> <span>展开</span><i class="iconfont"></i> 
</div> <div class="_2xNIY4NG_0"> <p class="_33BLbmw4_0">作者回复: 多谢支持！</p> </div> </div></li> 
<li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/10/d4/f3/b73d8abf.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>三木子</span> <span class="_1bkbsnjg_0">置顶</span> </div> <div class="_1H1Z49Dr_0"> 2018-10-15 
</div> </div> <div class="_2eMTs2JE_0"> <div class="_2P4B1Hdm_0"> <i class="iconfont"></i> 
<span class="">4</span> </div> <!----> <!----> </div> </div> <div class="_3M6kV3zb_0 _3D2NkqD6_0"> 
本专栏是对市面上介绍虚拟机知识扩展和补充。物有所值。老师辛苦了！ </div> <!----> <div class="_2xNIY4NG_0"> <p class="_33BLbmw4_0">作者回复: 
多谢支持！</p> </div> </div></li> <li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/0f/67/f4/9a1feb59.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>godtrue</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2018-10-15 </div> </div> <div 
class="_2eMTs2JE_0"> <div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class="">7</span> 
</div> <!----> <!----> </div> </div> <div class="_3M6kV3zb_0"> 非常感谢，雨迪老师辛苦啦！ <br>这个专栏我一直在跟进学习，可能是功力不足，部分内容认为弄明白了，有些内容认为理解不到位，后续会继续努力！ 
<br>看了R大的书目和博文中学习的明目，顿感差距可用天壤之别来形容，这个专栏结束了，但这不是学习的结束而是新的开始！ <br>感谢您的一路陪伴，感谢🙏！ </div> <div 
class="_2r3UB1GX_0"> <span>展开</span><i class="iconfont"></i> </div> <div class="_2xNIY4NG_0"> 
<p class="_33BLbmw4_0">作者回复: 多谢godtrue的多条长评！印象深刻！</p> </div> </div></li> <li class="reJj6Thl_0"><img 
src="https://static001.geekbang.org/account/avatar/00/12/06/cf/94c4c485.jpg" class="_2273kGdT_0"> 
<div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> <span>航go</span> 
<!----> </div> <div class="_1H1Z49Dr_0"> 2018-11-16 </div> </div> <div class="_2eMTs2JE_0"> 
<div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class="">2</span> </div> <!----> 
<!----> </div> </div> <div class="_3M6kV3zb_0"> 一路看下来，虽然很多知识点暂时还消化不了，但是却有一个很强烈的感受：jvm还得好好学，不只是原理，还有为何如此设计。 
</div> <div class="_2r3UB1GX_0"> <span>展开</span><i class="iconfont"></i> </div> <!----> </div></li> 
<li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/11/5f/91/a9b51d4e.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>Desire</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2018-12-03 </div> </div> <div 
class="_2eMTs2JE_0"> <div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class="">1</span> 
</div> <!----> <!----> </div> </div> <div class="_3M6kV3zb_0 _3D2NkqD6_0"> 感谢，老师这么长时间，讲学。让我对jvm有所了解。还需要对jvm深入开展。 
</div> <!----> <div class="_2xNIY4NG_0"> <p class="_33BLbmw4_0">作者回复: 多谢支持！</p> </div> </div></li> 
<li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/0f/4a/80/a8cd1e7a.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>0x6c6a68</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2018-12-01 </div> </div> <div 
class="_2eMTs2JE_0"> <div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class="">1</span> 
</div> <!----> <!----> </div> </div> <div class="_3M6kV3zb_0"> 👍 </div> <div class="_2r3UB1GX_0"> 
<span>展开</span><i class="iconfont"></i> </div> <!----> </div></li> <li class="reJj6Thl_0"><img 
src="https://static001.geekbang.org/account/avatar/00/10/07/8c/51401220.jpg" class="_2273kGdT_0"> 
<div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> <span>小美</span> 
<!----> </div> <div class="_1H1Z49Dr_0"> 2018-11-19 </div> </div> <div class="_2eMTs2JE_0"> 
<div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class="">1</span> </div> <!----> 
<!----> </div> </div> <div class="_3M6kV3zb_0"> 在attach java agent的时候遇到99线升高的性能问题。有的资料上说class 
redefinition会阻塞线程，请问老师能详细讲解下吗？ </div> <div class="_2r3UB1GX_0"> <span>展开</span><i class="iconfont"></i> 
</div> <!----> </div></li> <li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/13/30/2b/bc5873c6.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>对方正在输...</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2018-11-19 </div> </div> <div 
class="_2eMTs2JE_0"> <div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class="">1</span> 
</div> <!----> <!----> </div> </div> <div class="_3M6kV3zb_0"> 感谢老师带来的干货,非常感谢 </div> <div class="_2r3UB1GX_0"> 
<span>展开</span><i class="iconfont"></i> </div> <div class="_2xNIY4NG_0"> <p class="_33BLbmw4_0">作者回复: 
谢谢支持！</p> </div> </div></li> <li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/10/c8/d5/e88c1805.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>JackLei</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2018-11-01 </div> </div> <div 
class="_2eMTs2JE_0"> <div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class="">1</span> 
</div> <!----> <!----> </div> </div> <div class="_3M6kV3zb_0"> 学完了，由衷的对老师说声谢谢！ </div> <div 
class="_2r3UB1GX_0"> <span>展开</span><i class="iconfont"></i> </div> <!----> </div></li> <li 
class="reJj6Thl_0"><img src="" class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> 
<div> <div class="_18Dng5rT_0"> <span>钟狼</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2018-10-29 
</div> </div> <div class="_2eMTs2JE_0"> <div class="_2P4B1Hdm_0"> <i class="iconfont"></i> 
<span class="">1</span> </div> <!----> <!----> </div> </div> <div class="_3M6kV3zb_0 _3D2NkqD6_0"> 
已坚持学完，后面还需多来几遍，感谢老师的专栏，辛苦了！ </div> <!----> <div class="_2xNIY4NG_0"> <p class="_33BLbmw4_0">作者回复: 
多谢支持！</p> </div> </div></li> <li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/12/08/d0/d3eee5a6.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>明山</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2018-10-22 </div> </div> <div class="_2eMTs2JE_0"> 
<div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class="">1</span> </div> <!----> 
<!----> </div> </div> <div class="_3M6kV3zb_0"> 老师讲的太赞了 </div> <div class="_2r3UB1GX_0"> <span>展开</span><i 
class="iconfont"></i> </div> <!----> </div></li> <li class="reJj6Thl_0"><img src="http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epYIx9hjexfzje0tM6cIBOv1C3J0Xm4eZkGaTzKQVbsIoDCyACzHzuyBKQbbjZNMKLYSucp0icyKrw/132" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>fengxingti...</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2018-10-19 </div> </div> 
<div class="_2eMTs2JE_0"> <div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class="">1</span> 
</div> <!----> <!----> </div> </div> <div class="_3M6kV3zb_0"> 物有所值。老师辛苦了！ </div> <div class="_2r3UB1GX_0"> 
<span>展开</span><i class="iconfont"></i> </div> <div class="_2xNIY4NG_0"> <p class="_33BLbmw4_0">作者回复: 
多谢支持！</p> </div> </div></li> <li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/12/32/83/f37fe355.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>笑看风云</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2018-10-19 </div> </div> <div class="_2eMTs2JE_0"> 
<div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class="">1</span> </div> <!----> 
<!----> </div> </div> <div class="_3M6kV3zb_0"> 动态语言像groovy，代码优化与java有哪些区别呢? </div> <div class="_2r3UB1GX_0"> 
<span>展开</span><i class="iconfont"></i> </div> <div class="_2xNIY4NG_0"> <p class="_33BLbmw4_0">作者回复: 
Groovy也是被编译为Java bytecode，所以在即时编译器看来是没有区别的。<br><br>不过，Groovy的编译器生成的bytecode模式可能和javac生成的不一样，如果是这样的话那需要调整inliner的配置。</p> 
</div> </div></li> <li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/0f/8b/cd/abb7bfe3.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>陈浩</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2018-10-18 </div> </div> <div class="_2eMTs2JE_0"> 
<div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class="">1</span> </div> <!----> 
<!----> </div> </div> <div class="_3M6kV3zb_0"> 这是我读过最硬核的技术专栏，感谢 </div> <div class="_2r3UB1GX_0"> 
<span>展开</span><i class="iconfont"></i> </div> <div class="_2xNIY4NG_0"> <p class="_33BLbmw4_0">作者回复: 
多谢支持！</p> </div> </div></li> <li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/12/28/77/56d8061c.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>Geek_7402d...</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2018-10-18 </div> </div> 
<div class="_2eMTs2JE_0"> <div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class="">1</span> 
</div> <!----> <!----> </div> </div> <div class="_3M6kV3zb_0"> 感谢老师！ </div> <div class="_2r3UB1GX_0"> 
<span>展开</span><i class="iconfont"></i> </div> <!----> </div></li> <li class="reJj6Thl_0"><img 
src="https://static001.geekbang.org/account/avatar/00/0f/fe/de/ef17bfaf.jpg" class="_2273kGdT_0"> 
<div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> <span>jony</span> 
<!----> </div> <div class="_1H1Z49Dr_0"> 2018-10-17 </div> </div> <div class="_2eMTs2JE_0"> 
<div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class="">1</span> </div> <!----> 
<!----> </div> </div> <div class="_3M6kV3zb_0"> 多谢 </div> <div class="_2r3UB1GX_0"> <span>展开</span><i 
class="iconfont"></i> </div> <!----> </div></li> <li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/0f/6a/d5/73c75eb3.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>夜行观星</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2018-10-17 </div> </div> <div class="_2eMTs2JE_0"> 
<div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class="">1</span> </div> <!----> 
<!----> </div> </div> <div class="_3M6kV3zb_0"> 感谢老师的辛苦付出。收获很大 </div> <div class="_2r3UB1GX_0"> 
<span>展开</span><i class="iconfont"></i> </div> <div class="_2xNIY4NG_0"> <p class="_33BLbmw4_0">作者回复: 
多谢支持！</p> </div> </div></li> <li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/10/c1/c2/a9ed2f9c.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>tiny</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2018-10-15 </div> </div> <div class="_2eMTs2JE_0"> 
<div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class="">1</span> </div> <!----> 
<!----> </div> </div> <div class="_3M6kV3zb_0 _3D2NkqD6_0"> 谢谢老师的付出，专题很值得收藏，定期拿出一章啃下😂 </div> 
<!----> <div class="_2xNIY4NG_0"> <p class="_33BLbmw4_0">作者回复: 可以在今后遇到实际问题时回来翻阅，提问题</p> </div> 
</div></li> <li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/0f/59/c9/f44cb7f3.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>爪哇夜未眠</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2018-10-15 </div> </div> <div class="_2eMTs2JE_0"> 
<div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class="">1</span> </div> <!----> 
<!----> </div> </div> <div class="_3M6kV3zb_0"> 郑老师的文章很精彩，不过确实需要比较深的基础知识，需要多学习几遍。 <br>感谢郑老师的传道授业解惑！ 
</div> <div class="_2r3UB1GX_0"> <span>展开</span><i class="iconfont"></i> </div> <div class="_2xNIY4NG_0"> 
<p class="_33BLbmw4_0">作者回复: 多谢支持！确实假设了读者有一定的基础知识。可以和其他资料参照着看。</p> </div> </div></li> <li class="reJj6Thl_0"><img 
src="https://static001.geekbang.org/account/avatar/00/12/d4/c4/be9f44bb.jpg" class="_2273kGdT_0"> 
<div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> <span>阿武</span> 
<!----> </div> <div class="_1H1Z49Dr_0"> 2018-10-15 </div> </div> <div class="_2eMTs2JE_0"> 
<div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class="">1</span> </div> <!----> 
<!----> </div> </div> <div class="_3M6kV3zb_0 _3D2NkqD6_0"> 感谢作者这么细心的专栏，虽然我因为技术资历较浅，还没研习虚拟机。但看了前几篇文章，感觉作者很用心，等算法和Java开发能力上升后，一定好好研习大大的文章。:-) 
</div> <!----> <div class="_2xNIY4NG_0"> <p class="_33BLbmw4_0">作者回复: 多谢支持！</p> </div> </div></li>', 
0, 'full_html', 'zh-hans', 3, 3) 
 {executed in 7 msec}
2020-11-19 20:05:24.082 INFO  jdbc.sqltiming Line:373 - select bookfieldt0_.entity_id as entity_i1_9_, bookfieldt0_.bundle as bundle2_9_, bookfieldt0_.delta 
as delta3_9_, bookfieldt0_.langcode as langcode4_9_, bookfieldt0_.revision_id as revision5_9_, 
bookfieldt0_.field_thumb_value as field_th6_9_ from node__field_thumb bookfieldt0_ where bookfieldt0_.entity_id=3 
 {executed in 1 msec}
2020-11-19 20:05:24.084 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------|------------------|
|entity_id |bundle |delta |langcode |revision_id |field_thumb_value |
|----------|-------|------|---------|------------|------------------|
|----------|-------|------|---------|------------|------------------|

2020-11-19 20:05:24.089 INFO  jdbc.sqltiming Line:373 - select bookfieldt0_.entity_id as entity_i1_9_0_, bookfieldt0_.bundle as bundle2_9_0_, bookfieldt0_.delta 
as delta3_9_0_, bookfieldt0_.langcode as langcode4_9_0_, bookfieldt0_.revision_id as revision5_9_0_, 
bookfieldt0_.field_thumb_value as field_th6_9_0_ from node__field_thumb bookfieldt0_ where 
bookfieldt0_.entity_id=3 
 {executed in 2 msec}
2020-11-19 20:05:24.091 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------|------------------|
|entity_id |bundle |delta |langcode |revision_id |field_thumb_value |
|----------|-------|------|---------|------------|------------------|
|----------|-------|------|---------|------------|------------------|

2020-11-19 20:05:24.095 INFO  jdbc.sqltiming Line:373 - insert into node__field_thumb (bundle, delta, langcode, revision_id, field_thumb_value, entity_id) 
values ('book', 0, 'zh-hans', 3, 'https://static001.geekbang.org/resource/image/ef/c2/ef32b7f8161a0b2f39b2e224c56ff0c2.jpg', 
3) 
 {executed in 1 msec}
2020-11-19 20:05:24.104 INFO  jdbc.sqltiming Line:373 - select nodefieldt0_.entity_id as entity_i1_18_0_, nodefieldt0_.bundle as bundle2_18_0_, nodefieldt0_.delta 
as delta3_18_0_, nodefieldt0_.langcode as langcode4_18_0_, nodefieldt0_.revision_id as revision5_18_0_, 
nodefieldt0_.field_thumb_value as field_th6_18_0_ from node_revision__field_thumb nodefieldt0_ 
where nodefieldt0_.entity_id=3 
 {executed in 1 msec}
2020-11-19 20:05:24.106 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------|------------------|
|entity_id |bundle |delta |langcode |revision_id |field_thumb_value |
|----------|-------|------|---------|------------|------------------|
|----------|-------|------|---------|------------|------------------|

2020-11-19 20:05:24.112 INFO  jdbc.sqltiming Line:373 - insert into node_revision__field_thumb (bundle, delta, langcode, revision_id, field_thumb_value, 
entity_id) values ('book', 0, 'zh-hans', 3, 'https://static001.geekbang.org/resource/image/ef/c2/ef32b7f8161a0b2f39b2e224c56ff0c2.jpg', 
3) 
 {executed in 1 msec}
2020-11-19 20:05:24.120 INFO  jdbc.sqltiming Line:373 - select bookfieldf0_.entity_id as entity_i1_6_0_, bookfieldf0_.bundle as bundle2_6_0_, bookfieldf0_.delta 
as delta3_6_0_, bookfieldf0_.field_fenlei_target_id as field_fe4_6_0_, bookfieldf0_.langcode 
as langcode5_6_0_, bookfieldf0_.revision_id as revision6_6_0_ from node__field_fenlei bookfieldf0_ 
where bookfieldf0_.entity_id=3 
 {executed in 2 msec}
2020-11-19 20:05:24.122 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------------|---------|------------|
|entity_id |bundle |delta |field_fenlei_target_id |langcode |revision_id |
|----------|-------|------|-----------------------|---------|------------|
|----------|-------|------|-----------------------|---------|------------|

2020-11-19 20:05:24.127 INFO  jdbc.sqltiming Line:373 - insert into node__field_fenlei (bundle, delta, field_fenlei_target_id, langcode, revision_id, 
entity_id) values ('book', 0, 1, 'zh-hans', 3, 3) 
 {executed in 1 msec}
2020-11-19 20:05:24.135 INFO  jdbc.sqltiming Line:373 - select nodefieldf0_.entity_id as entity_i1_15_0_, nodefieldf0_.bundle as bundle2_15_0_, nodefieldf0_.delta 
as delta3_15_0_, nodefieldf0_.field_fenlei_target_id as field_fe4_15_0_, nodefieldf0_.langcode 
as langcode5_15_0_, nodefieldf0_.revision_id as revision6_15_0_ from node_revision__field_fenlei 
nodefieldf0_ where nodefieldf0_.entity_id=3 
 {executed in 1 msec}
2020-11-19 20:05:24.137 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------------|---------|------------|
|entity_id |bundle |delta |field_fenlei_target_id |langcode |revision_id |
|----------|-------|------|-----------------------|---------|------------|
|----------|-------|------|-----------------------|---------|------------|

2020-11-19 20:05:24.142 INFO  jdbc.sqltiming Line:373 - insert into node_revision__field_fenlei (bundle, delta, field_fenlei_target_id, langcode, revision_id, 
entity_id) values ('book', 0, 1, 'zh-hans', 3, 3) 
 {executed in 1 msec}
2020-11-19 20:05:24.153 INFO  jdbc.sqltiming Line:373 - select bookfieldf0_.entity_id as entity_i1_7_, bookfieldf0_.bundle as bundle2_7_, bookfieldf0_.delta 
as delta3_7_, bookfieldf0_.field_fsid_value as field_fs4_7_, bookfieldf0_.langcode as langcode5_7_, 
bookfieldf0_.revision_id as revision6_7_ from node__field_fsid bookfieldf0_ where bookfieldf0_.field_fsid_value='185437150722304' 
 {executed in 2 msec}
2020-11-19 20:05:24.155 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------|---------|------------|
|entity_id |bundle |delta |field_fsid_value |langcode |revision_id |
|----------|-------|------|-----------------|---------|------------|
|----------|-------|------|-----------------|---------|------------|

2020-11-19 20:05:24.159 INFO  jdbc.sqltiming Line:373 - insert into node_revision (langcode, nid, revision_default, revision_timestamp, revision_uid) 
values ('zh-hans', 0, 1, 1605787524, 1) 
 {executed in 1 msec}
2020-11-19 20:05:24.160 INFO  jdbc.sqltiming Line:373 - getGeneratedKeys on query: insert into node_revision (langcode, nid, revision_default, revision_timestamp, 
revision_uid) values ('zh-hans', 0, 1, 1605787524, 1) 
 {executed in 0 msec}
2020-11-19 20:05:24.162 INFO  jdbc.resultsettable Line:610 - 
|--------------|
|generated_key |
|--------------|
|4             |
|--------------|

2020-11-19 20:05:24.172 INFO  jdbc.sqltiming Line:373 - insert into node (langcode, type, uuid, vid) values ('zh-hans', 'book', 'cb7bc520-49c0-470f-9fc9-84a122a28b01', 
4) 
 {executed in 1 msec}
2020-11-19 20:05:24.173 INFO  jdbc.sqltiming Line:373 - getGeneratedKeys on query: insert into node (langcode, type, uuid, vid) values ('zh-hans', 
'book', 'cb7bc520-49c0-470f-9fc9-84a122a28b01', 4) 
 {executed in 0 msec}
2020-11-19 20:05:24.175 INFO  jdbc.resultsettable Line:610 - 
|--------------|
|generated_key |
|--------------|
|4             |
|--------------|

2020-11-19 20:05:24.189 INFO  jdbc.sqltiming Line:373 - update node_revision set langcode='zh-hans', nid=4, revision_default=1, revision_timestamp=1605787524, 
revision_uid=1 where vid=4 
 {executed in 1 msec}
2020-11-19 20:05:24.199 INFO  jdbc.sqltiming Line:373 - select bookfieldf0_.entity_id as entity_i1_7_0_, bookfieldf0_.bundle as bundle2_7_0_, bookfieldf0_.delta 
as delta3_7_0_, bookfieldf0_.field_fsid_value as field_fs4_7_0_, bookfieldf0_.langcode as langcode5_7_0_, 
bookfieldf0_.revision_id as revision6_7_0_ from node__field_fsid bookfieldf0_ where bookfieldf0_.entity_id=4 
 {executed in 2 msec}
2020-11-19 20:05:24.201 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------|---------|------------|
|entity_id |bundle |delta |field_fsid_value |langcode |revision_id |
|----------|-------|------|-----------------|---------|------------|
|----------|-------|------|-----------------|---------|------------|

2020-11-19 20:05:24.208 INFO  jdbc.sqltiming Line:373 - insert into node__field_fsid (bundle, delta, field_fsid_value, langcode, revision_id, entity_id) 
values ('book', 0, '185437150722304', 'zh-hans', 4, 4) 
 {executed in 1 msec}
2020-11-19 20:05:24.221 INFO  jdbc.sqltiming Line:373 - select nodefieldf0_.entity_id as entity_i1_16_0_, nodefieldf0_.bundle as bundle2_16_0_, nodefieldf0_.delta 
as delta3_16_0_, nodefieldf0_.field_fsid_value as field_fs4_16_0_, nodefieldf0_.langcode as 
langcode5_16_0_, nodefieldf0_.revision_id as revision6_16_0_ from node_revision__field_fsid 
nodefieldf0_ where nodefieldf0_.entity_id=4 
 {executed in 2 msec}
2020-11-19 20:05:24.223 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------|---------|------------|
|entity_id |bundle |delta |field_fsid_value |langcode |revision_id |
|----------|-------|------|-----------------|---------|------------|
|----------|-------|------|-----------------|---------|------------|

2020-11-19 20:05:24.228 INFO  jdbc.sqltiming Line:373 - insert into node_revision__field_fsid (bundle, delta, field_fsid_value, langcode, revision_id, 
entity_id) values ('book', 0, '185437150722304', 'zh-hans', 4, 4) 
 {executed in 1 msec}
2020-11-19 20:05:24.236 INFO  jdbc.sqltiming Line:373 - select bookentity0_.nid as nid1_1_, bookentity0_.bid as bid2_1_, bookentity0_.depth as depth3_1_, 
bookentity0_.has_children as has_chil4_1_, bookentity0_.p1 as p5_1_, bookentity0_.p2 as p6_1_, 
bookentity0_.p3 as p7_1_, bookentity0_.p4 as p8_1_, bookentity0_.p5 as p9_1_, bookentity0_.pid 
as pid10_1_, bookentity0_.weight as weight11_1_ from book bookentity0_ where bookentity0_.nid=4 
 {executed in 2 msec}
2020-11-19 20:05:24.239 INFO  jdbc.resultsettable Line:610 - 
|----|----|------|-------------|---|---|---|---|---|----|-------|
|nid |bid |depth |has_children |p1 |p2 |p3 |p4 |p5 |pid |weight |
|----|----|------|-------------|---|---|---|---|---|----|-------|
|----|----|------|-------------|---|---|---|---|---|----|-------|

2020-11-19 20:05:24.243 INFO  jdbc.sqltiming Line:373 - select bookentity0_.nid as nid1_1_0_, bookentity0_.bid as bid2_1_0_, bookentity0_.depth as 
depth3_1_0_, bookentity0_.has_children as has_chil4_1_0_, bookentity0_.p1 as p5_1_0_, bookentity0_.p2 
as p6_1_0_, bookentity0_.p3 as p7_1_0_, bookentity0_.p4 as p8_1_0_, bookentity0_.p5 as p9_1_0_, 
bookentity0_.pid as pid10_1_0_, bookentity0_.weight as weight11_1_0_ from book bookentity0_ 
where bookentity0_.nid=4 
 {executed in 1 msec}
2020-11-19 20:05:24.246 INFO  jdbc.resultsettable Line:610 - 
|----|----|------|-------------|---|---|---|---|---|----|-------|
|nid |bid |depth |has_children |p1 |p2 |p3 |p4 |p5 |pid |weight |
|----|----|------|-------------|---|---|---|---|---|----|-------|
|----|----|------|-------------|---|---|---|---|---|----|-------|

2020-11-19 20:05:24.252 INFO  jdbc.sqltiming Line:373 - insert into book (bid, depth, has_children, p1, p2, p3, p4, p5, pid, weight, nid) values (1, 
2, 1, 1, 4, 0, 0, 0, 1, 0, 4) 
 {executed in 1 msec}
2020-11-19 20:05:24.263 INFO  jdbc.sqltiming Line:373 - select nodebodyen0_.entity_id as entity_i1_4_, nodebodyen0_.body_value as body_val2_4_, nodebodyen0_.body_summary 
as body_sum3_4_, nodebodyen0_.bundle as bundle4_4_, nodebodyen0_.delta as delta5_4_, nodebodyen0_.body_format 
as body_for6_4_, nodebodyen0_.langcode as langcode7_4_, nodebodyen0_.revision_id as revision8_4_ 
from node__body nodebodyen0_ where nodebodyen0_.entity_id=4 
 {executed in 2 msec}
2020-11-19 20:05:24.266 INFO  jdbc.resultsettable Line:610 - 
|----------|-----------|-------------|-------|------|------------|---------|------------|
|entity_id |body_value |body_summary |bundle |delta |body_format |langcode |revision_id |
|----------|-----------|-------------|-------|------|------------|---------|------------|
|----------|-----------|-------------|-------|------|------------|---------|------------|

2020-11-19 20:05:24.272 INFO  jdbc.sqltiming Line:373 - select nodebodyre0_.entity_id as entity_i1_13_0_, nodebodyre0_.body_value as body_val2_13_0_, 
nodebodyre0_.body_summary as body_sum3_13_0_, nodebodyre0_.bundle as bundle4_13_0_, nodebodyre0_.delta 
as delta5_13_0_, nodebodyre0_.body_format as body_for6_13_0_, nodebodyre0_.langcode as langcode7_13_0_, 
nodebodyre0_.revision_id as revision8_13_0_ from node_revision__body nodebodyre0_ where nodebodyre0_.entity_id=4 
 {executed in 2 msec}
2020-11-19 20:05:24.274 INFO  jdbc.resultsettable Line:610 - 
|----------|-----------|-------------|-------|------|------------|---------|------------|
|entity_id |body_value |body_summary |bundle |delta |body_format |langcode |revision_id |
|----------|-----------|-------------|-------|------|------------|---------|------------|
|----------|-----------|-------------|-------|------|------------|---------|------------|

2020-11-19 20:05:24.282 INFO  jdbc.sqltiming Line:373 - insert into node_revision__body (body_value, body_summary, bundle, delta, body_format, langcode, 
revision_id, entity_id) values ('', '', 'book', 0, 'full_html', 'zh-hans', 4, 4) 
 {executed in 1 msec}
2020-11-19 20:05:24.299 INFO  jdbc.sqltiming Line:373 - select nodebodyen0_.entity_id as entity_i1_4_0_, nodebodyen0_.body_value as body_val2_4_0_, 
nodebodyen0_.body_summary as body_sum3_4_0_, nodebodyen0_.bundle as bundle4_4_0_, nodebodyen0_.delta 
as delta5_4_0_, nodebodyen0_.body_format as body_for6_4_0_, nodebodyen0_.langcode as langcode7_4_0_, 
nodebodyen0_.revision_id as revision8_4_0_ from node__body nodebodyen0_ where nodebodyen0_.entity_id=4 
 {executed in 1 msec}
2020-11-19 20:05:24.301 INFO  jdbc.resultsettable Line:610 - 
|----------|-----------|-------------|-------|------|------------|---------|------------|
|entity_id |body_value |body_summary |bundle |delta |body_format |langcode |revision_id |
|----------|-----------|-------------|-------|------|------------|---------|------------|
|----------|-----------|-------------|-------|------|------------|---------|------------|

2020-11-19 20:05:24.385 INFO  jdbc.sqltiming Line:373 - insert into node__body (body_value, body_summary, bundle, delta, body_format, langcode, revision_id, 
entity_id) values ('', '', 'book', 0, 'full_html', 'zh-hans', 4, 4) 
 {executed in 25 msec}
2020-11-19 20:05:24.407 INFO  jdbc.sqltiming Line:373 - select nodefiledd0_.nid as nid1_10_, nodefiledd0_.changed as changed2_10_, nodefiledd0_.created 
as created3_10_, nodefiledd0_.default_langcode as default_4_10_, nodefiledd0_.langcode as langcode5_10_, 
nodefiledd0_.promote as promote6_10_, nodefiledd0_.revision_translation_affected as revision7_10_, 
nodefiledd0_.status as status8_10_, nodefiledd0_.sticky as sticky9_10_, nodefiledd0_.title 
as title10_10_, nodefiledd0_.type as type11_10_, nodefiledd0_.uid as uid12_10_, nodefiledd0_.vid 
as vid13_10_ from node_field_data nodefiledd0_ where nodefiledd0_.nid=4 
 {executed in 2 msec}
2020-11-19 20:05:24.410 INFO  jdbc.resultsettable Line:610 - 
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|-----|----|----|
|nid |changed |created |default_langcode |langcode |promote |revision_translation_affected |status |sticky |title |type |uid |vid |
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|-----|----|----|
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|-----|----|----|

2020-11-19 20:05:24.415 INFO  jdbc.sqltiming Line:373 - select nodefieldr0_.nid as nid1_11_0_, nodefieldr0_.changed as changed2_11_0_, nodefieldr0_.created 
as created3_11_0_, nodefieldr0_.default_langcode as default_4_11_0_, nodefieldr0_.langcode 
as langcode5_11_0_, nodefieldr0_.promote as promote6_11_0_, nodefieldr0_.revision_translation_affected 
as revision7_11_0_, nodefieldr0_.status as status8_11_0_, nodefieldr0_.sticky as sticky9_11_0_, 
nodefieldr0_.title as title10_11_0_, nodefieldr0_.uid as uid11_11_0_, nodefieldr0_.vid as vid12_11_0_ 
from node_field_revision nodefieldr0_ where nodefieldr0_.nid=4 
 {executed in 1 msec}
2020-11-19 20:05:24.418 INFO  jdbc.resultsettable Line:610 - 
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|----|----|
|nid |changed |created |default_langcode |langcode |promote |revision_translation_affected |status |sticky |title |uid |vid |
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|----|----|
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|----|----|

2020-11-19 20:05:24.439 INFO  jdbc.sqltiming Line:373 - insert into node_field_revision (changed, created, default_langcode, langcode, promote, revision_translation_affected, 
status, sticky, title, uid, vid, nid) values (1605787524, 1605787524, 1, 'zh-hans', 0, 1, 1, 
0, '05-模块四：黑科技 (3讲)', 1, 4, 4) 
 {executed in 15 msec}
2020-11-19 20:05:24.493 INFO  jdbc.sqltiming Line:373 - select nodefiledd0_.nid as nid1_10_0_, nodefiledd0_.changed as changed2_10_0_, nodefiledd0_.created 
as created3_10_0_, nodefiledd0_.default_langcode as default_4_10_0_, nodefiledd0_.langcode 
as langcode5_10_0_, nodefiledd0_.promote as promote6_10_0_, nodefiledd0_.revision_translation_affected 
as revision7_10_0_, nodefiledd0_.status as status8_10_0_, nodefiledd0_.sticky as sticky9_10_0_, 
nodefiledd0_.title as title10_10_0_, nodefiledd0_.type as type11_10_0_, nodefiledd0_.uid as 
uid12_10_0_, nodefiledd0_.vid as vid13_10_0_ from node_field_data nodefiledd0_ where nodefiledd0_.nid=4 
 {executed in 3 msec}
2020-11-19 20:05:24.496 INFO  jdbc.resultsettable Line:610 - 
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|-----|----|----|
|nid |changed |created |default_langcode |langcode |promote |revision_translation_affected |status |sticky |title |type |uid |vid |
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|-----|----|----|
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|-----|----|----|

2020-11-19 20:05:24.513 INFO  jdbc.sqltiming Line:373 - insert into node_field_data (changed, created, default_langcode, langcode, promote, revision_translation_affected, 
status, sticky, title, type, uid, vid, nid) values (1605787524, 1605787524, 1, 'zh-hans', 0, 
1, 1, 0, '05-模块四：黑科技 (3讲)', 'book', 1, 4, 4) 
 {executed in 12 msec}
2020-11-19 20:05:24.521 INFO  jdbc.sqltiming Line:373 - select bookfieldm0_.entity_id as entity_i1_8_, bookfieldm0_.bundle as bundle2_8_, bookfieldm0_.delta 
as delta3_8_, bookfieldm0_.langcode as langcode4_8_, bookfieldm0_.field_media_value as field_me5_8_, 
bookfieldm0_.revision_id as revision6_8_ from node__field_media bookfieldm0_ where bookfieldm0_.entity_id=4 
 {executed in 1 msec}
2020-11-19 20:05:24.523 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------------|------------|
|entity_id |bundle |delta |langcode |field_media_value |revision_id |
|----------|-------|------|---------|------------------|------------|
|----------|-------|------|---------|------------------|------------|

2020-11-19 20:05:24.529 INFO  jdbc.sqltiming Line:373 - select bookfieldm0_.entity_id as entity_i1_8_0_, bookfieldm0_.bundle as bundle2_8_0_, bookfieldm0_.delta 
as delta3_8_0_, bookfieldm0_.langcode as langcode4_8_0_, bookfieldm0_.field_media_value as 
field_me5_8_0_, bookfieldm0_.revision_id as revision6_8_0_ from node__field_media bookfieldm0_ 
where bookfieldm0_.entity_id=4 
 {executed in 2 msec}
2020-11-19 20:05:24.531 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------------|------------|
|entity_id |bundle |delta |langcode |field_media_value |revision_id |
|----------|-------|------|---------|------------------|------------|
|----------|-------|------|---------|------------------|------------|

2020-11-19 20:05:24.537 INFO  jdbc.sqltiming Line:373 - insert into node__field_media (bundle, delta, langcode, field_media_value, revision_id, entity_id) 
values ('book', 0, 'zh-hans', '', 4, 4) 
 {executed in 1 msec}
2020-11-19 20:05:24.548 INFO  jdbc.sqltiming Line:373 - select nodefieldm0_.entity_id as entity_i1_17_0_, nodefieldm0_.bundle as bundle2_17_0_, nodefieldm0_.delta 
as delta3_17_0_, nodefieldm0_.langcode as langcode4_17_0_, nodefieldm0_.field_media_value as 
field_me5_17_0_, nodefieldm0_.revision_id as revision6_17_0_ from node_revision__field_media 
nodefieldm0_ where nodefieldm0_.entity_id=4 
 {executed in 3 msec}
2020-11-19 20:05:24.550 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------------|------------|
|entity_id |bundle |delta |langcode |field_media_value |revision_id |
|----------|-------|------|---------|------------------|------------|
|----------|-------|------|---------|------------------|------------|

2020-11-19 20:05:24.556 INFO  jdbc.sqltiming Line:373 - insert into node_revision__field_media (bundle, delta, langcode, field_media_value, revision_id, 
entity_id) values ('book', 0, 'zh-hans', '', 4, 4) 
 {executed in 1 msec}
2020-11-19 20:05:24.564 INFO  jdbc.sqltiming Line:373 - select bookfieldc0_.entity_id as entity_i1_5_, bookfieldc0_.bundle as bundle2_5_, bookfieldc0_.field_comment_value 
as field_co3_5_, bookfieldc0_.delta as delta4_5_, bookfieldc0_.field_comment_format as field_co5_5_, 
bookfieldc0_.langcode as langcode6_5_, bookfieldc0_.revision_id as revision7_5_ from node__field_comment 
bookfieldc0_ where bookfieldc0_.entity_id=4 
 {executed in 1 msec}
2020-11-19 20:05:24.566 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|--------------------|------|---------------------|---------|------------|
|entity_id |bundle |field_comment_value |delta |field_comment_format |langcode |revision_id |
|----------|-------|--------------------|------|---------------------|---------|------------|
|----------|-------|--------------------|------|---------------------|---------|------------|

2020-11-19 20:05:24.571 INFO  jdbc.sqltiming Line:373 - select bookfieldc0_.entity_id as entity_i1_5_0_, bookfieldc0_.bundle as bundle2_5_0_, bookfieldc0_.field_comment_value 
as field_co3_5_0_, bookfieldc0_.delta as delta4_5_0_, bookfieldc0_.field_comment_format as 
field_co5_5_0_, bookfieldc0_.langcode as langcode6_5_0_, bookfieldc0_.revision_id as revision7_5_0_ 
from node__field_comment bookfieldc0_ where bookfieldc0_.entity_id=4 
 {executed in 2 msec}
2020-11-19 20:05:24.573 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|--------------------|------|---------------------|---------|------------|
|entity_id |bundle |field_comment_value |delta |field_comment_format |langcode |revision_id |
|----------|-------|--------------------|------|---------------------|---------|------------|
|----------|-------|--------------------|------|---------------------|---------|------------|

2020-11-19 20:05:24.577 INFO  jdbc.sqltiming Line:373 - insert into node__field_comment (bundle, field_comment_value, delta, field_comment_format, 
langcode, revision_id, entity_id) values ('book', '', 0, 'full_html', 'zh-hans', 4, 4) 
 {executed in 1 msec}
2020-11-19 20:05:24.585 INFO  jdbc.sqltiming Line:373 - select nodefieldc0_.entity_id as entity_i1_14_0_, nodefieldc0_.bundle as bundle2_14_0_, nodefieldc0_.field_comment_value 
as field_co3_14_0_, nodefieldc0_.delta as delta4_14_0_, nodefieldc0_.field_comment_format as 
field_co5_14_0_, nodefieldc0_.langcode as langcode6_14_0_, nodefieldc0_.revision_id as revision7_14_0_ 
from node_revision__field_comment nodefieldc0_ where nodefieldc0_.entity_id=4 
 {executed in 2 msec}
2020-11-19 20:05:24.587 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|--------------------|------|---------------------|---------|------------|
|entity_id |bundle |field_comment_value |delta |field_comment_format |langcode |revision_id |
|----------|-------|--------------------|------|---------------------|---------|------------|
|----------|-------|--------------------|------|---------------------|---------|------------|

2020-11-19 20:05:24.594 INFO  jdbc.sqltiming Line:373 - insert into node_revision__field_comment (bundle, field_comment_value, delta, field_comment_format, 
langcode, revision_id, entity_id) values ('book', '', 0, 'full_html', 'zh-hans', 4, 4) 
 {executed in 3 msec}
2020-11-19 20:05:24.602 INFO  jdbc.sqltiming Line:373 - select bookfieldt0_.entity_id as entity_i1_9_, bookfieldt0_.bundle as bundle2_9_, bookfieldt0_.delta 
as delta3_9_, bookfieldt0_.langcode as langcode4_9_, bookfieldt0_.revision_id as revision5_9_, 
bookfieldt0_.field_thumb_value as field_th6_9_ from node__field_thumb bookfieldt0_ where bookfieldt0_.entity_id=4 
 {executed in 2 msec}
2020-11-19 20:05:24.604 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------|------------------|
|entity_id |bundle |delta |langcode |revision_id |field_thumb_value |
|----------|-------|------|---------|------------|------------------|
|----------|-------|------|---------|------------|------------------|

2020-11-19 20:05:24.608 INFO  jdbc.sqltiming Line:373 - select bookfieldt0_.entity_id as entity_i1_9_0_, bookfieldt0_.bundle as bundle2_9_0_, bookfieldt0_.delta 
as delta3_9_0_, bookfieldt0_.langcode as langcode4_9_0_, bookfieldt0_.revision_id as revision5_9_0_, 
bookfieldt0_.field_thumb_value as field_th6_9_0_ from node__field_thumb bookfieldt0_ where 
bookfieldt0_.entity_id=4 
 {executed in 1 msec}
2020-11-19 20:05:24.610 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------|------------------|
|entity_id |bundle |delta |langcode |revision_id |field_thumb_value |
|----------|-------|------|---------|------------|------------------|
|----------|-------|------|---------|------------|------------------|

2020-11-19 20:05:24.616 INFO  jdbc.sqltiming Line:373 - insert into node__field_thumb (bundle, delta, langcode, revision_id, field_thumb_value, entity_id) 
values ('book', 0, 'zh-hans', 4, '', 4) 
 {executed in 2 msec}
2020-11-19 20:05:24.624 INFO  jdbc.sqltiming Line:373 - select nodefieldt0_.entity_id as entity_i1_18_0_, nodefieldt0_.bundle as bundle2_18_0_, nodefieldt0_.delta 
as delta3_18_0_, nodefieldt0_.langcode as langcode4_18_0_, nodefieldt0_.revision_id as revision5_18_0_, 
nodefieldt0_.field_thumb_value as field_th6_18_0_ from node_revision__field_thumb nodefieldt0_ 
where nodefieldt0_.entity_id=4 
 {executed in 1 msec}
2020-11-19 20:05:24.626 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------|------------------|
|entity_id |bundle |delta |langcode |revision_id |field_thumb_value |
|----------|-------|------|---------|------------|------------------|
|----------|-------|------|---------|------------|------------------|

2020-11-19 20:05:24.631 INFO  jdbc.sqltiming Line:373 - insert into node_revision__field_thumb (bundle, delta, langcode, revision_id, field_thumb_value, 
entity_id) values ('book', 0, 'zh-hans', 4, '', 4) 
 {executed in 1 msec}
2020-11-19 20:05:24.641 INFO  jdbc.sqltiming Line:373 - select bookfieldf0_.entity_id as entity_i1_6_0_, bookfieldf0_.bundle as bundle2_6_0_, bookfieldf0_.delta 
as delta3_6_0_, bookfieldf0_.field_fenlei_target_id as field_fe4_6_0_, bookfieldf0_.langcode 
as langcode5_6_0_, bookfieldf0_.revision_id as revision6_6_0_ from node__field_fenlei bookfieldf0_ 
where bookfieldf0_.entity_id=4 
 {executed in 1 msec}
2020-11-19 20:05:24.642 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------------|---------|------------|
|entity_id |bundle |delta |field_fenlei_target_id |langcode |revision_id |
|----------|-------|------|-----------------------|---------|------------|
|----------|-------|------|-----------------------|---------|------------|

2020-11-19 20:05:24.649 INFO  jdbc.sqltiming Line:373 - insert into node__field_fenlei (bundle, delta, field_fenlei_target_id, langcode, revision_id, 
entity_id) values ('book', 0, 1, 'zh-hans', 4, 4) 
 {executed in 2 msec}
2020-11-19 20:05:24.659 INFO  jdbc.sqltiming Line:373 - select nodefieldf0_.entity_id as entity_i1_15_0_, nodefieldf0_.bundle as bundle2_15_0_, nodefieldf0_.delta 
as delta3_15_0_, nodefieldf0_.field_fenlei_target_id as field_fe4_15_0_, nodefieldf0_.langcode 
as langcode5_15_0_, nodefieldf0_.revision_id as revision6_15_0_ from node_revision__field_fenlei 
nodefieldf0_ where nodefieldf0_.entity_id=4 
 {executed in 2 msec}
2020-11-19 20:05:24.661 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------------|---------|------------|
|entity_id |bundle |delta |field_fenlei_target_id |langcode |revision_id |
|----------|-------|------|-----------------------|---------|------------|
|----------|-------|------|-----------------------|---------|------------|

2020-11-19 20:05:24.668 INFO  jdbc.sqltiming Line:373 - insert into node_revision__field_fenlei (bundle, delta, field_fenlei_target_id, langcode, revision_id, 
entity_id) values ('book', 0, 1, 'zh-hans', 4, 4) 
 {executed in 2 msec}
2020-11-19 20:05:25.729 INFO  jdbc.sqltiming Line:373 - select bookchecke0_.item_id as item_id1_2_, bookchecke0_.fsid as fsid2_2_, bookchecke0_.got 
as got3_2_, bookchecke0_.name as name4_2_ from book_check bookchecke0_ where bookchecke0_.fsid='1119313333033462' 
and bookchecke0_.name='net_content' 
 {executed in 1 msec}
2020-11-19 20:05:25.730 INFO  jdbc.resultsettable Line:610 - 
|--------|-----|----|-----|
|item_id |fsid |got |name |
|--------|-----|----|-----|
|--------|-----|----|-----|

2020-11-19 20:05:41.052 INFO  jdbc.sqltiming Line:373 - select bookchecke0_.item_id as item_id1_2_, bookchecke0_.fsid as fsid2_2_, bookchecke0_.got 
as got3_2_, bookchecke0_.name as name4_2_ from book_check bookchecke0_ where bookchecke0_.fsid='1119313333033462' 
and bookchecke0_.name='net_content' 
 {executed in 2 msec}
2020-11-19 20:05:41.055 INFO  jdbc.resultsettable Line:610 - 
|--------|-----|----|-----|
|item_id |fsid |got |name |
|--------|-----|----|-----|
|--------|-----|----|-----|

2020-11-19 20:05:41.063 INFO  jdbc.sqltiming Line:373 - insert into book_check (fsid, got, name) values ('1119313333033462', 1, 'net_content') 
 {executed in 3 msec}
2020-11-19 20:05:41.065 INFO  jdbc.sqltiming Line:373 - getGeneratedKeys on query: insert into book_check (fsid, got, name) values ('1119313333033462', 
1, 'net_content') 
 {executed in 0 msec}
2020-11-19 20:05:41.067 INFO  jdbc.resultsettable Line:610 - 
|--------------|
|generated_key |
|--------------|
|15            |
|--------------|

2020-11-19 20:05:41.077 INFO  jdbc.sqltiming Line:373 - select bookchecke0_.item_id as item_id1_2_, bookchecke0_.fsid as fsid2_2_, bookchecke0_.got 
as got3_2_, bookchecke0_.name as name4_2_ from book_check bookchecke0_ where bookchecke0_.fsid='1119313333033462' 
and bookchecke0_.name='media' 
 {executed in 1 msec}
2020-11-19 20:05:41.078 INFO  jdbc.resultsettable Line:610 - 
|--------|-----|----|-----|
|item_id |fsid |got |name |
|--------|-----|----|-----|
|--------|-----|----|-----|

2020-11-19 20:05:41.611 INFO  jdbc.sqltiming Line:373 - select bookchecke0_.item_id as item_id1_2_, bookchecke0_.fsid as fsid2_2_, bookchecke0_.got 
as got3_2_, bookchecke0_.name as name4_2_ from book_check bookchecke0_ where bookchecke0_.fsid='1119313333033462' 
and bookchecke0_.name='media' 
 {executed in 2 msec}
2020-11-19 20:05:41.613 INFO  jdbc.resultsettable Line:610 - 
|--------|-----|----|-----|
|item_id |fsid |got |name |
|--------|-----|----|-----|
|--------|-----|----|-----|

2020-11-19 20:05:41.622 INFO  jdbc.sqltiming Line:373 - insert into book_check (fsid, got, name) values ('1119313333033462', 1, 'media') 
 {executed in 2 msec}
2020-11-19 20:05:41.623 INFO  jdbc.sqltiming Line:373 - getGeneratedKeys on query: insert into book_check (fsid, got, name) values ('1119313333033462', 
1, 'media') 
 {executed in 0 msec}
2020-11-19 20:05:41.625 INFO  jdbc.resultsettable Line:610 - 
|--------------|
|generated_key |
|--------------|
|16            |
|--------------|

2020-11-19 20:05:41.635 INFO  jdbc.sqltiming Line:373 - select bookfieldf0_.entity_id as entity_i1_7_, bookfieldf0_.bundle as bundle2_7_, bookfieldf0_.delta 
as delta3_7_, bookfieldf0_.field_fsid_value as field_fs4_7_, bookfieldf0_.langcode as langcode5_7_, 
bookfieldf0_.revision_id as revision6_7_ from node__field_fsid bookfieldf0_ where bookfieldf0_.field_fsid_value='1119313333033462' 
 {executed in 1 msec}
2020-11-19 20:05:41.637 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------|---------|------------|
|entity_id |bundle |delta |field_fsid_value |langcode |revision_id |
|----------|-------|------|-----------------|---------|------------|
|----------|-------|------|-----------------|---------|------------|

2020-11-19 20:05:41.641 INFO  jdbc.sqltiming Line:373 - insert into node_revision (langcode, nid, revision_default, revision_timestamp, revision_uid) 
values ('zh-hans', 0, 1, 1605787541, 1) 
 {executed in 1 msec}
2020-11-19 20:05:41.642 INFO  jdbc.sqltiming Line:373 - getGeneratedKeys on query: insert into node_revision (langcode, nid, revision_default, revision_timestamp, 
revision_uid) values ('zh-hans', 0, 1, 1605787541, 1) 
 {executed in 0 msec}
2020-11-19 20:05:41.644 INFO  jdbc.resultsettable Line:610 - 
|--------------|
|generated_key |
|--------------|
|5             |
|--------------|

2020-11-19 20:05:41.652 INFO  jdbc.sqltiming Line:373 - insert into node (langcode, type, uuid, vid) values ('zh-hans', 'book', 'd99ffb5b-4f2e-4a29-8c94-9d869bfba146', 
5) 
 {executed in 0 msec}
2020-11-19 20:05:41.654 INFO  jdbc.sqltiming Line:373 - getGeneratedKeys on query: insert into node (langcode, type, uuid, vid) values ('zh-hans', 
'book', 'd99ffb5b-4f2e-4a29-8c94-9d869bfba146', 5) 
 {executed in 0 msec}
2020-11-19 20:05:41.655 INFO  jdbc.resultsettable Line:610 - 
|--------------|
|generated_key |
|--------------|
|5             |
|--------------|

2020-11-19 20:05:41.665 INFO  jdbc.sqltiming Line:373 - update node_revision set langcode='zh-hans', nid=5, revision_default=1, revision_timestamp=1605787541, 
revision_uid=1 where vid=5 
 {executed in 1 msec}
2020-11-19 20:05:41.674 INFO  jdbc.sqltiming Line:373 - select bookfieldf0_.entity_id as entity_i1_7_0_, bookfieldf0_.bundle as bundle2_7_0_, bookfieldf0_.delta 
as delta3_7_0_, bookfieldf0_.field_fsid_value as field_fs4_7_0_, bookfieldf0_.langcode as langcode5_7_0_, 
bookfieldf0_.revision_id as revision6_7_0_ from node__field_fsid bookfieldf0_ where bookfieldf0_.entity_id=5 
 {executed in 1 msec}
2020-11-19 20:05:41.676 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------|---------|------------|
|entity_id |bundle |delta |field_fsid_value |langcode |revision_id |
|----------|-------|------|-----------------|---------|------------|
|----------|-------|------|-----------------|---------|------------|

2020-11-19 20:05:41.680 INFO  jdbc.sqltiming Line:373 - insert into node__field_fsid (bundle, delta, field_fsid_value, langcode, revision_id, entity_id) 
values ('book', 0, '1119313333033462', 'zh-hans', 5, 5) 
 {executed in 1 msec}
2020-11-19 20:05:41.687 INFO  jdbc.sqltiming Line:373 - select nodefieldf0_.entity_id as entity_i1_16_0_, nodefieldf0_.bundle as bundle2_16_0_, nodefieldf0_.delta 
as delta3_16_0_, nodefieldf0_.field_fsid_value as field_fs4_16_0_, nodefieldf0_.langcode as 
langcode5_16_0_, nodefieldf0_.revision_id as revision6_16_0_ from node_revision__field_fsid 
nodefieldf0_ where nodefieldf0_.entity_id=5 
 {executed in 1 msec}
2020-11-19 20:05:41.689 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------|---------|------------|
|entity_id |bundle |delta |field_fsid_value |langcode |revision_id |
|----------|-------|------|-----------------|---------|------------|
|----------|-------|------|-----------------|---------|------------|

2020-11-19 20:05:41.694 INFO  jdbc.sqltiming Line:373 - insert into node_revision__field_fsid (bundle, delta, field_fsid_value, langcode, revision_id, 
entity_id) values ('book', 0, '1119313333033462', 'zh-hans', 5, 5) 
 {executed in 1 msec}
2020-11-19 20:05:41.701 INFO  jdbc.sqltiming Line:373 - select bookentity0_.nid as nid1_1_, bookentity0_.bid as bid2_1_, bookentity0_.depth as depth3_1_, 
bookentity0_.has_children as has_chil4_1_, bookentity0_.p1 as p5_1_, bookentity0_.p2 as p6_1_, 
bookentity0_.p3 as p7_1_, bookentity0_.p4 as p8_1_, bookentity0_.p5 as p9_1_, bookentity0_.pid 
as pid10_1_, bookentity0_.weight as weight11_1_ from book bookentity0_ where bookentity0_.nid=5 
 {executed in 1 msec}
2020-11-19 20:05:41.703 INFO  jdbc.resultsettable Line:610 - 
|----|----|------|-------------|---|---|---|---|---|----|-------|
|nid |bid |depth |has_children |p1 |p2 |p3 |p4 |p5 |pid |weight |
|----|----|------|-------------|---|---|---|---|---|----|-------|
|----|----|------|-------------|---|---|---|---|---|----|-------|

2020-11-19 20:05:41.707 INFO  jdbc.sqltiming Line:373 - select bookentity0_.nid as nid1_1_0_, bookentity0_.bid as bid2_1_0_, bookentity0_.depth as 
depth3_1_0_, bookentity0_.has_children as has_chil4_1_0_, bookentity0_.p1 as p5_1_0_, bookentity0_.p2 
as p6_1_0_, bookentity0_.p3 as p7_1_0_, bookentity0_.p4 as p8_1_0_, bookentity0_.p5 as p9_1_0_, 
bookentity0_.pid as pid10_1_0_, bookentity0_.weight as weight11_1_0_ from book bookentity0_ 
where bookentity0_.nid=5 
 {executed in 1 msec}
2020-11-19 20:05:41.709 INFO  jdbc.resultsettable Line:610 - 
|----|----|------|-------------|---|---|---|---|---|----|-------|
|nid |bid |depth |has_children |p1 |p2 |p3 |p4 |p5 |pid |weight |
|----|----|------|-------------|---|---|---|---|---|----|-------|
|----|----|------|-------------|---|---|---|---|---|----|-------|

2020-11-19 20:05:41.714 INFO  jdbc.sqltiming Line:373 - insert into book (bid, depth, has_children, p1, p2, p3, p4, p5, pid, weight, nid) values (1, 
3, 0, 1, 4, 5, 0, 0, 4, 0, 5) 
 {executed in 0 msec}
2020-11-19 20:05:41.721 INFO  jdbc.sqltiming Line:373 - select nodebodyen0_.entity_id as entity_i1_4_, nodebodyen0_.body_value as body_val2_4_, nodebodyen0_.body_summary 
as body_sum3_4_, nodebodyen0_.bundle as bundle4_4_, nodebodyen0_.delta as delta5_4_, nodebodyen0_.body_format 
as body_for6_4_, nodebodyen0_.langcode as langcode7_4_, nodebodyen0_.revision_id as revision8_4_ 
from node__body nodebodyen0_ where nodebodyen0_.entity_id=5 
 {executed in 1 msec}
2020-11-19 20:05:41.723 INFO  jdbc.resultsettable Line:610 - 
|----------|-----------|-------------|-------|------|------------|---------|------------|
|entity_id |body_value |body_summary |bundle |delta |body_format |langcode |revision_id |
|----------|-----------|-------------|-------|------|------------|---------|------------|
|----------|-----------|-------------|-------|------|------------|---------|------------|

2020-11-19 20:05:41.727 INFO  jdbc.sqltiming Line:373 - select nodebodyre0_.entity_id as entity_i1_13_0_, nodebodyre0_.body_value as body_val2_13_0_, 
nodebodyre0_.body_summary as body_sum3_13_0_, nodebodyre0_.bundle as bundle4_13_0_, nodebodyre0_.delta 
as delta5_13_0_, nodebodyre0_.body_format as body_for6_13_0_, nodebodyre0_.langcode as langcode7_13_0_, 
nodebodyre0_.revision_id as revision8_13_0_ from node_revision__body nodebodyre0_ where nodebodyre0_.entity_id=5 
 {executed in 1 msec}
2020-11-19 20:05:41.729 INFO  jdbc.resultsettable Line:610 - 
|----------|-----------|-------------|-------|------|------------|---------|------------|
|entity_id |body_value |body_summary |bundle |delta |body_format |langcode |revision_id |
|----------|-----------|-------------|-------|------|------------|---------|------------|
|----------|-----------|-------------|-------|------|------------|---------|------------|

2020-11-19 20:05:41.736 INFO  jdbc.sqltiming Line:373 - insert into node_revision__body (body_value, body_summary, bundle, delta, body_format, langcode, 
revision_id, entity_id) values ('<p>今天我们来聊聊 GraalVM 中的 Ahead-Of-Time（AOT）编译框架 SubstrateVM。</p> 
<p>先来介绍一下 AOT 编译，所谓 AOT 编译，是与即时编译相对立的一个概念。我们知道，即时编译指的是在程序的运行过程中，将字节码转换为可在硬件上直接运行的机器码，并部署至托管环境中的过程。</p> 
<p>而 AOT 编译指的则是，在<strong>程序运行之前</strong>，便将字节码转换为机器码的过程。它的成果可以是需要链接至托管环境中的动态共享库，也可以是独立运行的可执行文件。</p> 
<p>狭义的 AOT 编译针对的目标代码需要与即时编译的一致，也就是针对那些原本可以被即时编译的代码。不过，我们也可以简单地将 AOT 编译理解为类似于 GCC 的静态编译器。</p> 
<p>AOT 编译的优点显而易见：我们无须在运行过程中耗费 CPU 资源来进行即时编译，而程序也能够在启动伊始就达到理想的性能。</p> <p>然而，与即时编译相比，AOT 编译无法得知程序运行时的信息，因此也无法进行基于类层次分析的完全虚方法内联，或者基于程序 
profile 的投机性优化（并非硬性限制，我们可以通过限制运行范围，或者利用上一次运行的程序 profile 来绕开这两个限制）。这两者都会影响程序的峰值性能。</p> <p>Java 
9 引入了实验性 AOT 编译工具<a href="http://openjdk.java.net/jeps/295">jaotc</a>。它借助了 Graal 编译器，将所输入的 
Java 类文件转换为机器码，并存放至生成的动态共享库之中。</p><!-- [[[read_end]]] --> <p>在启动过程中，Java 虚拟机将加载参数<code>-XX:AOTLibrary</code>所指定的动态共享库，并部署其中的机器码。这些机器码的作用机理和即时编译生成的机器码作用机理一样，都是在方法调用时切入，并能够去优化至解释执行。</p> 
<p>由于 Java 虚拟机可能通过 Java agent 或者 C agent 改动所加载的字节码，或者这份 AOT 编译生成的机器码针对的是旧版本的 Java 类，因此它需要额外的验证机制，来保证即将链接的机器码的语义与对应的 
Java 类的语义是一致的。</p> <p>jaotc 使用的机制便是类指纹（class fingerprinting）。它会在动态共享库中保存被 AOT 编译的 Java 类的摘要信息。在运行过程中，Java 
虚拟机负责将该摘要信息与已加载的 Java 类相比较，一旦不匹配，则直接舍弃这份 AOT 编译的机器码。</p> <p>jaotc 的一大应用便是编译 java.base module，也就是 
Java 核心类库中最为基础的类。这些类很有可能会被应用程序所调用，但调用频率未必高到能够触发即时编译。</p> <p>因此，如果 Java 虚拟机能够使用 AOT 编译技术，将它们提前编译为机器码，那么将避免在执行即时编译生成的机器码时，因为“不小心”调用到这些基础类，而需要切换至解释执行的性能惩罚。</p> 
<p>不过，今天要介绍的主角并非 jaotc，而是同样使用了 Graal 编译器的 AOT 编译框架 SubstrateVM。</p> <h2>SubstrateVM 的设计与实现</h2> 
<p>SubstrateVM 的设计初衷是提供一个高启动性能、低内存开销，并且能够无缝衔接 C 代码的 Java 运行时。它与 jaotc 的区别主要有两处。</p> <p>第一，SubstrateVM 
脱离了 HotSpot 虚拟机，并拥有独立的运行时，包含异常处理，同步，线程管理，内存管理（垃圾回收）和 JNI 等组件。</p> <p>第二，SubstrateVM 要求目标程序是封闭的，即不能动态加载其他类库等。基于这个假设，SubstrateVM 
将探索整个编译空间，并通过静态分析推算出所有虚方法调用的目标方法。最终，SubstrateVM 会将所有可能执行到的方法都纳入编译范围之中，从而免于实现额外的解释执行器。</p> <blockquote> 
<p>有关 SubstrateVM 的其他限制，你可以参考<a href="https://github.com/oracle/graal/blob/master/substratevm/LIMITATIONS.md">这篇文档</a>。</p> 
</blockquote> <p>从执行时间上来划分，SubstrateVM 可分为两部分：native image generator 以及 SubstrateVM 运行时。后者 
SubstrateVM 运行时便是前面提到的精简运行时，经过 AOT 编译的目标程序将跑在该运行时之上。</p> <p>native image generator 则包含了真正的 
AOT 编译逻辑。它本身是一个 Java 程序，将使用 Graal 编译器将 Java 类文件编译为可执行文件或者动态链接库。</p> <p>在进行编译之前，native image 
generator 将采用指针分析（points-to analysis），从用户提供的程序入口出发，探索所有可达的代码。在探索的同时，它还将执行初始化代码，并在最终生成可执行文件时，将已初始化的堆保存至一个堆快照之中。这样一来，SubstrateVM 
将直接从目标程序开始运行，而无须重复进行 Java 虚拟机的初始化。</p> <p>SubstrateVM 主要用于 Java 虚拟机语言的 AOT 编译，例如 Java、Scala 
以及 Kotlin。Truffle 语言实现本质上就是 Java 程序，而且它所有用到的类都是编译时已知的，因此也适合在 SubstrateVM 上运行。不过，它并不会 AOT 编译用 
Truffle 语言写就的程序。</p> <h2>SubstrateVM 的启动时间与内存开销</h2> <p>SubstrateVM 的启动时间和内存开销非常少。我们曾比较过用 C 
和用 Java 两种语言写就的 Hello World 程序。C 程序的执行时间在 10ms 以下，内存开销在 500KB 以下。在 HotSpot 虚拟机上运行的 Java 程序则需要 
40ms，内存开销为 24MB。</p> <p>使用 SubstrateVM 的 Java 程序的执行时间则与 C 程序持平，内存开销在 850KB 左右。这得益于 SubstrateVM 
所保存的堆快照，以及无须额外初始化，直接执行目标代码的特性。</p> <p>同样，我们还比较了用 JavaScript 编写的 Hello World 程序。这里的测试对象是 Google 
的 V8 以及基于 Truffle 的 Graal.js。这两个执行引擎都涉及了大量的解析代码以及执行代码，因此可以当作大型应用程序来看待。</p> <p>V8 的执行效率非常高，能够与 
C 程序的 Hello World 相媲美，但是它使用了约 18MB 的内存。运行在 HotSpot 虚拟机上的 Graal.js 则需要 650ms 方能执行完这段 JavaScript 
的 Hello World 程序，而且内存开销在 120MB 左右。</p> <p>运行在 SubstrateVM 上的 Graal.js 无论是执行时间还是内存开销都十分优越，分别为 
10ms 以下以及 4.2MB。我们可以看到，它在运行时间与 V8 持平的情况下，内存开销远小于 V8。</p> <p>由于 SubstrateVM 的轻量特性，它十分适合于嵌入至其他系统之中。Oracle 
Labs 的另一个团队便是将 Truffle 语言实现嵌入至 Oracle 数据库之中，这样就可以在数据库中运行任意语言的预储程序（stored procedure）。如果你感兴趣的话，可以搜索 
Oracle Database Multilingual Engine（MLE），或者参阅这个<a href="https://www.oracle.com/technetwork/database/multilingual-engine/overview/index.html">网址</a>。我们团队也在与 
MySQL 合作，开发 MySQL MLE，详情可留意我们在今年 Oracle Code One 的<a href="https://oracle.rainfocus.com/widget/oracle/oow18/catalogcodeone18?search=MySQL%20JavaScript">讲座</a>。</p> 
<h2>Metropolis 项目</h2> <p>去年 OpenJDK 推出了<a href="http://openjdk.java.net/projects/metropolis/">Metropolis 
项目</a>，他们希望可以实现“Java-on-Java”的远大目标。</p> <p>我们知道，目前 HotSpot 虚拟机的绝大部分代码都是用 C++ 写的。这也造就了一个非常有趣的现象，那便是对 
Java 语言本身的贡献需要精通 C++。此外，随着 HotSpot 项目日渐庞大，维护难度也逐渐上升。</p> <p>由于上述种种原因，使用 Java 来开发 Java 虚拟机的呼声越来越高。Oracle 
的架构师 John Rose 便提出了使用 Java 开发 Java 虚拟机的四大好处：</p> <ol> <li>能够完全控制编译 Java 虚拟机时所使用的优化技术；</li> 
<li>能够与 C++ 语言的更新解耦合；</li> <li>能够减轻开发人员以及维护人员的负担；</li> <li>能够以更为敏捷的方式实现 Java 的新功能。</li> </ol> 
<p>当然，Metropolis 项目并非第一个提出 Java-on-Java 概念的项目。实际上，<a href="https://www.jikesrvm.org/">JikesRVM 
项目</a>和<a href="https://github.com/beehive-lab/Maxine-VM">Maxine VM 项目</a>都已用 Java 完整地实现了一套 
Java 虚拟机（后者的即时编译器 C1X 便是 Graal 编译器的前身）。</p> <p>然而，Java-on-Java 技术通常会干扰应用程序的垃圾回收、即时编译优化，从而严重影响 
Java 虚拟机的启动性能。</p> <p>举例来说，目前使用了 Graal 编译器的 HotSpot 虚拟机会在即时编译过程中生成大量的 Java 对象，这些 Java 对象同样会占据应用程序的堆空间，从而使得垃圾回收更加频繁。</p> 
<p>另外，Graal 编译器本身也会触发即时编译，并与应用程序的即时编译竞争编译线程的 CPU 资源。这将造成应用程序从解释执行切换至即时编译生成的机器码的时间大大地增长，从而降低应用程序的启动性能。</p> 
<p>Metropolis 项目的第一个子项目便是探索部署已 AOT 编译的 Graal 编译器的可能性。这个子项目将借助 SubstrateVM 技术，把整个 Graal 编译器 
AOT 编译为机器码。</p> <p>这样一来，在运行过程中，Graal 编译器不再需要被即时编译，因此也不会再占据可用于即时编译应用程序的 CPU 资源，使用 Graal 编译器的 
HotSpot 虚拟机的启动性能将得到大幅度地提升。</p> <p>此外，由于 SubstrateVM 编译得到的 Graal 编译器将使用独立的堆空间，因此 Graal 编译器在即时编译过程中生成的 
Java 对象将不再干扰应用程序所使用的堆空间。</p> <p>目前 Metropolis 项目仍处于前期验证阶段，如果你感兴趣的话，可以关注之后的发展情况。</p> <h2>总结与实践</h2> 
<p>今天我介绍了 GraalVM 中的 AOT 编译框架 SubstrateVM。</p> <p>SubstrateVM 的设计初衷是提供一个高启动性能、低内存开销，和能够无缝衔接 
C 代码的 Java 运行时。它是一个独立的运行时，拥有自己的内存管理等组件。</p> <p>SubstrateVM 要求所要 AOT 编译的目标程序是封闭的，即不能动态加载其他类库等。在进行 
AOT 编译时，它会探索所有可能运行到的方法，并全部纳入编译范围之内。</p> <p>SubstrateVM 的启动时间和内存开销都非常少，这主要得益于在 AOT 编译时便已保存了已初始化好的堆快照，并支持从程序入口直接开始运行。作为对比，HotSpot 
虚拟机在执行 main 方法前需要执行一系列的初始化操作，因此启动时间和内存开销都要远大于运行在 SubstrateVM 上的程序。</p> <p>Metropolis 项目将运用 
SubstrateVM 项目，逐步地将 HotSpot 虚拟机中的 C++ 代码替换成 Java 代码，从而提升 HotSpot 虚拟机的可维护性，也加快新 Java 功能的开发效率。</p> 
<hr> <p>今天的实践环节，请你参考我们官网的<a href="https://www.graalvm.org/docs/examples/java-kotlin-aot/">SubstrateVM 
教程</a>，AOT 编译一段 Java-Kotlin 代码。</p> <p><img src="https://static001.geekbang.org/resource/image/2a/d5/2a62e58cbdf56a5dc40748567d346fd5.jpg" 
alt=""></p>', '', 'book', 0, 'full_html', 'zh-hans', 5, 5) 
 {executed in 3 msec}
2020-11-19 20:05:41.745 INFO  jdbc.sqltiming Line:373 - select nodebodyen0_.entity_id as entity_i1_4_0_, nodebodyen0_.body_value as body_val2_4_0_, 
nodebodyen0_.body_summary as body_sum3_4_0_, nodebodyen0_.bundle as bundle4_4_0_, nodebodyen0_.delta 
as delta5_4_0_, nodebodyen0_.body_format as body_for6_4_0_, nodebodyen0_.langcode as langcode7_4_0_, 
nodebodyen0_.revision_id as revision8_4_0_ from node__body nodebodyen0_ where nodebodyen0_.entity_id=5 
 {executed in 1 msec}
2020-11-19 20:05:41.748 INFO  jdbc.resultsettable Line:610 - 
|----------|-----------|-------------|-------|------|------------|---------|------------|
|entity_id |body_value |body_summary |bundle |delta |body_format |langcode |revision_id |
|----------|-----------|-------------|-------|------|------------|---------|------------|
|----------|-----------|-------------|-------|------|------------|---------|------------|

2020-11-19 20:05:41.756 INFO  jdbc.sqltiming Line:373 - insert into node__body (body_value, body_summary, bundle, delta, body_format, langcode, revision_id, 
entity_id) values ('<p>今天我们来聊聊 GraalVM 中的 Ahead-Of-Time（AOT）编译框架 SubstrateVM。</p> <p>先来介绍一下 
AOT 编译，所谓 AOT 编译，是与即时编译相对立的一个概念。我们知道，即时编译指的是在程序的运行过程中，将字节码转换为可在硬件上直接运行的机器码，并部署至托管环境中的过程。</p> 
<p>而 AOT 编译指的则是，在<strong>程序运行之前</strong>，便将字节码转换为机器码的过程。它的成果可以是需要链接至托管环境中的动态共享库，也可以是独立运行的可执行文件。</p> 
<p>狭义的 AOT 编译针对的目标代码需要与即时编译的一致，也就是针对那些原本可以被即时编译的代码。不过，我们也可以简单地将 AOT 编译理解为类似于 GCC 的静态编译器。</p> 
<p>AOT 编译的优点显而易见：我们无须在运行过程中耗费 CPU 资源来进行即时编译，而程序也能够在启动伊始就达到理想的性能。</p> <p>然而，与即时编译相比，AOT 编译无法得知程序运行时的信息，因此也无法进行基于类层次分析的完全虚方法内联，或者基于程序 
profile 的投机性优化（并非硬性限制，我们可以通过限制运行范围，或者利用上一次运行的程序 profile 来绕开这两个限制）。这两者都会影响程序的峰值性能。</p> <p>Java 
9 引入了实验性 AOT 编译工具<a href="http://openjdk.java.net/jeps/295">jaotc</a>。它借助了 Graal 编译器，将所输入的 
Java 类文件转换为机器码，并存放至生成的动态共享库之中。</p><!-- [[[read_end]]] --> <p>在启动过程中，Java 虚拟机将加载参数<code>-XX:AOTLibrary</code>所指定的动态共享库，并部署其中的机器码。这些机器码的作用机理和即时编译生成的机器码作用机理一样，都是在方法调用时切入，并能够去优化至解释执行。</p> 
<p>由于 Java 虚拟机可能通过 Java agent 或者 C agent 改动所加载的字节码，或者这份 AOT 编译生成的机器码针对的是旧版本的 Java 类，因此它需要额外的验证机制，来保证即将链接的机器码的语义与对应的 
Java 类的语义是一致的。</p> <p>jaotc 使用的机制便是类指纹（class fingerprinting）。它会在动态共享库中保存被 AOT 编译的 Java 类的摘要信息。在运行过程中，Java 
虚拟机负责将该摘要信息与已加载的 Java 类相比较，一旦不匹配，则直接舍弃这份 AOT 编译的机器码。</p> <p>jaotc 的一大应用便是编译 java.base module，也就是 
Java 核心类库中最为基础的类。这些类很有可能会被应用程序所调用，但调用频率未必高到能够触发即时编译。</p> <p>因此，如果 Java 虚拟机能够使用 AOT 编译技术，将它们提前编译为机器码，那么将避免在执行即时编译生成的机器码时，因为“不小心”调用到这些基础类，而需要切换至解释执行的性能惩罚。</p> 
<p>不过，今天要介绍的主角并非 jaotc，而是同样使用了 Graal 编译器的 AOT 编译框架 SubstrateVM。</p> <h2>SubstrateVM 的设计与实现</h2> 
<p>SubstrateVM 的设计初衷是提供一个高启动性能、低内存开销，并且能够无缝衔接 C 代码的 Java 运行时。它与 jaotc 的区别主要有两处。</p> <p>第一，SubstrateVM 
脱离了 HotSpot 虚拟机，并拥有独立的运行时，包含异常处理，同步，线程管理，内存管理（垃圾回收）和 JNI 等组件。</p> <p>第二，SubstrateVM 要求目标程序是封闭的，即不能动态加载其他类库等。基于这个假设，SubstrateVM 
将探索整个编译空间，并通过静态分析推算出所有虚方法调用的目标方法。最终，SubstrateVM 会将所有可能执行到的方法都纳入编译范围之中，从而免于实现额外的解释执行器。</p> <blockquote> 
<p>有关 SubstrateVM 的其他限制，你可以参考<a href="https://github.com/oracle/graal/blob/master/substratevm/LIMITATIONS.md">这篇文档</a>。</p> 
</blockquote> <p>从执行时间上来划分，SubstrateVM 可分为两部分：native image generator 以及 SubstrateVM 运行时。后者 
SubstrateVM 运行时便是前面提到的精简运行时，经过 AOT 编译的目标程序将跑在该运行时之上。</p> <p>native image generator 则包含了真正的 
AOT 编译逻辑。它本身是一个 Java 程序，将使用 Graal 编译器将 Java 类文件编译为可执行文件或者动态链接库。</p> <p>在进行编译之前，native image 
generator 将采用指针分析（points-to analysis），从用户提供的程序入口出发，探索所有可达的代码。在探索的同时，它还将执行初始化代码，并在最终生成可执行文件时，将已初始化的堆保存至一个堆快照之中。这样一来，SubstrateVM 
将直接从目标程序开始运行，而无须重复进行 Java 虚拟机的初始化。</p> <p>SubstrateVM 主要用于 Java 虚拟机语言的 AOT 编译，例如 Java、Scala 
以及 Kotlin。Truffle 语言实现本质上就是 Java 程序，而且它所有用到的类都是编译时已知的，因此也适合在 SubstrateVM 上运行。不过，它并不会 AOT 编译用 
Truffle 语言写就的程序。</p> <h2>SubstrateVM 的启动时间与内存开销</h2> <p>SubstrateVM 的启动时间和内存开销非常少。我们曾比较过用 C 
和用 Java 两种语言写就的 Hello World 程序。C 程序的执行时间在 10ms 以下，内存开销在 500KB 以下。在 HotSpot 虚拟机上运行的 Java 程序则需要 
40ms，内存开销为 24MB。</p> <p>使用 SubstrateVM 的 Java 程序的执行时间则与 C 程序持平，内存开销在 850KB 左右。这得益于 SubstrateVM 
所保存的堆快照，以及无须额外初始化，直接执行目标代码的特性。</p> <p>同样，我们还比较了用 JavaScript 编写的 Hello World 程序。这里的测试对象是 Google 
的 V8 以及基于 Truffle 的 Graal.js。这两个执行引擎都涉及了大量的解析代码以及执行代码，因此可以当作大型应用程序来看待。</p> <p>V8 的执行效率非常高，能够与 
C 程序的 Hello World 相媲美，但是它使用了约 18MB 的内存。运行在 HotSpot 虚拟机上的 Graal.js 则需要 650ms 方能执行完这段 JavaScript 
的 Hello World 程序，而且内存开销在 120MB 左右。</p> <p>运行在 SubstrateVM 上的 Graal.js 无论是执行时间还是内存开销都十分优越，分别为 
10ms 以下以及 4.2MB。我们可以看到，它在运行时间与 V8 持平的情况下，内存开销远小于 V8。</p> <p>由于 SubstrateVM 的轻量特性，它十分适合于嵌入至其他系统之中。Oracle 
Labs 的另一个团队便是将 Truffle 语言实现嵌入至 Oracle 数据库之中，这样就可以在数据库中运行任意语言的预储程序（stored procedure）。如果你感兴趣的话，可以搜索 
Oracle Database Multilingual Engine（MLE），或者参阅这个<a href="https://www.oracle.com/technetwork/database/multilingual-engine/overview/index.html">网址</a>。我们团队也在与 
MySQL 合作，开发 MySQL MLE，详情可留意我们在今年 Oracle Code One 的<a href="https://oracle.rainfocus.com/widget/oracle/oow18/catalogcodeone18?search=MySQL%20JavaScript">讲座</a>。</p> 
<h2>Metropolis 项目</h2> <p>去年 OpenJDK 推出了<a href="http://openjdk.java.net/projects/metropolis/">Metropolis 
项目</a>，他们希望可以实现“Java-on-Java”的远大目标。</p> <p>我们知道，目前 HotSpot 虚拟机的绝大部分代码都是用 C++ 写的。这也造就了一个非常有趣的现象，那便是对 
Java 语言本身的贡献需要精通 C++。此外，随着 HotSpot 项目日渐庞大，维护难度也逐渐上升。</p> <p>由于上述种种原因，使用 Java 来开发 Java 虚拟机的呼声越来越高。Oracle 
的架构师 John Rose 便提出了使用 Java 开发 Java 虚拟机的四大好处：</p> <ol> <li>能够完全控制编译 Java 虚拟机时所使用的优化技术；</li> 
<li>能够与 C++ 语言的更新解耦合；</li> <li>能够减轻开发人员以及维护人员的负担；</li> <li>能够以更为敏捷的方式实现 Java 的新功能。</li> </ol> 
<p>当然，Metropolis 项目并非第一个提出 Java-on-Java 概念的项目。实际上，<a href="https://www.jikesrvm.org/">JikesRVM 
项目</a>和<a href="https://github.com/beehive-lab/Maxine-VM">Maxine VM 项目</a>都已用 Java 完整地实现了一套 
Java 虚拟机（后者的即时编译器 C1X 便是 Graal 编译器的前身）。</p> <p>然而，Java-on-Java 技术通常会干扰应用程序的垃圾回收、即时编译优化，从而严重影响 
Java 虚拟机的启动性能。</p> <p>举例来说，目前使用了 Graal 编译器的 HotSpot 虚拟机会在即时编译过程中生成大量的 Java 对象，这些 Java 对象同样会占据应用程序的堆空间，从而使得垃圾回收更加频繁。</p> 
<p>另外，Graal 编译器本身也会触发即时编译，并与应用程序的即时编译竞争编译线程的 CPU 资源。这将造成应用程序从解释执行切换至即时编译生成的机器码的时间大大地增长，从而降低应用程序的启动性能。</p> 
<p>Metropolis 项目的第一个子项目便是探索部署已 AOT 编译的 Graal 编译器的可能性。这个子项目将借助 SubstrateVM 技术，把整个 Graal 编译器 
AOT 编译为机器码。</p> <p>这样一来，在运行过程中，Graal 编译器不再需要被即时编译，因此也不会再占据可用于即时编译应用程序的 CPU 资源，使用 Graal 编译器的 
HotSpot 虚拟机的启动性能将得到大幅度地提升。</p> <p>此外，由于 SubstrateVM 编译得到的 Graal 编译器将使用独立的堆空间，因此 Graal 编译器在即时编译过程中生成的 
Java 对象将不再干扰应用程序所使用的堆空间。</p> <p>目前 Metropolis 项目仍处于前期验证阶段，如果你感兴趣的话，可以关注之后的发展情况。</p> <h2>总结与实践</h2> 
<p>今天我介绍了 GraalVM 中的 AOT 编译框架 SubstrateVM。</p> <p>SubstrateVM 的设计初衷是提供一个高启动性能、低内存开销，和能够无缝衔接 
C 代码的 Java 运行时。它是一个独立的运行时，拥有自己的内存管理等组件。</p> <p>SubstrateVM 要求所要 AOT 编译的目标程序是封闭的，即不能动态加载其他类库等。在进行 
AOT 编译时，它会探索所有可能运行到的方法，并全部纳入编译范围之内。</p> <p>SubstrateVM 的启动时间和内存开销都非常少，这主要得益于在 AOT 编译时便已保存了已初始化好的堆快照，并支持从程序入口直接开始运行。作为对比，HotSpot 
虚拟机在执行 main 方法前需要执行一系列的初始化操作，因此启动时间和内存开销都要远大于运行在 SubstrateVM 上的程序。</p> <p>Metropolis 项目将运用 
SubstrateVM 项目，逐步地将 HotSpot 虚拟机中的 C++ 代码替换成 Java 代码，从而提升 HotSpot 虚拟机的可维护性，也加快新 Java 功能的开发效率。</p> 
<hr> <p>今天的实践环节，请你参考我们官网的<a href="https://www.graalvm.org/docs/examples/java-kotlin-aot/">SubstrateVM 
教程</a>，AOT 编译一段 Java-Kotlin 代码。</p> <p><img src="https://static001.geekbang.org/resource/image/2a/d5/2a62e58cbdf56a5dc40748567d346fd5.jpg" 
alt=""></p>', '', 'book', 0, 'full_html', 'zh-hans', 5, 5) 
 {executed in 3 msec}
2020-11-19 20:05:41.766 INFO  jdbc.sqltiming Line:373 - select nodefiledd0_.nid as nid1_10_, nodefiledd0_.changed as changed2_10_, nodefiledd0_.created 
as created3_10_, nodefiledd0_.default_langcode as default_4_10_, nodefiledd0_.langcode as langcode5_10_, 
nodefiledd0_.promote as promote6_10_, nodefiledd0_.revision_translation_affected as revision7_10_, 
nodefiledd0_.status as status8_10_, nodefiledd0_.sticky as sticky9_10_, nodefiledd0_.title 
as title10_10_, nodefiledd0_.type as type11_10_, nodefiledd0_.uid as uid12_10_, nodefiledd0_.vid 
as vid13_10_ from node_field_data nodefiledd0_ where nodefiledd0_.nid=5 
 {executed in 2 msec}
2020-11-19 20:05:41.768 INFO  jdbc.resultsettable Line:610 - 
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|-----|----|----|
|nid |changed |created |default_langcode |langcode |promote |revision_translation_affected |status |sticky |title |type |uid |vid |
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|-----|----|----|
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|-----|----|----|

2020-11-19 20:05:41.773 INFO  jdbc.sqltiming Line:373 - select nodefieldr0_.nid as nid1_11_0_, nodefieldr0_.changed as changed2_11_0_, nodefieldr0_.created 
as created3_11_0_, nodefieldr0_.default_langcode as default_4_11_0_, nodefieldr0_.langcode 
as langcode5_11_0_, nodefieldr0_.promote as promote6_11_0_, nodefieldr0_.revision_translation_affected 
as revision7_11_0_, nodefieldr0_.status as status8_11_0_, nodefieldr0_.sticky as sticky9_11_0_, 
nodefieldr0_.title as title10_11_0_, nodefieldr0_.uid as uid11_11_0_, nodefieldr0_.vid as vid12_11_0_ 
from node_field_revision nodefieldr0_ where nodefieldr0_.nid=5 
 {executed in 1 msec}
2020-11-19 20:05:41.775 INFO  jdbc.resultsettable Line:610 - 
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|----|----|
|nid |changed |created |default_langcode |langcode |promote |revision_translation_affected |status |sticky |title |uid |vid |
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|----|----|
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|----|----|

2020-11-19 20:05:41.780 INFO  jdbc.sqltiming Line:373 - insert into node_field_revision (changed, created, default_langcode, langcode, promote, revision_translation_affected, 
status, sticky, title, uid, vid, nid) values (1605787541, 1605787541, 1, 'zh-hans', 0, 1, 1, 
0, '36丨SubstrateVM：AOT编译框架', 1, 5, 5) 
 {executed in 1 msec}
2020-11-19 20:05:41.791 INFO  jdbc.sqltiming Line:373 - select nodefiledd0_.nid as nid1_10_0_, nodefiledd0_.changed as changed2_10_0_, nodefiledd0_.created 
as created3_10_0_, nodefiledd0_.default_langcode as default_4_10_0_, nodefiledd0_.langcode 
as langcode5_10_0_, nodefiledd0_.promote as promote6_10_0_, nodefiledd0_.revision_translation_affected 
as revision7_10_0_, nodefiledd0_.status as status8_10_0_, nodefiledd0_.sticky as sticky9_10_0_, 
nodefiledd0_.title as title10_10_0_, nodefiledd0_.type as type11_10_0_, nodefiledd0_.uid as 
uid12_10_0_, nodefiledd0_.vid as vid13_10_0_ from node_field_data nodefiledd0_ where nodefiledd0_.nid=5 
 {executed in 4 msec}
2020-11-19 20:05:41.794 INFO  jdbc.resultsettable Line:610 - 
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|-----|----|----|
|nid |changed |created |default_langcode |langcode |promote |revision_translation_affected |status |sticky |title |type |uid |vid |
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|-----|----|----|
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|-----|----|----|

2020-11-19 20:05:41.800 INFO  jdbc.sqltiming Line:373 - insert into node_field_data (changed, created, default_langcode, langcode, promote, revision_translation_affected, 
status, sticky, title, type, uid, vid, nid) values (1605787541, 1605787541, 1, 'zh-hans', 0, 
1, 1, 0, '36丨SubstrateVM：AOT编译框架', 'book', 1, 5, 5) 
 {executed in 1 msec}
2020-11-19 20:05:41.812 INFO  jdbc.sqltiming Line:373 - select bookfieldm0_.entity_id as entity_i1_8_, bookfieldm0_.bundle as bundle2_8_, bookfieldm0_.delta 
as delta3_8_, bookfieldm0_.langcode as langcode4_8_, bookfieldm0_.field_media_value as field_me5_8_, 
bookfieldm0_.revision_id as revision6_8_ from node__field_media bookfieldm0_ where bookfieldm0_.entity_id=5 
 {executed in 2 msec}
2020-11-19 20:05:41.814 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------------|------------|
|entity_id |bundle |delta |langcode |field_media_value |revision_id |
|----------|-------|------|---------|------------------|------------|
|----------|-------|------|---------|------------------|------------|

2020-11-19 20:05:41.820 INFO  jdbc.sqltiming Line:373 - select bookfieldm0_.entity_id as entity_i1_8_0_, bookfieldm0_.bundle as bundle2_8_0_, bookfieldm0_.delta 
as delta3_8_0_, bookfieldm0_.langcode as langcode4_8_0_, bookfieldm0_.field_media_value as 
field_me5_8_0_, bookfieldm0_.revision_id as revision6_8_0_ from node__field_media bookfieldm0_ 
where bookfieldm0_.entity_id=5 
 {executed in 2 msec}
2020-11-19 20:05:41.822 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------------|------------|
|entity_id |bundle |delta |langcode |field_media_value |revision_id |
|----------|-------|------|---------|------------------|------------|
|----------|-------|------|---------|------------------|------------|

2020-11-19 20:05:41.828 INFO  jdbc.sqltiming Line:373 - insert into node__field_media (bundle, delta, langcode, field_media_value, revision_id, entity_id) 
values ('book', 0, 'zh-hans', 'https://qdall01.baidupcs.com/file/9f42cee0446706f96cdf239e71a2407b?bkt=en-cf7b18a7c51d907813cf8a2c6599a07c4fd277fbdce871e58fdfa15a778b97e6b499fb3b8b77d52a&fid=3757516097-778750-261639247403337&time=1605787540&sign=FDTAXUGERLQlBHSKfWqir-DCb740ccc5511e5e8fedcff06b081203-uzWQEOmhzh0h3xxtNS4a5OhvMHU%3D&to=92&size=5437928&sta_dx=5437928&sta_cs=4367&sta_ft=mp3&sta_ct=7&sta_mt=0&fm2=MH%2CQingdao%2CAnywhere%2C%2Cshanghai%2Ccnc&ctime=1567182979&mtime=1605787493&resv0=-1&resv1=0&resv2=rlim&resv3=2&resv4=5437928&vuk=3757516097&iv=0&htype=&randtype=em&newver=1&newfm=1&secfm=1&flow_ver=3&pkey=en-0e939c710a4b4f788b6e396c57d0fa3e2729517a3bff265d8433556ccb49d3c3b04999a9d28e4e4b&sl=76480590&expires=8h&rt=pr&r=968432333&mlogid=7510700528379585397&vbdid=64799653&fin=36%E4%B8%A8SubstrateVM%EF%BC%9AAOT%E7%BC%96%E8%AF%91%E6%A1%86%E6%9E%B6.mp3&bflag=92,34-92&rtype=1&dp-logid=7510700528379585397&dp-callid=0.1.1&hps=1&tsl=80&csl=80&fsl=-1&csign=yVzLQPCt4DblfMLqd2BCjd2RnqQ%3D&so=0&ut=6&uter=0&serv=0&uc=1458616558&ti=5f2aaa70d2fd14de067f3365502e664e88c2ed8863714189&hflag=30&adg=c_0f3c8fb981bae1fdae375754a6f1d609&reqlabel=778750_l_eeb31e180410b8be0e62f686c2b42c5d_-1_43d73532db4f9890a29565ef474ca519&ibp=1&by=themis&filename=36%E4%B8%A8SubstrateVM%EF%BC%9AAOT%E7%BC%96%E8%AF%91%E6%A1%86%E6%9E%B6.mp3', 
5, 5) 
 {executed in 2 msec}
2020-11-19 20:05:41.867 INFO  jdbc.sqltiming Line:373 - select nodefieldm0_.entity_id as entity_i1_17_0_, nodefieldm0_.bundle as bundle2_17_0_, nodefieldm0_.delta 
as delta3_17_0_, nodefieldm0_.langcode as langcode4_17_0_, nodefieldm0_.field_media_value as 
field_me5_17_0_, nodefieldm0_.revision_id as revision6_17_0_ from node_revision__field_media 
nodefieldm0_ where nodefieldm0_.entity_id=5 
 {executed in 2 msec}
2020-11-19 20:05:41.869 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------------|------------|
|entity_id |bundle |delta |langcode |field_media_value |revision_id |
|----------|-------|------|---------|------------------|------------|
|----------|-------|------|---------|------------------|------------|

2020-11-19 20:05:41.875 INFO  jdbc.sqltiming Line:373 - insert into node_revision__field_media (bundle, delta, langcode, field_media_value, revision_id, 
entity_id) values ('book', 0, 'zh-hans', 'https://qdall01.baidupcs.com/file/9f42cee0446706f96cdf239e71a2407b?bkt=en-cf7b18a7c51d907813cf8a2c6599a07c4fd277fbdce871e58fdfa15a778b97e6b499fb3b8b77d52a&fid=3757516097-778750-261639247403337&time=1605787540&sign=FDTAXUGERLQlBHSKfWqir-DCb740ccc5511e5e8fedcff06b081203-uzWQEOmhzh0h3xxtNS4a5OhvMHU%3D&to=92&size=5437928&sta_dx=5437928&sta_cs=4367&sta_ft=mp3&sta_ct=7&sta_mt=0&fm2=MH%2CQingdao%2CAnywhere%2C%2Cshanghai%2Ccnc&ctime=1567182979&mtime=1605787493&resv0=-1&resv1=0&resv2=rlim&resv3=2&resv4=5437928&vuk=3757516097&iv=0&htype=&randtype=em&newver=1&newfm=1&secfm=1&flow_ver=3&pkey=en-0e939c710a4b4f788b6e396c57d0fa3e2729517a3bff265d8433556ccb49d3c3b04999a9d28e4e4b&sl=76480590&expires=8h&rt=pr&r=968432333&mlogid=7510700528379585397&vbdid=64799653&fin=36%E4%B8%A8SubstrateVM%EF%BC%9AAOT%E7%BC%96%E8%AF%91%E6%A1%86%E6%9E%B6.mp3&bflag=92,34-92&rtype=1&dp-logid=7510700528379585397&dp-callid=0.1.1&hps=1&tsl=80&csl=80&fsl=-1&csign=yVzLQPCt4DblfMLqd2BCjd2RnqQ%3D&so=0&ut=6&uter=0&serv=0&uc=1458616558&ti=5f2aaa70d2fd14de067f3365502e664e88c2ed8863714189&hflag=30&adg=c_0f3c8fb981bae1fdae375754a6f1d609&reqlabel=778750_l_eeb31e180410b8be0e62f686c2b42c5d_-1_43d73532db4f9890a29565ef474ca519&ibp=1&by=themis&filename=36%E4%B8%A8SubstrateVM%EF%BC%9AAOT%E7%BC%96%E8%AF%91%E6%A1%86%E6%9E%B6.mp3', 
5, 5) 
 {executed in 2 msec}
2020-11-19 20:05:41.885 INFO  jdbc.sqltiming Line:373 - select bookfieldc0_.entity_id as entity_i1_5_, bookfieldc0_.bundle as bundle2_5_, bookfieldc0_.field_comment_value 
as field_co3_5_, bookfieldc0_.delta as delta4_5_, bookfieldc0_.field_comment_format as field_co5_5_, 
bookfieldc0_.langcode as langcode6_5_, bookfieldc0_.revision_id as revision7_5_ from node__field_comment 
bookfieldc0_ where bookfieldc0_.entity_id=5 
 {executed in 2 msec}
2020-11-19 20:05:41.887 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|--------------------|------|---------------------|---------|------------|
|entity_id |bundle |field_comment_value |delta |field_comment_format |langcode |revision_id |
|----------|-------|--------------------|------|---------------------|---------|------------|
|----------|-------|--------------------|------|---------------------|---------|------------|

2020-11-19 20:05:41.891 INFO  jdbc.sqltiming Line:373 - select bookfieldc0_.entity_id as entity_i1_5_0_, bookfieldc0_.bundle as bundle2_5_0_, bookfieldc0_.field_comment_value 
as field_co3_5_0_, bookfieldc0_.delta as delta4_5_0_, bookfieldc0_.field_comment_format as 
field_co5_5_0_, bookfieldc0_.langcode as langcode6_5_0_, bookfieldc0_.revision_id as revision7_5_0_ 
from node__field_comment bookfieldc0_ where bookfieldc0_.entity_id=5 
 {executed in 1 msec}
2020-11-19 20:05:41.894 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|--------------------|------|---------------------|---------|------------|
|entity_id |bundle |field_comment_value |delta |field_comment_format |langcode |revision_id |
|----------|-------|--------------------|------|---------------------|---------|------------|
|----------|-------|--------------------|------|---------------------|---------|------------|

2020-11-19 20:05:41.903 INFO  jdbc.sqltiming Line:373 - insert into node__field_comment (bundle, field_comment_value, delta, field_comment_format, 
langcode, revision_id, entity_id) values ('book', '<li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/11/f9/98/f11c9b8b.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>侯金彪</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2018-10-12 </div> </div> <div class="_2eMTs2JE_0"> 
<div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class="">5</span> </div> <!----> 
<!----> </div> </div> <div class="_3M6kV3zb_0"> 老师好，写了这么多期，老师辛苦了！老师能否多写一些关于jvm性能优化调优，或者开发中常见的坑呢？太深奥的内容对一线开发来说好遥远 
</div> <div class="_2r3UB1GX_0"> <span>展开</span><i class="iconfont"></i> </div> <div class="_2xNIY4NG_0"> 
<p class="_33BLbmw4_0">作者回复: 嗯嗯，等我歇一段时间哈，这连续这么多期写得太累了。</p> </div> </div></li> <li class="reJj6Thl_0"><img 
src="https://static001.geekbang.org/account/avatar/00/13/29/b6/37ad78e0.jpg" class="_2273kGdT_0"> 
<div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> <span>dyangx</span> 
<!----> </div> <div class="_1H1Z49Dr_0"> 2018-10-21 </div> </div> <div class="_2eMTs2JE_0"> 
<div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class="">2</span> </div> <!----> 
<!----> </div> </div> <div class="_3M6kV3zb_0"> 今后有可能java 11会收费吗 </div> <div class="_2r3UB1GX_0"> 
<span>展开</span><i class="iconfont"></i> </div> <!----> </div></li> <li class="reJj6Thl_0"><img 
src="https://static001.geekbang.org/account/avatar/00/12/bf/10/b7974690.jpg" class="_2273kGdT_0"> 
<div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> <span>BD</span> 
<!----> </div> <div class="_1H1Z49Dr_0"> 2019-01-23 </div> </div> <div class="_2eMTs2JE_0"> 
<div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class=""></span> </div> <!----> <!----> 
</div> </div> <div class="_3M6kV3zb_0 _3D2NkqD6_0"> 在Java开源框架源码里经常看到一种写法，object a=new object; 
object b=a; 接下来直接操作b。我想问这里为什么不直接操作a非要“多此一举”的赋值给b再操作b呢 </div> <!----> <!----> </div></li> <li 
class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/12/09/7e/11cf22de.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>横云断岭</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2018-10-16 </div> </div> <div class="_2eMTs2JE_0"> 
<div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class=""></span> </div> <!----> <!----> 
</div> </div> <div class="_3M6kV3zb_0 _3D2NkqD6_0"> 请问SubstrateVM怎样调试？因为传统的java排查工具都失效了。使用方更加关注的是易用性。 
</div> <!----> <div class="_2xNIY4NG_0"> <p class="_33BLbmw4_0">作者回复: 对于能够被SVM编译的(也就是不包含动态类加载等)Java应用程序而言，原则上SVM和HotSpot 
VM应该是等价的，能在HS跑就应该能在SVM上跑，否则就是SVM的bug了。<br><br>如果想要调试SVM本身或者SVM编译的Java应用的话，只能上GDB了。如果是SVM编译的Truffle语言的话，我们在Truffle语言层面实现了Chrome 
DevTools Protocal，可以直接用Chrome调试。</p> </div> </div></li> <li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/10/0b/0a/fa152399.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>wahaha</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2018-10-13 </div> </div> <div 
class="_2eMTs2JE_0"> <div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class=""></span> 
</div> <!----> <!----> </div> </div> <div class="_3M6kV3zb_0 _3D2NkqD6_0"> 老师，SubstrateVM以后会支持32位的X86和ARM处理器吗？ 
</div> <!----> <div class="_2xNIY4NG_0"> <p class="_33BLbmw4_0">作者回复: 32位X86暂时没计划，ARM应该会有，取决于RedHat以及我们负责Aarch64的工程师的效率。</p> 
</div> </div></li>', 0, 'full_html', 'zh-hans', 5, 5) 
 {executed in 3 msec}
2020-11-19 20:05:41.917 INFO  jdbc.sqltiming Line:373 - select nodefieldc0_.entity_id as entity_i1_14_0_, nodefieldc0_.bundle as bundle2_14_0_, nodefieldc0_.field_comment_value 
as field_co3_14_0_, nodefieldc0_.delta as delta4_14_0_, nodefieldc0_.field_comment_format as 
field_co5_14_0_, nodefieldc0_.langcode as langcode6_14_0_, nodefieldc0_.revision_id as revision7_14_0_ 
from node_revision__field_comment nodefieldc0_ where nodefieldc0_.entity_id=5 
 {executed in 2 msec}
2020-11-19 20:05:41.919 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|--------------------|------|---------------------|---------|------------|
|entity_id |bundle |field_comment_value |delta |field_comment_format |langcode |revision_id |
|----------|-------|--------------------|------|---------------------|---------|------------|
|----------|-------|--------------------|------|---------------------|---------|------------|

2020-11-19 20:05:41.926 INFO  jdbc.sqltiming Line:373 - insert into node_revision__field_comment (bundle, field_comment_value, delta, field_comment_format, 
langcode, revision_id, entity_id) values ('book', '<li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/11/f9/98/f11c9b8b.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>侯金彪</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2018-10-12 </div> </div> <div class="_2eMTs2JE_0"> 
<div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class="">5</span> </div> <!----> 
<!----> </div> </div> <div class="_3M6kV3zb_0"> 老师好，写了这么多期，老师辛苦了！老师能否多写一些关于jvm性能优化调优，或者开发中常见的坑呢？太深奥的内容对一线开发来说好遥远 
</div> <div class="_2r3UB1GX_0"> <span>展开</span><i class="iconfont"></i> </div> <div class="_2xNIY4NG_0"> 
<p class="_33BLbmw4_0">作者回复: 嗯嗯，等我歇一段时间哈，这连续这么多期写得太累了。</p> </div> </div></li> <li class="reJj6Thl_0"><img 
src="https://static001.geekbang.org/account/avatar/00/13/29/b6/37ad78e0.jpg" class="_2273kGdT_0"> 
<div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> <span>dyangx</span> 
<!----> </div> <div class="_1H1Z49Dr_0"> 2018-10-21 </div> </div> <div class="_2eMTs2JE_0"> 
<div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class="">2</span> </div> <!----> 
<!----> </div> </div> <div class="_3M6kV3zb_0"> 今后有可能java 11会收费吗 </div> <div class="_2r3UB1GX_0"> 
<span>展开</span><i class="iconfont"></i> </div> <!----> </div></li> <li class="reJj6Thl_0"><img 
src="https://static001.geekbang.org/account/avatar/00/12/bf/10/b7974690.jpg" class="_2273kGdT_0"> 
<div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> <span>BD</span> 
<!----> </div> <div class="_1H1Z49Dr_0"> 2019-01-23 </div> </div> <div class="_2eMTs2JE_0"> 
<div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class=""></span> </div> <!----> <!----> 
</div> </div> <div class="_3M6kV3zb_0 _3D2NkqD6_0"> 在Java开源框架源码里经常看到一种写法，object a=new object; 
object b=a; 接下来直接操作b。我想问这里为什么不直接操作a非要“多此一举”的赋值给b再操作b呢 </div> <!----> <!----> </div></li> <li 
class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/12/09/7e/11cf22de.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>横云断岭</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2018-10-16 </div> </div> <div class="_2eMTs2JE_0"> 
<div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class=""></span> </div> <!----> <!----> 
</div> </div> <div class="_3M6kV3zb_0 _3D2NkqD6_0"> 请问SubstrateVM怎样调试？因为传统的java排查工具都失效了。使用方更加关注的是易用性。 
</div> <!----> <div class="_2xNIY4NG_0"> <p class="_33BLbmw4_0">作者回复: 对于能够被SVM编译的(也就是不包含动态类加载等)Java应用程序而言，原则上SVM和HotSpot 
VM应该是等价的，能在HS跑就应该能在SVM上跑，否则就是SVM的bug了。<br><br>如果想要调试SVM本身或者SVM编译的Java应用的话，只能上GDB了。如果是SVM编译的Truffle语言的话，我们在Truffle语言层面实现了Chrome 
DevTools Protocal，可以直接用Chrome调试。</p> </div> </div></li> <li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/10/0b/0a/fa152399.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>wahaha</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2018-10-13 </div> </div> <div 
class="_2eMTs2JE_0"> <div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class=""></span> 
</div> <!----> <!----> </div> </div> <div class="_3M6kV3zb_0 _3D2NkqD6_0"> 老师，SubstrateVM以后会支持32位的X86和ARM处理器吗？ 
</div> <!----> <div class="_2xNIY4NG_0"> <p class="_33BLbmw4_0">作者回复: 32位X86暂时没计划，ARM应该会有，取决于RedHat以及我们负责Aarch64的工程师的效率。</p> 
</div> </div></li>', 0, 'full_html', 'zh-hans', 5, 5) 
 {executed in 1 msec}
2020-11-19 20:05:41.937 INFO  jdbc.sqltiming Line:373 - select bookfieldt0_.entity_id as entity_i1_9_, bookfieldt0_.bundle as bundle2_9_, bookfieldt0_.delta 
as delta3_9_, bookfieldt0_.langcode as langcode4_9_, bookfieldt0_.revision_id as revision5_9_, 
bookfieldt0_.field_thumb_value as field_th6_9_ from node__field_thumb bookfieldt0_ where bookfieldt0_.entity_id=5 
 {executed in 1 msec}
2020-11-19 20:05:41.939 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------|------------------|
|entity_id |bundle |delta |langcode |revision_id |field_thumb_value |
|----------|-------|------|---------|------------|------------------|
|----------|-------|------|---------|------------|------------------|

2020-11-19 20:05:41.942 INFO  jdbc.sqltiming Line:373 - select bookfieldt0_.entity_id as entity_i1_9_0_, bookfieldt0_.bundle as bundle2_9_0_, bookfieldt0_.delta 
as delta3_9_0_, bookfieldt0_.langcode as langcode4_9_0_, bookfieldt0_.revision_id as revision5_9_0_, 
bookfieldt0_.field_thumb_value as field_th6_9_0_ from node__field_thumb bookfieldt0_ where 
bookfieldt0_.entity_id=5 
 {executed in 1 msec}
2020-11-19 20:05:41.944 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------|------------------|
|entity_id |bundle |delta |langcode |revision_id |field_thumb_value |
|----------|-------|------|---------|------------|------------------|
|----------|-------|------|---------|------------|------------------|

2020-11-19 20:05:41.949 INFO  jdbc.sqltiming Line:373 - insert into node__field_thumb (bundle, delta, langcode, revision_id, field_thumb_value, entity_id) 
values ('book', 0, 'zh-hans', 5, 'https://static001.geekbang.org/resource/image/10/d3/10172e007401593a5f449703918188d3.jpg', 
5) 
 {executed in 1 msec}
2020-11-19 20:05:41.957 INFO  jdbc.sqltiming Line:373 - select nodefieldt0_.entity_id as entity_i1_18_0_, nodefieldt0_.bundle as bundle2_18_0_, nodefieldt0_.delta 
as delta3_18_0_, nodefieldt0_.langcode as langcode4_18_0_, nodefieldt0_.revision_id as revision5_18_0_, 
nodefieldt0_.field_thumb_value as field_th6_18_0_ from node_revision__field_thumb nodefieldt0_ 
where nodefieldt0_.entity_id=5 
 {executed in 1 msec}
2020-11-19 20:05:41.959 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------|------------------|
|entity_id |bundle |delta |langcode |revision_id |field_thumb_value |
|----------|-------|------|---------|------------|------------------|
|----------|-------|------|---------|------------|------------------|

2020-11-19 20:05:41.963 INFO  jdbc.sqltiming Line:373 - insert into node_revision__field_thumb (bundle, delta, langcode, revision_id, field_thumb_value, 
entity_id) values ('book', 0, 'zh-hans', 5, 'https://static001.geekbang.org/resource/image/10/d3/10172e007401593a5f449703918188d3.jpg', 
5) 
 {executed in 0 msec}
2020-11-19 20:05:41.971 INFO  jdbc.sqltiming Line:373 - select bookfieldf0_.entity_id as entity_i1_6_0_, bookfieldf0_.bundle as bundle2_6_0_, bookfieldf0_.delta 
as delta3_6_0_, bookfieldf0_.field_fenlei_target_id as field_fe4_6_0_, bookfieldf0_.langcode 
as langcode5_6_0_, bookfieldf0_.revision_id as revision6_6_0_ from node__field_fenlei bookfieldf0_ 
where bookfieldf0_.entity_id=5 
 {executed in 1 msec}
2020-11-19 20:05:41.973 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------------|---------|------------|
|entity_id |bundle |delta |field_fenlei_target_id |langcode |revision_id |
|----------|-------|------|-----------------------|---------|------------|
|----------|-------|------|-----------------------|---------|------------|

2020-11-19 20:05:41.977 INFO  jdbc.sqltiming Line:373 - insert into node__field_fenlei (bundle, delta, field_fenlei_target_id, langcode, revision_id, 
entity_id) values ('book', 0, 1, 'zh-hans', 5, 5) 
 {executed in 1 msec}
2020-11-19 20:05:41.986 INFO  jdbc.sqltiming Line:373 - select nodefieldf0_.entity_id as entity_i1_15_0_, nodefieldf0_.bundle as bundle2_15_0_, nodefieldf0_.delta 
as delta3_15_0_, nodefieldf0_.field_fenlei_target_id as field_fe4_15_0_, nodefieldf0_.langcode 
as langcode5_15_0_, nodefieldf0_.revision_id as revision6_15_0_ from node_revision__field_fenlei 
nodefieldf0_ where nodefieldf0_.entity_id=5 
 {executed in 2 msec}
2020-11-19 20:05:41.987 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------------|---------|------------|
|entity_id |bundle |delta |field_fenlei_target_id |langcode |revision_id |
|----------|-------|------|-----------------------|---------|------------|
|----------|-------|------|-----------------------|---------|------------|

2020-11-19 20:05:41.993 INFO  jdbc.sqltiming Line:373 - insert into node_revision__field_fenlei (bundle, delta, field_fenlei_target_id, langcode, revision_id, 
entity_id) values ('book', 0, 1, 'zh-hans', 5, 5) 
 {executed in 0 msec}
2020-11-19 20:05:42.000 INFO  jdbc.sqltiming Line:373 - select bookchecke0_.item_id as item_id1_2_, bookchecke0_.fsid as fsid2_2_, bookchecke0_.got 
as got3_2_, bookchecke0_.name as name4_2_ from book_check bookchecke0_ where bookchecke0_.fsid='672450224961437' 
and bookchecke0_.name='net_content' 
 {executed in 2 msec}
2020-11-19 20:05:42.001 INFO  jdbc.resultsettable Line:610 - 
|--------|-----|----|-----|
|item_id |fsid |got |name |
|--------|-----|----|-----|
|--------|-----|----|-----|

2020-11-19 20:06:03.897 INFO  jdbc.sqltiming Line:373 - select bookchecke0_.item_id as item_id1_2_, bookchecke0_.fsid as fsid2_2_, bookchecke0_.got 
as got3_2_, bookchecke0_.name as name4_2_ from book_check bookchecke0_ where bookchecke0_.fsid='672450224961437' 
and bookchecke0_.name='net_content' 
 {executed in 2 msec}
2020-11-19 20:06:03.898 INFO  jdbc.resultsettable Line:610 - 
|--------|-----|----|-----|
|item_id |fsid |got |name |
|--------|-----|----|-----|
|--------|-----|----|-----|

2020-11-19 20:06:03.903 INFO  jdbc.sqltiming Line:373 - insert into book_check (fsid, got, name) values ('672450224961437', 1, 'net_content') 
 {executed in 0 msec}
2020-11-19 20:06:03.904 INFO  jdbc.sqltiming Line:373 - getGeneratedKeys on query: insert into book_check (fsid, got, name) values ('672450224961437', 
1, 'net_content') 
 {executed in 0 msec}
2020-11-19 20:06:03.905 INFO  jdbc.resultsettable Line:610 - 
|--------------|
|generated_key |
|--------------|
|17            |
|--------------|

2020-11-19 20:06:03.916 INFO  jdbc.sqltiming Line:373 - select bookchecke0_.item_id as item_id1_2_, bookchecke0_.fsid as fsid2_2_, bookchecke0_.got 
as got3_2_, bookchecke0_.name as name4_2_ from book_check bookchecke0_ where bookchecke0_.fsid='672450224961437' 
and bookchecke0_.name='media' 
 {executed in 1 msec}
2020-11-19 20:06:03.917 INFO  jdbc.resultsettable Line:610 - 
|--------|-----|----|-----|
|item_id |fsid |got |name |
|--------|-----|----|-----|
|--------|-----|----|-----|

2020-11-19 20:06:04.310 INFO  jdbc.sqltiming Line:373 - select bookchecke0_.item_id as item_id1_2_, bookchecke0_.fsid as fsid2_2_, bookchecke0_.got 
as got3_2_, bookchecke0_.name as name4_2_ from book_check bookchecke0_ where bookchecke0_.fsid='672450224961437' 
and bookchecke0_.name='media' 
 {executed in 1 msec}
2020-11-19 20:06:04.312 INFO  jdbc.resultsettable Line:610 - 
|--------|-----|----|-----|
|item_id |fsid |got |name |
|--------|-----|----|-----|
|--------|-----|----|-----|

2020-11-19 20:06:04.316 INFO  jdbc.sqltiming Line:373 - insert into book_check (fsid, got, name) values ('672450224961437', 1, 'media') 
 {executed in 0 msec}
2020-11-19 20:06:04.318 INFO  jdbc.sqltiming Line:373 - getGeneratedKeys on query: insert into book_check (fsid, got, name) values ('672450224961437', 
1, 'media') 
 {executed in 0 msec}
2020-11-19 20:06:04.320 INFO  jdbc.resultsettable Line:610 - 
|--------------|
|generated_key |
|--------------|
|18            |
|--------------|

2020-11-19 20:06:04.331 INFO  jdbc.sqltiming Line:373 - select bookfieldf0_.entity_id as entity_i1_7_, bookfieldf0_.bundle as bundle2_7_, bookfieldf0_.delta 
as delta3_7_, bookfieldf0_.field_fsid_value as field_fs4_7_, bookfieldf0_.langcode as langcode5_7_, 
bookfieldf0_.revision_id as revision6_7_ from node__field_fsid bookfieldf0_ where bookfieldf0_.field_fsid_value='672450224961437' 
 {executed in 2 msec}
2020-11-19 20:06:04.332 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------|---------|------------|
|entity_id |bundle |delta |field_fsid_value |langcode |revision_id |
|----------|-------|------|-----------------|---------|------------|
|----------|-------|------|-----------------|---------|------------|

2020-11-19 20:06:04.336 INFO  jdbc.sqltiming Line:373 - insert into node_revision (langcode, nid, revision_default, revision_timestamp, revision_uid) 
values ('zh-hans', 0, 1, 1605787564, 1) 
 {executed in 1 msec}
2020-11-19 20:06:04.337 INFO  jdbc.sqltiming Line:373 - getGeneratedKeys on query: insert into node_revision (langcode, nid, revision_default, revision_timestamp, 
revision_uid) values ('zh-hans', 0, 1, 1605787564, 1) 
 {executed in 0 msec}
2020-11-19 20:06:04.338 INFO  jdbc.resultsettable Line:610 - 
|--------------|
|generated_key |
|--------------|
|6             |
|--------------|

2020-11-19 20:06:04.348 INFO  jdbc.sqltiming Line:373 - insert into node (langcode, type, uuid, vid) values ('zh-hans', 'book', 'c98054c5-5749-4006-9147-cd810ca76aa6', 
6) 
 {executed in 1 msec}
2020-11-19 20:06:04.349 INFO  jdbc.sqltiming Line:373 - getGeneratedKeys on query: insert into node (langcode, type, uuid, vid) values ('zh-hans', 
'book', 'c98054c5-5749-4006-9147-cd810ca76aa6', 6) 
 {executed in 0 msec}
2020-11-19 20:06:04.351 INFO  jdbc.resultsettable Line:610 - 
|--------------|
|generated_key |
|--------------|
|6             |
|--------------|

2020-11-19 20:06:04.360 INFO  jdbc.sqltiming Line:373 - update node_revision set langcode='zh-hans', nid=6, revision_default=1, revision_timestamp=1605787564, 
revision_uid=1 where vid=6 
 {executed in 1 msec}
2020-11-19 20:06:04.369 INFO  jdbc.sqltiming Line:373 - select bookfieldf0_.entity_id as entity_i1_7_0_, bookfieldf0_.bundle as bundle2_7_0_, bookfieldf0_.delta 
as delta3_7_0_, bookfieldf0_.field_fsid_value as field_fs4_7_0_, bookfieldf0_.langcode as langcode5_7_0_, 
bookfieldf0_.revision_id as revision6_7_0_ from node__field_fsid bookfieldf0_ where bookfieldf0_.entity_id=6 
 {executed in 1 msec}
2020-11-19 20:06:04.370 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------|---------|------------|
|entity_id |bundle |delta |field_fsid_value |langcode |revision_id |
|----------|-------|------|-----------------|---------|------------|
|----------|-------|------|-----------------|---------|------------|

2020-11-19 20:06:04.375 INFO  jdbc.sqltiming Line:373 - insert into node__field_fsid (bundle, delta, field_fsid_value, langcode, revision_id, entity_id) 
values ('book', 0, '672450224961437', 'zh-hans', 6, 6) 
 {executed in 1 msec}
2020-11-19 20:06:04.384 INFO  jdbc.sqltiming Line:373 - select nodefieldf0_.entity_id as entity_i1_16_0_, nodefieldf0_.bundle as bundle2_16_0_, nodefieldf0_.delta 
as delta3_16_0_, nodefieldf0_.field_fsid_value as field_fs4_16_0_, nodefieldf0_.langcode as 
langcode5_16_0_, nodefieldf0_.revision_id as revision6_16_0_ from node_revision__field_fsid 
nodefieldf0_ where nodefieldf0_.entity_id=6 
 {executed in 2 msec}
2020-11-19 20:06:04.386 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------|---------|------------|
|entity_id |bundle |delta |field_fsid_value |langcode |revision_id |
|----------|-------|------|-----------------|---------|------------|
|----------|-------|------|-----------------|---------|------------|

2020-11-19 20:06:04.390 INFO  jdbc.sqltiming Line:373 - insert into node_revision__field_fsid (bundle, delta, field_fsid_value, langcode, revision_id, 
entity_id) values ('book', 0, '672450224961437', 'zh-hans', 6, 6) 
 {executed in 1 msec}
2020-11-19 20:06:04.397 INFO  jdbc.sqltiming Line:373 - select bookentity0_.nid as nid1_1_, bookentity0_.bid as bid2_1_, bookentity0_.depth as depth3_1_, 
bookentity0_.has_children as has_chil4_1_, bookentity0_.p1 as p5_1_, bookentity0_.p2 as p6_1_, 
bookentity0_.p3 as p7_1_, bookentity0_.p4 as p8_1_, bookentity0_.p5 as p9_1_, bookentity0_.pid 
as pid10_1_, bookentity0_.weight as weight11_1_ from book bookentity0_ where bookentity0_.nid=6 
 {executed in 1 msec}
2020-11-19 20:06:04.399 INFO  jdbc.resultsettable Line:610 - 
|----|----|------|-------------|---|---|---|---|---|----|-------|
|nid |bid |depth |has_children |p1 |p2 |p3 |p4 |p5 |pid |weight |
|----|----|------|-------------|---|---|---|---|---|----|-------|
|----|----|------|-------------|---|---|---|---|---|----|-------|

2020-11-19 20:06:04.403 INFO  jdbc.sqltiming Line:373 - select bookentity0_.nid as nid1_1_0_, bookentity0_.bid as bid2_1_0_, bookentity0_.depth as 
depth3_1_0_, bookentity0_.has_children as has_chil4_1_0_, bookentity0_.p1 as p5_1_0_, bookentity0_.p2 
as p6_1_0_, bookentity0_.p3 as p7_1_0_, bookentity0_.p4 as p8_1_0_, bookentity0_.p5 as p9_1_0_, 
bookentity0_.pid as pid10_1_0_, bookentity0_.weight as weight11_1_0_ from book bookentity0_ 
where bookentity0_.nid=6 
 {executed in 1 msec}
2020-11-19 20:06:04.405 INFO  jdbc.resultsettable Line:610 - 
|----|----|------|-------------|---|---|---|---|---|----|-------|
|nid |bid |depth |has_children |p1 |p2 |p3 |p4 |p5 |pid |weight |
|----|----|------|-------------|---|---|---|---|---|----|-------|
|----|----|------|-------------|---|---|---|---|---|----|-------|

2020-11-19 20:06:04.409 INFO  jdbc.sqltiming Line:373 - insert into book (bid, depth, has_children, p1, p2, p3, p4, p5, pid, weight, nid) values (1, 
3, 0, 1, 4, 6, 0, 0, 4, 0, 6) 
 {executed in 0 msec}
2020-11-19 20:06:04.418 INFO  jdbc.sqltiming Line:373 - select nodebodyen0_.entity_id as entity_i1_4_, nodebodyen0_.body_value as body_val2_4_, nodebodyen0_.body_summary 
as body_sum3_4_, nodebodyen0_.bundle as bundle4_4_, nodebodyen0_.delta as delta5_4_, nodebodyen0_.body_format 
as body_for6_4_, nodebodyen0_.langcode as langcode7_4_, nodebodyen0_.revision_id as revision8_4_ 
from node__body nodebodyen0_ where nodebodyen0_.entity_id=6 
 {executed in 2 msec}
2020-11-19 20:06:04.419 INFO  jdbc.resultsettable Line:610 - 
|----------|-----------|-------------|-------|------|------------|---------|------------|
|entity_id |body_value |body_summary |bundle |delta |body_format |langcode |revision_id |
|----------|-----------|-------------|-------|------|------------|---------|------------|
|----------|-----------|-------------|-------|------|------------|---------|------------|

2020-11-19 20:06:04.423 INFO  jdbc.sqltiming Line:373 - select nodebodyre0_.entity_id as entity_i1_13_0_, nodebodyre0_.body_value as body_val2_13_0_, 
nodebodyre0_.body_summary as body_sum3_13_0_, nodebodyre0_.bundle as bundle4_13_0_, nodebodyre0_.delta 
as delta5_13_0_, nodebodyre0_.body_format as body_for6_13_0_, nodebodyre0_.langcode as langcode7_13_0_, 
nodebodyre0_.revision_id as revision8_13_0_ from node_revision__body nodebodyre0_ where nodebodyre0_.entity_id=6 
 {executed in 1 msec}
2020-11-19 20:06:04.425 INFO  jdbc.resultsettable Line:610 - 
|----------|-----------|-------------|-------|------|------------|---------|------------|
|entity_id |body_value |body_summary |bundle |delta |body_format |langcode |revision_id |
|----------|-----------|-------------|-------|------|------------|---------|------------|
|----------|-----------|-------------|-------|------|------------|---------|------------|

2020-11-19 20:06:04.439 INFO  jdbc.sqltiming Line:373 - insert into node_revision__body (body_value, body_summary, bundle, delta, body_format, langcode, 
revision_id, entity_id) values ('<p>今天我们来聊聊 GraalVM 中的语言实现框架 Truffle。</p> <p>我们知道，实现一门新编程语言的传统做法是实现一个编译器，也就是把用该语言编写的程序转换成可直接在硬件上运行的机器码。</p> 
<p>通常来说，编译器分为前端和后端：前端负责词法分析、语法分析、类型检查和中间代码生成，后端负责编译优化和目标代码生成。</p> <p>不过，许多编译器教程只涉及了前端中的词法分析和语法分析，并没有真正生成可以运行的目标代码，更谈不上编译优化，因此在生产环境中并不实用。</p> 
<p>另一种比较取巧的做法则是将新语言编译成某种已知语言，或者已知的中间形式，例如将 Scala、Kotlin 编译成 Java 字节码。</p> <p>这样做的好处是可以直接享用 
Java 虚拟机自带的各项优化，包括即时编译、自动内存管理等等。因此，这种做法对所生成的 Java 字节码的优化程度要求不高。</p> <p>不过，不管是附带编译优化的编译器，还是生成中间形式并依赖于其他运行时的即时编译优化的编译器，它们所针对的都是<a 
href="https://en.wikipedia.org/wiki/Compiled_language">编译型语言</a>，在运行之前都需要这一额外的编译步骤。</p> <p>与编译型语言相对应的则是<a 
href="https://en.wikipedia.org/wiki/Interpreted_language">解释型语言</a>，例如 JavaScript、Ruby、Python 
等。对于这些语言来说，它们无须额外的编译步骤，而是依赖于解释执行器进行解析并执行。</p><!-- [[[read_end]]] --> <p>为了让该解释执行器能够高效地运行大型程序，语言实现开发人员通常会将其包装在虚拟机里，并实现诸如即时编译、垃圾回收等其他组件。这些组件对语言设计 
本身并无太大贡献，仅仅是为了实用性而不得不进行的工程实现。</p> <p>在理想情况下，我们希望在不同的语言实现中复用这些组件。也就是说，每当开发一门新语言时，我们只需要实现它的解释执行器，便能够直接复用即时编译、垃圾回收等组件，从而达到高性能的效果。这也是 
Truffle 项目的目标。接下来，我们就来讲讲这个项目。</p> <h2>Truffle 项目简介</h2> <p>Truffle 是一个用 Java 写就的语言实现框架。基于 Truffle 
的语言实现仅需用 Java 实现词法分析、语法分析以及针对语法分析所生成的抽象语法树（Abstract Syntax Tree，AST）的解释执行器，便可以享用由 Truffle 提供的各项运行时优化。</p> 
<p>就一个完整的 Truffle 语言实现而言，由于实现本身以及其所依赖的 Truffle 框架部分都是用 Java 实现的，因此它可以运行在任何 Java 虚拟机之上。</p> 
<p>当然，如果 Truffle 运行在附带了 Graal 编译器的 Java 虚拟机之上，那么它将调用 Graal 编译器所提供的 API，主动触发对 Truffle 语言的即时编译，将对 
AST 的解释执行转换为执行即时编译后的机器码。</p> <p>在这种情况下，Graal 编译器相当于一个提供了即时编译功能的库，宿主虚拟机本身仍可使用 C2 作为其唯一的即时编译器，或者分层编译模式下的 
4 层编译器。</p> <p><img src="https://static001.geekbang.org/resource/image/20/30/20c7a514f226689536fafc6886a08e30.png" 
alt=""></p> <p>我们团队实现并且开源了多个 Truffle 语言，例如<a href="https://github.com/graalvm/graaljs">JavaScript</a>，<a 
href="https://github.com/oracle/truffleruby">Ruby</a>，<a href="https://github.com/oracle/fastr">R</a>，<a 
href="https://github.com/graalvm/graalpython">Python</a>，以及可用来解释执行 LLVM bitcode 的<a href="https://github.com/oracle/graal/tree/master/sulong">Sulong</a>。关于 
Sulong 项目，任何能够编译为 LLVM bitcode 的编程语言，例如 C/C++，都能够在这上面运行。</p> <p>下图展示了运行在 GraalVM EE 上的 Java 
虚拟机语言，以及除 Python 外 Truffle 语言的峰值性能指标（2017 年数据）。</p> <p><img src="https://static001.geekbang.org/resource/image/0a/44/0aa87b77b2d6eb0147d4a2b342b0d644.png" 
alt=""></p> <p>这里我采用的基线是每个语言较有竞争力的语言实现。</p> <ul> <li>对于 Java 虚拟机语言（Java、Scala），我比较的是使用 C2 的 
HotSpot 虚拟机和使用 Graal 的 HotSpot 虚拟机。</li> <li>对于 Ruby，我比较的是运行在 HotSpot 虚拟机之上的 JRuby 和 Truffle 
Ruby。</li> <li>对于 R，我比较的是 GNU R 和基于 Truffle 的 FastR。</li> <li>对于 C/C++，我比较的是利用 LLVM 编译器生成的二进制文件和基于 
Truffle 的 Sulong。</li> <li>对于 JavaScript，我比较的是 Google 的 V8 和 Graal.js。</li> </ul> <p>针对每种语言，我们运行了上百个基准测试，求出各个基准测试<strong>峰值性能</strong>的加速比，并且汇总成图中所示的几何平均值（Geo. 
mean）。</p> <p>简单地说明一下，当 GraalVM 的加速比为 1 时，代表使用其他语言实现和使用 GraalVM 的性能相当。当 GraalVM 加速比超过 1 时，则代表 
GraalVM 的性能较好；反之，则说明 GraalVM 的性能较差。</p> <p>我们可以看到，Java 跑在 Graal 上和跑在 C2 上的执行效率类似，而 Scala 跑在 
Graal 上的执行效率则是跑在 C2 上的 1.2 倍。</p> <p>对于 Ruby 或者 R 这类解释型语言，经由 Graal 编译器加速的 Truffle 语言解释器的性能十分优越，分别达到对应基线的 
4.1x 和 4.5x。这里便可以看出使用专业即时编译器的 Truffle 框架的优势所在。</p> <p>不过，对于同样拥有专业即时编译器的 V8 来说，基于 Truffle 的 
Graal.js 仍处于追赶者的位置。考虑到我们团队中负责 Graal.js 的工程师仅有个位数，能够达到如此性能已属不易。现在 Graal.js 已经开源出来，我相信借助社区的贡献，它的性能能够得到进一步的提升。</p> 
<p>Sulong 与传统的 C/C++ 相比，由于两者最终都将编译为机器码，因此原则上后者定义了前者的性能上限。</p> <p>不过，Sulong 将 C/C++ 代码放在托管环境中运行，所有代码中的内存访问都会在托管环境的监控之下。无论是会触发 
Segfault 的异常访问，还是读取敏感数据的恶意访问，都能够被 Sulong 拦截下来并作出相应处理。</p> <h2>Partial Evaluation</h2> <p>如果要理解 
Truffle 的原理，我们需要先了解 Partial Evaluation 这一个概念。</p> <p>假设有一段程序<code>P</code>，它将一系列输入<code>I</code>转换成输出<code>O</code>（即<code>P: 
I -&gt; O</code>）。而这些输入又可以进一步划分为编译时已知的常量<code>IS</code>，和编译时未知的<code>ID</code>。</p> <p>那么，我们可以将程序<code>P: 
I -&gt; O</code>转换为等价的另一段程序<code>P'': ID -&gt; O</code>。这个新程序<code>P''</code>便是<code>P</code>的特化（Specialization），而从<code>P</code>转换到<code>P''</code>的这个过程便是所谓的 
Partial Evaluation。</p> <p>回到 Truffle 这边，我们可以将 Truffle 语言的解释执行器当成<code>P</code>，将某段用 Truffle 
语言写就的程序当作<code>IS</code>，并通过 Partial Evaluation 特化为<code>P''</code>。由于 Truffle 语言的解释执行器是用 Java 
写的，因此我们可以利用 Graal 编译器将<code>P''</code>编译为二进制码。</p> <p>下面我将用一个具体例子来讲解。</p> <p>假设有一门语言 X，只支持读取整数参数和整数加法。这两种操作分别对应下面这段代码中的 
AST 节点<code>Arg</code>和<code>Add</code>。</p> <pre style="position: relative;"><code> <table 
class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" 
data-line-number="1"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> abstract 
class Node { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" 
data-line-number="2"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> abstract 
int execute(int[] args); </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="3"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
} </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> class Arg extends Node { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> final int index; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="7"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="8"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
Arg(int i) { this.index = i; } </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="9"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="10"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> int execute(int[] args) { </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="11"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> return args[index]; </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="12"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> } </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="13"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> } </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="14"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="15"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> class Add extends Node { </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="16"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> final Node left, right; </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="17"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="18"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> Add(Node left, Node right) { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="19"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> this.left = left; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="20"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> this.right = right; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="21"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> } </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="22"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="23"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> int execute(int[] args) { </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="24"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> return left.execute(args) + </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="25"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> right.execute(args); </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="26"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> } </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="27"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> } </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="28"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="29"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> static int interpret(Node node, int[] 
args) { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" 
data-line-number="30"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> return 
node.execute(args); </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="31"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
} </div></td> </tr> </tbody> </table></code> <div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 
</div></pre> <p>所谓 AST 节点的解释执行，便是调用这些 AST 节点的<code>execute</code>方法；而一段程序的解释执行，则是调用这段程序的 AST 
根节点的<code>execute</code>方法。</p> <p>我们可以看到，<code>Arg</code>节点和<code>Add</code>节点均实现了<code>execute</code>方法，接收一个用来指代程序输入的 
int 数组参数，并返回计算结果。其中，<code>Arg</code>节点将返回 int 数组的第<code>i</code>个参数（<code>i</code>是硬编码在程序之中的常量）；而<code>Add</code>节点将分别调用左右两个节点的<code>execute</code>方法， 
并将所返回的值相加后再返回。</p> <p>下面我们将利用语言 X 实现一段程序，计算三个输入参数之和<code>arg0 + arg1 + arg2</code>。这段程序解析生成的 
AST 如下述代码所示：</p> <pre style="position: relative;"><code> <table class="hljs-ln"> <tbody> <tr> 
<td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> // Sample program: arg0 + arg1 + arg2 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> sample = new Add(new Add(new Arg(0), new 
Arg(1)), new Arg(2)); </div></td> </tr> </tbody> </table></code> <div class="richcontent-pre-copy"> 
<span class="iconfont"></span>复制代码 </div></pre> <p>这段程序对应的解释执行则是<code>interpret(sample, args)</code>，其中<code>args</code>为代表传入参数的 
int 数组。由于<code>sample</code>是编译时常量，因此我们可以将其通过 Partial Evaluation，特化为下面这段代码所示的<code>interpret0</code>方法：</p> 
<pre style="position: relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> static final Node sample = new Add(new Add(new Arg(0), new Arg(1)), 
new Arg(2)); </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" 
data-line-number="2"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> static int interpret0(int[] args) { </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> return sample.execute(args); </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> } </div></td> </tr> </tbody> </table></code> 
<div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 </div></pre> <p>Truffle 
的 Partial Evaluator 会不断进行方法内联（直至遇到被``@TruffleBoundary<code>注解的方法）。因此，上面这段代码的</code>interpret0<code>方法，在内联了对</code>Add.execute`方法的调用之后，会转换成下述代码：</p> 
<pre style="position: relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> static final Node sample = new Add(new Add(new Arg(0), new Arg(1)), 
new Arg(2)); </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" 
data-line-number="2"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> static int interpret0(int[] args) { </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> return sample.left.execute(args) + sample.right.execute(args); 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> } </div></td> </tr> </tbody> </table></code> 
<div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 </div></pre> <p>同样，我们可以进一步内联对<code>Add.execute</code>方法的调用以及对<code>Arg.execute</code>方法的调用，最终将<code>interpret0</code>转换成下述代码：</p> 
<pre style="position: relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> static int interpret0(int[] args) { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> return args[0] + args[1] + args[2]; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> } </div></td> </tr> </tbody> </table></code> <div class="richcontent-pre-copy"> 
<span class="iconfont"></span>复制代码 </div></pre> <p>至此，我们已成功地将一段 Truffle 语言代码的解释执行转换为上述 Java 
代码。接下来，我们便可以让 Graal 编译器将这段 Java 代码编译为机器码，从而实现 Truffle 语言的即时编译。</p> <h2>节点重写</h2> <p>Truffle 
的另一项关键优化是节点重写（node rewriting）。</p> <p>在动态语言中，许多变量的类型是在运行过程中方能确定的。以加法符号<code>+</code>为例，它既可以表示整数加法，还可以表示浮点数加法，甚至可以表示字符串加法。</p> 
<p>如果是静态语言，我们可以通过推断加法的两个操作数的具体类型，来确定该加法的类型。但对于动态语言来说，我们需要在运行时动态确定操作数的具体类型，并据此选择对应的加法操作。这种在运行时选择语义的节点，会十分不利于即时编译，从而严重影响到程序的性能。</p> 
<p>Truffle 语言解释器会收集每个 AST 节点所代表的操作的类型，并且在即时编译时，作出针对所收集得到的类型 profile 的特化（specialization）。</p> 
<p>还是以加法操作为例，如果所收集的类型 profile 显示这是一个整数加法操作，那么在即时编译时我们会将对应的 AST 节点当成整数加法；如果是一个字符串加法操作，那么我们会将对应的 
AST 节点当成字符串加法。</p> <p>当然，如果该加法操作既有可能是整数加法也可能是字符串加法，那么我们只好在运行过程中判断具体的操作类型，并选择相应的加法操作。</p> <p><img 
src="https://static001.geekbang.org/resource/image/54/8f/543ee374164fd43f2773043c675b568f.png" 
alt=""></p> <p>这种基于类型 profile 的优化，与我们以前介绍过的 Java 虚拟机中解释执行器以及三层 C1 编译代码十分类似，它们背后的核心都是基于假设的投机性优化，以及在假设失败时的去优化。</p> 
<p>在即时编译过后，如果运行过程中发现 AST 节点的实际类型和所假设的类型不同，Truffle 会主动调用 Graal 编译器提供的去优化 API，返回至解释执行 AST 节点的状态，并且重新收集 
AST 节点的类型信息。之后，Truffle 会再次利用 Graal 编译器进行新一轮的即时编译。</p> <p>当然，如果能够在第一次编译时便已达到稳定状态，不再触发去优化以及重新编译，那么，这会极大地减短程序到达峰值性能的时间。为此，我们统计了各个 
Truffle 语言的方法在进行过多少次方法调用后，其 AST 节点的类型会固定下来。</p> <p>据统计，在 JavaScript 方法和 Ruby 方法中，80% 会在 5 次方法调用后稳定下来，90% 
会在 7 次调用后稳定下来，99% 会在 19 次方法调用之后稳定下来。</p> <p>R 语言的方法则比较特殊，即便是不进行任何调用，有 50% 的方法已经稳定下来了。这背后的原因也不难推测，这是因为 
R 语言主要用于数值统计，几乎所有的操作都是浮点数类型的。</p> <h2>Polyglot</h2> <p>在开发过程中，我们通常会为工程项目选定一门语言，但问题也会接踵而至：一是这门语言没有实现我们可能需要用到的库，二是这门语言并不适用于某类问题。</p> 
<p>Truffle 语言实现框架则支持 Polyglot，允许在同一段代码中混用不同的编程语言，从而使得开发人员能够自由地选择合适的语言来实现子组件。</p> <p>与其他 Polyglot 
框架不同的是，Truffle 语言之间能够共用对象。也就是说，在不对某个语言中的对象进行复制或者序列化反序列化的情况下，Truffle 可以无缝地将该对象传递给另一门语言。因此，Truffle 
的 Polyglot 在切换语言时，性能开销非常小，甚至经常能够达到零开销。</p> <p>Truffle 的 Polyglot 特性是通过 Polyglot API 来实现的。每个实现了 
Polyglot API 的 Truffle 语言，其对象都能够被其他 Truffle 语言通过 Polyglot API 解析。实际上，当通过 Polyglot API 解析外来对象时，我们并不需要了解对方语言，便能够识别其数据结构，访问其中的数据，并进行进一步的计算。</p> 
<h2>总结与实践</h2> <p>今天我介绍了 GraalVM 中的 Truffle 项目。</p> <p>Truffle 是一个语言实现框架，允许语言开发者在仅实现词法解析、语法解析以及 
AST 解释器的情况下，达到极佳的性能。目前 Oracle Labs 已经实现并维护了 JavaScript、Ruby、R、Python 以及可用于解析 LLVM bitcode 的 
Sulong。后者将支持在 GraalVM 上运行 C/C++ 代码。</p> <p>Truffle 背后所依赖的技术是 Partial Evaluation 以及节点重写。Partial 
Evaluation 指的是将所要编译的目标程序解析生成的抽象语法树当做编译时常量，特化该 Truffle 语言的解释器，从而得到指代这段程序解释执行过程的 Java 代码。然后，我们可以借助 
Graal 编译器将这段 Java 代码即时编译为机器码。</p> <p>节点重写则是收集 AST 节点的类型，根据所收集的类型 profile 进行的特化，并在节点类型不匹配时进行去优化并重新收集、编译的一项技术。</p> 
<p>Truffle 的 Polyglot 特性支持在一段代码中混用多种不同的语言。与其他 Polyglot 框架相比，它支持在不同的 Truffle 语言中复用内存中存储的同一个对象。</p> 
<hr> <p>今天的实践环节，请你试用 GraalVM 中附带的各项语言实现。你可以运行我们官网上的各个<a href="https://www.graalvm.org/docs/examples/">示例程序</a>。</p> 
<p><img src="https://static001.geekbang.org/resource/image/2a/d5/2a62e58cbdf56a5dc40748567d346fd5.jpg" 
alt=""></p>', '', 'book', 0, 'full_html', 'zh-hans', 6, 6) 
 {executed in 8 msec}
2020-11-19 20:06:04.452 INFO  jdbc.sqltiming Line:373 - select nodebodyen0_.entity_id as entity_i1_4_0_, nodebodyen0_.body_value as body_val2_4_0_, 
nodebodyen0_.body_summary as body_sum3_4_0_, nodebodyen0_.bundle as bundle4_4_0_, nodebodyen0_.delta 
as delta5_4_0_, nodebodyen0_.body_format as body_for6_4_0_, nodebodyen0_.langcode as langcode7_4_0_, 
nodebodyen0_.revision_id as revision8_4_0_ from node__body nodebodyen0_ where nodebodyen0_.entity_id=6 
 {executed in 1 msec}
2020-11-19 20:06:04.454 INFO  jdbc.resultsettable Line:610 - 
|----------|-----------|-------------|-------|------|------------|---------|------------|
|entity_id |body_value |body_summary |bundle |delta |body_format |langcode |revision_id |
|----------|-----------|-------------|-------|------|------------|---------|------------|
|----------|-----------|-------------|-------|------|------------|---------|------------|

2020-11-19 20:06:04.509 INFO  jdbc.sqltiming Line:373 - insert into node__body (body_value, body_summary, bundle, delta, body_format, langcode, revision_id, 
entity_id) values ('<p>今天我们来聊聊 GraalVM 中的语言实现框架 Truffle。</p> <p>我们知道，实现一门新编程语言的传统做法是实现一个编译器，也就是把用该语言编写的程序转换成可直接在硬件上运行的机器码。</p> 
<p>通常来说，编译器分为前端和后端：前端负责词法分析、语法分析、类型检查和中间代码生成，后端负责编译优化和目标代码生成。</p> <p>不过，许多编译器教程只涉及了前端中的词法分析和语法分析，并没有真正生成可以运行的目标代码，更谈不上编译优化，因此在生产环境中并不实用。</p> 
<p>另一种比较取巧的做法则是将新语言编译成某种已知语言，或者已知的中间形式，例如将 Scala、Kotlin 编译成 Java 字节码。</p> <p>这样做的好处是可以直接享用 
Java 虚拟机自带的各项优化，包括即时编译、自动内存管理等等。因此，这种做法对所生成的 Java 字节码的优化程度要求不高。</p> <p>不过，不管是附带编译优化的编译器，还是生成中间形式并依赖于其他运行时的即时编译优化的编译器，它们所针对的都是<a 
href="https://en.wikipedia.org/wiki/Compiled_language">编译型语言</a>，在运行之前都需要这一额外的编译步骤。</p> <p>与编译型语言相对应的则是<a 
href="https://en.wikipedia.org/wiki/Interpreted_language">解释型语言</a>，例如 JavaScript、Ruby、Python 
等。对于这些语言来说，它们无须额外的编译步骤，而是依赖于解释执行器进行解析并执行。</p><!-- [[[read_end]]] --> <p>为了让该解释执行器能够高效地运行大型程序，语言实现开发人员通常会将其包装在虚拟机里，并实现诸如即时编译、垃圾回收等其他组件。这些组件对语言设计 
本身并无太大贡献，仅仅是为了实用性而不得不进行的工程实现。</p> <p>在理想情况下，我们希望在不同的语言实现中复用这些组件。也就是说，每当开发一门新语言时，我们只需要实现它的解释执行器，便能够直接复用即时编译、垃圾回收等组件，从而达到高性能的效果。这也是 
Truffle 项目的目标。接下来，我们就来讲讲这个项目。</p> <h2>Truffle 项目简介</h2> <p>Truffle 是一个用 Java 写就的语言实现框架。基于 Truffle 
的语言实现仅需用 Java 实现词法分析、语法分析以及针对语法分析所生成的抽象语法树（Abstract Syntax Tree，AST）的解释执行器，便可以享用由 Truffle 提供的各项运行时优化。</p> 
<p>就一个完整的 Truffle 语言实现而言，由于实现本身以及其所依赖的 Truffle 框架部分都是用 Java 实现的，因此它可以运行在任何 Java 虚拟机之上。</p> 
<p>当然，如果 Truffle 运行在附带了 Graal 编译器的 Java 虚拟机之上，那么它将调用 Graal 编译器所提供的 API，主动触发对 Truffle 语言的即时编译，将对 
AST 的解释执行转换为执行即时编译后的机器码。</p> <p>在这种情况下，Graal 编译器相当于一个提供了即时编译功能的库，宿主虚拟机本身仍可使用 C2 作为其唯一的即时编译器，或者分层编译模式下的 
4 层编译器。</p> <p><img src="https://static001.geekbang.org/resource/image/20/30/20c7a514f226689536fafc6886a08e30.png" 
alt=""></p> <p>我们团队实现并且开源了多个 Truffle 语言，例如<a href="https://github.com/graalvm/graaljs">JavaScript</a>，<a 
href="https://github.com/oracle/truffleruby">Ruby</a>，<a href="https://github.com/oracle/fastr">R</a>，<a 
href="https://github.com/graalvm/graalpython">Python</a>，以及可用来解释执行 LLVM bitcode 的<a href="https://github.com/oracle/graal/tree/master/sulong">Sulong</a>。关于 
Sulong 项目，任何能够编译为 LLVM bitcode 的编程语言，例如 C/C++，都能够在这上面运行。</p> <p>下图展示了运行在 GraalVM EE 上的 Java 
虚拟机语言，以及除 Python 外 Truffle 语言的峰值性能指标（2017 年数据）。</p> <p><img src="https://static001.geekbang.org/resource/image/0a/44/0aa87b77b2d6eb0147d4a2b342b0d644.png" 
alt=""></p> <p>这里我采用的基线是每个语言较有竞争力的语言实现。</p> <ul> <li>对于 Java 虚拟机语言（Java、Scala），我比较的是使用 C2 的 
HotSpot 虚拟机和使用 Graal 的 HotSpot 虚拟机。</li> <li>对于 Ruby，我比较的是运行在 HotSpot 虚拟机之上的 JRuby 和 Truffle 
Ruby。</li> <li>对于 R，我比较的是 GNU R 和基于 Truffle 的 FastR。</li> <li>对于 C/C++，我比较的是利用 LLVM 编译器生成的二进制文件和基于 
Truffle 的 Sulong。</li> <li>对于 JavaScript，我比较的是 Google 的 V8 和 Graal.js。</li> </ul> <p>针对每种语言，我们运行了上百个基准测试，求出各个基准测试<strong>峰值性能</strong>的加速比，并且汇总成图中所示的几何平均值（Geo. 
mean）。</p> <p>简单地说明一下，当 GraalVM 的加速比为 1 时，代表使用其他语言实现和使用 GraalVM 的性能相当。当 GraalVM 加速比超过 1 时，则代表 
GraalVM 的性能较好；反之，则说明 GraalVM 的性能较差。</p> <p>我们可以看到，Java 跑在 Graal 上和跑在 C2 上的执行效率类似，而 Scala 跑在 
Graal 上的执行效率则是跑在 C2 上的 1.2 倍。</p> <p>对于 Ruby 或者 R 这类解释型语言，经由 Graal 编译器加速的 Truffle 语言解释器的性能十分优越，分别达到对应基线的 
4.1x 和 4.5x。这里便可以看出使用专业即时编译器的 Truffle 框架的优势所在。</p> <p>不过，对于同样拥有专业即时编译器的 V8 来说，基于 Truffle 的 
Graal.js 仍处于追赶者的位置。考虑到我们团队中负责 Graal.js 的工程师仅有个位数，能够达到如此性能已属不易。现在 Graal.js 已经开源出来，我相信借助社区的贡献，它的性能能够得到进一步的提升。</p> 
<p>Sulong 与传统的 C/C++ 相比，由于两者最终都将编译为机器码，因此原则上后者定义了前者的性能上限。</p> <p>不过，Sulong 将 C/C++ 代码放在托管环境中运行，所有代码中的内存访问都会在托管环境的监控之下。无论是会触发 
Segfault 的异常访问，还是读取敏感数据的恶意访问，都能够被 Sulong 拦截下来并作出相应处理。</p> <h2>Partial Evaluation</h2> <p>如果要理解 
Truffle 的原理，我们需要先了解 Partial Evaluation 这一个概念。</p> <p>假设有一段程序<code>P</code>，它将一系列输入<code>I</code>转换成输出<code>O</code>（即<code>P: 
I -&gt; O</code>）。而这些输入又可以进一步划分为编译时已知的常量<code>IS</code>，和编译时未知的<code>ID</code>。</p> <p>那么，我们可以将程序<code>P: 
I -&gt; O</code>转换为等价的另一段程序<code>P'': ID -&gt; O</code>。这个新程序<code>P''</code>便是<code>P</code>的特化（Specialization），而从<code>P</code>转换到<code>P''</code>的这个过程便是所谓的 
Partial Evaluation。</p> <p>回到 Truffle 这边，我们可以将 Truffle 语言的解释执行器当成<code>P</code>，将某段用 Truffle 
语言写就的程序当作<code>IS</code>，并通过 Partial Evaluation 特化为<code>P''</code>。由于 Truffle 语言的解释执行器是用 Java 
写的，因此我们可以利用 Graal 编译器将<code>P''</code>编译为二进制码。</p> <p>下面我将用一个具体例子来讲解。</p> <p>假设有一门语言 X，只支持读取整数参数和整数加法。这两种操作分别对应下面这段代码中的 
AST 节点<code>Arg</code>和<code>Add</code>。</p> <pre style="position: relative;"><code> <table 
class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" 
data-line-number="1"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> abstract 
class Node { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" 
data-line-number="2"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> abstract 
int execute(int[] args); </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="3"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
} </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> class Arg extends Node { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> final int index; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="7"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="8"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
Arg(int i) { this.index = i; } </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="9"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="10"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> int execute(int[] args) { </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="11"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> return args[index]; </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="12"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> } </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="13"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> } </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="14"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="15"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> class Add extends Node { </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="16"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> final Node left, right; </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="17"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="18"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> Add(Node left, Node right) { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="19"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> this.left = left; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="20"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> this.right = right; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="21"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> } </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="22"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="23"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> int execute(int[] args) { </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="24"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> return left.execute(args) + </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="25"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> right.execute(args); </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="26"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> } </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="27"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> } </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="28"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="29"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> static int interpret(Node node, int[] 
args) { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" 
data-line-number="30"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> return 
node.execute(args); </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="31"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
} </div></td> </tr> </tbody> </table></code> <div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 
</div></pre> <p>所谓 AST 节点的解释执行，便是调用这些 AST 节点的<code>execute</code>方法；而一段程序的解释执行，则是调用这段程序的 AST 
根节点的<code>execute</code>方法。</p> <p>我们可以看到，<code>Arg</code>节点和<code>Add</code>节点均实现了<code>execute</code>方法，接收一个用来指代程序输入的 
int 数组参数，并返回计算结果。其中，<code>Arg</code>节点将返回 int 数组的第<code>i</code>个参数（<code>i</code>是硬编码在程序之中的常量）；而<code>Add</code>节点将分别调用左右两个节点的<code>execute</code>方法， 
并将所返回的值相加后再返回。</p> <p>下面我们将利用语言 X 实现一段程序，计算三个输入参数之和<code>arg0 + arg1 + arg2</code>。这段程序解析生成的 
AST 如下述代码所示：</p> <pre style="position: relative;"><code> <table class="hljs-ln"> <tbody> <tr> 
<td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> // Sample program: arg0 + arg1 + arg2 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> sample = new Add(new Add(new Arg(0), new 
Arg(1)), new Arg(2)); </div></td> </tr> </tbody> </table></code> <div class="richcontent-pre-copy"> 
<span class="iconfont"></span>复制代码 </div></pre> <p>这段程序对应的解释执行则是<code>interpret(sample, args)</code>，其中<code>args</code>为代表传入参数的 
int 数组。由于<code>sample</code>是编译时常量，因此我们可以将其通过 Partial Evaluation，特化为下面这段代码所示的<code>interpret0</code>方法：</p> 
<pre style="position: relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> static final Node sample = new Add(new Add(new Arg(0), new Arg(1)), 
new Arg(2)); </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" 
data-line-number="2"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> static int interpret0(int[] args) { </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> return sample.execute(args); </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> } </div></td> </tr> </tbody> </table></code> 
<div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 </div></pre> <p>Truffle 
的 Partial Evaluator 会不断进行方法内联（直至遇到被``@TruffleBoundary<code>注解的方法）。因此，上面这段代码的</code>interpret0<code>方法，在内联了对</code>Add.execute`方法的调用之后，会转换成下述代码：</p> 
<pre style="position: relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> static final Node sample = new Add(new Add(new Arg(0), new Arg(1)), 
new Arg(2)); </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" 
data-line-number="2"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> static int interpret0(int[] args) { </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> return sample.left.execute(args) + sample.right.execute(args); 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> } </div></td> </tr> </tbody> </table></code> 
<div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 </div></pre> <p>同样，我们可以进一步内联对<code>Add.execute</code>方法的调用以及对<code>Arg.execute</code>方法的调用，最终将<code>interpret0</code>转换成下述代码：</p> 
<pre style="position: relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> static int interpret0(int[] args) { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> return args[0] + args[1] + args[2]; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> } </div></td> </tr> </tbody> </table></code> <div class="richcontent-pre-copy"> 
<span class="iconfont"></span>复制代码 </div></pre> <p>至此，我们已成功地将一段 Truffle 语言代码的解释执行转换为上述 Java 
代码。接下来，我们便可以让 Graal 编译器将这段 Java 代码编译为机器码，从而实现 Truffle 语言的即时编译。</p> <h2>节点重写</h2> <p>Truffle 
的另一项关键优化是节点重写（node rewriting）。</p> <p>在动态语言中，许多变量的类型是在运行过程中方能确定的。以加法符号<code>+</code>为例，它既可以表示整数加法，还可以表示浮点数加法，甚至可以表示字符串加法。</p> 
<p>如果是静态语言，我们可以通过推断加法的两个操作数的具体类型，来确定该加法的类型。但对于动态语言来说，我们需要在运行时动态确定操作数的具体类型，并据此选择对应的加法操作。这种在运行时选择语义的节点，会十分不利于即时编译，从而严重影响到程序的性能。</p> 
<p>Truffle 语言解释器会收集每个 AST 节点所代表的操作的类型，并且在即时编译时，作出针对所收集得到的类型 profile 的特化（specialization）。</p> 
<p>还是以加法操作为例，如果所收集的类型 profile 显示这是一个整数加法操作，那么在即时编译时我们会将对应的 AST 节点当成整数加法；如果是一个字符串加法操作，那么我们会将对应的 
AST 节点当成字符串加法。</p> <p>当然，如果该加法操作既有可能是整数加法也可能是字符串加法，那么我们只好在运行过程中判断具体的操作类型，并选择相应的加法操作。</p> <p><img 
src="https://static001.geekbang.org/resource/image/54/8f/543ee374164fd43f2773043c675b568f.png" 
alt=""></p> <p>这种基于类型 profile 的优化，与我们以前介绍过的 Java 虚拟机中解释执行器以及三层 C1 编译代码十分类似，它们背后的核心都是基于假设的投机性优化，以及在假设失败时的去优化。</p> 
<p>在即时编译过后，如果运行过程中发现 AST 节点的实际类型和所假设的类型不同，Truffle 会主动调用 Graal 编译器提供的去优化 API，返回至解释执行 AST 节点的状态，并且重新收集 
AST 节点的类型信息。之后，Truffle 会再次利用 Graal 编译器进行新一轮的即时编译。</p> <p>当然，如果能够在第一次编译时便已达到稳定状态，不再触发去优化以及重新编译，那么，这会极大地减短程序到达峰值性能的时间。为此，我们统计了各个 
Truffle 语言的方法在进行过多少次方法调用后，其 AST 节点的类型会固定下来。</p> <p>据统计，在 JavaScript 方法和 Ruby 方法中，80% 会在 5 次方法调用后稳定下来，90% 
会在 7 次调用后稳定下来，99% 会在 19 次方法调用之后稳定下来。</p> <p>R 语言的方法则比较特殊，即便是不进行任何调用，有 50% 的方法已经稳定下来了。这背后的原因也不难推测，这是因为 
R 语言主要用于数值统计，几乎所有的操作都是浮点数类型的。</p> <h2>Polyglot</h2> <p>在开发过程中，我们通常会为工程项目选定一门语言，但问题也会接踵而至：一是这门语言没有实现我们可能需要用到的库，二是这门语言并不适用于某类问题。</p> 
<p>Truffle 语言实现框架则支持 Polyglot，允许在同一段代码中混用不同的编程语言，从而使得开发人员能够自由地选择合适的语言来实现子组件。</p> <p>与其他 Polyglot 
框架不同的是，Truffle 语言之间能够共用对象。也就是说，在不对某个语言中的对象进行复制或者序列化反序列化的情况下，Truffle 可以无缝地将该对象传递给另一门语言。因此，Truffle 
的 Polyglot 在切换语言时，性能开销非常小，甚至经常能够达到零开销。</p> <p>Truffle 的 Polyglot 特性是通过 Polyglot API 来实现的。每个实现了 
Polyglot API 的 Truffle 语言，其对象都能够被其他 Truffle 语言通过 Polyglot API 解析。实际上，当通过 Polyglot API 解析外来对象时，我们并不需要了解对方语言，便能够识别其数据结构，访问其中的数据，并进行进一步的计算。</p> 
<h2>总结与实践</h2> <p>今天我介绍了 GraalVM 中的 Truffle 项目。</p> <p>Truffle 是一个语言实现框架，允许语言开发者在仅实现词法解析、语法解析以及 
AST 解释器的情况下，达到极佳的性能。目前 Oracle Labs 已经实现并维护了 JavaScript、Ruby、R、Python 以及可用于解析 LLVM bitcode 的 
Sulong。后者将支持在 GraalVM 上运行 C/C++ 代码。</p> <p>Truffle 背后所依赖的技术是 Partial Evaluation 以及节点重写。Partial 
Evaluation 指的是将所要编译的目标程序解析生成的抽象语法树当做编译时常量，特化该 Truffle 语言的解释器，从而得到指代这段程序解释执行过程的 Java 代码。然后，我们可以借助 
Graal 编译器将这段 Java 代码即时编译为机器码。</p> <p>节点重写则是收集 AST 节点的类型，根据所收集的类型 profile 进行的特化，并在节点类型不匹配时进行去优化并重新收集、编译的一项技术。</p> 
<p>Truffle 的 Polyglot 特性支持在一段代码中混用多种不同的语言。与其他 Polyglot 框架相比，它支持在不同的 Truffle 语言中复用内存中存储的同一个对象。</p> 
<hr> <p>今天的实践环节，请你试用 GraalVM 中附带的各项语言实现。你可以运行我们官网上的各个<a href="https://www.graalvm.org/docs/examples/">示例程序</a>。</p> 
<p><img src="https://static001.geekbang.org/resource/image/2a/d5/2a62e58cbdf56a5dc40748567d346fd5.jpg" 
alt=""></p>', '', 'book', 0, 'full_html', 'zh-hans', 6, 6) 
 {executed in 49 msec}
2020-11-19 20:06:04.556 INFO  jdbc.sqltiming Line:373 - select nodefiledd0_.nid as nid1_10_, nodefiledd0_.changed as changed2_10_, nodefiledd0_.created 
as created3_10_, nodefiledd0_.default_langcode as default_4_10_, nodefiledd0_.langcode as langcode5_10_, 
nodefiledd0_.promote as promote6_10_, nodefiledd0_.revision_translation_affected as revision7_10_, 
nodefiledd0_.status as status8_10_, nodefiledd0_.sticky as sticky9_10_, nodefiledd0_.title 
as title10_10_, nodefiledd0_.type as type11_10_, nodefiledd0_.uid as uid12_10_, nodefiledd0_.vid 
as vid13_10_ from node_field_data nodefiledd0_ where nodefiledd0_.nid=6 
 {executed in 2 msec}
2020-11-19 20:06:04.559 INFO  jdbc.resultsettable Line:610 - 
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|-----|----|----|
|nid |changed |created |default_langcode |langcode |promote |revision_translation_affected |status |sticky |title |type |uid |vid |
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|-----|----|----|
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|-----|----|----|

2020-11-19 20:06:04.570 INFO  jdbc.sqltiming Line:373 - select nodefieldr0_.nid as nid1_11_0_, nodefieldr0_.changed as changed2_11_0_, nodefieldr0_.created 
as created3_11_0_, nodefieldr0_.default_langcode as default_4_11_0_, nodefieldr0_.langcode 
as langcode5_11_0_, nodefieldr0_.promote as promote6_11_0_, nodefieldr0_.revision_translation_affected 
as revision7_11_0_, nodefieldr0_.status as status8_11_0_, nodefieldr0_.sticky as sticky9_11_0_, 
nodefieldr0_.title as title10_11_0_, nodefieldr0_.uid as uid11_11_0_, nodefieldr0_.vid as vid12_11_0_ 
from node_field_revision nodefieldr0_ where nodefieldr0_.nid=6 
 {executed in 2 msec}
2020-11-19 20:06:04.573 INFO  jdbc.resultsettable Line:610 - 
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|----|----|
|nid |changed |created |default_langcode |langcode |promote |revision_translation_affected |status |sticky |title |uid |vid |
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|----|----|
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|----|----|

2020-11-19 20:06:04.579 INFO  jdbc.sqltiming Line:373 - insert into node_field_revision (changed, created, default_langcode, langcode, promote, revision_translation_affected, 
status, sticky, title, uid, vid, nid) values (1605787564, 1605787564, 1, 'zh-hans', 0, 1, 1, 
0, '35丨Truffle：语言实现框架', 1, 6, 6) 
 {executed in 1 msec}
2020-11-19 20:06:04.604 INFO  jdbc.sqltiming Line:373 - select nodefiledd0_.nid as nid1_10_0_, nodefiledd0_.changed as changed2_10_0_, nodefiledd0_.created 
as created3_10_0_, nodefiledd0_.default_langcode as default_4_10_0_, nodefiledd0_.langcode 
as langcode5_10_0_, nodefiledd0_.promote as promote6_10_0_, nodefiledd0_.revision_translation_affected 
as revision7_10_0_, nodefiledd0_.status as status8_10_0_, nodefiledd0_.sticky as sticky9_10_0_, 
nodefiledd0_.title as title10_10_0_, nodefiledd0_.type as type11_10_0_, nodefiledd0_.uid as 
uid12_10_0_, nodefiledd0_.vid as vid13_10_0_ from node_field_data nodefiledd0_ where nodefiledd0_.nid=6 
 {executed in 2 msec}
2020-11-19 20:06:04.606 INFO  jdbc.resultsettable Line:610 - 
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|-----|----|----|
|nid |changed |created |default_langcode |langcode |promote |revision_translation_affected |status |sticky |title |type |uid |vid |
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|-----|----|----|
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|-----|----|----|

2020-11-19 20:06:04.610 INFO  jdbc.sqltiming Line:373 - insert into node_field_data (changed, created, default_langcode, langcode, promote, revision_translation_affected, 
status, sticky, title, type, uid, vid, nid) values (1605787564, 1605787564, 1, 'zh-hans', 0, 
1, 1, 0, '35丨Truffle：语言实现框架', 'book', 1, 6, 6) 
 {executed in 1 msec}
2020-11-19 20:06:04.628 INFO  jdbc.sqltiming Line:373 - select bookfieldm0_.entity_id as entity_i1_8_, bookfieldm0_.bundle as bundle2_8_, bookfieldm0_.delta 
as delta3_8_, bookfieldm0_.langcode as langcode4_8_, bookfieldm0_.field_media_value as field_me5_8_, 
bookfieldm0_.revision_id as revision6_8_ from node__field_media bookfieldm0_ where bookfieldm0_.entity_id=6 
 {executed in 1 msec}
2020-11-19 20:06:04.630 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------------|------------|
|entity_id |bundle |delta |langcode |field_media_value |revision_id |
|----------|-------|------|---------|------------------|------------|
|----------|-------|------|---------|------------------|------------|

2020-11-19 20:06:04.637 INFO  jdbc.sqltiming Line:373 - select bookfieldm0_.entity_id as entity_i1_8_0_, bookfieldm0_.bundle as bundle2_8_0_, bookfieldm0_.delta 
as delta3_8_0_, bookfieldm0_.langcode as langcode4_8_0_, bookfieldm0_.field_media_value as 
field_me5_8_0_, bookfieldm0_.revision_id as revision6_8_0_ from node__field_media bookfieldm0_ 
where bookfieldm0_.entity_id=6 
 {executed in 3 msec}
2020-11-19 20:06:04.639 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------------|------------|
|entity_id |bundle |delta |langcode |field_media_value |revision_id |
|----------|-------|------|---------|------------------|------------|
|----------|-------|------|---------|------------------|------------|

2020-11-19 20:06:04.646 INFO  jdbc.sqltiming Line:373 - insert into node__field_media (bundle, delta, langcode, field_media_value, revision_id, entity_id) 
values ('book', 0, 'zh-hans', 'https://qdall01.baidupcs.com/file/e0e0f4bc6950b27eacd170ea4ec8ad00?bkt=en-cf7b18a7c51d907898a13b7b13545e0631f5e9d952cf07106eb82a74e8ea7ec5d9f691d08e27d0ae&fid=3757516097-778750-325310494857404&time=1605787562&sign=FDTAXUGERLQlBHSKfWqir-DCb740ccc5511e5e8fedcff06b081203-1ilXD5sRfrMdbcOILHa8vraY91o%3D&to=92&size=7045399&sta_dx=7045399&sta_cs=4354&sta_ft=mp3&sta_ct=7&sta_mt=0&fm2=MH%2CQingdao%2CAnywhere%2C%2Cshanghai%2Ccnc&ctime=1567182980&mtime=1605787492&resv0=-1&resv1=0&resv2=rlim&resv3=2&resv4=7045399&vuk=3757516097&iv=0&htype=&randtype=em&newver=1&newfm=1&secfm=1&flow_ver=3&pkey=en-0236cfb400f2c681bafe60d7a3d30056dbc0edd38db81fb185d10b31b96df0c9a988ad2b8fbac99d&sl=76480590&expires=8h&rt=pr&r=902824947&mlogid=7510706658692788843&vbdid=64799653&fin=35%E4%B8%A8Truffle%EF%BC%9A%E8%AF%AD%E8%A8%80%E5%AE%9E%E7%8E%B0%E6%A1%86%E6%9E%B6.mp3&bflag=92,34-92&rtype=1&dp-logid=7510706658692788843&dp-callid=0.1.1&hps=1&tsl=80&csl=80&fsl=-1&csign=yVzLQPCt4DblfMLqd2BCjd2RnqQ%3D&so=0&ut=6&uter=0&serv=0&uc=1458616558&ti=92f9da3c8a3331aef8ad8cac1a175ced59f9084240b7ae57&hflag=30&adg=c_0f3c8fb981bae1fdae375754a6f1d609&reqlabel=778750_l_eeb31e180410b8be0e62f686c2b42c5d_-1_43d73532db4f9890a29565ef474ca519&ibp=1&by=themis&filename=35%E4%B8%A8Truffle%EF%BC%9A%E8%AF%AD%E8%A8%80%E5%AE%9E%E7%8E%B0%E6%A1%86%E6%9E%B6.mp3', 
6, 6) 
 {executed in 2 msec}
2020-11-19 20:06:04.656 INFO  jdbc.sqltiming Line:373 - select nodefieldm0_.entity_id as entity_i1_17_0_, nodefieldm0_.bundle as bundle2_17_0_, nodefieldm0_.delta 
as delta3_17_0_, nodefieldm0_.langcode as langcode4_17_0_, nodefieldm0_.field_media_value as 
field_me5_17_0_, nodefieldm0_.revision_id as revision6_17_0_ from node_revision__field_media 
nodefieldm0_ where nodefieldm0_.entity_id=6 
 {executed in 2 msec}
2020-11-19 20:06:04.658 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------------|------------|
|entity_id |bundle |delta |langcode |field_media_value |revision_id |
|----------|-------|------|---------|------------------|------------|
|----------|-------|------|---------|------------------|------------|

2020-11-19 20:06:04.663 INFO  jdbc.sqltiming Line:373 - insert into node_revision__field_media (bundle, delta, langcode, field_media_value, revision_id, 
entity_id) values ('book', 0, 'zh-hans', 'https://qdall01.baidupcs.com/file/e0e0f4bc6950b27eacd170ea4ec8ad00?bkt=en-cf7b18a7c51d907898a13b7b13545e0631f5e9d952cf07106eb82a74e8ea7ec5d9f691d08e27d0ae&fid=3757516097-778750-325310494857404&time=1605787562&sign=FDTAXUGERLQlBHSKfWqir-DCb740ccc5511e5e8fedcff06b081203-1ilXD5sRfrMdbcOILHa8vraY91o%3D&to=92&size=7045399&sta_dx=7045399&sta_cs=4354&sta_ft=mp3&sta_ct=7&sta_mt=0&fm2=MH%2CQingdao%2CAnywhere%2C%2Cshanghai%2Ccnc&ctime=1567182980&mtime=1605787492&resv0=-1&resv1=0&resv2=rlim&resv3=2&resv4=7045399&vuk=3757516097&iv=0&htype=&randtype=em&newver=1&newfm=1&secfm=1&flow_ver=3&pkey=en-0236cfb400f2c681bafe60d7a3d30056dbc0edd38db81fb185d10b31b96df0c9a988ad2b8fbac99d&sl=76480590&expires=8h&rt=pr&r=902824947&mlogid=7510706658692788843&vbdid=64799653&fin=35%E4%B8%A8Truffle%EF%BC%9A%E8%AF%AD%E8%A8%80%E5%AE%9E%E7%8E%B0%E6%A1%86%E6%9E%B6.mp3&bflag=92,34-92&rtype=1&dp-logid=7510706658692788843&dp-callid=0.1.1&hps=1&tsl=80&csl=80&fsl=-1&csign=yVzLQPCt4DblfMLqd2BCjd2RnqQ%3D&so=0&ut=6&uter=0&serv=0&uc=1458616558&ti=92f9da3c8a3331aef8ad8cac1a175ced59f9084240b7ae57&hflag=30&adg=c_0f3c8fb981bae1fdae375754a6f1d609&reqlabel=778750_l_eeb31e180410b8be0e62f686c2b42c5d_-1_43d73532db4f9890a29565ef474ca519&ibp=1&by=themis&filename=35%E4%B8%A8Truffle%EF%BC%9A%E8%AF%AD%E8%A8%80%E5%AE%9E%E7%8E%B0%E6%A1%86%E6%9E%B6.mp3', 
6, 6) 
 {executed in 1 msec}
2020-11-19 20:06:04.670 INFO  jdbc.sqltiming Line:373 - select bookfieldc0_.entity_id as entity_i1_5_, bookfieldc0_.bundle as bundle2_5_, bookfieldc0_.field_comment_value 
as field_co3_5_, bookfieldc0_.delta as delta4_5_, bookfieldc0_.field_comment_format as field_co5_5_, 
bookfieldc0_.langcode as langcode6_5_, bookfieldc0_.revision_id as revision7_5_ from node__field_comment 
bookfieldc0_ where bookfieldc0_.entity_id=6 
 {executed in 1 msec}
2020-11-19 20:06:04.672 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|--------------------|------|---------------------|---------|------------|
|entity_id |bundle |field_comment_value |delta |field_comment_format |langcode |revision_id |
|----------|-------|--------------------|------|---------------------|---------|------------|
|----------|-------|--------------------|------|---------------------|---------|------------|

2020-11-19 20:06:04.676 INFO  jdbc.sqltiming Line:373 - select bookfieldc0_.entity_id as entity_i1_5_0_, bookfieldc0_.bundle as bundle2_5_0_, bookfieldc0_.field_comment_value 
as field_co3_5_0_, bookfieldc0_.delta as delta4_5_0_, bookfieldc0_.field_comment_format as 
field_co5_5_0_, bookfieldc0_.langcode as langcode6_5_0_, bookfieldc0_.revision_id as revision7_5_0_ 
from node__field_comment bookfieldc0_ where bookfieldc0_.entity_id=6 
 {executed in 1 msec}
2020-11-19 20:06:04.678 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|--------------------|------|---------------------|---------|------------|
|entity_id |bundle |field_comment_value |delta |field_comment_format |langcode |revision_id |
|----------|-------|--------------------|------|---------------------|---------|------------|
|----------|-------|--------------------|------|---------------------|---------|------------|

2020-11-19 20:06:04.683 INFO  jdbc.sqltiming Line:373 - insert into node__field_comment (bundle, field_comment_value, delta, field_comment_format, 
langcode, revision_id, entity_id) values ('book', '<li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/11/a9/84/c87b51ce.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>xiaobang</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2018-10-15 </div> </div> <div 
class="_2eMTs2JE_0"> <div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class="">1</span> 
</div> <!----> <!----> </div> </div> <div class="_3M6kV3zb_0"> 感觉truffle的特化和pypy的做法有点像，老师能否评价一下这两者呢？另外，truffle的特化相当于对每份目标语言源码都要搞一个新目标语言解释器，这样似乎比较耗时间，而性能测试说明性能比其它解释器要高，能解释一下为什么吗 
</div> <div class="_2r3UB1GX_0"> <span>展开</span><i class="iconfont"></i> </div> <div class="_2xNIY4NG_0"> 
<p class="_33BLbmw4_0">作者回复: 是挺像的。你可以看看Stefan Marr的专业学术文章<br>http://stefan-marr.de/papers/oopsla-marr-ducasse-meta-tracing-vs-partial-evaluation/<br><br>Truffle解释器本身会被partial 
evaluation和即时编译，相当于即时编译新目标语言了</p> </div> </div></li> <li class="reJj6Thl_0"><img src="http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLqDHFficypYouwztiatvzQWAPHt2X8R0Qge0iaat9dhfTjb0AFeicS3kjWJEjjMCSbwcoCYBOjK9aia8A/132" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>zzj</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2019-03-27 </div> </div> <div class="_2eMTs2JE_0"> 
<div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class=""></span> </div> <!----> <!----> 
</div> </div> <div class="_3M6kV3zb_0"> 想问下对于没有垃圾回收的语言，如 C++，经过 Truffle 解释后，在 JVM 上运行的时候还有 
GC 吗？是有 native 方法直接调用对象的析构吗？ </div> <div class="_2r3UB1GX_0"> <span>展开</span><i class="iconfont"></i> 
</div> <!----> </div></li>', 0, 'full_html', 'zh-hans', 6, 6) 
 {executed in 1 msec}
2020-11-19 20:06:04.690 INFO  jdbc.sqltiming Line:373 - select nodefieldc0_.entity_id as entity_i1_14_0_, nodefieldc0_.bundle as bundle2_14_0_, nodefieldc0_.field_comment_value 
as field_co3_14_0_, nodefieldc0_.delta as delta4_14_0_, nodefieldc0_.field_comment_format as 
field_co5_14_0_, nodefieldc0_.langcode as langcode6_14_0_, nodefieldc0_.revision_id as revision7_14_0_ 
from node_revision__field_comment nodefieldc0_ where nodefieldc0_.entity_id=6 
 {executed in 0 msec}
2020-11-19 20:06:04.691 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|--------------------|------|---------------------|---------|------------|
|entity_id |bundle |field_comment_value |delta |field_comment_format |langcode |revision_id |
|----------|-------|--------------------|------|---------------------|---------|------------|
|----------|-------|--------------------|------|---------------------|---------|------------|

2020-11-19 20:06:04.696 INFO  jdbc.sqltiming Line:373 - insert into node_revision__field_comment (bundle, field_comment_value, delta, field_comment_format, 
langcode, revision_id, entity_id) values ('book', '<li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/11/a9/84/c87b51ce.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>xiaobang</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2018-10-15 </div> </div> <div 
class="_2eMTs2JE_0"> <div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class="">1</span> 
</div> <!----> <!----> </div> </div> <div class="_3M6kV3zb_0"> 感觉truffle的特化和pypy的做法有点像，老师能否评价一下这两者呢？另外，truffle的特化相当于对每份目标语言源码都要搞一个新目标语言解释器，这样似乎比较耗时间，而性能测试说明性能比其它解释器要高，能解释一下为什么吗 
</div> <div class="_2r3UB1GX_0"> <span>展开</span><i class="iconfont"></i> </div> <div class="_2xNIY4NG_0"> 
<p class="_33BLbmw4_0">作者回复: 是挺像的。你可以看看Stefan Marr的专业学术文章<br>http://stefan-marr.de/papers/oopsla-marr-ducasse-meta-tracing-vs-partial-evaluation/<br><br>Truffle解释器本身会被partial 
evaluation和即时编译，相当于即时编译新目标语言了</p> </div> </div></li> <li class="reJj6Thl_0"><img src="http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLqDHFficypYouwztiatvzQWAPHt2X8R0Qge0iaat9dhfTjb0AFeicS3kjWJEjjMCSbwcoCYBOjK9aia8A/132" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>zzj</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2019-03-27 </div> </div> <div class="_2eMTs2JE_0"> 
<div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class=""></span> </div> <!----> <!----> 
</div> </div> <div class="_3M6kV3zb_0"> 想问下对于没有垃圾回收的语言，如 C++，经过 Truffle 解释后，在 JVM 上运行的时候还有 
GC 吗？是有 native 方法直接调用对象的析构吗？ </div> <div class="_2r3UB1GX_0"> <span>展开</span><i class="iconfont"></i> 
</div> <!----> </div></li>', 0, 'full_html', 'zh-hans', 6, 6) 
 {executed in 1 msec}
2020-11-19 20:06:04.703 INFO  jdbc.sqltiming Line:373 - select bookfieldt0_.entity_id as entity_i1_9_, bookfieldt0_.bundle as bundle2_9_, bookfieldt0_.delta 
as delta3_9_, bookfieldt0_.langcode as langcode4_9_, bookfieldt0_.revision_id as revision5_9_, 
bookfieldt0_.field_thumb_value as field_th6_9_ from node__field_thumb bookfieldt0_ where bookfieldt0_.entity_id=6 
 {executed in 1 msec}
2020-11-19 20:06:04.704 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------|------------------|
|entity_id |bundle |delta |langcode |revision_id |field_thumb_value |
|----------|-------|------|---------|------------|------------------|
|----------|-------|------|---------|------------|------------------|

2020-11-19 20:06:04.708 INFO  jdbc.sqltiming Line:373 - select bookfieldt0_.entity_id as entity_i1_9_0_, bookfieldt0_.bundle as bundle2_9_0_, bookfieldt0_.delta 
as delta3_9_0_, bookfieldt0_.langcode as langcode4_9_0_, bookfieldt0_.revision_id as revision5_9_0_, 
bookfieldt0_.field_thumb_value as field_th6_9_0_ from node__field_thumb bookfieldt0_ where 
bookfieldt0_.entity_id=6 
 {executed in 1 msec}
2020-11-19 20:06:04.710 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------|------------------|
|entity_id |bundle |delta |langcode |revision_id |field_thumb_value |
|----------|-------|------|---------|------------|------------------|
|----------|-------|------|---------|------------|------------------|

2020-11-19 20:06:04.715 INFO  jdbc.sqltiming Line:373 - insert into node__field_thumb (bundle, delta, langcode, revision_id, field_thumb_value, entity_id) 
values ('book', 0, 'zh-hans', 6, 'https://static001.geekbang.org/resource/image/a8/1c/a8388be707545fcb7a875c40c37f6c1c.jpg', 
6) 
 {executed in 1 msec}
2020-11-19 20:06:04.722 INFO  jdbc.sqltiming Line:373 - select nodefieldt0_.entity_id as entity_i1_18_0_, nodefieldt0_.bundle as bundle2_18_0_, nodefieldt0_.delta 
as delta3_18_0_, nodefieldt0_.langcode as langcode4_18_0_, nodefieldt0_.revision_id as revision5_18_0_, 
nodefieldt0_.field_thumb_value as field_th6_18_0_ from node_revision__field_thumb nodefieldt0_ 
where nodefieldt0_.entity_id=6 
 {executed in 1 msec}
2020-11-19 20:06:04.723 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------|------------------|
|entity_id |bundle |delta |langcode |revision_id |field_thumb_value |
|----------|-------|------|---------|------------|------------------|
|----------|-------|------|---------|------------|------------------|

2020-11-19 20:06:04.728 INFO  jdbc.sqltiming Line:373 - insert into node_revision__field_thumb (bundle, delta, langcode, revision_id, field_thumb_value, 
entity_id) values ('book', 0, 'zh-hans', 6, 'https://static001.geekbang.org/resource/image/a8/1c/a8388be707545fcb7a875c40c37f6c1c.jpg', 
6) 
 {executed in 1 msec}
2020-11-19 20:06:04.736 INFO  jdbc.sqltiming Line:373 - select bookfieldf0_.entity_id as entity_i1_6_0_, bookfieldf0_.bundle as bundle2_6_0_, bookfieldf0_.delta 
as delta3_6_0_, bookfieldf0_.field_fenlei_target_id as field_fe4_6_0_, bookfieldf0_.langcode 
as langcode5_6_0_, bookfieldf0_.revision_id as revision6_6_0_ from node__field_fenlei bookfieldf0_ 
where bookfieldf0_.entity_id=6 
 {executed in 1 msec}
2020-11-19 20:06:04.738 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------------|---------|------------|
|entity_id |bundle |delta |field_fenlei_target_id |langcode |revision_id |
|----------|-------|------|-----------------------|---------|------------|
|----------|-------|------|-----------------------|---------|------------|

2020-11-19 20:06:04.743 INFO  jdbc.sqltiming Line:373 - insert into node__field_fenlei (bundle, delta, field_fenlei_target_id, langcode, revision_id, 
entity_id) values ('book', 0, 1, 'zh-hans', 6, 6) 
 {executed in 1 msec}
2020-11-19 20:06:04.752 INFO  jdbc.sqltiming Line:373 - select nodefieldf0_.entity_id as entity_i1_15_0_, nodefieldf0_.bundle as bundle2_15_0_, nodefieldf0_.delta 
as delta3_15_0_, nodefieldf0_.field_fenlei_target_id as field_fe4_15_0_, nodefieldf0_.langcode 
as langcode5_15_0_, nodefieldf0_.revision_id as revision6_15_0_ from node_revision__field_fenlei 
nodefieldf0_ where nodefieldf0_.entity_id=6 
 {executed in 2 msec}
2020-11-19 20:06:04.754 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------------|---------|------------|
|entity_id |bundle |delta |field_fenlei_target_id |langcode |revision_id |
|----------|-------|------|-----------------------|---------|------------|
|----------|-------|------|-----------------------|---------|------------|

2020-11-19 20:06:04.759 INFO  jdbc.sqltiming Line:373 - insert into node_revision__field_fenlei (bundle, delta, field_fenlei_target_id, langcode, revision_id, 
entity_id) values ('book', 0, 1, 'zh-hans', 6, 6) 
 {executed in 1 msec}
2020-11-19 20:06:04.768 INFO  jdbc.sqltiming Line:373 - select bookchecke0_.item_id as item_id1_2_, bookchecke0_.fsid as fsid2_2_, bookchecke0_.got 
as got3_2_, bookchecke0_.name as name4_2_ from book_check bookchecke0_ where bookchecke0_.fsid='262043916344024' 
and bookchecke0_.name='net_content' 
 {executed in 2 msec}
2020-11-19 20:06:04.769 INFO  jdbc.resultsettable Line:610 - 
|--------|-----|----|-----|
|item_id |fsid |got |name |
|--------|-----|----|-----|
|--------|-----|----|-----|

2020-11-19 20:06:21.740 INFO  jdbc.sqltiming Line:373 - select bookchecke0_.item_id as item_id1_2_, bookchecke0_.fsid as fsid2_2_, bookchecke0_.got 
as got3_2_, bookchecke0_.name as name4_2_ from book_check bookchecke0_ where bookchecke0_.fsid='262043916344024' 
and bookchecke0_.name='net_content' 
 {executed in 1 msec}
2020-11-19 20:06:21.743 INFO  jdbc.resultsettable Line:610 - 
|--------|-----|----|-----|
|item_id |fsid |got |name |
|--------|-----|----|-----|
|--------|-----|----|-----|

2020-11-19 20:06:21.748 INFO  jdbc.sqltiming Line:373 - insert into book_check (fsid, got, name) values ('262043916344024', 1, 'net_content') 
 {executed in 1 msec}
2020-11-19 20:06:21.750 INFO  jdbc.sqltiming Line:373 - getGeneratedKeys on query: insert into book_check (fsid, got, name) values ('262043916344024', 
1, 'net_content') 
 {executed in 1 msec}
2020-11-19 20:06:21.751 INFO  jdbc.resultsettable Line:610 - 
|--------------|
|generated_key |
|--------------|
|19            |
|--------------|

2020-11-19 20:06:21.762 INFO  jdbc.sqltiming Line:373 - select bookchecke0_.item_id as item_id1_2_, bookchecke0_.fsid as fsid2_2_, bookchecke0_.got 
as got3_2_, bookchecke0_.name as name4_2_ from book_check bookchecke0_ where bookchecke0_.fsid='262043916344024' 
and bookchecke0_.name='media' 
 {executed in 1 msec}
2020-11-19 20:06:21.764 INFO  jdbc.resultsettable Line:610 - 
|--------|-----|----|-----|
|item_id |fsid |got |name |
|--------|-----|----|-----|
|--------|-----|----|-----|

2020-11-19 20:06:22.292 INFO  jdbc.sqltiming Line:373 - select bookchecke0_.item_id as item_id1_2_, bookchecke0_.fsid as fsid2_2_, bookchecke0_.got 
as got3_2_, bookchecke0_.name as name4_2_ from book_check bookchecke0_ where bookchecke0_.fsid='262043916344024' 
and bookchecke0_.name='media' 
 {executed in 1 msec}
2020-11-19 20:06:22.294 INFO  jdbc.resultsettable Line:610 - 
|--------|-----|----|-----|
|item_id |fsid |got |name |
|--------|-----|----|-----|
|--------|-----|----|-----|

2020-11-19 20:06:22.298 INFO  jdbc.sqltiming Line:373 - insert into book_check (fsid, got, name) values ('262043916344024', 1, 'media') 
 {executed in 1 msec}
2020-11-19 20:06:22.300 INFO  jdbc.sqltiming Line:373 - getGeneratedKeys on query: insert into book_check (fsid, got, name) values ('262043916344024', 
1, 'media') 
 {executed in 1 msec}
2020-11-19 20:06:22.302 INFO  jdbc.resultsettable Line:610 - 
|--------------|
|generated_key |
|--------------|
|20            |
|--------------|

2020-11-19 20:06:22.312 INFO  jdbc.sqltiming Line:373 - select bookfieldf0_.entity_id as entity_i1_7_, bookfieldf0_.bundle as bundle2_7_, bookfieldf0_.delta 
as delta3_7_, bookfieldf0_.field_fsid_value as field_fs4_7_, bookfieldf0_.langcode as langcode5_7_, 
bookfieldf0_.revision_id as revision6_7_ from node__field_fsid bookfieldf0_ where bookfieldf0_.field_fsid_value='262043916344024' 
 {executed in 1 msec}
2020-11-19 20:06:22.314 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------|---------|------------|
|entity_id |bundle |delta |field_fsid_value |langcode |revision_id |
|----------|-------|------|-----------------|---------|------------|
|----------|-------|------|-----------------|---------|------------|

2020-11-19 20:06:22.318 INFO  jdbc.sqltiming Line:373 - insert into node_revision (langcode, nid, revision_default, revision_timestamp, revision_uid) 
values ('zh-hans', 0, 1, 1605787582, 1) 
 {executed in 1 msec}
2020-11-19 20:06:22.319 INFO  jdbc.sqltiming Line:373 - getGeneratedKeys on query: insert into node_revision (langcode, nid, revision_default, revision_timestamp, 
revision_uid) values ('zh-hans', 0, 1, 1605787582, 1) 
 {executed in 0 msec}
2020-11-19 20:06:22.320 INFO  jdbc.resultsettable Line:610 - 
|--------------|
|generated_key |
|--------------|
|7             |
|--------------|

2020-11-19 20:06:22.328 INFO  jdbc.sqltiming Line:373 - insert into node (langcode, type, uuid, vid) values ('zh-hans', 'book', '81bc4693-9eb4-473b-8afa-d361f74844be', 
7) 
 {executed in 1 msec}
2020-11-19 20:06:22.329 INFO  jdbc.sqltiming Line:373 - getGeneratedKeys on query: insert into node (langcode, type, uuid, vid) values ('zh-hans', 
'book', '81bc4693-9eb4-473b-8afa-d361f74844be', 7) 
 {executed in 0 msec}
2020-11-19 20:06:22.331 INFO  jdbc.resultsettable Line:610 - 
|--------------|
|generated_key |
|--------------|
|7             |
|--------------|

2020-11-19 20:06:22.341 INFO  jdbc.sqltiming Line:373 - update node_revision set langcode='zh-hans', nid=7, revision_default=1, revision_timestamp=1605787582, 
revision_uid=1 where vid=7 
 {executed in 1 msec}
2020-11-19 20:06:22.350 INFO  jdbc.sqltiming Line:373 - select bookfieldf0_.entity_id as entity_i1_7_0_, bookfieldf0_.bundle as bundle2_7_0_, bookfieldf0_.delta 
as delta3_7_0_, bookfieldf0_.field_fsid_value as field_fs4_7_0_, bookfieldf0_.langcode as langcode5_7_0_, 
bookfieldf0_.revision_id as revision6_7_0_ from node__field_fsid bookfieldf0_ where bookfieldf0_.entity_id=7 
 {executed in 2 msec}
2020-11-19 20:06:22.351 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------|---------|------------|
|entity_id |bundle |delta |field_fsid_value |langcode |revision_id |
|----------|-------|------|-----------------|---------|------------|
|----------|-------|------|-----------------|---------|------------|

2020-11-19 20:06:22.356 INFO  jdbc.sqltiming Line:373 - insert into node__field_fsid (bundle, delta, field_fsid_value, langcode, revision_id, entity_id) 
values ('book', 0, '262043916344024', 'zh-hans', 7, 7) 
 {executed in 1 msec}
2020-11-19 20:06:22.367 INFO  jdbc.sqltiming Line:373 - select nodefieldf0_.entity_id as entity_i1_16_0_, nodefieldf0_.bundle as bundle2_16_0_, nodefieldf0_.delta 
as delta3_16_0_, nodefieldf0_.field_fsid_value as field_fs4_16_0_, nodefieldf0_.langcode as 
langcode5_16_0_, nodefieldf0_.revision_id as revision6_16_0_ from node_revision__field_fsid 
nodefieldf0_ where nodefieldf0_.entity_id=7 
 {executed in 1 msec}
2020-11-19 20:06:22.369 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------|---------|------------|
|entity_id |bundle |delta |field_fsid_value |langcode |revision_id |
|----------|-------|------|-----------------|---------|------------|
|----------|-------|------|-----------------|---------|------------|

2020-11-19 20:06:22.373 INFO  jdbc.sqltiming Line:373 - insert into node_revision__field_fsid (bundle, delta, field_fsid_value, langcode, revision_id, 
entity_id) values ('book', 0, '262043916344024', 'zh-hans', 7, 7) 
 {executed in 1 msec}
2020-11-19 20:06:22.380 INFO  jdbc.sqltiming Line:373 - select bookentity0_.nid as nid1_1_, bookentity0_.bid as bid2_1_, bookentity0_.depth as depth3_1_, 
bookentity0_.has_children as has_chil4_1_, bookentity0_.p1 as p5_1_, bookentity0_.p2 as p6_1_, 
bookentity0_.p3 as p7_1_, bookentity0_.p4 as p8_1_, bookentity0_.p5 as p9_1_, bookentity0_.pid 
as pid10_1_, bookentity0_.weight as weight11_1_ from book bookentity0_ where bookentity0_.nid=7 
 {executed in 1 msec}
2020-11-19 20:06:22.382 INFO  jdbc.resultsettable Line:610 - 
|----|----|------|-------------|---|---|---|---|---|----|-------|
|nid |bid |depth |has_children |p1 |p2 |p3 |p4 |p5 |pid |weight |
|----|----|------|-------------|---|---|---|---|---|----|-------|
|----|----|------|-------------|---|---|---|---|---|----|-------|

2020-11-19 20:06:22.387 INFO  jdbc.sqltiming Line:373 - select bookentity0_.nid as nid1_1_0_, bookentity0_.bid as bid2_1_0_, bookentity0_.depth as 
depth3_1_0_, bookentity0_.has_children as has_chil4_1_0_, bookentity0_.p1 as p5_1_0_, bookentity0_.p2 
as p6_1_0_, bookentity0_.p3 as p7_1_0_, bookentity0_.p4 as p8_1_0_, bookentity0_.p5 as p9_1_0_, 
bookentity0_.pid as pid10_1_0_, bookentity0_.weight as weight11_1_0_ from book bookentity0_ 
where bookentity0_.nid=7 
 {executed in 1 msec}
2020-11-19 20:06:22.389 INFO  jdbc.resultsettable Line:610 - 
|----|----|------|-------------|---|---|---|---|---|----|-------|
|nid |bid |depth |has_children |p1 |p2 |p3 |p4 |p5 |pid |weight |
|----|----|------|-------------|---|---|---|---|---|----|-------|
|----|----|------|-------------|---|---|---|---|---|----|-------|

2020-11-19 20:06:22.394 INFO  jdbc.sqltiming Line:373 - insert into book (bid, depth, has_children, p1, p2, p3, p4, p5, pid, weight, nid) values (1, 
3, 0, 1, 4, 7, 0, 0, 4, 0, 7) 
 {executed in 1 msec}
2020-11-19 20:06:22.402 INFO  jdbc.sqltiming Line:373 - select nodebodyen0_.entity_id as entity_i1_4_, nodebodyen0_.body_value as body_val2_4_, nodebodyen0_.body_summary 
as body_sum3_4_, nodebodyen0_.bundle as bundle4_4_, nodebodyen0_.delta as delta5_4_, nodebodyen0_.body_format 
as body_for6_4_, nodebodyen0_.langcode as langcode7_4_, nodebodyen0_.revision_id as revision8_4_ 
from node__body nodebodyen0_ where nodebodyen0_.entity_id=7 
 {executed in 2 msec}
2020-11-19 20:06:22.404 INFO  jdbc.resultsettable Line:610 - 
|----------|-----------|-------------|-------|------|------------|---------|------------|
|entity_id |body_value |body_summary |bundle |delta |body_format |langcode |revision_id |
|----------|-----------|-------------|-------|------|------------|---------|------------|
|----------|-----------|-------------|-------|------|------------|---------|------------|

2020-11-19 20:06:22.409 INFO  jdbc.sqltiming Line:373 - select nodebodyre0_.entity_id as entity_i1_13_0_, nodebodyre0_.body_value as body_val2_13_0_, 
nodebodyre0_.body_summary as body_sum3_13_0_, nodebodyre0_.bundle as bundle4_13_0_, nodebodyre0_.delta 
as delta5_13_0_, nodebodyre0_.body_format as body_for6_13_0_, nodebodyre0_.langcode as langcode7_13_0_, 
nodebodyre0_.revision_id as revision8_13_0_ from node_revision__body nodebodyre0_ where nodebodyre0_.entity_id=7 
 {executed in 1 msec}
2020-11-19 20:06:22.411 INFO  jdbc.resultsettable Line:610 - 
|----------|-----------|-------------|-------|------|------------|---------|------------|
|entity_id |body_value |body_summary |bundle |delta |body_format |langcode |revision_id |
|----------|-----------|-------------|-------|------|------------|---------|------------|
|----------|-----------|-------------|-------|------|------------|---------|------------|

2020-11-19 20:06:22.421 INFO  jdbc.sqltiming Line:373 - insert into node_revision__body (body_value, body_summary, bundle, delta, body_format, langcode, 
revision_id, entity_id) values ('<p>最后这三篇文章，我将介绍 Oracle Labs 的 GraalVM 项目。</p> <p>GraalVM 是一个高性能的、支持多种编程语言的执行环境。它既可以在传统的 
OpenJDK 上运行，也可以通过 AOT（Ahead-Of-Time）编译成可执行文件单独运行，甚至可以集成至数据库中运行。</p> <p>除此之外，它还移除了编程语言之间的边界，并且支持通过即时编译技术，将混杂了不同的编程语言的代码编译到同一段二进制码之中，从而实现不同语言之间的无缝切换。</p> 
<p>今天这一篇，我们就来讲讲 GraalVM 的基石 Graal 编译器。</p> <p>在之前的篇章中，特别是介绍即时编译技术的第二部分，我们反反复复提到了 Graal 编译器。这是一个用 
Java 写就的即时编译器，它从 Java 9u 开始便被集成自 JDK 中，作为实验性质的即时编译器。</p> <p>Graal 编译器可以通过 Java 虚拟机参数<code>-XX:+UnlockExperimentalVMOptions 
-XX:+UseJVMCICompiler</code>启用。当启用时，它将替换掉 HotSpot 中的 C2 编译器，并响应原本由 C2 负责的编译请求。</p> <p>在今天的文章中，我将详细跟你介绍一下 
Graal 与 Java 虚拟机的交互、Graal 和 C2 的区别以及 Graal 的实现细节。</p><!-- [[[read_end]]] --> <h2>Graal 和 Java 
虚拟机的交互</h2> <p>我们知道，即时编译器是 Java 虚拟机中相对独立的模块，它主要负责接收 Java 字节码，并生成可以直接运行的二进制码。</p> <p>具体来说，即时编译器与 
Java 虚拟机的交互可以分为如下三个方面。</p> <ol> <li>响应编译请求；</li> <li>获取编译所需的元数据（如类、方法、字段）和反映程序执行状态的 profile；</li> 
<li>将生成的二进制码部署至代码缓存（code cache）里。</li> </ol> <p>即时编译器通过这三个功能组成了一个响应编译请求、获取编译所需的数据，完成编译并部署的完整编译周期。</p> 
<p>传统情况下，即时编译器是与 Java 虚拟机紧耦合的。也就是说，对即时编译器的更改需要重新编译整个 Java 虚拟机。这对于开发相对活跃的 Graal 来说显然是不可接受的。</p> 
<p>为了让 Java 虚拟机与 Graal 解耦合，我们引入了<a href="http://openjdk.java.net/jeps/243">Java 虚拟机编译器接口</a>（JVM 
Compiler Interface，JVMCI），将上述三个功能抽象成一个 Java 层面的接口。这样一来，在 Graal 所依赖的 JVMCI 版本不变的情况下，我们仅需要替换 
Graal 编译器相关的 jar 包（Java 9 以后的 jmod 文件），便可完成对 Graal 的升级。</p> <p>JVMCI 的作用并不局限于完成由 Java 虚拟机发出的编译请求。实际上，Java 
程序可以直接调用 Graal，编译并部署指定方法。</p> <p>Graal 的单元测试便是基于这项技术。为了测试某项优化是否起作用，原本我们需要反复运行某一测试方法，直至 Graal 
收到由 Java 虚拟机发出针对该方法的编译请求，而现在我们可以直接指定编译该方法，并进行测试。我们下一篇将介绍的 Truffle 语言实现框架，同样也是基于这项技术的。</p> <h2>Graal 
和 C2 的区别</h2> <p>Graal 和 C2 最为明显的一个区别是：Graal 是用 Java 写的，而 C2 是用 C++ 写的。相对来说，Graal 更加模块化，也更容易开发与维护，毕竟，连 
C2 的作者 Cliff Click 大神都不想重蹈用 C++ 开发 Java 虚拟机的覆辙。</p> <p>许多开发者会觉得用 C++ 写的 C2 肯定要比 Graal 快。实际上，在充分预热的情况下，Java 
程序中的热点代码早已经通过即时编译转换为二进制码，在执行速度上并不亚于静态编译的 C++ 程序。</p> <p>再者，即便是解释执行 Graal，也仅是会减慢编译效率，而并不影响编译结果的性能。</p> 
<p>换句话说，如果 C2 和 Graal 采用相同的优化手段，那么它们的编译结果是一样的。所以，程序达到稳定状态（即不再触发新的即时编译）的性能，也就是峰值性能，将也是一样的。</p> 
<p>由于 Java 语言容易开发维护的优势，我们可以很方便地将 C2 的新优化移植到 Graal 中。反之则不然，比如，在 Graal 中被证实有效的部分逃逸分析（partial 
escape analysis）至今未被移植到 C2 中。</p> <p>Graal 和 C2 另一个优化上的分歧则是方法内联算法。相对来说，Graal 的内联算法对新语法、新语言更加友好，例如 
Java 8 的 lambda 表达式以及 Scala 语言。</p> <p>我们曾统计过数十个 Java 或 Scala 程序的峰值性能。总体而言，Graal 编译结果的性能要优于 
C2。对于 Java 程序来说，Graal 的优势并不明显；对于 Scala 程序来说，Graal 的性能优势达到了 10%。</p> <p>大规模使用 Scala 的 Twitter 
便在他们的生产环境中部署了 Graal 编译器，并取得了 11% 的性能提升。（<a href="https://downloads.ctfassets.net/oxjq45e8ilak/6eh2A72b4IyWsWOIcig4K0/cbb664566fe86672d92ddfb210623920/Chris_Thalinger_Twitter_s_quest_for_a_wholly_Graal_runtime.pdf">Slides</a>, 
<a href="https://youtu.be/G-vlQaPMAxg?t=20m15s">Video</a>，该数据基于 GraalVM 社区版。）</p> <h2>Graal 
的实现</h2> <p>Graal 编译器将编译过程分为前端和后端两大部分。前端用于实现平台无关的优化（如方法内联），以及小部分平台相关的优化；而后端则负责大部分的平台相关优化（如寄存器分配），以及机器码的生成。</p> 
<p>在介绍即时编译技术时，我曾提到过，Graal 和 C2 都采用了 Sea-of-Nodes IR。严格来说，这里指的是 Graal 的前端，而后端采用的是另一种非 Sea-of-Nodes 
的 IR。通常，我们将前端的 IR 称之为 High-level IR，或者 HIR；后端的 IR 则称之为 Low-level IR，或者 LIR。</p> <p>Graal 的前端是由一个个单独的优化阶段（optimization 
phase）构成的。我们可以将每个优化阶段想象成一个图算法：它会接收一个规则的图，遍历图上的节点并做出优化，并且返回另一个规则的图。前端中的编译阶段除了少数几个关键的之外，其余均可以通过配置选项来开启或关闭。</p> 
<p><img src="https://static001.geekbang.org/resource/image/d9/b8/d9772c569c25eabb7c2e7af53878e3b8.png" 
alt=""></p> <p>Graal 编译器前端的优化阶段（局部）</p> <blockquote> <p>感兴趣的同学可以阅读 Graal repo 里配置这些编译优化阶段的源文件<br> 
<a href="https://github.com/oracle/graal/blob/master/compiler/src/org.graalvm.compiler.core/src/org/graalvm/compiler/core/phases/HighTier.java">HighTier.java</a>，<a 
href="https://github.com/oracle/graal/blob/master/compiler/src/org.graalvm.compiler.core/src/org/graalvm/compiler/core/phases/MidTier.java">MidTier.java</a>，以及<a 
href="https://github.com/oracle/graal/blob/master/compiler/src/org.graalvm.compiler.core/src/org/graalvm/compiler/core/phases/LowTier.java">LowTier.java</a>。</p> 
</blockquote> <p>我们知道，Graal 和 C2 都采用了激进的投机性优化手段（speculative optimization）。</p> <p>通常，这些优化都基于某种假设（assumption）。当假设出错的情况下，Java 
虚拟机会借助去优化（deoptimization）这项机制，从执行即时编译器生成的机器码切换回解释执行，在必要情况下，它甚至会废弃这份机器码，并在重新收集程序 profile 之后，再进行编译。</p> 
<p>举个以前讲过的例子，类层次分析。在进行虚方法内联时（或者其他与类层次相关的优化），我们可能会发现某个接口仅有一个实现。</p> <p>在即时编译过程中，我们可以假设在之后的执行过程中仍旧只有这一个实现，并根据这个假设进行编译优化。当之后加载了接口的另一实现时，我们便会废弃这份机器码。</p> 
<p>Graal 与 C2 相比会更加激进。它从设计上便十分青睐这种基于假设的优化手段。在编译过程中，Graal 支持自定义假设，并且直接与去优化节点相关联。</p> <p>当对应的去优化被触发时，Java 
虚拟机将负责记录对应的自定义假设。而 Graal 在第二次编译同一方法时，便会知道该自定义假设有误，从而不再对该方法使用相同的激进优化。</p> <p>Java 虚拟机的另一个能够大幅度提升性能的特性是 
intrinsic 方法，我在之前的篇章中已经详细介绍过了。在 Graal 中，实现高性能的 intrinsic 方法也相对比较简单。Graal 提供了一种替换方法调用的机制，在解析 
Java 字节码时会将匹配到的方法调用，替换成对另一个内部方法的调用，或者直接替换为特殊节点。</p> <p>举例来说，我们可以把比较两个 byte 数组的方法<code>java.util.Arrays.equals(byte[],byte[])</code>替换成一个特殊节点，用来代表整个数组比较的逻辑。这样一来，当前编译方法所对应的图将被简化，因而其适用于其他优化的可能性也将提升。</p> 
<h2>总结与实践</h2> <p>Graal 是一个用 Java 写就的、并能够将 Java 字节码转换成二进制码的即时编译器。它通过 JVMCI 与 Java 虚拟机交互，响应由后者发出的编译请求、完成编译并部署编译结果。</p> 
<p>对 Java 程序而言，Graal 编译结果的性能略优于 OpenJDK 中的 C2；对 Scala 程序而言，它的性能优势可达到 10%（企业版甚至可以达到 20%！）。这背后离不开 
Graal 所采用的激进优化方式。</p> <hr> <p>今天的实践环节，你可以尝试使用附带 Graal 编译器的 JDK。在 Java 10，11 中，你可以通过添加虚拟机参数<code>-XX:+UnlockExperimentalVMOptions 
-XX:+UseJVMCICompiler</code>来启用，或者下载我们部署在<a href="https://www.oracle.com/technetwork/oracle-labs/program-languages/downloads/index.html">Oracle 
OTN</a>上的基于 Java 8 的版本。</p> <blockquote> <p>在刚开始运行的过程中，Graal 编译器本身需要被即时编译，会抢占原本可用于编译应用代码的计算资源。因此，目前 
Graal 编译器的启动性能会较差。最后一篇我会介绍解决方案。</p> </blockquote> <p><img src="https://static001.geekbang.org/resource/image/2a/d5/2a62e58cbdf56a5dc40748567d346fd5.jpg" 
alt=""></p>', '', 'book', 0, 'full_html', 'zh-hans', 7, 7) 
 {executed in 5 msec}
2020-11-19 20:06:22.432 INFO  jdbc.sqltiming Line:373 - select nodebodyen0_.entity_id as entity_i1_4_0_, nodebodyen0_.body_value as body_val2_4_0_, 
nodebodyen0_.body_summary as body_sum3_4_0_, nodebodyen0_.bundle as bundle4_4_0_, nodebodyen0_.delta 
as delta5_4_0_, nodebodyen0_.body_format as body_for6_4_0_, nodebodyen0_.langcode as langcode7_4_0_, 
nodebodyen0_.revision_id as revision8_4_0_ from node__body nodebodyen0_ where nodebodyen0_.entity_id=7 
 {executed in 2 msec}
2020-11-19 20:06:22.434 INFO  jdbc.resultsettable Line:610 - 
|----------|-----------|-------------|-------|------|------------|---------|------------|
|entity_id |body_value |body_summary |bundle |delta |body_format |langcode |revision_id |
|----------|-----------|-------------|-------|------|------------|---------|------------|
|----------|-----------|-------------|-------|------|------------|---------|------------|

2020-11-19 20:06:22.443 INFO  jdbc.sqltiming Line:373 - insert into node__body (body_value, body_summary, bundle, delta, body_format, langcode, revision_id, 
entity_id) values ('<p>最后这三篇文章，我将介绍 Oracle Labs 的 GraalVM 项目。</p> <p>GraalVM 是一个高性能的、支持多种编程语言的执行环境。它既可以在传统的 
OpenJDK 上运行，也可以通过 AOT（Ahead-Of-Time）编译成可执行文件单独运行，甚至可以集成至数据库中运行。</p> <p>除此之外，它还移除了编程语言之间的边界，并且支持通过即时编译技术，将混杂了不同的编程语言的代码编译到同一段二进制码之中，从而实现不同语言之间的无缝切换。</p> 
<p>今天这一篇，我们就来讲讲 GraalVM 的基石 Graal 编译器。</p> <p>在之前的篇章中，特别是介绍即时编译技术的第二部分，我们反反复复提到了 Graal 编译器。这是一个用 
Java 写就的即时编译器，它从 Java 9u 开始便被集成自 JDK 中，作为实验性质的即时编译器。</p> <p>Graal 编译器可以通过 Java 虚拟机参数<code>-XX:+UnlockExperimentalVMOptions 
-XX:+UseJVMCICompiler</code>启用。当启用时，它将替换掉 HotSpot 中的 C2 编译器，并响应原本由 C2 负责的编译请求。</p> <p>在今天的文章中，我将详细跟你介绍一下 
Graal 与 Java 虚拟机的交互、Graal 和 C2 的区别以及 Graal 的实现细节。</p><!-- [[[read_end]]] --> <h2>Graal 和 Java 
虚拟机的交互</h2> <p>我们知道，即时编译器是 Java 虚拟机中相对独立的模块，它主要负责接收 Java 字节码，并生成可以直接运行的二进制码。</p> <p>具体来说，即时编译器与 
Java 虚拟机的交互可以分为如下三个方面。</p> <ol> <li>响应编译请求；</li> <li>获取编译所需的元数据（如类、方法、字段）和反映程序执行状态的 profile；</li> 
<li>将生成的二进制码部署至代码缓存（code cache）里。</li> </ol> <p>即时编译器通过这三个功能组成了一个响应编译请求、获取编译所需的数据，完成编译并部署的完整编译周期。</p> 
<p>传统情况下，即时编译器是与 Java 虚拟机紧耦合的。也就是说，对即时编译器的更改需要重新编译整个 Java 虚拟机。这对于开发相对活跃的 Graal 来说显然是不可接受的。</p> 
<p>为了让 Java 虚拟机与 Graal 解耦合，我们引入了<a href="http://openjdk.java.net/jeps/243">Java 虚拟机编译器接口</a>（JVM 
Compiler Interface，JVMCI），将上述三个功能抽象成一个 Java 层面的接口。这样一来，在 Graal 所依赖的 JVMCI 版本不变的情况下，我们仅需要替换 
Graal 编译器相关的 jar 包（Java 9 以后的 jmod 文件），便可完成对 Graal 的升级。</p> <p>JVMCI 的作用并不局限于完成由 Java 虚拟机发出的编译请求。实际上，Java 
程序可以直接调用 Graal，编译并部署指定方法。</p> <p>Graal 的单元测试便是基于这项技术。为了测试某项优化是否起作用，原本我们需要反复运行某一测试方法，直至 Graal 
收到由 Java 虚拟机发出针对该方法的编译请求，而现在我们可以直接指定编译该方法，并进行测试。我们下一篇将介绍的 Truffle 语言实现框架，同样也是基于这项技术的。</p> <h2>Graal 
和 C2 的区别</h2> <p>Graal 和 C2 最为明显的一个区别是：Graal 是用 Java 写的，而 C2 是用 C++ 写的。相对来说，Graal 更加模块化，也更容易开发与维护，毕竟，连 
C2 的作者 Cliff Click 大神都不想重蹈用 C++ 开发 Java 虚拟机的覆辙。</p> <p>许多开发者会觉得用 C++ 写的 C2 肯定要比 Graal 快。实际上，在充分预热的情况下，Java 
程序中的热点代码早已经通过即时编译转换为二进制码，在执行速度上并不亚于静态编译的 C++ 程序。</p> <p>再者，即便是解释执行 Graal，也仅是会减慢编译效率，而并不影响编译结果的性能。</p> 
<p>换句话说，如果 C2 和 Graal 采用相同的优化手段，那么它们的编译结果是一样的。所以，程序达到稳定状态（即不再触发新的即时编译）的性能，也就是峰值性能，将也是一样的。</p> 
<p>由于 Java 语言容易开发维护的优势，我们可以很方便地将 C2 的新优化移植到 Graal 中。反之则不然，比如，在 Graal 中被证实有效的部分逃逸分析（partial 
escape analysis）至今未被移植到 C2 中。</p> <p>Graal 和 C2 另一个优化上的分歧则是方法内联算法。相对来说，Graal 的内联算法对新语法、新语言更加友好，例如 
Java 8 的 lambda 表达式以及 Scala 语言。</p> <p>我们曾统计过数十个 Java 或 Scala 程序的峰值性能。总体而言，Graal 编译结果的性能要优于 
C2。对于 Java 程序来说，Graal 的优势并不明显；对于 Scala 程序来说，Graal 的性能优势达到了 10%。</p> <p>大规模使用 Scala 的 Twitter 
便在他们的生产环境中部署了 Graal 编译器，并取得了 11% 的性能提升。（<a href="https://downloads.ctfassets.net/oxjq45e8ilak/6eh2A72b4IyWsWOIcig4K0/cbb664566fe86672d92ddfb210623920/Chris_Thalinger_Twitter_s_quest_for_a_wholly_Graal_runtime.pdf">Slides</a>, 
<a href="https://youtu.be/G-vlQaPMAxg?t=20m15s">Video</a>，该数据基于 GraalVM 社区版。）</p> <h2>Graal 
的实现</h2> <p>Graal 编译器将编译过程分为前端和后端两大部分。前端用于实现平台无关的优化（如方法内联），以及小部分平台相关的优化；而后端则负责大部分的平台相关优化（如寄存器分配），以及机器码的生成。</p> 
<p>在介绍即时编译技术时，我曾提到过，Graal 和 C2 都采用了 Sea-of-Nodes IR。严格来说，这里指的是 Graal 的前端，而后端采用的是另一种非 Sea-of-Nodes 
的 IR。通常，我们将前端的 IR 称之为 High-level IR，或者 HIR；后端的 IR 则称之为 Low-level IR，或者 LIR。</p> <p>Graal 的前端是由一个个单独的优化阶段（optimization 
phase）构成的。我们可以将每个优化阶段想象成一个图算法：它会接收一个规则的图，遍历图上的节点并做出优化，并且返回另一个规则的图。前端中的编译阶段除了少数几个关键的之外，其余均可以通过配置选项来开启或关闭。</p> 
<p><img src="https://static001.geekbang.org/resource/image/d9/b8/d9772c569c25eabb7c2e7af53878e3b8.png" 
alt=""></p> <p>Graal 编译器前端的优化阶段（局部）</p> <blockquote> <p>感兴趣的同学可以阅读 Graal repo 里配置这些编译优化阶段的源文件<br> 
<a href="https://github.com/oracle/graal/blob/master/compiler/src/org.graalvm.compiler.core/src/org/graalvm/compiler/core/phases/HighTier.java">HighTier.java</a>，<a 
href="https://github.com/oracle/graal/blob/master/compiler/src/org.graalvm.compiler.core/src/org/graalvm/compiler/core/phases/MidTier.java">MidTier.java</a>，以及<a 
href="https://github.com/oracle/graal/blob/master/compiler/src/org.graalvm.compiler.core/src/org/graalvm/compiler/core/phases/LowTier.java">LowTier.java</a>。</p> 
</blockquote> <p>我们知道，Graal 和 C2 都采用了激进的投机性优化手段（speculative optimization）。</p> <p>通常，这些优化都基于某种假设（assumption）。当假设出错的情况下，Java 
虚拟机会借助去优化（deoptimization）这项机制，从执行即时编译器生成的机器码切换回解释执行，在必要情况下，它甚至会废弃这份机器码，并在重新收集程序 profile 之后，再进行编译。</p> 
<p>举个以前讲过的例子，类层次分析。在进行虚方法内联时（或者其他与类层次相关的优化），我们可能会发现某个接口仅有一个实现。</p> <p>在即时编译过程中，我们可以假设在之后的执行过程中仍旧只有这一个实现，并根据这个假设进行编译优化。当之后加载了接口的另一实现时，我们便会废弃这份机器码。</p> 
<p>Graal 与 C2 相比会更加激进。它从设计上便十分青睐这种基于假设的优化手段。在编译过程中，Graal 支持自定义假设，并且直接与去优化节点相关联。</p> <p>当对应的去优化被触发时，Java 
虚拟机将负责记录对应的自定义假设。而 Graal 在第二次编译同一方法时，便会知道该自定义假设有误，从而不再对该方法使用相同的激进优化。</p> <p>Java 虚拟机的另一个能够大幅度提升性能的特性是 
intrinsic 方法，我在之前的篇章中已经详细介绍过了。在 Graal 中，实现高性能的 intrinsic 方法也相对比较简单。Graal 提供了一种替换方法调用的机制，在解析 
Java 字节码时会将匹配到的方法调用，替换成对另一个内部方法的调用，或者直接替换为特殊节点。</p> <p>举例来说，我们可以把比较两个 byte 数组的方法<code>java.util.Arrays.equals(byte[],byte[])</code>替换成一个特殊节点，用来代表整个数组比较的逻辑。这样一来，当前编译方法所对应的图将被简化，因而其适用于其他优化的可能性也将提升。</p> 
<h2>总结与实践</h2> <p>Graal 是一个用 Java 写就的、并能够将 Java 字节码转换成二进制码的即时编译器。它通过 JVMCI 与 Java 虚拟机交互，响应由后者发出的编译请求、完成编译并部署编译结果。</p> 
<p>对 Java 程序而言，Graal 编译结果的性能略优于 OpenJDK 中的 C2；对 Scala 程序而言，它的性能优势可达到 10%（企业版甚至可以达到 20%！）。这背后离不开 
Graal 所采用的激进优化方式。</p> <hr> <p>今天的实践环节，你可以尝试使用附带 Graal 编译器的 JDK。在 Java 10，11 中，你可以通过添加虚拟机参数<code>-XX:+UnlockExperimentalVMOptions 
-XX:+UseJVMCICompiler</code>来启用，或者下载我们部署在<a href="https://www.oracle.com/technetwork/oracle-labs/program-languages/downloads/index.html">Oracle 
OTN</a>上的基于 Java 8 的版本。</p> <blockquote> <p>在刚开始运行的过程中，Graal 编译器本身需要被即时编译，会抢占原本可用于编译应用代码的计算资源。因此，目前 
Graal 编译器的启动性能会较差。最后一篇我会介绍解决方案。</p> </blockquote> <p><img src="https://static001.geekbang.org/resource/image/2a/d5/2a62e58cbdf56a5dc40748567d346fd5.jpg" 
alt=""></p>', '', 'book', 0, 'full_html', 'zh-hans', 7, 7) 
 {executed in 4 msec}
2020-11-19 20:06:22.453 INFO  jdbc.sqltiming Line:373 - select nodefiledd0_.nid as nid1_10_, nodefiledd0_.changed as changed2_10_, nodefiledd0_.created 
as created3_10_, nodefiledd0_.default_langcode as default_4_10_, nodefiledd0_.langcode as langcode5_10_, 
nodefiledd0_.promote as promote6_10_, nodefiledd0_.revision_translation_affected as revision7_10_, 
nodefiledd0_.status as status8_10_, nodefiledd0_.sticky as sticky9_10_, nodefiledd0_.title 
as title10_10_, nodefiledd0_.type as type11_10_, nodefiledd0_.uid as uid12_10_, nodefiledd0_.vid 
as vid13_10_ from node_field_data nodefiledd0_ where nodefiledd0_.nid=7 
 {executed in 2 msec}
2020-11-19 20:06:22.455 INFO  jdbc.resultsettable Line:610 - 
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|-----|----|----|
|nid |changed |created |default_langcode |langcode |promote |revision_translation_affected |status |sticky |title |type |uid |vid |
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|-----|----|----|
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|-----|----|----|

2020-11-19 20:06:22.459 INFO  jdbc.sqltiming Line:373 - select nodefieldr0_.nid as nid1_11_0_, nodefieldr0_.changed as changed2_11_0_, nodefieldr0_.created 
as created3_11_0_, nodefieldr0_.default_langcode as default_4_11_0_, nodefieldr0_.langcode 
as langcode5_11_0_, nodefieldr0_.promote as promote6_11_0_, nodefieldr0_.revision_translation_affected 
as revision7_11_0_, nodefieldr0_.status as status8_11_0_, nodefieldr0_.sticky as sticky9_11_0_, 
nodefieldr0_.title as title10_11_0_, nodefieldr0_.uid as uid11_11_0_, nodefieldr0_.vid as vid12_11_0_ 
from node_field_revision nodefieldr0_ where nodefieldr0_.nid=7 
 {executed in 1 msec}
2020-11-19 20:06:22.462 INFO  jdbc.resultsettable Line:610 - 
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|----|----|
|nid |changed |created |default_langcode |langcode |promote |revision_translation_affected |status |sticky |title |uid |vid |
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|----|----|
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|----|----|

2020-11-19 20:06:22.466 INFO  jdbc.sqltiming Line:373 - insert into node_field_revision (changed, created, default_langcode, langcode, promote, revision_translation_affected, 
status, sticky, title, uid, vid, nid) values (1605787582, 1605787582, 1, 'zh-hans', 0, 1, 1, 
0, '34丨Graal：用Java编译Java', 1, 7, 7) 
 {executed in 0 msec}
2020-11-19 20:06:22.473 INFO  jdbc.sqltiming Line:373 - select nodefiledd0_.nid as nid1_10_0_, nodefiledd0_.changed as changed2_10_0_, nodefiledd0_.created 
as created3_10_0_, nodefiledd0_.default_langcode as default_4_10_0_, nodefiledd0_.langcode 
as langcode5_10_0_, nodefiledd0_.promote as promote6_10_0_, nodefiledd0_.revision_translation_affected 
as revision7_10_0_, nodefiledd0_.status as status8_10_0_, nodefiledd0_.sticky as sticky9_10_0_, 
nodefiledd0_.title as title10_10_0_, nodefiledd0_.type as type11_10_0_, nodefiledd0_.uid as 
uid12_10_0_, nodefiledd0_.vid as vid13_10_0_ from node_field_data nodefiledd0_ where nodefiledd0_.nid=7 
 {executed in 1 msec}
2020-11-19 20:06:22.475 INFO  jdbc.resultsettable Line:610 - 
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|-----|----|----|
|nid |changed |created |default_langcode |langcode |promote |revision_translation_affected |status |sticky |title |type |uid |vid |
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|-----|----|----|
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|-----|----|----|

2020-11-19 20:06:22.480 INFO  jdbc.sqltiming Line:373 - insert into node_field_data (changed, created, default_langcode, langcode, promote, revision_translation_affected, 
status, sticky, title, type, uid, vid, nid) values (1605787582, 1605787582, 1, 'zh-hans', 0, 
1, 1, 0, '34丨Graal：用Java编译Java', 'book', 1, 7, 7) 
 {executed in 1 msec}
2020-11-19 20:06:22.488 INFO  jdbc.sqltiming Line:373 - select bookfieldm0_.entity_id as entity_i1_8_, bookfieldm0_.bundle as bundle2_8_, bookfieldm0_.delta 
as delta3_8_, bookfieldm0_.langcode as langcode4_8_, bookfieldm0_.field_media_value as field_me5_8_, 
bookfieldm0_.revision_id as revision6_8_ from node__field_media bookfieldm0_ where bookfieldm0_.entity_id=7 
 {executed in 1 msec}
2020-11-19 20:06:22.490 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------------|------------|
|entity_id |bundle |delta |langcode |field_media_value |revision_id |
|----------|-------|------|---------|------------------|------------|
|----------|-------|------|---------|------------------|------------|

2020-11-19 20:06:22.495 INFO  jdbc.sqltiming Line:373 - select bookfieldm0_.entity_id as entity_i1_8_0_, bookfieldm0_.bundle as bundle2_8_0_, bookfieldm0_.delta 
as delta3_8_0_, bookfieldm0_.langcode as langcode4_8_0_, bookfieldm0_.field_media_value as 
field_me5_8_0_, bookfieldm0_.revision_id as revision6_8_0_ from node__field_media bookfieldm0_ 
where bookfieldm0_.entity_id=7 
 {executed in 1 msec}
2020-11-19 20:06:22.497 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------------|------------|
|entity_id |bundle |delta |langcode |field_media_value |revision_id |
|----------|-------|------|---------|------------------|------------|
|----------|-------|------|---------|------------------|------------|

2020-11-19 20:06:22.502 INFO  jdbc.sqltiming Line:373 - insert into node__field_media (bundle, delta, langcode, field_media_value, revision_id, entity_id) 
values ('book', 0, 'zh-hans', 'https://qdall01.baidupcs.com/file/3839ea98460c8033bcc04caaca95805d?bkt=en-e031c0692dcd5a21b4cb7693111845c799e7a33b95ee208f83d98238dd71076ab1a1fb36cbbfab68&fid=3757516097-778750-511946819806664&time=1605787580&sign=FDTAXUGERLQlBHSKfWqir-DCb740ccc5511e5e8fedcff06b081203-zUrwAvN8xp8JybnaLwf9PApzzMA%3D&to=92&size=4240475&sta_dx=4240475&sta_cs=2379&sta_ft=mp3&sta_ct=7&sta_mt=0&fm2=MH%2CQingdao%2CAnywhere%2C%2Cshanghai%2Ccnc&ctime=1567182978&mtime=1605787492&resv0=-1&resv1=0&resv2=rlim&resv3=2&resv4=4240475&vuk=3757516097&iv=0&htype=&randtype=em&newver=1&newfm=1&secfm=1&flow_ver=3&pkey=en-0bed853b34fed20e346cb63060a4d426e2eeb5c8b88abaa22da8d88f66548dd80dc31f58d430af19&sl=76480590&expires=8h&rt=pr&r=759710454&mlogid=7510711450029573311&vbdid=64799653&fin=34%E4%B8%A8Graal%EF%BC%9A%E7%94%A8Java%E7%BC%96%E8%AF%91Java.mp3&bflag=92,34-92&rtype=1&dp-logid=7510711450029573311&dp-callid=0.1.1&hps=1&tsl=80&csl=80&fsl=-1&csign=yVzLQPCt4DblfMLqd2BCjd2RnqQ%3D&so=0&ut=6&uter=0&serv=0&uc=1458616558&ti=1fcc15f39be93977ac68f640bb9f6eada1b6ed7493807f0a&hflag=30&adg=c_0f3c8fb981bae1fdae375754a6f1d609&reqlabel=778750_l_eeb31e180410b8be0e62f686c2b42c5d_-1_43d73532db4f9890a29565ef474ca519&ibp=1&by=themis&filename=34%E4%B8%A8Graal%EF%BC%9A%E7%94%A8Java%E7%BC%96%E8%AF%91Java.mp3', 
7, 7) 
 {executed in 1 msec}
2020-11-19 20:06:22.511 INFO  jdbc.sqltiming Line:373 - select nodefieldm0_.entity_id as entity_i1_17_0_, nodefieldm0_.bundle as bundle2_17_0_, nodefieldm0_.delta 
as delta3_17_0_, nodefieldm0_.langcode as langcode4_17_0_, nodefieldm0_.field_media_value as 
field_me5_17_0_, nodefieldm0_.revision_id as revision6_17_0_ from node_revision__field_media 
nodefieldm0_ where nodefieldm0_.entity_id=7 
 {executed in 2 msec}
2020-11-19 20:06:22.513 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------------|------------|
|entity_id |bundle |delta |langcode |field_media_value |revision_id |
|----------|-------|------|---------|------------------|------------|
|----------|-------|------|---------|------------------|------------|

2020-11-19 20:06:22.519 INFO  jdbc.sqltiming Line:373 - insert into node_revision__field_media (bundle, delta, langcode, field_media_value, revision_id, 
entity_id) values ('book', 0, 'zh-hans', 'https://qdall01.baidupcs.com/file/3839ea98460c8033bcc04caaca95805d?bkt=en-e031c0692dcd5a21b4cb7693111845c799e7a33b95ee208f83d98238dd71076ab1a1fb36cbbfab68&fid=3757516097-778750-511946819806664&time=1605787580&sign=FDTAXUGERLQlBHSKfWqir-DCb740ccc5511e5e8fedcff06b081203-zUrwAvN8xp8JybnaLwf9PApzzMA%3D&to=92&size=4240475&sta_dx=4240475&sta_cs=2379&sta_ft=mp3&sta_ct=7&sta_mt=0&fm2=MH%2CQingdao%2CAnywhere%2C%2Cshanghai%2Ccnc&ctime=1567182978&mtime=1605787492&resv0=-1&resv1=0&resv2=rlim&resv3=2&resv4=4240475&vuk=3757516097&iv=0&htype=&randtype=em&newver=1&newfm=1&secfm=1&flow_ver=3&pkey=en-0bed853b34fed20e346cb63060a4d426e2eeb5c8b88abaa22da8d88f66548dd80dc31f58d430af19&sl=76480590&expires=8h&rt=pr&r=759710454&mlogid=7510711450029573311&vbdid=64799653&fin=34%E4%B8%A8Graal%EF%BC%9A%E7%94%A8Java%E7%BC%96%E8%AF%91Java.mp3&bflag=92,34-92&rtype=1&dp-logid=7510711450029573311&dp-callid=0.1.1&hps=1&tsl=80&csl=80&fsl=-1&csign=yVzLQPCt4DblfMLqd2BCjd2RnqQ%3D&so=0&ut=6&uter=0&serv=0&uc=1458616558&ti=1fcc15f39be93977ac68f640bb9f6eada1b6ed7493807f0a&hflag=30&adg=c_0f3c8fb981bae1fdae375754a6f1d609&reqlabel=778750_l_eeb31e180410b8be0e62f686c2b42c5d_-1_43d73532db4f9890a29565ef474ca519&ibp=1&by=themis&filename=34%E4%B8%A8Graal%EF%BC%9A%E7%94%A8Java%E7%BC%96%E8%AF%91Java.mp3', 
7, 7) 
 {executed in 1 msec}
2020-11-19 20:06:22.526 INFO  jdbc.sqltiming Line:373 - select bookfieldc0_.entity_id as entity_i1_5_, bookfieldc0_.bundle as bundle2_5_, bookfieldc0_.field_comment_value 
as field_co3_5_, bookfieldc0_.delta as delta4_5_, bookfieldc0_.field_comment_format as field_co5_5_, 
bookfieldc0_.langcode as langcode6_5_, bookfieldc0_.revision_id as revision7_5_ from node__field_comment 
bookfieldc0_ where bookfieldc0_.entity_id=7 
 {executed in 1 msec}
2020-11-19 20:06:22.528 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|--------------------|------|---------------------|---------|------------|
|entity_id |bundle |field_comment_value |delta |field_comment_format |langcode |revision_id |
|----------|-------|--------------------|------|---------------------|---------|------------|
|----------|-------|--------------------|------|---------------------|---------|------------|

2020-11-19 20:06:22.532 INFO  jdbc.sqltiming Line:373 - select bookfieldc0_.entity_id as entity_i1_5_0_, bookfieldc0_.bundle as bundle2_5_0_, bookfieldc0_.field_comment_value 
as field_co3_5_0_, bookfieldc0_.delta as delta4_5_0_, bookfieldc0_.field_comment_format as 
field_co5_5_0_, bookfieldc0_.langcode as langcode6_5_0_, bookfieldc0_.revision_id as revision7_5_0_ 
from node__field_comment bookfieldc0_ where bookfieldc0_.entity_id=7 
 {executed in 1 msec}
2020-11-19 20:06:22.534 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|--------------------|------|---------------------|---------|------------|
|entity_id |bundle |field_comment_value |delta |field_comment_format |langcode |revision_id |
|----------|-------|--------------------|------|---------------------|---------|------------|
|----------|-------|--------------------|------|---------------------|---------|------------|

2020-11-19 20:06:22.539 INFO  jdbc.sqltiming Line:373 - insert into node__field_comment (bundle, field_comment_value, delta, field_comment_format, 
langcode, revision_id, entity_id) values ('book', '<li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/0f/9b/2f/b7a3625e.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>LenX</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2018-10-12 </div> </div> <div class="_2eMTs2JE_0"> 
<div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class="">4</span> </div> <!----> 
<!----> </div> </div> <div class="_3M6kV3zb_0 _3D2NkqD6_0"> 我们可不可以把 profile 和编译的机器码保存到磁盘，在代码和运行平台不变的情况下，下次启动（或部署多实例）的时候直接装载这部分数据？这算作是一种系统预热的可行性方案吗？ 
</div> <!----> <div class="_2xNIY4NG_0"> <p class="_33BLbmw4_0">作者回复: 赞想法！已经有这种做法，但同时需要承担profile不能反映当前执行状态的风险。可以了解一下Alibaba的JWarmup。</p> 
</div> </div></li> <li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/12/1e/a5/85b05303.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>金龙</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2018-10-08 </div> </div> <div class="_2eMTs2JE_0"> 
<div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class="">3</span> </div> <!----> 
<!----> </div> </div> <div class="_3M6kV3zb_0 _3D2NkqD6_0"> GraalVM和JVM是什么关系？它在OpenJDK上是怎么运行的？求解惑 
</div> <!----> <div class="_2xNIY4NG_0"> <p class="_33BLbmw4_0">作者回复: 你可以将GraalVM看成泛指带Graal编译器的虚拟机。<br><br>在OpenJDK 
10和11，可以直接UnlockExperimentalOptions UseJVMCICompiler开启。</p> </div> </div></li> <li class="reJj6Thl_0"><img 
src="https://static001.geekbang.org/account/avatar/00/12/be/c6/8a92bd2e.jpg" class="_2273kGdT_0"> 
<div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> <span>ZY</span> 
<!----> </div> <div class="_1H1Z49Dr_0"> 2018-10-16 </div> </div> <div class="_2eMTs2JE_0"> 
<div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class="">2</span> </div> <!----> 
<!----> </div> </div> <div class="_3M6kV3zb_0"> GraalVM大概什么时候会发布release版本？ </div> <div class="_2r3UB1GX_0"> 
<span>展开</span><i class="iconfont"></i> </div> <div class="_2xNIY4NG_0"> <p class="_33BLbmw4_0">作者回复: 
Soon :)<br><br>如果只是用HotSpot中的Graal编译器，那已经挺成熟了，Twitter已经全面部署了。</p> </div> </div></li> <li class="reJj6Thl_0"><img 
src="https://static001.geekbang.org/account/avatar/00/0f/67/f4/9a1feb59.jpg" class="_2273kGdT_0"> 
<div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> <span>godtrue</span> 
<!----> </div> <div class="_1H1Z49Dr_0"> 2018-10-14 </div> </div> <div class="_2eMTs2JE_0"> 
<div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class="">1</span> </div> <!----> 
<!----> </div> </div> <div class="_3M6kV3zb_0"> 阅过留痕 <br>最后几篇了，这个专栏马上结束了，回头想想自己都学到了那些内容了呢？ 
<br>JVM的各个部分从外到内，由浅入深老师都讲到了，大部分内容是都挺明白了，有些还有待消化，不过下面还要继续的学习，专栏的目标是带我们入门！ <br> <br>本节讲解的Graal先混个脸熟，以后继续深入 
<br> <br>1：Graal是一个编译器，是使用java语言编写的编译器，既然是编译器就拥有编译器的各种特点（主要负责接收JAVA字节码，并且声称可以直接运行的二进制码），当然，后来者通常比先来的会多一些特点，否则也没有必要来啦！Graal性能相对来说更好一点、更具模块化、更易维护（相对C2而言）Graal编译器是一个即时编译器，从JDK9就被集成到JDK中了，当然，可能还不成熟时作为一个实验性质的编译器集成到JDK中的，可以有选择的行的启动或者关闭。 
<br> <br>2：Graal编译器是GraalVm的基石，编译器是VM的一部分，相对来说比较独立，它和JVM的交互主要有如下三部分， <br>2-1）响应变异请求 <br>2-2）获取编译所需的元数据（如：类、方法、字段）和反应程序执行状态的profile 
<br>2-3）将生成的二进制码不熟至代码缓存里 <br> <br>3：Graal和JVM通过JVMCI来实现解耦，本质是通过java语言层面的接口来实现解耦的 <br> <br>嗯，感觉有些懵懂，专栏快结束了，老师辛苦了，希望老师来点随学随用的分析jvm性能瓶颈和解决方式的例子，当然，这个部分内容网上也比较多，只是希望更系统一点，举几个高频的示例！ 
<br> <br> </div> <div class="_2r3UB1GX_0"> <span>展开</span><i class="iconfont"></i> </div> 
<!----> </div></li> <li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/11/a9/84/c87b51ce.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>xiaobang</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2018-10-10 </div> </div> <div 
class="_2eMTs2JE_0"> <div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class="">1</span> 
</div> <!----> <!----> </div> </div> <div class="_3M6kV3zb_0 _3D2NkqD6_0"> openjdk里Graal自身的及时编译是调用Graal自身吗？如果这么做会不会出现无穷递归？ 
</div> <!----> <div class="_2xNIY4NG_0"> <p class="_33BLbmw4_0">作者回复: 1. 默认情况下，是用C1编译Graal。<br>2. 
调用Graal编译Graal并不会造成无穷递归。因为JVM里有解释执行器，能够执行Graal代码。</p> </div> </div></li> <li class="reJj6Thl_0"><img 
src="https://static001.geekbang.org/account/avatar/00/11/47/80/31e03c1b.jpg" class="_2273kGdT_0"> 
<div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> <span>Nthan89757</span> 
<!----> </div> <div class="_1H1Z49Dr_0"> 2019-04-17 </div> </div> <div class="_2eMTs2JE_0"> 
<div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class=""></span> </div> <!----> <!----> 
</div> </div> <div class="_3M6kV3zb_0 _3D2NkqD6_0"> 求证: 同样的代码，使用jdk1.6编译的和使用jdk1.8编译，在同样的jdk1.8的jvm环境运行，性能是否有差异？ 
<br>是不是需要看1.6的javap和1.8的javap 出来的字节码是否有差别？ </div> <!----> <!----> </div></li>', 0, 'full_html', 
'zh-hans', 7, 7) 
 {executed in 1 msec}
2020-11-19 20:06:22.550 INFO  jdbc.sqltiming Line:373 - select nodefieldc0_.entity_id as entity_i1_14_0_, nodefieldc0_.bundle as bundle2_14_0_, nodefieldc0_.field_comment_value 
as field_co3_14_0_, nodefieldc0_.delta as delta4_14_0_, nodefieldc0_.field_comment_format as 
field_co5_14_0_, nodefieldc0_.langcode as langcode6_14_0_, nodefieldc0_.revision_id as revision7_14_0_ 
from node_revision__field_comment nodefieldc0_ where nodefieldc0_.entity_id=7 
 {executed in 1 msec}
2020-11-19 20:06:22.552 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|--------------------|------|---------------------|---------|------------|
|entity_id |bundle |field_comment_value |delta |field_comment_format |langcode |revision_id |
|----------|-------|--------------------|------|---------------------|---------|------------|
|----------|-------|--------------------|------|---------------------|---------|------------|

2020-11-19 20:06:22.557 INFO  jdbc.sqltiming Line:373 - insert into node_revision__field_comment (bundle, field_comment_value, delta, field_comment_format, 
langcode, revision_id, entity_id) values ('book', '<li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/0f/9b/2f/b7a3625e.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>LenX</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2018-10-12 </div> </div> <div class="_2eMTs2JE_0"> 
<div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class="">4</span> </div> <!----> 
<!----> </div> </div> <div class="_3M6kV3zb_0 _3D2NkqD6_0"> 我们可不可以把 profile 和编译的机器码保存到磁盘，在代码和运行平台不变的情况下，下次启动（或部署多实例）的时候直接装载这部分数据？这算作是一种系统预热的可行性方案吗？ 
</div> <!----> <div class="_2xNIY4NG_0"> <p class="_33BLbmw4_0">作者回复: 赞想法！已经有这种做法，但同时需要承担profile不能反映当前执行状态的风险。可以了解一下Alibaba的JWarmup。</p> 
</div> </div></li> <li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/12/1e/a5/85b05303.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>金龙</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2018-10-08 </div> </div> <div class="_2eMTs2JE_0"> 
<div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class="">3</span> </div> <!----> 
<!----> </div> </div> <div class="_3M6kV3zb_0 _3D2NkqD6_0"> GraalVM和JVM是什么关系？它在OpenJDK上是怎么运行的？求解惑 
</div> <!----> <div class="_2xNIY4NG_0"> <p class="_33BLbmw4_0">作者回复: 你可以将GraalVM看成泛指带Graal编译器的虚拟机。<br><br>在OpenJDK 
10和11，可以直接UnlockExperimentalOptions UseJVMCICompiler开启。</p> </div> </div></li> <li class="reJj6Thl_0"><img 
src="https://static001.geekbang.org/account/avatar/00/12/be/c6/8a92bd2e.jpg" class="_2273kGdT_0"> 
<div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> <span>ZY</span> 
<!----> </div> <div class="_1H1Z49Dr_0"> 2018-10-16 </div> </div> <div class="_2eMTs2JE_0"> 
<div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class="">2</span> </div> <!----> 
<!----> </div> </div> <div class="_3M6kV3zb_0"> GraalVM大概什么时候会发布release版本？ </div> <div class="_2r3UB1GX_0"> 
<span>展开</span><i class="iconfont"></i> </div> <div class="_2xNIY4NG_0"> <p class="_33BLbmw4_0">作者回复: 
Soon :)<br><br>如果只是用HotSpot中的Graal编译器，那已经挺成熟了，Twitter已经全面部署了。</p> </div> </div></li> <li class="reJj6Thl_0"><img 
src="https://static001.geekbang.org/account/avatar/00/0f/67/f4/9a1feb59.jpg" class="_2273kGdT_0"> 
<div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> <span>godtrue</span> 
<!----> </div> <div class="_1H1Z49Dr_0"> 2018-10-14 </div> </div> <div class="_2eMTs2JE_0"> 
<div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class="">1</span> </div> <!----> 
<!----> </div> </div> <div class="_3M6kV3zb_0"> 阅过留痕 <br>最后几篇了，这个专栏马上结束了，回头想想自己都学到了那些内容了呢？ 
<br>JVM的各个部分从外到内，由浅入深老师都讲到了，大部分内容是都挺明白了，有些还有待消化，不过下面还要继续的学习，专栏的目标是带我们入门！ <br> <br>本节讲解的Graal先混个脸熟，以后继续深入 
<br> <br>1：Graal是一个编译器，是使用java语言编写的编译器，既然是编译器就拥有编译器的各种特点（主要负责接收JAVA字节码，并且声称可以直接运行的二进制码），当然，后来者通常比先来的会多一些特点，否则也没有必要来啦！Graal性能相对来说更好一点、更具模块化、更易维护（相对C2而言）Graal编译器是一个即时编译器，从JDK9就被集成到JDK中了，当然，可能还不成熟时作为一个实验性质的编译器集成到JDK中的，可以有选择的行的启动或者关闭。 
<br> <br>2：Graal编译器是GraalVm的基石，编译器是VM的一部分，相对来说比较独立，它和JVM的交互主要有如下三部分， <br>2-1）响应变异请求 <br>2-2）获取编译所需的元数据（如：类、方法、字段）和反应程序执行状态的profile 
<br>2-3）将生成的二进制码不熟至代码缓存里 <br> <br>3：Graal和JVM通过JVMCI来实现解耦，本质是通过java语言层面的接口来实现解耦的 <br> <br>嗯，感觉有些懵懂，专栏快结束了，老师辛苦了，希望老师来点随学随用的分析jvm性能瓶颈和解决方式的例子，当然，这个部分内容网上也比较多，只是希望更系统一点，举几个高频的示例！ 
<br> <br> </div> <div class="_2r3UB1GX_0"> <span>展开</span><i class="iconfont"></i> </div> 
<!----> </div></li> <li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/11/a9/84/c87b51ce.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>xiaobang</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2018-10-10 </div> </div> <div 
class="_2eMTs2JE_0"> <div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class="">1</span> 
</div> <!----> <!----> </div> </div> <div class="_3M6kV3zb_0 _3D2NkqD6_0"> openjdk里Graal自身的及时编译是调用Graal自身吗？如果这么做会不会出现无穷递归？ 
</div> <!----> <div class="_2xNIY4NG_0"> <p class="_33BLbmw4_0">作者回复: 1. 默认情况下，是用C1编译Graal。<br>2. 
调用Graal编译Graal并不会造成无穷递归。因为JVM里有解释执行器，能够执行Graal代码。</p> </div> </div></li> <li class="reJj6Thl_0"><img 
src="https://static001.geekbang.org/account/avatar/00/11/47/80/31e03c1b.jpg" class="_2273kGdT_0"> 
<div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> <span>Nthan89757</span> 
<!----> </div> <div class="_1H1Z49Dr_0"> 2019-04-17 </div> </div> <div class="_2eMTs2JE_0"> 
<div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class=""></span> </div> <!----> <!----> 
</div> </div> <div class="_3M6kV3zb_0 _3D2NkqD6_0"> 求证: 同样的代码，使用jdk1.6编译的和使用jdk1.8编译，在同样的jdk1.8的jvm环境运行，性能是否有差异？ 
<br>是不是需要看1.6的javap和1.8的javap 出来的字节码是否有差别？ </div> <!----> <!----> </div></li>', 0, 'full_html', 
'zh-hans', 7, 7) 
 {executed in 1 msec}
2020-11-19 20:06:22.587 INFO  jdbc.sqltiming Line:373 - select bookfieldt0_.entity_id as entity_i1_9_, bookfieldt0_.bundle as bundle2_9_, bookfieldt0_.delta 
as delta3_9_, bookfieldt0_.langcode as langcode4_9_, bookfieldt0_.revision_id as revision5_9_, 
bookfieldt0_.field_thumb_value as field_th6_9_ from node__field_thumb bookfieldt0_ where bookfieldt0_.entity_id=7 
 {executed in 2 msec}
2020-11-19 20:06:22.588 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------|------------------|
|entity_id |bundle |delta |langcode |revision_id |field_thumb_value |
|----------|-------|------|---------|------------|------------------|
|----------|-------|------|---------|------------|------------------|

2020-11-19 20:06:22.593 INFO  jdbc.sqltiming Line:373 - select bookfieldt0_.entity_id as entity_i1_9_0_, bookfieldt0_.bundle as bundle2_9_0_, bookfieldt0_.delta 
as delta3_9_0_, bookfieldt0_.langcode as langcode4_9_0_, bookfieldt0_.revision_id as revision5_9_0_, 
bookfieldt0_.field_thumb_value as field_th6_9_0_ from node__field_thumb bookfieldt0_ where 
bookfieldt0_.entity_id=7 
 {executed in 2 msec}
2020-11-19 20:06:22.595 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------|------------------|
|entity_id |bundle |delta |langcode |revision_id |field_thumb_value |
|----------|-------|------|---------|------------|------------------|
|----------|-------|------|---------|------------|------------------|

2020-11-19 20:06:22.600 INFO  jdbc.sqltiming Line:373 - insert into node__field_thumb (bundle, delta, langcode, revision_id, field_thumb_value, entity_id) 
values ('book', 0, 'zh-hans', 7, 'https://static001.geekbang.org/resource/image/5d/4f/5d3150591cf3ce11ea015dc0f276544f.jpg', 
7) 
 {executed in 1 msec}
2020-11-19 20:06:22.620 INFO  jdbc.sqltiming Line:373 - select nodefieldt0_.entity_id as entity_i1_18_0_, nodefieldt0_.bundle as bundle2_18_0_, nodefieldt0_.delta 
as delta3_18_0_, nodefieldt0_.langcode as langcode4_18_0_, nodefieldt0_.revision_id as revision5_18_0_, 
nodefieldt0_.field_thumb_value as field_th6_18_0_ from node_revision__field_thumb nodefieldt0_ 
where nodefieldt0_.entity_id=7 
 {executed in 2 msec}
2020-11-19 20:06:22.622 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------|------------------|
|entity_id |bundle |delta |langcode |revision_id |field_thumb_value |
|----------|-------|------|---------|------------|------------------|
|----------|-------|------|---------|------------|------------------|

2020-11-19 20:06:22.642 INFO  jdbc.sqltiming Line:373 - insert into node_revision__field_thumb (bundle, delta, langcode, revision_id, field_thumb_value, 
entity_id) values ('book', 0, 'zh-hans', 7, 'https://static001.geekbang.org/resource/image/5d/4f/5d3150591cf3ce11ea015dc0f276544f.jpg', 
7) 
 {executed in 16 msec}
2020-11-19 20:06:22.659 INFO  jdbc.sqltiming Line:373 - select bookfieldf0_.entity_id as entity_i1_6_0_, bookfieldf0_.bundle as bundle2_6_0_, bookfieldf0_.delta 
as delta3_6_0_, bookfieldf0_.field_fenlei_target_id as field_fe4_6_0_, bookfieldf0_.langcode 
as langcode5_6_0_, bookfieldf0_.revision_id as revision6_6_0_ from node__field_fenlei bookfieldf0_ 
where bookfieldf0_.entity_id=7 
 {executed in 2 msec}
2020-11-19 20:06:22.662 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------------|---------|------------|
|entity_id |bundle |delta |field_fenlei_target_id |langcode |revision_id |
|----------|-------|------|-----------------------|---------|------------|
|----------|-------|------|-----------------------|---------|------------|

2020-11-19 20:06:22.672 INFO  jdbc.sqltiming Line:373 - insert into node__field_fenlei (bundle, delta, field_fenlei_target_id, langcode, revision_id, 
entity_id) values ('book', 0, 1, 'zh-hans', 7, 7) 
 {executed in 6 msec}
2020-11-19 20:06:22.690 INFO  jdbc.sqltiming Line:373 - select nodefieldf0_.entity_id as entity_i1_15_0_, nodefieldf0_.bundle as bundle2_15_0_, nodefieldf0_.delta 
as delta3_15_0_, nodefieldf0_.field_fenlei_target_id as field_fe4_15_0_, nodefieldf0_.langcode 
as langcode5_15_0_, nodefieldf0_.revision_id as revision6_15_0_ from node_revision__field_fenlei 
nodefieldf0_ where nodefieldf0_.entity_id=7 
 {executed in 3 msec}
2020-11-19 20:06:22.692 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------------|---------|------------|
|entity_id |bundle |delta |field_fenlei_target_id |langcode |revision_id |
|----------|-------|------|-----------------------|---------|------------|
|----------|-------|------|-----------------------|---------|------------|

2020-11-19 20:06:22.698 INFO  jdbc.sqltiming Line:373 - insert into node_revision__field_fenlei (bundle, delta, field_fenlei_target_id, langcode, revision_id, 
entity_id) values ('book', 0, 1, 'zh-hans', 7, 7) 
 {executed in 2 msec}
2020-11-19 20:06:22.713 INFO  jdbc.sqltiming Line:373 - select bookfieldf0_.entity_id as entity_i1_7_, bookfieldf0_.bundle as bundle2_7_, bookfieldf0_.delta 
as delta3_7_, bookfieldf0_.field_fsid_value as field_fs4_7_, bookfieldf0_.langcode as langcode5_7_, 
bookfieldf0_.revision_id as revision6_7_ from node__field_fsid bookfieldf0_ where bookfieldf0_.field_fsid_value='68797280143866' 
 {executed in 3 msec}
2020-11-19 20:06:22.715 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------|---------|------------|
|entity_id |bundle |delta |field_fsid_value |langcode |revision_id |
|----------|-------|------|-----------------|---------|------------|
|----------|-------|------|-----------------|---------|------------|

2020-11-19 20:06:22.725 INFO  jdbc.sqltiming Line:373 - insert into node_revision (langcode, nid, revision_default, revision_timestamp, revision_uid) 
values ('zh-hans', 0, 1, 1605787582, 1) 
 {executed in 1 msec}
2020-11-19 20:06:22.727 INFO  jdbc.sqltiming Line:373 - getGeneratedKeys on query: insert into node_revision (langcode, nid, revision_default, revision_timestamp, 
revision_uid) values ('zh-hans', 0, 1, 1605787582, 1) 
 {executed in 0 msec}
2020-11-19 20:06:22.729 INFO  jdbc.resultsettable Line:610 - 
|--------------|
|generated_key |
|--------------|
|8             |
|--------------|

2020-11-19 20:06:22.739 INFO  jdbc.sqltiming Line:373 - insert into node (langcode, type, uuid, vid) values ('zh-hans', 'book', '7108d4f7-6a6d-47a3-be7d-16441925f824', 
8) 
 {executed in 1 msec}
2020-11-19 20:06:22.740 INFO  jdbc.sqltiming Line:373 - getGeneratedKeys on query: insert into node (langcode, type, uuid, vid) values ('zh-hans', 
'book', '7108d4f7-6a6d-47a3-be7d-16441925f824', 8) 
 {executed in 0 msec}
2020-11-19 20:06:22.742 INFO  jdbc.resultsettable Line:610 - 
|--------------|
|generated_key |
|--------------|
|8             |
|--------------|

2020-11-19 20:06:22.754 INFO  jdbc.sqltiming Line:373 - update node_revision set langcode='zh-hans', nid=8, revision_default=1, revision_timestamp=1605787582, 
revision_uid=1 where vid=8 
 {executed in 1 msec}
2020-11-19 20:06:22.760 INFO  jdbc.sqltiming Line:373 - select bookfieldf0_.entity_id as entity_i1_7_0_, bookfieldf0_.bundle as bundle2_7_0_, bookfieldf0_.delta 
as delta3_7_0_, bookfieldf0_.field_fsid_value as field_fs4_7_0_, bookfieldf0_.langcode as langcode5_7_0_, 
bookfieldf0_.revision_id as revision6_7_0_ from node__field_fsid bookfieldf0_ where bookfieldf0_.entity_id=8 
 {executed in 1 msec}
2020-11-19 20:06:22.762 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------|---------|------------|
|entity_id |bundle |delta |field_fsid_value |langcode |revision_id |
|----------|-------|------|-----------------|---------|------------|
|----------|-------|------|-----------------|---------|------------|

2020-11-19 20:06:22.766 INFO  jdbc.sqltiming Line:373 - insert into node__field_fsid (bundle, delta, field_fsid_value, langcode, revision_id, entity_id) 
values ('book', 0, '68797280143866', 'zh-hans', 8, 8) 
 {executed in 1 msec}
2020-11-19 20:06:22.773 INFO  jdbc.sqltiming Line:373 - select nodefieldf0_.entity_id as entity_i1_16_0_, nodefieldf0_.bundle as bundle2_16_0_, nodefieldf0_.delta 
as delta3_16_0_, nodefieldf0_.field_fsid_value as field_fs4_16_0_, nodefieldf0_.langcode as 
langcode5_16_0_, nodefieldf0_.revision_id as revision6_16_0_ from node_revision__field_fsid 
nodefieldf0_ where nodefieldf0_.entity_id=8 
 {executed in 1 msec}
2020-11-19 20:06:22.774 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------|---------|------------|
|entity_id |bundle |delta |field_fsid_value |langcode |revision_id |
|----------|-------|------|-----------------|---------|------------|
|----------|-------|------|-----------------|---------|------------|

2020-11-19 20:06:22.778 INFO  jdbc.sqltiming Line:373 - insert into node_revision__field_fsid (bundle, delta, field_fsid_value, langcode, revision_id, 
entity_id) values ('book', 0, '68797280143866', 'zh-hans', 8, 8) 
 {executed in 1 msec}
2020-11-19 20:06:22.785 INFO  jdbc.sqltiming Line:373 - select bookentity0_.nid as nid1_1_, bookentity0_.bid as bid2_1_, bookentity0_.depth as depth3_1_, 
bookentity0_.has_children as has_chil4_1_, bookentity0_.p1 as p5_1_, bookentity0_.p2 as p6_1_, 
bookentity0_.p3 as p7_1_, bookentity0_.p4 as p8_1_, bookentity0_.p5 as p9_1_, bookentity0_.pid 
as pid10_1_, bookentity0_.weight as weight11_1_ from book bookentity0_ where bookentity0_.nid=8 
 {executed in 1 msec}
2020-11-19 20:06:22.787 INFO  jdbc.resultsettable Line:610 - 
|----|----|------|-------------|---|---|---|---|---|----|-------|
|nid |bid |depth |has_children |p1 |p2 |p3 |p4 |p5 |pid |weight |
|----|----|------|-------------|---|---|---|---|---|----|-------|
|----|----|------|-------------|---|---|---|---|---|----|-------|

2020-11-19 20:06:22.790 INFO  jdbc.sqltiming Line:373 - select bookentity0_.nid as nid1_1_0_, bookentity0_.bid as bid2_1_0_, bookentity0_.depth as 
depth3_1_0_, bookentity0_.has_children as has_chil4_1_0_, bookentity0_.p1 as p5_1_0_, bookentity0_.p2 
as p6_1_0_, bookentity0_.p3 as p7_1_0_, bookentity0_.p4 as p8_1_0_, bookentity0_.p5 as p9_1_0_, 
bookentity0_.pid as pid10_1_0_, bookentity0_.weight as weight11_1_0_ from book bookentity0_ 
where bookentity0_.nid=8 
 {executed in 1 msec}
2020-11-19 20:06:22.792 INFO  jdbc.resultsettable Line:610 - 
|----|----|------|-------------|---|---|---|---|---|----|-------|
|nid |bid |depth |has_children |p1 |p2 |p3 |p4 |p5 |pid |weight |
|----|----|------|-------------|---|---|---|---|---|----|-------|
|----|----|------|-------------|---|---|---|---|---|----|-------|

2020-11-19 20:06:22.796 INFO  jdbc.sqltiming Line:373 - insert into book (bid, depth, has_children, p1, p2, p3, p4, p5, pid, weight, nid) values (1, 
2, 1, 1, 8, 0, 0, 0, 1, 0, 8) 
 {executed in 0 msec}
2020-11-19 20:06:22.803 INFO  jdbc.sqltiming Line:373 - select nodebodyen0_.entity_id as entity_i1_4_, nodebodyen0_.body_value as body_val2_4_, nodebodyen0_.body_summary 
as body_sum3_4_, nodebodyen0_.bundle as bundle4_4_, nodebodyen0_.delta as delta5_4_, nodebodyen0_.body_format 
as body_for6_4_, nodebodyen0_.langcode as langcode7_4_, nodebodyen0_.revision_id as revision8_4_ 
from node__body nodebodyen0_ where nodebodyen0_.entity_id=8 
 {executed in 1 msec}
2020-11-19 20:06:22.805 INFO  jdbc.resultsettable Line:610 - 
|----------|-----------|-------------|-------|------|------------|---------|------------|
|entity_id |body_value |body_summary |bundle |delta |body_format |langcode |revision_id |
|----------|-----------|-------------|-------|------|------------|---------|------------|
|----------|-----------|-------------|-------|------|------------|---------|------------|

2020-11-19 20:06:22.808 INFO  jdbc.sqltiming Line:373 - select nodebodyre0_.entity_id as entity_i1_13_0_, nodebodyre0_.body_value as body_val2_13_0_, 
nodebodyre0_.body_summary as body_sum3_13_0_, nodebodyre0_.bundle as bundle4_13_0_, nodebodyre0_.delta 
as delta5_13_0_, nodebodyre0_.body_format as body_for6_13_0_, nodebodyre0_.langcode as langcode7_13_0_, 
nodebodyre0_.revision_id as revision8_13_0_ from node_revision__body nodebodyre0_ where nodebodyre0_.entity_id=8 
 {executed in 0 msec}
2020-11-19 20:06:22.810 INFO  jdbc.resultsettable Line:610 - 
|----------|-----------|-------------|-------|------|------------|---------|------------|
|entity_id |body_value |body_summary |bundle |delta |body_format |langcode |revision_id |
|----------|-----------|-------------|-------|------|------------|---------|------------|
|----------|-----------|-------------|-------|------|------------|---------|------------|

2020-11-19 20:06:22.815 INFO  jdbc.sqltiming Line:373 - insert into node_revision__body (body_value, body_summary, bundle, delta, body_format, langcode, 
revision_id, entity_id) values ('', '', 'book', 0, 'full_html', 'zh-hans', 8, 8) 
 {executed in 1 msec}
2020-11-19 20:06:22.823 INFO  jdbc.sqltiming Line:373 - select nodebodyen0_.entity_id as entity_i1_4_0_, nodebodyen0_.body_value as body_val2_4_0_, 
nodebodyen0_.body_summary as body_sum3_4_0_, nodebodyen0_.bundle as bundle4_4_0_, nodebodyen0_.delta 
as delta5_4_0_, nodebodyen0_.body_format as body_for6_4_0_, nodebodyen0_.langcode as langcode7_4_0_, 
nodebodyen0_.revision_id as revision8_4_0_ from node__body nodebodyen0_ where nodebodyen0_.entity_id=8 
 {executed in 1 msec}
2020-11-19 20:06:22.825 INFO  jdbc.resultsettable Line:610 - 
|----------|-----------|-------------|-------|------|------------|---------|------------|
|entity_id |body_value |body_summary |bundle |delta |body_format |langcode |revision_id |
|----------|-----------|-------------|-------|------|------------|---------|------------|
|----------|-----------|-------------|-------|------|------------|---------|------------|

2020-11-19 20:06:22.831 INFO  jdbc.sqltiming Line:373 - insert into node__body (body_value, body_summary, bundle, delta, body_format, langcode, revision_id, 
entity_id) values ('', '', 'book', 0, 'full_html', 'zh-hans', 8, 8) 
 {executed in 1 msec}
2020-11-19 20:06:22.840 INFO  jdbc.sqltiming Line:373 - select nodefiledd0_.nid as nid1_10_, nodefiledd0_.changed as changed2_10_, nodefiledd0_.created 
as created3_10_, nodefiledd0_.default_langcode as default_4_10_, nodefiledd0_.langcode as langcode5_10_, 
nodefiledd0_.promote as promote6_10_, nodefiledd0_.revision_translation_affected as revision7_10_, 
nodefiledd0_.status as status8_10_, nodefiledd0_.sticky as sticky9_10_, nodefiledd0_.title 
as title10_10_, nodefiledd0_.type as type11_10_, nodefiledd0_.uid as uid12_10_, nodefiledd0_.vid 
as vid13_10_ from node_field_data nodefiledd0_ where nodefiledd0_.nid=8 
 {executed in 2 msec}
2020-11-19 20:06:22.842 INFO  jdbc.resultsettable Line:610 - 
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|-----|----|----|
|nid |changed |created |default_langcode |langcode |promote |revision_translation_affected |status |sticky |title |type |uid |vid |
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|-----|----|----|
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|-----|----|----|

2020-11-19 20:06:22.847 INFO  jdbc.sqltiming Line:373 - select nodefieldr0_.nid as nid1_11_0_, nodefieldr0_.changed as changed2_11_0_, nodefieldr0_.created 
as created3_11_0_, nodefieldr0_.default_langcode as default_4_11_0_, nodefieldr0_.langcode 
as langcode5_11_0_, nodefieldr0_.promote as promote6_11_0_, nodefieldr0_.revision_translation_affected 
as revision7_11_0_, nodefieldr0_.status as status8_11_0_, nodefieldr0_.sticky as sticky9_11_0_, 
nodefieldr0_.title as title10_11_0_, nodefieldr0_.uid as uid11_11_0_, nodefieldr0_.vid as vid12_11_0_ 
from node_field_revision nodefieldr0_ where nodefieldr0_.nid=8 
 {executed in 1 msec}
2020-11-19 20:06:22.850 INFO  jdbc.resultsettable Line:610 - 
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|----|----|
|nid |changed |created |default_langcode |langcode |promote |revision_translation_affected |status |sticky |title |uid |vid |
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|----|----|
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|----|----|

2020-11-19 20:06:22.855 INFO  jdbc.sqltiming Line:373 - insert into node_field_revision (changed, created, default_langcode, langcode, promote, revision_translation_affected, 
status, sticky, title, uid, vid, nid) values (1605787582, 1605787582, 1, 'zh-hans', 0, 1, 1, 
0, '04-模块三：代码优化 (10讲)', 1, 8, 8) 
 {executed in 0 msec}
2020-11-19 20:06:22.862 INFO  jdbc.sqltiming Line:373 - select nodefiledd0_.nid as nid1_10_0_, nodefiledd0_.changed as changed2_10_0_, nodefiledd0_.created 
as created3_10_0_, nodefiledd0_.default_langcode as default_4_10_0_, nodefiledd0_.langcode 
as langcode5_10_0_, nodefiledd0_.promote as promote6_10_0_, nodefiledd0_.revision_translation_affected 
as revision7_10_0_, nodefiledd0_.status as status8_10_0_, nodefiledd0_.sticky as sticky9_10_0_, 
nodefiledd0_.title as title10_10_0_, nodefiledd0_.type as type11_10_0_, nodefiledd0_.uid as 
uid12_10_0_, nodefiledd0_.vid as vid13_10_0_ from node_field_data nodefiledd0_ where nodefiledd0_.nid=8 
 {executed in 2 msec}
2020-11-19 20:06:22.864 INFO  jdbc.resultsettable Line:610 - 
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|-----|----|----|
|nid |changed |created |default_langcode |langcode |promote |revision_translation_affected |status |sticky |title |type |uid |vid |
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|-----|----|----|
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|-----|----|----|

2020-11-19 20:06:22.870 INFO  jdbc.sqltiming Line:373 - insert into node_field_data (changed, created, default_langcode, langcode, promote, revision_translation_affected, 
status, sticky, title, type, uid, vid, nid) values (1605787582, 1605787582, 1, 'zh-hans', 0, 
1, 1, 0, '04-模块三：代码优化 (10讲)', 'book', 1, 8, 8) 
 {executed in 2 msec}
2020-11-19 20:06:22.877 INFO  jdbc.sqltiming Line:373 - select bookfieldm0_.entity_id as entity_i1_8_, bookfieldm0_.bundle as bundle2_8_, bookfieldm0_.delta 
as delta3_8_, bookfieldm0_.langcode as langcode4_8_, bookfieldm0_.field_media_value as field_me5_8_, 
bookfieldm0_.revision_id as revision6_8_ from node__field_media bookfieldm0_ where bookfieldm0_.entity_id=8 
 {executed in 1 msec}
2020-11-19 20:06:22.879 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------------|------------|
|entity_id |bundle |delta |langcode |field_media_value |revision_id |
|----------|-------|------|---------|------------------|------------|
|----------|-------|------|---------|------------------|------------|

2020-11-19 20:06:22.884 INFO  jdbc.sqltiming Line:373 - select bookfieldm0_.entity_id as entity_i1_8_0_, bookfieldm0_.bundle as bundle2_8_0_, bookfieldm0_.delta 
as delta3_8_0_, bookfieldm0_.langcode as langcode4_8_0_, bookfieldm0_.field_media_value as 
field_me5_8_0_, bookfieldm0_.revision_id as revision6_8_0_ from node__field_media bookfieldm0_ 
where bookfieldm0_.entity_id=8 
 {executed in 2 msec}
2020-11-19 20:06:22.886 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------------|------------|
|entity_id |bundle |delta |langcode |field_media_value |revision_id |
|----------|-------|------|---------|------------------|------------|
|----------|-------|------|---------|------------------|------------|

2020-11-19 20:06:22.892 INFO  jdbc.sqltiming Line:373 - insert into node__field_media (bundle, delta, langcode, field_media_value, revision_id, entity_id) 
values ('book', 0, 'zh-hans', '', 8, 8) 
 {executed in 2 msec}
2020-11-19 20:06:22.907 INFO  jdbc.sqltiming Line:373 - select nodefieldm0_.entity_id as entity_i1_17_0_, nodefieldm0_.bundle as bundle2_17_0_, nodefieldm0_.delta 
as delta3_17_0_, nodefieldm0_.langcode as langcode4_17_0_, nodefieldm0_.field_media_value as 
field_me5_17_0_, nodefieldm0_.revision_id as revision6_17_0_ from node_revision__field_media 
nodefieldm0_ where nodefieldm0_.entity_id=8 
 {executed in 1 msec}
2020-11-19 20:06:22.909 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------------|------------|
|entity_id |bundle |delta |langcode |field_media_value |revision_id |
|----------|-------|------|---------|------------------|------------|
|----------|-------|------|---------|------------------|------------|

2020-11-19 20:06:22.915 INFO  jdbc.sqltiming Line:373 - insert into node_revision__field_media (bundle, delta, langcode, field_media_value, revision_id, 
entity_id) values ('book', 0, 'zh-hans', '', 8, 8) 
 {executed in 1 msec}
2020-11-19 20:06:22.924 INFO  jdbc.sqltiming Line:373 - select bookfieldc0_.entity_id as entity_i1_5_, bookfieldc0_.bundle as bundle2_5_, bookfieldc0_.field_comment_value 
as field_co3_5_, bookfieldc0_.delta as delta4_5_, bookfieldc0_.field_comment_format as field_co5_5_, 
bookfieldc0_.langcode as langcode6_5_, bookfieldc0_.revision_id as revision7_5_ from node__field_comment 
bookfieldc0_ where bookfieldc0_.entity_id=8 
 {executed in 2 msec}
2020-11-19 20:06:22.926 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|--------------------|------|---------------------|---------|------------|
|entity_id |bundle |field_comment_value |delta |field_comment_format |langcode |revision_id |
|----------|-------|--------------------|------|---------------------|---------|------------|
|----------|-------|--------------------|------|---------------------|---------|------------|

2020-11-19 20:06:22.930 INFO  jdbc.sqltiming Line:373 - select bookfieldc0_.entity_id as entity_i1_5_0_, bookfieldc0_.bundle as bundle2_5_0_, bookfieldc0_.field_comment_value 
as field_co3_5_0_, bookfieldc0_.delta as delta4_5_0_, bookfieldc0_.field_comment_format as 
field_co5_5_0_, bookfieldc0_.langcode as langcode6_5_0_, bookfieldc0_.revision_id as revision7_5_0_ 
from node__field_comment bookfieldc0_ where bookfieldc0_.entity_id=8 
 {executed in 1 msec}
2020-11-19 20:06:22.932 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|--------------------|------|---------------------|---------|------------|
|entity_id |bundle |field_comment_value |delta |field_comment_format |langcode |revision_id |
|----------|-------|--------------------|------|---------------------|---------|------------|
|----------|-------|--------------------|------|---------------------|---------|------------|

2020-11-19 20:06:22.937 INFO  jdbc.sqltiming Line:373 - insert into node__field_comment (bundle, field_comment_value, delta, field_comment_format, 
langcode, revision_id, entity_id) values ('book', '', 0, 'full_html', 'zh-hans', 8, 8) 
 {executed in 1 msec}
2020-11-19 20:06:22.943 INFO  jdbc.sqltiming Line:373 - select nodefieldc0_.entity_id as entity_i1_14_0_, nodefieldc0_.bundle as bundle2_14_0_, nodefieldc0_.field_comment_value 
as field_co3_14_0_, nodefieldc0_.delta as delta4_14_0_, nodefieldc0_.field_comment_format as 
field_co5_14_0_, nodefieldc0_.langcode as langcode6_14_0_, nodefieldc0_.revision_id as revision7_14_0_ 
from node_revision__field_comment nodefieldc0_ where nodefieldc0_.entity_id=8 
 {executed in 1 msec}
2020-11-19 20:06:22.945 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|--------------------|------|---------------------|---------|------------|
|entity_id |bundle |field_comment_value |delta |field_comment_format |langcode |revision_id |
|----------|-------|--------------------|------|---------------------|---------|------------|
|----------|-------|--------------------|------|---------------------|---------|------------|

2020-11-19 20:06:22.949 INFO  jdbc.sqltiming Line:373 - insert into node_revision__field_comment (bundle, field_comment_value, delta, field_comment_format, 
langcode, revision_id, entity_id) values ('book', '', 0, 'full_html', 'zh-hans', 8, 8) 
 {executed in 1 msec}
2020-11-19 20:06:22.956 INFO  jdbc.sqltiming Line:373 - select bookfieldt0_.entity_id as entity_i1_9_, bookfieldt0_.bundle as bundle2_9_, bookfieldt0_.delta 
as delta3_9_, bookfieldt0_.langcode as langcode4_9_, bookfieldt0_.revision_id as revision5_9_, 
bookfieldt0_.field_thumb_value as field_th6_9_ from node__field_thumb bookfieldt0_ where bookfieldt0_.entity_id=8 
 {executed in 0 msec}
2020-11-19 20:06:22.957 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------|------------------|
|entity_id |bundle |delta |langcode |revision_id |field_thumb_value |
|----------|-------|------|---------|------------|------------------|
|----------|-------|------|---------|------------|------------------|

2020-11-19 20:06:22.962 INFO  jdbc.sqltiming Line:373 - select bookfieldt0_.entity_id as entity_i1_9_0_, bookfieldt0_.bundle as bundle2_9_0_, bookfieldt0_.delta 
as delta3_9_0_, bookfieldt0_.langcode as langcode4_9_0_, bookfieldt0_.revision_id as revision5_9_0_, 
bookfieldt0_.field_thumb_value as field_th6_9_0_ from node__field_thumb bookfieldt0_ where 
bookfieldt0_.entity_id=8 
 {executed in 1 msec}
2020-11-19 20:06:22.963 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------|------------------|
|entity_id |bundle |delta |langcode |revision_id |field_thumb_value |
|----------|-------|------|---------|------------|------------------|
|----------|-------|------|---------|------------|------------------|

2020-11-19 20:06:22.968 INFO  jdbc.sqltiming Line:373 - insert into node__field_thumb (bundle, delta, langcode, revision_id, field_thumb_value, entity_id) 
values ('book', 0, 'zh-hans', 8, '', 8) 
 {executed in 1 msec}
2020-11-19 20:06:22.975 INFO  jdbc.sqltiming Line:373 - select nodefieldt0_.entity_id as entity_i1_18_0_, nodefieldt0_.bundle as bundle2_18_0_, nodefieldt0_.delta 
as delta3_18_0_, nodefieldt0_.langcode as langcode4_18_0_, nodefieldt0_.revision_id as revision5_18_0_, 
nodefieldt0_.field_thumb_value as field_th6_18_0_ from node_revision__field_thumb nodefieldt0_ 
where nodefieldt0_.entity_id=8 
 {executed in 1 msec}
2020-11-19 20:06:22.976 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------|------------------|
|entity_id |bundle |delta |langcode |revision_id |field_thumb_value |
|----------|-------|------|---------|------------|------------------|
|----------|-------|------|---------|------------|------------------|

2020-11-19 20:06:22.981 INFO  jdbc.sqltiming Line:373 - insert into node_revision__field_thumb (bundle, delta, langcode, revision_id, field_thumb_value, 
entity_id) values ('book', 0, 'zh-hans', 8, '', 8) 
 {executed in 1 msec}
2020-11-19 20:06:22.987 INFO  jdbc.sqltiming Line:373 - select bookfieldf0_.entity_id as entity_i1_6_0_, bookfieldf0_.bundle as bundle2_6_0_, bookfieldf0_.delta 
as delta3_6_0_, bookfieldf0_.field_fenlei_target_id as field_fe4_6_0_, bookfieldf0_.langcode 
as langcode5_6_0_, bookfieldf0_.revision_id as revision6_6_0_ from node__field_fenlei bookfieldf0_ 
where bookfieldf0_.entity_id=8 
 {executed in 1 msec}
2020-11-19 20:06:22.989 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------------|---------|------------|
|entity_id |bundle |delta |field_fenlei_target_id |langcode |revision_id |
|----------|-------|------|-----------------------|---------|------------|
|----------|-------|------|-----------------------|---------|------------|

2020-11-19 20:06:22.993 INFO  jdbc.sqltiming Line:373 - insert into node__field_fenlei (bundle, delta, field_fenlei_target_id, langcode, revision_id, 
entity_id) values ('book', 0, 1, 'zh-hans', 8, 8) 
 {executed in 1 msec}
2020-11-19 20:06:23.001 INFO  jdbc.sqltiming Line:373 - select nodefieldf0_.entity_id as entity_i1_15_0_, nodefieldf0_.bundle as bundle2_15_0_, nodefieldf0_.delta 
as delta3_15_0_, nodefieldf0_.field_fenlei_target_id as field_fe4_15_0_, nodefieldf0_.langcode 
as langcode5_15_0_, nodefieldf0_.revision_id as revision6_15_0_ from node_revision__field_fenlei 
nodefieldf0_ where nodefieldf0_.entity_id=8 
 {executed in 2 msec}
2020-11-19 20:06:23.002 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------------|---------|------------|
|entity_id |bundle |delta |field_fenlei_target_id |langcode |revision_id |
|----------|-------|------|-----------------------|---------|------------|
|----------|-------|------|-----------------------|---------|------------|

2020-11-19 20:06:23.007 INFO  jdbc.sqltiming Line:373 - insert into node_revision__field_fenlei (bundle, delta, field_fenlei_target_id, langcode, revision_id, 
entity_id) values ('book', 0, 1, 'zh-hans', 8, 8) 
 {executed in 1 msec}
2020-11-19 20:06:24.149 INFO  jdbc.sqltiming Line:373 - select bookchecke0_.item_id as item_id1_2_, bookchecke0_.fsid as fsid2_2_, bookchecke0_.got 
as got3_2_, bookchecke0_.name as name4_2_ from book_check bookchecke0_ where bookchecke0_.fsid='893104461164599' 
and bookchecke0_.name='net_content' 
 {executed in 1 msec}
2020-11-19 20:06:24.152 INFO  jdbc.resultsettable Line:610 - 
|--------|-----|----|-----|
|item_id |fsid |got |name |
|--------|-----|----|-----|
|--------|-----|----|-----|

2020-11-19 20:06:41.069 INFO  jdbc.sqltiming Line:373 - select bookchecke0_.item_id as item_id1_2_, bookchecke0_.fsid as fsid2_2_, bookchecke0_.got 
as got3_2_, bookchecke0_.name as name4_2_ from book_check bookchecke0_ where bookchecke0_.fsid='893104461164599' 
and bookchecke0_.name='net_content' 
 {executed in 2 msec}
2020-11-19 20:06:41.071 INFO  jdbc.resultsettable Line:610 - 
|--------|-----|----|-----|
|item_id |fsid |got |name |
|--------|-----|----|-----|
|--------|-----|----|-----|

2020-11-19 20:06:41.076 INFO  jdbc.sqltiming Line:373 - insert into book_check (fsid, got, name) values ('893104461164599', 1, 'net_content') 
 {executed in 1 msec}
2020-11-19 20:06:41.078 INFO  jdbc.sqltiming Line:373 - getGeneratedKeys on query: insert into book_check (fsid, got, name) values ('893104461164599', 
1, 'net_content') 
 {executed in 0 msec}
2020-11-19 20:06:41.081 INFO  jdbc.resultsettable Line:610 - 
|--------------|
|generated_key |
|--------------|
|21            |
|--------------|

2020-11-19 20:06:41.095 INFO  jdbc.sqltiming Line:373 - select bookchecke0_.item_id as item_id1_2_, bookchecke0_.fsid as fsid2_2_, bookchecke0_.got 
as got3_2_, bookchecke0_.name as name4_2_ from book_check bookchecke0_ where bookchecke0_.fsid='893104461164599' 
and bookchecke0_.name='media' 
 {executed in 1 msec}
2020-11-19 20:06:41.097 INFO  jdbc.resultsettable Line:610 - 
|--------|-----|----|-----|
|item_id |fsid |got |name |
|--------|-----|----|-----|
|--------|-----|----|-----|

2020-11-19 20:06:41.795 INFO  jdbc.sqltiming Line:373 - select bookchecke0_.item_id as item_id1_2_, bookchecke0_.fsid as fsid2_2_, bookchecke0_.got 
as got3_2_, bookchecke0_.name as name4_2_ from book_check bookchecke0_ where bookchecke0_.fsid='893104461164599' 
and bookchecke0_.name='media' 
 {executed in 1 msec}
2020-11-19 20:06:41.796 INFO  jdbc.resultsettable Line:610 - 
|--------|-----|----|-----|
|item_id |fsid |got |name |
|--------|-----|----|-----|
|--------|-----|----|-----|

2020-11-19 20:06:41.800 INFO  jdbc.sqltiming Line:373 - insert into book_check (fsid, got, name) values ('893104461164599', 1, 'media') 
 {executed in 1 msec}
2020-11-19 20:06:41.801 INFO  jdbc.sqltiming Line:373 - getGeneratedKeys on query: insert into book_check (fsid, got, name) values ('893104461164599', 
1, 'media') 
 {executed in 0 msec}
2020-11-19 20:06:41.803 INFO  jdbc.resultsettable Line:610 - 
|--------------|
|generated_key |
|--------------|
|22            |
|--------------|

2020-11-19 20:06:41.812 INFO  jdbc.sqltiming Line:373 - select bookfieldf0_.entity_id as entity_i1_7_, bookfieldf0_.bundle as bundle2_7_, bookfieldf0_.delta 
as delta3_7_, bookfieldf0_.field_fsid_value as field_fs4_7_, bookfieldf0_.langcode as langcode5_7_, 
bookfieldf0_.revision_id as revision6_7_ from node__field_fsid bookfieldf0_ where bookfieldf0_.field_fsid_value='893104461164599' 
 {executed in 1 msec}
2020-11-19 20:06:41.814 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------|---------|------------|
|entity_id |bundle |delta |field_fsid_value |langcode |revision_id |
|----------|-------|------|-----------------|---------|------------|
|----------|-------|------|-----------------|---------|------------|

2020-11-19 20:06:41.817 INFO  jdbc.sqltiming Line:373 - insert into node_revision (langcode, nid, revision_default, revision_timestamp, revision_uid) 
values ('zh-hans', 0, 1, 1605787601, 1) 
 {executed in 0 msec}
2020-11-19 20:06:41.819 INFO  jdbc.sqltiming Line:373 - getGeneratedKeys on query: insert into node_revision (langcode, nid, revision_default, revision_timestamp, 
revision_uid) values ('zh-hans', 0, 1, 1605787601, 1) 
 {executed in 1 msec}
2020-11-19 20:06:41.820 INFO  jdbc.resultsettable Line:610 - 
|--------------|
|generated_key |
|--------------|
|9             |
|--------------|

2020-11-19 20:06:41.828 INFO  jdbc.sqltiming Line:373 - insert into node (langcode, type, uuid, vid) values ('zh-hans', 'book', '0721d64b-a8a7-4f52-ae5c-f799429aff93', 
9) 
 {executed in 1 msec}
2020-11-19 20:06:41.829 INFO  jdbc.sqltiming Line:373 - getGeneratedKeys on query: insert into node (langcode, type, uuid, vid) values ('zh-hans', 
'book', '0721d64b-a8a7-4f52-ae5c-f799429aff93', 9) 
 {executed in 0 msec}
2020-11-19 20:06:41.830 INFO  jdbc.resultsettable Line:610 - 
|--------------|
|generated_key |
|--------------|
|9             |
|--------------|

2020-11-19 20:06:41.840 INFO  jdbc.sqltiming Line:373 - update node_revision set langcode='zh-hans', nid=9, revision_default=1, revision_timestamp=1605787601, 
revision_uid=1 where vid=9 
 {executed in 1 msec}
2020-11-19 20:06:41.846 INFO  jdbc.sqltiming Line:373 - select bookfieldf0_.entity_id as entity_i1_7_0_, bookfieldf0_.bundle as bundle2_7_0_, bookfieldf0_.delta 
as delta3_7_0_, bookfieldf0_.field_fsid_value as field_fs4_7_0_, bookfieldf0_.langcode as langcode5_7_0_, 
bookfieldf0_.revision_id as revision6_7_0_ from node__field_fsid bookfieldf0_ where bookfieldf0_.entity_id=9 
 {executed in 1 msec}
2020-11-19 20:06:41.848 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------|---------|------------|
|entity_id |bundle |delta |field_fsid_value |langcode |revision_id |
|----------|-------|------|-----------------|---------|------------|
|----------|-------|------|-----------------|---------|------------|

2020-11-19 20:06:41.852 INFO  jdbc.sqltiming Line:373 - insert into node__field_fsid (bundle, delta, field_fsid_value, langcode, revision_id, entity_id) 
values ('book', 0, '893104461164599', 'zh-hans', 9, 9) 
 {executed in 1 msec}
2020-11-19 20:06:41.859 INFO  jdbc.sqltiming Line:373 - select nodefieldf0_.entity_id as entity_i1_16_0_, nodefieldf0_.bundle as bundle2_16_0_, nodefieldf0_.delta 
as delta3_16_0_, nodefieldf0_.field_fsid_value as field_fs4_16_0_, nodefieldf0_.langcode as 
langcode5_16_0_, nodefieldf0_.revision_id as revision6_16_0_ from node_revision__field_fsid 
nodefieldf0_ where nodefieldf0_.entity_id=9 
 {executed in 1 msec}
2020-11-19 20:06:41.861 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------|---------|------------|
|entity_id |bundle |delta |field_fsid_value |langcode |revision_id |
|----------|-------|------|-----------------|---------|------------|
|----------|-------|------|-----------------|---------|------------|

2020-11-19 20:06:41.865 INFO  jdbc.sqltiming Line:373 - insert into node_revision__field_fsid (bundle, delta, field_fsid_value, langcode, revision_id, 
entity_id) values ('book', 0, '893104461164599', 'zh-hans', 9, 9) 
 {executed in 1 msec}
2020-11-19 20:06:41.871 INFO  jdbc.sqltiming Line:373 - select bookentity0_.nid as nid1_1_, bookentity0_.bid as bid2_1_, bookentity0_.depth as depth3_1_, 
bookentity0_.has_children as has_chil4_1_, bookentity0_.p1 as p5_1_, bookentity0_.p2 as p6_1_, 
bookentity0_.p3 as p7_1_, bookentity0_.p4 as p8_1_, bookentity0_.p5 as p9_1_, bookentity0_.pid 
as pid10_1_, bookentity0_.weight as weight11_1_ from book bookentity0_ where bookentity0_.nid=9 
 {executed in 1 msec}
2020-11-19 20:06:41.873 INFO  jdbc.resultsettable Line:610 - 
|----|----|------|-------------|---|---|---|---|---|----|-------|
|nid |bid |depth |has_children |p1 |p2 |p3 |p4 |p5 |pid |weight |
|----|----|------|-------------|---|---|---|---|---|----|-------|
|----|----|------|-------------|---|---|---|---|---|----|-------|

2020-11-19 20:06:41.877 INFO  jdbc.sqltiming Line:373 - select bookentity0_.nid as nid1_1_0_, bookentity0_.bid as bid2_1_0_, bookentity0_.depth as 
depth3_1_0_, bookentity0_.has_children as has_chil4_1_0_, bookentity0_.p1 as p5_1_0_, bookentity0_.p2 
as p6_1_0_, bookentity0_.p3 as p7_1_0_, bookentity0_.p4 as p8_1_0_, bookentity0_.p5 as p9_1_0_, 
bookentity0_.pid as pid10_1_0_, bookentity0_.weight as weight11_1_0_ from book bookentity0_ 
where bookentity0_.nid=9 
 {executed in 1 msec}
2020-11-19 20:06:41.879 INFO  jdbc.resultsettable Line:610 - 
|----|----|------|-------------|---|---|---|---|---|----|-------|
|nid |bid |depth |has_children |p1 |p2 |p3 |p4 |p5 |pid |weight |
|----|----|------|-------------|---|---|---|---|---|----|-------|
|----|----|------|-------------|---|---|---|---|---|----|-------|

2020-11-19 20:06:41.883 INFO  jdbc.sqltiming Line:373 - insert into book (bid, depth, has_children, p1, p2, p3, p4, p5, pid, weight, nid) values (1, 
3, 0, 1, 8, 9, 0, 0, 8, 0, 9) 
 {executed in 1 msec}
2020-11-19 20:06:41.890 INFO  jdbc.sqltiming Line:373 - select nodebodyen0_.entity_id as entity_i1_4_, nodebodyen0_.body_value as body_val2_4_, nodebodyen0_.body_summary 
as body_sum3_4_, nodebodyen0_.bundle as bundle4_4_, nodebodyen0_.delta as delta5_4_, nodebodyen0_.body_format 
as body_for6_4_, nodebodyen0_.langcode as langcode7_4_, nodebodyen0_.revision_id as revision8_4_ 
from node__body nodebodyen0_ where nodebodyen0_.entity_id=9 
 {executed in 1 msec}
2020-11-19 20:06:41.892 INFO  jdbc.resultsettable Line:610 - 
|----------|-----------|-------------|-------|------|------------|---------|------------|
|entity_id |body_value |body_summary |bundle |delta |body_format |langcode |revision_id |
|----------|-----------|-------------|-------|------|------------|---------|------------|
|----------|-----------|-------------|-------|------|------------|---------|------------|

2020-11-19 20:06:41.896 INFO  jdbc.sqltiming Line:373 - select nodebodyre0_.entity_id as entity_i1_13_0_, nodebodyre0_.body_value as body_val2_13_0_, 
nodebodyre0_.body_summary as body_sum3_13_0_, nodebodyre0_.bundle as bundle4_13_0_, nodebodyre0_.delta 
as delta5_13_0_, nodebodyre0_.body_format as body_for6_13_0_, nodebodyre0_.langcode as langcode7_13_0_, 
nodebodyre0_.revision_id as revision8_13_0_ from node_revision__body nodebodyre0_ where nodebodyre0_.entity_id=9 
 {executed in 1 msec}
2020-11-19 20:06:41.898 INFO  jdbc.resultsettable Line:610 - 
|----------|-----------|-------------|-------|------|------------|---------|------------|
|entity_id |body_value |body_summary |bundle |delta |body_format |langcode |revision_id |
|----------|-----------|-------------|-------|------|------------|---------|------------|
|----------|-----------|-------------|-------|------|------------|---------|------------|

2020-11-19 20:06:41.920 INFO  jdbc.sqltiming Line:373 - insert into node_revision__body (body_value, body_summary, bundle, delta, body_format, langcode, 
revision_id, entity_id) values ('<p>关于 Java agent，大家可能都听过大名鼎鼎的<code>premain</code>方法。顾名思义，这个方法指的就是在<code>main</code>方法之前执行的方法。</p> 
<pre style="position: relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> package org.example; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="3"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
public class MyAgent { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="4"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
public static void premain(String args) { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> System.out.println("premain"); </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> } </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="7"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
} </div></td> </tr> </tbody> </table></code> <div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 
</div></pre> <p>我在上面这段代码中定义了一个<code>premain</code>方法。这里需要注意的是，Java 虚拟机所能识别的<code>premain</code>方法接收的是字符串类型的参数，而并非类似于<code>main</code>方法的字符串数组。</p> 
<p>为了能够以 Java agent 的方式运行该<code>premain</code>方法，我们需要将其打包成 jar 包，并在其中的 MANIFEST.MF 配置文件中，指定所谓的<code>Premain-class</code>。具体的命令如下所示：</p> 
<pre style="position: relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> # 注意第一条命令会向 manifest.txt 文件写入两行数据，其中包括一行空行 </div></td> </tr> <tr> 
<td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> $ echo ''Premain-Class: org.example.MyAgent 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> '' &gt; manifest.txt </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> $ jar cvmf manifest.txt myagent.jar org/ 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> $ java -javaagent:myagent.jar HelloWorld 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> premain </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="7"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> Hello, World </div></td> </tr> </tbody> </table></code> <div class="richcontent-pre-copy"> 
<span class="iconfont"></span>复制代码 </div></pre> <p>除了在命令行中指定 Java agent 之外，我们还可以通过 Attach 
API 远程加载。具体用法如下面的代码所示：</p> <pre style="position: relative;"><code> <table class="hljs-ln"> 
<tbody> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> import java.io.IOException; </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> import com.sun.tools.attach.*; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="5"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
public class AttachTest { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="6"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
public static void main(String[] args) </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="7"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> throws AttachNotSupportedException, IOException, AgentLoadException, 
AgentInitializationException { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="8"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
if (args.length &lt;= 1) { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="9"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
System.out.println("Usage: java AttachTest &lt;PID&gt; /PATH/TO/AGENT.jar"); </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="10"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> return; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="11"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> } </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="12"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
VirtualMachine vm = VirtualMachine.attach(args[0]); </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="13"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> vm.loadAgent(args[1]); </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="14"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> } </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="15"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
} </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="16"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> </div></td> </tr> </tbody> </table></code> 
<div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 </div></pre> <p>使用 Attach 
API 远程加载的 Java agent 不会再先于<code>main</code>方法执行，这取决于另一虚拟机调用 Attach API 的时机。并且，它运行的也不再是<code>premain</code>方法，而是名为<code>agentmain</code>的方法。</p> 
<pre style="position: relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> public class MyAgent { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> public static void agentmain(String args) { </div></td> </tr> <tr> 
<td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> System.out.println("agentmain"); </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> } </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> } </div></td> </tr> </tbody> </table></code> <div class="richcontent-pre-copy"> 
<span class="iconfont"></span>复制代码 </div></pre> <p>相应的，我们需要更新 jar 包中的 manifest 文件，使其包含<code>Agent-Class</code>的配置，例如<code>Agent-Class: 
org.example.MyAgent</code>。</p><!-- [[[read_end]]] --> <pre style="position: relative;"><code> 
<table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
$ echo ''Agent-Class: org.example.MyAgent </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> '' &gt; manifest.txt </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> $ jar cvmf manifest.txt myagent.jar org/ </div></td> </tr> <tr> 
<td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> $ java HelloWorld </div></td> </tr> <tr> 
<td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> Hello, World </div></td> </tr> <tr> <td 
class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> $ jps </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="7"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> $ java AttachTest &lt;pid&gt; myagent.jar </div></td> </tr> <tr> 
<td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="8"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> agentmain </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="9"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> // 最后一句输出来自于运行 HelloWorld 的 Java 进程 </div></td> </tr> </tbody> </table></code> 
<div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 </div></pre> <p>Java 
虚拟机并不限制 Java agent 的数量。你可以在 java 命令后附上多个<code>-javaagent</code>参数，或者远程 attach 多个 Java agent，Java 
虚拟机会按照定义顺序，或者 attach 的顺序逐个执行这些 Java agent。</p> <p>在<code>premain</code>方法或者<code>agentmain</code>方法中打印一些字符串并不出奇，我们完全可以将其中的逻辑并入<code>main</code>方法，或者其他监听端口的线程中。除此之外，Java 
agent 还提供了一套 instrumentation 机制，允许应用程序拦截类加载事件，并且更改该类的字节码。</p> <p>接下来，我们来了解一下基于这一机制的字节码注入。</p> 
<h2>字节码注入</h2> <pre style="position: relative;"><code> <table class="hljs-ln"> <tbody> <tr> 
<td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> package org.example; </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> import java.lang.instrument.*; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> import java.security.ProtectionDomain; </div></td> </tr> <tr> <td 
class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> public class MyAgent { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="7"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> public static void premain(String args, Instrumentation instrumentation) 
{ </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="8"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> instrumentation.addTransformer(new MyTransformer()); 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="9"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> } </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="10"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="11"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
static class MyTransformer implements ClassFileTransformer { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="12"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> public byte[] transform(ClassLoader loader, String className, Class&lt;?&gt; 
classBeingRedefined, </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="13"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
ProtectionDomain protectionDomain, byte[] classfileBuffer) throws IllegalClassFormatException 
{ </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="14"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> System.out.printf("Loaded %s: 0x%X%X%X%X\n", 
className, classfileBuffer[0], classfileBuffer[1], </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="15"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> classfileBuffer[2], classfileBuffer[3]); </div></td> </tr> <tr> 
<td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="16"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> return null; </div></td> </tr> <tr> <td 
class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="17"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> } </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="18"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> } </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="19"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
} </div></td> </tr> </tbody> </table></code> <div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 
</div></pre> <p>我们先来看一个例子。在上面这段代码中，<code>premain</code>方法多出了一个<code>Instrumentation</code>类型的参数，我们可以通过它来注册类加载事件的拦截器。该拦截器需要实现<code>ClassFileTransformer</code>接口，并重写其中的<code>transform</code>方法。</p> 
<p><code>transform</code>方法将接收一个 byte 数组类型的参数，它代表的是正在被加载的类的字节码。在上面这段代码中，我将打印该数组的前四个字节，也就是 Java 
class 文件的魔数（magic number）0xCAFEBABE。</p> <p><code>transform</code>方法将返回一个 byte 数组，代表更新过后的类的字节码。当方法返回之后，Java 
虚拟机会使用所返回的 byte 数组，来完成接下来的类加载工作。不过，如果<code>transform</code>方法返回 null 或者抛出异常，那么 Java 虚拟机将使用原来的 
byte 数组完成类加载工作。</p> <p>基于这一类加载事件的拦截功能，我们可以实现字节码注入（bytecode instrumentation），往正在被加载的类中插入额外的字节码。</p> 
<p>在工具篇中我曾经介绍过字节码工程框架 ASM 的用法。下面我将演示它的<a href="https://search.maven.org/artifact/org.ow2.asm/asm-tree/7.0-beta/jar">tree 
包</a>（依赖于<a href="https://search.maven.org/artifact/org.ow2.asm/asm/7.0-beta/jar">基础包</a>），用面向对象的方式注入字节码。</p> 
<pre style="position: relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> package org.example; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="3"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
import java.lang.instrument.*; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="4"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
import java.security.ProtectionDomain; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> import org.objectweb.asm.*; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> import org.objectweb.asm.tree.*; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="7"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="8"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
public class MyAgent { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="9"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
public static void premain(String args, Instrumentation instrumentation) { </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="10"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> instrumentation.addTransformer(new MyTransformer()); 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="11"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> } </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="12"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="13"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
static class MyTransformer implements ClassFileTransformer, Opcodes { </div></td> </tr> <tr> 
<td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="14"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> public byte[] transform(ClassLoader loader, 
String className, Class&lt;?&gt; classBeingRedefined, </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="15"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> ProtectionDomain protectionDomain, byte[] classfileBuffer) throws 
IllegalClassFormatException { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="16"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
ClassReader cr = new ClassReader(classfileBuffer); </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="17"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> ClassNode classNode = new ClassNode(ASM7); </div></td> </tr> <tr> 
<td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="18"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> cr.accept(classNode, ClassReader.SKIP_FRAMES); 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="19"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="20"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> for (MethodNode methodNode : classNode.methods) { </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="21"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> if ("main".equals(methodNode.name)) { 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="22"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> InsnList instrumentation = new InsnList(); 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="23"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> instrumentation.add(new FieldInsnNode(GETSTATIC, 
"java/lang/System", "out", "Ljava/io/PrintStream;")); </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="24"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> instrumentation.add(new LdcInsnNode("Hello, Instrumentation!")); 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="25"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> instrumentation </div></td> </tr> <tr> 
<td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="26"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> .add(new MethodInsnNode(INVOKEVIRTUAL, 
"java/io/PrintStream", "println", "(Ljava/lang/String;)V", false)); </div></td> </tr> <tr> 
<td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="27"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="28"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> methodNode.instructions.insert(instrumentation); </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="29"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> } </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="30"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> } </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="31"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="32"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> ClassWriter cw = new ClassWriter(ClassWriter.COMPUTE_FRAMES 
| ClassWriter.COMPUTE_MAXS); </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="33"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
classNode.accept(cw); </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="34"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
return cw.toByteArray(); </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="35"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
} </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="36"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> } </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="37"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> } </div></td> </tr> </tbody> </table></code> <div class="richcontent-pre-copy"> 
<span class="iconfont"></span>复制代码 </div></pre> <p>上面这段代码不难理解。我们将使用<code>ClassReader</code>读取所传入的 
byte 数组，并将其转换成<code>ClassNode</code>。然后我们将遍历<code>ClassNode</code>中的<code>MethodNode</code>节点，也就是该类中的构造器和方法。</p> 
<p>当遇到名字为<code>"main"</code>的方法时，我们会在方法的入口处注入<code>System.out.println("Hello, Instrumentation!");</code>。运行结果如下所示：</p> 
<pre style="position: relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> $ java -javaagent:myagent.jar -cp .:/PATH/TO/asm-7.0-beta.jar:/PATH/TO/asm-tree-7.0-beta.jar 
HelloWorld </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" 
data-line-number="2"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> Hello, 
Instrumentation! </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="3"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
Hello, World! </div></td> </tr> </tbody> </table></code> <div class="richcontent-pre-copy"> 
<span class="iconfont"></span>复制代码 </div></pre> <p>Java agent 还提供了另外两个功能<code>redefine</code>和<code>retransform</code>。这两个功能针对的是已加载的类，并要求用户传入所要<code>redefine</code>或者<code>retransform</code>的类实例。</p> 
<p>其中，<code>redefine</code>指的是舍弃原本的字节码，并替换成由用户提供的 byte 数组。该功能比较危险，一般用于修复出错了的字节码。</p> <p><code>retransform</code>则将针对所传入的类，重新调用所有已注册的<code>ClassFileTransformer</code>的<code>transform</code>方法。它的应用场景主要有如下两个。</p> 
<p>第一，在执行<code>premain</code>或者<code>agentmain</code>方法前，Java 虚拟机早已加载了不少类，而这些类的加载事件并没有被拦截，因此也没有被注入。使用<code>retransform</code>功能可以注入这些已加载但未注入的类。</p> 
<p>第二，在定义了多个 Java agent，多个注入的情况下，我们可能需要移除其中的部分注入。当调用<code>Instrumentation.removeTransformer</code>去除某个注入类后，我们可以调用<code>retransform</code>功能，重新从原始 
byte 数组开始进行注入。</p> <p>Java agent 的这些功能都是通过 JVMTI agent，也就是 C agent 来实现的。JVMTI 是一个事件驱动的工具实现接口，通常，我们会在 
C agent 加载后的入口方法<code>Agent_OnLoad</code>处注册各个事件的钩子（hook）方法。当 Java 虚拟机触发了这些事件时，便会调用对应的钩子方法。</p> 
<pre style="position: relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> JNIEXPORT jint JNICALL </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> Agent_OnLoad(JavaVM *vm, char *options, void *reserved); </div></td> 
</tr> </tbody> </table></code> <div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 
</div></pre> <p>举个例子，我们可以为 JVMTI 中的<code>ClassFileLoadHook</code>事件设置钩子，从而在 C 层面拦截所有的类加载事件。关于 
JVMTI 的其他事件，你可以参考该<a href="https://docs.oracle.com/en/java/javase/11/docs/specs/jvmti.html#EventIndex">链接</a>。</p> 
<h2>基于字节码注入的 profiler</h2> <p>我们可以利用字节码注入来实现代码覆盖工具（例如<a href="https://www.jacoco.org/jacoco/">JaCoCo</a>），或者各式各样的 
profiler。</p> <p>通常，我们会定义一个运行时类，并在某一程序行为的周围，注入对该运行时类中方法的调用，以表示该程序行为正要发生或者已经发生。</p> <pre style="position: 
relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
package org.example; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="2"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> import java.util.concurrent.ConcurrentHashMap; 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> import java.util.concurrent.atomic.AtomicInteger; 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> public class MyProfiler { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="7"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> public static ConcurrentHashMap&lt;Class&lt;?&gt;, AtomicInteger&gt; 
data = new ConcurrentHashMap&lt;&gt;(); </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="8"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="9"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
public static void fireAllocationEvent(Class&lt;?&gt; klass) { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="10"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> data.computeIfAbsent(klass, kls -&gt; new AtomicInteger()) </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="11"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> .incrementAndGet(); </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="12"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> } </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="13"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="14"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
public static void dump() { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="15"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
data.forEach((kls, counter) -&gt; { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div 
class="hljs-ln-line hljs-ln-n" data-line-number="16"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> System.err.printf("%s: %d\n", kls.getName(), counter.get()); </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="17"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> }); </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="18"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> } </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="19"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="20"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> static { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="21"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> Runtime.getRuntime().addShutdownHook(new Thread(MyProfiler::dump)); 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="22"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> } </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="23"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> } </div></td> </tr> </tbody> </table></code> <div class="richcontent-pre-copy"> 
<span class="iconfont"></span>复制代码 </div></pre> <p>举个例子，上面这段代码便是一个运行时类。该类维护了一个<code>HashMap</code>，用来统计每个类所新建实例的数目。当程序退出时，我们将逐个打印出每个类的名字，以及其新建实例的数目。</p> 
<p>在 Java agent 中，我们会截获正在加载的类，并且在每条<code>new</code>字节码之后插入对<code>fireAllocationEvent</code>方法的调用，以表示当前正在新建某个类的实例。具体的注入代码如下所示：</p> 
<pre style="position: relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> package org.example; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="3"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
import java.lang.instrument.*; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="4"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
import java.security.ProtectionDomain; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="6"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
import org.objectweb.asm.*; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="7"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
import org.objectweb.asm.tree.*; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="8"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="9"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> public class MyAgent { </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="10"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="11"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> public static void premain(String args, Instrumentation instrumentation) 
{ </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="12"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> instrumentation.addTransformer(new MyTransformer()); 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="13"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> } </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="14"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="15"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
static class MyTransformer implements ClassFileTransformer, Opcodes { </div></td> </tr> <tr> 
<td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="16"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> public byte[] transform(ClassLoader loader, 
String className, Class&lt;?&gt; classBeingRedefined, </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="17"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> ProtectionDomain protectionDomain, byte[] classfileBuffer) throws 
IllegalClassFormatException { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="18"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
if (className.startsWith("java") || </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div 
class="hljs-ln-line hljs-ln-n" data-line-number="19"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> className.startsWith("javax") || </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="20"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> className.startsWith("jdk") || </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="21"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> className.startsWith("sun") || </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="22"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> className.startsWith("com/sun") || </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="23"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> className.startsWith("org/example")) { </div></td> </tr> <tr> <td 
class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="24"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> // Skip JDK classes and profiler classes 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="25"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> return null; </div></td> </tr> <tr> <td 
class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="26"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> } </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="27"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="28"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
ClassReader cr = new ClassReader(classfileBuffer); </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="29"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> ClassNode classNode = new ClassNode(ASM7); </div></td> </tr> <tr> 
<td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="30"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> cr.accept(classNode, ClassReader.SKIP_FRAMES); 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="31"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="32"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> for (MethodNode methodNode : classNode.methods) { </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="33"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> for (AbstractInsnNode node : methodNode.instructions.toArray()) 
{ </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="34"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> if (node.getOpcode() == NEW) { </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="35"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> TypeInsnNode typeInsnNode = (TypeInsnNode) 
node; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" 
data-line-number="36"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="37"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> InsnList instrumentation = new InsnList(); 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="38"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> instrumentation.add(new LdcInsnNode(Type.getObjectType(typeInsnNode.desc))); 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="39"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> instrumentation.add(new MethodInsnNode(INVOKESTATIC, 
"org/example/MyProfiler", "fireAllocationEvent", </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="40"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> "(Ljava/lang/Class;)V", false)); </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="41"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="42"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
methodNode.instructions.insert(node, instrumentation); </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="43"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> } </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="44"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
} </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="45"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> } </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="46"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="47"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
ClassWriter cw = new ClassWriter(ClassWriter.COMPUTE_FRAMES | ClassWriter.COMPUTE_MAXS); </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="48"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> classNode.accept(cw); </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="49"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> return cw.toByteArray(); </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="50"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> } </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="51"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> } </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="52"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="53"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> } </div></td> </tr> </tbody> </table></code> 
<div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 </div></pre> <p>你或许已经留意到，我们不得不排除对 
JDK 类以及该运行时类的注入。这是因为，对这些类的注入很可能造成死循环调用，并最终抛出<code>StackOverflowException</code>异常。</p> <p>举个例子，假设我们在<code>PrintStream.println</code>方法入口处注入<code>System.out.println("blahblah")</code>，由于<code>out</code>是<code>PrintStream</code>的实例，因此当执行注入代码时，我们又会调用<code>PrintStream.println</code>方法，从而造成死循环。</p> 
<p>解决这一问题的关键在于设置一个线程私有的标识位，用以区分应用代码的上下文以及注入代码的上下文。当即将执行注入代码时，我们将根据标识位判断是否已经位于注入代码的上下文之中。如果不是，则设置标识位并正常执行注入代码；如果是，则直接返回，不再执行注入代码。</p> 
<p>字节码注入的另一个技术难点则是命名空间。举个例子，不少应用程序都依赖于字节码工程库 ASM。当我们的注入逻辑依赖于 ASM 时，便有可能出现注入使用最新版本的 ASM，而应用程序使用较低版本的 
ASM 的问题。</p> <p>JDK 本身也使用了 ASM 库，如用来生成 Lambda 表达式的适配器类。JDK 的做法是重命名整个 ASM 库，为所有类的包名添加<code>jdk.internal</code>前缀。我们显然不好直接更改 
ASM 的包名，因此需要借助自定义类加载器来隔离命名空间。</p> <p>除了上述技术难点之外，基于字节码注入的工具还有另一个问题，那便是观察者效应（observer effect）对所收集的数据造成的影响。</p> 
<p>举个利用字节码注入收集每个方法的运行时间的例子。假设某个方法调用了另一个方法，而这两个方法都被注入了，那么统计被调用者运行时间的注入代码所耗费的时间，将不可避免地被计入至调用者方法的运行时间之中。</p> 
<p>再举一个统计新建对象数目的例子。我们知道，即时编译器中的逃逸分析可能会优化掉新建对象操作，但它不会消除相应的统计操作，比如上述例子中对<code>fireAllocationEvent</code>方法的调用。在这种情况下，我们将统计没有实际发生的新建对象操作。</p> 
<p>另一种情况则是，我们所注入的对<code>fireAllocationEvent</code>方法的调用，将影响到方法内联的决策。如果该新建对象的构造器调用恰好因此没有被内联，从而造成对象逃逸。在这种情况下，原本能够被逃逸分析优化掉的新建对象操作将无法优化，我们也将统计到原本不会发生的新建对象操作。</p> 
<p>总而言之，当使用字节码注入开发 profiler 时，需要辩证地看待所收集的数据。它仅能表示在被注入的情况下程序的执行状态，而非没有注入情况下的程序执行状态。</p> <h2>面向方面编程</h2> 
<p>说到字节码注入，就不得不提面向方面编程（Aspect-Oriented Programming，AOP）。面向方面编程的核心理念是定义切入点（pointcut）以及通知（advice）。程序控制流中所有匹配该切入点的连接点（joinpoint）都将执行这段通知代码。</p> 
<p>举个例子，我们定义一个指代所有方法入口的切入点，并指定在该切入点执行的“打印该方法的名字”这一通知。那么每个具体的方法入口便是一个连接点。</p> <p>面向方面编程的其中一种实现方式便是字节码注入，比如<a 
href="https://www.eclipse.org/aspectj/">AspectJ</a>。</p> <p>在前面的例子中，我们也相当于使用了面向方面编程，在所有的<code>new</code>字节码之后执行了下面这样一段通知代码。</p> 
<pre style="position: relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> `MyProfiler.fireAllocationEvent(&lt;Target&gt;.class)` </div></td> 
</tr> </tbody> </table></code> <div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 
</div></pre> <p>我曾经参与开发过一个应用了面向方面编程思想的字节码注入框架<a href="https://disl.ow2.org/">DiSL</a>。它支持用注解来定义切入点，用普通 
Java 方法来定义通知。例如，在方法入口处打印所在的方法名，可以简单表示为如下代码：</p> <pre style="position: relative;"><code> <table 
class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" 
data-line-number="1"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> @Before(marker 
= BodyMarker.class) </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="2"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
static void onMethodEntry(MethodStaticContext msc) { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> System.out.println(msc.thisMethodFullName()); </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> } </div></td> </tr> </tbody> </table></code> 
<div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 </div></pre> <p>如果有同学对这个工具感兴趣，或者有什么需求或者建议，欢迎你在留言中提出。</p> 
<h2>总结与实践</h2> <p>今天我介绍了 Java agent 以及字节码注入。</p> <p>我们可以通过 Java agent 的类加载拦截功能，修改某个类所对应的 byte 
数组，并利用这个修改过后的 byte 数组完成接下来的类加载。</p> <p>基于字节码注入的 profiler，可以统计程序运行过程中某些行为的出现次数。如果需要收集 Java 核心类库的数据，那么我们需要小心避免无限递归调用。另外，我们还需通过自定义类加载器来解决命名空间的问题。</p> 
<p>由于字节码注入会产生观察者效应，因此基于该技术的 profiler 所收集到的数据并不能反映程序的真实运行状态。它所反映的是程序在被注入的情况下的执行状态。</p> <hr> 
<p>今天的实践环节，请你思考如何注入方法出口。除了正常执行路径之外，你还需考虑异常执行路径。</p> <p><img src="https://static001.geekbang.org/resource/image/2a/d5/2a62e58cbdf56a5dc40748567d346fd5.jpg" 
alt=""></p>', '', 'book', 0, 'full_html', 'zh-hans', 9, 9) 
 {executed in 13 msec}
2020-11-19 20:06:41.935 INFO  jdbc.sqltiming Line:373 - select nodebodyen0_.entity_id as entity_i1_4_0_, nodebodyen0_.body_value as body_val2_4_0_, 
nodebodyen0_.body_summary as body_sum3_4_0_, nodebodyen0_.bundle as bundle4_4_0_, nodebodyen0_.delta 
as delta5_4_0_, nodebodyen0_.body_format as body_for6_4_0_, nodebodyen0_.langcode as langcode7_4_0_, 
nodebodyen0_.revision_id as revision8_4_0_ from node__body nodebodyen0_ where nodebodyen0_.entity_id=9 
 {executed in 1 msec}
2020-11-19 20:06:41.937 INFO  jdbc.resultsettable Line:610 - 
|----------|-----------|-------------|-------|------|------------|---------|------------|
|entity_id |body_value |body_summary |bundle |delta |body_format |langcode |revision_id |
|----------|-----------|-------------|-------|------|------------|---------|------------|
|----------|-----------|-------------|-------|------|------------|---------|------------|

2020-11-19 20:06:41.958 INFO  jdbc.sqltiming Line:373 - insert into node__body (body_value, body_summary, bundle, delta, body_format, langcode, revision_id, 
entity_id) values ('<p>关于 Java agent，大家可能都听过大名鼎鼎的<code>premain</code>方法。顾名思义，这个方法指的就是在<code>main</code>方法之前执行的方法。</p> 
<pre style="position: relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> package org.example; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="3"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
public class MyAgent { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="4"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
public static void premain(String args) { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> System.out.println("premain"); </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> } </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="7"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
} </div></td> </tr> </tbody> </table></code> <div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 
</div></pre> <p>我在上面这段代码中定义了一个<code>premain</code>方法。这里需要注意的是，Java 虚拟机所能识别的<code>premain</code>方法接收的是字符串类型的参数，而并非类似于<code>main</code>方法的字符串数组。</p> 
<p>为了能够以 Java agent 的方式运行该<code>premain</code>方法，我们需要将其打包成 jar 包，并在其中的 MANIFEST.MF 配置文件中，指定所谓的<code>Premain-class</code>。具体的命令如下所示：</p> 
<pre style="position: relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> # 注意第一条命令会向 manifest.txt 文件写入两行数据，其中包括一行空行 </div></td> </tr> <tr> 
<td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> $ echo ''Premain-Class: org.example.MyAgent 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> '' &gt; manifest.txt </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> $ jar cvmf manifest.txt myagent.jar org/ 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> $ java -javaagent:myagent.jar HelloWorld 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> premain </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="7"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> Hello, World </div></td> </tr> </tbody> </table></code> <div class="richcontent-pre-copy"> 
<span class="iconfont"></span>复制代码 </div></pre> <p>除了在命令行中指定 Java agent 之外，我们还可以通过 Attach 
API 远程加载。具体用法如下面的代码所示：</p> <pre style="position: relative;"><code> <table class="hljs-ln"> 
<tbody> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> import java.io.IOException; </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> import com.sun.tools.attach.*; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="5"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
public class AttachTest { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="6"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
public static void main(String[] args) </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="7"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> throws AttachNotSupportedException, IOException, AgentLoadException, 
AgentInitializationException { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="8"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
if (args.length &lt;= 1) { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="9"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
System.out.println("Usage: java AttachTest &lt;PID&gt; /PATH/TO/AGENT.jar"); </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="10"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> return; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="11"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> } </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="12"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
VirtualMachine vm = VirtualMachine.attach(args[0]); </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="13"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> vm.loadAgent(args[1]); </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="14"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> } </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="15"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
} </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="16"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> </div></td> </tr> </tbody> </table></code> 
<div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 </div></pre> <p>使用 Attach 
API 远程加载的 Java agent 不会再先于<code>main</code>方法执行，这取决于另一虚拟机调用 Attach API 的时机。并且，它运行的也不再是<code>premain</code>方法，而是名为<code>agentmain</code>的方法。</p> 
<pre style="position: relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> public class MyAgent { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> public static void agentmain(String args) { </div></td> </tr> <tr> 
<td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> System.out.println("agentmain"); </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> } </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> } </div></td> </tr> </tbody> </table></code> <div class="richcontent-pre-copy"> 
<span class="iconfont"></span>复制代码 </div></pre> <p>相应的，我们需要更新 jar 包中的 manifest 文件，使其包含<code>Agent-Class</code>的配置，例如<code>Agent-Class: 
org.example.MyAgent</code>。</p><!-- [[[read_end]]] --> <pre style="position: relative;"><code> 
<table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
$ echo ''Agent-Class: org.example.MyAgent </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> '' &gt; manifest.txt </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> $ jar cvmf manifest.txt myagent.jar org/ </div></td> </tr> <tr> 
<td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> $ java HelloWorld </div></td> </tr> <tr> 
<td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> Hello, World </div></td> </tr> <tr> <td 
class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> $ jps </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="7"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> $ java AttachTest &lt;pid&gt; myagent.jar </div></td> </tr> <tr> 
<td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="8"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> agentmain </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="9"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> // 最后一句输出来自于运行 HelloWorld 的 Java 进程 </div></td> </tr> </tbody> </table></code> 
<div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 </div></pre> <p>Java 
虚拟机并不限制 Java agent 的数量。你可以在 java 命令后附上多个<code>-javaagent</code>参数，或者远程 attach 多个 Java agent，Java 
虚拟机会按照定义顺序，或者 attach 的顺序逐个执行这些 Java agent。</p> <p>在<code>premain</code>方法或者<code>agentmain</code>方法中打印一些字符串并不出奇，我们完全可以将其中的逻辑并入<code>main</code>方法，或者其他监听端口的线程中。除此之外，Java 
agent 还提供了一套 instrumentation 机制，允许应用程序拦截类加载事件，并且更改该类的字节码。</p> <p>接下来，我们来了解一下基于这一机制的字节码注入。</p> 
<h2>字节码注入</h2> <pre style="position: relative;"><code> <table class="hljs-ln"> <tbody> <tr> 
<td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> package org.example; </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> import java.lang.instrument.*; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> import java.security.ProtectionDomain; </div></td> </tr> <tr> <td 
class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> public class MyAgent { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="7"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> public static void premain(String args, Instrumentation instrumentation) 
{ </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="8"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> instrumentation.addTransformer(new MyTransformer()); 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="9"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> } </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="10"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="11"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
static class MyTransformer implements ClassFileTransformer { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="12"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> public byte[] transform(ClassLoader loader, String className, Class&lt;?&gt; 
classBeingRedefined, </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="13"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
ProtectionDomain protectionDomain, byte[] classfileBuffer) throws IllegalClassFormatException 
{ </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="14"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> System.out.printf("Loaded %s: 0x%X%X%X%X\n", 
className, classfileBuffer[0], classfileBuffer[1], </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="15"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> classfileBuffer[2], classfileBuffer[3]); </div></td> </tr> <tr> 
<td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="16"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> return null; </div></td> </tr> <tr> <td 
class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="17"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> } </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="18"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> } </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="19"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
} </div></td> </tr> </tbody> </table></code> <div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 
</div></pre> <p>我们先来看一个例子。在上面这段代码中，<code>premain</code>方法多出了一个<code>Instrumentation</code>类型的参数，我们可以通过它来注册类加载事件的拦截器。该拦截器需要实现<code>ClassFileTransformer</code>接口，并重写其中的<code>transform</code>方法。</p> 
<p><code>transform</code>方法将接收一个 byte 数组类型的参数，它代表的是正在被加载的类的字节码。在上面这段代码中，我将打印该数组的前四个字节，也就是 Java 
class 文件的魔数（magic number）0xCAFEBABE。</p> <p><code>transform</code>方法将返回一个 byte 数组，代表更新过后的类的字节码。当方法返回之后，Java 
虚拟机会使用所返回的 byte 数组，来完成接下来的类加载工作。不过，如果<code>transform</code>方法返回 null 或者抛出异常，那么 Java 虚拟机将使用原来的 
byte 数组完成类加载工作。</p> <p>基于这一类加载事件的拦截功能，我们可以实现字节码注入（bytecode instrumentation），往正在被加载的类中插入额外的字节码。</p> 
<p>在工具篇中我曾经介绍过字节码工程框架 ASM 的用法。下面我将演示它的<a href="https://search.maven.org/artifact/org.ow2.asm/asm-tree/7.0-beta/jar">tree 
包</a>（依赖于<a href="https://search.maven.org/artifact/org.ow2.asm/asm/7.0-beta/jar">基础包</a>），用面向对象的方式注入字节码。</p> 
<pre style="position: relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> package org.example; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="3"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
import java.lang.instrument.*; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="4"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
import java.security.ProtectionDomain; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> import org.objectweb.asm.*; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> import org.objectweb.asm.tree.*; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="7"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="8"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
public class MyAgent { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="9"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
public static void premain(String args, Instrumentation instrumentation) { </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="10"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> instrumentation.addTransformer(new MyTransformer()); 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="11"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> } </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="12"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="13"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
static class MyTransformer implements ClassFileTransformer, Opcodes { </div></td> </tr> <tr> 
<td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="14"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> public byte[] transform(ClassLoader loader, 
String className, Class&lt;?&gt; classBeingRedefined, </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="15"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> ProtectionDomain protectionDomain, byte[] classfileBuffer) throws 
IllegalClassFormatException { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="16"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
ClassReader cr = new ClassReader(classfileBuffer); </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="17"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> ClassNode classNode = new ClassNode(ASM7); </div></td> </tr> <tr> 
<td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="18"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> cr.accept(classNode, ClassReader.SKIP_FRAMES); 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="19"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="20"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> for (MethodNode methodNode : classNode.methods) { </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="21"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> if ("main".equals(methodNode.name)) { 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="22"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> InsnList instrumentation = new InsnList(); 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="23"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> instrumentation.add(new FieldInsnNode(GETSTATIC, 
"java/lang/System", "out", "Ljava/io/PrintStream;")); </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="24"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> instrumentation.add(new LdcInsnNode("Hello, Instrumentation!")); 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="25"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> instrumentation </div></td> </tr> <tr> 
<td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="26"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> .add(new MethodInsnNode(INVOKEVIRTUAL, 
"java/io/PrintStream", "println", "(Ljava/lang/String;)V", false)); </div></td> </tr> <tr> 
<td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="27"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="28"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> methodNode.instructions.insert(instrumentation); </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="29"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> } </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="30"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> } </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="31"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="32"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> ClassWriter cw = new ClassWriter(ClassWriter.COMPUTE_FRAMES 
| ClassWriter.COMPUTE_MAXS); </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="33"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
classNode.accept(cw); </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="34"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
return cw.toByteArray(); </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="35"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
} </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="36"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> } </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="37"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> } </div></td> </tr> </tbody> </table></code> <div class="richcontent-pre-copy"> 
<span class="iconfont"></span>复制代码 </div></pre> <p>上面这段代码不难理解。我们将使用<code>ClassReader</code>读取所传入的 
byte 数组，并将其转换成<code>ClassNode</code>。然后我们将遍历<code>ClassNode</code>中的<code>MethodNode</code>节点，也就是该类中的构造器和方法。</p> 
<p>当遇到名字为<code>"main"</code>的方法时，我们会在方法的入口处注入<code>System.out.println("Hello, Instrumentation!");</code>。运行结果如下所示：</p> 
<pre style="position: relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> $ java -javaagent:myagent.jar -cp .:/PATH/TO/asm-7.0-beta.jar:/PATH/TO/asm-tree-7.0-beta.jar 
HelloWorld </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" 
data-line-number="2"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> Hello, 
Instrumentation! </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="3"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
Hello, World! </div></td> </tr> </tbody> </table></code> <div class="richcontent-pre-copy"> 
<span class="iconfont"></span>复制代码 </div></pre> <p>Java agent 还提供了另外两个功能<code>redefine</code>和<code>retransform</code>。这两个功能针对的是已加载的类，并要求用户传入所要<code>redefine</code>或者<code>retransform</code>的类实例。</p> 
<p>其中，<code>redefine</code>指的是舍弃原本的字节码，并替换成由用户提供的 byte 数组。该功能比较危险，一般用于修复出错了的字节码。</p> <p><code>retransform</code>则将针对所传入的类，重新调用所有已注册的<code>ClassFileTransformer</code>的<code>transform</code>方法。它的应用场景主要有如下两个。</p> 
<p>第一，在执行<code>premain</code>或者<code>agentmain</code>方法前，Java 虚拟机早已加载了不少类，而这些类的加载事件并没有被拦截，因此也没有被注入。使用<code>retransform</code>功能可以注入这些已加载但未注入的类。</p> 
<p>第二，在定义了多个 Java agent，多个注入的情况下，我们可能需要移除其中的部分注入。当调用<code>Instrumentation.removeTransformer</code>去除某个注入类后，我们可以调用<code>retransform</code>功能，重新从原始 
byte 数组开始进行注入。</p> <p>Java agent 的这些功能都是通过 JVMTI agent，也就是 C agent 来实现的。JVMTI 是一个事件驱动的工具实现接口，通常，我们会在 
C agent 加载后的入口方法<code>Agent_OnLoad</code>处注册各个事件的钩子（hook）方法。当 Java 虚拟机触发了这些事件时，便会调用对应的钩子方法。</p> 
<pre style="position: relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> JNIEXPORT jint JNICALL </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> Agent_OnLoad(JavaVM *vm, char *options, void *reserved); </div></td> 
</tr> </tbody> </table></code> <div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 
</div></pre> <p>举个例子，我们可以为 JVMTI 中的<code>ClassFileLoadHook</code>事件设置钩子，从而在 C 层面拦截所有的类加载事件。关于 
JVMTI 的其他事件，你可以参考该<a href="https://docs.oracle.com/en/java/javase/11/docs/specs/jvmti.html#EventIndex">链接</a>。</p> 
<h2>基于字节码注入的 profiler</h2> <p>我们可以利用字节码注入来实现代码覆盖工具（例如<a href="https://www.jacoco.org/jacoco/">JaCoCo</a>），或者各式各样的 
profiler。</p> <p>通常，我们会定义一个运行时类，并在某一程序行为的周围，注入对该运行时类中方法的调用，以表示该程序行为正要发生或者已经发生。</p> <pre style="position: 
relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
package org.example; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="2"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> import java.util.concurrent.ConcurrentHashMap; 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> import java.util.concurrent.atomic.AtomicInteger; 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> public class MyProfiler { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="7"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> public static ConcurrentHashMap&lt;Class&lt;?&gt;, AtomicInteger&gt; 
data = new ConcurrentHashMap&lt;&gt;(); </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="8"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="9"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
public static void fireAllocationEvent(Class&lt;?&gt; klass) { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="10"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> data.computeIfAbsent(klass, kls -&gt; new AtomicInteger()) </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="11"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> .incrementAndGet(); </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="12"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> } </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="13"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="14"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
public static void dump() { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="15"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
data.forEach((kls, counter) -&gt; { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div 
class="hljs-ln-line hljs-ln-n" data-line-number="16"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> System.err.printf("%s: %d\n", kls.getName(), counter.get()); </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="17"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> }); </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="18"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> } </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="19"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="20"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> static { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="21"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> Runtime.getRuntime().addShutdownHook(new Thread(MyProfiler::dump)); 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="22"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> } </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="23"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> } </div></td> </tr> </tbody> </table></code> <div class="richcontent-pre-copy"> 
<span class="iconfont"></span>复制代码 </div></pre> <p>举个例子，上面这段代码便是一个运行时类。该类维护了一个<code>HashMap</code>，用来统计每个类所新建实例的数目。当程序退出时，我们将逐个打印出每个类的名字，以及其新建实例的数目。</p> 
<p>在 Java agent 中，我们会截获正在加载的类，并且在每条<code>new</code>字节码之后插入对<code>fireAllocationEvent</code>方法的调用，以表示当前正在新建某个类的实例。具体的注入代码如下所示：</p> 
<pre style="position: relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> package org.example; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="3"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
import java.lang.instrument.*; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="4"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
import java.security.ProtectionDomain; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="6"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
import org.objectweb.asm.*; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="7"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
import org.objectweb.asm.tree.*; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="8"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="9"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> public class MyAgent { </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="10"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="11"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> public static void premain(String args, Instrumentation instrumentation) 
{ </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="12"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> instrumentation.addTransformer(new MyTransformer()); 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="13"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> } </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="14"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="15"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
static class MyTransformer implements ClassFileTransformer, Opcodes { </div></td> </tr> <tr> 
<td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="16"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> public byte[] transform(ClassLoader loader, 
String className, Class&lt;?&gt; classBeingRedefined, </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="17"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> ProtectionDomain protectionDomain, byte[] classfileBuffer) throws 
IllegalClassFormatException { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="18"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
if (className.startsWith("java") || </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div 
class="hljs-ln-line hljs-ln-n" data-line-number="19"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> className.startsWith("javax") || </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="20"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> className.startsWith("jdk") || </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="21"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> className.startsWith("sun") || </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="22"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> className.startsWith("com/sun") || </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="23"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> className.startsWith("org/example")) { </div></td> </tr> <tr> <td 
class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="24"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> // Skip JDK classes and profiler classes 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="25"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> return null; </div></td> </tr> <tr> <td 
class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="26"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> } </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="27"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="28"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
ClassReader cr = new ClassReader(classfileBuffer); </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="29"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> ClassNode classNode = new ClassNode(ASM7); </div></td> </tr> <tr> 
<td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="30"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> cr.accept(classNode, ClassReader.SKIP_FRAMES); 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="31"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="32"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> for (MethodNode methodNode : classNode.methods) { </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="33"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> for (AbstractInsnNode node : methodNode.instructions.toArray()) 
{ </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="34"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> if (node.getOpcode() == NEW) { </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="35"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> TypeInsnNode typeInsnNode = (TypeInsnNode) 
node; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" 
data-line-number="36"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="37"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> InsnList instrumentation = new InsnList(); 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="38"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> instrumentation.add(new LdcInsnNode(Type.getObjectType(typeInsnNode.desc))); 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="39"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> instrumentation.add(new MethodInsnNode(INVOKESTATIC, 
"org/example/MyProfiler", "fireAllocationEvent", </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="40"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> "(Ljava/lang/Class;)V", false)); </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="41"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="42"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
methodNode.instructions.insert(node, instrumentation); </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="43"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> } </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="44"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
} </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="45"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> } </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="46"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="47"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
ClassWriter cw = new ClassWriter(ClassWriter.COMPUTE_FRAMES | ClassWriter.COMPUTE_MAXS); </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="48"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> classNode.accept(cw); </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="49"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> return cw.toByteArray(); </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="50"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> } </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="51"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> } </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="52"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="53"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> } </div></td> </tr> </tbody> </table></code> 
<div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 </div></pre> <p>你或许已经留意到，我们不得不排除对 
JDK 类以及该运行时类的注入。这是因为，对这些类的注入很可能造成死循环调用，并最终抛出<code>StackOverflowException</code>异常。</p> <p>举个例子，假设我们在<code>PrintStream.println</code>方法入口处注入<code>System.out.println("blahblah")</code>，由于<code>out</code>是<code>PrintStream</code>的实例，因此当执行注入代码时，我们又会调用<code>PrintStream.println</code>方法，从而造成死循环。</p> 
<p>解决这一问题的关键在于设置一个线程私有的标识位，用以区分应用代码的上下文以及注入代码的上下文。当即将执行注入代码时，我们将根据标识位判断是否已经位于注入代码的上下文之中。如果不是，则设置标识位并正常执行注入代码；如果是，则直接返回，不再执行注入代码。</p> 
<p>字节码注入的另一个技术难点则是命名空间。举个例子，不少应用程序都依赖于字节码工程库 ASM。当我们的注入逻辑依赖于 ASM 时，便有可能出现注入使用最新版本的 ASM，而应用程序使用较低版本的 
ASM 的问题。</p> <p>JDK 本身也使用了 ASM 库，如用来生成 Lambda 表达式的适配器类。JDK 的做法是重命名整个 ASM 库，为所有类的包名添加<code>jdk.internal</code>前缀。我们显然不好直接更改 
ASM 的包名，因此需要借助自定义类加载器来隔离命名空间。</p> <p>除了上述技术难点之外，基于字节码注入的工具还有另一个问题，那便是观察者效应（observer effect）对所收集的数据造成的影响。</p> 
<p>举个利用字节码注入收集每个方法的运行时间的例子。假设某个方法调用了另一个方法，而这两个方法都被注入了，那么统计被调用者运行时间的注入代码所耗费的时间，将不可避免地被计入至调用者方法的运行时间之中。</p> 
<p>再举一个统计新建对象数目的例子。我们知道，即时编译器中的逃逸分析可能会优化掉新建对象操作，但它不会消除相应的统计操作，比如上述例子中对<code>fireAllocationEvent</code>方法的调用。在这种情况下，我们将统计没有实际发生的新建对象操作。</p> 
<p>另一种情况则是，我们所注入的对<code>fireAllocationEvent</code>方法的调用，将影响到方法内联的决策。如果该新建对象的构造器调用恰好因此没有被内联，从而造成对象逃逸。在这种情况下，原本能够被逃逸分析优化掉的新建对象操作将无法优化，我们也将统计到原本不会发生的新建对象操作。</p> 
<p>总而言之，当使用字节码注入开发 profiler 时，需要辩证地看待所收集的数据。它仅能表示在被注入的情况下程序的执行状态，而非没有注入情况下的程序执行状态。</p> <h2>面向方面编程</h2> 
<p>说到字节码注入，就不得不提面向方面编程（Aspect-Oriented Programming，AOP）。面向方面编程的核心理念是定义切入点（pointcut）以及通知（advice）。程序控制流中所有匹配该切入点的连接点（joinpoint）都将执行这段通知代码。</p> 
<p>举个例子，我们定义一个指代所有方法入口的切入点，并指定在该切入点执行的“打印该方法的名字”这一通知。那么每个具体的方法入口便是一个连接点。</p> <p>面向方面编程的其中一种实现方式便是字节码注入，比如<a 
href="https://www.eclipse.org/aspectj/">AspectJ</a>。</p> <p>在前面的例子中，我们也相当于使用了面向方面编程，在所有的<code>new</code>字节码之后执行了下面这样一段通知代码。</p> 
<pre style="position: relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> `MyProfiler.fireAllocationEvent(&lt;Target&gt;.class)` </div></td> 
</tr> </tbody> </table></code> <div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 
</div></pre> <p>我曾经参与开发过一个应用了面向方面编程思想的字节码注入框架<a href="https://disl.ow2.org/">DiSL</a>。它支持用注解来定义切入点，用普通 
Java 方法来定义通知。例如，在方法入口处打印所在的方法名，可以简单表示为如下代码：</p> <pre style="position: relative;"><code> <table 
class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" 
data-line-number="1"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> @Before(marker 
= BodyMarker.class) </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="2"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
static void onMethodEntry(MethodStaticContext msc) { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> System.out.println(msc.thisMethodFullName()); </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> } </div></td> </tr> </tbody> </table></code> 
<div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 </div></pre> <p>如果有同学对这个工具感兴趣，或者有什么需求或者建议，欢迎你在留言中提出。</p> 
<h2>总结与实践</h2> <p>今天我介绍了 Java agent 以及字节码注入。</p> <p>我们可以通过 Java agent 的类加载拦截功能，修改某个类所对应的 byte 
数组，并利用这个修改过后的 byte 数组完成接下来的类加载。</p> <p>基于字节码注入的 profiler，可以统计程序运行过程中某些行为的出现次数。如果需要收集 Java 核心类库的数据，那么我们需要小心避免无限递归调用。另外，我们还需通过自定义类加载器来解决命名空间的问题。</p> 
<p>由于字节码注入会产生观察者效应，因此基于该技术的 profiler 所收集到的数据并不能反映程序的真实运行状态。它所反映的是程序在被注入的情况下的执行状态。</p> <hr> 
<p>今天的实践环节，请你思考如何注入方法出口。除了正常执行路径之外，你还需考虑异常执行路径。</p> <p><img src="https://static001.geekbang.org/resource/image/2a/d5/2a62e58cbdf56a5dc40748567d346fd5.jpg" 
alt=""></p>', '', 'book', 0, 'full_html', 'zh-hans', 9, 9) 
 {executed in 12 msec}
2020-11-19 20:06:41.975 INFO  jdbc.sqltiming Line:373 - select nodefiledd0_.nid as nid1_10_, nodefiledd0_.changed as changed2_10_, nodefiledd0_.created 
as created3_10_, nodefiledd0_.default_langcode as default_4_10_, nodefiledd0_.langcode as langcode5_10_, 
nodefiledd0_.promote as promote6_10_, nodefiledd0_.revision_translation_affected as revision7_10_, 
nodefiledd0_.status as status8_10_, nodefiledd0_.sticky as sticky9_10_, nodefiledd0_.title 
as title10_10_, nodefiledd0_.type as type11_10_, nodefiledd0_.uid as uid12_10_, nodefiledd0_.vid 
as vid13_10_ from node_field_data nodefiledd0_ where nodefiledd0_.nid=9 
 {executed in 1 msec}
2020-11-19 20:06:41.976 INFO  jdbc.resultsettable Line:610 - 
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|-----|----|----|
|nid |changed |created |default_langcode |langcode |promote |revision_translation_affected |status |sticky |title |type |uid |vid |
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|-----|----|----|
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|-----|----|----|

2020-11-19 20:06:41.980 INFO  jdbc.sqltiming Line:373 - select nodefieldr0_.nid as nid1_11_0_, nodefieldr0_.changed as changed2_11_0_, nodefieldr0_.created 
as created3_11_0_, nodefieldr0_.default_langcode as default_4_11_0_, nodefieldr0_.langcode 
as langcode5_11_0_, nodefieldr0_.promote as promote6_11_0_, nodefieldr0_.revision_translation_affected 
as revision7_11_0_, nodefieldr0_.status as status8_11_0_, nodefieldr0_.sticky as sticky9_11_0_, 
nodefieldr0_.title as title10_11_0_, nodefieldr0_.uid as uid11_11_0_, nodefieldr0_.vid as vid12_11_0_ 
from node_field_revision nodefieldr0_ where nodefieldr0_.nid=9 
 {executed in 1 msec}
2020-11-19 20:06:41.982 INFO  jdbc.resultsettable Line:610 - 
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|----|----|
|nid |changed |created |default_langcode |langcode |promote |revision_translation_affected |status |sticky |title |uid |vid |
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|----|----|
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|----|----|

2020-11-19 20:06:41.987 INFO  jdbc.sqltiming Line:373 - insert into node_field_revision (changed, created, default_langcode, langcode, promote, revision_translation_affected, 
status, sticky, title, uid, vid, nid) values (1605787601, 1605787601, 1, 'zh-hans', 0, 1, 1, 
0, '33丨JavaAgent与字节码注入', 1, 9, 9) 
 {executed in 1 msec}
2020-11-19 20:06:41.994 INFO  jdbc.sqltiming Line:373 - select nodefiledd0_.nid as nid1_10_0_, nodefiledd0_.changed as changed2_10_0_, nodefiledd0_.created 
as created3_10_0_, nodefiledd0_.default_langcode as default_4_10_0_, nodefiledd0_.langcode 
as langcode5_10_0_, nodefiledd0_.promote as promote6_10_0_, nodefiledd0_.revision_translation_affected 
as revision7_10_0_, nodefiledd0_.status as status8_10_0_, nodefiledd0_.sticky as sticky9_10_0_, 
nodefiledd0_.title as title10_10_0_, nodefiledd0_.type as type11_10_0_, nodefiledd0_.uid as 
uid12_10_0_, nodefiledd0_.vid as vid13_10_0_ from node_field_data nodefiledd0_ where nodefiledd0_.nid=9 
 {executed in 1 msec}
2020-11-19 20:06:41.997 INFO  jdbc.resultsettable Line:610 - 
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|-----|----|----|
|nid |changed |created |default_langcode |langcode |promote |revision_translation_affected |status |sticky |title |type |uid |vid |
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|-----|----|----|
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|-----|----|----|

2020-11-19 20:06:42.002 INFO  jdbc.sqltiming Line:373 - insert into node_field_data (changed, created, default_langcode, langcode, promote, revision_translation_affected, 
status, sticky, title, type, uid, vid, nid) values (1605787601, 1605787601, 1, 'zh-hans', 0, 
1, 1, 0, '33丨JavaAgent与字节码注入', 'book', 1, 9, 9) 
 {executed in 2 msec}
2020-11-19 20:06:42.009 INFO  jdbc.sqltiming Line:373 - select bookfieldm0_.entity_id as entity_i1_8_, bookfieldm0_.bundle as bundle2_8_, bookfieldm0_.delta 
as delta3_8_, bookfieldm0_.langcode as langcode4_8_, bookfieldm0_.field_media_value as field_me5_8_, 
bookfieldm0_.revision_id as revision6_8_ from node__field_media bookfieldm0_ where bookfieldm0_.entity_id=9 
 {executed in 1 msec}
2020-11-19 20:06:42.010 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------------|------------|
|entity_id |bundle |delta |langcode |field_media_value |revision_id |
|----------|-------|------|---------|------------------|------------|
|----------|-------|------|---------|------------------|------------|

2020-11-19 20:06:42.015 INFO  jdbc.sqltiming Line:373 - select bookfieldm0_.entity_id as entity_i1_8_0_, bookfieldm0_.bundle as bundle2_8_0_, bookfieldm0_.delta 
as delta3_8_0_, bookfieldm0_.langcode as langcode4_8_0_, bookfieldm0_.field_media_value as 
field_me5_8_0_, bookfieldm0_.revision_id as revision6_8_0_ from node__field_media bookfieldm0_ 
where bookfieldm0_.entity_id=9 
 {executed in 1 msec}
2020-11-19 20:06:42.017 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------------|------------|
|entity_id |bundle |delta |langcode |field_media_value |revision_id |
|----------|-------|------|---------|------------------|------------|
|----------|-------|------|---------|------------------|------------|

2020-11-19 20:06:42.023 INFO  jdbc.sqltiming Line:373 - insert into node__field_media (bundle, delta, langcode, field_media_value, revision_id, entity_id) 
values ('book', 0, 'zh-hans', 'https://qdall01.baidupcs.com/file/db19598adc436fb16e930ec3fdb2e37d?bkt=en-c58a217c5b5bf7b2e91381d224e24b09cf87eeddf1c469fd710077908c52983204fe337bec21c40a&fid=3757516097-778750-987978065903771&time=1605787600&sign=FDTAXUGERLQlBHSKfWqir-DCb740ccc5511e5e8fedcff06b081203-A0o1FqaABhHn75GzN3nr3NHhcJs%3D&to=92&size=5033343&sta_dx=5033343&sta_cs=4321&sta_ft=mp3&sta_ct=7&sta_mt=0&fm2=MH%2CQingdao%2CAnywhere%2C%2Cshanghai%2Ccnc&ctime=1567182977&mtime=1605787492&resv0=-1&resv1=0&resv2=rlim&resv3=2&resv4=5033343&vuk=3757516097&iv=0&htype=&randtype=em&newver=1&newfm=1&secfm=1&flow_ver=3&pkey=en-16310cbe901495a4202ec754401760a7cd27483ca591f3df8e1b8059309238f81cd64a44c3b0baa6&sl=76480590&expires=8h&rt=pr&r=700803584&mlogid=7510716638530989077&vbdid=64799653&fin=33%E4%B8%A8JavaAgent%E4%B8%8E%E5%AD%97%E8%8A%82%E7%A0%81%E6%B3%A8%E5%85%A5.mp3&bflag=92,34-92&rtype=1&dp-logid=7510716638530989077&dp-callid=0.1.1&hps=1&tsl=80&csl=80&fsl=-1&csign=yVzLQPCt4DblfMLqd2BCjd2RnqQ%3D&so=0&ut=6&uter=0&serv=0&uc=1458616558&ti=16c8192e22ea32f51088e4f00a4d826e05d25e5ea0bd0d3a&hflag=30&adg=c_0f3c8fb981bae1fdae375754a6f1d609&reqlabel=778750_l_eeb31e180410b8be0e62f686c2b42c5d_-1_43d73532db4f9890a29565ef474ca519&ibp=1&by=themis&filename=33%E4%B8%A8JavaAgent%E4%B8%8E%E5%AD%97%E8%8A%82%E7%A0%81%E6%B3%A8%E5%85%A5.mp3', 
9, 9) 
 {executed in 2 msec}
2020-11-19 20:06:42.031 INFO  jdbc.sqltiming Line:373 - select nodefieldm0_.entity_id as entity_i1_17_0_, nodefieldm0_.bundle as bundle2_17_0_, nodefieldm0_.delta 
as delta3_17_0_, nodefieldm0_.langcode as langcode4_17_0_, nodefieldm0_.field_media_value as 
field_me5_17_0_, nodefieldm0_.revision_id as revision6_17_0_ from node_revision__field_media 
nodefieldm0_ where nodefieldm0_.entity_id=9 
 {executed in 2 msec}
2020-11-19 20:06:42.033 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------------|------------|
|entity_id |bundle |delta |langcode |field_media_value |revision_id |
|----------|-------|------|---------|------------------|------------|
|----------|-------|------|---------|------------------|------------|

2020-11-19 20:06:42.038 INFO  jdbc.sqltiming Line:373 - insert into node_revision__field_media (bundle, delta, langcode, field_media_value, revision_id, 
entity_id) values ('book', 0, 'zh-hans', 'https://qdall01.baidupcs.com/file/db19598adc436fb16e930ec3fdb2e37d?bkt=en-c58a217c5b5bf7b2e91381d224e24b09cf87eeddf1c469fd710077908c52983204fe337bec21c40a&fid=3757516097-778750-987978065903771&time=1605787600&sign=FDTAXUGERLQlBHSKfWqir-DCb740ccc5511e5e8fedcff06b081203-A0o1FqaABhHn75GzN3nr3NHhcJs%3D&to=92&size=5033343&sta_dx=5033343&sta_cs=4321&sta_ft=mp3&sta_ct=7&sta_mt=0&fm2=MH%2CQingdao%2CAnywhere%2C%2Cshanghai%2Ccnc&ctime=1567182977&mtime=1605787492&resv0=-1&resv1=0&resv2=rlim&resv3=2&resv4=5033343&vuk=3757516097&iv=0&htype=&randtype=em&newver=1&newfm=1&secfm=1&flow_ver=3&pkey=en-16310cbe901495a4202ec754401760a7cd27483ca591f3df8e1b8059309238f81cd64a44c3b0baa6&sl=76480590&expires=8h&rt=pr&r=700803584&mlogid=7510716638530989077&vbdid=64799653&fin=33%E4%B8%A8JavaAgent%E4%B8%8E%E5%AD%97%E8%8A%82%E7%A0%81%E6%B3%A8%E5%85%A5.mp3&bflag=92,34-92&rtype=1&dp-logid=7510716638530989077&dp-callid=0.1.1&hps=1&tsl=80&csl=80&fsl=-1&csign=yVzLQPCt4DblfMLqd2BCjd2RnqQ%3D&so=0&ut=6&uter=0&serv=0&uc=1458616558&ti=16c8192e22ea32f51088e4f00a4d826e05d25e5ea0bd0d3a&hflag=30&adg=c_0f3c8fb981bae1fdae375754a6f1d609&reqlabel=778750_l_eeb31e180410b8be0e62f686c2b42c5d_-1_43d73532db4f9890a29565ef474ca519&ibp=1&by=themis&filename=33%E4%B8%A8JavaAgent%E4%B8%8E%E5%AD%97%E8%8A%82%E7%A0%81%E6%B3%A8%E5%85%A5.mp3', 
9, 9) 
 {executed in 1 msec}
2020-11-19 20:06:42.046 INFO  jdbc.sqltiming Line:373 - select bookfieldc0_.entity_id as entity_i1_5_, bookfieldc0_.bundle as bundle2_5_, bookfieldc0_.field_comment_value 
as field_co3_5_, bookfieldc0_.delta as delta4_5_, bookfieldc0_.field_comment_format as field_co5_5_, 
bookfieldc0_.langcode as langcode6_5_, bookfieldc0_.revision_id as revision7_5_ from node__field_comment 
bookfieldc0_ where bookfieldc0_.entity_id=9 
 {executed in 1 msec}
2020-11-19 20:06:42.048 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|--------------------|------|---------------------|---------|------------|
|entity_id |bundle |field_comment_value |delta |field_comment_format |langcode |revision_id |
|----------|-------|--------------------|------|---------------------|---------|------------|
|----------|-------|--------------------|------|---------------------|---------|------------|

2020-11-19 20:06:42.052 INFO  jdbc.sqltiming Line:373 - select bookfieldc0_.entity_id as entity_i1_5_0_, bookfieldc0_.bundle as bundle2_5_0_, bookfieldc0_.field_comment_value 
as field_co3_5_0_, bookfieldc0_.delta as delta4_5_0_, bookfieldc0_.field_comment_format as 
field_co5_5_0_, bookfieldc0_.langcode as langcode6_5_0_, bookfieldc0_.revision_id as revision7_5_0_ 
from node__field_comment bookfieldc0_ where bookfieldc0_.entity_id=9 
 {executed in 1 msec}
2020-11-19 20:06:42.054 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|--------------------|------|---------------------|---------|------------|
|entity_id |bundle |field_comment_value |delta |field_comment_format |langcode |revision_id |
|----------|-------|--------------------|------|---------------------|---------|------------|
|----------|-------|--------------------|------|---------------------|---------|------------|

2020-11-19 20:06:42.066 INFO  jdbc.sqltiming Line:373 - insert into node__field_comment (bundle, field_comment_value, delta, field_comment_format, 
langcode, revision_id, entity_id) values ('book', '<li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/0f/67/f4/9a1feb59.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>godtrue</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2018-10-13 </div> </div> <div 
class="_2eMTs2JE_0"> <div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class="">3</span> 
</div> <!----> <!----> </div> </div> <div class="_3M6kV3zb_0"> 阅过留痕 <br> <br>1：Java agent 是啥玩意？ 
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这个概念老师没有详细讲解，我的理解是Java语言的一个特性，这个特性能够实现Java字节码的注入 <br> 
<br>2：Java字节码的注入有什么用处呢？ <br>在平时编程几乎没有使用到这方面的功能，应该是在一些框架的设计的时候才使用吧！比如：专栏中提到的面相切面编程。 <br> <br>3：Java 
agent 本质上是通过 c agent 来实现的，那 c agent 本质上是怎么实现的呢？ <br>C agent是一个事件驱动的工具实现接口，通常我们会在 C agent 加载后的入口方案 
Agent_OnLoad处注册各个事件的钩子方法。当Java虚拟机触发了这些事件时，便会调用对应的钩子方法 <br> <br>4：留个话头 <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;写代码实现某些功能，我的理解有三个时间段 
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;第一个：源码阶段，最常用的，也是编程的主要活动时间 <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;第二个：字节码阶段，有些功能可能会在加载字节码时修改或者添加某些字节码，某些框架做的事情 
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;第三个：运行阶段，某些工具，在程序运行时修改代码，实现运行时功能分支的控制 </div> <div class="_2r3UB1GX_0"> 
<span>展开</span><i class="iconfont"></i> </div> <!----> </div></li> <li class="reJj6Thl_0"><img 
src="https://static001.geekbang.org/account/avatar/00/10/07/8c/51401220.jpg" class="_2273kGdT_0"> 
<div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> <span>小美</span> 
<!----> </div> <div class="_1H1Z49Dr_0"> 2018-11-19 </div> </div> <div class="_2eMTs2JE_0"> 
<div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class="">2</span> </div> <!----> 
<!----> </div> </div> <div class="_3M6kV3zb_0"> 用attach的方式注入字节码的时候遇到了99线升高的性能问题，看一些资料说 class 
redefinition 的时候会阻塞线程。请问能详细讲下吗？ </div> <div class="_2r3UB1GX_0"> <span>展开</span><i class="iconfont"></i> 
</div> <div class="_2xNIY4NG_0"> <p class="_33BLbmw4_0">作者回复: 你是在做redefine时出问题，还是没触发时便已出问题？<br><br>class 
redefinition需要爬每个线程的Java栈，检查有没有用到被redefine的类的方法，因此会stop-the-world。另外，redefine后，JIT’ed代码会被抛弃，重新解释执行</p> 
</div> </div></li> <li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/0f/9b/db/708f5fd6.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>feng</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2018-10-07 </div> </div> <div class="_2eMTs2JE_0"> 
<div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class="">2</span> </div> <!----> 
<!----> </div> </div> <div class="_3M6kV3zb_0"> 第一个实验做的不严谨，第一，木有定义HelloWord类，第二，没有执行编译操作，不知道是有意为之，还是不小心把步骤漏掉了 
</div> <div class="_2r3UB1GX_0"> <span>展开</span><i class="iconfont"></i> </div> <!----> </div></li> 
<li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/0f/7c/10/165cb374.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>Scott</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2018-10-06 </div> </div> <div class="_2eMTs2JE_0"> 
<div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class="">1</span> </div> <!----> 
<!----> </div> </div> <div class="_3M6kV3zb_0"> 出方法时需要注入的字节码除了返回，还有几种情况，如果没有catch块，就拦截throw，如果有，但是catch块里面可能有很多层，只是遍历inst应该是不可以的 
</div> <div class="_2r3UB1GX_0"> <span>展开</span><i class="iconfont"></i> </div> <div class="_2xNIY4NG_0"> 
<p class="_33BLbmw4_0">作者回复: 其实不用管有没有catch块，有没有throw，直接给所有代码罩一个catch any的异常处理就行了</p> </div> 
</div></li> <li class="reJj6Thl_0"><img src="" class="_2273kGdT_0"> <div class="_2CG0SquK_0"> 
<div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> <span>奇奇</span> <!----> </div> <div 
class="_1H1Z49Dr_0"> 2019-04-29 </div> </div> <div class="_2eMTs2JE_0"> <div class="_2P4B1Hdm_0"> 
<i class="iconfont"></i> <span class=""></span> </div> <!----> <!----> </div> </div> <div 
class="_3M6kV3zb_0"> ASM7 GETSTATIC这些常量是哪里来的？ </div> <div class="_2r3UB1GX_0"> <span>展开</span><i 
class="iconfont"></i> </div> <!----> </div></li> <li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/0f/9b/db/708f5fd6.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>feng</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2018-10-07 </div> </div> <div class="_2eMTs2JE_0"> 
<div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class=""></span> </div> <!----> <!----> 
</div> </div> <div class="_3M6kV3zb_0"> 还有个问题想请教下，每次启动的时候都会打印如下信息，objc[2614]: Class JavaLaunchHelper 
is implemented in both /Library/Java/JavaVirtualMachines/jdk1.8.0_31.jdk/Contents/Home/bin/java 
(0x102f6f4c0) and /Library/Java/JavaVirtualMachines/jdk1.8.0_31.jdk/Contents/Home/jre/lib/libinstrument.dylib 
(0x104f384e0). One of the two will be used. Which one is undefined. <br> <br>请问怎么可以消除，谢谢 </div> 
<div class="_2r3UB1GX_0"> <span>展开</span><i class="iconfont"></i> </div> <!----> </div></li> 
<li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/0f/7c/10/165cb374.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>Scott</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2018-10-06 </div> </div> <div class="_2eMTs2JE_0"> 
<div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class=""></span> </div> <!----> <!----> 
</div> </div> <div class="_3M6kV3zb_0"> 我看到了jvmti可以回调异常事件，但是java.lang.instrument包下没有处理这个事件的，只能在load时回调，处理异常究竟是怎么做的？ 
</div> <div class="_2r3UB1GX_0"> <span>展开</span><i class="iconfont"></i> </div> <div class="_2xNIY4NG_0"> 
<p class="_33BLbmw4_0">作者回复: Instrumentation包并没有所有JVMTI功能</p> </div> </div></li>', 0, 'full_html', 
'zh-hans', 9, 9) 
 {executed in 6 msec}
2020-11-19 20:06:42.078 INFO  jdbc.sqltiming Line:373 - select nodefieldc0_.entity_id as entity_i1_14_0_, nodefieldc0_.bundle as bundle2_14_0_, nodefieldc0_.field_comment_value 
as field_co3_14_0_, nodefieldc0_.delta as delta4_14_0_, nodefieldc0_.field_comment_format as 
field_co5_14_0_, nodefieldc0_.langcode as langcode6_14_0_, nodefieldc0_.revision_id as revision7_14_0_ 
from node_revision__field_comment nodefieldc0_ where nodefieldc0_.entity_id=9 
 {executed in 1 msec}
2020-11-19 20:06:42.080 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|--------------------|------|---------------------|---------|------------|
|entity_id |bundle |field_comment_value |delta |field_comment_format |langcode |revision_id |
|----------|-------|--------------------|------|---------------------|---------|------------|
|----------|-------|--------------------|------|---------------------|---------|------------|

2020-11-19 20:06:42.091 INFO  jdbc.sqltiming Line:373 - insert into node_revision__field_comment (bundle, field_comment_value, delta, field_comment_format, 
langcode, revision_id, entity_id) values ('book', '<li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/0f/67/f4/9a1feb59.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>godtrue</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2018-10-13 </div> </div> <div 
class="_2eMTs2JE_0"> <div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class="">3</span> 
</div> <!----> <!----> </div> </div> <div class="_3M6kV3zb_0"> 阅过留痕 <br> <br>1：Java agent 是啥玩意？ 
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这个概念老师没有详细讲解，我的理解是Java语言的一个特性，这个特性能够实现Java字节码的注入 <br> 
<br>2：Java字节码的注入有什么用处呢？ <br>在平时编程几乎没有使用到这方面的功能，应该是在一些框架的设计的时候才使用吧！比如：专栏中提到的面相切面编程。 <br> <br>3：Java 
agent 本质上是通过 c agent 来实现的，那 c agent 本质上是怎么实现的呢？ <br>C agent是一个事件驱动的工具实现接口，通常我们会在 C agent 加载后的入口方案 
Agent_OnLoad处注册各个事件的钩子方法。当Java虚拟机触发了这些事件时，便会调用对应的钩子方法 <br> <br>4：留个话头 <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;写代码实现某些功能，我的理解有三个时间段 
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;第一个：源码阶段，最常用的，也是编程的主要活动时间 <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;第二个：字节码阶段，有些功能可能会在加载字节码时修改或者添加某些字节码，某些框架做的事情 
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;第三个：运行阶段，某些工具，在程序运行时修改代码，实现运行时功能分支的控制 </div> <div class="_2r3UB1GX_0"> 
<span>展开</span><i class="iconfont"></i> </div> <!----> </div></li> <li class="reJj6Thl_0"><img 
src="https://static001.geekbang.org/account/avatar/00/10/07/8c/51401220.jpg" class="_2273kGdT_0"> 
<div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> <span>小美</span> 
<!----> </div> <div class="_1H1Z49Dr_0"> 2018-11-19 </div> </div> <div class="_2eMTs2JE_0"> 
<div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class="">2</span> </div> <!----> 
<!----> </div> </div> <div class="_3M6kV3zb_0"> 用attach的方式注入字节码的时候遇到了99线升高的性能问题，看一些资料说 class 
redefinition 的时候会阻塞线程。请问能详细讲下吗？ </div> <div class="_2r3UB1GX_0"> <span>展开</span><i class="iconfont"></i> 
</div> <div class="_2xNIY4NG_0"> <p class="_33BLbmw4_0">作者回复: 你是在做redefine时出问题，还是没触发时便已出问题？<br><br>class 
redefinition需要爬每个线程的Java栈，检查有没有用到被redefine的类的方法，因此会stop-the-world。另外，redefine后，JIT’ed代码会被抛弃，重新解释执行</p> 
</div> </div></li> <li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/0f/9b/db/708f5fd6.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>feng</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2018-10-07 </div> </div> <div class="_2eMTs2JE_0"> 
<div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class="">2</span> </div> <!----> 
<!----> </div> </div> <div class="_3M6kV3zb_0"> 第一个实验做的不严谨，第一，木有定义HelloWord类，第二，没有执行编译操作，不知道是有意为之，还是不小心把步骤漏掉了 
</div> <div class="_2r3UB1GX_0"> <span>展开</span><i class="iconfont"></i> </div> <!----> </div></li> 
<li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/0f/7c/10/165cb374.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>Scott</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2018-10-06 </div> </div> <div class="_2eMTs2JE_0"> 
<div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class="">1</span> </div> <!----> 
<!----> </div> </div> <div class="_3M6kV3zb_0"> 出方法时需要注入的字节码除了返回，还有几种情况，如果没有catch块，就拦截throw，如果有，但是catch块里面可能有很多层，只是遍历inst应该是不可以的 
</div> <div class="_2r3UB1GX_0"> <span>展开</span><i class="iconfont"></i> </div> <div class="_2xNIY4NG_0"> 
<p class="_33BLbmw4_0">作者回复: 其实不用管有没有catch块，有没有throw，直接给所有代码罩一个catch any的异常处理就行了</p> </div> 
</div></li> <li class="reJj6Thl_0"><img src="" class="_2273kGdT_0"> <div class="_2CG0SquK_0"> 
<div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> <span>奇奇</span> <!----> </div> <div 
class="_1H1Z49Dr_0"> 2019-04-29 </div> </div> <div class="_2eMTs2JE_0"> <div class="_2P4B1Hdm_0"> 
<i class="iconfont"></i> <span class=""></span> </div> <!----> <!----> </div> </div> <div 
class="_3M6kV3zb_0"> ASM7 GETSTATIC这些常量是哪里来的？ </div> <div class="_2r3UB1GX_0"> <span>展开</span><i 
class="iconfont"></i> </div> <!----> </div></li> <li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/0f/9b/db/708f5fd6.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>feng</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2018-10-07 </div> </div> <div class="_2eMTs2JE_0"> 
<div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class=""></span> </div> <!----> <!----> 
</div> </div> <div class="_3M6kV3zb_0"> 还有个问题想请教下，每次启动的时候都会打印如下信息，objc[2614]: Class JavaLaunchHelper 
is implemented in both /Library/Java/JavaVirtualMachines/jdk1.8.0_31.jdk/Contents/Home/bin/java 
(0x102f6f4c0) and /Library/Java/JavaVirtualMachines/jdk1.8.0_31.jdk/Contents/Home/jre/lib/libinstrument.dylib 
(0x104f384e0). One of the two will be used. Which one is undefined. <br> <br>请问怎么可以消除，谢谢 </div> 
<div class="_2r3UB1GX_0"> <span>展开</span><i class="iconfont"></i> </div> <!----> </div></li> 
<li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/0f/7c/10/165cb374.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>Scott</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2018-10-06 </div> </div> <div class="_2eMTs2JE_0"> 
<div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class=""></span> </div> <!----> <!----> 
</div> </div> <div class="_3M6kV3zb_0"> 我看到了jvmti可以回调异常事件，但是java.lang.instrument包下没有处理这个事件的，只能在load时回调，处理异常究竟是怎么做的？ 
</div> <div class="_2r3UB1GX_0"> <span>展开</span><i class="iconfont"></i> </div> <div class="_2xNIY4NG_0"> 
<p class="_33BLbmw4_0">作者回复: Instrumentation包并没有所有JVMTI功能</p> </div> </div></li>', 0, 'full_html', 
'zh-hans', 9, 9) 
 {executed in 6 msec}
2020-11-19 20:06:42.104 INFO  jdbc.sqltiming Line:373 - select bookfieldt0_.entity_id as entity_i1_9_, bookfieldt0_.bundle as bundle2_9_, bookfieldt0_.delta 
as delta3_9_, bookfieldt0_.langcode as langcode4_9_, bookfieldt0_.revision_id as revision5_9_, 
bookfieldt0_.field_thumb_value as field_th6_9_ from node__field_thumb bookfieldt0_ where bookfieldt0_.entity_id=9 
 {executed in 2 msec}
2020-11-19 20:06:42.105 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------|------------------|
|entity_id |bundle |delta |langcode |revision_id |field_thumb_value |
|----------|-------|------|---------|------------|------------------|
|----------|-------|------|---------|------------|------------------|

2020-11-19 20:06:42.110 INFO  jdbc.sqltiming Line:373 - select bookfieldt0_.entity_id as entity_i1_9_0_, bookfieldt0_.bundle as bundle2_9_0_, bookfieldt0_.delta 
as delta3_9_0_, bookfieldt0_.langcode as langcode4_9_0_, bookfieldt0_.revision_id as revision5_9_0_, 
bookfieldt0_.field_thumb_value as field_th6_9_0_ from node__field_thumb bookfieldt0_ where 
bookfieldt0_.entity_id=9 
 {executed in 1 msec}
2020-11-19 20:06:42.112 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------|------------------|
|entity_id |bundle |delta |langcode |revision_id |field_thumb_value |
|----------|-------|------|---------|------------|------------------|
|----------|-------|------|---------|------------|------------------|

2020-11-19 20:06:42.117 INFO  jdbc.sqltiming Line:373 - insert into node__field_thumb (bundle, delta, langcode, revision_id, field_thumb_value, entity_id) 
values ('book', 0, 'zh-hans', 9, 'https://static001.geekbang.org/resource/image/ed/0d/edcb5d3dab5810f2acf4a6a4e274220d.jpg', 
9) 
 {executed in 1 msec}
2020-11-19 20:06:42.124 INFO  jdbc.sqltiming Line:373 - select nodefieldt0_.entity_id as entity_i1_18_0_, nodefieldt0_.bundle as bundle2_18_0_, nodefieldt0_.delta 
as delta3_18_0_, nodefieldt0_.langcode as langcode4_18_0_, nodefieldt0_.revision_id as revision5_18_0_, 
nodefieldt0_.field_thumb_value as field_th6_18_0_ from node_revision__field_thumb nodefieldt0_ 
where nodefieldt0_.entity_id=9 
 {executed in 1 msec}
2020-11-19 20:06:42.126 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------|------------------|
|entity_id |bundle |delta |langcode |revision_id |field_thumb_value |
|----------|-------|------|---------|------------|------------------|
|----------|-------|------|---------|------------|------------------|

2020-11-19 20:06:42.130 INFO  jdbc.sqltiming Line:373 - insert into node_revision__field_thumb (bundle, delta, langcode, revision_id, field_thumb_value, 
entity_id) values ('book', 0, 'zh-hans', 9, 'https://static001.geekbang.org/resource/image/ed/0d/edcb5d3dab5810f2acf4a6a4e274220d.jpg', 
9) 
 {executed in 1 msec}
2020-11-19 20:06:42.143 INFO  jdbc.sqltiming Line:373 - select bookfieldf0_.entity_id as entity_i1_6_0_, bookfieldf0_.bundle as bundle2_6_0_, bookfieldf0_.delta 
as delta3_6_0_, bookfieldf0_.field_fenlei_target_id as field_fe4_6_0_, bookfieldf0_.langcode 
as langcode5_6_0_, bookfieldf0_.revision_id as revision6_6_0_ from node__field_fenlei bookfieldf0_ 
where bookfieldf0_.entity_id=9 
 {executed in 1 msec}
2020-11-19 20:06:42.144 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------------|---------|------------|
|entity_id |bundle |delta |field_fenlei_target_id |langcode |revision_id |
|----------|-------|------|-----------------------|---------|------------|
|----------|-------|------|-----------------------|---------|------------|

2020-11-19 20:06:42.149 INFO  jdbc.sqltiming Line:373 - insert into node__field_fenlei (bundle, delta, field_fenlei_target_id, langcode, revision_id, 
entity_id) values ('book', 0, 1, 'zh-hans', 9, 9) 
 {executed in 1 msec}
2020-11-19 20:06:42.157 INFO  jdbc.sqltiming Line:373 - select nodefieldf0_.entity_id as entity_i1_15_0_, nodefieldf0_.bundle as bundle2_15_0_, nodefieldf0_.delta 
as delta3_15_0_, nodefieldf0_.field_fenlei_target_id as field_fe4_15_0_, nodefieldf0_.langcode 
as langcode5_15_0_, nodefieldf0_.revision_id as revision6_15_0_ from node_revision__field_fenlei 
nodefieldf0_ where nodefieldf0_.entity_id=9 
 {executed in 2 msec}
2020-11-19 20:06:42.159 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------------|---------|------------|
|entity_id |bundle |delta |field_fenlei_target_id |langcode |revision_id |
|----------|-------|------|-----------------------|---------|------------|
|----------|-------|------|-----------------------|---------|------------|

2020-11-19 20:06:42.163 INFO  jdbc.sqltiming Line:373 - insert into node_revision__field_fenlei (bundle, delta, field_fenlei_target_id, langcode, revision_id, 
entity_id) values ('book', 0, 1, 'zh-hans', 9, 9) 
 {executed in 1 msec}
2020-11-19 20:06:42.170 INFO  jdbc.sqltiming Line:373 - select bookchecke0_.item_id as item_id1_2_, bookchecke0_.fsid as fsid2_2_, bookchecke0_.got 
as got3_2_, bookchecke0_.name as name4_2_ from book_check bookchecke0_ where bookchecke0_.fsid='134607645122528' 
and bookchecke0_.name='net_content' 
 {executed in 2 msec}
2020-11-19 20:06:42.171 INFO  jdbc.resultsettable Line:610 - 
|--------|-----|----|-----|
|item_id |fsid |got |name |
|--------|-----|----|-----|
|--------|-----|----|-----|

2020-11-19 20:06:59.401 INFO  jdbc.sqltiming Line:373 - select bookchecke0_.item_id as item_id1_2_, bookchecke0_.fsid as fsid2_2_, bookchecke0_.got 
as got3_2_, bookchecke0_.name as name4_2_ from book_check bookchecke0_ where bookchecke0_.fsid='134607645122528' 
and bookchecke0_.name='net_content' 
 {executed in 1 msec}
2020-11-19 20:06:59.404 INFO  jdbc.resultsettable Line:610 - 
|--------|-----|----|-----|
|item_id |fsid |got |name |
|--------|-----|----|-----|
|--------|-----|----|-----|

2020-11-19 20:06:59.409 INFO  jdbc.sqltiming Line:373 - insert into book_check (fsid, got, name) values ('134607645122528', 1, 'net_content') 
 {executed in 1 msec}
2020-11-19 20:06:59.411 INFO  jdbc.sqltiming Line:373 - getGeneratedKeys on query: insert into book_check (fsid, got, name) values ('134607645122528', 
1, 'net_content') 
 {executed in 0 msec}
2020-11-19 20:06:59.414 INFO  jdbc.resultsettable Line:610 - 
|--------------|
|generated_key |
|--------------|
|23            |
|--------------|

2020-11-19 20:06:59.427 INFO  jdbc.sqltiming Line:373 - select bookchecke0_.item_id as item_id1_2_, bookchecke0_.fsid as fsid2_2_, bookchecke0_.got 
as got3_2_, bookchecke0_.name as name4_2_ from book_check bookchecke0_ where bookchecke0_.fsid='134607645122528' 
and bookchecke0_.name='media' 
 {executed in 1 msec}
2020-11-19 20:06:59.428 INFO  jdbc.resultsettable Line:610 - 
|--------|-----|----|-----|
|item_id |fsid |got |name |
|--------|-----|----|-----|
|--------|-----|----|-----|

2020-11-19 20:06:59.801 INFO  jdbc.sqltiming Line:373 - select bookchecke0_.item_id as item_id1_2_, bookchecke0_.fsid as fsid2_2_, bookchecke0_.got 
as got3_2_, bookchecke0_.name as name4_2_ from book_check bookchecke0_ where bookchecke0_.fsid='134607645122528' 
and bookchecke0_.name='media' 
 {executed in 1 msec}
2020-11-19 20:06:59.802 INFO  jdbc.resultsettable Line:610 - 
|--------|-----|----|-----|
|item_id |fsid |got |name |
|--------|-----|----|-----|
|--------|-----|----|-----|

2020-11-19 20:06:59.807 INFO  jdbc.sqltiming Line:373 - insert into book_check (fsid, got, name) values ('134607645122528', 1, 'media') 
 {executed in 1 msec}
2020-11-19 20:06:59.808 INFO  jdbc.sqltiming Line:373 - getGeneratedKeys on query: insert into book_check (fsid, got, name) values ('134607645122528', 
1, 'media') 
 {executed in 0 msec}
2020-11-19 20:06:59.810 INFO  jdbc.resultsettable Line:610 - 
|--------------|
|generated_key |
|--------------|
|24            |
|--------------|

2020-11-19 20:06:59.820 INFO  jdbc.sqltiming Line:373 - select bookfieldf0_.entity_id as entity_i1_7_, bookfieldf0_.bundle as bundle2_7_, bookfieldf0_.delta 
as delta3_7_, bookfieldf0_.field_fsid_value as field_fs4_7_, bookfieldf0_.langcode as langcode5_7_, 
bookfieldf0_.revision_id as revision6_7_ from node__field_fsid bookfieldf0_ where bookfieldf0_.field_fsid_value='134607645122528' 
 {executed in 2 msec}
2020-11-19 20:06:59.822 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------|---------|------------|
|entity_id |bundle |delta |field_fsid_value |langcode |revision_id |
|----------|-------|------|-----------------|---------|------------|
|----------|-------|------|-----------------|---------|------------|

2020-11-19 20:06:59.827 INFO  jdbc.sqltiming Line:373 - insert into node_revision (langcode, nid, revision_default, revision_timestamp, revision_uid) 
values ('zh-hans', 0, 1, 1605787619, 1) 
 {executed in 1 msec}
2020-11-19 20:06:59.829 INFO  jdbc.sqltiming Line:373 - getGeneratedKeys on query: insert into node_revision (langcode, nid, revision_default, revision_timestamp, 
revision_uid) values ('zh-hans', 0, 1, 1605787619, 1) 
 {executed in 1 msec}
2020-11-19 20:06:59.830 INFO  jdbc.resultsettable Line:610 - 
|--------------|
|generated_key |
|--------------|
|10            |
|--------------|

2020-11-19 20:06:59.838 INFO  jdbc.sqltiming Line:373 - insert into node (langcode, type, uuid, vid) values ('zh-hans', 'book', 'da6683d7-fa6a-4e6f-ab18-10c9439ac4b3', 
10) 
 {executed in 0 msec}
2020-11-19 20:06:59.840 INFO  jdbc.sqltiming Line:373 - getGeneratedKeys on query: insert into node (langcode, type, uuid, vid) values ('zh-hans', 
'book', 'da6683d7-fa6a-4e6f-ab18-10c9439ac4b3', 10) 
 {executed in 0 msec}
2020-11-19 20:06:59.841 INFO  jdbc.resultsettable Line:610 - 
|--------------|
|generated_key |
|--------------|
|10            |
|--------------|

2020-11-19 20:06:59.851 INFO  jdbc.sqltiming Line:373 - update node_revision set langcode='zh-hans', nid=10, revision_default=1, revision_timestamp=1605787619, 
revision_uid=1 where vid=10 
 {executed in 1 msec}
2020-11-19 20:06:59.858 INFO  jdbc.sqltiming Line:373 - select bookfieldf0_.entity_id as entity_i1_7_0_, bookfieldf0_.bundle as bundle2_7_0_, bookfieldf0_.delta 
as delta3_7_0_, bookfieldf0_.field_fsid_value as field_fs4_7_0_, bookfieldf0_.langcode as langcode5_7_0_, 
bookfieldf0_.revision_id as revision6_7_0_ from node__field_fsid bookfieldf0_ where bookfieldf0_.entity_id=10 
 {executed in 1 msec}
2020-11-19 20:06:59.859 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------|---------|------------|
|entity_id |bundle |delta |field_fsid_value |langcode |revision_id |
|----------|-------|------|-----------------|---------|------------|
|----------|-------|------|-----------------|---------|------------|

2020-11-19 20:06:59.864 INFO  jdbc.sqltiming Line:373 - insert into node__field_fsid (bundle, delta, field_fsid_value, langcode, revision_id, entity_id) 
values ('book', 0, '134607645122528', 'zh-hans', 10, 10) 
 {executed in 1 msec}
2020-11-19 20:06:59.870 INFO  jdbc.sqltiming Line:373 - select nodefieldf0_.entity_id as entity_i1_16_0_, nodefieldf0_.bundle as bundle2_16_0_, nodefieldf0_.delta 
as delta3_16_0_, nodefieldf0_.field_fsid_value as field_fs4_16_0_, nodefieldf0_.langcode as 
langcode5_16_0_, nodefieldf0_.revision_id as revision6_16_0_ from node_revision__field_fsid 
nodefieldf0_ where nodefieldf0_.entity_id=10 
 {executed in 1 msec}
2020-11-19 20:06:59.872 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------|---------|------------|
|entity_id |bundle |delta |field_fsid_value |langcode |revision_id |
|----------|-------|------|-----------------|---------|------------|
|----------|-------|------|-----------------|---------|------------|

2020-11-19 20:06:59.876 INFO  jdbc.sqltiming Line:373 - insert into node_revision__field_fsid (bundle, delta, field_fsid_value, langcode, revision_id, 
entity_id) values ('book', 0, '134607645122528', 'zh-hans', 10, 10) 
 {executed in 1 msec}
2020-11-19 20:06:59.882 INFO  jdbc.sqltiming Line:373 - select bookentity0_.nid as nid1_1_, bookentity0_.bid as bid2_1_, bookentity0_.depth as depth3_1_, 
bookentity0_.has_children as has_chil4_1_, bookentity0_.p1 as p5_1_, bookentity0_.p2 as p6_1_, 
bookentity0_.p3 as p7_1_, bookentity0_.p4 as p8_1_, bookentity0_.p5 as p9_1_, bookentity0_.pid 
as pid10_1_, bookentity0_.weight as weight11_1_ from book bookentity0_ where bookentity0_.nid=10 
 {executed in 1 msec}
2020-11-19 20:06:59.884 INFO  jdbc.resultsettable Line:610 - 
|----|----|------|-------------|---|---|---|---|---|----|-------|
|nid |bid |depth |has_children |p1 |p2 |p3 |p4 |p5 |pid |weight |
|----|----|------|-------------|---|---|---|---|---|----|-------|
|----|----|------|-------------|---|---|---|---|---|----|-------|

2020-11-19 20:06:59.887 INFO  jdbc.sqltiming Line:373 - select bookentity0_.nid as nid1_1_0_, bookentity0_.bid as bid2_1_0_, bookentity0_.depth as 
depth3_1_0_, bookentity0_.has_children as has_chil4_1_0_, bookentity0_.p1 as p5_1_0_, bookentity0_.p2 
as p6_1_0_, bookentity0_.p3 as p7_1_0_, bookentity0_.p4 as p8_1_0_, bookentity0_.p5 as p9_1_0_, 
bookentity0_.pid as pid10_1_0_, bookentity0_.weight as weight11_1_0_ from book bookentity0_ 
where bookentity0_.nid=10 
 {executed in 1 msec}
2020-11-19 20:06:59.889 INFO  jdbc.resultsettable Line:610 - 
|----|----|------|-------------|---|---|---|---|---|----|-------|
|nid |bid |depth |has_children |p1 |p2 |p3 |p4 |p5 |pid |weight |
|----|----|------|-------------|---|---|---|---|---|----|-------|
|----|----|------|-------------|---|---|---|---|---|----|-------|

2020-11-19 20:06:59.894 INFO  jdbc.sqltiming Line:373 - insert into book (bid, depth, has_children, p1, p2, p3, p4, p5, pid, weight, nid) values (1, 
3, 0, 1, 8, 10, 0, 0, 8, 0, 10) 
 {executed in 0 msec}
2020-11-19 20:06:59.900 INFO  jdbc.sqltiming Line:373 - select nodebodyen0_.entity_id as entity_i1_4_, nodebodyen0_.body_value as body_val2_4_, nodebodyen0_.body_summary 
as body_sum3_4_, nodebodyen0_.bundle as bundle4_4_, nodebodyen0_.delta as delta5_4_, nodebodyen0_.body_format 
as body_for6_4_, nodebodyen0_.langcode as langcode7_4_, nodebodyen0_.revision_id as revision8_4_ 
from node__body nodebodyen0_ where nodebodyen0_.entity_id=10 
 {executed in 1 msec}
2020-11-19 20:06:59.902 INFO  jdbc.resultsettable Line:610 - 
|----------|-----------|-------------|-------|------|------------|---------|------------|
|entity_id |body_value |body_summary |bundle |delta |body_format |langcode |revision_id |
|----------|-----------|-------------|-------|------|------------|---------|------------|
|----------|-----------|-------------|-------|------|------------|---------|------------|

2020-11-19 20:06:59.906 INFO  jdbc.sqltiming Line:373 - select nodebodyre0_.entity_id as entity_i1_13_0_, nodebodyre0_.body_value as body_val2_13_0_, 
nodebodyre0_.body_summary as body_sum3_13_0_, nodebodyre0_.bundle as bundle4_13_0_, nodebodyre0_.delta 
as delta5_13_0_, nodebodyre0_.body_format as body_for6_13_0_, nodebodyre0_.langcode as langcode7_13_0_, 
nodebodyre0_.revision_id as revision8_13_0_ from node_revision__body nodebodyre0_ where nodebodyre0_.entity_id=10 
 {executed in 0 msec}
2020-11-19 20:06:59.908 INFO  jdbc.resultsettable Line:610 - 
|----------|-----------|-------------|-------|------|------------|---------|------------|
|entity_id |body_value |body_summary |bundle |delta |body_format |langcode |revision_id |
|----------|-----------|-------------|-------|------|------------|---------|------------|
|----------|-----------|-------------|-------|------|------------|---------|------------|

2020-11-19 20:06:59.929 INFO  jdbc.sqltiming Line:373 - insert into node_revision__body (body_value, body_summary, bundle, delta, body_format, langcode, 
revision_id, entity_id) values ('<p>我们经常会遇见 Java 语言较难表达，甚至是无法表达的应用场景。比如我们希望使用汇编语言（如 X86_64 
的 SIMD 指令）来提升关键代码的性能；再比如，我们希望调用 Java 核心类库无法提供的，某个体系架构或者操作系统特有的功能。</p> <p>在这种情况下，我们往往会牺牲可移植性，在 
Java 代码中调用 C/C++ 代码（下面简述为 C 代码），并在其中实现所需功能。这种跨语言的调用，便需要借助 Java 虚拟机的 Java Native Interface（JNI）机制。</p> 
<p>关于 JNI 的例子，你应该特别熟悉 Java 中标记为<code>native</code>的、没有方法体的方法（下面统称为 native 方法）。当在 Java 代码中调用这些 
native 方法时，Java 虚拟机将通过 JNI，调用至对应的 C 函数（下面将 native 方法对应的 C 实现统称为 C 函数）中。</p> <pre style="position: 
relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
public class Object { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="2"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
public native int hashCode(); </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="3"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
} </div></td> </tr> </tbody> </table></code> <div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 
</div></pre> <p>举个例子，<code>Object.hashCode</code>方法便是一个 native 方法。它对应的 C 函数将计算对象的哈希值，并缓存在对象头、栈上锁记录（轻型锁）或对象监视锁（重型锁所使用的 
monitor）中，以确保该值在对象的生命周期之内不会变更。</p> <h2>native 方法的链接</h2> <p>在调用 native 方法前，Java 虚拟机需要将该 native 
方法链接至对应的 C 函数上。</p><!-- [[[read_end]]] --> <p>链接方式主要有两种。第一种是让 Java 虚拟机自动查找符合默认命名规范的 C 函数，并且链接起来。</p> 
<p>事实上，我们并不需要记住所谓的命名规范，而是采用<code>javac -h</code>命令，便可以根据 Java 程序中的 native 方法声明，自动生成包含符合命名规范的 
C 函数的头文件。</p> <p>举个例子，在下面这段代码中，<code>Foo</code>类有三个 native 方法，分别为静态方法<code>foo</code>以及两个重载的实例方法<code>bar</code>。</p> 
<pre style="position: relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> package org.example; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="3"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
public class Foo { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="4"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
public static native void foo(); </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="5"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
public native void bar(int i, long j); </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> public native void bar(String s, Object o); </div></td> </tr> <tr> 
<td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="7"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> } </div></td> </tr> </tbody> </table></code> 
<div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 </div></pre> <p>通过执行<code>javac 
-h . org/example/Foo.java</code>命令，我们将在当前文件夹（对应<code>-h</code>后面跟着的<code>.</code>）生成名为<code>org_example_Foo.h</code>的头文件。其内容如下所示：</p> 
<pre style="position: relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> /* DO NOT EDIT THIS FILE - it is machine generated */ </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> #include &lt;jni.h&gt; </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> /* Header for class org_example_Foo */ 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> #ifndef _Included_org_example_Foo </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> #define _Included_org_example_Foo </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="7"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> #ifdef __cplusplus </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="8"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> extern "C" { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="9"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> #endif </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div 
class="hljs-ln-line hljs-ln-n" data-line-number="10"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> /* </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="11"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
* Class: org_example_Foo </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="12"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
* Method: foo </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="13"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
* Signature: ()V </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="14"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
*/ </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" 
data-line-number="15"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> JNIEXPORT 
void JNICALL Java_org_example_Foo_foo </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div 
class="hljs-ln-line hljs-ln-n" data-line-number="16"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> (JNIEnv *, jclass); </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="17"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="18"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
/* </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" 
data-line-number="19"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> * Class: 
org_example_Foo </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="20"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
* Method: bar </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="21"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
* Signature: (IJ)V </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="22"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
*/ </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" 
data-line-number="23"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> JNIEXPORT 
void JNICALL Java_org_example_Foo_bar__IJ </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="24"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> (JNIEnv *, jobject, jint, jlong); </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="25"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="26"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
/* </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" 
data-line-number="27"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> * Class: 
org_example_Foo </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="28"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
* Method: bar </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="29"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
* Signature: (Ljava/lang/String;Ljava/lang/Object;)V </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="30"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> */ </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="31"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
JNIEXPORT void JNICALL Java_org_example_Foo_bar__Ljava_lang_String_2Ljava_lang_Object_2 </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="32"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> (JNIEnv *, jobject, jstring, jobject); 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="33"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="34"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> #ifdef __cplusplus </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="35"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> } </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="36"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
#endif </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" 
data-line-number="37"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> #endif 
</div></td> </tr> </tbody> </table></code> <div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 
</div></pre> <p>这里我简单讲解一下该命名规范。</p> <p>首先，native 方法对应的 C 函数都需要以<code>Java_</code>为前缀，之后跟着完整的包名和方法名。由于 
C 函数名不支持<code>/</code>字符，因此我们需要将<code>/</code>转换为<code>_</code>，而原本方法名中的<code>_</code>符号，则需要转换为<code>_1</code>。</p> 
<p>举个例子，<code>org.example</code>包下<code>Foo</code>类的<code>foo</code>方法，Java 虚拟机会将其自动链接至名为<code>Java_org_example_Foo_foo</code>的 
C 函数中。</p> <p>当某个类出现重载的 native 方法时，Java 虚拟机还会将参数类型纳入自动链接对象的考虑范围之中。具体的做法便是在前面 C 函数名的基础上，追加<code>__</code>以及方法描述符作为后缀。</p> 
<p>方法描述符的特殊符号同样会被替换掉，如引用类型所使用的<code>;</code>会被替换为<code>_2</code>，数组类型所使用的<code>[</code>会被替换为<code>_3</code>。</p> 
<p>基于此命名规范，你可以手动拼凑上述代码中，<code>Foo</code>类的两个<code>bar</code>方法所能自动链接的 C 函数名，并用<code>javac -h</code>命令所生成的结果来验证一下。</p> 
<p>第二种链接方式则是在 C 代码中主动链接。</p> <p>这种链接方式对 C 函数名没有要求。通常我们会使用一个名为<code>registerNatives</code>的 
native 方法，并按照第一种链接方式定义所能自动链接的 C 函数。在该 C 函数中，我们将手动链接该类的其他 native 方法。</p> <p>举个例子，<code>Object</code>类便拥有一个<code>registerNatives</code>方法，所对应的 
C 代码如下所示：</p> <pre style="position: relative;"><code> <table class="hljs-ln"> <tbody> <tr> 
<td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> // 注：Object 类的 registerNatives 方法的实现位于 
java.base 模块里的 C 代码中 </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="2"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
static JNINativeMethod methods[] = { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div 
class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td> <td class="hljs-ln-code"> <div 
class="hljs-ln-line"> {"hashCode", "()I", (void *)&amp;JVM_IHashCode}, </div></td> </tr> <tr> 
<td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> {"wait", "(J)V", (void *)&amp;JVM_MonitorWait}, 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> {"notify", "()V", (void *)&amp;JVM_MonitorNotify}, 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> {"notifyAll", "()V", (void *)&amp;JVM_MonitorNotifyAll}, 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="7"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> {"clone", "()Ljava/lang/Object;", (void 
*)&amp;JVM_Clone}, </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="8"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
}; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" 
data-line-number="9"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="10"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> JNIEXPORT void JNICALL </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="11"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> Java_java_lang_Object_registerNatives(JNIEnv 
*env, jclass cls) </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="12"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
{ </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="13"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> (*env)-&gt;RegisterNatives(env, cls, </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="14"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> methods, sizeof(methods)/sizeof(methods[0])); 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="15"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> } </div></td> </tr> </tbody> </table></code> 
<div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 </div></pre> <p>我们可以看到，上面这段代码中的 
C 函数将调用<code>RegisterNatives</code> API，注册<code>Object</code>类中其他 native 方法所要链接的 C 函数。并且，这些 
C 函数的名字并不符合默认命名规则。</p> <p>当使用第二种方式进行链接时，我们需要在其他 native 方法被调用之前完成链接工作。因此，我们往往会在类的初始化方法里调用该<code>registerNatives</code>方法。具体示例如下所示：</p> 
<pre style="position: relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> public class Object { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> private static native void registerNatives(); </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> static { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> registerNatives(); </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> } </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="6"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
} </div></td> </tr> </tbody> </table></code> <div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 
</div></pre> <p>下面我们采用第一种链接方式，并且实现其中的<code>bar(String, Object)</code>方法。如下所示：</p> <pre style="position: 
relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
// foo.c </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" 
data-line-number="2"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> #include 
&lt;stdio.h&gt; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="3"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
#include "org_example_Foo.h" </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="4"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> JNIEXPORT void JNICALL Java_org_example_Foo_bar__Ljava_lang_String_2Ljava_lang_Object_2 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> (JNIEnv *env, jobject thisObject, jstring 
str, jobject obj) { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="7"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
printf("Hello, World\n"); </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="8"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
return; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" 
data-line-number="9"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> } </div></td> 
</tr> </tbody> </table></code> <div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 
</div></pre> <p>然后，我们可以通过 gcc 命令将其编译成为动态链接库：</p> <pre style="position: relative;"><code> <table 
class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" 
data-line-number="1"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> # 该命令仅适用于 
macOS </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" 
data-line-number="2"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> $ gcc 
-I$JAVA_HOME/include -I$JAVA_HOME/include/darwin -o libfoo.dylib -shared foo.c </div></td> 
</tr> </tbody> </table></code> <div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 
</div></pre> <p>这里需要注意的是，动态链接库的名字须以<code>lib</code>为前缀，以<code>.dylib</code>(或 Linux 上的<code>.so</code>）为扩展名。在 
Java 程序中，我们可以通过<code>System.loadLibrary("foo")</code>方法来加载<code>libfoo.dylib</code>，如下述代码所示：</p> 
<pre style="position: relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> package org.example; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="3"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
public class Foo { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="4"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
public static native void foo(); </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="5"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
public native void bar(int i, long j); </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> public native void bar(String s, Object o); </div></td> </tr> <tr> 
<td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="7"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="8"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> int i = 0xDEADBEEF; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="9"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="10"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
public static void main(String[] args) { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="11"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> try { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="12"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
System.loadLibrary("foo"); </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="13"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
} catch (UnsatisfiedLinkError e) { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div 
class="hljs-ln-line hljs-ln-n" data-line-number="14"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> e.printStackTrace(); </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="15"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> System.exit(1); </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="16"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> } </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="17"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
new Foo().bar("", ""); </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="18"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
} </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="19"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> } </div></td> </tr> </tbody> </table></code> 
<div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 </div></pre> <p>如果<code>libfoo.dylib</code>不在当前路径下，我们可以在启动 
Java 虚拟机时配置<code>java.library.path</code>参数，使其指向包含<code>libfoo.dylib</code>的文件夹。具体命令如下所示：</p> 
<pre style="position: relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> $ java -Djava.library.path=/PATH/TO/DIR/CONTAINING/libfoo.dylib 
org.example.Foo </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="2"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
Hello, World </div></td> </tr> </tbody> </table></code> <div class="richcontent-pre-copy"> 
<span class="iconfont"></span>复制代码 </div></pre> <h2>JNI 的 API</h2> <p>在 C 代码中，我们也可以使用 Java 
的语言特性，如 instanceof 测试等。这些功能都是通过特殊的 JNI 函数（<a href="https://docs.oracle.com/en/java/javase/11/docs/specs/jni/functions.html">JNI 
Functions</a>）来实现的。</p> <p>Java 虚拟机会将所有 JNI 函数的函数指针聚合到一个名为<code>JNIEnv</code>的数据结构之中。</p> <p>这是一个线程私有的数据结构。Java 
虚拟机会为每个线程创建一个<code>JNIEnv</code>，并规定 C 代码不能将当前线程的<code>JNIEnv</code>共享给其他线程，否则 JNI 函数的正确性将无法保证。</p> 
<p>这么设计的原因主要有两个。一是给 JNI 函数提供一个单独命名空间。二是允许 Java 虚拟机通过更改函数指针替换 JNI 函数的具体实现，例如从附带参数类型检测的慢速版本，切换至不做参数类型检测的快速版本。</p> 
<p>在 HotSpot 虚拟机中，<code>JNIEnv</code>被内嵌至 Java 线程的数据结构之中。部分虚拟机代码甚至会从<code>JNIEnv</code>的地址倒推出 
Java 线程的地址。因此，如果在其他线程中使用当前线程的<code>JNIEnv</code>，会使这部分代码错误识别当前线程。</p> <p>JNI 会将 Java 层面的基本类型以及引用类型映射为另一套可供 
C 代码使用的数据结构。其中，基本类型的对应关系如下表所示：</p> <p><img src="https://static001.geekbang.org/resource/image/cb/ca/cb2c806532449f2c1edfe821990ac9ca.png" 
alt=""></p> <p>引用类型对应的数据结构之间也存在着继承关系，具体如下所示：</p> <pre style="position: relative;"><code> <table 
class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" 
data-line-number="1"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> jobject 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> |- jclass (java.lang.Class objects) </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> |- jstring (java.lang.String objects) 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> |- jthrowable (java.lang.Throwable objects) 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> |- jarray (arrays) </div></td> </tr> <tr> 
<td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> |- jobjectArray (object arrays) </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="7"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> |- jbooleanArray (boolean arrays) </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="8"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> |- jbyteArray (byte arrays) </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="9"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> |- jcharArray (char arrays) </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="10"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> |- jshortArray (short arrays) </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="11"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> |- jintArray (int arrays) </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="12"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> |- jlongArray (long arrays) </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="13"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> |- jfloatArray (float arrays) </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="14"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> |- jdoubleArray (double arrays) </div></td> 
</tr> </tbody> </table></code> <div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 
</div></pre> <p>我们回头看看<code>Foo</code>类 3 个 native 方法对应的 C 函数的参数。</p> <pre style="position: 
relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
JNIEXPORT void JNICALL Java_org_example_Foo_foo </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> (JNIEnv *, jclass); </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="4"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
JNIEXPORT void JNICALL Java_org_example_Foo_bar__IJ </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> (JNIEnv *, jobject, jint, jlong); </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="7"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
JNIEXPORT void JNICALL Java_org_example_Foo_bar__Ljava_lang_String_2Ljava_lang_Object_2 (JNIEnv 
*, jobject, jstring, jobject); </div></td> </tr> </tbody> </table></code> <div class="richcontent-pre-copy"> 
<span class="iconfont"></span>复制代码 </div></pre> <p>静态 native 方法<code>foo</code>将接收两个参数，分别为存放 
JNI 函数的<code>JNIEnv</code>指针，以及一个<code>jclass</code>参数，用来指代定义该 native 方法的类，即<code>Foo</code>类。</p> 
<p>两个实例 native 方法<code>bar</code>的第二个参数则是<code>jobject</code>类型的，用来指代该 native 方法的调用者，也就是<code>Foo</code>类的实例。</p> 
<p>如果 native 方法声明了参数，那么对应的 C 函数将接收这些参数。在我们的例子中，第一个<code>bar</code>方法声明了 int 型和 long 型的参数，对应的 
C 函数则接收 jint 和 jlong 类型的参数；第二个<code>bar</code>方法声明了 String 类型和 Object 类型的参数，对应的 C 函数则接收 jstring 
和 jobject 类型的参数。</p> <p>下面，我们继续修改上一小节中的<code>foo.c</code>，并在 C 代码中获取<code>Foo</code>类实例的<code>i</code>字段。</p> 
<pre style="position: relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> // foo.c </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div 
class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> <td class="hljs-ln-code"> <div 
class="hljs-ln-line"> #include &lt;stdio.h&gt; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> #include "org_example_Foo.h" </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="5"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
JNIEXPORT void JNICALL Java_org_example_Foo_bar__Ljava_lang_String_2Ljava_lang_Object_2 </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> (JNIEnv *env, jobject thisObject, jstring 
str, jobject obj) { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="7"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
jclass cls = (*env)-&gt;GetObjectClass(env, thisObject); </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="8"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> jfieldID fieldID = (*env)-&gt;GetFieldID(env, cls, "i", "I"); </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="9"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> jint value = (*env)-&gt;GetIntField(env, 
thisObject, fieldID); </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="10"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
printf("Hello, World 0x%x\n", value); </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div 
class="hljs-ln-line hljs-ln-n" data-line-number="11"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> return; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div 
class="hljs-ln-line hljs-ln-n" data-line-number="12"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> } </div></td> </tr> </tbody> </table></code> <div class="richcontent-pre-copy"> 
<span class="iconfont"></span>复制代码 </div></pre> <p>我们可以看到，在 JNI 中访问字段类似于反射 API：我们首先需要通过类实例获得<code>FieldID</code>，然后再通过<code>FieldID</code>获得某个实例中该字段的值。不过，与 
Java 代码相比，上述代码貌似不用处理异常。事实果真如此吗？</p> <p>下面我就尝试获取了不存在的字段<code>j</code>，运行结果如下所示：</p> <pre style="position: 
relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
$ java org.example.Foo </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="2"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
Hello, World 0x5 </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="3"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
Exception in thread "main" java.lang.NoSuchFieldError: j </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> at org.example.Foo.bar(Native Method) </div></td> </tr> <tr> <td 
class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> at org.example.Foo.main(Foo.java:20) </div></td> 
</tr> </tbody> </table></code> <div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 
</div></pre> <p>我们可以看到，<code>printf</code>语句照常执行并打印出<code>Hello, World 0x5</code>，但这个数值明显是错误的。当从 
C 函数返回至 main 方法时，Java 虚拟机又会抛出<code>NoSuchFieldError</code>异常。</p> <p>实际上，当调用 JNI 函数时，Java 虚拟机便已生成异常实例，并缓存在内存中的某个位置。与 
Java 编程不一样的是，它并不会显式地跳转至异常处理器或者调用者中，而是继续执行接下来的 C 代码。</p> <p>因此，当从可能触发异常的 JNI 函数返回时，我们需要通过 JNI 
函数<code>ExceptionOccurred</code>检查是否发生了异常，并且作出相应的处理。如果无须抛出该异常，那么我们需要通过 JNI 函数<code>ExceptionClear</code>显式地清空已缓存的异常。</p> 
<p>具体示例如下所示（为了控制代码篇幅，我仅在第一个<code>GetFieldID</code>后检查异常以及清空异常）：</p> <pre style="position: relative;"><code> 
<table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
// foo.c </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" 
data-line-number="2"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> #include 
&lt;stdio.h&gt; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="3"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
#include "org_example_Foo.h" </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="4"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> JNIEXPORT void JNICALL Java_org_example_Foo_bar__Ljava_lang_String_2Ljava_lang_Object_2 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> (JNIEnv *env, jobject thisObject, jstring 
str, jobject obj) { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="7"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
jclass cls = (*env)-&gt;GetObjectClass(env, thisObject); </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="8"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> jfieldID fieldID = (*env)-&gt;GetFieldID(env, cls, "j", "I"); </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="9"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> if((*env)-&gt;ExceptionOccurred(env)) 
{ </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="10"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> printf("Exception!\n"); </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="11"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> (*env)-&gt;ExceptionClear(env); </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="12"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> } </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="13"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> fieldID = (*env)-&gt;GetFieldID(env, cls, "i", "I"); </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="14"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> jint value = (*env)-&gt;GetIntField(env, 
thisObject, fieldID); </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="15"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
// we should put an exception guard here as well. </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="16"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> printf("Hello, World 0x%x\n", value); </div></td> </tr> <tr> <td 
class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="17"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> return; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="18"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> } </div></td> </tr> </tbody> </table></code> <div class="richcontent-pre-copy"> 
<span class="iconfont"></span>复制代码 </div></pre> <h2>局部引用与全局引用</h2> <p>在 C 代码中，我们可以访问所传入的引用类型参数，也可以通过 
JNI 函数创建新的 Java 对象。</p> <p>这些 Java 对象显然也会受到垃圾回收器的影响。因此，Java 虚拟机需要一种机制，来告知垃圾回收算法，不要回收这些 C 代码中可能引用到的 
Java 对象。</p> <p>这种机制便是 JNI 的局部引用（Local Reference）和全局引用（Global Reference）。垃圾回收算法会将被这两种引用指向的对象标记为不可回收。</p> 
<p>事实上，无论是传入的引用类型参数，还是通过 JNI 函数（除<code>NewGlobalRef</code>及<code>NewWeakGlobalRef</code>之外）返回的引用类型对象，都属于局部引用。</p> 
<p>不过，一旦从 C 函数中返回至 Java 方法之中，那么局部引用将失效。也就是说，垃圾回收器在标记垃圾时不再考虑这些局部引用。</p> <p>这就意味着，我们不能缓存局部引用，以供另一 
C 线程或下一次 native 方法调用时使用。</p> <p>对于这种应用场景，我们需要借助 JNI 函数<code>NewGlobalRef</code>，将该局部引用转换为全局引用，以确保其指向的 
Java 对象不会被垃圾回收。</p> <p>相应的，我们还可以通过 JNI 函数<code>DeleteGlobalRef</code>来消除全局引用，以便回收被全局引用指向的 Java 
对象。</p> <p>此外，当 C 函数运行时间极其长时，我们也应该考虑通过 JNI 函数<code>DeleteLocalRef</code>，消除不再使用的局部引用，以便回收被引用的 
Java 对象。</p> <p>另一方面，由于垃圾回收器可能会移动对象在内存中的位置，因此 Java 虚拟机需要另一种机制，来保证局部引用或者全局引用将正确地指向移动过后的对象。</p> 
<p>HotSpot 虚拟机是通过句柄（handle）来完成上述需求的。这里句柄指的是内存中 Java 对象的指针的指针。当发生垃圾回收时，如果 Java 对象被移动了，那么句柄指向的指针值也将发生变动，但句柄本身保持不变。</p> 
<p>实际上，无论是局部引用还是全局引用，都是句柄。其中，局部引用所对应的句柄有两种存储方式，一是在本地方法栈帧中，主要用于存放 C 函数所接收的来自 Java 层面的引用类型参数；另一种则是线程私有的句柄块，主要用于存放 
C 函数运行过程中创建的局部引用。</p> <p>当从 C 函数返回至 Java 方法时，本地方法栈帧中的句柄将会被自动清除。而线程私有句柄块则需要由 Java 虚拟机显式清理。</p> 
<p>进入 C 函数时对引用类型参数的句柄化，和调整参数位置（C 调用和 Java 调用传参的方式不一样），以及从 C 函数返回时清理线程私有句柄块，共同造就了 JNI 调用的额外性能开销（具体可参考该 
stackoverflow 上的<a href="https://stackoverflow.com/questions/24746776/what-does-a-jvm-have-to-do-when-calling-a-native-method/24747484#24747484">回答</a>）。</p> 
<h2>总结与实践</h2> <p>今天我介绍了 JNI 的运行机制。</p> <p>Java 中的 native 方法的链接方式主要有两种。一是按照 JNI 的默认规范命名所要链接的 
C 函数，并依赖于 Java 虚拟机自动链接。另一种则是在 C 代码中主动链接。</p> <p>JNI 提供了一系列 API 来允许 C 代码使用 Java 语言特性。这些 API 
不仅使用了特殊的数据结构来表示 Java 类，还拥有特殊的异常处理模式。</p> <p>JNI 中的引用可分为局部引用和全局引用。这两者都可以阻止垃圾回收器回收被引用的 Java 对象。不同的是，局部引用在 
native 方法调用返回之后便会失效。传入参数以及大部分 JNI API 函数的返回值都属于局部引用。</p> <hr> <p>今天的实践环节，请阅读<a href="https://www.ibm.com/developerworks/java/library/j-jni/index.html">该文档</a>中的 
Performance pitfalls 以及 Correctness pitfalls 两节。</p> <p><img src="https://static001.geekbang.org/resource/image/2a/d5/2a62e58cbdf56a5dc40748567d346fd5.jpg" 
alt=""></p>', '', 'book', 0, 'full_html', 'zh-hans', 10, 10) 
 {executed in 12 msec}
2020-11-19 20:06:59.944 INFO  jdbc.sqltiming Line:373 - select nodebodyen0_.entity_id as entity_i1_4_0_, nodebodyen0_.body_value as body_val2_4_0_, 
nodebodyen0_.body_summary as body_sum3_4_0_, nodebodyen0_.bundle as bundle4_4_0_, nodebodyen0_.delta 
as delta5_4_0_, nodebodyen0_.body_format as body_for6_4_0_, nodebodyen0_.langcode as langcode7_4_0_, 
nodebodyen0_.revision_id as revision8_4_0_ from node__body nodebodyen0_ where nodebodyen0_.entity_id=10 
 {executed in 1 msec}
2020-11-19 20:06:59.946 INFO  jdbc.resultsettable Line:610 - 
|----------|-----------|-------------|-------|------|------------|---------|------------|
|entity_id |body_value |body_summary |bundle |delta |body_format |langcode |revision_id |
|----------|-----------|-------------|-------|------|------------|---------|------------|
|----------|-----------|-------------|-------|------|------------|---------|------------|

2020-11-19 20:06:59.967 INFO  jdbc.sqltiming Line:373 - insert into node__body (body_value, body_summary, bundle, delta, body_format, langcode, revision_id, 
entity_id) values ('<p>我们经常会遇见 Java 语言较难表达，甚至是无法表达的应用场景。比如我们希望使用汇编语言（如 X86_64 的 SIMD 指令）来提升关键代码的性能；再比如，我们希望调用 
Java 核心类库无法提供的，某个体系架构或者操作系统特有的功能。</p> <p>在这种情况下，我们往往会牺牲可移植性，在 Java 代码中调用 C/C++ 代码（下面简述为 C 代码），并在其中实现所需功能。这种跨语言的调用，便需要借助 
Java 虚拟机的 Java Native Interface（JNI）机制。</p> <p>关于 JNI 的例子，你应该特别熟悉 Java 中标记为<code>native</code>的、没有方法体的方法（下面统称为 
native 方法）。当在 Java 代码中调用这些 native 方法时，Java 虚拟机将通过 JNI，调用至对应的 C 函数（下面将 native 方法对应的 C 实现统称为 
C 函数）中。</p> <pre style="position: relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td 
class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> public class Object { </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> public native int hashCode(); </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> } </div></td> </tr> </tbody> </table></code> 
<div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 </div></pre> <p>举个例子，<code>Object.hashCode</code>方法便是一个 
native 方法。它对应的 C 函数将计算对象的哈希值，并缓存在对象头、栈上锁记录（轻型锁）或对象监视锁（重型锁所使用的 monitor）中，以确保该值在对象的生命周期之内不会变更。</p> 
<h2>native 方法的链接</h2> <p>在调用 native 方法前，Java 虚拟机需要将该 native 方法链接至对应的 C 函数上。</p><!-- [[[read_end]]] 
--> <p>链接方式主要有两种。第一种是让 Java 虚拟机自动查找符合默认命名规范的 C 函数，并且链接起来。</p> <p>事实上，我们并不需要记住所谓的命名规范，而是采用<code>javac 
-h</code>命令，便可以根据 Java 程序中的 native 方法声明，自动生成包含符合命名规范的 C 函数的头文件。</p> <p>举个例子，在下面这段代码中，<code>Foo</code>类有三个 
native 方法，分别为静态方法<code>foo</code>以及两个重载的实例方法<code>bar</code>。</p> <pre style="position: relative;"><code> 
<table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
package org.example; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="2"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> public class Foo { </div></td> </tr> <tr> 
<td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> public static native void foo(); </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> public native void bar(int i, long j); 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> public native void bar(String s, Object 
o); </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" 
data-line-number="7"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> } </div></td> 
</tr> </tbody> </table></code> <div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 
</div></pre> <p>通过执行<code>javac -h . org/example/Foo.java</code>命令，我们将在当前文件夹（对应<code>-h</code>后面跟着的<code>.</code>）生成名为<code>org_example_Foo.h</code>的头文件。其内容如下所示：</p> 
<pre style="position: relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> /* DO NOT EDIT THIS FILE - it is machine generated */ </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> #include &lt;jni.h&gt; </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> /* Header for class org_example_Foo */ 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> #ifndef _Included_org_example_Foo </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> #define _Included_org_example_Foo </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="7"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> #ifdef __cplusplus </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="8"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> extern "C" { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="9"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> #endif </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div 
class="hljs-ln-line hljs-ln-n" data-line-number="10"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> /* </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="11"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
* Class: org_example_Foo </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="12"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
* Method: foo </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="13"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
* Signature: ()V </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="14"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
*/ </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" 
data-line-number="15"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> JNIEXPORT 
void JNICALL Java_org_example_Foo_foo </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div 
class="hljs-ln-line hljs-ln-n" data-line-number="16"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> (JNIEnv *, jclass); </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="17"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="18"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
/* </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" 
data-line-number="19"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> * Class: 
org_example_Foo </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="20"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
* Method: bar </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="21"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
* Signature: (IJ)V </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="22"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
*/ </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" 
data-line-number="23"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> JNIEXPORT 
void JNICALL Java_org_example_Foo_bar__IJ </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="24"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> (JNIEnv *, jobject, jint, jlong); </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="25"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="26"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
/* </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" 
data-line-number="27"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> * Class: 
org_example_Foo </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="28"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
* Method: bar </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="29"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
* Signature: (Ljava/lang/String;Ljava/lang/Object;)V </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="30"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> */ </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="31"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
JNIEXPORT void JNICALL Java_org_example_Foo_bar__Ljava_lang_String_2Ljava_lang_Object_2 </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="32"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> (JNIEnv *, jobject, jstring, jobject); 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="33"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="34"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> #ifdef __cplusplus </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="35"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> } </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="36"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
#endif </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" 
data-line-number="37"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> #endif 
</div></td> </tr> </tbody> </table></code> <div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 
</div></pre> <p>这里我简单讲解一下该命名规范。</p> <p>首先，native 方法对应的 C 函数都需要以<code>Java_</code>为前缀，之后跟着完整的包名和方法名。由于 
C 函数名不支持<code>/</code>字符，因此我们需要将<code>/</code>转换为<code>_</code>，而原本方法名中的<code>_</code>符号，则需要转换为<code>_1</code>。</p> 
<p>举个例子，<code>org.example</code>包下<code>Foo</code>类的<code>foo</code>方法，Java 虚拟机会将其自动链接至名为<code>Java_org_example_Foo_foo</code>的 
C 函数中。</p> <p>当某个类出现重载的 native 方法时，Java 虚拟机还会将参数类型纳入自动链接对象的考虑范围之中。具体的做法便是在前面 C 函数名的基础上，追加<code>__</code>以及方法描述符作为后缀。</p> 
<p>方法描述符的特殊符号同样会被替换掉，如引用类型所使用的<code>;</code>会被替换为<code>_2</code>，数组类型所使用的<code>[</code>会被替换为<code>_3</code>。</p> 
<p>基于此命名规范，你可以手动拼凑上述代码中，<code>Foo</code>类的两个<code>bar</code>方法所能自动链接的 C 函数名，并用<code>javac -h</code>命令所生成的结果来验证一下。</p> 
<p>第二种链接方式则是在 C 代码中主动链接。</p> <p>这种链接方式对 C 函数名没有要求。通常我们会使用一个名为<code>registerNatives</code>的 
native 方法，并按照第一种链接方式定义所能自动链接的 C 函数。在该 C 函数中，我们将手动链接该类的其他 native 方法。</p> <p>举个例子，<code>Object</code>类便拥有一个<code>registerNatives</code>方法，所对应的 
C 代码如下所示：</p> <pre style="position: relative;"><code> <table class="hljs-ln"> <tbody> <tr> 
<td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> // 注：Object 类的 registerNatives 方法的实现位于 
java.base 模块里的 C 代码中 </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="2"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
static JNINativeMethod methods[] = { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div 
class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td> <td class="hljs-ln-code"> <div 
class="hljs-ln-line"> {"hashCode", "()I", (void *)&amp;JVM_IHashCode}, </div></td> </tr> <tr> 
<td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> {"wait", "(J)V", (void *)&amp;JVM_MonitorWait}, 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> {"notify", "()V", (void *)&amp;JVM_MonitorNotify}, 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> {"notifyAll", "()V", (void *)&amp;JVM_MonitorNotifyAll}, 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="7"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> {"clone", "()Ljava/lang/Object;", (void 
*)&amp;JVM_Clone}, </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="8"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
}; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" 
data-line-number="9"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="10"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> JNIEXPORT void JNICALL </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="11"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> Java_java_lang_Object_registerNatives(JNIEnv 
*env, jclass cls) </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="12"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
{ </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="13"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> (*env)-&gt;RegisterNatives(env, cls, </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="14"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> methods, sizeof(methods)/sizeof(methods[0])); 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="15"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> } </div></td> </tr> </tbody> </table></code> 
<div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 </div></pre> <p>我们可以看到，上面这段代码中的 
C 函数将调用<code>RegisterNatives</code> API，注册<code>Object</code>类中其他 native 方法所要链接的 C 函数。并且，这些 
C 函数的名字并不符合默认命名规则。</p> <p>当使用第二种方式进行链接时，我们需要在其他 native 方法被调用之前完成链接工作。因此，我们往往会在类的初始化方法里调用该<code>registerNatives</code>方法。具体示例如下所示：</p> 
<pre style="position: relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> public class Object { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> private static native void registerNatives(); </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> static { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> registerNatives(); </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> } </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="6"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
} </div></td> </tr> </tbody> </table></code> <div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 
</div></pre> <p>下面我们采用第一种链接方式，并且实现其中的<code>bar(String, Object)</code>方法。如下所示：</p> <pre style="position: 
relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
// foo.c </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" 
data-line-number="2"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> #include 
&lt;stdio.h&gt; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="3"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
#include "org_example_Foo.h" </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="4"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> JNIEXPORT void JNICALL Java_org_example_Foo_bar__Ljava_lang_String_2Ljava_lang_Object_2 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> (JNIEnv *env, jobject thisObject, jstring 
str, jobject obj) { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="7"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
printf("Hello, World\n"); </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="8"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
return; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" 
data-line-number="9"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> } </div></td> 
</tr> </tbody> </table></code> <div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 
</div></pre> <p>然后，我们可以通过 gcc 命令将其编译成为动态链接库：</p> <pre style="position: relative;"><code> <table 
class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" 
data-line-number="1"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> # 该命令仅适用于 
macOS </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" 
data-line-number="2"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> $ gcc 
-I$JAVA_HOME/include -I$JAVA_HOME/include/darwin -o libfoo.dylib -shared foo.c </div></td> 
</tr> </tbody> </table></code> <div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 
</div></pre> <p>这里需要注意的是，动态链接库的名字须以<code>lib</code>为前缀，以<code>.dylib</code>(或 Linux 上的<code>.so</code>）为扩展名。在 
Java 程序中，我们可以通过<code>System.loadLibrary("foo")</code>方法来加载<code>libfoo.dylib</code>，如下述代码所示：</p> 
<pre style="position: relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> package org.example; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="3"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
public class Foo { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="4"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
public static native void foo(); </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="5"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
public native void bar(int i, long j); </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> public native void bar(String s, Object o); </div></td> </tr> <tr> 
<td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="7"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="8"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> int i = 0xDEADBEEF; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="9"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="10"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
public static void main(String[] args) { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="11"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> try { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="12"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
System.loadLibrary("foo"); </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="13"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
} catch (UnsatisfiedLinkError e) { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div 
class="hljs-ln-line hljs-ln-n" data-line-number="14"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> e.printStackTrace(); </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="15"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> System.exit(1); </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="16"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> } </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="17"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
new Foo().bar("", ""); </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="18"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
} </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="19"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> } </div></td> </tr> </tbody> </table></code> 
<div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 </div></pre> <p>如果<code>libfoo.dylib</code>不在当前路径下，我们可以在启动 
Java 虚拟机时配置<code>java.library.path</code>参数，使其指向包含<code>libfoo.dylib</code>的文件夹。具体命令如下所示：</p> 
<pre style="position: relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> $ java -Djava.library.path=/PATH/TO/DIR/CONTAINING/libfoo.dylib 
org.example.Foo </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="2"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
Hello, World </div></td> </tr> </tbody> </table></code> <div class="richcontent-pre-copy"> 
<span class="iconfont"></span>复制代码 </div></pre> <h2>JNI 的 API</h2> <p>在 C 代码中，我们也可以使用 Java 
的语言特性，如 instanceof 测试等。这些功能都是通过特殊的 JNI 函数（<a href="https://docs.oracle.com/en/java/javase/11/docs/specs/jni/functions.html">JNI 
Functions</a>）来实现的。</p> <p>Java 虚拟机会将所有 JNI 函数的函数指针聚合到一个名为<code>JNIEnv</code>的数据结构之中。</p> <p>这是一个线程私有的数据结构。Java 
虚拟机会为每个线程创建一个<code>JNIEnv</code>，并规定 C 代码不能将当前线程的<code>JNIEnv</code>共享给其他线程，否则 JNI 函数的正确性将无法保证。</p> 
<p>这么设计的原因主要有两个。一是给 JNI 函数提供一个单独命名空间。二是允许 Java 虚拟机通过更改函数指针替换 JNI 函数的具体实现，例如从附带参数类型检测的慢速版本，切换至不做参数类型检测的快速版本。</p> 
<p>在 HotSpot 虚拟机中，<code>JNIEnv</code>被内嵌至 Java 线程的数据结构之中。部分虚拟机代码甚至会从<code>JNIEnv</code>的地址倒推出 
Java 线程的地址。因此，如果在其他线程中使用当前线程的<code>JNIEnv</code>，会使这部分代码错误识别当前线程。</p> <p>JNI 会将 Java 层面的基本类型以及引用类型映射为另一套可供 
C 代码使用的数据结构。其中，基本类型的对应关系如下表所示：</p> <p><img src="https://static001.geekbang.org/resource/image/cb/ca/cb2c806532449f2c1edfe821990ac9ca.png" 
alt=""></p> <p>引用类型对应的数据结构之间也存在着继承关系，具体如下所示：</p> <pre style="position: relative;"><code> <table 
class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" 
data-line-number="1"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> jobject 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> |- jclass (java.lang.Class objects) </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> |- jstring (java.lang.String objects) 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> |- jthrowable (java.lang.Throwable objects) 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> |- jarray (arrays) </div></td> </tr> <tr> 
<td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> |- jobjectArray (object arrays) </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="7"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> |- jbooleanArray (boolean arrays) </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="8"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> |- jbyteArray (byte arrays) </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="9"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> |- jcharArray (char arrays) </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="10"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> |- jshortArray (short arrays) </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="11"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> |- jintArray (int arrays) </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="12"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> |- jlongArray (long arrays) </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="13"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> |- jfloatArray (float arrays) </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="14"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> |- jdoubleArray (double arrays) </div></td> 
</tr> </tbody> </table></code> <div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 
</div></pre> <p>我们回头看看<code>Foo</code>类 3 个 native 方法对应的 C 函数的参数。</p> <pre style="position: 
relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
JNIEXPORT void JNICALL Java_org_example_Foo_foo </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> (JNIEnv *, jclass); </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="4"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
JNIEXPORT void JNICALL Java_org_example_Foo_bar__IJ </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> (JNIEnv *, jobject, jint, jlong); </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="7"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
JNIEXPORT void JNICALL Java_org_example_Foo_bar__Ljava_lang_String_2Ljava_lang_Object_2 (JNIEnv 
*, jobject, jstring, jobject); </div></td> </tr> </tbody> </table></code> <div class="richcontent-pre-copy"> 
<span class="iconfont"></span>复制代码 </div></pre> <p>静态 native 方法<code>foo</code>将接收两个参数，分别为存放 
JNI 函数的<code>JNIEnv</code>指针，以及一个<code>jclass</code>参数，用来指代定义该 native 方法的类，即<code>Foo</code>类。</p> 
<p>两个实例 native 方法<code>bar</code>的第二个参数则是<code>jobject</code>类型的，用来指代该 native 方法的调用者，也就是<code>Foo</code>类的实例。</p> 
<p>如果 native 方法声明了参数，那么对应的 C 函数将接收这些参数。在我们的例子中，第一个<code>bar</code>方法声明了 int 型和 long 型的参数，对应的 
C 函数则接收 jint 和 jlong 类型的参数；第二个<code>bar</code>方法声明了 String 类型和 Object 类型的参数，对应的 C 函数则接收 jstring 
和 jobject 类型的参数。</p> <p>下面，我们继续修改上一小节中的<code>foo.c</code>，并在 C 代码中获取<code>Foo</code>类实例的<code>i</code>字段。</p> 
<pre style="position: relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> // foo.c </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div 
class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> <td class="hljs-ln-code"> <div 
class="hljs-ln-line"> #include &lt;stdio.h&gt; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> #include "org_example_Foo.h" </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="5"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
JNIEXPORT void JNICALL Java_org_example_Foo_bar__Ljava_lang_String_2Ljava_lang_Object_2 </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> (JNIEnv *env, jobject thisObject, jstring 
str, jobject obj) { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="7"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
jclass cls = (*env)-&gt;GetObjectClass(env, thisObject); </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="8"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> jfieldID fieldID = (*env)-&gt;GetFieldID(env, cls, "i", "I"); </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="9"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> jint value = (*env)-&gt;GetIntField(env, 
thisObject, fieldID); </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="10"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
printf("Hello, World 0x%x\n", value); </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div 
class="hljs-ln-line hljs-ln-n" data-line-number="11"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> return; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div 
class="hljs-ln-line hljs-ln-n" data-line-number="12"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> } </div></td> </tr> </tbody> </table></code> <div class="richcontent-pre-copy"> 
<span class="iconfont"></span>复制代码 </div></pre> <p>我们可以看到，在 JNI 中访问字段类似于反射 API：我们首先需要通过类实例获得<code>FieldID</code>，然后再通过<code>FieldID</code>获得某个实例中该字段的值。不过，与 
Java 代码相比，上述代码貌似不用处理异常。事实果真如此吗？</p> <p>下面我就尝试获取了不存在的字段<code>j</code>，运行结果如下所示：</p> <pre style="position: 
relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
$ java org.example.Foo </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="2"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
Hello, World 0x5 </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="3"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
Exception in thread "main" java.lang.NoSuchFieldError: j </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> at org.example.Foo.bar(Native Method) </div></td> </tr> <tr> <td 
class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> at org.example.Foo.main(Foo.java:20) </div></td> 
</tr> </tbody> </table></code> <div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 
</div></pre> <p>我们可以看到，<code>printf</code>语句照常执行并打印出<code>Hello, World 0x5</code>，但这个数值明显是错误的。当从 
C 函数返回至 main 方法时，Java 虚拟机又会抛出<code>NoSuchFieldError</code>异常。</p> <p>实际上，当调用 JNI 函数时，Java 虚拟机便已生成异常实例，并缓存在内存中的某个位置。与 
Java 编程不一样的是，它并不会显式地跳转至异常处理器或者调用者中，而是继续执行接下来的 C 代码。</p> <p>因此，当从可能触发异常的 JNI 函数返回时，我们需要通过 JNI 
函数<code>ExceptionOccurred</code>检查是否发生了异常，并且作出相应的处理。如果无须抛出该异常，那么我们需要通过 JNI 函数<code>ExceptionClear</code>显式地清空已缓存的异常。</p> 
<p>具体示例如下所示（为了控制代码篇幅，我仅在第一个<code>GetFieldID</code>后检查异常以及清空异常）：</p> <pre style="position: relative;"><code> 
<table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
// foo.c </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" 
data-line-number="2"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> #include 
&lt;stdio.h&gt; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="3"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
#include "org_example_Foo.h" </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="4"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> JNIEXPORT void JNICALL Java_org_example_Foo_bar__Ljava_lang_String_2Ljava_lang_Object_2 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> (JNIEnv *env, jobject thisObject, jstring 
str, jobject obj) { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="7"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
jclass cls = (*env)-&gt;GetObjectClass(env, thisObject); </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="8"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> jfieldID fieldID = (*env)-&gt;GetFieldID(env, cls, "j", "I"); </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="9"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> if((*env)-&gt;ExceptionOccurred(env)) 
{ </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="10"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> printf("Exception!\n"); </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="11"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> (*env)-&gt;ExceptionClear(env); </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="12"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> } </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="13"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> fieldID = (*env)-&gt;GetFieldID(env, cls, "i", "I"); </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="14"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> jint value = (*env)-&gt;GetIntField(env, 
thisObject, fieldID); </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="15"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
// we should put an exception guard here as well. </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="16"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> printf("Hello, World 0x%x\n", value); </div></td> </tr> <tr> <td 
class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="17"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> return; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="18"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> } </div></td> </tr> </tbody> </table></code> <div class="richcontent-pre-copy"> 
<span class="iconfont"></span>复制代码 </div></pre> <h2>局部引用与全局引用</h2> <p>在 C 代码中，我们可以访问所传入的引用类型参数，也可以通过 
JNI 函数创建新的 Java 对象。</p> <p>这些 Java 对象显然也会受到垃圾回收器的影响。因此，Java 虚拟机需要一种机制，来告知垃圾回收算法，不要回收这些 C 代码中可能引用到的 
Java 对象。</p> <p>这种机制便是 JNI 的局部引用（Local Reference）和全局引用（Global Reference）。垃圾回收算法会将被这两种引用指向的对象标记为不可回收。</p> 
<p>事实上，无论是传入的引用类型参数，还是通过 JNI 函数（除<code>NewGlobalRef</code>及<code>NewWeakGlobalRef</code>之外）返回的引用类型对象，都属于局部引用。</p> 
<p>不过，一旦从 C 函数中返回至 Java 方法之中，那么局部引用将失效。也就是说，垃圾回收器在标记垃圾时不再考虑这些局部引用。</p> <p>这就意味着，我们不能缓存局部引用，以供另一 
C 线程或下一次 native 方法调用时使用。</p> <p>对于这种应用场景，我们需要借助 JNI 函数<code>NewGlobalRef</code>，将该局部引用转换为全局引用，以确保其指向的 
Java 对象不会被垃圾回收。</p> <p>相应的，我们还可以通过 JNI 函数<code>DeleteGlobalRef</code>来消除全局引用，以便回收被全局引用指向的 Java 
对象。</p> <p>此外，当 C 函数运行时间极其长时，我们也应该考虑通过 JNI 函数<code>DeleteLocalRef</code>，消除不再使用的局部引用，以便回收被引用的 
Java 对象。</p> <p>另一方面，由于垃圾回收器可能会移动对象在内存中的位置，因此 Java 虚拟机需要另一种机制，来保证局部引用或者全局引用将正确地指向移动过后的对象。</p> 
<p>HotSpot 虚拟机是通过句柄（handle）来完成上述需求的。这里句柄指的是内存中 Java 对象的指针的指针。当发生垃圾回收时，如果 Java 对象被移动了，那么句柄指向的指针值也将发生变动，但句柄本身保持不变。</p> 
<p>实际上，无论是局部引用还是全局引用，都是句柄。其中，局部引用所对应的句柄有两种存储方式，一是在本地方法栈帧中，主要用于存放 C 函数所接收的来自 Java 层面的引用类型参数；另一种则是线程私有的句柄块，主要用于存放 
C 函数运行过程中创建的局部引用。</p> <p>当从 C 函数返回至 Java 方法时，本地方法栈帧中的句柄将会被自动清除。而线程私有句柄块则需要由 Java 虚拟机显式清理。</p> 
<p>进入 C 函数时对引用类型参数的句柄化，和调整参数位置（C 调用和 Java 调用传参的方式不一样），以及从 C 函数返回时清理线程私有句柄块，共同造就了 JNI 调用的额外性能开销（具体可参考该 
stackoverflow 上的<a href="https://stackoverflow.com/questions/24746776/what-does-a-jvm-have-to-do-when-calling-a-native-method/24747484#24747484">回答</a>）。</p> 
<h2>总结与实践</h2> <p>今天我介绍了 JNI 的运行机制。</p> <p>Java 中的 native 方法的链接方式主要有两种。一是按照 JNI 的默认规范命名所要链接的 
C 函数，并依赖于 Java 虚拟机自动链接。另一种则是在 C 代码中主动链接。</p> <p>JNI 提供了一系列 API 来允许 C 代码使用 Java 语言特性。这些 API 
不仅使用了特殊的数据结构来表示 Java 类，还拥有特殊的异常处理模式。</p> <p>JNI 中的引用可分为局部引用和全局引用。这两者都可以阻止垃圾回收器回收被引用的 Java 对象。不同的是，局部引用在 
native 方法调用返回之后便会失效。传入参数以及大部分 JNI API 函数的返回值都属于局部引用。</p> <hr> <p>今天的实践环节，请阅读<a href="https://www.ibm.com/developerworks/java/library/j-jni/index.html">该文档</a>中的 
Performance pitfalls 以及 Correctness pitfalls 两节。</p> <p><img src="https://static001.geekbang.org/resource/image/2a/d5/2a62e58cbdf56a5dc40748567d346fd5.jpg" 
alt=""></p>', '', 'book', 0, 'full_html', 'zh-hans', 10, 10) 
 {executed in 12 msec}
2020-11-19 20:06:59.978 INFO  jdbc.sqltiming Line:373 - select nodefiledd0_.nid as nid1_10_, nodefiledd0_.changed as changed2_10_, nodefiledd0_.created 
as created3_10_, nodefiledd0_.default_langcode as default_4_10_, nodefiledd0_.langcode as langcode5_10_, 
nodefiledd0_.promote as promote6_10_, nodefiledd0_.revision_translation_affected as revision7_10_, 
nodefiledd0_.status as status8_10_, nodefiledd0_.sticky as sticky9_10_, nodefiledd0_.title 
as title10_10_, nodefiledd0_.type as type11_10_, nodefiledd0_.uid as uid12_10_, nodefiledd0_.vid 
as vid13_10_ from node_field_data nodefiledd0_ where nodefiledd0_.nid=10 
 {executed in 1 msec}
2020-11-19 20:06:59.980 INFO  jdbc.resultsettable Line:610 - 
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|-----|----|----|
|nid |changed |created |default_langcode |langcode |promote |revision_translation_affected |status |sticky |title |type |uid |vid |
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|-----|----|----|
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|-----|----|----|

2020-11-19 20:06:59.984 INFO  jdbc.sqltiming Line:373 - select nodefieldr0_.nid as nid1_11_0_, nodefieldr0_.changed as changed2_11_0_, nodefieldr0_.created 
as created3_11_0_, nodefieldr0_.default_langcode as default_4_11_0_, nodefieldr0_.langcode 
as langcode5_11_0_, nodefieldr0_.promote as promote6_11_0_, nodefieldr0_.revision_translation_affected 
as revision7_11_0_, nodefieldr0_.status as status8_11_0_, nodefieldr0_.sticky as sticky9_11_0_, 
nodefieldr0_.title as title10_11_0_, nodefieldr0_.uid as uid11_11_0_, nodefieldr0_.vid as vid12_11_0_ 
from node_field_revision nodefieldr0_ where nodefieldr0_.nid=10 
 {executed in 1 msec}
2020-11-19 20:06:59.986 INFO  jdbc.resultsettable Line:610 - 
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|----|----|
|nid |changed |created |default_langcode |langcode |promote |revision_translation_affected |status |sticky |title |uid |vid |
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|----|----|
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|----|----|

2020-11-19 20:06:59.992 INFO  jdbc.sqltiming Line:373 - insert into node_field_revision (changed, created, default_langcode, langcode, promote, revision_translation_affected, 
status, sticky, title, uid, vid, nid) values (1605787619, 1605787619, 1, 'zh-hans', 0, 1, 1, 
0, '32丨JNI的运行机制', 1, 10, 10) 
 {executed in 1 msec}
2020-11-19 20:06:59.998 INFO  jdbc.sqltiming Line:373 - select nodefiledd0_.nid as nid1_10_0_, nodefiledd0_.changed as changed2_10_0_, nodefiledd0_.created 
as created3_10_0_, nodefiledd0_.default_langcode as default_4_10_0_, nodefiledd0_.langcode 
as langcode5_10_0_, nodefiledd0_.promote as promote6_10_0_, nodefiledd0_.revision_translation_affected 
as revision7_10_0_, nodefiledd0_.status as status8_10_0_, nodefiledd0_.sticky as sticky9_10_0_, 
nodefiledd0_.title as title10_10_0_, nodefiledd0_.type as type11_10_0_, nodefiledd0_.uid as 
uid12_10_0_, nodefiledd0_.vid as vid13_10_0_ from node_field_data nodefiledd0_ where nodefiledd0_.nid=10 
 {executed in 1 msec}
2020-11-19 20:07:00.000 INFO  jdbc.resultsettable Line:610 - 
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|-----|----|----|
|nid |changed |created |default_langcode |langcode |promote |revision_translation_affected |status |sticky |title |type |uid |vid |
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|-----|----|----|
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|-----|----|----|

2020-11-19 20:07:00.006 INFO  jdbc.sqltiming Line:373 - insert into node_field_data (changed, created, default_langcode, langcode, promote, revision_translation_affected, 
status, sticky, title, type, uid, vid, nid) values (1605787619, 1605787619, 1, 'zh-hans', 0, 
1, 1, 0, '32丨JNI的运行机制', 'book', 1, 10, 10) 
 {executed in 1 msec}
2020-11-19 20:07:00.013 INFO  jdbc.sqltiming Line:373 - select bookfieldm0_.entity_id as entity_i1_8_, bookfieldm0_.bundle as bundle2_8_, bookfieldm0_.delta 
as delta3_8_, bookfieldm0_.langcode as langcode4_8_, bookfieldm0_.field_media_value as field_me5_8_, 
bookfieldm0_.revision_id as revision6_8_ from node__field_media bookfieldm0_ where bookfieldm0_.entity_id=10 
 {executed in 1 msec}
2020-11-19 20:07:00.016 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------------|------------|
|entity_id |bundle |delta |langcode |field_media_value |revision_id |
|----------|-------|------|---------|------------------|------------|
|----------|-------|------|---------|------------------|------------|

2020-11-19 20:07:00.020 INFO  jdbc.sqltiming Line:373 - select bookfieldm0_.entity_id as entity_i1_8_0_, bookfieldm0_.bundle as bundle2_8_0_, bookfieldm0_.delta 
as delta3_8_0_, bookfieldm0_.langcode as langcode4_8_0_, bookfieldm0_.field_media_value as 
field_me5_8_0_, bookfieldm0_.revision_id as revision6_8_0_ from node__field_media bookfieldm0_ 
where bookfieldm0_.entity_id=10 
 {executed in 1 msec}
2020-11-19 20:07:00.022 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------------|------------|
|entity_id |bundle |delta |langcode |field_media_value |revision_id |
|----------|-------|------|---------|------------------|------------|
|----------|-------|------|---------|------------------|------------|

2020-11-19 20:07:00.026 INFO  jdbc.sqltiming Line:373 - insert into node__field_media (bundle, delta, langcode, field_media_value, revision_id, entity_id) 
values ('book', 0, 'zh-hans', 'https://qdall01.baidupcs.com/file/721e33a94b641714099ed68d2f98d1fe?bkt=en-038bee77e919b76a88c4b51b016c49af15205b3a1f17acfad8ec21a256e5b5783749fa33c07d9776&fid=3757516097-778750-900544601759937&time=1605787618&sign=FDTAXUGERLQlBHSKfWqir-DCb740ccc5511e5e8fedcff06b081203-ktsYzKgn3hE2Cecfo23w7Wvuzo4%3D&to=92&size=6192971&sta_dx=6192971&sta_cs=4333&sta_ft=mp3&sta_ct=7&sta_mt=0&fm2=MH%2CQingdao%2CAnywhere%2C%2Cshanghai%2Ccnc&ctime=1567182976&mtime=1605787492&resv0=-1&resv1=0&resv2=rlim&resv3=2&resv4=6192971&vuk=3757516097&iv=0&htype=&randtype=em&newver=1&newfm=1&secfm=1&flow_ver=3&pkey=en-60c1b5eb5a043665985dbd6b52e7510b8f5de7a5a4eb32109058854d200a6952ad29b2d4b85ef05b&sl=76480590&expires=8h&rt=pr&r=318236857&mlogid=7510721559050165452&vbdid=64799653&fin=32%E4%B8%A8JNI%E7%9A%84%E8%BF%90%E8%A1%8C%E6%9C%BA%E5%88%B6.mp3&bflag=92,34-92&rtype=1&dp-logid=7510721559050165452&dp-callid=0.1.1&hps=1&tsl=80&csl=80&fsl=-1&csign=yVzLQPCt4DblfMLqd2BCjd2RnqQ%3D&so=0&ut=6&uter=0&serv=0&uc=1458616558&ti=50dc2888c529211b15bebaebe7ff04bc067f6586629ce5bc&hflag=30&adg=c_0f3c8fb981bae1fdae375754a6f1d609&reqlabel=778750_l_eeb31e180410b8be0e62f686c2b42c5d_-1_43d73532db4f9890a29565ef474ca519&ibp=1&by=themis&filename=32%E4%B8%A8JNI%E7%9A%84%E8%BF%90%E8%A1%8C%E6%9C%BA%E5%88%B6.mp3', 
10, 10) 
 {executed in 1 msec}
2020-11-19 20:07:00.041 INFO  jdbc.sqltiming Line:373 - select nodefieldm0_.entity_id as entity_i1_17_0_, nodefieldm0_.bundle as bundle2_17_0_, nodefieldm0_.delta 
as delta3_17_0_, nodefieldm0_.langcode as langcode4_17_0_, nodefieldm0_.field_media_value as 
field_me5_17_0_, nodefieldm0_.revision_id as revision6_17_0_ from node_revision__field_media 
nodefieldm0_ where nodefieldm0_.entity_id=10 
 {executed in 2 msec}
2020-11-19 20:07:00.043 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------------|------------|
|entity_id |bundle |delta |langcode |field_media_value |revision_id |
|----------|-------|------|---------|------------------|------------|
|----------|-------|------|---------|------------------|------------|

2020-11-19 20:07:00.047 INFO  jdbc.sqltiming Line:373 - insert into node_revision__field_media (bundle, delta, langcode, field_media_value, revision_id, 
entity_id) values ('book', 0, 'zh-hans', 'https://qdall01.baidupcs.com/file/721e33a94b641714099ed68d2f98d1fe?bkt=en-038bee77e919b76a88c4b51b016c49af15205b3a1f17acfad8ec21a256e5b5783749fa33c07d9776&fid=3757516097-778750-900544601759937&time=1605787618&sign=FDTAXUGERLQlBHSKfWqir-DCb740ccc5511e5e8fedcff06b081203-ktsYzKgn3hE2Cecfo23w7Wvuzo4%3D&to=92&size=6192971&sta_dx=6192971&sta_cs=4333&sta_ft=mp3&sta_ct=7&sta_mt=0&fm2=MH%2CQingdao%2CAnywhere%2C%2Cshanghai%2Ccnc&ctime=1567182976&mtime=1605787492&resv0=-1&resv1=0&resv2=rlim&resv3=2&resv4=6192971&vuk=3757516097&iv=0&htype=&randtype=em&newver=1&newfm=1&secfm=1&flow_ver=3&pkey=en-60c1b5eb5a043665985dbd6b52e7510b8f5de7a5a4eb32109058854d200a6952ad29b2d4b85ef05b&sl=76480590&expires=8h&rt=pr&r=318236857&mlogid=7510721559050165452&vbdid=64799653&fin=32%E4%B8%A8JNI%E7%9A%84%E8%BF%90%E8%A1%8C%E6%9C%BA%E5%88%B6.mp3&bflag=92,34-92&rtype=1&dp-logid=7510721559050165452&dp-callid=0.1.1&hps=1&tsl=80&csl=80&fsl=-1&csign=yVzLQPCt4DblfMLqd2BCjd2RnqQ%3D&so=0&ut=6&uter=0&serv=0&uc=1458616558&ti=50dc2888c529211b15bebaebe7ff04bc067f6586629ce5bc&hflag=30&adg=c_0f3c8fb981bae1fdae375754a6f1d609&reqlabel=778750_l_eeb31e180410b8be0e62f686c2b42c5d_-1_43d73532db4f9890a29565ef474ca519&ibp=1&by=themis&filename=32%E4%B8%A8JNI%E7%9A%84%E8%BF%90%E8%A1%8C%E6%9C%BA%E5%88%B6.mp3', 
10, 10) 
 {executed in 1 msec}
2020-11-19 20:07:00.055 INFO  jdbc.sqltiming Line:373 - select bookfieldc0_.entity_id as entity_i1_5_, bookfieldc0_.bundle as bundle2_5_, bookfieldc0_.field_comment_value 
as field_co3_5_, bookfieldc0_.delta as delta4_5_, bookfieldc0_.field_comment_format as field_co5_5_, 
bookfieldc0_.langcode as langcode6_5_, bookfieldc0_.revision_id as revision7_5_ from node__field_comment 
bookfieldc0_ where bookfieldc0_.entity_id=10 
 {executed in 1 msec}
2020-11-19 20:07:00.056 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|--------------------|------|---------------------|---------|------------|
|entity_id |bundle |field_comment_value |delta |field_comment_format |langcode |revision_id |
|----------|-------|--------------------|------|---------------------|---------|------------|
|----------|-------|--------------------|------|---------------------|---------|------------|

2020-11-19 20:07:00.061 INFO  jdbc.sqltiming Line:373 - select bookfieldc0_.entity_id as entity_i1_5_0_, bookfieldc0_.bundle as bundle2_5_0_, bookfieldc0_.field_comment_value 
as field_co3_5_0_, bookfieldc0_.delta as delta4_5_0_, bookfieldc0_.field_comment_format as 
field_co5_5_0_, bookfieldc0_.langcode as langcode6_5_0_, bookfieldc0_.revision_id as revision7_5_0_ 
from node__field_comment bookfieldc0_ where bookfieldc0_.entity_id=10 
 {executed in 2 msec}
2020-11-19 20:07:00.063 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|--------------------|------|---------------------|---------|------------|
|entity_id |bundle |field_comment_value |delta |field_comment_format |langcode |revision_id |
|----------|-------|--------------------|------|---------------------|---------|------------|
|----------|-------|--------------------|------|---------------------|---------|------------|

2020-11-19 20:07:00.068 INFO  jdbc.sqltiming Line:373 - insert into node__field_comment (bundle, field_comment_value, delta, field_comment_format, 
langcode, revision_id, entity_id) values ('book', '<li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/11/22/7b/be15e8a2.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>libbylg</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2018-10-03 </div> </div> <div 
class="_2eMTs2JE_0"> <div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class="">4</span> 
</div> <!----> <!----> </div> </div> <div class="_3M6kV3zb_0 _3D2NkqD6_0"> 据说JNI的性能很差，请问这个是否是事实，如果有这个问题，那么是否有提高性能的方法 
</div> <!----> <!----> </div></li> <li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/14/4b/19/6f037647.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>东方</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2019-04-05 </div> </div> <div class="_2eMTs2JE_0"> 
<div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class=""></span> </div> <!----> <!----> 
</div> </div> <div class="_3M6kV3zb_0"> 老师: A类的方法a()调用C++ ，fork一个进程后，在子进程回调A#a()。a()打印了类的id，前后两个进程打印id是一样的。我的问题是，fork进程后，JVM还是同一个实例？ 
<br> <br> </div> <div class="_2r3UB1GX_0"> <span>展开</span><i class="iconfont"></i> </div> 
<!----> </div></li> <li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/14/08/96/231fdd9e.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>未知</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2018-12-28 </div> </div> <div class="_2eMTs2JE_0"> 
<div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class=""></span> </div> <!----> <!----> 
</div> </div> <div class="_3M6kV3zb_0 _3D2NkqD6_0"> 在《深入理解jvm》第二版一书中，2.3.3章节讲述对象访问定位时提到，Hotspot是使用直接指针而不是句柄去访问对象的。是否是Java内部访问时使用的直接指针而native时使用的句柄？？ 
</div> <!----> <!----> </div></li> <li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/12/10/e2/28c09cf5.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>平淡</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2018-11-28 </div> </div> <div class="_2eMTs2JE_0"> 
<div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class=""></span> </div> <!----> <!----> 
</div> </div> <div class="_3M6kV3zb_0"> 请问这个JNIENV的参数，是当前执行native函数线程的JNIENV吗？线程的JNIENV是什么时候赋值的呢，找了好久也没找到，谢谢！ 
</div> <div class="_2r3UB1GX_0"> <span>展开</span><i class="iconfont"></i> </div> <!----> </div></li> 
<li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/0f/44/47/3ddb94d0.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>javaadu</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2018-10-23 </div> </div> <div 
class="_2eMTs2JE_0"> <div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class=""></span> 
</div> <!----> <!----> </div> </div> <div class="_3M6kV3zb_0"> （1）JNI中也需要考虑对异常的处理 <br>（2）JNI中通过句柄引用java对象， 
<br>（3）垃圾回收器会忽略jni中的局部引用和全局引用 </div> <div class="_2r3UB1GX_0"> <span>展开</span><i class="iconfont"></i> 
</div> <!----> </div></li> <li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/0f/7c/10/165cb374.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>Scott</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2018-10-05 </div> </div> <div class="_2eMTs2JE_0"> 
<div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class=""></span> </div> <!----> <!----> 
</div> </div> <div class="_3M6kV3zb_0"> HotSpot 虚拟机是通过句柄（handle）来完成上述需求的。 <br> <br>句柄是不是只是移动对象时使用，如果每次访问引用都要读内存两次，那性能影响严重 
</div> <div class="_2r3UB1GX_0"> <span>展开</span><i class="iconfont"></i> </div> <div class="_2xNIY4NG_0"> 
<p class="_33BLbmw4_0">作者回复: JNI里每次访问都要通过句柄，理论上你可以解引用拿到oop，但是不安全，一旦垃圾回收在你用oop时移动了对象，你就会操作一个实际上已经失效了的oop</p> 
</div> </div></li> <li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/0f/7c/10/165cb374.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>Scott</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2018-10-05 </div> </div> <div class="_2eMTs2JE_0"> 
<div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class=""></span> </div> <!----> <!----> 
</div> </div> <div class="_3M6kV3zb_0 _3D2NkqD6_0"> $ java -Djava.library.path=/PATH/TO/DIR/CONTAINING/libfoo.dylib 
org.example.Foo <br>Hello, World <br>这个地方应该是只写路径，不要把文件名加上 </div> <!----> <div class="_2xNIY4NG_0"> 
<p class="_33BLbmw4_0">作者回复: 多谢指出！</p> </div> </div></li>', 0, 'full_html', 'zh-hans', 10, 
10) 
 {executed in 1 msec}
2020-11-19 20:07:00.080 INFO  jdbc.sqltiming Line:373 - select nodefieldc0_.entity_id as entity_i1_14_0_, nodefieldc0_.bundle as bundle2_14_0_, nodefieldc0_.field_comment_value 
as field_co3_14_0_, nodefieldc0_.delta as delta4_14_0_, nodefieldc0_.field_comment_format as 
field_co5_14_0_, nodefieldc0_.langcode as langcode6_14_0_, nodefieldc0_.revision_id as revision7_14_0_ 
from node_revision__field_comment nodefieldc0_ where nodefieldc0_.entity_id=10 
 {executed in 1 msec}
2020-11-19 20:07:00.082 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|--------------------|------|---------------------|---------|------------|
|entity_id |bundle |field_comment_value |delta |field_comment_format |langcode |revision_id |
|----------|-------|--------------------|------|---------------------|---------|------------|
|----------|-------|--------------------|------|---------------------|---------|------------|

2020-11-19 20:07:00.089 INFO  jdbc.sqltiming Line:373 - insert into node_revision__field_comment (bundle, field_comment_value, delta, field_comment_format, 
langcode, revision_id, entity_id) values ('book', '<li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/11/22/7b/be15e8a2.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>libbylg</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2018-10-03 </div> </div> <div 
class="_2eMTs2JE_0"> <div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class="">4</span> 
</div> <!----> <!----> </div> </div> <div class="_3M6kV3zb_0 _3D2NkqD6_0"> 据说JNI的性能很差，请问这个是否是事实，如果有这个问题，那么是否有提高性能的方法 
</div> <!----> <!----> </div></li> <li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/14/4b/19/6f037647.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>东方</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2019-04-05 </div> </div> <div class="_2eMTs2JE_0"> 
<div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class=""></span> </div> <!----> <!----> 
</div> </div> <div class="_3M6kV3zb_0"> 老师: A类的方法a()调用C++ ，fork一个进程后，在子进程回调A#a()。a()打印了类的id，前后两个进程打印id是一样的。我的问题是，fork进程后，JVM还是同一个实例？ 
<br> <br> </div> <div class="_2r3UB1GX_0"> <span>展开</span><i class="iconfont"></i> </div> 
<!----> </div></li> <li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/14/08/96/231fdd9e.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>未知</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2018-12-28 </div> </div> <div class="_2eMTs2JE_0"> 
<div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class=""></span> </div> <!----> <!----> 
</div> </div> <div class="_3M6kV3zb_0 _3D2NkqD6_0"> 在《深入理解jvm》第二版一书中，2.3.3章节讲述对象访问定位时提到，Hotspot是使用直接指针而不是句柄去访问对象的。是否是Java内部访问时使用的直接指针而native时使用的句柄？？ 
</div> <!----> <!----> </div></li> <li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/12/10/e2/28c09cf5.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>平淡</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2018-11-28 </div> </div> <div class="_2eMTs2JE_0"> 
<div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class=""></span> </div> <!----> <!----> 
</div> </div> <div class="_3M6kV3zb_0"> 请问这个JNIENV的参数，是当前执行native函数线程的JNIENV吗？线程的JNIENV是什么时候赋值的呢，找了好久也没找到，谢谢！ 
</div> <div class="_2r3UB1GX_0"> <span>展开</span><i class="iconfont"></i> </div> <!----> </div></li> 
<li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/0f/44/47/3ddb94d0.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>javaadu</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2018-10-23 </div> </div> <div 
class="_2eMTs2JE_0"> <div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class=""></span> 
</div> <!----> <!----> </div> </div> <div class="_3M6kV3zb_0"> （1）JNI中也需要考虑对异常的处理 <br>（2）JNI中通过句柄引用java对象， 
<br>（3）垃圾回收器会忽略jni中的局部引用和全局引用 </div> <div class="_2r3UB1GX_0"> <span>展开</span><i class="iconfont"></i> 
</div> <!----> </div></li> <li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/0f/7c/10/165cb374.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>Scott</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2018-10-05 </div> </div> <div class="_2eMTs2JE_0"> 
<div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class=""></span> </div> <!----> <!----> 
</div> </div> <div class="_3M6kV3zb_0"> HotSpot 虚拟机是通过句柄（handle）来完成上述需求的。 <br> <br>句柄是不是只是移动对象时使用，如果每次访问引用都要读内存两次，那性能影响严重 
</div> <div class="_2r3UB1GX_0"> <span>展开</span><i class="iconfont"></i> </div> <div class="_2xNIY4NG_0"> 
<p class="_33BLbmw4_0">作者回复: JNI里每次访问都要通过句柄，理论上你可以解引用拿到oop，但是不安全，一旦垃圾回收在你用oop时移动了对象，你就会操作一个实际上已经失效了的oop</p> 
</div> </div></li> <li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/0f/7c/10/165cb374.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>Scott</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2018-10-05 </div> </div> <div class="_2eMTs2JE_0"> 
<div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class=""></span> </div> <!----> <!----> 
</div> </div> <div class="_3M6kV3zb_0 _3D2NkqD6_0"> $ java -Djava.library.path=/PATH/TO/DIR/CONTAINING/libfoo.dylib 
org.example.Foo <br>Hello, World <br>这个地方应该是只写路径，不要把文件名加上 </div> <!----> <div class="_2xNIY4NG_0"> 
<p class="_33BLbmw4_0">作者回复: 多谢指出！</p> </div> </div></li>', 0, 'full_html', 'zh-hans', 10, 
10) 
 {executed in 1 msec}
2020-11-19 20:07:00.100 INFO  jdbc.sqltiming Line:373 - select bookfieldt0_.entity_id as entity_i1_9_, bookfieldt0_.bundle as bundle2_9_, bookfieldt0_.delta 
as delta3_9_, bookfieldt0_.langcode as langcode4_9_, bookfieldt0_.revision_id as revision5_9_, 
bookfieldt0_.field_thumb_value as field_th6_9_ from node__field_thumb bookfieldt0_ where bookfieldt0_.entity_id=10 
 {executed in 2 msec}
2020-11-19 20:07:00.102 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------|------------------|
|entity_id |bundle |delta |langcode |revision_id |field_thumb_value |
|----------|-------|------|---------|------------|------------------|
|----------|-------|------|---------|------------|------------------|

2020-11-19 20:07:00.110 INFO  jdbc.sqltiming Line:373 - select bookfieldt0_.entity_id as entity_i1_9_0_, bookfieldt0_.bundle as bundle2_9_0_, bookfieldt0_.delta 
as delta3_9_0_, bookfieldt0_.langcode as langcode4_9_0_, bookfieldt0_.revision_id as revision5_9_0_, 
bookfieldt0_.field_thumb_value as field_th6_9_0_ from node__field_thumb bookfieldt0_ where 
bookfieldt0_.entity_id=10 
 {executed in 2 msec}
2020-11-19 20:07:00.112 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------|------------------|
|entity_id |bundle |delta |langcode |revision_id |field_thumb_value |
|----------|-------|------|---------|------------|------------------|
|----------|-------|------|---------|------------|------------------|

2020-11-19 20:07:00.117 INFO  jdbc.sqltiming Line:373 - insert into node__field_thumb (bundle, delta, langcode, revision_id, field_thumb_value, entity_id) 
values ('book', 0, 'zh-hans', 10, 'https://static001.geekbang.org/resource/image/ce/83/ce606579058e7c27e0bf4ee97d8db683.jpg', 
10) 
 {executed in 1 msec}
2020-11-19 20:07:00.125 INFO  jdbc.sqltiming Line:373 - select nodefieldt0_.entity_id as entity_i1_18_0_, nodefieldt0_.bundle as bundle2_18_0_, nodefieldt0_.delta 
as delta3_18_0_, nodefieldt0_.langcode as langcode4_18_0_, nodefieldt0_.revision_id as revision5_18_0_, 
nodefieldt0_.field_thumb_value as field_th6_18_0_ from node_revision__field_thumb nodefieldt0_ 
where nodefieldt0_.entity_id=10 
 {executed in 1 msec}
2020-11-19 20:07:00.127 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------|------------------|
|entity_id |bundle |delta |langcode |revision_id |field_thumb_value |
|----------|-------|------|---------|------------|------------------|
|----------|-------|------|---------|------------|------------------|

2020-11-19 20:07:00.132 INFO  jdbc.sqltiming Line:373 - insert into node_revision__field_thumb (bundle, delta, langcode, revision_id, field_thumb_value, 
entity_id) values ('book', 0, 'zh-hans', 10, 'https://static001.geekbang.org/resource/image/ce/83/ce606579058e7c27e0bf4ee97d8db683.jpg', 
10) 
 {executed in 1 msec}
2020-11-19 20:07:00.140 INFO  jdbc.sqltiming Line:373 - select bookfieldf0_.entity_id as entity_i1_6_0_, bookfieldf0_.bundle as bundle2_6_0_, bookfieldf0_.delta 
as delta3_6_0_, bookfieldf0_.field_fenlei_target_id as field_fe4_6_0_, bookfieldf0_.langcode 
as langcode5_6_0_, bookfieldf0_.revision_id as revision6_6_0_ from node__field_fenlei bookfieldf0_ 
where bookfieldf0_.entity_id=10 
 {executed in 2 msec}
2020-11-19 20:07:00.141 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------------|---------|------------|
|entity_id |bundle |delta |field_fenlei_target_id |langcode |revision_id |
|----------|-------|------|-----------------------|---------|------------|
|----------|-------|------|-----------------------|---------|------------|

2020-11-19 20:07:00.146 INFO  jdbc.sqltiming Line:373 - insert into node__field_fenlei (bundle, delta, field_fenlei_target_id, langcode, revision_id, 
entity_id) values ('book', 0, 1, 'zh-hans', 10, 10) 
 {executed in 1 msec}
2020-11-19 20:07:00.155 INFO  jdbc.sqltiming Line:373 - select nodefieldf0_.entity_id as entity_i1_15_0_, nodefieldf0_.bundle as bundle2_15_0_, nodefieldf0_.delta 
as delta3_15_0_, nodefieldf0_.field_fenlei_target_id as field_fe4_15_0_, nodefieldf0_.langcode 
as langcode5_15_0_, nodefieldf0_.revision_id as revision6_15_0_ from node_revision__field_fenlei 
nodefieldf0_ where nodefieldf0_.entity_id=10 
 {executed in 2 msec}
2020-11-19 20:07:00.157 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------------|---------|------------|
|entity_id |bundle |delta |field_fenlei_target_id |langcode |revision_id |
|----------|-------|------|-----------------------|---------|------------|
|----------|-------|------|-----------------------|---------|------------|

2020-11-19 20:07:00.162 INFO  jdbc.sqltiming Line:373 - insert into node_revision__field_fenlei (bundle, delta, field_fenlei_target_id, langcode, revision_id, 
entity_id) values ('book', 0, 1, 'zh-hans', 10, 10) 
 {executed in 1 msec}
2020-11-19 20:07:00.169 INFO  jdbc.sqltiming Line:373 - select bookchecke0_.item_id as item_id1_2_, bookchecke0_.fsid as fsid2_2_, bookchecke0_.got 
as got3_2_, bookchecke0_.name as name4_2_ from book_check bookchecke0_ where bookchecke0_.fsid='426171526198410' 
and bookchecke0_.name='net_content' 
 {executed in 1 msec}
2020-11-19 20:07:00.170 INFO  jdbc.resultsettable Line:610 - 
|--------|-----|----|-----|
|item_id |fsid |got |name |
|--------|-----|----|-----|
|--------|-----|----|-----|

2020-11-19 20:08:42.581 INFO  jdbc.sqltiming Line:373 - select bookchecke0_.item_id as item_id1_2_, bookchecke0_.fsid as fsid2_2_, bookchecke0_.got 
as got3_2_, bookchecke0_.name as name4_2_ from book_check bookchecke0_ where bookchecke0_.fsid='426171526198410' 
and bookchecke0_.name='net_content' 
 {executed in 1 msec}
2020-11-19 20:08:42.584 INFO  jdbc.resultsettable Line:610 - 
|--------|-----|----|-----|
|item_id |fsid |got |name |
|--------|-----|----|-----|
|--------|-----|----|-----|

2020-11-19 20:08:42.591 INFO  jdbc.sqltiming Line:373 - insert into book_check (fsid, got, name) values ('426171526198410', 1, 'net_content') 
 {executed in 1 msec}
2020-11-19 20:08:42.593 INFO  jdbc.sqltiming Line:373 - getGeneratedKeys on query: insert into book_check (fsid, got, name) values ('426171526198410', 
1, 'net_content') 
 {executed in 0 msec}
2020-11-19 20:08:42.596 INFO  jdbc.resultsettable Line:610 - 
|--------------|
|generated_key |
|--------------|
|25            |
|--------------|

2020-11-19 20:08:42.614 INFO  jdbc.sqltiming Line:373 - select bookchecke0_.item_id as item_id1_2_, bookchecke0_.fsid as fsid2_2_, bookchecke0_.got 
as got3_2_, bookchecke0_.name as name4_2_ from book_check bookchecke0_ where bookchecke0_.fsid='426171526198410' 
and bookchecke0_.name='media' 
 {executed in 1 msec}
2020-11-19 20:08:42.617 INFO  jdbc.resultsettable Line:610 - 
|--------|-----|----|-----|
|item_id |fsid |got |name |
|--------|-----|----|-----|
|--------|-----|----|-----|

2020-11-19 20:08:43.190 INFO  jdbc.sqltiming Line:373 - select bookchecke0_.item_id as item_id1_2_, bookchecke0_.fsid as fsid2_2_, bookchecke0_.got 
as got3_2_, bookchecke0_.name as name4_2_ from book_check bookchecke0_ where bookchecke0_.fsid='426171526198410' 
and bookchecke0_.name='media' 
 {executed in 1 msec}
2020-11-19 20:08:43.192 INFO  jdbc.resultsettable Line:610 - 
|--------|-----|----|-----|
|item_id |fsid |got |name |
|--------|-----|----|-----|
|--------|-----|----|-----|

2020-11-19 20:08:43.197 INFO  jdbc.sqltiming Line:373 - insert into book_check (fsid, got, name) values ('426171526198410', 1, 'media') 
 {executed in 1 msec}
2020-11-19 20:08:43.199 INFO  jdbc.sqltiming Line:373 - getGeneratedKeys on query: insert into book_check (fsid, got, name) values ('426171526198410', 
1, 'media') 
 {executed in 0 msec}
2020-11-19 20:08:43.200 INFO  jdbc.resultsettable Line:610 - 
|--------------|
|generated_key |
|--------------|
|26            |
|--------------|

2020-11-19 20:08:43.210 INFO  jdbc.sqltiming Line:373 - select bookfieldf0_.entity_id as entity_i1_7_, bookfieldf0_.bundle as bundle2_7_, bookfieldf0_.delta 
as delta3_7_, bookfieldf0_.field_fsid_value as field_fs4_7_, bookfieldf0_.langcode as langcode5_7_, 
bookfieldf0_.revision_id as revision6_7_ from node__field_fsid bookfieldf0_ where bookfieldf0_.field_fsid_value='426171526198410' 
 {executed in 1 msec}
2020-11-19 20:08:43.212 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------|---------|------------|
|entity_id |bundle |delta |field_fsid_value |langcode |revision_id |
|----------|-------|------|-----------------|---------|------------|
|----------|-------|------|-----------------|---------|------------|

2020-11-19 20:08:43.216 INFO  jdbc.sqltiming Line:373 - insert into node_revision (langcode, nid, revision_default, revision_timestamp, revision_uid) 
values ('zh-hans', 0, 1, 1605787723, 1) 
 {executed in 1 msec}
2020-11-19 20:08:43.217 INFO  jdbc.sqltiming Line:373 - getGeneratedKeys on query: insert into node_revision (langcode, nid, revision_default, revision_timestamp, 
revision_uid) values ('zh-hans', 0, 1, 1605787723, 1) 
 {executed in 0 msec}
2020-11-19 20:08:43.219 INFO  jdbc.resultsettable Line:610 - 
|--------------|
|generated_key |
|--------------|
|11            |
|--------------|

2020-11-19 20:08:43.230 INFO  jdbc.sqltiming Line:373 - insert into node (langcode, type, uuid, vid) values ('zh-hans', 'book', '410752a0-defa-4810-9d74-6a025fb502c0', 
11) 
 {executed in 1 msec}
2020-11-19 20:08:43.231 INFO  jdbc.sqltiming Line:373 - getGeneratedKeys on query: insert into node (langcode, type, uuid, vid) values ('zh-hans', 
'book', '410752a0-defa-4810-9d74-6a025fb502c0', 11) 
 {executed in 0 msec}
2020-11-19 20:08:43.232 INFO  jdbc.resultsettable Line:610 - 
|--------------|
|generated_key |
|--------------|
|11            |
|--------------|

2020-11-19 20:08:43.243 INFO  jdbc.sqltiming Line:373 - update node_revision set langcode='zh-hans', nid=11, revision_default=1, revision_timestamp=1605787723, 
revision_uid=1 where vid=11 
 {executed in 0 msec}
2020-11-19 20:08:43.249 INFO  jdbc.sqltiming Line:373 - select bookfieldf0_.entity_id as entity_i1_7_0_, bookfieldf0_.bundle as bundle2_7_0_, bookfieldf0_.delta 
as delta3_7_0_, bookfieldf0_.field_fsid_value as field_fs4_7_0_, bookfieldf0_.langcode as langcode5_7_0_, 
bookfieldf0_.revision_id as revision6_7_0_ from node__field_fsid bookfieldf0_ where bookfieldf0_.entity_id=11 
 {executed in 1 msec}
2020-11-19 20:08:43.251 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------|---------|------------|
|entity_id |bundle |delta |field_fsid_value |langcode |revision_id |
|----------|-------|------|-----------------|---------|------------|
|----------|-------|------|-----------------|---------|------------|

2020-11-19 20:08:43.255 INFO  jdbc.sqltiming Line:373 - insert into node__field_fsid (bundle, delta, field_fsid_value, langcode, revision_id, entity_id) 
values ('book', 0, '426171526198410', 'zh-hans', 11, 11) 
 {executed in 1 msec}
2020-11-19 20:08:43.263 INFO  jdbc.sqltiming Line:373 - select nodefieldf0_.entity_id as entity_i1_16_0_, nodefieldf0_.bundle as bundle2_16_0_, nodefieldf0_.delta 
as delta3_16_0_, nodefieldf0_.field_fsid_value as field_fs4_16_0_, nodefieldf0_.langcode as 
langcode5_16_0_, nodefieldf0_.revision_id as revision6_16_0_ from node_revision__field_fsid 
nodefieldf0_ where nodefieldf0_.entity_id=11 
 {executed in 1 msec}
2020-11-19 20:08:43.264 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------|---------|------------|
|entity_id |bundle |delta |field_fsid_value |langcode |revision_id |
|----------|-------|------|-----------------|---------|------------|
|----------|-------|------|-----------------|---------|------------|

2020-11-19 20:08:43.268 INFO  jdbc.sqltiming Line:373 - insert into node_revision__field_fsid (bundle, delta, field_fsid_value, langcode, revision_id, 
entity_id) values ('book', 0, '426171526198410', 'zh-hans', 11, 11) 
 {executed in 0 msec}
2020-11-19 20:08:43.276 INFO  jdbc.sqltiming Line:373 - select bookentity0_.nid as nid1_1_, bookentity0_.bid as bid2_1_, bookentity0_.depth as depth3_1_, 
bookentity0_.has_children as has_chil4_1_, bookentity0_.p1 as p5_1_, bookentity0_.p2 as p6_1_, 
bookentity0_.p3 as p7_1_, bookentity0_.p4 as p8_1_, bookentity0_.p5 as p9_1_, bookentity0_.pid 
as pid10_1_, bookentity0_.weight as weight11_1_ from book bookentity0_ where bookentity0_.nid=11 
 {executed in 1 msec}
2020-11-19 20:08:43.277 INFO  jdbc.resultsettable Line:610 - 
|----|----|------|-------------|---|---|---|---|---|----|-------|
|nid |bid |depth |has_children |p1 |p2 |p3 |p4 |p5 |pid |weight |
|----|----|------|-------------|---|---|---|---|---|----|-------|
|----|----|------|-------------|---|---|---|---|---|----|-------|

2020-11-19 20:08:43.281 INFO  jdbc.sqltiming Line:373 - select bookentity0_.nid as nid1_1_0_, bookentity0_.bid as bid2_1_0_, bookentity0_.depth as 
depth3_1_0_, bookentity0_.has_children as has_chil4_1_0_, bookentity0_.p1 as p5_1_0_, bookentity0_.p2 
as p6_1_0_, bookentity0_.p3 as p7_1_0_, bookentity0_.p4 as p8_1_0_, bookentity0_.p5 as p9_1_0_, 
bookentity0_.pid as pid10_1_0_, bookentity0_.weight as weight11_1_0_ from book bookentity0_ 
where bookentity0_.nid=11 
 {executed in 1 msec}
2020-11-19 20:08:43.283 INFO  jdbc.resultsettable Line:610 - 
|----|----|------|-------------|---|---|---|---|---|----|-------|
|nid |bid |depth |has_children |p1 |p2 |p3 |p4 |p5 |pid |weight |
|----|----|------|-------------|---|---|---|---|---|----|-------|
|----|----|------|-------------|---|---|---|---|---|----|-------|

2020-11-19 20:08:43.287 INFO  jdbc.sqltiming Line:373 - insert into book (bid, depth, has_children, p1, p2, p3, p4, p5, pid, weight, nid) values (1, 
3, 0, 1, 8, 11, 0, 0, 8, 0, 11) 
 {executed in 1 msec}
2020-11-19 20:08:43.294 INFO  jdbc.sqltiming Line:373 - select nodebodyen0_.entity_id as entity_i1_4_, nodebodyen0_.body_value as body_val2_4_, nodebodyen0_.body_summary 
as body_sum3_4_, nodebodyen0_.bundle as bundle4_4_, nodebodyen0_.delta as delta5_4_, nodebodyen0_.body_format 
as body_for6_4_, nodebodyen0_.langcode as langcode7_4_, nodebodyen0_.revision_id as revision8_4_ 
from node__body nodebodyen0_ where nodebodyen0_.entity_id=11 
 {executed in 1 msec}
2020-11-19 20:08:43.296 INFO  jdbc.resultsettable Line:610 - 
|----------|-----------|-------------|-------|------|------------|---------|------------|
|entity_id |body_value |body_summary |bundle |delta |body_format |langcode |revision_id |
|----------|-----------|-------------|-------|------|------------|---------|------------|
|----------|-----------|-------------|-------|------|------------|---------|------------|

2020-11-19 20:08:43.300 INFO  jdbc.sqltiming Line:373 - select nodebodyre0_.entity_id as entity_i1_13_0_, nodebodyre0_.body_value as body_val2_13_0_, 
nodebodyre0_.body_summary as body_sum3_13_0_, nodebodyre0_.bundle as bundle4_13_0_, nodebodyre0_.delta 
as delta5_13_0_, nodebodyre0_.body_format as body_for6_13_0_, nodebodyre0_.langcode as langcode7_13_0_, 
nodebodyre0_.revision_id as revision8_13_0_ from node_revision__body nodebodyre0_ where nodebodyre0_.entity_id=11 
 {executed in 1 msec}
2020-11-19 20:08:43.301 INFO  jdbc.resultsettable Line:610 - 
|----------|-----------|-------------|-------|------|------------|---------|------------|
|entity_id |body_value |body_summary |bundle |delta |body_format |langcode |revision_id |
|----------|-----------|-------------|-------|------|------------|---------|------------|
|----------|-----------|-------------|-------|------|------------|---------|------------|

2020-11-19 20:08:43.313 INFO  jdbc.sqltiming Line:373 - insert into node_revision__body (body_value, body_summary, bundle, delta, body_format, langcode, 
revision_id, entity_id) values ('<p>今天我们来继续了解 Java 虚拟机的监控及诊断工具。</p> <h2>eclipse MAT</h2> <p>在上一篇中，我介绍了<code>jmap</code>工具，它支持导出 
Java 虚拟机堆的二进制快照。eclipse 的<a href="https://www.eclipse.org/mat/">MAT 工具</a>便是其中一个能够解析这类二进制快照的工具。</p> 
<p>MAT 本身也能够获取堆的二进制快照。该功能将借助<code>jps</code>列出当前正在运行的 Java 进程，以供选择并获取快照。由于<code>jps</code>会将自己列入其中，因此你会在列表中发现一个已经结束运行的<code>jps</code>进程。</p> 
<p><img src="https://static001.geekbang.org/resource/image/c9/7e/c9072149fb112312cbc217acc2660c7e.png" 
alt=""></p> <p>MAT 获取二进制快照的方式有三种，一是使用 Attach API，二是新建一个 Java 虚拟机来运行 Attach API，三是使用<code>jmap</code>工具。</p> 
<p>这三种本质上都是在使用 Attach API。不过，在目标进程启用了<code>DisableAttachMechanism</code>参数时，前两者将不在选取列表中显示，后者将在运行时报错。</p> 
<p>当加载完堆快照之后，MAT 的主界面将展示一张饼状图，其中列举占据的 Retained heap 最多的几个对象。</p> <p><img src="https://static001.geekbang.org/resource/image/da/bf/da2e5894d0be535b6daa5084beb33ebf.png" 
alt=""></p> <p>这里讲一下 MAT 计算对象占据内存的<a href="https://help.eclipse.org/mars/topic/org.eclipse.mat.ui.help/concepts/shallowretainedheap.html?cp=46_2_1">两种方式</a>。第一种是 
Shallow heap，指的是对象自身所占据的内存。第二种是 Retained heap，指的是当对象不再被引用时，垃圾回收器所能回收的总内存，包括对象自身所占据的内存，以及仅能够通过该对象引用到的其他对象所占据的内存。上面的饼状图便是基于 
Retained heap 的。</p><!-- [[[read_end]]] --> <p>MAT 包括了两个比较重要的视图，分别是直方图（histogram）和支配树（dominator 
tree）。</p> <p><img src="https://static001.geekbang.org/resource/image/bb/05/bbb59ca4d86c227dac23f30c360c9405.png" 
alt=""></p> <p>MAT 的直方图和<code>jmap</code>的<code>-histo</code>子命令一样，都能够展示各个类的实例数目以及这些实例的 Shallow 
heap 总和。但是，MAT 的直方图还能够计算 Retained heap，并支持基于实例数目或 Retained heap 的排序方式（默认为 Shallow heap）。此外，MAT 
还可以将直方图中的类按照超类、类加载器或者包名分组。</p> <p>当选中某个类时，MAT 界面左上角的 Inspector 窗口将展示该类的 Class 实例的相关信息，如类加载器等。（下图中的<code>ClassLoader 
@ 0x0</code>指的便是启动类加载器。）</p> <p><img src="https://static001.geekbang.org/resource/image/dd/ab/dde7022060fad3945944fb7e4c9926ab.png" 
alt=""></p> <p>支配树的概念源自图论。在一则流图（flow diagram）中，如果从入口节点到 b 节点的所有路径都要经过 a 节点，那么 a 支配（dominate）b。</p> 
<p>在 a 支配 b，且 a 不同于 b 的情况下（即 a 严格支配 b），如果从 a 节点到 b 节点的所有路径中不存在支配 b 的其他节点，那么 a 直接支配（immediate 
dominate）b。这里的支配树指的便是由节点的直接支配节点所组成的树状结构。</p> <p>我们可以将堆中所有的对象看成一张对象图，每个对象是一个图节点，而 GC Roots 则是对象图的入口，对象之间的引用关系则构成了对象图中的有向边。这样一来，我们便能够构造出该对象图所对应的支配树。</p> 
<p>MAT 将按照每个对象 Retained heap 的大小排列该支配树。如下图所示：</p> <p><img src="https://static001.geekbang.org/resource/image/0d/a6/0d4ea7f00d500db8a978ff0183a840a6.png" 
alt=""></p> <p>根据 Retained heap 的定义，只要能够回收上图右侧的表中的第一个对象，那么垃圾回收器便能够释放出 13.6MB 内存。</p> <p>需要注意的是，对象的引用型字段未必对应支配树中的父子节点关系。假设对象 
a 拥有两个引用型字段，分别指向 b 和 c。而 b 和 c 各自拥有一个引用型字段，但都指向 d。如果没有其他引用指向 b、c 或 d，那么 a 直接支配 b、c 和 d，而 b（或 
c）和 d 之间不存在支配关系。</p> <p>当在支配树视图中选中某一对象时，我们还可以通过 Path To GC Roots 功能，反向列出该对象到 GC Roots 的引用路径。如下图所示：</p> 
<p><img src="https://static001.geekbang.org/resource/image/e0/e7/e04d55d955832bf681aba16dcffc2ee7.png" 
alt=""></p> <p>MAT 还将自动匹配内存泄漏中的常见模式，并汇报潜在的内存泄漏问题。具体可参考该<a href="https://help.eclipse.org/mars/topic/org.eclipse.mat.ui.help/tasks/runningleaksuspectreport.html?cp=46_3_1">帮助文档</a>以及<a 
href="http://memoryanalyzer.blogspot.com/2008/05/automated-heap-dump-analysis-finding.html">这篇博客</a>。</p> 
<h2>Java Mission Control</h2> <blockquote> <p>注意：自 Java 11 开始，本节介绍的 JFR 已经开源。但在之前的 Java 版本，JFR 
属于 Commercial Feature，需要通过 Java 虚拟机参数<code>-XX:+UnlockCommercialFeatures</code>开启。</p> <p>我个人不清楚也不能回答关于 
Java 11 之前的版本是否仍需要商务许可（Commercial License）的问题。请另行咨询后再使用，或者直接使用 Java 11。</p> <p><a href="http://jdk.java.net/jmc/">Java 
Mission Control</a>（JMC）是 Java 虚拟机平台上的性能监控工具。它包含一个 GUI 客户端，以及众多用来收集 Java 虚拟机性能数据的插件，如 JMX Console（能够访问用来存放虚拟机各个子系统运行数据的<a 
href="https://en.wikipedia.org/wiki/Java_Management_Extensions#Managed_beans">MXBeans</a>），以及虚拟机内置的高效 
profiling 工具 Java Flight Recorder（JFR）。</p> </blockquote> <p>JFR 的性能开销很小，在默认配置下平均低于 1%。与其他工具相比，JFR 
能够直接访问虚拟机内的数据，并且不会影响虚拟机的优化。因此，它非常适用于生产环境下满负荷运行的 Java 程序。</p> <p>当启用时，JFR 将记录运行过程中发生的一系列事件。其中包括 
Java 层面的事件，如线程事件、锁事件，以及 Java 虚拟机内部的事件，如新建对象、垃圾回收和即时编译事件。</p> <p>按照发生时机以及持续时间来划分，JFR 的事件共有四种类型，它们分别为以下四种。</p> 
<ol> <li>瞬时事件（Instant Event），用户关心的是它们发生与否，例如异常、线程启动事件。</li> <li>持续事件（Duration Event），用户关心的是它们的持续时间，例如垃圾回收事件。</li> 
<li>计时事件（Timed Event），是时长超出指定阈值的持续事件。</li> <li>取样事件（Sample Event），是周期性取样的事件。<br> 取样事件的其中一个常见例子便是方法抽样（Method 
Sampling），即每隔一段时间统计各个线程的栈轨迹。如果在这些抽样取得的栈轨迹中存在一个反复出现的方法，那么我们可以推测该方法是热点方法。</li> </ol> <p>JFR 的取样事件要比其他工具更加精确。以方法抽样为例，其他工具通常基于 
JVMTI（<a href="https://docs.oracle.com/en/java/javase/11/docs/specs/jvmti.html">Java Virtual 
Machine Tool Interface</a>）的<code>GetAllStackTraces</code> API。该 API 依赖于安全点机制，其获得的栈轨迹总是在安全点上，由此得出的结论未必精确。JFR 
则不然，它不依赖于安全点机制，因此其结果相对来说更加精确。</p> <p>JFR 的启用方式主要有三种。</p> <p>第一种是在运行目标 Java 程序时添加<code>-XX:StartFlightRecording=</code>参数。关于该参数的配置详情，你可以参考<a 
href="https://docs.oracle.com/en/java/javase/11/tools/java.html">该帮助文档</a>（请在页面中搜索<code>StartFlightRecording</code>）。</p> 
<p>下面我列举三种常见的配置方式。</p> <ul> <li>在下面这条命令中，JFR 将会在 Java 虚拟机启动 5s 后（对应<code>delay=5s</code>）收集数据，持续 
20s（对应<code>duration=20s</code>）。当收集完毕后，JFR 会将收集得到的数据保存至指定的文件中（对应<code>filename=myrecording.jfr</code>）。</li> 
</ul> <pre style="position: relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> # Time fixed </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> $ java -XX:StartFlightRecording=delay=5s,duration=20s,filename=myrecording.jfr,settings=profile 
MyApp </div></td> </tr> </tbody> </table></code> <div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 
</div></pre> <blockquote> <p><code>settings=profile</code>指定了 JFR 所收集的事件类型。默认情况下，JFR 将加载配置文件<code>$JDK/lib/jfr/default.jfc</code>，并识别其中所包含的事件类型。当使用了<code>settings=profile</code>配置时，JFR 
将加载配置文件<code>$JDK/lib/jfr/profile.jfc</code>。该配置文件所包含的事件类型要多于默认的<code>default.jfc</code>，因此性能开销也要大一些（约为 
2%）。</p> <p><code>default.jfc</code>以及<code>profile.jfc</code>均为 XML 文件。后面我会介绍如何利用 JMC 来进行修改。</p> 
</blockquote> <ul> <li>在下面这条命令中，JFR 将在 Java 虚拟机启动之后持续收集数据，直至进程退出。在进程退出时（对应<code>dumponexit=true</code>），JFR 
会将收集得到的数据保存至指定的文件中。</li> </ul> <pre style="position: relative;"><code> <table class="hljs-ln"> 
<tbody> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> # Continuous, dump on exit </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> $ java -XX:StartFlightRecording=dumponexit=true,filename=myrecording.jfr 
MyApp </div></td> </tr> </tbody> </table></code> <div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 
</div></pre> <ul> <li>在下面这条命令中，JFR 将在 Java 虚拟机启动之后持续收集数据，直至进程退出。该命令不会主动保存 JFR 收集得到的数据。</li> 
</ul> <pre style="position: relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> # Continuous, dump on demand </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> $ java -XX:StartFlightRecording=maxage=10m,maxsize=100m,name=SomeLabel 
MyApp </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" 
data-line-number="3"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> Started 
recording 1. </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" 
data-line-number="4"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> Use jcmd 38502 JFR.dump name=SomeLabel 
filename=FILEPATH to copy recording data to file. </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> ... </div></td> </tr> </tbody> </table></code> <div class="richcontent-pre-copy"> 
<span class="iconfont"></span>复制代码 </div></pre> <p>由于 JFR 将持续收集数据，如果不加以限制，那么 JFR 可能会填满硬盘的所有空间。因此，我们有必要对这种模式下所收集的数据进行限制。</p> 
<p>在这条命令中，<code>maxage=10m</code>指的是仅保留 10 分钟以内的事件，<code>maxsize=100m</code>指的是仅保留 100MB 以内的事件。一旦所收集的事件达到其中任意一个限制，JFR 
便会开始清除不合规格的事件。</p> <p>然而，为了保持较小的性能开销，JFR 并不会频繁地校验这两个限制。因此，在实践过程中你往往会发现指定文件的大小超出限制，或者文件中所存储事件的时间超出限制。具体解释请参考<a 
href="https://community.oracle.com/thread/3514679">这篇帖子</a>。</p> <p>前面提到，该命令不会主动保存 JFR 收集得到的数据。用户需要运行<code>jcmd 
&lt;PID&gt; JFR.dump</code>命令方能保存。</p> <p>这便是 JFR 的第二种启用方式，即通过<code>jcmd</code>来让 JFR 开始收集数据、停止收集数据，或者保存所收集的数据，对应的子命令分别为<code>JFR.start</code>，<code>JFR.stop</code>，以及<code>JFR.dump</code>。</p> 
<p><code>JFR.start</code>子命令所接收的配置及格式和<code>-XX:StartFlightRecording=</code>参数的类似。这些配置包括<code>delay</code>、<code>duration</code>、<code>settings</code>、<code>maxage</code>、<code>maxsize</code>以及<code>name</code>。前几个参数我们都已经介绍过了，最后一个参数<code>name</code>就是一个标签，当同一进程中存在多个 
JFR 数据收集操作时，我们可以通过该标签来辨别。</p> <p>在启动目标进程时，我们不再添加<code>-XX:StartFlightRecording=</code>参数。在目标进程运行过程中，我们可以运行<code>JFR.start</code>子命令远程启用目标进程的 
JFR 功能。具体用法如下所示：</p> <pre style="position: relative;"><code> <table class="hljs-ln"> <tbody> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> $ jcmd &lt;PID&gt; JFR.start settings=profile 
maxage=10m maxsize=150m name=SomeLabel </div></td> </tr> </tbody> </table></code> <div class="richcontent-pre-copy"> 
<span class="iconfont"></span>复制代码 </div></pre> <p>上述命令运行过后，目标进程中的 JFR 已经开始收集数据。此时，我们可以通过下述命令来导出已经收集到的数据：</p> 
<pre style="position: relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> $ jcmd &lt;PID&gt; JFR.dump name=SomeLabel filename=myrecording.jfr 
</div></td> </tr> </tbody> </table></code> <div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 
</div></pre> <p>最后，我们可以通过下述命令关闭目标进程中的 JFR：</p> <pre style="position: relative;"><code> <table 
class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" 
data-line-number="1"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> $ jcmd 
&lt;PID&gt; JFR.stop name=SomeLabel </div></td> </tr> </tbody> </table></code> <div class="richcontent-pre-copy"> 
<span class="iconfont"></span>复制代码 </div></pre> <p>关于<code>JFR.start</code>、<code>JFR.dump</code>和<code>JFR.stop</code>的其他用法，你可以参考<a 
href="https://docs.oracle.com/javacomponents/jmc-5-5/jfr-runtime-guide/comline.htm#JFRRT185">该帮助文档</a>。</p> 
<p>第三种启用 JFR 的方式则是 JMC 中的 JFR 插件。</p> <p><img src="https://static001.geekbang.org/resource/image/39/16/395900f606fd93570196a6dcbac75e16.png" 
alt=""></p> <p>在 JMC GUI 客户端左侧的 JVM 浏览器中，我们可以看到所有正在运行的 Java 程序。当点击右键弹出菜单中的<code>Start Flight 
Recording...</code>时，JMC 便会弹出另一个窗口，用来配置 JFR 的启动参数，如下图所示：</p> <p><img src="https://static001.geekbang.org/resource/image/31/6a/31f86bc1cafc569f51e0364d716cab6a.png" 
alt=""></p> <p>这里的配置参数与前两种启动 JFR 的方式并无二致，同样也包括标签名、收集数据的持续时间、缓存事件的时间及空间限制，以及配置所要监控事件的<code>Event 
settings</code>。<br> （这里对应前两种启动方式的<code>settings=default|profile</code>）</p> <blockquote> <p>JMC 
提供了两个选择：Continuous 和 Profiling，分别对应<code>$JDK/lib/jfr/</code>里的<code>default.jfc</code>和<code>profile.jfc</code>。</p> 
</blockquote> <p>我们可以通过 JMC 的<code>Flight Recording Template Manager</code>导入这些 jfc 文件，并在 GUI 
界面上进行更改。更改完毕后，我们可以导出为新的 jfc 文件，以便在服务器端使用。</p> <p>当收集完成时，JMC 会自动打开所生成的 jfr 文件，并在主界面中列举目标进程在收集数据的这段时间内的潜在问题。例如，<code>Parallel 
Threads</code>一节，便汇报了没有完整利用 CPU 资源的问题。</p> <p><img src="https://static001.geekbang.org/resource/image/5a/7c/5a4302c29947518250e2b697aecc8d7c.png" 
alt=""></p> <p>客户端的左边则罗列了 Java 虚拟机的各个子系统。JMC 将根据 JFR 所收集到的每个子系统的事件来进行可视化，转换成图或者表。</p> <p><img 
src="https://static001.geekbang.org/resource/image/db/ff/dbc36a8713af058c79df2878379276ff.png" 
alt=""></p> <p>这里我简单地介绍其中两个。</p> <p>垃圾回收子系统所对应的选项卡展示了 JFR 所收集到的 GC 事件，以及基于这些 GC 事件的数据生成的堆已用空间的分布图，Metaspace 
大小的分布图，最长暂停以及总暂停的直方分布图。</p> <p><img src="https://static001.geekbang.org/resource/image/56/0c/56f9fb2932ffb63ffa29e95dc779100c.png" 
alt=""></p> <p>即时编译子系统所对应的选项卡则展示了方法编译时间的直方图，以及按编译时间排序的编译任务表。</p> <p>后者可能出现同方法名同方法描述符的编译任务。其原因主要有两个，一是不同编译层次的即时编译，如 
3 层的 C1 编译以及 4 层的 C2 编译。二是去优化后的重新编译。</p> <p><img src="https://static001.geekbang.org/resource/image/6e/c8/6e7e41a6f8945a2b65d67c18ea5293c8.png" 
alt=""></p> <p>JMC 的图表总体而言都不难理解。你可以逐个探索，我在这里便不详细展开了。</p> <h2>总结与实践</h2> <p>今天我介绍了两个 GUI 工具：eclipse 
MAT 以及 JMC。</p> <p>eclipse MAT 可用于分析由<code>jmap</code>命令导出的 Java 堆快照。它包括两个相对比较重要的视图，分别为直方图和支配树。直方图展示了各个类的实例数目以及这些实例的 
Shallow heap 或 Retained heap 的总和。支配树则展示了快照中每个对象所直接支配的对象。</p> <p>Java Mission Control 是 Java 
虚拟机平台上的性能监控工具。Java Flight Recorder 是 JMC 的其中一个组件，能够以极低的性能开销收集 Java 虚拟机的性能数据。</p> <p>JFR 的启用方式有三种，分别为在命令行中使用<code>-XX:StartFlightRecording=</code>参数，使用<code>jcmd</code>的<code>JFR.*</code>子命令，以及 
JMC 的 JFR 插件。JMC 能够加载 JFR 的输出结果，并且生成各种信息丰富的图表。</p> <hr> <p>今天的实践环节，请你试用 JMC 中的 MBean Server 
功能，并通过 JMC 的帮助文档（<code>Help-&gt;Java Mission Control Help</code>），以及<a href="https://docs.oracle.com/javase/tutorial/jmx/mbeans/index.html">该教程</a>来了解该功能的具体含义。</p> 
<p><img src="https://static001.geekbang.org/resource/image/2a/7f/2a68f0f2b5de35f29b045fe82923ac7f.png" 
alt=""></p> <p>由于篇幅的限制，我就不再介绍<a href="https://visualvm.github.io/index.html">VisualVM</a> 以及<a 
href="https://github.com/AdoptOpenJDK/jitwatch">JITWatch</a> 了。感兴趣的同学可自行下载研究。</p> <p><img src="https://static001.geekbang.org/resource/image/2a/d5/2a62e58cbdf56a5dc40748567d346fd5.jpg" 
alt=""></p>', '', 'book', 0, 'full_html', 'zh-hans', 11, 11) 
 {executed in 6 msec}
2020-11-19 20:08:43.324 INFO  jdbc.sqltiming Line:373 - select nodebodyen0_.entity_id as entity_i1_4_0_, nodebodyen0_.body_value as body_val2_4_0_, 
nodebodyen0_.body_summary as body_sum3_4_0_, nodebodyen0_.bundle as bundle4_4_0_, nodebodyen0_.delta 
as delta5_4_0_, nodebodyen0_.body_format as body_for6_4_0_, nodebodyen0_.langcode as langcode7_4_0_, 
nodebodyen0_.revision_id as revision8_4_0_ from node__body nodebodyen0_ where nodebodyen0_.entity_id=11 
 {executed in 1 msec}
2020-11-19 20:08:43.326 INFO  jdbc.resultsettable Line:610 - 
|----------|-----------|-------------|-------|------|------------|---------|------------|
|entity_id |body_value |body_summary |bundle |delta |body_format |langcode |revision_id |
|----------|-----------|-------------|-------|------|------------|---------|------------|
|----------|-----------|-------------|-------|------|------------|---------|------------|

2020-11-19 20:08:43.336 INFO  jdbc.sqltiming Line:373 - insert into node__body (body_value, body_summary, bundle, delta, body_format, langcode, revision_id, 
entity_id) values ('<p>今天我们来继续了解 Java 虚拟机的监控及诊断工具。</p> <h2>eclipse MAT</h2> <p>在上一篇中，我介绍了<code>jmap</code>工具，它支持导出 
Java 虚拟机堆的二进制快照。eclipse 的<a href="https://www.eclipse.org/mat/">MAT 工具</a>便是其中一个能够解析这类二进制快照的工具。</p> 
<p>MAT 本身也能够获取堆的二进制快照。该功能将借助<code>jps</code>列出当前正在运行的 Java 进程，以供选择并获取快照。由于<code>jps</code>会将自己列入其中，因此你会在列表中发现一个已经结束运行的<code>jps</code>进程。</p> 
<p><img src="https://static001.geekbang.org/resource/image/c9/7e/c9072149fb112312cbc217acc2660c7e.png" 
alt=""></p> <p>MAT 获取二进制快照的方式有三种，一是使用 Attach API，二是新建一个 Java 虚拟机来运行 Attach API，三是使用<code>jmap</code>工具。</p> 
<p>这三种本质上都是在使用 Attach API。不过，在目标进程启用了<code>DisableAttachMechanism</code>参数时，前两者将不在选取列表中显示，后者将在运行时报错。</p> 
<p>当加载完堆快照之后，MAT 的主界面将展示一张饼状图，其中列举占据的 Retained heap 最多的几个对象。</p> <p><img src="https://static001.geekbang.org/resource/image/da/bf/da2e5894d0be535b6daa5084beb33ebf.png" 
alt=""></p> <p>这里讲一下 MAT 计算对象占据内存的<a href="https://help.eclipse.org/mars/topic/org.eclipse.mat.ui.help/concepts/shallowretainedheap.html?cp=46_2_1">两种方式</a>。第一种是 
Shallow heap，指的是对象自身所占据的内存。第二种是 Retained heap，指的是当对象不再被引用时，垃圾回收器所能回收的总内存，包括对象自身所占据的内存，以及仅能够通过该对象引用到的其他对象所占据的内存。上面的饼状图便是基于 
Retained heap 的。</p><!-- [[[read_end]]] --> <p>MAT 包括了两个比较重要的视图，分别是直方图（histogram）和支配树（dominator 
tree）。</p> <p><img src="https://static001.geekbang.org/resource/image/bb/05/bbb59ca4d86c227dac23f30c360c9405.png" 
alt=""></p> <p>MAT 的直方图和<code>jmap</code>的<code>-histo</code>子命令一样，都能够展示各个类的实例数目以及这些实例的 Shallow 
heap 总和。但是，MAT 的直方图还能够计算 Retained heap，并支持基于实例数目或 Retained heap 的排序方式（默认为 Shallow heap）。此外，MAT 
还可以将直方图中的类按照超类、类加载器或者包名分组。</p> <p>当选中某个类时，MAT 界面左上角的 Inspector 窗口将展示该类的 Class 实例的相关信息，如类加载器等。（下图中的<code>ClassLoader 
@ 0x0</code>指的便是启动类加载器。）</p> <p><img src="https://static001.geekbang.org/resource/image/dd/ab/dde7022060fad3945944fb7e4c9926ab.png" 
alt=""></p> <p>支配树的概念源自图论。在一则流图（flow diagram）中，如果从入口节点到 b 节点的所有路径都要经过 a 节点，那么 a 支配（dominate）b。</p> 
<p>在 a 支配 b，且 a 不同于 b 的情况下（即 a 严格支配 b），如果从 a 节点到 b 节点的所有路径中不存在支配 b 的其他节点，那么 a 直接支配（immediate 
dominate）b。这里的支配树指的便是由节点的直接支配节点所组成的树状结构。</p> <p>我们可以将堆中所有的对象看成一张对象图，每个对象是一个图节点，而 GC Roots 则是对象图的入口，对象之间的引用关系则构成了对象图中的有向边。这样一来，我们便能够构造出该对象图所对应的支配树。</p> 
<p>MAT 将按照每个对象 Retained heap 的大小排列该支配树。如下图所示：</p> <p><img src="https://static001.geekbang.org/resource/image/0d/a6/0d4ea7f00d500db8a978ff0183a840a6.png" 
alt=""></p> <p>根据 Retained heap 的定义，只要能够回收上图右侧的表中的第一个对象，那么垃圾回收器便能够释放出 13.6MB 内存。</p> <p>需要注意的是，对象的引用型字段未必对应支配树中的父子节点关系。假设对象 
a 拥有两个引用型字段，分别指向 b 和 c。而 b 和 c 各自拥有一个引用型字段，但都指向 d。如果没有其他引用指向 b、c 或 d，那么 a 直接支配 b、c 和 d，而 b（或 
c）和 d 之间不存在支配关系。</p> <p>当在支配树视图中选中某一对象时，我们还可以通过 Path To GC Roots 功能，反向列出该对象到 GC Roots 的引用路径。如下图所示：</p> 
<p><img src="https://static001.geekbang.org/resource/image/e0/e7/e04d55d955832bf681aba16dcffc2ee7.png" 
alt=""></p> <p>MAT 还将自动匹配内存泄漏中的常见模式，并汇报潜在的内存泄漏问题。具体可参考该<a href="https://help.eclipse.org/mars/topic/org.eclipse.mat.ui.help/tasks/runningleaksuspectreport.html?cp=46_3_1">帮助文档</a>以及<a 
href="http://memoryanalyzer.blogspot.com/2008/05/automated-heap-dump-analysis-finding.html">这篇博客</a>。</p> 
<h2>Java Mission Control</h2> <blockquote> <p>注意：自 Java 11 开始，本节介绍的 JFR 已经开源。但在之前的 Java 版本，JFR 
属于 Commercial Feature，需要通过 Java 虚拟机参数<code>-XX:+UnlockCommercialFeatures</code>开启。</p> <p>我个人不清楚也不能回答关于 
Java 11 之前的版本是否仍需要商务许可（Commercial License）的问题。请另行咨询后再使用，或者直接使用 Java 11。</p> <p><a href="http://jdk.java.net/jmc/">Java 
Mission Control</a>（JMC）是 Java 虚拟机平台上的性能监控工具。它包含一个 GUI 客户端，以及众多用来收集 Java 虚拟机性能数据的插件，如 JMX Console（能够访问用来存放虚拟机各个子系统运行数据的<a 
href="https://en.wikipedia.org/wiki/Java_Management_Extensions#Managed_beans">MXBeans</a>），以及虚拟机内置的高效 
profiling 工具 Java Flight Recorder（JFR）。</p> </blockquote> <p>JFR 的性能开销很小，在默认配置下平均低于 1%。与其他工具相比，JFR 
能够直接访问虚拟机内的数据，并且不会影响虚拟机的优化。因此，它非常适用于生产环境下满负荷运行的 Java 程序。</p> <p>当启用时，JFR 将记录运行过程中发生的一系列事件。其中包括 
Java 层面的事件，如线程事件、锁事件，以及 Java 虚拟机内部的事件，如新建对象、垃圾回收和即时编译事件。</p> <p>按照发生时机以及持续时间来划分，JFR 的事件共有四种类型，它们分别为以下四种。</p> 
<ol> <li>瞬时事件（Instant Event），用户关心的是它们发生与否，例如异常、线程启动事件。</li> <li>持续事件（Duration Event），用户关心的是它们的持续时间，例如垃圾回收事件。</li> 
<li>计时事件（Timed Event），是时长超出指定阈值的持续事件。</li> <li>取样事件（Sample Event），是周期性取样的事件。<br> 取样事件的其中一个常见例子便是方法抽样（Method 
Sampling），即每隔一段时间统计各个线程的栈轨迹。如果在这些抽样取得的栈轨迹中存在一个反复出现的方法，那么我们可以推测该方法是热点方法。</li> </ol> <p>JFR 的取样事件要比其他工具更加精确。以方法抽样为例，其他工具通常基于 
JVMTI（<a href="https://docs.oracle.com/en/java/javase/11/docs/specs/jvmti.html">Java Virtual 
Machine Tool Interface</a>）的<code>GetAllStackTraces</code> API。该 API 依赖于安全点机制，其获得的栈轨迹总是在安全点上，由此得出的结论未必精确。JFR 
则不然，它不依赖于安全点机制，因此其结果相对来说更加精确。</p> <p>JFR 的启用方式主要有三种。</p> <p>第一种是在运行目标 Java 程序时添加<code>-XX:StartFlightRecording=</code>参数。关于该参数的配置详情，你可以参考<a 
href="https://docs.oracle.com/en/java/javase/11/tools/java.html">该帮助文档</a>（请在页面中搜索<code>StartFlightRecording</code>）。</p> 
<p>下面我列举三种常见的配置方式。</p> <ul> <li>在下面这条命令中，JFR 将会在 Java 虚拟机启动 5s 后（对应<code>delay=5s</code>）收集数据，持续 
20s（对应<code>duration=20s</code>）。当收集完毕后，JFR 会将收集得到的数据保存至指定的文件中（对应<code>filename=myrecording.jfr</code>）。</li> 
</ul> <pre style="position: relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> # Time fixed </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> $ java -XX:StartFlightRecording=delay=5s,duration=20s,filename=myrecording.jfr,settings=profile 
MyApp </div></td> </tr> </tbody> </table></code> <div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 
</div></pre> <blockquote> <p><code>settings=profile</code>指定了 JFR 所收集的事件类型。默认情况下，JFR 将加载配置文件<code>$JDK/lib/jfr/default.jfc</code>，并识别其中所包含的事件类型。当使用了<code>settings=profile</code>配置时，JFR 
将加载配置文件<code>$JDK/lib/jfr/profile.jfc</code>。该配置文件所包含的事件类型要多于默认的<code>default.jfc</code>，因此性能开销也要大一些（约为 
2%）。</p> <p><code>default.jfc</code>以及<code>profile.jfc</code>均为 XML 文件。后面我会介绍如何利用 JMC 来进行修改。</p> 
</blockquote> <ul> <li>在下面这条命令中，JFR 将在 Java 虚拟机启动之后持续收集数据，直至进程退出。在进程退出时（对应<code>dumponexit=true</code>），JFR 
会将收集得到的数据保存至指定的文件中。</li> </ul> <pre style="position: relative;"><code> <table class="hljs-ln"> 
<tbody> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> # Continuous, dump on exit </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> $ java -XX:StartFlightRecording=dumponexit=true,filename=myrecording.jfr 
MyApp </div></td> </tr> </tbody> </table></code> <div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 
</div></pre> <ul> <li>在下面这条命令中，JFR 将在 Java 虚拟机启动之后持续收集数据，直至进程退出。该命令不会主动保存 JFR 收集得到的数据。</li> 
</ul> <pre style="position: relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> # Continuous, dump on demand </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> $ java -XX:StartFlightRecording=maxage=10m,maxsize=100m,name=SomeLabel 
MyApp </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" 
data-line-number="3"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> Started 
recording 1. </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" 
data-line-number="4"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> Use jcmd 38502 JFR.dump name=SomeLabel 
filename=FILEPATH to copy recording data to file. </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> ... </div></td> </tr> </tbody> </table></code> <div class="richcontent-pre-copy"> 
<span class="iconfont"></span>复制代码 </div></pre> <p>由于 JFR 将持续收集数据，如果不加以限制，那么 JFR 可能会填满硬盘的所有空间。因此，我们有必要对这种模式下所收集的数据进行限制。</p> 
<p>在这条命令中，<code>maxage=10m</code>指的是仅保留 10 分钟以内的事件，<code>maxsize=100m</code>指的是仅保留 100MB 以内的事件。一旦所收集的事件达到其中任意一个限制，JFR 
便会开始清除不合规格的事件。</p> <p>然而，为了保持较小的性能开销，JFR 并不会频繁地校验这两个限制。因此，在实践过程中你往往会发现指定文件的大小超出限制，或者文件中所存储事件的时间超出限制。具体解释请参考<a 
href="https://community.oracle.com/thread/3514679">这篇帖子</a>。</p> <p>前面提到，该命令不会主动保存 JFR 收集得到的数据。用户需要运行<code>jcmd 
&lt;PID&gt; JFR.dump</code>命令方能保存。</p> <p>这便是 JFR 的第二种启用方式，即通过<code>jcmd</code>来让 JFR 开始收集数据、停止收集数据，或者保存所收集的数据，对应的子命令分别为<code>JFR.start</code>，<code>JFR.stop</code>，以及<code>JFR.dump</code>。</p> 
<p><code>JFR.start</code>子命令所接收的配置及格式和<code>-XX:StartFlightRecording=</code>参数的类似。这些配置包括<code>delay</code>、<code>duration</code>、<code>settings</code>、<code>maxage</code>、<code>maxsize</code>以及<code>name</code>。前几个参数我们都已经介绍过了，最后一个参数<code>name</code>就是一个标签，当同一进程中存在多个 
JFR 数据收集操作时，我们可以通过该标签来辨别。</p> <p>在启动目标进程时，我们不再添加<code>-XX:StartFlightRecording=</code>参数。在目标进程运行过程中，我们可以运行<code>JFR.start</code>子命令远程启用目标进程的 
JFR 功能。具体用法如下所示：</p> <pre style="position: relative;"><code> <table class="hljs-ln"> <tbody> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> $ jcmd &lt;PID&gt; JFR.start settings=profile 
maxage=10m maxsize=150m name=SomeLabel </div></td> </tr> </tbody> </table></code> <div class="richcontent-pre-copy"> 
<span class="iconfont"></span>复制代码 </div></pre> <p>上述命令运行过后，目标进程中的 JFR 已经开始收集数据。此时，我们可以通过下述命令来导出已经收集到的数据：</p> 
<pre style="position: relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> $ jcmd &lt;PID&gt; JFR.dump name=SomeLabel filename=myrecording.jfr 
</div></td> </tr> </tbody> </table></code> <div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 
</div></pre> <p>最后，我们可以通过下述命令关闭目标进程中的 JFR：</p> <pre style="position: relative;"><code> <table 
class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" 
data-line-number="1"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> $ jcmd 
&lt;PID&gt; JFR.stop name=SomeLabel </div></td> </tr> </tbody> </table></code> <div class="richcontent-pre-copy"> 
<span class="iconfont"></span>复制代码 </div></pre> <p>关于<code>JFR.start</code>、<code>JFR.dump</code>和<code>JFR.stop</code>的其他用法，你可以参考<a 
href="https://docs.oracle.com/javacomponents/jmc-5-5/jfr-runtime-guide/comline.htm#JFRRT185">该帮助文档</a>。</p> 
<p>第三种启用 JFR 的方式则是 JMC 中的 JFR 插件。</p> <p><img src="https://static001.geekbang.org/resource/image/39/16/395900f606fd93570196a6dcbac75e16.png" 
alt=""></p> <p>在 JMC GUI 客户端左侧的 JVM 浏览器中，我们可以看到所有正在运行的 Java 程序。当点击右键弹出菜单中的<code>Start Flight 
Recording...</code>时，JMC 便会弹出另一个窗口，用来配置 JFR 的启动参数，如下图所示：</p> <p><img src="https://static001.geekbang.org/resource/image/31/6a/31f86bc1cafc569f51e0364d716cab6a.png" 
alt=""></p> <p>这里的配置参数与前两种启动 JFR 的方式并无二致，同样也包括标签名、收集数据的持续时间、缓存事件的时间及空间限制，以及配置所要监控事件的<code>Event 
settings</code>。<br> （这里对应前两种启动方式的<code>settings=default|profile</code>）</p> <blockquote> <p>JMC 
提供了两个选择：Continuous 和 Profiling，分别对应<code>$JDK/lib/jfr/</code>里的<code>default.jfc</code>和<code>profile.jfc</code>。</p> 
</blockquote> <p>我们可以通过 JMC 的<code>Flight Recording Template Manager</code>导入这些 jfc 文件，并在 GUI 
界面上进行更改。更改完毕后，我们可以导出为新的 jfc 文件，以便在服务器端使用。</p> <p>当收集完成时，JMC 会自动打开所生成的 jfr 文件，并在主界面中列举目标进程在收集数据的这段时间内的潜在问题。例如，<code>Parallel 
Threads</code>一节，便汇报了没有完整利用 CPU 资源的问题。</p> <p><img src="https://static001.geekbang.org/resource/image/5a/7c/5a4302c29947518250e2b697aecc8d7c.png" 
alt=""></p> <p>客户端的左边则罗列了 Java 虚拟机的各个子系统。JMC 将根据 JFR 所收集到的每个子系统的事件来进行可视化，转换成图或者表。</p> <p><img 
src="https://static001.geekbang.org/resource/image/db/ff/dbc36a8713af058c79df2878379276ff.png" 
alt=""></p> <p>这里我简单地介绍其中两个。</p> <p>垃圾回收子系统所对应的选项卡展示了 JFR 所收集到的 GC 事件，以及基于这些 GC 事件的数据生成的堆已用空间的分布图，Metaspace 
大小的分布图，最长暂停以及总暂停的直方分布图。</p> <p><img src="https://static001.geekbang.org/resource/image/56/0c/56f9fb2932ffb63ffa29e95dc779100c.png" 
alt=""></p> <p>即时编译子系统所对应的选项卡则展示了方法编译时间的直方图，以及按编译时间排序的编译任务表。</p> <p>后者可能出现同方法名同方法描述符的编译任务。其原因主要有两个，一是不同编译层次的即时编译，如 
3 层的 C1 编译以及 4 层的 C2 编译。二是去优化后的重新编译。</p> <p><img src="https://static001.geekbang.org/resource/image/6e/c8/6e7e41a6f8945a2b65d67c18ea5293c8.png" 
alt=""></p> <p>JMC 的图表总体而言都不难理解。你可以逐个探索，我在这里便不详细展开了。</p> <h2>总结与实践</h2> <p>今天我介绍了两个 GUI 工具：eclipse 
MAT 以及 JMC。</p> <p>eclipse MAT 可用于分析由<code>jmap</code>命令导出的 Java 堆快照。它包括两个相对比较重要的视图，分别为直方图和支配树。直方图展示了各个类的实例数目以及这些实例的 
Shallow heap 或 Retained heap 的总和。支配树则展示了快照中每个对象所直接支配的对象。</p> <p>Java Mission Control 是 Java 
虚拟机平台上的性能监控工具。Java Flight Recorder 是 JMC 的其中一个组件，能够以极低的性能开销收集 Java 虚拟机的性能数据。</p> <p>JFR 的启用方式有三种，分别为在命令行中使用<code>-XX:StartFlightRecording=</code>参数，使用<code>jcmd</code>的<code>JFR.*</code>子命令，以及 
JMC 的 JFR 插件。JMC 能够加载 JFR 的输出结果，并且生成各种信息丰富的图表。</p> <hr> <p>今天的实践环节，请你试用 JMC 中的 MBean Server 
功能，并通过 JMC 的帮助文档（<code>Help-&gt;Java Mission Control Help</code>），以及<a href="https://docs.oracle.com/javase/tutorial/jmx/mbeans/index.html">该教程</a>来了解该功能的具体含义。</p> 
<p><img src="https://static001.geekbang.org/resource/image/2a/7f/2a68f0f2b5de35f29b045fe82923ac7f.png" 
alt=""></p> <p>由于篇幅的限制，我就不再介绍<a href="https://visualvm.github.io/index.html">VisualVM</a> 以及<a 
href="https://github.com/AdoptOpenJDK/jitwatch">JITWatch</a> 了。感兴趣的同学可自行下载研究。</p> <p><img src="https://static001.geekbang.org/resource/image/2a/d5/2a62e58cbdf56a5dc40748567d346fd5.jpg" 
alt=""></p>', '', 'book', 0, 'full_html', 'zh-hans', 11, 11) 
 {executed in 6 msec}
2020-11-19 20:08:43.347 INFO  jdbc.sqltiming Line:373 - select nodefiledd0_.nid as nid1_10_, nodefiledd0_.changed as changed2_10_, nodefiledd0_.created 
as created3_10_, nodefiledd0_.default_langcode as default_4_10_, nodefiledd0_.langcode as langcode5_10_, 
nodefiledd0_.promote as promote6_10_, nodefiledd0_.revision_translation_affected as revision7_10_, 
nodefiledd0_.status as status8_10_, nodefiledd0_.sticky as sticky9_10_, nodefiledd0_.title 
as title10_10_, nodefiledd0_.type as type11_10_, nodefiledd0_.uid as uid12_10_, nodefiledd0_.vid 
as vid13_10_ from node_field_data nodefiledd0_ where nodefiledd0_.nid=11 
 {executed in 1 msec}
2020-11-19 20:08:43.349 INFO  jdbc.resultsettable Line:610 - 
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|-----|----|----|
|nid |changed |created |default_langcode |langcode |promote |revision_translation_affected |status |sticky |title |type |uid |vid |
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|-----|----|----|
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|-----|----|----|

2020-11-19 20:08:43.352 INFO  jdbc.sqltiming Line:373 - select nodefieldr0_.nid as nid1_11_0_, nodefieldr0_.changed as changed2_11_0_, nodefieldr0_.created 
as created3_11_0_, nodefieldr0_.default_langcode as default_4_11_0_, nodefieldr0_.langcode 
as langcode5_11_0_, nodefieldr0_.promote as promote6_11_0_, nodefieldr0_.revision_translation_affected 
as revision7_11_0_, nodefieldr0_.status as status8_11_0_, nodefieldr0_.sticky as sticky9_11_0_, 
nodefieldr0_.title as title10_11_0_, nodefieldr0_.uid as uid11_11_0_, nodefieldr0_.vid as vid12_11_0_ 
from node_field_revision nodefieldr0_ where nodefieldr0_.nid=11 
 {executed in 0 msec}
2020-11-19 20:08:43.355 INFO  jdbc.resultsettable Line:610 - 
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|----|----|
|nid |changed |created |default_langcode |langcode |promote |revision_translation_affected |status |sticky |title |uid |vid |
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|----|----|
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|----|----|

2020-11-19 20:08:43.360 INFO  jdbc.sqltiming Line:373 - insert into node_field_revision (changed, created, default_langcode, langcode, promote, revision_translation_affected, 
status, sticky, title, uid, vid, nid) values (1605787723, 1605787723, 1, 'zh-hans', 0, 1, 1, 
0, '31丨Java虚拟机的监控及诊断工具（GUI篇）', 1, 11, 11) 
 {executed in 1 msec}
2020-11-19 20:08:43.367 INFO  jdbc.sqltiming Line:373 - select nodefiledd0_.nid as nid1_10_0_, nodefiledd0_.changed as changed2_10_0_, nodefiledd0_.created 
as created3_10_0_, nodefiledd0_.default_langcode as default_4_10_0_, nodefiledd0_.langcode 
as langcode5_10_0_, nodefiledd0_.promote as promote6_10_0_, nodefiledd0_.revision_translation_affected 
as revision7_10_0_, nodefiledd0_.status as status8_10_0_, nodefiledd0_.sticky as sticky9_10_0_, 
nodefiledd0_.title as title10_10_0_, nodefiledd0_.type as type11_10_0_, nodefiledd0_.uid as 
uid12_10_0_, nodefiledd0_.vid as vid13_10_0_ from node_field_data nodefiledd0_ where nodefiledd0_.nid=11 
 {executed in 1 msec}
2020-11-19 20:08:43.370 INFO  jdbc.resultsettable Line:610 - 
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|-----|----|----|
|nid |changed |created |default_langcode |langcode |promote |revision_translation_affected |status |sticky |title |type |uid |vid |
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|-----|----|----|
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|-----|----|----|

2020-11-19 20:08:43.375 INFO  jdbc.sqltiming Line:373 - insert into node_field_data (changed, created, default_langcode, langcode, promote, revision_translation_affected, 
status, sticky, title, type, uid, vid, nid) values (1605787723, 1605787723, 1, 'zh-hans', 0, 
1, 1, 0, '31丨Java虚拟机的监控及诊断工具（GUI篇）', 'book', 1, 11, 11) 
 {executed in 1 msec}
2020-11-19 20:08:43.383 INFO  jdbc.sqltiming Line:373 - select bookfieldm0_.entity_id as entity_i1_8_, bookfieldm0_.bundle as bundle2_8_, bookfieldm0_.delta 
as delta3_8_, bookfieldm0_.langcode as langcode4_8_, bookfieldm0_.field_media_value as field_me5_8_, 
bookfieldm0_.revision_id as revision6_8_ from node__field_media bookfieldm0_ where bookfieldm0_.entity_id=11 
 {executed in 1 msec}
2020-11-19 20:08:43.385 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------------|------------|
|entity_id |bundle |delta |langcode |field_media_value |revision_id |
|----------|-------|------|---------|------------------|------------|
|----------|-------|------|---------|------------------|------------|

2020-11-19 20:08:43.395 INFO  jdbc.sqltiming Line:373 - select bookfieldm0_.entity_id as entity_i1_8_0_, bookfieldm0_.bundle as bundle2_8_0_, bookfieldm0_.delta 
as delta3_8_0_, bookfieldm0_.langcode as langcode4_8_0_, bookfieldm0_.field_media_value as 
field_me5_8_0_, bookfieldm0_.revision_id as revision6_8_0_ from node__field_media bookfieldm0_ 
where bookfieldm0_.entity_id=11 
 {executed in 3 msec}
2020-11-19 20:08:43.397 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------------|------------|
|entity_id |bundle |delta |langcode |field_media_value |revision_id |
|----------|-------|------|---------|------------------|------------|
|----------|-------|------|---------|------------------|------------|

2020-11-19 20:08:43.402 INFO  jdbc.sqltiming Line:373 - insert into node__field_media (bundle, delta, langcode, field_media_value, revision_id, entity_id) 
values ('book', 0, 'zh-hans', 'https://qdall01.baidupcs.com/file/093e396423e5ea88310e9ebda07f737a?bkt=en-1df98aeb722e81f554d013409c7ad2311a5738bd3402630b021769025eda55949c343229fbc0fe54&fid=3757516097-778750-935237851304538&time=1605787721&sign=FDTAXUGERLQlBHSKfWqir-DCb740ccc5511e5e8fedcff06b081203-LQO%2BKCJ7MV3T7E6ZZqNdz87M8PA%3D&to=92&size=6439567&sta_dx=6439567&sta_cs=4347&sta_ft=mp3&sta_ct=7&sta_mt=0&fm2=MH%2CQingdao%2CAnywhere%2C%2Cshanghai%2Ccnc&ctime=1567182976&mtime=1605787492&resv0=-1&resv1=0&resv2=rlim&resv3=2&resv4=6439567&vuk=3757516097&iv=0&htype=&randtype=em&newver=1&newfm=1&secfm=1&flow_ver=3&pkey=en-21af6b90c2f2389b0c4e7086fcd4f0b5a0137ef57ec221c955c17b248f96281b507558f7cbf265b4&sl=76480590&expires=8h&rt=pr&r=443308252&mlogid=7510749276293279592&vbdid=64799653&fin=31%E4%B8%A8Java%E8%99%9A%E6%8B%9F%E6%9C%BA%E7%9A%84%E7%9B%91%E6%8E%A7%E5%8F%8A%E8%AF%8A%E6%96%AD%E5%B7%A5%E5%85%B7%EF%BC%88GUI%E7%AF%87%EF%BC%89.mp3&bflag=92,34-92&rtype=1&dp-logid=7510749276293279592&dp-callid=0.1.1&hps=1&tsl=80&csl=80&fsl=-1&csign=yVzLQPCt4DblfMLqd2BCjd2RnqQ%3D&so=0&ut=6&uter=0&serv=0&uc=1458616558&ti=648eaef5c3fa81d1c70fe19c5b3aedabdd416d5c1f13f87b&hflag=30&adg=c_0f3c8fb981bae1fdae375754a6f1d609&reqlabel=778750_l_eeb31e180410b8be0e62f686c2b42c5d_-1_43d73532db4f9890a29565ef474ca519&ibp=1&by=themis&filename=31%E4%B8%A8Java%E8%99%9A%E6%8B%9F%E6%9C%BA%E7%9A%84%E7%9B%91%E6%8E%A7%E5%8F%8A%E8%AF%8A%E6%96%AD%E5%B7%A5%E5%85%B7%EF%BC%88GUI%E7%AF%87%EF%BC%89.mp3', 
11, 11) 
 {executed in 1 msec}
2020-11-19 20:08:43.416 INFO  jdbc.sqltiming Line:373 - select nodefieldm0_.entity_id as entity_i1_17_0_, nodefieldm0_.bundle as bundle2_17_0_, nodefieldm0_.delta 
as delta3_17_0_, nodefieldm0_.langcode as langcode4_17_0_, nodefieldm0_.field_media_value as 
field_me5_17_0_, nodefieldm0_.revision_id as revision6_17_0_ from node_revision__field_media 
nodefieldm0_ where nodefieldm0_.entity_id=11 
 {executed in 2 msec}
2020-11-19 20:08:43.417 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------------|------------|
|entity_id |bundle |delta |langcode |field_media_value |revision_id |
|----------|-------|------|---------|------------------|------------|
|----------|-------|------|---------|------------------|------------|

2020-11-19 20:08:43.424 INFO  jdbc.sqltiming Line:373 - insert into node_revision__field_media (bundle, delta, langcode, field_media_value, revision_id, 
entity_id) values ('book', 0, 'zh-hans', 'https://qdall01.baidupcs.com/file/093e396423e5ea88310e9ebda07f737a?bkt=en-1df98aeb722e81f554d013409c7ad2311a5738bd3402630b021769025eda55949c343229fbc0fe54&fid=3757516097-778750-935237851304538&time=1605787721&sign=FDTAXUGERLQlBHSKfWqir-DCb740ccc5511e5e8fedcff06b081203-LQO%2BKCJ7MV3T7E6ZZqNdz87M8PA%3D&to=92&size=6439567&sta_dx=6439567&sta_cs=4347&sta_ft=mp3&sta_ct=7&sta_mt=0&fm2=MH%2CQingdao%2CAnywhere%2C%2Cshanghai%2Ccnc&ctime=1567182976&mtime=1605787492&resv0=-1&resv1=0&resv2=rlim&resv3=2&resv4=6439567&vuk=3757516097&iv=0&htype=&randtype=em&newver=1&newfm=1&secfm=1&flow_ver=3&pkey=en-21af6b90c2f2389b0c4e7086fcd4f0b5a0137ef57ec221c955c17b248f96281b507558f7cbf265b4&sl=76480590&expires=8h&rt=pr&r=443308252&mlogid=7510749276293279592&vbdid=64799653&fin=31%E4%B8%A8Java%E8%99%9A%E6%8B%9F%E6%9C%BA%E7%9A%84%E7%9B%91%E6%8E%A7%E5%8F%8A%E8%AF%8A%E6%96%AD%E5%B7%A5%E5%85%B7%EF%BC%88GUI%E7%AF%87%EF%BC%89.mp3&bflag=92,34-92&rtype=1&dp-logid=7510749276293279592&dp-callid=0.1.1&hps=1&tsl=80&csl=80&fsl=-1&csign=yVzLQPCt4DblfMLqd2BCjd2RnqQ%3D&so=0&ut=6&uter=0&serv=0&uc=1458616558&ti=648eaef5c3fa81d1c70fe19c5b3aedabdd416d5c1f13f87b&hflag=30&adg=c_0f3c8fb981bae1fdae375754a6f1d609&reqlabel=778750_l_eeb31e180410b8be0e62f686c2b42c5d_-1_43d73532db4f9890a29565ef474ca519&ibp=1&by=themis&filename=31%E4%B8%A8Java%E8%99%9A%E6%8B%9F%E6%9C%BA%E7%9A%84%E7%9B%91%E6%8E%A7%E5%8F%8A%E8%AF%8A%E6%96%AD%E5%B7%A5%E5%85%B7%EF%BC%88GUI%E7%AF%87%EF%BC%89.mp3', 
11, 11) 
 {executed in 1 msec}
2020-11-19 20:08:43.432 INFO  jdbc.sqltiming Line:373 - select bookfieldc0_.entity_id as entity_i1_5_, bookfieldc0_.bundle as bundle2_5_, bookfieldc0_.field_comment_value 
as field_co3_5_, bookfieldc0_.delta as delta4_5_, bookfieldc0_.field_comment_format as field_co5_5_, 
bookfieldc0_.langcode as langcode6_5_, bookfieldc0_.revision_id as revision7_5_ from node__field_comment 
bookfieldc0_ where bookfieldc0_.entity_id=11 
 {executed in 2 msec}
2020-11-19 20:08:43.434 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|--------------------|------|---------------------|---------|------------|
|entity_id |bundle |field_comment_value |delta |field_comment_format |langcode |revision_id |
|----------|-------|--------------------|------|---------------------|---------|------------|
|----------|-------|--------------------|------|---------------------|---------|------------|

2020-11-19 20:08:43.439 INFO  jdbc.sqltiming Line:373 - select bookfieldc0_.entity_id as entity_i1_5_0_, bookfieldc0_.bundle as bundle2_5_0_, bookfieldc0_.field_comment_value 
as field_co3_5_0_, bookfieldc0_.delta as delta4_5_0_, bookfieldc0_.field_comment_format as 
field_co5_5_0_, bookfieldc0_.langcode as langcode6_5_0_, bookfieldc0_.revision_id as revision7_5_0_ 
from node__field_comment bookfieldc0_ where bookfieldc0_.entity_id=11 
 {executed in 2 msec}
2020-11-19 20:08:43.441 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|--------------------|------|---------------------|---------|------------|
|entity_id |bundle |field_comment_value |delta |field_comment_format |langcode |revision_id |
|----------|-------|--------------------|------|---------------------|---------|------------|
|----------|-------|--------------------|------|---------------------|---------|------------|

2020-11-19 20:08:43.451 INFO  jdbc.sqltiming Line:373 - insert into node__field_comment (bundle, field_comment_value, delta, field_comment_format, 
langcode, revision_id, entity_id) values ('book', '<li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/12/d4/c4/be9f44bb.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>阿武</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2018-10-01 </div> </div> <div class="_2eMTs2JE_0"> 
<div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class="">3</span> </div> <!----> 
<!----> </div> </div> <div class="_3M6kV3zb_0"> 国庆也推送，大写的服。👍👍 </div> <div class="_2r3UB1GX_0"> 
<span>展开</span><i class="iconfont"></i> </div> <!----> </div></li> <li class="reJj6Thl_0"><img 
src="https://static001.geekbang.org/account/avatar/00/10/93/43/0e84492d.jpg" class="_2273kGdT_0"> 
<div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> <span>Maxwell</span> 
<!----> </div> <div class="_1H1Z49Dr_0"> 2018-12-21 </div> </div> <div class="_2eMTs2JE_0"> 
<div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class="">2</span> </div> <!----> 
<!----> </div> </div> <div class="_3M6kV3zb_0 _3D2NkqD6_0"> 能否分享下实际工作中发生内存泄露，使用MAT分析和定位的案例呢？ 
</div> <!----> <!----> </div></li> <li class="reJj6Thl_0"><img src="http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIKVicSvNf6OFvv4m3ibfsYCIUxic41kODPa9cuGUJjPcBtryLBDljalIVUiaJKlkGEJtOMZ03XSFlx1w/132" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>fuyu</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2018-10-01 </div> </div> <div class="_2eMTs2JE_0"> 
<div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class="">2</span> </div> <!----> 
<!----> </div> </div> <div class="_3M6kV3zb_0"> 要是能举几个例子结合工具排查就更好了。 </div> <div class="_2r3UB1GX_0"> 
<span>展开</span><i class="iconfont"></i> </div> <!----> </div></li> <li class="reJj6Thl_0"><img 
src="https://static001.geekbang.org/account/avatar/00/0f/67/f4/9a1feb59.jpg" class="_2273kGdT_0"> 
<div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> <span>godtrue</span> 
<!----> </div> <div class="_1H1Z49Dr_0"> 2018-10-06 </div> </div> <div class="_2eMTs2JE_0"> 
<div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class="">1</span> </div> <!----> 
<!----> </div> </div> <div class="_3M6kV3zb_0"> JVM GUI监控和检测工具 <br>1:MAT <br>2:JMC <br>这两个没怎么用过，回头下载、安装、使用下，国庆回家了，雨迪老师还在匀速的前进，是不是课程是提前编写好，录制好，然后定时放出？无论怎么非常感谢，跟着老师确实学习了不少东西，最后两天补上拉下的课程。 
</div> <div class="_2r3UB1GX_0"> <span>展开</span><i class="iconfont"></i> </div> <div class="_2xNIY4NG_0"> 
<p class="_33BLbmw4_0">作者回复: 提前一周写好的。极客的小编辛苦些，需要加班较稿。</p> </div> </div></li> <li class="reJj6Thl_0"><img 
src="https://static001.geekbang.org/account/avatar/00/0f/49/a5/e4c1c2d4.jpg" class="_2273kGdT_0"> 
<div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> <span>qpm</span> 
<!----> </div> <div class="_1H1Z49Dr_0"> 2018-10-02 </div> </div> <div class="_2eMTs2JE_0"> 
<div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class="">1</span> </div> <!----> 
<!----> </div> </div> <div class="_3M6kV3zb_0 _3D2NkqD6_0"> MAT是一个非常有用的工具，已经用它成功排查过内存泄露的问题。 
</div> <!----> <!----> </div></li> <li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/12/21/c7/966b6b85.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>遇见未来</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2018-10-26 </div> </div> <div class="_2eMTs2JE_0"> 
<div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class=""></span> </div> <!----> <!----> 
</div> </div> <div class="_3M6kV3zb_0 _3D2NkqD6_0"> 老师您好，openjdk可以用JFR嘛，配置了好久没成功，如果不能有没有类似的工具推荐，谢谢😁 
</div> <!----> <div class="_2xNIY4NG_0"> <p class="_33BLbmw4_0">作者回复: Java 11开始才进OpenJDK的</p> 
</div> </div></li>', 0, 'full_html', 'zh-hans', 11, 11) 
 {executed in 6 msec}
2020-11-19 20:08:43.463 INFO  jdbc.sqltiming Line:373 - select nodefieldc0_.entity_id as entity_i1_14_0_, nodefieldc0_.bundle as bundle2_14_0_, nodefieldc0_.field_comment_value 
as field_co3_14_0_, nodefieldc0_.delta as delta4_14_0_, nodefieldc0_.field_comment_format as 
field_co5_14_0_, nodefieldc0_.langcode as langcode6_14_0_, nodefieldc0_.revision_id as revision7_14_0_ 
from node_revision__field_comment nodefieldc0_ where nodefieldc0_.entity_id=11 
 {executed in 1 msec}
2020-11-19 20:08:43.465 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|--------------------|------|---------------------|---------|------------|
|entity_id |bundle |field_comment_value |delta |field_comment_format |langcode |revision_id |
|----------|-------|--------------------|------|---------------------|---------|------------|
|----------|-------|--------------------|------|---------------------|---------|------------|

2020-11-19 20:08:43.479 INFO  jdbc.sqltiming Line:373 - insert into node_revision__field_comment (bundle, field_comment_value, delta, field_comment_format, 
langcode, revision_id, entity_id) values ('book', '<li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/12/d4/c4/be9f44bb.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>阿武</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2018-10-01 </div> </div> <div class="_2eMTs2JE_0"> 
<div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class="">3</span> </div> <!----> 
<!----> </div> </div> <div class="_3M6kV3zb_0"> 国庆也推送，大写的服。👍👍 </div> <div class="_2r3UB1GX_0"> 
<span>展开</span><i class="iconfont"></i> </div> <!----> </div></li> <li class="reJj6Thl_0"><img 
src="https://static001.geekbang.org/account/avatar/00/10/93/43/0e84492d.jpg" class="_2273kGdT_0"> 
<div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> <span>Maxwell</span> 
<!----> </div> <div class="_1H1Z49Dr_0"> 2018-12-21 </div> </div> <div class="_2eMTs2JE_0"> 
<div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class="">2</span> </div> <!----> 
<!----> </div> </div> <div class="_3M6kV3zb_0 _3D2NkqD6_0"> 能否分享下实际工作中发生内存泄露，使用MAT分析和定位的案例呢？ 
</div> <!----> <!----> </div></li> <li class="reJj6Thl_0"><img src="http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIKVicSvNf6OFvv4m3ibfsYCIUxic41kODPa9cuGUJjPcBtryLBDljalIVUiaJKlkGEJtOMZ03XSFlx1w/132" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>fuyu</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2018-10-01 </div> </div> <div class="_2eMTs2JE_0"> 
<div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class="">2</span> </div> <!----> 
<!----> </div> </div> <div class="_3M6kV3zb_0"> 要是能举几个例子结合工具排查就更好了。 </div> <div class="_2r3UB1GX_0"> 
<span>展开</span><i class="iconfont"></i> </div> <!----> </div></li> <li class="reJj6Thl_0"><img 
src="https://static001.geekbang.org/account/avatar/00/0f/67/f4/9a1feb59.jpg" class="_2273kGdT_0"> 
<div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> <span>godtrue</span> 
<!----> </div> <div class="_1H1Z49Dr_0"> 2018-10-06 </div> </div> <div class="_2eMTs2JE_0"> 
<div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class="">1</span> </div> <!----> 
<!----> </div> </div> <div class="_3M6kV3zb_0"> JVM GUI监控和检测工具 <br>1:MAT <br>2:JMC <br>这两个没怎么用过，回头下载、安装、使用下，国庆回家了，雨迪老师还在匀速的前进，是不是课程是提前编写好，录制好，然后定时放出？无论怎么非常感谢，跟着老师确实学习了不少东西，最后两天补上拉下的课程。 
</div> <div class="_2r3UB1GX_0"> <span>展开</span><i class="iconfont"></i> </div> <div class="_2xNIY4NG_0"> 
<p class="_33BLbmw4_0">作者回复: 提前一周写好的。极客的小编辛苦些，需要加班较稿。</p> </div> </div></li> <li class="reJj6Thl_0"><img 
src="https://static001.geekbang.org/account/avatar/00/0f/49/a5/e4c1c2d4.jpg" class="_2273kGdT_0"> 
<div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> <span>qpm</span> 
<!----> </div> <div class="_1H1Z49Dr_0"> 2018-10-02 </div> </div> <div class="_2eMTs2JE_0"> 
<div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class="">1</span> </div> <!----> 
<!----> </div> </div> <div class="_3M6kV3zb_0 _3D2NkqD6_0"> MAT是一个非常有用的工具，已经用它成功排查过内存泄露的问题。 
</div> <!----> <!----> </div></li> <li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/12/21/c7/966b6b85.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>遇见未来</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2018-10-26 </div> </div> <div class="_2eMTs2JE_0"> 
<div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class=""></span> </div> <!----> <!----> 
</div> </div> <div class="_3M6kV3zb_0 _3D2NkqD6_0"> 老师您好，openjdk可以用JFR嘛，配置了好久没成功，如果不能有没有类似的工具推荐，谢谢😁 
</div> <!----> <div class="_2xNIY4NG_0"> <p class="_33BLbmw4_0">作者回复: Java 11开始才进OpenJDK的</p> 
</div> </div></li>', 0, 'full_html', 'zh-hans', 11, 11) 
 {executed in 7 msec}
2020-11-19 20:08:43.490 INFO  jdbc.sqltiming Line:373 - select bookfieldt0_.entity_id as entity_i1_9_, bookfieldt0_.bundle as bundle2_9_, bookfieldt0_.delta 
as delta3_9_, bookfieldt0_.langcode as langcode4_9_, bookfieldt0_.revision_id as revision5_9_, 
bookfieldt0_.field_thumb_value as field_th6_9_ from node__field_thumb bookfieldt0_ where bookfieldt0_.entity_id=11 
 {executed in 2 msec}
2020-11-19 20:08:43.492 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------|------------------|
|entity_id |bundle |delta |langcode |revision_id |field_thumb_value |
|----------|-------|------|---------|------------|------------------|
|----------|-------|------|---------|------------|------------------|

2020-11-19 20:08:43.496 INFO  jdbc.sqltiming Line:373 - select bookfieldt0_.entity_id as entity_i1_9_0_, bookfieldt0_.bundle as bundle2_9_0_, bookfieldt0_.delta 
as delta3_9_0_, bookfieldt0_.langcode as langcode4_9_0_, bookfieldt0_.revision_id as revision5_9_0_, 
bookfieldt0_.field_thumb_value as field_th6_9_0_ from node__field_thumb bookfieldt0_ where 
bookfieldt0_.entity_id=11 
 {executed in 1 msec}
2020-11-19 20:08:43.498 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------|------------------|
|entity_id |bundle |delta |langcode |revision_id |field_thumb_value |
|----------|-------|------|---------|------------|------------------|
|----------|-------|------|---------|------------|------------------|

2020-11-19 20:08:43.504 INFO  jdbc.sqltiming Line:373 - insert into node__field_thumb (bundle, delta, langcode, revision_id, field_thumb_value, entity_id) 
values ('book', 0, 'zh-hans', 11, 'https://static001.geekbang.org/resource/image/63/9d/6385fadb955342b24fbd9f98011be59d.jpg', 
11) 
 {executed in 1 msec}
2020-11-19 20:08:43.513 INFO  jdbc.sqltiming Line:373 - select nodefieldt0_.entity_id as entity_i1_18_0_, nodefieldt0_.bundle as bundle2_18_0_, nodefieldt0_.delta 
as delta3_18_0_, nodefieldt0_.langcode as langcode4_18_0_, nodefieldt0_.revision_id as revision5_18_0_, 
nodefieldt0_.field_thumb_value as field_th6_18_0_ from node_revision__field_thumb nodefieldt0_ 
where nodefieldt0_.entity_id=11 
 {executed in 2 msec}
2020-11-19 20:08:43.515 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------|------------------|
|entity_id |bundle |delta |langcode |revision_id |field_thumb_value |
|----------|-------|------|---------|------------|------------------|
|----------|-------|------|---------|------------|------------------|

2020-11-19 20:08:43.523 INFO  jdbc.sqltiming Line:373 - insert into node_revision__field_thumb (bundle, delta, langcode, revision_id, field_thumb_value, 
entity_id) values ('book', 0, 'zh-hans', 11, 'https://static001.geekbang.org/resource/image/63/9d/6385fadb955342b24fbd9f98011be59d.jpg', 
11) 
 {executed in 4 msec}
2020-11-19 20:08:43.531 INFO  jdbc.sqltiming Line:373 - select bookfieldf0_.entity_id as entity_i1_6_0_, bookfieldf0_.bundle as bundle2_6_0_, bookfieldf0_.delta 
as delta3_6_0_, bookfieldf0_.field_fenlei_target_id as field_fe4_6_0_, bookfieldf0_.langcode 
as langcode5_6_0_, bookfieldf0_.revision_id as revision6_6_0_ from node__field_fenlei bookfieldf0_ 
where bookfieldf0_.entity_id=11 
 {executed in 1 msec}
2020-11-19 20:08:43.533 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------------|---------|------------|
|entity_id |bundle |delta |field_fenlei_target_id |langcode |revision_id |
|----------|-------|------|-----------------------|---------|------------|
|----------|-------|------|-----------------------|---------|------------|

2020-11-19 20:08:43.538 INFO  jdbc.sqltiming Line:373 - insert into node__field_fenlei (bundle, delta, field_fenlei_target_id, langcode, revision_id, 
entity_id) values ('book', 0, 1, 'zh-hans', 11, 11) 
 {executed in 0 msec}
2020-11-19 20:08:43.545 INFO  jdbc.sqltiming Line:373 - select nodefieldf0_.entity_id as entity_i1_15_0_, nodefieldf0_.bundle as bundle2_15_0_, nodefieldf0_.delta 
as delta3_15_0_, nodefieldf0_.field_fenlei_target_id as field_fe4_15_0_, nodefieldf0_.langcode 
as langcode5_15_0_, nodefieldf0_.revision_id as revision6_15_0_ from node_revision__field_fenlei 
nodefieldf0_ where nodefieldf0_.entity_id=11 
 {executed in 1 msec}
2020-11-19 20:08:43.546 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------------|---------|------------|
|entity_id |bundle |delta |field_fenlei_target_id |langcode |revision_id |
|----------|-------|------|-----------------------|---------|------------|
|----------|-------|------|-----------------------|---------|------------|

2020-11-19 20:08:43.550 INFO  jdbc.sqltiming Line:373 - insert into node_revision__field_fenlei (bundle, delta, field_fenlei_target_id, langcode, revision_id, 
entity_id) values ('book', 0, 1, 'zh-hans', 11, 11) 
 {executed in 0 msec}
2020-11-19 20:08:43.557 INFO  jdbc.sqltiming Line:373 - select bookchecke0_.item_id as item_id1_2_, bookchecke0_.fsid as fsid2_2_, bookchecke0_.got 
as got3_2_, bookchecke0_.name as name4_2_ from book_check bookchecke0_ where bookchecke0_.fsid='914709796431524' 
and bookchecke0_.name='net_content' 
 {executed in 1 msec}
2020-11-19 20:08:43.558 INFO  jdbc.resultsettable Line:610 - 
|--------|-----|----|-----|
|item_id |fsid |got |name |
|--------|-----|----|-----|
|--------|-----|----|-----|

2020-11-19 20:09:07.056 INFO  jdbc.sqltiming Line:373 - select bookchecke0_.item_id as item_id1_2_, bookchecke0_.fsid as fsid2_2_, bookchecke0_.got 
as got3_2_, bookchecke0_.name as name4_2_ from book_check bookchecke0_ where bookchecke0_.fsid='914709796431524' 
and bookchecke0_.name='net_content' 
 {executed in 1 msec}
2020-11-19 20:09:07.058 INFO  jdbc.resultsettable Line:610 - 
|--------|-----|----|-----|
|item_id |fsid |got |name |
|--------|-----|----|-----|
|--------|-----|----|-----|

2020-11-19 20:09:07.061 INFO  jdbc.sqltiming Line:373 - insert into book_check (fsid, got, name) values ('914709796431524', 1, 'net_content') 
 {executed in 0 msec}
2020-11-19 20:09:07.063 INFO  jdbc.sqltiming Line:373 - getGeneratedKeys on query: insert into book_check (fsid, got, name) values ('914709796431524', 
1, 'net_content') 
 {executed in 1 msec}
2020-11-19 20:09:07.064 INFO  jdbc.resultsettable Line:610 - 
|--------------|
|generated_key |
|--------------|
|27            |
|--------------|

2020-11-19 20:09:07.074 INFO  jdbc.sqltiming Line:373 - select bookchecke0_.item_id as item_id1_2_, bookchecke0_.fsid as fsid2_2_, bookchecke0_.got 
as got3_2_, bookchecke0_.name as name4_2_ from book_check bookchecke0_ where bookchecke0_.fsid='914709796431524' 
and bookchecke0_.name='media' 
 {executed in 1 msec}
2020-11-19 20:09:07.076 INFO  jdbc.resultsettable Line:610 - 
|--------|-----|----|-----|
|item_id |fsid |got |name |
|--------|-----|----|-----|
|--------|-----|----|-----|

2020-11-19 20:09:07.520 INFO  jdbc.sqltiming Line:373 - select bookchecke0_.item_id as item_id1_2_, bookchecke0_.fsid as fsid2_2_, bookchecke0_.got 
as got3_2_, bookchecke0_.name as name4_2_ from book_check bookchecke0_ where bookchecke0_.fsid='914709796431524' 
and bookchecke0_.name='media' 
 {executed in 9 msec}
2020-11-19 20:09:07.521 INFO  jdbc.resultsettable Line:610 - 
|--------|-----|----|-----|
|item_id |fsid |got |name |
|--------|-----|----|-----|
|--------|-----|----|-----|

2020-11-19 20:09:07.577 INFO  jdbc.sqltiming Line:373 - insert into book_check (fsid, got, name) values ('914709796431524', 1, 'media') 
 {executed in 1 msec}
2020-11-19 20:09:07.578 INFO  jdbc.sqltiming Line:373 - getGeneratedKeys on query: insert into book_check (fsid, got, name) values ('914709796431524', 
1, 'media') 
 {executed in 0 msec}
2020-11-19 20:09:07.579 INFO  jdbc.resultsettable Line:610 - 
|--------------|
|generated_key |
|--------------|
|28            |
|--------------|

2020-11-19 20:09:07.591 INFO  jdbc.sqltiming Line:373 - select bookfieldf0_.entity_id as entity_i1_7_, bookfieldf0_.bundle as bundle2_7_, bookfieldf0_.delta 
as delta3_7_, bookfieldf0_.field_fsid_value as field_fs4_7_, bookfieldf0_.langcode as langcode5_7_, 
bookfieldf0_.revision_id as revision6_7_ from node__field_fsid bookfieldf0_ where bookfieldf0_.field_fsid_value='914709796431524' 
 {executed in 1 msec}
2020-11-19 20:09:07.592 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------|---------|------------|
|entity_id |bundle |delta |field_fsid_value |langcode |revision_id |
|----------|-------|------|-----------------|---------|------------|
|----------|-------|------|-----------------|---------|------------|

2020-11-19 20:09:07.596 INFO  jdbc.sqltiming Line:373 - insert into node_revision (langcode, nid, revision_default, revision_timestamp, revision_uid) 
values ('zh-hans', 0, 1, 1605787747, 1) 
 {executed in 1 msec}
2020-11-19 20:09:07.597 INFO  jdbc.sqltiming Line:373 - getGeneratedKeys on query: insert into node_revision (langcode, nid, revision_default, revision_timestamp, 
revision_uid) values ('zh-hans', 0, 1, 1605787747, 1) 
 {executed in 0 msec}
2020-11-19 20:09:07.599 INFO  jdbc.resultsettable Line:610 - 
|--------------|
|generated_key |
|--------------|
|12            |
|--------------|

2020-11-19 20:09:07.607 INFO  jdbc.sqltiming Line:373 - insert into node (langcode, type, uuid, vid) values ('zh-hans', 'book', 'f67c9aec-0ac5-45af-bb2e-b4503af01655', 
12) 
 {executed in 0 msec}
2020-11-19 20:09:07.608 INFO  jdbc.sqltiming Line:373 - getGeneratedKeys on query: insert into node (langcode, type, uuid, vid) values ('zh-hans', 
'book', 'f67c9aec-0ac5-45af-bb2e-b4503af01655', 12) 
 {executed in 0 msec}
2020-11-19 20:09:07.610 INFO  jdbc.resultsettable Line:610 - 
|--------------|
|generated_key |
|--------------|
|12            |
|--------------|

2020-11-19 20:09:07.620 INFO  jdbc.sqltiming Line:373 - update node_revision set langcode='zh-hans', nid=12, revision_default=1, revision_timestamp=1605787747, 
revision_uid=1 where vid=12 
 {executed in 1 msec}
2020-11-19 20:09:07.627 INFO  jdbc.sqltiming Line:373 - select bookfieldf0_.entity_id as entity_i1_7_0_, bookfieldf0_.bundle as bundle2_7_0_, bookfieldf0_.delta 
as delta3_7_0_, bookfieldf0_.field_fsid_value as field_fs4_7_0_, bookfieldf0_.langcode as langcode5_7_0_, 
bookfieldf0_.revision_id as revision6_7_0_ from node__field_fsid bookfieldf0_ where bookfieldf0_.entity_id=12 
 {executed in 1 msec}
2020-11-19 20:09:07.628 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------|---------|------------|
|entity_id |bundle |delta |field_fsid_value |langcode |revision_id |
|----------|-------|------|-----------------|---------|------------|
|----------|-------|------|-----------------|---------|------------|

2020-11-19 20:09:07.633 INFO  jdbc.sqltiming Line:373 - insert into node__field_fsid (bundle, delta, field_fsid_value, langcode, revision_id, entity_id) 
values ('book', 0, '914709796431524', 'zh-hans', 12, 12) 
 {executed in 1 msec}
2020-11-19 20:09:07.640 INFO  jdbc.sqltiming Line:373 - select nodefieldf0_.entity_id as entity_i1_16_0_, nodefieldf0_.bundle as bundle2_16_0_, nodefieldf0_.delta 
as delta3_16_0_, nodefieldf0_.field_fsid_value as field_fs4_16_0_, nodefieldf0_.langcode as 
langcode5_16_0_, nodefieldf0_.revision_id as revision6_16_0_ from node_revision__field_fsid 
nodefieldf0_ where nodefieldf0_.entity_id=12 
 {executed in 1 msec}
2020-11-19 20:09:07.641 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------|---------|------------|
|entity_id |bundle |delta |field_fsid_value |langcode |revision_id |
|----------|-------|------|-----------------|---------|------------|
|----------|-------|------|-----------------|---------|------------|

2020-11-19 20:09:07.645 INFO  jdbc.sqltiming Line:373 - insert into node_revision__field_fsid (bundle, delta, field_fsid_value, langcode, revision_id, 
entity_id) values ('book', 0, '914709796431524', 'zh-hans', 12, 12) 
 {executed in 0 msec}
2020-11-19 20:09:07.651 INFO  jdbc.sqltiming Line:373 - select bookentity0_.nid as nid1_1_, bookentity0_.bid as bid2_1_, bookentity0_.depth as depth3_1_, 
bookentity0_.has_children as has_chil4_1_, bookentity0_.p1 as p5_1_, bookentity0_.p2 as p6_1_, 
bookentity0_.p3 as p7_1_, bookentity0_.p4 as p8_1_, bookentity0_.p5 as p9_1_, bookentity0_.pid 
as pid10_1_, bookentity0_.weight as weight11_1_ from book bookentity0_ where bookentity0_.nid=12 
 {executed in 1 msec}
2020-11-19 20:09:07.653 INFO  jdbc.resultsettable Line:610 - 
|----|----|------|-------------|---|---|---|---|---|----|-------|
|nid |bid |depth |has_children |p1 |p2 |p3 |p4 |p5 |pid |weight |
|----|----|------|-------------|---|---|---|---|---|----|-------|
|----|----|------|-------------|---|---|---|---|---|----|-------|

2020-11-19 20:09:07.657 INFO  jdbc.sqltiming Line:373 - select bookentity0_.nid as nid1_1_0_, bookentity0_.bid as bid2_1_0_, bookentity0_.depth as 
depth3_1_0_, bookentity0_.has_children as has_chil4_1_0_, bookentity0_.p1 as p5_1_0_, bookentity0_.p2 
as p6_1_0_, bookentity0_.p3 as p7_1_0_, bookentity0_.p4 as p8_1_0_, bookentity0_.p5 as p9_1_0_, 
bookentity0_.pid as pid10_1_0_, bookentity0_.weight as weight11_1_0_ from book bookentity0_ 
where bookentity0_.nid=12 
 {executed in 1 msec}
2020-11-19 20:09:07.658 INFO  jdbc.resultsettable Line:610 - 
|----|----|------|-------------|---|---|---|---|---|----|-------|
|nid |bid |depth |has_children |p1 |p2 |p3 |p4 |p5 |pid |weight |
|----|----|------|-------------|---|---|---|---|---|----|-------|
|----|----|------|-------------|---|---|---|---|---|----|-------|

2020-11-19 20:09:07.662 INFO  jdbc.sqltiming Line:373 - insert into book (bid, depth, has_children, p1, p2, p3, p4, p5, pid, weight, nid) values (1, 
3, 0, 1, 8, 12, 0, 0, 8, 0, 12) 
 {executed in 0 msec}
2020-11-19 20:09:07.669 INFO  jdbc.sqltiming Line:373 - select nodebodyen0_.entity_id as entity_i1_4_, nodebodyen0_.body_value as body_val2_4_, nodebodyen0_.body_summary 
as body_sum3_4_, nodebodyen0_.bundle as bundle4_4_, nodebodyen0_.delta as delta5_4_, nodebodyen0_.body_format 
as body_for6_4_, nodebodyen0_.langcode as langcode7_4_, nodebodyen0_.revision_id as revision8_4_ 
from node__body nodebodyen0_ where nodebodyen0_.entity_id=12 
 {executed in 1 msec}
2020-11-19 20:09:07.671 INFO  jdbc.resultsettable Line:610 - 
|----------|-----------|-------------|-------|------|------------|---------|------------|
|entity_id |body_value |body_summary |bundle |delta |body_format |langcode |revision_id |
|----------|-----------|-------------|-------|------|------------|---------|------------|
|----------|-----------|-------------|-------|------|------------|---------|------------|

2020-11-19 20:09:07.674 INFO  jdbc.sqltiming Line:373 - select nodebodyre0_.entity_id as entity_i1_13_0_, nodebodyre0_.body_value as body_val2_13_0_, 
nodebodyre0_.body_summary as body_sum3_13_0_, nodebodyre0_.bundle as bundle4_13_0_, nodebodyre0_.delta 
as delta5_13_0_, nodebodyre0_.body_format as body_for6_13_0_, nodebodyre0_.langcode as langcode7_13_0_, 
nodebodyre0_.revision_id as revision8_13_0_ from node_revision__body nodebodyre0_ where nodebodyre0_.entity_id=12 
 {executed in 1 msec}
2020-11-19 20:09:07.676 INFO  jdbc.resultsettable Line:610 - 
|----------|-----------|-------------|-------|------|------------|---------|------------|
|entity_id |body_value |body_summary |bundle |delta |body_format |langcode |revision_id |
|----------|-----------|-------------|-------|------|------------|---------|------------|
|----------|-----------|-------------|-------|------|------------|---------|------------|

2020-11-19 20:09:07.696 INFO  jdbc.sqltiming Line:373 - insert into node_revision__body (body_value, body_summary, bundle, delta, body_format, langcode, 
revision_id, entity_id) values ('<p>今天，我们来一起了解一下 JDK 中用于监控及诊断工具。本篇中我将使用刚刚发布的 Java 11 版本的工具进行示范。</p> 
<h2>jps</h2> <p>你可能用过<code>ps</code>命令，打印所有正在运行的进程的相关信息。JDK 中的<code>jps</code>命令（<a href="https://docs.oracle.com/en/java/javase/11/tools/jps.html">帮助文档</a>）沿用了同样的概念：它将打印所有正在运行的 
Java 进程的相关信息。</p> <p>在默认情况下，<code>jps</code>的输出信息包括 Java 进程的进程 ID 以及主类名。我们还可以通过追加参数，来打印额外的信息。例如，<code>-l</code>将打印模块名以及包名；<code>-v</code>将打印传递给 
Java 虚拟机的参数（如<code>-XX:+UnlockExperimentalVMOptions -XX:+UseZGC</code>）；<code>-m</code>将打印传递给主类的参数。</p> 
<p>具体的示例如下所示：</p> <pre style="position: relative;"><code> <table class="hljs-ln"> <tbody> <tr> 
<td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> $ jps -mlv </div></td> </tr> <tr> <td 
class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> 18331 org.example.Foo Hello World </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> 18332 jdk.jcmd/sun.tools.jps.Jps -mlv 
-Dapplication.home=/Library/Java/JavaVirtualMachines/jdk-11.jdk/Contents/Home -Xms8m -Djdk.module.main=jdk.jcmd 
</div></td> </tr> </tbody> </table></code> <div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 
</div></pre><!-- [[[read_end]]] --> <p>需要注意的是，如果某 Java 进程关闭了默认开启的<code>UsePerfData</code>参数（即使用参数<code>-XX:-UsePerfData</code>），那么<code>jps</code>命令（以及下面介绍的<code>jstat</code>）将无法探知该 
Java 进程。</p> <p>当获得 Java 进程的进程 ID 之后，我们便可以调用接下来介绍的各项监控及诊断工具了。</p> <h2>jstat</h2> <p><code>jstat</code>命令（<a 
href="https://docs.oracle.com/en/java/javase/11/tools/jstat.html">帮助文档</a>）可用来打印目标 Java 进程的性能数据。它包括多条子命令，如下所示：</p> 
<pre style="position: relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> $ jstat -options </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> -class </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div 
class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td> <td class="hljs-ln-code"> <div 
class="hljs-ln-line"> -compiler </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="4"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
-gc </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" 
data-line-number="5"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> -gccapacity 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> -gccause </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="7"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> -gcmetacapacity </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="8"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> -gcnew </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div 
class="hljs-ln-line hljs-ln-n" data-line-number="9"></div></td> <td class="hljs-ln-code"> <div 
class="hljs-ln-line"> -gcnewcapacity </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div 
class="hljs-ln-line hljs-ln-n" data-line-number="10"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> -gcold </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div 
class="hljs-ln-line hljs-ln-n" data-line-number="11"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> -gcoldcapacity </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="12"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> -gcutil </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div 
class="hljs-ln-line hljs-ln-n" data-line-number="13"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> -printcompilation </div></td> </tr> </tbody> </table></code> <div 
class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 </div></pre> <p>在这些子命令中，<code>-class</code>将打印类加载相关的数据，<code>-compiler</code>和<code>-printcompilation</code>将打印即时编译相关的数据。剩下的都是以<code>-gc</code>为前缀的子命令，它们将打印垃圾回收相关的数据。</p> 
<p>默认情况下，<code>jstat</code>只会打印一次性能数据。我们可以将它配置为每隔一段时间打印一次，直至目标 Java 进程终止，或者达到我们所配置的最大打印次数。具体示例如下所示：</p> 
<pre style="position: relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> # Usage: jstat -outputOptions [-t] [-hlines] VMID [interval [count]] 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> $ jstat -gc 22126 1s 4 </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> S0C S1C S0U S1U EC EU OC OU MC MU CCSC 
CCSU YGC YGCT FGC FGCT CGC CGCT GCT </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div 
class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td> <td class="hljs-ln-code"> <div 
class="hljs-ln-line"> 17472,0 17472,0 0,0 0,0 139904,0 47146,4 349568,0 21321,0 30020,0 28001,8 
4864,0 4673,4 22 0,080 3 0,270 0 0,000 0,350 </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> 17472,0 17472,0 420,6 0,0 139904,0 11178,4 349568,0 21321,0 30020,0 
28090,1 4864,0 4674,2 28 0,084 3 0,270 0 0,000 0,354 </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> 17472,0 17472,0 0,0 403,9 139904,0 139538,4 349568,0 21323,4 30020,0 
28137,2 4864,0 4674,2 34 0,088 4 0,359 0 0,000 0,446 </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="7"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> 17472,0 17472,0 0,0 0,0 139904,0 0,0 349568,0 21326,1 30020,0 28093,6 
4864,0 4673,4 38 0,091 5 0,445 0 0,000 0,536 </div></td> </tr> </tbody> </table></code> <div 
class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 </div></pre> <blockquote> 
<p>当监控本地环境的 Java 进程时，VMID 可以简单理解为 PID。如果需要监控远程环境的 Java 进程，你可以参考 jstat 的帮助文档。</p> </blockquote> 
<p>在上面这个示例中，22126 进程是一个使用了 CMS 垃圾回收器的 Java 进程。我们利用<code>jstat</code>的<code>-gc</code>子命令，来打印该进程垃圾回收相关的数据。命令最后的<code>1s 
4</code>表示每隔 1 秒打印一次，共打印 4 次。</p> <p>在<code>-gc</code>子命令的输出中，前四列分别为两个 Survivor 区的容量（Capacity）和已使用量（Utility）。我们可以看到，这两个 
Survivor 区的容量相等，而且始终有一个 Survivor 区的内存使用量为 0。</p> <p>当使用默认的 G1 GC 时，输出结果则有另一些特征：</p> <pre style="position: 
relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
$ jstat -gc 22208 1s </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="2"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
S0C S1C S0U S1U EC EU OC OU MC MU CCSC CCSU YGC YGCT FGC FGCT CGC CGCT GCT </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> 0,0 16384,0 0,0 16384,0 210944,0 192512,0 
133120,0 5332,5 28848,0 26886,4 4864,0 4620,5 19 0,067 1 0,016 2 0,002 0,084 </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> 0,0 16384,0 0,0 16384,0 210944,0 83968,0 
133120,0 5749,9 29104,0 27132,8 4864,0 4621,0 21 0,078 1 0,016 2 0,002 0,095 </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> 0,0 0,0 0,0 0,0 71680,0 18432,0 45056,0 
20285,1 29872,0 27952,4 4864,0 4671,6 23 0,089 2 0,063 2 0,002 0,153 </div></td> </tr> <tr> 
<td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> 0,0 2048,0 0,0 2048,0 69632,0 28672,0 
45056,0 18608,1 30128,0 28030,4 4864,0 4672,4 32 0,093 2 0,063 2 0,002 0,158 </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="7"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> ... </div></td> </tr> </tbody> </table></code> 
<div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 </div></pre> <p>在上面这个示例中，<code>jstat</code>每隔 
1s 便会打印垃圾回收的信息，并且不断重复下去。</p> <p>你可能已经留意到，<code>S0C</code>和<code>S0U</code>始终为 0，而且另一个 Survivor 
区的容量（S1C）可能会下降至 0。</p> <p>这是因为，当使用 G1 GC 时，Java 虚拟机不再设置 Eden 区、Survivor 区，老年代区的内存边界，而是将堆划分为若干个等长内存区域。</p> 
<p>每个内存区域都可以作为 Eden 区、Survivor 区以及老年代区中的任一种，并且可以在不同区域类型之间来回切换。（<a href="https://www.oracle.com/technetwork/tutorials/tutorials-1876574.html">参考链接</a>）</p> 
<p>换句话说，逻辑上我们只有一个 Survivor 区。当需要迁移 Survivor 区中的数据时（即 Copying GC），我们只需另外申请一个或多个内存区域，作为新的 Survivor 
区。</p> <p>因此，Java 虚拟机决定在使用 G1 GC 时，将所有 Survivor 内存区域的总容量以及已使用量存放至 S1C 和 S1U 中，而 S0C 和 S0U 则被设置为 
0。</p> <p>当发生垃圾回收时，Java 虚拟机可能出现 Survivor 内存区域内的对象<strong>全</strong>被回收或晋升的现象。</p> <p>在这种情况下，Java 
虚拟机会将这块内存区域回收，并标记为可分配的状态。这样子做的结果是，堆中可能完全没有 Survivor 内存区域，因而相应的 S1C 和 S1U 将会是 0。</p> <p><code>jstat</code>还有一个非常有用的参数<code>-t</code>，它将在每行数据之前打印目标 
Java 进程的启动时间。例如，在下面这个示例中，第一列代表该 Java 进程已经启动了 10.7 秒。</p> <pre style="position: relative;"><code> 
<table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
$ jstat -gc -t 22407 </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="2"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
Timestamp S0C S1C S0U S1U EC EU OC OU MC MU CCSC CCSU YGC YGCT FGC FGCT CGC CGCT GCT </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> 10,7 0,0 0,0 0,0 0,0 55296,0 45056,0 34816,0 
20267,8 30128,0 27975,3 4864,0 4671,6 33 0,086 3 0,111 2 0,001 0,198 </div></td> </tr> </tbody> 
</table></code> <div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 </div></pre> 
<p>我们可以比较 Java 进程的启动时间以及总 GC 时间（GCT 列），或者两次测量的间隔时间以及总 GC 时间的增量，来得出 GC 时间占运行时间的比例。</p> <p>如果该比例超过 
20%，则说明目前堆的压力较大；如果该比例超过 90%，则说明堆里几乎没有可用空间，随时都可能抛出 OOM 异常。</p> <p><code>jstat</code>还可以用来判断是否出现内存泄漏。在长时间运行的 
Java 程序中，我们可以运行<code>jstat</code>命令连续获取多行性能数据，并取这几行数据中 OU 列（即已占用的老年代内存）的最小值。</p> <p>然后，我们每隔一段较长的时间重复一次上述操作，来获得多组 
OU 最小值。如果这些值呈上涨趋势，则说明该 Java 程序的老年代内存已使用量在不断上涨，这意味着无法回收的对象在不断增加，因此很有可能存在内存泄漏。</p> <blockquote> 
<p>上面没有涉及的列（或者其他子命令的输出），你可以查阅帮助文档了解具体含义。至于文档中漏掉的 CGC 和 CGCT，它们分别代表并发 GC Stop-The-World 的次数和时间。</p> 
</blockquote> <h2>jmap</h2> <p>在这种情况下，我们便可以请<code>jmap</code>命令（<a href="https://docs.oracle.com/en/java/javase/11/tools/jmap.html">帮助文档</a>）出马，分析 
Java 虚拟机堆中的对象。</p> <p><code>jmap</code>同样包括多条子命令。</p> <ol> <li><code>-clstats</code>，该子命令将打印被加载类的信息。</li> 
<li><code>-finalizerinfo</code>，该子命令将打印所有待 finalize 的对象。</li> <li><code>-histo</code>，该子命令将统计各个类的实例数目以及占用内存，并按照内存使用量从多至少的顺序排列。此外，<code>-histo:live</code>只统计堆中的存活对象。</li> 
<li><code>-dump</code>，该子命令将导出 Java 虚拟机堆的快照。同样，<code>-dump:live</code>只保存堆中的存活对象。</li> </ol> 
<p>我们通常会利用<code>jmap -dump:live,format=b,file=filename.bin</code>命令，将堆中所有存活对象导出至一个文件之中。</p> 
<p>这里<code>format=b</code>将使<code>jmap</code>导出与<a href="https://docs.oracle.com/javase/8/docs/technotes/guides/troubleshoot/tooldescr008.html">hprof</a>（在 
Java 9 中已被移除）、<code>-XX:+HeapDumpAfterFullGC</code>、<code>-XX:+HeapDumpOnOutOfMemoryError</code>格式一致的文件。这种格式的文件可以被其他 
GUI 工具查看，具体我会在下一篇中进行演示。</p> <p>下面我贴了一段<code>-histo</code>子命令的输出：</p> <pre style="position: 
relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
$ jmap -histo 22574 </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="2"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
num #instances #bytes class name (module) </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> ------------------------------------------------------- </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> 1: 500004 20000160 org.python.core.PyComplex 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> 2: 570866 18267712 org.python.core.PyFloat 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> 3: 360295 18027024 [B (java.base@11) </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="7"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> 4: 339394 11429680 [Lorg.python.core.PyObject; 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="8"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> 5: 308637 11194264 [Ljava.lang.Object; 
(java.base@11) </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="9"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
6: 301378 9291664 [I (java.base@11) </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div 
class="hljs-ln-line hljs-ln-n" data-line-number="10"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> 7: 225103 9004120 java.math.BigInteger (java.base@11) </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="11"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> 8: 507362 8117792 org.python.core.PySequence$1 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="12"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> 9: 285009 6840216 org.python.core.PyLong 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="13"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> 10: 282908 6789792 java.lang.String (java.base@11) 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="14"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> ... </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="15"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> 2281: 1 16 traceback$py </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="16"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> 2282: 1 16 unicodedata$py </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="17"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> Total 5151277 167944400 </div></td> </tr> </tbody> </table></code> 
<div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 </div></pre> <p>由于<code>jmap</code>将访问堆中的所有对象，为了保证在此过程中不被应用线程干扰，<code>jmap</code>需要借助安全点机制，让所有线程停留在不改变堆中数据的状态。</p> 
<p>也就是说，由<code>jmap</code>导出的堆快照必定是安全点位置的。这可能导致基于该堆快照的分析结果存在偏差。举个例子，假设在编译生成的机器码中，某些对象的生命周期在两个安全点之间，那么<code>:live</code>选项将无法探知到这些对象。</p> 
<p>另外，如果某个线程长时间无法跑到安全点，<code>jmap</code>将一直等下去。上一小节的<code>jstat</code>则不同。这是因为垃圾回收器会主动将<code>jstat</code>所需要的摘要数据保存至固定位置之中，而<code>jstat</code>只需直接读取即可。</p> 
<p>关于这种长时间等待的情况，你可以通过下面这段程序来复现：</p> <pre style="position: relative;"><code> <table class="hljs-ln"> 
<tbody> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> // 暂停时间较长，约为二三十秒，可酌情调整。 </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> // CTRL+C 的 SIGINT 信号无法停止，需要 SIGKILL。 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> static double sum = 0; </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> public static void main(String[] args) { </div></td> </tr> <tr> 
<td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> for (int i = 0; i &lt; 0x77777777; i++) 
{ // counted loop </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="7"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
sum += Math.log(i); // Math.log is an intrinsic </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="8"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> } </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="9"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
} </div></td> </tr> </tbody> </table></code> <div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 
</div></pre> <p><code>jmap</code>（以及接下来的<code>jinfo</code>、<code>jstack</code>和<code>jcmd</code>）依赖于 
Java 虚拟机的<a href="https://docs.oracle.com/en/java/javase/11/docs/api/jdk.attach/com/sun/tools/attach/package-summary.html">Attach 
API</a>，因此只能监控本地 Java 进程。</p> <p>一旦开启 Java 虚拟机参数<code>DisableAttachMechanism</code>（即使用参数<code>-XX:+DisableAttachMechanism</code>），基于 
Attach API 的命令将无法执行。反过来说，如果你不想被其他进程监控，那么你需要开启该参数。</p> <h2>jinfo</h2> <p><code>jinfo</code>命令（<a 
href="https://docs.oracle.com/en/java/javase/11/tools/jinfo.html">帮助文档</a>）可用来查看目标 Java 进程的参数，如传递给 
Java 虚拟机的<code>-X</code>（即输出中的 jvm_args）、<code>-XX</code>参数（即输出中的 VM Flags），以及可在 Java 层面通过<code>System.getProperty</code>获取的<code>-D</code>参数（即输出中的 
System Properties）。</p> <p>具体的示例如下所示：</p> <pre style="position: relative;"><code> <table class="hljs-ln"> 
<tbody> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> $ jinfo 31185 </div></td> </tr> <tr> <td 
class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> Java System Properties: </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> gopherProxySet=false </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> awt.toolkit=sun.lwawt.macosx.LWCToolkit </div></td> </tr> <tr> <td 
class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> java.specification.version=11 </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="7"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> sun.cpu.isalist= </div></td> </tr> <tr> 
<td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="8"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> sun.jnu.encoding=UTF-8 </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="9"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> ... </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="10"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="11"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
VM Flags: </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" 
data-line-number="12"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> -XX:CICompilerCount=4 
-XX:ConcGCThreads=3 -XX:G1ConcRefinementThreads=10 -XX:G1HeapRegionSize=2097152 -XX:GCDrainStackTargetSize=64 
-XX:InitialHeapSize=536870912 -XX:MarkStackSize=4194304 -XX:MaxHeapSize=8589934592 -XX:MaxNewSize=5152702464 
-XX:MinHeapDeltaBytes=2097152 -XX:NonNMethodCodeHeapSize=5835340 -XX:NonProfiledCodeHeapSize=122911450 
-XX:ProfiledCodeHeapSize=122911450 -XX:ReservedCodeCacheSize=251658240 -XX:+SegmentedCodeCache 
-XX:+UseCompressedClassPointers -XX:+UseCompressedOops -XX:+UseG1GC </div></td> </tr> <tr> 
<td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="13"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="14"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> VM Arguments: </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="15"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> jvm_args: -Xlog:gc -Xmx1024m </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="16"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> java_command: org.example.Foo </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="17"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> java_class_path (initial): . </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="18"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> Launcher Type: SUN_STANDARD </div></td> </tr> </tbody> </table></code> 
<div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 </div></pre> <p><code>jinfo</code>还可以用来修改目标 
Java 进程的“manageable”虚拟机参数。</p> <p>举个例子，我们可以使用<code>jinfo -flag +HeapDumpAfterFullGC &lt;PID&gt;</code>命令，开启<code>&lt;PID&gt;</code>所指定的 
Java 进程的<code>HeapDumpAfterFullGC</code>参数。</p> <p>你可以通过下述命令查看其他 "manageable" 虚拟机参数：</p> <pre 
style="position: relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> $ java -XX:+PrintFlagsFinal -version | grep manageable </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> intx CMSAbortablePrecleanWaitMillis = 
100 {manageable} {default} </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="3"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
intx CMSTriggerInterval = -1 {manageable} {default} </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> intx CMSWaitDuration = 2000 {manageable} {default} </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> bool HeapDumpAfterFullGC = false {manageable} 
{default} </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" 
data-line-number="6"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> bool 
HeapDumpBeforeFullGC = false {manageable} {default} </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="7"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> bool HeapDumpOnOutOfMemoryError = false {manageable} {default} </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="8"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> ccstr HeapDumpPath = {manageable} {default} 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="9"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> uintx MaxHeapFreeRatio = 70 {manageable} 
{default} </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" 
data-line-number="10"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> uintx 
MinHeapFreeRatio = 40 {manageable} {default} </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="11"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> bool PrintClassHistogram = false {manageable} {default} </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="12"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> bool PrintConcurrentLocks = false {manageable} 
{default} </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" 
data-line-number="13"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> java 
version "11" 2018-09-25 </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="14"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
Java(TM) SE Runtime Environment 18.9 (build 11+28) </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="15"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> Java HotSpot(TM) 64-Bit Server VM 18.9 (build 11+28, mixed mode) 
</div></td> </tr> </tbody> </table></code> <div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 
</div></pre> <h2>jstack</h2> <p><code>jstack</code>命令（<a href="https://docs.oracle.com/en/java/javase/11/tools/jstack.html">帮助文档</a>）可以用来打印目标 
Java 进程中各个线程的栈轨迹，以及这些线程所持有的锁。</p> <p><code>jstack</code>的其中一个应用场景便是死锁检测。这里我用<code>jstack</code>获取一个已经死锁了的 
Java 程序的栈信息。具体输出如下所示：</p> <pre style="position: relative;"><code> <table class="hljs-ln"> <tbody> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> $ jstack 31634 </div></td> </tr> <tr> 
<td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> ... </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="4"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
"Thread-0" #12 prio=5 os_prio=31 cpu=1.32ms elapsed=34.24s tid=0x00007fb08601c800 nid=0x5d03 
waiting for monitor entry [0x000070000bc7e000] </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> java.lang.Thread.State: BLOCKED (on object monitor) </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> at DeadLock.foo(DeadLock.java:18) </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="7"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> - waiting to lock &lt;0x000000061ff904c0&gt; 
(a java.lang.Object) </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="8"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
- locked &lt;0x000000061ff904b0&gt; (a java.lang.Object) </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="9"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> at DeadLock$$Lambda$1/0x0000000800060840.run(Unknown Source) </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="10"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> at java.lang.Thread.run(java.base@11/Thread.java:834) 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="11"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="12"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> "Thread-1" #13 prio=5 os_prio=31 cpu=1.43ms elapsed=34.24s tid=0x00007fb08601f800 
nid=0x5f03 waiting for monitor entry [0x000070000bd81000] </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="13"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> java.lang.Thread.State: BLOCKED (on object monitor) </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="14"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> at DeadLock.bar(DeadLock.java:33) </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="15"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> - waiting to lock &lt;0x000000061ff904b0&gt; 
(a java.lang.Object) </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="16"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
- locked &lt;0x000000061ff904c0&gt; (a java.lang.Object) </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="17"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> at DeadLock$$Lambda$2/0x0000000800063040.run(Unknown Source) </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="18"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> at java.lang.Thread.run(java.base@11/Thread.java:834) 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="19"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="20"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> ... </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="21"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="22"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> JNI global refs: 6, weak refs: 0 </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="23"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="24"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="25"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
Found one Java-level deadlock: </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="26"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
============================= </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="27"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
"Thread-0": </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" 
data-line-number="28"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> waiting 
to lock monitor 0x00007fb083015900 (object 0x000000061ff904c0, a java.lang.Object), </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="29"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> which is held by "Thread-1" </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="30"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> "Thread-1": </div></td> </tr> <tr> <td 
class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="31"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> waiting to lock monitor 0x00007fb083015800 
(object 0x000000061ff904b0, a java.lang.Object), </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="32"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> which is held by "Thread-0" </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="33"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="34"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
Java stack information for the threads listed above: </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="35"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> =================================================== </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="36"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> "Thread-0": </div></td> </tr> <tr> <td 
class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="37"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> at DeadLock.foo(DeadLock.java:18) </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="38"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> - waiting to lock &lt;0x000000061ff904c0&gt; 
(a java.lang.Object) </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="39"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
- locked &lt;0x000000061ff904b0&gt; (a java.lang.Object) </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="40"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> at DeadLock$$Lambda$1/0x0000000800060840.run(Unknown Source) </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="41"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> at java.lang.Thread.run(java.base@11/Thread.java:834) 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="42"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> "Thread-1": </div></td> </tr> <tr> <td 
class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="43"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> at DeadLock.bar(DeadLock.java:33) </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="44"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> - waiting to lock &lt;0x000000061ff904b0&gt; 
(a java.lang.Object) </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="45"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
- locked &lt;0x000000061ff904c0&gt; (a java.lang.Object) </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="46"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> at DeadLock$$Lambda$2/0x0000000800063040.run(Unknown Source) </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="47"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> at java.lang.Thread.run(java.base@11/Thread.java:834) 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="48"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="49"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> Found 1 deadlock. </div></td> </tr> </tbody> </table></code> <div 
class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 </div></pre> <p>我们可以看到，<code>jstack</code>不仅会打印线程的栈轨迹、线程状态（BLOCKED）、持有的锁（locked 
…）以及正在请求的锁（waiting to lock …），而且还会分析出具体的死锁。</p> <h2>jcmd</h2> <p>你还可以直接使用<code>jcmd</code>命令（<a 
href="https://docs.oracle.com/en/java/javase/11/tools/jcmd.html">帮助文档</a>），来替代前面除了<code>jstat</code>之外的所有命令。具体的替换规则你可以参考下表。</p> 
<p>至于<code>jstat</code>的功能，虽然<code>jcmd</code>复制了<code>jstat</code>的部分代码，并支持通过<code>PerfCounter.print</code>子命令来打印所有的 
Performance Counter，但是它没有保留<code>jstat</code>的输出格式，也没有重复打印的功能。因此，感兴趣的同学可以自行整理。</p> <p>另外，我们将在下一篇中介绍<code>jcmd</code>中 
Java Flight Recorder 相关的子命令。</p> <h2>总结与实践</h2> <p>今天我介绍了 JDK 中用于监控及诊断的命令行工具。我们再来回顾一下。</p> 
<ol> <li><code>jps</code>将打印所有正在运行的 Java 进程。</li> <li><code>jstat</code>允许用户查看目标 Java 进程的类加载、即时编译以及垃圾回收相关的信息。它常用于检测垃圾回收问题以及内存泄漏问题。</li> 
<li><code>jmap</code>允许用户统计目标 Java 进程的堆中存放的 Java 对象，并将它们导出成二进制文件。</li> <li><code>jinfo</code>将打印目标 
Java 进程的配置参数，并能够改动其中 manageabe 的参数。</li> <li><code>jstack</code>将打印目标 Java 进程中各个线程的栈轨迹、线程状态、锁状况等信息。它还将自动检测死锁。</li> 
<li><code>jcmd</code>则是一把瑞士军刀，可以用来实现前面除了<code>jstat</code>之外所有命令的功能。</li> </ol> <hr> <p>今天的实践环节，你可以探索<code>jcmd</code>中的下述功能，看看有没有适合你项目的监控项：</p> 
<pre style="position: relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> Compiler.CodeHeap_Analytics </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> Compiler.codecache </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> Compiler.codelist </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> Compiler.directives_add </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> Compiler.directives_clear </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> Compiler.directives_print </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="7"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> Compiler.directives_remove </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="8"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> Compiler.queue </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="9"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> GC.class_histogram </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="10"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> GC.class_stats </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="11"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> GC.finalizer_info </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="12"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> GC.heap_dump </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="13"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> GC.heap_info </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="14"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> GC.run </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div 
class="hljs-ln-line hljs-ln-n" data-line-number="15"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> GC.run_finalization </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="16"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> VM.class_hierarchy </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="17"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> VM.classloader_stats </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="18"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> VM.classloaders </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="19"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> VM.command_line </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="20"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> VM.dynlibs </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div 
class="hljs-ln-line hljs-ln-n" data-line-number="21"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> VM.flags </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div 
class="hljs-ln-line hljs-ln-n" data-line-number="22"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> VM.info </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div 
class="hljs-ln-line hljs-ln-n" data-line-number="23"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> VM.log </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div 
class="hljs-ln-line hljs-ln-n" data-line-number="24"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> VM.metaspace </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="25"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> VM.native_memory </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="26"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> VM.print_touched_methods </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="27"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> VM.set_flag </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="28"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> VM.stringtable </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="29"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> VM.symboltable </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="30"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> VM.system_properties </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="31"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> VM.systemdictionary </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="32"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> VM.unlock_commercial_features </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="33"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> VM.uptime </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div 
class="hljs-ln-line hljs-ln-n" data-line-number="34"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> VM.version </div></td> </tr> </tbody> </table></code> <div class="richcontent-pre-copy"> 
<span class="iconfont"></span>复制代码 </div></pre> <p><img src="https://static001.geekbang.org/resource/image/2a/d5/2a62e58cbdf56a5dc40748567d346fd5.jpg" 
alt=""></p>', '', 'book', 0, 'full_html', 'zh-hans', 12, 12) 
 {executed in 11 msec}
2020-11-19 20:09:07.711 INFO  jdbc.sqltiming Line:373 - select nodebodyen0_.entity_id as entity_i1_4_0_, nodebodyen0_.body_value as body_val2_4_0_, 
nodebodyen0_.body_summary as body_sum3_4_0_, nodebodyen0_.bundle as bundle4_4_0_, nodebodyen0_.delta 
as delta5_4_0_, nodebodyen0_.body_format as body_for6_4_0_, nodebodyen0_.langcode as langcode7_4_0_, 
nodebodyen0_.revision_id as revision8_4_0_ from node__body nodebodyen0_ where nodebodyen0_.entity_id=12 
 {executed in 1 msec}
2020-11-19 20:09:07.713 INFO  jdbc.resultsettable Line:610 - 
|----------|-----------|-------------|-------|------|------------|---------|------------|
|entity_id |body_value |body_summary |bundle |delta |body_format |langcode |revision_id |
|----------|-----------|-------------|-------|------|------------|---------|------------|
|----------|-----------|-------------|-------|------|------------|---------|------------|

2020-11-19 20:09:07.739 INFO  jdbc.sqltiming Line:373 - insert into node__body (body_value, body_summary, bundle, delta, body_format, langcode, revision_id, 
entity_id) values ('<p>今天，我们来一起了解一下 JDK 中用于监控及诊断工具。本篇中我将使用刚刚发布的 Java 11 版本的工具进行示范。</p> <h2>jps</h2> 
<p>你可能用过<code>ps</code>命令，打印所有正在运行的进程的相关信息。JDK 中的<code>jps</code>命令（<a href="https://docs.oracle.com/en/java/javase/11/tools/jps.html">帮助文档</a>）沿用了同样的概念：它将打印所有正在运行的 
Java 进程的相关信息。</p> <p>在默认情况下，<code>jps</code>的输出信息包括 Java 进程的进程 ID 以及主类名。我们还可以通过追加参数，来打印额外的信息。例如，<code>-l</code>将打印模块名以及包名；<code>-v</code>将打印传递给 
Java 虚拟机的参数（如<code>-XX:+UnlockExperimentalVMOptions -XX:+UseZGC</code>）；<code>-m</code>将打印传递给主类的参数。</p> 
<p>具体的示例如下所示：</p> <pre style="position: relative;"><code> <table class="hljs-ln"> <tbody> <tr> 
<td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> $ jps -mlv </div></td> </tr> <tr> <td 
class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> 18331 org.example.Foo Hello World </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> 18332 jdk.jcmd/sun.tools.jps.Jps -mlv 
-Dapplication.home=/Library/Java/JavaVirtualMachines/jdk-11.jdk/Contents/Home -Xms8m -Djdk.module.main=jdk.jcmd 
</div></td> </tr> </tbody> </table></code> <div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 
</div></pre><!-- [[[read_end]]] --> <p>需要注意的是，如果某 Java 进程关闭了默认开启的<code>UsePerfData</code>参数（即使用参数<code>-XX:-UsePerfData</code>），那么<code>jps</code>命令（以及下面介绍的<code>jstat</code>）将无法探知该 
Java 进程。</p> <p>当获得 Java 进程的进程 ID 之后，我们便可以调用接下来介绍的各项监控及诊断工具了。</p> <h2>jstat</h2> <p><code>jstat</code>命令（<a 
href="https://docs.oracle.com/en/java/javase/11/tools/jstat.html">帮助文档</a>）可用来打印目标 Java 进程的性能数据。它包括多条子命令，如下所示：</p> 
<pre style="position: relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> $ jstat -options </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> -class </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div 
class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td> <td class="hljs-ln-code"> <div 
class="hljs-ln-line"> -compiler </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="4"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
-gc </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" 
data-line-number="5"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> -gccapacity 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> -gccause </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="7"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> -gcmetacapacity </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="8"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> -gcnew </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div 
class="hljs-ln-line hljs-ln-n" data-line-number="9"></div></td> <td class="hljs-ln-code"> <div 
class="hljs-ln-line"> -gcnewcapacity </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div 
class="hljs-ln-line hljs-ln-n" data-line-number="10"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> -gcold </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div 
class="hljs-ln-line hljs-ln-n" data-line-number="11"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> -gcoldcapacity </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="12"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> -gcutil </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div 
class="hljs-ln-line hljs-ln-n" data-line-number="13"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> -printcompilation </div></td> </tr> </tbody> </table></code> <div 
class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 </div></pre> <p>在这些子命令中，<code>-class</code>将打印类加载相关的数据，<code>-compiler</code>和<code>-printcompilation</code>将打印即时编译相关的数据。剩下的都是以<code>-gc</code>为前缀的子命令，它们将打印垃圾回收相关的数据。</p> 
<p>默认情况下，<code>jstat</code>只会打印一次性能数据。我们可以将它配置为每隔一段时间打印一次，直至目标 Java 进程终止，或者达到我们所配置的最大打印次数。具体示例如下所示：</p> 
<pre style="position: relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> # Usage: jstat -outputOptions [-t] [-hlines] VMID [interval [count]] 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> $ jstat -gc 22126 1s 4 </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> S0C S1C S0U S1U EC EU OC OU MC MU CCSC 
CCSU YGC YGCT FGC FGCT CGC CGCT GCT </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div 
class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td> <td class="hljs-ln-code"> <div 
class="hljs-ln-line"> 17472,0 17472,0 0,0 0,0 139904,0 47146,4 349568,0 21321,0 30020,0 28001,8 
4864,0 4673,4 22 0,080 3 0,270 0 0,000 0,350 </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> 17472,0 17472,0 420,6 0,0 139904,0 11178,4 349568,0 21321,0 30020,0 
28090,1 4864,0 4674,2 28 0,084 3 0,270 0 0,000 0,354 </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> 17472,0 17472,0 0,0 403,9 139904,0 139538,4 349568,0 21323,4 30020,0 
28137,2 4864,0 4674,2 34 0,088 4 0,359 0 0,000 0,446 </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="7"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> 17472,0 17472,0 0,0 0,0 139904,0 0,0 349568,0 21326,1 30020,0 28093,6 
4864,0 4673,4 38 0,091 5 0,445 0 0,000 0,536 </div></td> </tr> </tbody> </table></code> <div 
class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 </div></pre> <blockquote> 
<p>当监控本地环境的 Java 进程时，VMID 可以简单理解为 PID。如果需要监控远程环境的 Java 进程，你可以参考 jstat 的帮助文档。</p> </blockquote> 
<p>在上面这个示例中，22126 进程是一个使用了 CMS 垃圾回收器的 Java 进程。我们利用<code>jstat</code>的<code>-gc</code>子命令，来打印该进程垃圾回收相关的数据。命令最后的<code>1s 
4</code>表示每隔 1 秒打印一次，共打印 4 次。</p> <p>在<code>-gc</code>子命令的输出中，前四列分别为两个 Survivor 区的容量（Capacity）和已使用量（Utility）。我们可以看到，这两个 
Survivor 区的容量相等，而且始终有一个 Survivor 区的内存使用量为 0。</p> <p>当使用默认的 G1 GC 时，输出结果则有另一些特征：</p> <pre style="position: 
relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
$ jstat -gc 22208 1s </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="2"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
S0C S1C S0U S1U EC EU OC OU MC MU CCSC CCSU YGC YGCT FGC FGCT CGC CGCT GCT </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> 0,0 16384,0 0,0 16384,0 210944,0 192512,0 
133120,0 5332,5 28848,0 26886,4 4864,0 4620,5 19 0,067 1 0,016 2 0,002 0,084 </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> 0,0 16384,0 0,0 16384,0 210944,0 83968,0 
133120,0 5749,9 29104,0 27132,8 4864,0 4621,0 21 0,078 1 0,016 2 0,002 0,095 </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> 0,0 0,0 0,0 0,0 71680,0 18432,0 45056,0 
20285,1 29872,0 27952,4 4864,0 4671,6 23 0,089 2 0,063 2 0,002 0,153 </div></td> </tr> <tr> 
<td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> 0,0 2048,0 0,0 2048,0 69632,0 28672,0 
45056,0 18608,1 30128,0 28030,4 4864,0 4672,4 32 0,093 2 0,063 2 0,002 0,158 </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="7"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> ... </div></td> </tr> </tbody> </table></code> 
<div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 </div></pre> <p>在上面这个示例中，<code>jstat</code>每隔 
1s 便会打印垃圾回收的信息，并且不断重复下去。</p> <p>你可能已经留意到，<code>S0C</code>和<code>S0U</code>始终为 0，而且另一个 Survivor 
区的容量（S1C）可能会下降至 0。</p> <p>这是因为，当使用 G1 GC 时，Java 虚拟机不再设置 Eden 区、Survivor 区，老年代区的内存边界，而是将堆划分为若干个等长内存区域。</p> 
<p>每个内存区域都可以作为 Eden 区、Survivor 区以及老年代区中的任一种，并且可以在不同区域类型之间来回切换。（<a href="https://www.oracle.com/technetwork/tutorials/tutorials-1876574.html">参考链接</a>）</p> 
<p>换句话说，逻辑上我们只有一个 Survivor 区。当需要迁移 Survivor 区中的数据时（即 Copying GC），我们只需另外申请一个或多个内存区域，作为新的 Survivor 
区。</p> <p>因此，Java 虚拟机决定在使用 G1 GC 时，将所有 Survivor 内存区域的总容量以及已使用量存放至 S1C 和 S1U 中，而 S0C 和 S0U 则被设置为 
0。</p> <p>当发生垃圾回收时，Java 虚拟机可能出现 Survivor 内存区域内的对象<strong>全</strong>被回收或晋升的现象。</p> <p>在这种情况下，Java 
虚拟机会将这块内存区域回收，并标记为可分配的状态。这样子做的结果是，堆中可能完全没有 Survivor 内存区域，因而相应的 S1C 和 S1U 将会是 0。</p> <p><code>jstat</code>还有一个非常有用的参数<code>-t</code>，它将在每行数据之前打印目标 
Java 进程的启动时间。例如，在下面这个示例中，第一列代表该 Java 进程已经启动了 10.7 秒。</p> <pre style="position: relative;"><code> 
<table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
$ jstat -gc -t 22407 </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="2"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
Timestamp S0C S1C S0U S1U EC EU OC OU MC MU CCSC CCSU YGC YGCT FGC FGCT CGC CGCT GCT </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> 10,7 0,0 0,0 0,0 0,0 55296,0 45056,0 34816,0 
20267,8 30128,0 27975,3 4864,0 4671,6 33 0,086 3 0,111 2 0,001 0,198 </div></td> </tr> </tbody> 
</table></code> <div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 </div></pre> 
<p>我们可以比较 Java 进程的启动时间以及总 GC 时间（GCT 列），或者两次测量的间隔时间以及总 GC 时间的增量，来得出 GC 时间占运行时间的比例。</p> <p>如果该比例超过 
20%，则说明目前堆的压力较大；如果该比例超过 90%，则说明堆里几乎没有可用空间，随时都可能抛出 OOM 异常。</p> <p><code>jstat</code>还可以用来判断是否出现内存泄漏。在长时间运行的 
Java 程序中，我们可以运行<code>jstat</code>命令连续获取多行性能数据，并取这几行数据中 OU 列（即已占用的老年代内存）的最小值。</p> <p>然后，我们每隔一段较长的时间重复一次上述操作，来获得多组 
OU 最小值。如果这些值呈上涨趋势，则说明该 Java 程序的老年代内存已使用量在不断上涨，这意味着无法回收的对象在不断增加，因此很有可能存在内存泄漏。</p> <blockquote> 
<p>上面没有涉及的列（或者其他子命令的输出），你可以查阅帮助文档了解具体含义。至于文档中漏掉的 CGC 和 CGCT，它们分别代表并发 GC Stop-The-World 的次数和时间。</p> 
</blockquote> <h2>jmap</h2> <p>在这种情况下，我们便可以请<code>jmap</code>命令（<a href="https://docs.oracle.com/en/java/javase/11/tools/jmap.html">帮助文档</a>）出马，分析 
Java 虚拟机堆中的对象。</p> <p><code>jmap</code>同样包括多条子命令。</p> <ol> <li><code>-clstats</code>，该子命令将打印被加载类的信息。</li> 
<li><code>-finalizerinfo</code>，该子命令将打印所有待 finalize 的对象。</li> <li><code>-histo</code>，该子命令将统计各个类的实例数目以及占用内存，并按照内存使用量从多至少的顺序排列。此外，<code>-histo:live</code>只统计堆中的存活对象。</li> 
<li><code>-dump</code>，该子命令将导出 Java 虚拟机堆的快照。同样，<code>-dump:live</code>只保存堆中的存活对象。</li> </ol> 
<p>我们通常会利用<code>jmap -dump:live,format=b,file=filename.bin</code>命令，将堆中所有存活对象导出至一个文件之中。</p> 
<p>这里<code>format=b</code>将使<code>jmap</code>导出与<a href="https://docs.oracle.com/javase/8/docs/technotes/guides/troubleshoot/tooldescr008.html">hprof</a>（在 
Java 9 中已被移除）、<code>-XX:+HeapDumpAfterFullGC</code>、<code>-XX:+HeapDumpOnOutOfMemoryError</code>格式一致的文件。这种格式的文件可以被其他 
GUI 工具查看，具体我会在下一篇中进行演示。</p> <p>下面我贴了一段<code>-histo</code>子命令的输出：</p> <pre style="position: 
relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
$ jmap -histo 22574 </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="2"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
num #instances #bytes class name (module) </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> ------------------------------------------------------- </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> 1: 500004 20000160 org.python.core.PyComplex 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> 2: 570866 18267712 org.python.core.PyFloat 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> 3: 360295 18027024 [B (java.base@11) </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="7"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> 4: 339394 11429680 [Lorg.python.core.PyObject; 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="8"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> 5: 308637 11194264 [Ljava.lang.Object; 
(java.base@11) </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="9"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
6: 301378 9291664 [I (java.base@11) </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div 
class="hljs-ln-line hljs-ln-n" data-line-number="10"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> 7: 225103 9004120 java.math.BigInteger (java.base@11) </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="11"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> 8: 507362 8117792 org.python.core.PySequence$1 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="12"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> 9: 285009 6840216 org.python.core.PyLong 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="13"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> 10: 282908 6789792 java.lang.String (java.base@11) 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="14"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> ... </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="15"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> 2281: 1 16 traceback$py </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="16"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> 2282: 1 16 unicodedata$py </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="17"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> Total 5151277 167944400 </div></td> </tr> </tbody> </table></code> 
<div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 </div></pre> <p>由于<code>jmap</code>将访问堆中的所有对象，为了保证在此过程中不被应用线程干扰，<code>jmap</code>需要借助安全点机制，让所有线程停留在不改变堆中数据的状态。</p> 
<p>也就是说，由<code>jmap</code>导出的堆快照必定是安全点位置的。这可能导致基于该堆快照的分析结果存在偏差。举个例子，假设在编译生成的机器码中，某些对象的生命周期在两个安全点之间，那么<code>:live</code>选项将无法探知到这些对象。</p> 
<p>另外，如果某个线程长时间无法跑到安全点，<code>jmap</code>将一直等下去。上一小节的<code>jstat</code>则不同。这是因为垃圾回收器会主动将<code>jstat</code>所需要的摘要数据保存至固定位置之中，而<code>jstat</code>只需直接读取即可。</p> 
<p>关于这种长时间等待的情况，你可以通过下面这段程序来复现：</p> <pre style="position: relative;"><code> <table class="hljs-ln"> 
<tbody> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> // 暂停时间较长，约为二三十秒，可酌情调整。 </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> // CTRL+C 的 SIGINT 信号无法停止，需要 SIGKILL。 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> static double sum = 0; </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> public static void main(String[] args) { </div></td> </tr> <tr> 
<td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> for (int i = 0; i &lt; 0x77777777; i++) 
{ // counted loop </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="7"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
sum += Math.log(i); // Math.log is an intrinsic </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="8"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> } </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="9"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
} </div></td> </tr> </tbody> </table></code> <div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 
</div></pre> <p><code>jmap</code>（以及接下来的<code>jinfo</code>、<code>jstack</code>和<code>jcmd</code>）依赖于 
Java 虚拟机的<a href="https://docs.oracle.com/en/java/javase/11/docs/api/jdk.attach/com/sun/tools/attach/package-summary.html">Attach 
API</a>，因此只能监控本地 Java 进程。</p> <p>一旦开启 Java 虚拟机参数<code>DisableAttachMechanism</code>（即使用参数<code>-XX:+DisableAttachMechanism</code>），基于 
Attach API 的命令将无法执行。反过来说，如果你不想被其他进程监控，那么你需要开启该参数。</p> <h2>jinfo</h2> <p><code>jinfo</code>命令（<a 
href="https://docs.oracle.com/en/java/javase/11/tools/jinfo.html">帮助文档</a>）可用来查看目标 Java 进程的参数，如传递给 
Java 虚拟机的<code>-X</code>（即输出中的 jvm_args）、<code>-XX</code>参数（即输出中的 VM Flags），以及可在 Java 层面通过<code>System.getProperty</code>获取的<code>-D</code>参数（即输出中的 
System Properties）。</p> <p>具体的示例如下所示：</p> <pre style="position: relative;"><code> <table class="hljs-ln"> 
<tbody> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> $ jinfo 31185 </div></td> </tr> <tr> <td 
class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> Java System Properties: </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> gopherProxySet=false </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> awt.toolkit=sun.lwawt.macosx.LWCToolkit </div></td> </tr> <tr> <td 
class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> java.specification.version=11 </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="7"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> sun.cpu.isalist= </div></td> </tr> <tr> 
<td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="8"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> sun.jnu.encoding=UTF-8 </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="9"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> ... </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="10"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="11"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
VM Flags: </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" 
data-line-number="12"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> -XX:CICompilerCount=4 
-XX:ConcGCThreads=3 -XX:G1ConcRefinementThreads=10 -XX:G1HeapRegionSize=2097152 -XX:GCDrainStackTargetSize=64 
-XX:InitialHeapSize=536870912 -XX:MarkStackSize=4194304 -XX:MaxHeapSize=8589934592 -XX:MaxNewSize=5152702464 
-XX:MinHeapDeltaBytes=2097152 -XX:NonNMethodCodeHeapSize=5835340 -XX:NonProfiledCodeHeapSize=122911450 
-XX:ProfiledCodeHeapSize=122911450 -XX:ReservedCodeCacheSize=251658240 -XX:+SegmentedCodeCache 
-XX:+UseCompressedClassPointers -XX:+UseCompressedOops -XX:+UseG1GC </div></td> </tr> <tr> 
<td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="13"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="14"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> VM Arguments: </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="15"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> jvm_args: -Xlog:gc -Xmx1024m </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="16"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> java_command: org.example.Foo </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="17"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> java_class_path (initial): . </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="18"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> Launcher Type: SUN_STANDARD </div></td> </tr> </tbody> </table></code> 
<div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 </div></pre> <p><code>jinfo</code>还可以用来修改目标 
Java 进程的“manageable”虚拟机参数。</p> <p>举个例子，我们可以使用<code>jinfo -flag +HeapDumpAfterFullGC &lt;PID&gt;</code>命令，开启<code>&lt;PID&gt;</code>所指定的 
Java 进程的<code>HeapDumpAfterFullGC</code>参数。</p> <p>你可以通过下述命令查看其他 "manageable" 虚拟机参数：</p> <pre 
style="position: relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> $ java -XX:+PrintFlagsFinal -version | grep manageable </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> intx CMSAbortablePrecleanWaitMillis = 
100 {manageable} {default} </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="3"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
intx CMSTriggerInterval = -1 {manageable} {default} </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> intx CMSWaitDuration = 2000 {manageable} {default} </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> bool HeapDumpAfterFullGC = false {manageable} 
{default} </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" 
data-line-number="6"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> bool 
HeapDumpBeforeFullGC = false {manageable} {default} </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="7"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> bool HeapDumpOnOutOfMemoryError = false {manageable} {default} </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="8"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> ccstr HeapDumpPath = {manageable} {default} 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="9"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> uintx MaxHeapFreeRatio = 70 {manageable} 
{default} </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" 
data-line-number="10"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> uintx 
MinHeapFreeRatio = 40 {manageable} {default} </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="11"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> bool PrintClassHistogram = false {manageable} {default} </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="12"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> bool PrintConcurrentLocks = false {manageable} 
{default} </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" 
data-line-number="13"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> java 
version "11" 2018-09-25 </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="14"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
Java(TM) SE Runtime Environment 18.9 (build 11+28) </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="15"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> Java HotSpot(TM) 64-Bit Server VM 18.9 (build 11+28, mixed mode) 
</div></td> </tr> </tbody> </table></code> <div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 
</div></pre> <h2>jstack</h2> <p><code>jstack</code>命令（<a href="https://docs.oracle.com/en/java/javase/11/tools/jstack.html">帮助文档</a>）可以用来打印目标 
Java 进程中各个线程的栈轨迹，以及这些线程所持有的锁。</p> <p><code>jstack</code>的其中一个应用场景便是死锁检测。这里我用<code>jstack</code>获取一个已经死锁了的 
Java 程序的栈信息。具体输出如下所示：</p> <pre style="position: relative;"><code> <table class="hljs-ln"> <tbody> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> $ jstack 31634 </div></td> </tr> <tr> 
<td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> ... </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="4"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
"Thread-0" #12 prio=5 os_prio=31 cpu=1.32ms elapsed=34.24s tid=0x00007fb08601c800 nid=0x5d03 
waiting for monitor entry [0x000070000bc7e000] </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> java.lang.Thread.State: BLOCKED (on object monitor) </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> at DeadLock.foo(DeadLock.java:18) </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="7"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> - waiting to lock &lt;0x000000061ff904c0&gt; 
(a java.lang.Object) </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="8"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
- locked &lt;0x000000061ff904b0&gt; (a java.lang.Object) </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="9"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> at DeadLock$$Lambda$1/0x0000000800060840.run(Unknown Source) </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="10"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> at java.lang.Thread.run(java.base@11/Thread.java:834) 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="11"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="12"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> "Thread-1" #13 prio=5 os_prio=31 cpu=1.43ms elapsed=34.24s tid=0x00007fb08601f800 
nid=0x5f03 waiting for monitor entry [0x000070000bd81000] </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="13"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> java.lang.Thread.State: BLOCKED (on object monitor) </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="14"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> at DeadLock.bar(DeadLock.java:33) </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="15"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> - waiting to lock &lt;0x000000061ff904b0&gt; 
(a java.lang.Object) </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="16"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
- locked &lt;0x000000061ff904c0&gt; (a java.lang.Object) </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="17"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> at DeadLock$$Lambda$2/0x0000000800063040.run(Unknown Source) </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="18"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> at java.lang.Thread.run(java.base@11/Thread.java:834) 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="19"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="20"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> ... </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="21"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="22"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> JNI global refs: 6, weak refs: 0 </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="23"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="24"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="25"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
Found one Java-level deadlock: </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="26"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
============================= </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="27"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
"Thread-0": </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" 
data-line-number="28"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> waiting 
to lock monitor 0x00007fb083015900 (object 0x000000061ff904c0, a java.lang.Object), </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="29"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> which is held by "Thread-1" </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="30"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> "Thread-1": </div></td> </tr> <tr> <td 
class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="31"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> waiting to lock monitor 0x00007fb083015800 
(object 0x000000061ff904b0, a java.lang.Object), </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="32"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> which is held by "Thread-0" </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="33"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="34"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
Java stack information for the threads listed above: </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="35"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> =================================================== </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="36"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> "Thread-0": </div></td> </tr> <tr> <td 
class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="37"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> at DeadLock.foo(DeadLock.java:18) </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="38"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> - waiting to lock &lt;0x000000061ff904c0&gt; 
(a java.lang.Object) </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="39"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
- locked &lt;0x000000061ff904b0&gt; (a java.lang.Object) </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="40"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> at DeadLock$$Lambda$1/0x0000000800060840.run(Unknown Source) </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="41"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> at java.lang.Thread.run(java.base@11/Thread.java:834) 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="42"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> "Thread-1": </div></td> </tr> <tr> <td 
class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="43"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> at DeadLock.bar(DeadLock.java:33) </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="44"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> - waiting to lock &lt;0x000000061ff904b0&gt; 
(a java.lang.Object) </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="45"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
- locked &lt;0x000000061ff904c0&gt; (a java.lang.Object) </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="46"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> at DeadLock$$Lambda$2/0x0000000800063040.run(Unknown Source) </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="47"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> at java.lang.Thread.run(java.base@11/Thread.java:834) 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="48"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="49"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> Found 1 deadlock. </div></td> </tr> </tbody> </table></code> <div 
class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 </div></pre> <p>我们可以看到，<code>jstack</code>不仅会打印线程的栈轨迹、线程状态（BLOCKED）、持有的锁（locked 
…）以及正在请求的锁（waiting to lock …），而且还会分析出具体的死锁。</p> <h2>jcmd</h2> <p>你还可以直接使用<code>jcmd</code>命令（<a 
href="https://docs.oracle.com/en/java/javase/11/tools/jcmd.html">帮助文档</a>），来替代前面除了<code>jstat</code>之外的所有命令。具体的替换规则你可以参考下表。</p> 
<p>至于<code>jstat</code>的功能，虽然<code>jcmd</code>复制了<code>jstat</code>的部分代码，并支持通过<code>PerfCounter.print</code>子命令来打印所有的 
Performance Counter，但是它没有保留<code>jstat</code>的输出格式，也没有重复打印的功能。因此，感兴趣的同学可以自行整理。</p> <p>另外，我们将在下一篇中介绍<code>jcmd</code>中 
Java Flight Recorder 相关的子命令。</p> <h2>总结与实践</h2> <p>今天我介绍了 JDK 中用于监控及诊断的命令行工具。我们再来回顾一下。</p> 
<ol> <li><code>jps</code>将打印所有正在运行的 Java 进程。</li> <li><code>jstat</code>允许用户查看目标 Java 进程的类加载、即时编译以及垃圾回收相关的信息。它常用于检测垃圾回收问题以及内存泄漏问题。</li> 
<li><code>jmap</code>允许用户统计目标 Java 进程的堆中存放的 Java 对象，并将它们导出成二进制文件。</li> <li><code>jinfo</code>将打印目标 
Java 进程的配置参数，并能够改动其中 manageabe 的参数。</li> <li><code>jstack</code>将打印目标 Java 进程中各个线程的栈轨迹、线程状态、锁状况等信息。它还将自动检测死锁。</li> 
<li><code>jcmd</code>则是一把瑞士军刀，可以用来实现前面除了<code>jstat</code>之外所有命令的功能。</li> </ol> <hr> <p>今天的实践环节，你可以探索<code>jcmd</code>中的下述功能，看看有没有适合你项目的监控项：</p> 
<pre style="position: relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> Compiler.CodeHeap_Analytics </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> Compiler.codecache </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> Compiler.codelist </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> Compiler.directives_add </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> Compiler.directives_clear </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> Compiler.directives_print </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="7"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> Compiler.directives_remove </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="8"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> Compiler.queue </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="9"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> GC.class_histogram </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="10"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> GC.class_stats </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="11"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> GC.finalizer_info </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="12"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> GC.heap_dump </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="13"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> GC.heap_info </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="14"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> GC.run </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div 
class="hljs-ln-line hljs-ln-n" data-line-number="15"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> GC.run_finalization </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="16"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> VM.class_hierarchy </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="17"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> VM.classloader_stats </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="18"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> VM.classloaders </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="19"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> VM.command_line </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="20"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> VM.dynlibs </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div 
class="hljs-ln-line hljs-ln-n" data-line-number="21"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> VM.flags </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div 
class="hljs-ln-line hljs-ln-n" data-line-number="22"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> VM.info </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div 
class="hljs-ln-line hljs-ln-n" data-line-number="23"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> VM.log </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div 
class="hljs-ln-line hljs-ln-n" data-line-number="24"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> VM.metaspace </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="25"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> VM.native_memory </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="26"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> VM.print_touched_methods </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="27"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> VM.set_flag </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="28"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> VM.stringtable </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="29"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> VM.symboltable </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="30"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> VM.system_properties </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="31"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> VM.systemdictionary </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="32"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> VM.unlock_commercial_features </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="33"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> VM.uptime </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div 
class="hljs-ln-line hljs-ln-n" data-line-number="34"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> VM.version </div></td> </tr> </tbody> </table></code> <div class="richcontent-pre-copy"> 
<span class="iconfont"></span>复制代码 </div></pre> <p><img src="https://static001.geekbang.org/resource/image/2a/d5/2a62e58cbdf56a5dc40748567d346fd5.jpg" 
alt=""></p>', '', 'book', 0, 'full_html', 'zh-hans', 12, 12) 
 {executed in 16 msec}
2020-11-19 20:09:07.755 INFO  jdbc.sqltiming Line:373 - select nodefiledd0_.nid as nid1_10_, nodefiledd0_.changed as changed2_10_, nodefiledd0_.created 
as created3_10_, nodefiledd0_.default_langcode as default_4_10_, nodefiledd0_.langcode as langcode5_10_, 
nodefiledd0_.promote as promote6_10_, nodefiledd0_.revision_translation_affected as revision7_10_, 
nodefiledd0_.status as status8_10_, nodefiledd0_.sticky as sticky9_10_, nodefiledd0_.title 
as title10_10_, nodefiledd0_.type as type11_10_, nodefiledd0_.uid as uid12_10_, nodefiledd0_.vid 
as vid13_10_ from node_field_data nodefiledd0_ where nodefiledd0_.nid=12 
 {executed in 1 msec}
2020-11-19 20:09:07.758 INFO  jdbc.resultsettable Line:610 - 
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|-----|----|----|
|nid |changed |created |default_langcode |langcode |promote |revision_translation_affected |status |sticky |title |type |uid |vid |
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|-----|----|----|
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|-----|----|----|

2020-11-19 20:09:07.762 INFO  jdbc.sqltiming Line:373 - select nodefieldr0_.nid as nid1_11_0_, nodefieldr0_.changed as changed2_11_0_, nodefieldr0_.created 
as created3_11_0_, nodefieldr0_.default_langcode as default_4_11_0_, nodefieldr0_.langcode 
as langcode5_11_0_, nodefieldr0_.promote as promote6_11_0_, nodefieldr0_.revision_translation_affected 
as revision7_11_0_, nodefieldr0_.status as status8_11_0_, nodefieldr0_.sticky as sticky9_11_0_, 
nodefieldr0_.title as title10_11_0_, nodefieldr0_.uid as uid11_11_0_, nodefieldr0_.vid as vid12_11_0_ 
from node_field_revision nodefieldr0_ where nodefieldr0_.nid=12 
 {executed in 1 msec}
2020-11-19 20:09:07.764 INFO  jdbc.resultsettable Line:610 - 
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|----|----|
|nid |changed |created |default_langcode |langcode |promote |revision_translation_affected |status |sticky |title |uid |vid |
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|----|----|
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|----|----|

2020-11-19 20:09:07.770 INFO  jdbc.sqltiming Line:373 - insert into node_field_revision (changed, created, default_langcode, langcode, promote, revision_translation_affected, 
status, sticky, title, uid, vid, nid) values (1605787747, 1605787747, 1, 'zh-hans', 0, 1, 1, 
0, '30丨Java虚拟机的监控及诊断工具（命令行篇）', 1, 12, 12) 
 {executed in 1 msec}
2020-11-19 20:09:07.777 INFO  jdbc.sqltiming Line:373 - select nodefiledd0_.nid as nid1_10_0_, nodefiledd0_.changed as changed2_10_0_, nodefiledd0_.created 
as created3_10_0_, nodefiledd0_.default_langcode as default_4_10_0_, nodefiledd0_.langcode 
as langcode5_10_0_, nodefiledd0_.promote as promote6_10_0_, nodefiledd0_.revision_translation_affected 
as revision7_10_0_, nodefiledd0_.status as status8_10_0_, nodefiledd0_.sticky as sticky9_10_0_, 
nodefiledd0_.title as title10_10_0_, nodefiledd0_.type as type11_10_0_, nodefiledd0_.uid as 
uid12_10_0_, nodefiledd0_.vid as vid13_10_0_ from node_field_data nodefiledd0_ where nodefiledd0_.nid=12 
 {executed in 1 msec}
2020-11-19 20:09:07.780 INFO  jdbc.resultsettable Line:610 - 
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|-----|----|----|
|nid |changed |created |default_langcode |langcode |promote |revision_translation_affected |status |sticky |title |type |uid |vid |
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|-----|----|----|
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|-----|----|----|

2020-11-19 20:09:07.786 INFO  jdbc.sqltiming Line:373 - insert into node_field_data (changed, created, default_langcode, langcode, promote, revision_translation_affected, 
status, sticky, title, type, uid, vid, nid) values (1605787747, 1605787747, 1, 'zh-hans', 0, 
1, 1, 0, '30丨Java虚拟机的监控及诊断工具（命令行篇）', 'book', 1, 12, 12) 
 {executed in 1 msec}
2020-11-19 20:09:07.793 INFO  jdbc.sqltiming Line:373 - select bookfieldm0_.entity_id as entity_i1_8_, bookfieldm0_.bundle as bundle2_8_, bookfieldm0_.delta 
as delta3_8_, bookfieldm0_.langcode as langcode4_8_, bookfieldm0_.field_media_value as field_me5_8_, 
bookfieldm0_.revision_id as revision6_8_ from node__field_media bookfieldm0_ where bookfieldm0_.entity_id=12 
 {executed in 1 msec}
2020-11-19 20:09:07.795 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------------|------------|
|entity_id |bundle |delta |langcode |field_media_value |revision_id |
|----------|-------|------|---------|------------------|------------|
|----------|-------|------|---------|------------------|------------|

2020-11-19 20:09:07.803 INFO  jdbc.sqltiming Line:373 - select bookfieldm0_.entity_id as entity_i1_8_0_, bookfieldm0_.bundle as bundle2_8_0_, bookfieldm0_.delta 
as delta3_8_0_, bookfieldm0_.langcode as langcode4_8_0_, bookfieldm0_.field_media_value as 
field_me5_8_0_, bookfieldm0_.revision_id as revision6_8_0_ from node__field_media bookfieldm0_ 
where bookfieldm0_.entity_id=12 
 {executed in 2 msec}
2020-11-19 20:09:07.805 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------------|------------|
|entity_id |bundle |delta |langcode |field_media_value |revision_id |
|----------|-------|------|---------|------------------|------------|
|----------|-------|------|---------|------------------|------------|

2020-11-19 20:09:07.811 INFO  jdbc.sqltiming Line:373 - insert into node__field_media (bundle, delta, langcode, field_media_value, revision_id, entity_id) 
values ('book', 0, 'zh-hans', 'https://qdall01.baidupcs.com/file/6d3ebdb75d28b81d2b8473713f499584?bkt=en-07c9b0a504a370601382665cead0415f56806316b124a893b65ed11845c9f82784f9f601a1b40a85&fid=3757516097-778750-436599315570459&time=1605787746&sign=FDTAXUGERLQlBHSKfWqir-DCb740ccc5511e5e8fedcff06b081203-crSTXEIueiKC2e%2B3h1gK2Fy%2Fpvg%3D&to=92&size=5302300&sta_dx=5302300&sta_cs=4335&sta_ft=mp3&sta_ct=7&sta_mt=0&fm2=MH%2CQingdao%2CAnywhere%2C%2Cshanghai%2Ccnc&ctime=1567182975&mtime=1605787492&resv0=-1&resv1=0&resv2=rlim&resv3=2&resv4=5302300&vuk=3757516097&iv=0&htype=&randtype=em&newver=1&newfm=1&secfm=1&flow_ver=3&pkey=en-9d7e6f00bcff9a31984e46a4df1658d338f2d6fe52687b3038c258e8e0de4f507b203f2376e95125&sl=76480590&expires=8h&rt=pr&r=404837382&mlogid=7510755826617247861&vbdid=64799653&fin=30%E4%B8%A8Java%E8%99%9A%E6%8B%9F%E6%9C%BA%E7%9A%84%E7%9B%91%E6%8E%A7%E5%8F%8A%E8%AF%8A%E6%96%AD%E5%B7%A5%E5%85%B7%EF%BC%88%E5%91%BD%E4%BB%A4%E8%A1%8C%E7%AF%87%EF%BC%89.mp3&bflag=92,34-92&rtype=1&dp-logid=7510755826617247861&dp-callid=0.1.1&hps=1&tsl=80&csl=80&fsl=-1&csign=yVzLQPCt4DblfMLqd2BCjd2RnqQ%3D&so=0&ut=6&uter=0&serv=0&uc=1458616558&ti=78cccb630bb0656e97f680d8006e622418443080effaa298&hflag=30&adg=c_0f3c8fb981bae1fdae375754a6f1d609&reqlabel=778750_l_eeb31e180410b8be0e62f686c2b42c5d_-1_43d73532db4f9890a29565ef474ca519&ibp=1&by=themis&filename=30%E4%B8%A8Java%E8%99%9A%E6%8B%9F%E6%9C%BA%E7%9A%84%E7%9B%91%E6%8E%A7%E5%8F%8A%E8%AF%8A%E6%96%AD%E5%B7%A5%E5%85%B7%EF%BC%88%E5%91%BD%E4%BB%A4%E8%A1%8C%E7%AF%87%EF%BC%89.mp3', 
12, 12) 
 {executed in 1 msec}
2020-11-19 20:09:07.822 INFO  jdbc.sqltiming Line:373 - select nodefieldm0_.entity_id as entity_i1_17_0_, nodefieldm0_.bundle as bundle2_17_0_, nodefieldm0_.delta 
as delta3_17_0_, nodefieldm0_.langcode as langcode4_17_0_, nodefieldm0_.field_media_value as 
field_me5_17_0_, nodefieldm0_.revision_id as revision6_17_0_ from node_revision__field_media 
nodefieldm0_ where nodefieldm0_.entity_id=12 
 {executed in 1 msec}
2020-11-19 20:09:07.824 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------------|------------|
|entity_id |bundle |delta |langcode |field_media_value |revision_id |
|----------|-------|------|---------|------------------|------------|
|----------|-------|------|---------|------------------|------------|

2020-11-19 20:09:07.830 INFO  jdbc.sqltiming Line:373 - insert into node_revision__field_media (bundle, delta, langcode, field_media_value, revision_id, 
entity_id) values ('book', 0, 'zh-hans', 'https://qdall01.baidupcs.com/file/6d3ebdb75d28b81d2b8473713f499584?bkt=en-07c9b0a504a370601382665cead0415f56806316b124a893b65ed11845c9f82784f9f601a1b40a85&fid=3757516097-778750-436599315570459&time=1605787746&sign=FDTAXUGERLQlBHSKfWqir-DCb740ccc5511e5e8fedcff06b081203-crSTXEIueiKC2e%2B3h1gK2Fy%2Fpvg%3D&to=92&size=5302300&sta_dx=5302300&sta_cs=4335&sta_ft=mp3&sta_ct=7&sta_mt=0&fm2=MH%2CQingdao%2CAnywhere%2C%2Cshanghai%2Ccnc&ctime=1567182975&mtime=1605787492&resv0=-1&resv1=0&resv2=rlim&resv3=2&resv4=5302300&vuk=3757516097&iv=0&htype=&randtype=em&newver=1&newfm=1&secfm=1&flow_ver=3&pkey=en-9d7e6f00bcff9a31984e46a4df1658d338f2d6fe52687b3038c258e8e0de4f507b203f2376e95125&sl=76480590&expires=8h&rt=pr&r=404837382&mlogid=7510755826617247861&vbdid=64799653&fin=30%E4%B8%A8Java%E8%99%9A%E6%8B%9F%E6%9C%BA%E7%9A%84%E7%9B%91%E6%8E%A7%E5%8F%8A%E8%AF%8A%E6%96%AD%E5%B7%A5%E5%85%B7%EF%BC%88%E5%91%BD%E4%BB%A4%E8%A1%8C%E7%AF%87%EF%BC%89.mp3&bflag=92,34-92&rtype=1&dp-logid=7510755826617247861&dp-callid=0.1.1&hps=1&tsl=80&csl=80&fsl=-1&csign=yVzLQPCt4DblfMLqd2BCjd2RnqQ%3D&so=0&ut=6&uter=0&serv=0&uc=1458616558&ti=78cccb630bb0656e97f680d8006e622418443080effaa298&hflag=30&adg=c_0f3c8fb981bae1fdae375754a6f1d609&reqlabel=778750_l_eeb31e180410b8be0e62f686c2b42c5d_-1_43d73532db4f9890a29565ef474ca519&ibp=1&by=themis&filename=30%E4%B8%A8Java%E8%99%9A%E6%8B%9F%E6%9C%BA%E7%9A%84%E7%9B%91%E6%8E%A7%E5%8F%8A%E8%AF%8A%E6%96%AD%E5%B7%A5%E5%85%B7%EF%BC%88%E5%91%BD%E4%BB%A4%E8%A1%8C%E7%AF%87%EF%BC%89.mp3', 
12, 12) 
 {executed in 0 msec}
2020-11-19 20:09:07.885 INFO  jdbc.sqltiming Line:373 - select bookfieldc0_.entity_id as entity_i1_5_, bookfieldc0_.bundle as bundle2_5_, bookfieldc0_.field_comment_value 
as field_co3_5_, bookfieldc0_.delta as delta4_5_, bookfieldc0_.field_comment_format as field_co5_5_, 
bookfieldc0_.langcode as langcode6_5_, bookfieldc0_.revision_id as revision7_5_ from node__field_comment 
bookfieldc0_ where bookfieldc0_.entity_id=12 
 {executed in 1 msec}
2020-11-19 20:09:07.886 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|--------------------|------|---------------------|---------|------------|
|entity_id |bundle |field_comment_value |delta |field_comment_format |langcode |revision_id |
|----------|-------|--------------------|------|---------------------|---------|------------|
|----------|-------|--------------------|------|---------------------|---------|------------|

2020-11-19 20:09:07.891 INFO  jdbc.sqltiming Line:373 - select bookfieldc0_.entity_id as entity_i1_5_0_, bookfieldc0_.bundle as bundle2_5_0_, bookfieldc0_.field_comment_value 
as field_co3_5_0_, bookfieldc0_.delta as delta4_5_0_, bookfieldc0_.field_comment_format as 
field_co5_5_0_, bookfieldc0_.langcode as langcode6_5_0_, bookfieldc0_.revision_id as revision7_5_0_ 
from node__field_comment bookfieldc0_ where bookfieldc0_.entity_id=12 
 {executed in 1 msec}
2020-11-19 20:09:07.893 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|--------------------|------|---------------------|---------|------------|
|entity_id |bundle |field_comment_value |delta |field_comment_format |langcode |revision_id |
|----------|-------|--------------------|------|---------------------|---------|------------|
|----------|-------|--------------------|------|---------------------|---------|------------|

2020-11-19 20:09:07.910 INFO  jdbc.sqltiming Line:373 - insert into node__field_comment (bundle, field_comment_value, delta, field_comment_format, 
langcode, revision_id, entity_id) values ('book', '<li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/0f/66/d0/6541f1d5.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>杨晓峰</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2018-09-30 </div> </div> <div class="_2eMTs2JE_0"> 
<div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class="">6</span> </div> <!----> 
<!----> </div> </div> <div class="_3M6kV3zb_0"> jmc早openjdk网站单独下载，目前需要7 ea版处理jdk11 <br>http://jdk.java.net/jmc/ 
</div> <div class="_2r3UB1GX_0"> <span>展开</span><i class="iconfont"></i> </div> <div class="_2xNIY4NG_0"> 
<p class="_33BLbmw4_0">作者回复: 谢谢峰哥！</p> </div> </div></li> <li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/10/46/69/78f18991.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>田斌</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2018-11-08 </div> </div> <div class="_2eMTs2JE_0"> 
<div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class="">4</span> </div> <!----> 
<!----> </div> </div> <div class="_3M6kV3zb_0 _3D2NkqD6_0"> Jstack -F会导致Java进程一直挂起吗，说是jdk的bug，什么情况下会一直挂起呢 
</div> <!----> <!----> </div></li> <li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/12/04/6f/55d943e6.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>美滋滋</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2018-10-10 </div> </div> <div class="_2eMTs2JE_0"> 
<div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class="">3</span> </div> <!----> 
<!----> </div> </div> <div class="_3M6kV3zb_0"> null那位朋友 oom killer了解一下 </div> <div class="_2r3UB1GX_0"> 
<span>展开</span><i class="iconfont"></i> </div> <!----> </div></li> <li class="reJj6Thl_0"><img 
src="https://static001.geekbang.org/account/avatar/00/12/06/e0/fa7e80da.jpg" class="_2273kGdT_0"> 
<div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> <span>null</span> 
<!----> </div> <div class="_1H1Z49Dr_0"> 2018-09-28 </div> </div> <div class="_2eMTs2JE_0"> 
<div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class="">2</span> </div> <!----> 
<!----> </div> </div> <div class="_3M6kV3zb_0"> 老师， 你好 <br>我想请教一个问题， <br>我们线上环境有一台tomcat偶尔会莫名的挂掉， 
<br>而且没有任何错误信息，日志都是正常的， <br>就像被kill -9一样。 <br>请问这个怎么排查问题？ <br>不会是人为的。 <br>谢谢。 </div> <div class="_2r3UB1GX_0"> 
<span>展开</span><i class="iconfont"></i> </div> <!----> </div></li> <li class="reJj6Thl_0"><img 
src="https://static001.geekbang.org/account/avatar/00/12/04/b5/8bc4790b.jpg" class="_2273kGdT_0"> 
<div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> <span>Geek_98716...</span> 
<!----> </div> <div class="_1H1Z49Dr_0"> 2018-11-04 </div> </div> <div class="_2eMTs2JE_0"> 
<div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class="">1</span> </div> <!----> 
<!----> </div> </div> <div class="_3M6kV3zb_0 _3D2NkqD6_0"> 老师为什么官方文档介绍工具开头都有"This command 
is experimental and unsupported"这句话？ </div> <!----> <div class="_2xNIY4NG_0"> <p class="_33BLbmw4_0">作者回复: 
翻译过来就是”我们不对结果负责” ;)</p> </div> </div></li> <li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/0f/67/f4/9a1feb59.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>godtrue</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2018-09-28 </div> </div> <div 
class="_2eMTs2JE_0"> <div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class="">1</span> 
</div> <!----> <!----> </div> </div> <div class="_3M6kV3zb_0"> 嘿嘿，就喜欢这样的简单拿来主义，随学随用。老师能否深入讲一下这些命令的底层实现，对应的信息都是怎么获取到的？都是从哪里获取到的？如果说都是从JVM中感觉范围有点大，往细了讲是从JVM的什么地方获取的呢？ 
</div> <div class="_2r3UB1GX_0"> <span>展开</span><i class="iconfont"></i> </div> <div class="_2xNIY4NG_0"> 
<p class="_33BLbmw4_0">作者回复: 记得很多是通过MXBeans的。然后JVM有个专门存放perf data的，JVM组件会将东西存在那，而jstat会从那里读取。<br><br>实现起来不复杂的，可以参考一下工具的源代码<br>https://hg.openjdk.java.net/jdk/jdk11/file/1ddf9a99e4ad/src/jdk.jcmd/share/classes/sun/tools</p> 
</div> </div></li> <li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/0f/e3/e5/7b2586cb.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>Warren</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2019-05-15 </div> </div> <div 
class="_2eMTs2JE_0"> <div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class=""></span> 
</div> <!----> <!----> </div> </div> <div class="_3M6kV3zb_0 _3D2NkqD6_0"> 我在使用jfr后发现method 
profiling为空，请问知道怎么解决吗 </div> <!----> <!----> </div></li> <li class="reJj6Thl_0"><img src="" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>witluo</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2019-04-08 </div> </div> <div 
class="_2eMTs2JE_0"> <div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class=""></span> 
</div> <!----> <!----> </div> </div> <div class="_3M6kV3zb_0"> 为什么没有Gcplot，一般参数调整，有计算公式么？这个可以根据自己的业务流量和现有服务进行动态调整。 
<br>动态调整原则：调整理论合适值，再压测，将产生的gc.og,得出图形报表进行进一步分析，调整再压测，得出相对优参数值！ <br>（个人意见） </div> <div class="_2r3UB1GX_0"> 
<span>展开</span><i class="iconfont"></i> </div> <!----> </div></li> <li class="reJj6Thl_0"><img 
src="https://static001.geekbang.org/account/avatar/00/0f/ed/b4/2f485987.jpg" class="_2273kGdT_0"> 
<div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> <span>啸风</span> 
<!----> </div> <div class="_1H1Z49Dr_0"> 2019-03-19 </div> </div> <div class="_2eMTs2JE_0"> 
<div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class=""></span> </div> <!----> <!----> 
</div> </div> <div class="_3M6kV3zb_0"> 最近在分析was的JVM运行情况，好像没有jstack，和jmap，用的是javacore和heapdump分析，但用的不熟练，老师能否给适当的指导说明？ 
</div> <div class="_2r3UB1GX_0"> <span>展开</span><i class="iconfont"></i> </div> <!----> </div></li> 
<li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/11/e2/58/8c8897c8.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>杨春鹏</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2018-10-11 </div> </div> <div class="_2eMTs2JE_0"> 
<div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class=""></span> </div> <!----> <!----> 
</div> </div> <div class="_3M6kV3zb_0"> 为什么我双击这些.exe，直接就闪退。 </div> <div class="_2r3UB1GX_0"> 
<span>展开</span><i class="iconfont"></i> </div> <div class="_2xNIY4NG_0"> <p class="_33BLbmw4_0">作者回复: 
都是命令行程序，没有GUI界面的</p> </div> </div></li> <li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/10/5f/83/bb728e53.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>jimforcode</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2018-09-28 </div> </div> <div 
class="_2eMTs2JE_0"> <div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class=""></span> 
</div> <!----> <!----> </div> </div> <div class="_3M6kV3zb_0"> 老师讲的好像和jdk11 没啥关系吧 </div> <div 
class="_2r3UB1GX_0"> <span>展开</span><i class="iconfont"></i> </div> <div class="_2xNIY4NG_0"> 
<p class="_33BLbmw4_0">作者回复: 嗯，以前版本都有这些工具。<br><br>只不过我使用了JDK11版本的这些工具，这句”注意”是用来避免结果有出入的。</p> 
</div> </div></li> <li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/0f/c3/56/0ad8772a.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>Axis</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2018-09-28 </div> </div> <div class="_2eMTs2JE_0"> 
<div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class=""></span> </div> <!----> <!----> 
</div> </div> <div class="_3M6kV3zb_0 _3D2NkqD6_0"> Jdk11下开源了jfr但是没有jmc这个工具查看性能文件 是为什么？ </div> 
<!----> <div class="_2xNIY4NG_0"> <p class="_33BLbmw4_0">作者回复: 怎么说呢，大佬们决定JMC应该另外下载。我揣测是为了减少JDK的编译时间，不确定哈</p> 
</div> </div></li>', 0, 'full_html', 'zh-hans', 12, 12) 
 {executed in 11 msec}
2020-11-19 20:09:07.922 INFO  jdbc.sqltiming Line:373 - select nodefieldc0_.entity_id as entity_i1_14_0_, nodefieldc0_.bundle as bundle2_14_0_, nodefieldc0_.field_comment_value 
as field_co3_14_0_, nodefieldc0_.delta as delta4_14_0_, nodefieldc0_.field_comment_format as 
field_co5_14_0_, nodefieldc0_.langcode as langcode6_14_0_, nodefieldc0_.revision_id as revision7_14_0_ 
from node_revision__field_comment nodefieldc0_ where nodefieldc0_.entity_id=12 
 {executed in 1 msec}
2020-11-19 20:09:07.924 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|--------------------|------|---------------------|---------|------------|
|entity_id |bundle |field_comment_value |delta |field_comment_format |langcode |revision_id |
|----------|-------|--------------------|------|---------------------|---------|------------|
|----------|-------|--------------------|------|---------------------|---------|------------|

2020-11-19 20:09:07.930 INFO  jdbc.sqltiming Line:373 - insert into node_revision__field_comment (bundle, field_comment_value, delta, field_comment_format, 
langcode, revision_id, entity_id) values ('book', '<li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/0f/66/d0/6541f1d5.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>杨晓峰</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2018-09-30 </div> </div> <div class="_2eMTs2JE_0"> 
<div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class="">6</span> </div> <!----> 
<!----> </div> </div> <div class="_3M6kV3zb_0"> jmc早openjdk网站单独下载，目前需要7 ea版处理jdk11 <br>http://jdk.java.net/jmc/ 
</div> <div class="_2r3UB1GX_0"> <span>展开</span><i class="iconfont"></i> </div> <div class="_2xNIY4NG_0"> 
<p class="_33BLbmw4_0">作者回复: 谢谢峰哥！</p> </div> </div></li> <li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/10/46/69/78f18991.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>田斌</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2018-11-08 </div> </div> <div class="_2eMTs2JE_0"> 
<div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class="">4</span> </div> <!----> 
<!----> </div> </div> <div class="_3M6kV3zb_0 _3D2NkqD6_0"> Jstack -F会导致Java进程一直挂起吗，说是jdk的bug，什么情况下会一直挂起呢 
</div> <!----> <!----> </div></li> <li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/12/04/6f/55d943e6.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>美滋滋</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2018-10-10 </div> </div> <div class="_2eMTs2JE_0"> 
<div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class="">3</span> </div> <!----> 
<!----> </div> </div> <div class="_3M6kV3zb_0"> null那位朋友 oom killer了解一下 </div> <div class="_2r3UB1GX_0"> 
<span>展开</span><i class="iconfont"></i> </div> <!----> </div></li> <li class="reJj6Thl_0"><img 
src="https://static001.geekbang.org/account/avatar/00/12/06/e0/fa7e80da.jpg" class="_2273kGdT_0"> 
<div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> <span>null</span> 
<!----> </div> <div class="_1H1Z49Dr_0"> 2018-09-28 </div> </div> <div class="_2eMTs2JE_0"> 
<div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class="">2</span> </div> <!----> 
<!----> </div> </div> <div class="_3M6kV3zb_0"> 老师， 你好 <br>我想请教一个问题， <br>我们线上环境有一台tomcat偶尔会莫名的挂掉， 
<br>而且没有任何错误信息，日志都是正常的， <br>就像被kill -9一样。 <br>请问这个怎么排查问题？ <br>不会是人为的。 <br>谢谢。 </div> <div class="_2r3UB1GX_0"> 
<span>展开</span><i class="iconfont"></i> </div> <!----> </div></li> <li class="reJj6Thl_0"><img 
src="https://static001.geekbang.org/account/avatar/00/12/04/b5/8bc4790b.jpg" class="_2273kGdT_0"> 
<div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> <span>Geek_98716...</span> 
<!----> </div> <div class="_1H1Z49Dr_0"> 2018-11-04 </div> </div> <div class="_2eMTs2JE_0"> 
<div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class="">1</span> </div> <!----> 
<!----> </div> </div> <div class="_3M6kV3zb_0 _3D2NkqD6_0"> 老师为什么官方文档介绍工具开头都有"This command 
is experimental and unsupported"这句话？ </div> <!----> <div class="_2xNIY4NG_0"> <p class="_33BLbmw4_0">作者回复: 
翻译过来就是”我们不对结果负责” ;)</p> </div> </div></li> <li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/0f/67/f4/9a1feb59.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>godtrue</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2018-09-28 </div> </div> <div 
class="_2eMTs2JE_0"> <div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class="">1</span> 
</div> <!----> <!----> </div> </div> <div class="_3M6kV3zb_0"> 嘿嘿，就喜欢这样的简单拿来主义，随学随用。老师能否深入讲一下这些命令的底层实现，对应的信息都是怎么获取到的？都是从哪里获取到的？如果说都是从JVM中感觉范围有点大，往细了讲是从JVM的什么地方获取的呢？ 
</div> <div class="_2r3UB1GX_0"> <span>展开</span><i class="iconfont"></i> </div> <div class="_2xNIY4NG_0"> 
<p class="_33BLbmw4_0">作者回复: 记得很多是通过MXBeans的。然后JVM有个专门存放perf data的，JVM组件会将东西存在那，而jstat会从那里读取。<br><br>实现起来不复杂的，可以参考一下工具的源代码<br>https://hg.openjdk.java.net/jdk/jdk11/file/1ddf9a99e4ad/src/jdk.jcmd/share/classes/sun/tools</p> 
</div> </div></li> <li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/0f/e3/e5/7b2586cb.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>Warren</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2019-05-15 </div> </div> <div 
class="_2eMTs2JE_0"> <div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class=""></span> 
</div> <!----> <!----> </div> </div> <div class="_3M6kV3zb_0 _3D2NkqD6_0"> 我在使用jfr后发现method 
profiling为空，请问知道怎么解决吗 </div> <!----> <!----> </div></li> <li class="reJj6Thl_0"><img src="" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>witluo</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2019-04-08 </div> </div> <div 
class="_2eMTs2JE_0"> <div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class=""></span> 
</div> <!----> <!----> </div> </div> <div class="_3M6kV3zb_0"> 为什么没有Gcplot，一般参数调整，有计算公式么？这个可以根据自己的业务流量和现有服务进行动态调整。 
<br>动态调整原则：调整理论合适值，再压测，将产生的gc.og,得出图形报表进行进一步分析，调整再压测，得出相对优参数值！ <br>（个人意见） </div> <div class="_2r3UB1GX_0"> 
<span>展开</span><i class="iconfont"></i> </div> <!----> </div></li> <li class="reJj6Thl_0"><img 
src="https://static001.geekbang.org/account/avatar/00/0f/ed/b4/2f485987.jpg" class="_2273kGdT_0"> 
<div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> <span>啸风</span> 
<!----> </div> <div class="_1H1Z49Dr_0"> 2019-03-19 </div> </div> <div class="_2eMTs2JE_0"> 
<div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class=""></span> </div> <!----> <!----> 
</div> </div> <div class="_3M6kV3zb_0"> 最近在分析was的JVM运行情况，好像没有jstack，和jmap，用的是javacore和heapdump分析，但用的不熟练，老师能否给适当的指导说明？ 
</div> <div class="_2r3UB1GX_0"> <span>展开</span><i class="iconfont"></i> </div> <!----> </div></li> 
<li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/11/e2/58/8c8897c8.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>杨春鹏</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2018-10-11 </div> </div> <div class="_2eMTs2JE_0"> 
<div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class=""></span> </div> <!----> <!----> 
</div> </div> <div class="_3M6kV3zb_0"> 为什么我双击这些.exe，直接就闪退。 </div> <div class="_2r3UB1GX_0"> 
<span>展开</span><i class="iconfont"></i> </div> <div class="_2xNIY4NG_0"> <p class="_33BLbmw4_0">作者回复: 
都是命令行程序，没有GUI界面的</p> </div> </div></li> <li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/10/5f/83/bb728e53.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>jimforcode</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2018-09-28 </div> </div> <div 
class="_2eMTs2JE_0"> <div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class=""></span> 
</div> <!----> <!----> </div> </div> <div class="_3M6kV3zb_0"> 老师讲的好像和jdk11 没啥关系吧 </div> <div 
class="_2r3UB1GX_0"> <span>展开</span><i class="iconfont"></i> </div> <div class="_2xNIY4NG_0"> 
<p class="_33BLbmw4_0">作者回复: 嗯，以前版本都有这些工具。<br><br>只不过我使用了JDK11版本的这些工具，这句”注意”是用来避免结果有出入的。</p> 
</div> </div></li> <li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/0f/c3/56/0ad8772a.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>Axis</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2018-09-28 </div> </div> <div class="_2eMTs2JE_0"> 
<div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class=""></span> </div> <!----> <!----> 
</div> </div> <div class="_3M6kV3zb_0 _3D2NkqD6_0"> Jdk11下开源了jfr但是没有jmc这个工具查看性能文件 是为什么？ </div> 
<!----> <div class="_2xNIY4NG_0"> <p class="_33BLbmw4_0">作者回复: 怎么说呢，大佬们决定JMC应该另外下载。我揣测是为了减少JDK的编译时间，不确定哈</p> 
</div> </div></li>', 0, 'full_html', 'zh-hans', 12, 12) 
 {executed in 2 msec}
2020-11-19 20:09:07.941 INFO  jdbc.sqltiming Line:373 - select bookfieldt0_.entity_id as entity_i1_9_, bookfieldt0_.bundle as bundle2_9_, bookfieldt0_.delta 
as delta3_9_, bookfieldt0_.langcode as langcode4_9_, bookfieldt0_.revision_id as revision5_9_, 
bookfieldt0_.field_thumb_value as field_th6_9_ from node__field_thumb bookfieldt0_ where bookfieldt0_.entity_id=12 
 {executed in 2 msec}
2020-11-19 20:09:07.943 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------|------------------|
|entity_id |bundle |delta |langcode |revision_id |field_thumb_value |
|----------|-------|------|---------|------------|------------------|
|----------|-------|------|---------|------------|------------------|

2020-11-19 20:09:07.947 INFO  jdbc.sqltiming Line:373 - select bookfieldt0_.entity_id as entity_i1_9_0_, bookfieldt0_.bundle as bundle2_9_0_, bookfieldt0_.delta 
as delta3_9_0_, bookfieldt0_.langcode as langcode4_9_0_, bookfieldt0_.revision_id as revision5_9_0_, 
bookfieldt0_.field_thumb_value as field_th6_9_0_ from node__field_thumb bookfieldt0_ where 
bookfieldt0_.entity_id=12 
 {executed in 1 msec}
2020-11-19 20:09:07.949 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------|------------------|
|entity_id |bundle |delta |langcode |revision_id |field_thumb_value |
|----------|-------|------|---------|------------|------------------|
|----------|-------|------|---------|------------|------------------|

2020-11-19 20:09:07.954 INFO  jdbc.sqltiming Line:373 - insert into node__field_thumb (bundle, delta, langcode, revision_id, field_thumb_value, entity_id) 
values ('book', 0, 'zh-hans', 12, 'https://static001.geekbang.org/resource/image/71/34/714021ed1e7d1fe4026f7d46a833d834.jpg', 
12) 
 {executed in 1 msec}
2020-11-19 20:09:07.963 INFO  jdbc.sqltiming Line:373 - select nodefieldt0_.entity_id as entity_i1_18_0_, nodefieldt0_.bundle as bundle2_18_0_, nodefieldt0_.delta 
as delta3_18_0_, nodefieldt0_.langcode as langcode4_18_0_, nodefieldt0_.revision_id as revision5_18_0_, 
nodefieldt0_.field_thumb_value as field_th6_18_0_ from node_revision__field_thumb nodefieldt0_ 
where nodefieldt0_.entity_id=12 
 {executed in 1 msec}
2020-11-19 20:09:07.966 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------|------------------|
|entity_id |bundle |delta |langcode |revision_id |field_thumb_value |
|----------|-------|------|---------|------------|------------------|
|----------|-------|------|---------|------------|------------------|

2020-11-19 20:09:07.973 INFO  jdbc.sqltiming Line:373 - insert into node_revision__field_thumb (bundle, delta, langcode, revision_id, field_thumb_value, 
entity_id) values ('book', 0, 'zh-hans', 12, 'https://static001.geekbang.org/resource/image/71/34/714021ed1e7d1fe4026f7d46a833d834.jpg', 
12) 
 {executed in 2 msec}
2020-11-19 20:09:07.994 INFO  jdbc.sqltiming Line:373 - select bookfieldf0_.entity_id as entity_i1_6_0_, bookfieldf0_.bundle as bundle2_6_0_, bookfieldf0_.delta 
as delta3_6_0_, bookfieldf0_.field_fenlei_target_id as field_fe4_6_0_, bookfieldf0_.langcode 
as langcode5_6_0_, bookfieldf0_.revision_id as revision6_6_0_ from node__field_fenlei bookfieldf0_ 
where bookfieldf0_.entity_id=12 
 {executed in 2 msec}
2020-11-19 20:09:07.996 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------------|---------|------------|
|entity_id |bundle |delta |field_fenlei_target_id |langcode |revision_id |
|----------|-------|------|-----------------------|---------|------------|
|----------|-------|------|-----------------------|---------|------------|

2020-11-19 20:09:08.003 INFO  jdbc.sqltiming Line:373 - insert into node__field_fenlei (bundle, delta, field_fenlei_target_id, langcode, revision_id, 
entity_id) values ('book', 0, 1, 'zh-hans', 12, 12) 
 {executed in 1 msec}
2020-11-19 20:09:08.012 INFO  jdbc.sqltiming Line:373 - select nodefieldf0_.entity_id as entity_i1_15_0_, nodefieldf0_.bundle as bundle2_15_0_, nodefieldf0_.delta 
as delta3_15_0_, nodefieldf0_.field_fenlei_target_id as field_fe4_15_0_, nodefieldf0_.langcode 
as langcode5_15_0_, nodefieldf0_.revision_id as revision6_15_0_ from node_revision__field_fenlei 
nodefieldf0_ where nodefieldf0_.entity_id=12 
 {executed in 1 msec}
2020-11-19 20:09:08.014 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------------|---------|------------|
|entity_id |bundle |delta |field_fenlei_target_id |langcode |revision_id |
|----------|-------|------|-----------------------|---------|------------|
|----------|-------|------|-----------------------|---------|------------|

2020-11-19 20:09:08.020 INFO  jdbc.sqltiming Line:373 - insert into node_revision__field_fenlei (bundle, delta, field_fenlei_target_id, langcode, revision_id, 
entity_id) values ('book', 0, 1, 'zh-hans', 12, 12) 
 {executed in 1 msec}
2020-11-19 20:09:08.027 INFO  jdbc.sqltiming Line:373 - select bookchecke0_.item_id as item_id1_2_, bookchecke0_.fsid as fsid2_2_, bookchecke0_.got 
as got3_2_, bookchecke0_.name as name4_2_ from book_check bookchecke0_ where bookchecke0_.fsid='577153996063161' 
and bookchecke0_.name='net_content' 
 {executed in 1 msec}
2020-11-19 20:09:08.029 INFO  jdbc.resultsettable Line:610 - 
|--------|-----|----|-----|
|item_id |fsid |got |name |
|--------|-----|----|-----|
|--------|-----|----|-----|

2020-11-19 20:09:25.014 INFO  jdbc.sqltiming Line:373 - select bookchecke0_.item_id as item_id1_2_, bookchecke0_.fsid as fsid2_2_, bookchecke0_.got 
as got3_2_, bookchecke0_.name as name4_2_ from book_check bookchecke0_ where bookchecke0_.fsid='577153996063161' 
and bookchecke0_.name='net_content' 
 {executed in 2 msec}
2020-11-19 20:09:25.016 INFO  jdbc.resultsettable Line:610 - 
|--------|-----|----|-----|
|item_id |fsid |got |name |
|--------|-----|----|-----|
|--------|-----|----|-----|

2020-11-19 20:09:25.021 INFO  jdbc.sqltiming Line:373 - insert into book_check (fsid, got, name) values ('577153996063161', 1, 'net_content') 
 {executed in 1 msec}
2020-11-19 20:09:25.022 INFO  jdbc.sqltiming Line:373 - getGeneratedKeys on query: insert into book_check (fsid, got, name) values ('577153996063161', 
1, 'net_content') 
 {executed in 0 msec}
2020-11-19 20:09:25.024 INFO  jdbc.resultsettable Line:610 - 
|--------------|
|generated_key |
|--------------|
|29            |
|--------------|

2020-11-19 20:09:25.035 INFO  jdbc.sqltiming Line:373 - select bookchecke0_.item_id as item_id1_2_, bookchecke0_.fsid as fsid2_2_, bookchecke0_.got 
as got3_2_, bookchecke0_.name as name4_2_ from book_check bookchecke0_ where bookchecke0_.fsid='577153996063161' 
and bookchecke0_.name='media' 
 {executed in 1 msec}
2020-11-19 20:09:25.037 INFO  jdbc.resultsettable Line:610 - 
|--------|-----|----|-----|
|item_id |fsid |got |name |
|--------|-----|----|-----|
|--------|-----|----|-----|

2020-11-19 20:09:25.514 INFO  jdbc.sqltiming Line:373 - select bookchecke0_.item_id as item_id1_2_, bookchecke0_.fsid as fsid2_2_, bookchecke0_.got 
as got3_2_, bookchecke0_.name as name4_2_ from book_check bookchecke0_ where bookchecke0_.fsid='577153996063161' 
and bookchecke0_.name='media' 
 {executed in 2 msec}
2020-11-19 20:09:25.515 INFO  jdbc.resultsettable Line:610 - 
|--------|-----|----|-----|
|item_id |fsid |got |name |
|--------|-----|----|-----|
|--------|-----|----|-----|

2020-11-19 20:09:25.521 INFO  jdbc.sqltiming Line:373 - insert into book_check (fsid, got, name) values ('577153996063161', 1, 'media') 
 {executed in 3 msec}
2020-11-19 20:09:25.522 INFO  jdbc.sqltiming Line:373 - getGeneratedKeys on query: insert into book_check (fsid, got, name) values ('577153996063161', 
1, 'media') 
 {executed in 0 msec}
2020-11-19 20:09:25.524 INFO  jdbc.resultsettable Line:610 - 
|--------------|
|generated_key |
|--------------|
|30            |
|--------------|

2020-11-19 20:09:25.535 INFO  jdbc.sqltiming Line:373 - select bookfieldf0_.entity_id as entity_i1_7_, bookfieldf0_.bundle as bundle2_7_, bookfieldf0_.delta 
as delta3_7_, bookfieldf0_.field_fsid_value as field_fs4_7_, bookfieldf0_.langcode as langcode5_7_, 
bookfieldf0_.revision_id as revision6_7_ from node__field_fsid bookfieldf0_ where bookfieldf0_.field_fsid_value='577153996063161' 
 {executed in 1 msec}
2020-11-19 20:09:25.537 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------|---------|------------|
|entity_id |bundle |delta |field_fsid_value |langcode |revision_id |
|----------|-------|------|-----------------|---------|------------|
|----------|-------|------|-----------------|---------|------------|

2020-11-19 20:09:25.541 INFO  jdbc.sqltiming Line:373 - insert into node_revision (langcode, nid, revision_default, revision_timestamp, revision_uid) 
values ('zh-hans', 0, 1, 1605787765, 1) 
 {executed in 1 msec}
2020-11-19 20:09:25.543 INFO  jdbc.sqltiming Line:373 - getGeneratedKeys on query: insert into node_revision (langcode, nid, revision_default, revision_timestamp, 
revision_uid) values ('zh-hans', 0, 1, 1605787765, 1) 
 {executed in 1 msec}
2020-11-19 20:09:25.544 INFO  jdbc.resultsettable Line:610 - 
|--------------|
|generated_key |
|--------------|
|13            |
|--------------|

2020-11-19 20:09:25.552 INFO  jdbc.sqltiming Line:373 - insert into node (langcode, type, uuid, vid) values ('zh-hans', 'book', '0ab9b3a6-b0a3-4179-bbd7-528fab4b485f', 
13) 
 {executed in 1 msec}
2020-11-19 20:09:25.554 INFO  jdbc.sqltiming Line:373 - getGeneratedKeys on query: insert into node (langcode, type, uuid, vid) values ('zh-hans', 
'book', '0ab9b3a6-b0a3-4179-bbd7-528fab4b485f', 13) 
 {executed in 0 msec}
2020-11-19 20:09:25.556 INFO  jdbc.resultsettable Line:610 - 
|--------------|
|generated_key |
|--------------|
|13            |
|--------------|

2020-11-19 20:09:25.566 INFO  jdbc.sqltiming Line:373 - update node_revision set langcode='zh-hans', nid=13, revision_default=1, revision_timestamp=1605787765, 
revision_uid=1 where vid=13 
 {executed in 1 msec}
2020-11-19 20:09:25.573 INFO  jdbc.sqltiming Line:373 - select bookfieldf0_.entity_id as entity_i1_7_0_, bookfieldf0_.bundle as bundle2_7_0_, bookfieldf0_.delta 
as delta3_7_0_, bookfieldf0_.field_fsid_value as field_fs4_7_0_, bookfieldf0_.langcode as langcode5_7_0_, 
bookfieldf0_.revision_id as revision6_7_0_ from node__field_fsid bookfieldf0_ where bookfieldf0_.entity_id=13 
 {executed in 1 msec}
2020-11-19 20:09:25.575 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------|---------|------------|
|entity_id |bundle |delta |field_fsid_value |langcode |revision_id |
|----------|-------|------|-----------------|---------|------------|
|----------|-------|------|-----------------|---------|------------|

2020-11-19 20:09:25.580 INFO  jdbc.sqltiming Line:373 - insert into node__field_fsid (bundle, delta, field_fsid_value, langcode, revision_id, entity_id) 
values ('book', 0, '577153996063161', 'zh-hans', 13, 13) 
 {executed in 0 msec}
2020-11-19 20:09:25.586 INFO  jdbc.sqltiming Line:373 - select nodefieldf0_.entity_id as entity_i1_16_0_, nodefieldf0_.bundle as bundle2_16_0_, nodefieldf0_.delta 
as delta3_16_0_, nodefieldf0_.field_fsid_value as field_fs4_16_0_, nodefieldf0_.langcode as 
langcode5_16_0_, nodefieldf0_.revision_id as revision6_16_0_ from node_revision__field_fsid 
nodefieldf0_ where nodefieldf0_.entity_id=13 
 {executed in 1 msec}
2020-11-19 20:09:25.587 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------|---------|------------|
|entity_id |bundle |delta |field_fsid_value |langcode |revision_id |
|----------|-------|------|-----------------|---------|------------|
|----------|-------|------|-----------------|---------|------------|

2020-11-19 20:09:25.592 INFO  jdbc.sqltiming Line:373 - insert into node_revision__field_fsid (bundle, delta, field_fsid_value, langcode, revision_id, 
entity_id) values ('book', 0, '577153996063161', 'zh-hans', 13, 13) 
 {executed in 1 msec}
2020-11-19 20:09:25.598 INFO  jdbc.sqltiming Line:373 - select bookentity0_.nid as nid1_1_, bookentity0_.bid as bid2_1_, bookentity0_.depth as depth3_1_, 
bookentity0_.has_children as has_chil4_1_, bookentity0_.p1 as p5_1_, bookentity0_.p2 as p6_1_, 
bookentity0_.p3 as p7_1_, bookentity0_.p4 as p8_1_, bookentity0_.p5 as p9_1_, bookentity0_.pid 
as pid10_1_, bookentity0_.weight as weight11_1_ from book bookentity0_ where bookentity0_.nid=13 
 {executed in 1 msec}
2020-11-19 20:09:25.600 INFO  jdbc.resultsettable Line:610 - 
|----|----|------|-------------|---|---|---|---|---|----|-------|
|nid |bid |depth |has_children |p1 |p2 |p3 |p4 |p5 |pid |weight |
|----|----|------|-------------|---|---|---|---|---|----|-------|
|----|----|------|-------------|---|---|---|---|---|----|-------|

2020-11-19 20:09:25.604 INFO  jdbc.sqltiming Line:373 - select bookentity0_.nid as nid1_1_0_, bookentity0_.bid as bid2_1_0_, bookentity0_.depth as 
depth3_1_0_, bookentity0_.has_children as has_chil4_1_0_, bookentity0_.p1 as p5_1_0_, bookentity0_.p2 
as p6_1_0_, bookentity0_.p3 as p7_1_0_, bookentity0_.p4 as p8_1_0_, bookentity0_.p5 as p9_1_0_, 
bookentity0_.pid as pid10_1_0_, bookentity0_.weight as weight11_1_0_ from book bookentity0_ 
where bookentity0_.nid=13 
 {executed in 1 msec}
2020-11-19 20:09:25.606 INFO  jdbc.resultsettable Line:610 - 
|----|----|------|-------------|---|---|---|---|---|----|-------|
|nid |bid |depth |has_children |p1 |p2 |p3 |p4 |p5 |pid |weight |
|----|----|------|-------------|---|---|---|---|---|----|-------|
|----|----|------|-------------|---|---|---|---|---|----|-------|

2020-11-19 20:09:25.611 INFO  jdbc.sqltiming Line:373 - insert into book (bid, depth, has_children, p1, p2, p3, p4, p5, pid, weight, nid) values (1, 
3, 0, 1, 8, 13, 0, 0, 8, 0, 13) 
 {executed in 1 msec}
2020-11-19 20:09:25.617 INFO  jdbc.sqltiming Line:373 - select nodebodyen0_.entity_id as entity_i1_4_, nodebodyen0_.body_value as body_val2_4_, nodebodyen0_.body_summary 
as body_sum3_4_, nodebodyen0_.bundle as bundle4_4_, nodebodyen0_.delta as delta5_4_, nodebodyen0_.body_format 
as body_for6_4_, nodebodyen0_.langcode as langcode7_4_, nodebodyen0_.revision_id as revision8_4_ 
from node__body nodebodyen0_ where nodebodyen0_.entity_id=13 
 {executed in 1 msec}
2020-11-19 20:09:25.618 INFO  jdbc.resultsettable Line:610 - 
|----------|-----------|-------------|-------|------|------------|---------|------------|
|entity_id |body_value |body_summary |bundle |delta |body_format |langcode |revision_id |
|----------|-----------|-------------|-------|------|------------|---------|------------|
|----------|-----------|-------------|-------|------|------------|---------|------------|

2020-11-19 20:09:25.622 INFO  jdbc.sqltiming Line:373 - select nodebodyre0_.entity_id as entity_i1_13_0_, nodebodyre0_.body_value as body_val2_13_0_, 
nodebodyre0_.body_summary as body_sum3_13_0_, nodebodyre0_.bundle as bundle4_13_0_, nodebodyre0_.delta 
as delta5_13_0_, nodebodyre0_.body_format as body_for6_13_0_, nodebodyre0_.langcode as langcode7_13_0_, 
nodebodyre0_.revision_id as revision8_13_0_ from node_revision__body nodebodyre0_ where nodebodyre0_.entity_id=13 
 {executed in 1 msec}
2020-11-19 20:09:25.624 INFO  jdbc.resultsettable Line:610 - 
|----------|-----------|-------------|-------|------|------------|---------|------------|
|entity_id |body_value |body_summary |bundle |delta |body_format |langcode |revision_id |
|----------|-----------|-------------|-------|------|------------|---------|------------|
|----------|-----------|-------------|-------|------|------------|---------|------------|

2020-11-19 20:09:25.641 INFO  jdbc.sqltiming Line:373 - insert into node_revision__body (body_value, body_summary, bundle, delta, body_format, langcode, 
revision_id, entity_id) values ('<p>今天我们来继续学习基准测试框架 JMH。</p> <h2>@Fork 和 @BenchmarkMode</h2> 
<p>在上一篇的末尾，我们已经运行过由 JMH 项目编译生成的 jar 包了。下面是它的输出结果：</p> <pre style="position: relative;"><code> 
<table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
$ java -jar target/benchmarks.jar </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div 
class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> <td class="hljs-ln-code"> <div 
class="hljs-ln-line"> ... </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="3"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
# JMH version: 1.21 </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="4"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
# VM version: JDK 10.0.2, Java HotSpot(TM) 64-Bit Server VM, 10.0.2+13 </div></td> </tr> <tr> 
<td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> # VM invoker: /Library/Java/JavaVirtualMachines/jdk-10.0.2.jdk/Contents/Home/bin/java 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> # VM options: &lt;none&gt; </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="7"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> # Warmup: 5 iterations, 10 s each </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="8"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> # Measurement: 5 iterations, 10 s each 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="9"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> # Timeout: 10 min per iteration </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="10"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> # Threads: 1 thread, will synchronize 
iterations </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" 
data-line-number="11"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> # Benchmark 
mode: Throughput, ops/time </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="12"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
# Benchmark: org.sample.MyBenchmark.testMethod </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="13"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="14"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
# Run progress: 0,00% complete, ETA 00:08:20 </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="15"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> # Fork: 1 of 5 </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="16"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> # Warmup Iteration 1: 1023500,647 ops/s </div></td> </tr> <tr> <td 
class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="17"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> # Warmup Iteration 2: 1030767,909 ops/s 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="18"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> # Warmup Iteration 3: 1018212,559 ops/s 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="19"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> # Warmup Iteration 4: 1002045,519 ops/s 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="20"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> # Warmup Iteration 5: 1004210,056 ops/s 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="21"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> Iteration 1: 1010251,342 ops/s </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="22"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> Iteration 2: 1005717,344 ops/s </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="23"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> Iteration 3: 1004751,523 ops/s </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="24"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> Iteration 4: 1003034,640 ops/s </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="25"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> Iteration 5: 997003,830 ops/s </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="26"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="27"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> # Run progress: 20,00% complete, ETA 00:06:41 </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="28"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> # Fork: 2 of 5 </div></td> </tr> <tr> 
<td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="29"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> ... </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="30"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="31"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
# Run progress: 80,00% complete, ETA 00:01:40 </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="32"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> # Fork: 5 of 5 </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="33"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> # Warmup Iteration 1: 988321,959 ops/s </div></td> </tr> <tr> <td 
class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="34"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> # Warmup Iteration 2: 999486,531 ops/s 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="35"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> # Warmup Iteration 3: 1004856,886 ops/s 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="36"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> # Warmup Iteration 4: 1004810,860 ops/s 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="37"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> # Warmup Iteration 5: 1002332,077 ops/s 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="38"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> Iteration 1: 1011871,670 ops/s </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="39"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> Iteration 2: 1002653,844 ops/s </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="40"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> Iteration 3: 1003568,030 ops/s </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="41"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> Iteration 4: 1002724,752 ops/s </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="42"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> Iteration 5: 1001507,408 ops/s </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="43"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="44"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="45"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
Result "org.sample.MyBenchmark.testMethod": </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="46"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> 1004801,393 ±(99.9%) 4055,462 ops/s [Average] </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="47"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> (min, avg, max) = (992193,459, 1004801,393, 
1014504,226), stdev = 5413,926 </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="48"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
CI (99.9%): [1000745,931, 1008856,856] (assumes normal distribution) </div></td> </tr> <tr> 
<td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="49"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="50"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="51"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
# Run complete. Total time: 00:08:22 </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div 
class="hljs-ln-line hljs-ln-n" data-line-number="52"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="53"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
... </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" 
data-line-number="54"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="55"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> Benchmark Mode Cnt Score Error Units </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="56"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> MyBenchmark.testMethod thrpt 25 1004801,393 
± 4055,462 ops/s </div></td> </tr> </tbody> </table></code> <div class="richcontent-pre-copy"> 
<span class="iconfont"></span>复制代码 </div></pre> <p>在上面这段输出中，我们暂且忽略最开始的 Warning 以及打印出来的配置信息，直接看接下来貌似重复的五段输出。</p> 
<pre style="position: relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> # Run progress: 0,00% complete, ETA 00:08:20 </div></td> </tr> <tr> 
<td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> # Fork: 1 of 5 </div></td> </tr> <tr> 
<td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> # Warmup Iteration 1: 1023500,647 ops/s 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> # Warmup Iteration 2: 1030767,909 ops/s 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> # Warmup Iteration 3: 1018212,559 ops/s 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> # Warmup Iteration 4: 1002045,519 ops/s 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="7"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> # Warmup Iteration 5: 1004210,056 ops/s 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="8"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> Iteration 1: 1010251,342 ops/s </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="9"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> Iteration 2: 1005717,344 ops/s </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="10"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> Iteration 3: 1004751,523 ops/s </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="11"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> Iteration 4: 1003034,640 ops/s </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="12"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> Iteration 5: 997003,830 ops/s </div></td> 
</tr> </tbody> </table></code> <div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 
</div></pre> <p>你应该已经留意到<code>Fork: 1 of 5</code>的字样。这里指的是 JMH 会 Fork 出一个新的 Java 虚拟机，来运行性能基准测试。</p> 
<p>之所以另外启动一个 Java 虚拟机进行性能基准测试，是为了获得一个相对干净的虚拟机环境。</p> <p>在介绍反射的那篇文章中，我就已经演示过因为类型 profile 被污染，而导致无法内联的情况。使用新的虚拟机，将极大地降低被上述情况干扰的可能性，从而保证更加精确的性能数据。</p> 
<p>在介绍虚方法内联的那篇文章中，我讲解过基于类层次分析的完全内联。新启动的 Java 虚拟机，其加载的与测试无关的抽象类子类或接口实现相对较少。因此，具体是否进行完全内联将交由开发人员来决定。</p> 
<p>关于这种情况，JMH 提供了一个性能测试案例 [1]。如果你感兴趣的话，可以下载下来自己跑一遍。</p> <p>除了对即时编译器的影响之外，Fork 出新的 Java 虚拟机还会提升性能数据的准确度。</p><!-- 
[[[read_end]]] --> <p>这主要是因为不少 Java 虚拟机的优化会带来不确定性，例如 TLAB 内存分配（TLAB 的大小会变化），偏向锁、轻量锁算法，并发数据结构等。这些不确定性都可能导致不同 
Java 虚拟机中运行的性能测试的结果不同，例如 JMH 这一性能的测试案例 [2]。</p> <p>在这种情况下，通过运行更多的 Fork，并将每个 Java 虚拟机的性能测试结果平均起来，可以增强最终数据的可信度，使其误差更小。在 
JMH 中，你可以通过<code>@Fork</code>注解来配置，具体如下述代码所示：</p> <pre style="position: relative;"><code> <table 
class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" 
data-line-number="1"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> @Fork(10) 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> public class MyBenchmark { </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> ... </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> } </div></td> </tr> </tbody> </table></code> <div class="richcontent-pre-copy"> 
<span class="iconfont"></span>复制代码 </div></pre> <p>让我们回到刚刚的输出结果。每个 Fork 包含了 5 个预热迭代（warmup 
iteration，如<code># Warmup Iteration 1: 1023500,647 ops/s</code>）以及 5 个测试迭代（measurement iteration，如<code>Iteration&nbsp; 
&nbsp;1: 1010251,342 ops/s</code>）。</p> <p>每个迭代后都跟着一个数据，代表本次迭代的吞吐量，也就是每秒运行了多少次操作（operations/s，或 
ops/s）。默认情况下，一次操作指的是调用一次测试方法<code>testMethod</code>。</p> <p>除了吞吐量之外，我们还可以输出其他格式的性能数据，例如运行一次操作的平均时间。具体的配置方法以及对应参数如下述代码以及下表所示：</p> 
<pre style="position: relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> @BenchmarkMode(Mode.AverageTime) </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> public class MyBenchmark { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> ... </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="4"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
} </div></td> </tr> </tbody> </table></code> <div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 
</div></pre> <p>一般来说，默认使用的吞吐量已足够满足大多数测试需求了。</p> <h2>@Warmup 和 @Measurement</h2> <p>之所以区分预热迭代和测试迭代，是为了在记录性能数据之前，将 
Java 虚拟机带至一个稳定状态。</p> <p>这里的稳定状态，不仅包括测试方法被即时编译成机器码，还包括 Java 虚拟机中各种自适配优化算法能够稳定下来，如前面提到的 TLAB 
大小，亦或者是使用传统垃圾回收器时的 Eden 区、Survivor 区和老年代的大小。</p> <p>一般来说，预热迭代的数目以及每次预热迭代的时间，需要由你根据所要测试的业务逻辑代码来调配。通常的做法便是在首次运行时配置较多次迭代，并监控性能数据达到稳定状态时的迭代数目。</p> 
<p>不少性能评测框架都会自动检测稳定状态。它们所采用的算法是计算迭代之间的差值，如果连续几个迭代与前一迭代的差值均小于某个值，便将这几个迭代以及之后的迭代当成稳定状态。</p> <p>这种做法有一个缺陷，那便是在达到最终稳定状态前，程序可能拥有多个中间稳定状态。例如通过 
Java 上的 JavaScript 引擎 Nashorn 运行 JavaScript 代码，便可能出现多个中间稳定状态的情况。（具体可参考 Aleksey Shipilev 的 devoxx 
2013 演讲 [3] 的第 21 页。）</p> <p>总而言之，开发人员需要自行决定预热迭代的次数以及每次迭代的持续时间。</p> <p>通常来说，我会在保持 5-10 个预热迭代的前提下（这样可以看出是否达到稳定状况），将总的预热时间优化至最少，以便节省性能测试的机器时间。（这在持续集成 
/ 回归测试的硬件资源跟不上代码提交速度的团队中非常重要。）</p> <p>当确定了预热迭代的次数以及每次迭代的持续时间之后，我们便可以通过<code>@Warmup</code>注解来进行配置，如下述代码所示：</p> 
<pre style="position: relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> @Warmup(iterations=10, time=100, timeUnit=TimeUnit.MILLISECONDS, 
batchSize=10) </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="2"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
public class MyBenchmark { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="3"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
... </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" 
data-line-number="4"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> } </div></td> 
</tr> </tbody> </table></code> <div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 
</div></pre> <p><code>@Warmup</code>注解有四个参数，分别为预热迭代的次数<code>iterations</code>，每次迭代持续的时间<code>time</code>和<code>timeUnit</code>（前者是数值，后者是单位。例如上面代码代表的是每次迭代持续 
100 毫秒），以及每次操作包含多少次对测试方法的调用<code>batchSize</code>。</p> <p>测试迭代可通过<code>@Measurement</code>注解来进行配置。它的可配置选项和<code>@Warmup</code>的一致，这里就不再重复了。与预热迭代不同的是，每个 
Fork 中测试迭代的数目越多，我们得到的性能数据也就越精确。</p> <h2>@State、@Setup 和 @TearDown</h2> <p>通常来说，我们所要测试的业务逻辑只是整个应用程序中的一小部分，例如某个具体的 
web app 请求。这要求在每次调用测试方法前，程序处于准备接收请求的状态。</p> <p>我们可以把上述场景抽象一下，变成程序从某种状态到另一种状态的转换，而性能测试，便是在收集该转换的性能数据。</p> 
<p>JMH 提供了<code>@State</code>注解，被它标注的类便是程序的状态。由于 JMH 将负责生成这些状态类的实例，因此，它要求状态类必须拥有无参数构造器，以及当状态类为内部类时，该状态类必须是静态的。</p> 
<p>JMH 还将程序状态细分为整个虚拟机的程序状态，线程私有的程序状态，以及线程组私有的程序状态，分别对应<code>@State</code>注解的参数<code>Scope.Benchmark</code>，<code>Scope.Thread</code>和<code>Scope.Group</code>。</p> 
<p>需要注意的是，这里的线程组并非 JDK 中的那个概念，而是 JMH 自己定义的概念。具体可以参考<code>@GroupThreads</code>注解 [4]，以及这个案例 
[5]。</p> <p><code>@State</code>的配置方法以及状态类的用法如下所示：</p> <pre style="position: relative;"><code> 
<table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
public class MyBenchmark { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="2"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
@State(Scope.Benchmark) </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="3"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
public static class MyBenchmarkState { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> String message = "exception"; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> } </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="6"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="7"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> @Benchmark </div></td> </tr> <tr> <td 
class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="8"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> public void testMethod(MyBenchmarkState 
state) { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" 
data-line-number="9"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> new Exception(state.message); 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="10"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> } </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="11"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> } </div></td> </tr> </tbody> </table></code> <div class="richcontent-pre-copy"> 
<span class="iconfont"></span>复制代码 </div></pre> <p>我们可以看到，状态类是通过方法参数的方式传入测试方法之中的。JMH 将负责把所构造的状态类实例传入该方法之中。</p> 
<p>不过，如果<code>MyBenchmark</code>被标注为<code>@State</code>，那么我们可以不用在测试方法中定义额外的参数，而是直接访问<code>MyBenchmark</code>类中的实例变量。</p> 
<p>和 JUnit 测试一样，我们可以在测试前初始化程序状态，在测试后校验程序状态。这两种操作分别对应<code>@Setup</code>和<code>@TearDown</code>注解，被它们标注的方法必须是状态类中的方法。</p> 
<p>而且，JMH 并不限定状态类中<code>@Setup</code>方法以及<code>@TearDown</code>方法的数目。当存在多个<code>@Setup</code>方法或者<code>@TearDown</code>方法时，JMH 
将按照定义的先后顺序执行。</p> <p>JMH 对<code>@Setup</code>方法以及<code>@TearDown</code>方法的调用时机是可配置的。可供选择的粒度有在整个性能测试前后调用，在每个迭代前后调用，以及在每次调用测试方法前后调用。其中，最后一个粒度将影响测试数据的精度。</p> 
<p>这三种粒度分别对应<code>@Setup</code>和<code>@TearDown</code>注解的参数<code>Level.Trial</code>，<code>Level.Iteration</code>，以及<code>Level.Invocation</code>。具体的用法如下所示：</p> 
<pre style="position: relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> public class MyBenchmark { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> @State(Scope.Benchmark) </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> public static class MyBenchmarkState { </div></td> </tr> <tr> <td 
class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> int count; </div></td> </tr> <tr> <td 
class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> @Setup(Level.Invocation) </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="7"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> public void before() { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="8"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> count = 0; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div 
class="hljs-ln-line hljs-ln-n" data-line-number="9"></div></td> <td class="hljs-ln-code"> <div 
class="hljs-ln-line"> } </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="10"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="11"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> @TearDown(Level.Invocation) </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="12"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> public void after() { </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="13"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> // Run with -ea </div></td> </tr> <tr> 
<td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="14"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> assert count == 1 : "ERROR"; </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="15"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> } </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="16"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> } </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="17"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="18"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> @Benchmark </div></td> </tr> <tr> <td 
class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="19"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> public void testMethod(MyBenchmarkState 
state) { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" 
data-line-number="20"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> state.count++; 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="21"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> } </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="22"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> } </div></td> </tr> </tbody> </table></code> <div class="richcontent-pre-copy"> 
<span class="iconfont"></span>复制代码 </div></pre> <h2>即时编译相关功能</h2> <p>JMH 还提供了不少控制即时编译的功能，例如可以控制每个方法内联与否的<code>@CompilerControl</code>注解 
[6]。</p> <p>另外一个更小粒度的功能则是<code>Blackhole</code>类。它里边的<code>consume</code>方法可以防止即时编译器将所传入的值给优化掉。</p> 
<p>具体的使用方法便是为被<code>@Benchmark</code>注解标注了的测试方法增添一个类型为<code>Blackhole</code>的参数，并且在测试方法的代码中调用其实例方法<code>Blackhole.consume</code>，如下述代码所示：</p> 
<pre style="position: relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> @Benchmark </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div 
class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> <td class="hljs-ln-code"> <div 
class="hljs-ln-line"> public void testMethod(Blackhole bh) { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> bh.consume(new Object()); // prevents escape analysis </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> } </div></td> </tr> </tbody> </table></code> 
<div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 </div></pre> <p>需要注意的是，它并不会阻止对传入值的计算的优化。举个例子，在下面这段代码中，我将<code>3+4</code>的值传入<code>Blackhole.consume</code>方法中。即时编译器仍旧会进行常量折叠，而<code>Blackhole</code>将阻止即时编译器把所得到的常量值 
7 给优化消除掉。</p> <pre style="position: relative;"><code> <table class="hljs-ln"> <tbody> <tr> 
<td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> @Benchmark </div></td> </tr> <tr> <td 
class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> public void testMethod(Blackhole bh) { 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> bh.consume(3+4); </div></td> </tr> <tr> 
<td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> } </div></td> </tr> </tbody> </table></code> 
<div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 </div></pre> <p>除了防止死代码消除的<code>consume</code>之外，<code>Blackhole</code>类还提供了一个静态方法<code>consumeCPU</code>，来消耗 
CPU 时间。该方法将接收一个 long 类型的参数，这个参数与所消耗的 CPU 时间呈线性相关。</p> <h2>总结与实践</h2> <p>今天我介绍了基准测试框架 JMH 的进阶功能。我们来回顾一下。</p> 
<ul> <li><code>@Fork</code>允许开发人员指定所要 Fork 出的 Java 虚拟机的数目。</li> <li><code>@BenchmarkMode</code>允许指定性能数据的格式。</li> 
<li><code>@Warmup</code>和<code>@Measurement</code>允许配置预热迭代或者测试迭代的数目，每个迭代的时间以及每个操作包含多少次对测试方法的调用。</li> 
<li><code>@State</code>允许配置测试程序的状态。测试前对程序状态的初始化以及测试后对程序状态的恢复或者校验可分别通过<code>@Setup</code>和<code>@TearDown</code>来实现。</li> 
</ul> <hr> <p>今天的实践环节，请逐个运行 JMH 的官方案例 [7]，具体每个案例的意义都在代码注释之中。</p> <p>最后给大家推荐一下 Aleksey Shipilev 
的 devoxx 2013 演讲（Slides[8]；视频 [9]，请自备梯子）。如果你已经完成本专栏前面两部分，特别是第二部分的学习，那么这个演讲里的绝大部分内容你应该都能理解。</p> 
<p>[1] <a href="http://hg.openjdk.java.net/code-tools/jmh/file/3769055ad883/jmh-samples/src/main/java/org/openjdk/jmh/samples/JMHSample_12_Forking.java">http://hg.openjdk.java.net/code-tools/jmh/file/3769055ad883/jmh-samples/src/main/java/org/openjdk/jmh/samples/JMHSample_12_Forking.java</a><br> 
[2] <a href="http://hg.openjdk.java.net/code-tools/jmh/file/3769055ad883/jmh-samples/src/main/java/org/openjdk/jmh/samples/JMHSample_13_RunToRun.java">http://hg.openjdk.java.net/code-tools/jmh/file/3769055ad883/jmh-samples/src/main/java/org/openjdk/jmh/samples/JMHSample_13_RunToRun.java</a><br> 
[3] <a href="https://shipilev.net/talks/devoxx-Nov2013-benchmarking.pdf">https://shipilev.net/talks/devoxx-Nov2013-benchmarking.pdf</a><br> 
[4] <a href="http://hg.openjdk.java.net/code-tools/jmh/file/3769055ad883/jmh-core/src/main/java/org/openjdk/jmh/annotations/GroupThreads.java">http://hg.openjdk.java.net/code-tools/jmh/file/3769055ad883/jmh-core/src/main/java/org/openjdk/jmh/annotations/GroupThreads.java</a><br> 
[5] <a href="http://hg.openjdk.java.net/code-tools/jmh/file/3769055ad883/jmh-samples/src/main/java/org/openjdk/jmh/samples/JMHSample_15_Asymmetric.java">http://hg.openjdk.java.net/code-tools/jmh/file/3769055ad883/jmh-samples/src/main/java/org/openjdk/jmh/samples/JMHSample_15_Asymmetric.java</a><br> 
[6] <a href="http://hg.openjdk.java.net/code-tools/jmh/file/3769055ad883/jmh-core/src/main/java/org/openjdk/jmh/annotations/CompilerControl.java">http://hg.openjdk.java.net/code-tools/jmh/file/3769055ad883/jmh-core/src/main/java/org/openjdk/jmh/annotations/CompilerControl.java</a><br> 
[7] <a href="http://hg.openjdk.java.net/code-tools/jmh/file/3769055ad883/jmh-samples/src/main/java/org/openjdk/jmh/samples">http://hg.openjdk.java.net/code-tools/jmh/file/3769055ad883/jmh-samples/src/main/java/org/openjdk/jmh/samples</a><br> 
[8] <a href="https://shipilev.net/talks/devoxx-Nov2013-benchmarking.pdf">https://shipilev.net/talks/devoxx-Nov2013-benchmarking.pdf</a><br> 
[9] <a href="https://www.youtube.com/watch?v=VaWgOCDBxYw">https://www.youtube.com/watch?v=VaWgOCDBxYw</a></p> 
<p><img src="https://static001.geekbang.org/resource/image/2a/d5/2a62e58cbdf56a5dc40748567d346fd5.jpg" 
alt=""></p>', '', 'book', 0, 'full_html', 'zh-hans', 13, 13) 
 {executed in 8 msec}
2020-11-19 20:09:25.651 INFO  jdbc.sqltiming Line:373 - select nodebodyen0_.entity_id as entity_i1_4_0_, nodebodyen0_.body_value as body_val2_4_0_, 
nodebodyen0_.body_summary as body_sum3_4_0_, nodebodyen0_.bundle as bundle4_4_0_, nodebodyen0_.delta 
as delta5_4_0_, nodebodyen0_.body_format as body_for6_4_0_, nodebodyen0_.langcode as langcode7_4_0_, 
nodebodyen0_.revision_id as revision8_4_0_ from node__body nodebodyen0_ where nodebodyen0_.entity_id=13 
 {executed in 1 msec}
2020-11-19 20:09:25.653 INFO  jdbc.resultsettable Line:610 - 
|----------|-----------|-------------|-------|------|------------|---------|------------|
|entity_id |body_value |body_summary |bundle |delta |body_format |langcode |revision_id |
|----------|-----------|-------------|-------|------|------------|---------|------------|
|----------|-----------|-------------|-------|------|------------|---------|------------|

2020-11-19 20:09:25.676 INFO  jdbc.sqltiming Line:373 - insert into node__body (body_value, body_summary, bundle, delta, body_format, langcode, revision_id, 
entity_id) values ('<p>今天我们来继续学习基准测试框架 JMH。</p> <h2>@Fork 和 @BenchmarkMode</h2> <p>在上一篇的末尾，我们已经运行过由 
JMH 项目编译生成的 jar 包了。下面是它的输出结果：</p> <pre style="position: relative;"><code> <table class="hljs-ln"> 
<tbody> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> $ java -jar target/benchmarks.jar </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> ... </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> # JMH version: 1.21 </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> # VM version: JDK 10.0.2, Java HotSpot(TM) 64-Bit Server VM, 10.0.2+13 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> # VM invoker: /Library/Java/JavaVirtualMachines/jdk-10.0.2.jdk/Contents/Home/bin/java 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> # VM options: &lt;none&gt; </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="7"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> # Warmup: 5 iterations, 10 s each </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="8"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> # Measurement: 5 iterations, 10 s each 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="9"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> # Timeout: 10 min per iteration </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="10"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> # Threads: 1 thread, will synchronize 
iterations </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" 
data-line-number="11"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> # Benchmark 
mode: Throughput, ops/time </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="12"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
# Benchmark: org.sample.MyBenchmark.testMethod </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="13"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="14"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
# Run progress: 0,00% complete, ETA 00:08:20 </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="15"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> # Fork: 1 of 5 </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="16"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> # Warmup Iteration 1: 1023500,647 ops/s </div></td> </tr> <tr> <td 
class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="17"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> # Warmup Iteration 2: 1030767,909 ops/s 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="18"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> # Warmup Iteration 3: 1018212,559 ops/s 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="19"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> # Warmup Iteration 4: 1002045,519 ops/s 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="20"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> # Warmup Iteration 5: 1004210,056 ops/s 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="21"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> Iteration 1: 1010251,342 ops/s </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="22"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> Iteration 2: 1005717,344 ops/s </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="23"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> Iteration 3: 1004751,523 ops/s </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="24"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> Iteration 4: 1003034,640 ops/s </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="25"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> Iteration 5: 997003,830 ops/s </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="26"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="27"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> # Run progress: 20,00% complete, ETA 00:06:41 </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="28"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> # Fork: 2 of 5 </div></td> </tr> <tr> 
<td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="29"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> ... </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="30"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="31"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
# Run progress: 80,00% complete, ETA 00:01:40 </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="32"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> # Fork: 5 of 5 </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="33"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> # Warmup Iteration 1: 988321,959 ops/s </div></td> </tr> <tr> <td 
class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="34"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> # Warmup Iteration 2: 999486,531 ops/s 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="35"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> # Warmup Iteration 3: 1004856,886 ops/s 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="36"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> # Warmup Iteration 4: 1004810,860 ops/s 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="37"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> # Warmup Iteration 5: 1002332,077 ops/s 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="38"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> Iteration 1: 1011871,670 ops/s </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="39"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> Iteration 2: 1002653,844 ops/s </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="40"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> Iteration 3: 1003568,030 ops/s </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="41"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> Iteration 4: 1002724,752 ops/s </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="42"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> Iteration 5: 1001507,408 ops/s </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="43"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="44"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="45"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
Result "org.sample.MyBenchmark.testMethod": </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="46"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> 1004801,393 ±(99.9%) 4055,462 ops/s [Average] </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="47"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> (min, avg, max) = (992193,459, 1004801,393, 
1014504,226), stdev = 5413,926 </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="48"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
CI (99.9%): [1000745,931, 1008856,856] (assumes normal distribution) </div></td> </tr> <tr> 
<td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="49"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="50"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="51"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
# Run complete. Total time: 00:08:22 </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div 
class="hljs-ln-line hljs-ln-n" data-line-number="52"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="53"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
... </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" 
data-line-number="54"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="55"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> Benchmark Mode Cnt Score Error Units </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="56"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> MyBenchmark.testMethod thrpt 25 1004801,393 
± 4055,462 ops/s </div></td> </tr> </tbody> </table></code> <div class="richcontent-pre-copy"> 
<span class="iconfont"></span>复制代码 </div></pre> <p>在上面这段输出中，我们暂且忽略最开始的 Warning 以及打印出来的配置信息，直接看接下来貌似重复的五段输出。</p> 
<pre style="position: relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> # Run progress: 0,00% complete, ETA 00:08:20 </div></td> </tr> <tr> 
<td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> # Fork: 1 of 5 </div></td> </tr> <tr> 
<td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> # Warmup Iteration 1: 1023500,647 ops/s 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> # Warmup Iteration 2: 1030767,909 ops/s 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> # Warmup Iteration 3: 1018212,559 ops/s 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> # Warmup Iteration 4: 1002045,519 ops/s 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="7"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> # Warmup Iteration 5: 1004210,056 ops/s 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="8"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> Iteration 1: 1010251,342 ops/s </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="9"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> Iteration 2: 1005717,344 ops/s </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="10"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> Iteration 3: 1004751,523 ops/s </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="11"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> Iteration 4: 1003034,640 ops/s </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="12"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> Iteration 5: 997003,830 ops/s </div></td> 
</tr> </tbody> </table></code> <div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 
</div></pre> <p>你应该已经留意到<code>Fork: 1 of 5</code>的字样。这里指的是 JMH 会 Fork 出一个新的 Java 虚拟机，来运行性能基准测试。</p> 
<p>之所以另外启动一个 Java 虚拟机进行性能基准测试，是为了获得一个相对干净的虚拟机环境。</p> <p>在介绍反射的那篇文章中，我就已经演示过因为类型 profile 被污染，而导致无法内联的情况。使用新的虚拟机，将极大地降低被上述情况干扰的可能性，从而保证更加精确的性能数据。</p> 
<p>在介绍虚方法内联的那篇文章中，我讲解过基于类层次分析的完全内联。新启动的 Java 虚拟机，其加载的与测试无关的抽象类子类或接口实现相对较少。因此，具体是否进行完全内联将交由开发人员来决定。</p> 
<p>关于这种情况，JMH 提供了一个性能测试案例 [1]。如果你感兴趣的话，可以下载下来自己跑一遍。</p> <p>除了对即时编译器的影响之外，Fork 出新的 Java 虚拟机还会提升性能数据的准确度。</p><!-- 
[[[read_end]]] --> <p>这主要是因为不少 Java 虚拟机的优化会带来不确定性，例如 TLAB 内存分配（TLAB 的大小会变化），偏向锁、轻量锁算法，并发数据结构等。这些不确定性都可能导致不同 
Java 虚拟机中运行的性能测试的结果不同，例如 JMH 这一性能的测试案例 [2]。</p> <p>在这种情况下，通过运行更多的 Fork，并将每个 Java 虚拟机的性能测试结果平均起来，可以增强最终数据的可信度，使其误差更小。在 
JMH 中，你可以通过<code>@Fork</code>注解来配置，具体如下述代码所示：</p> <pre style="position: relative;"><code> <table 
class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" 
data-line-number="1"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> @Fork(10) 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> public class MyBenchmark { </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> ... </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> } </div></td> </tr> </tbody> </table></code> <div class="richcontent-pre-copy"> 
<span class="iconfont"></span>复制代码 </div></pre> <p>让我们回到刚刚的输出结果。每个 Fork 包含了 5 个预热迭代（warmup 
iteration，如<code># Warmup Iteration 1: 1023500,647 ops/s</code>）以及 5 个测试迭代（measurement iteration，如<code>Iteration&nbsp; 
&nbsp;1: 1010251,342 ops/s</code>）。</p> <p>每个迭代后都跟着一个数据，代表本次迭代的吞吐量，也就是每秒运行了多少次操作（operations/s，或 
ops/s）。默认情况下，一次操作指的是调用一次测试方法<code>testMethod</code>。</p> <p>除了吞吐量之外，我们还可以输出其他格式的性能数据，例如运行一次操作的平均时间。具体的配置方法以及对应参数如下述代码以及下表所示：</p> 
<pre style="position: relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> @BenchmarkMode(Mode.AverageTime) </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> public class MyBenchmark { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> ... </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="4"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
} </div></td> </tr> </tbody> </table></code> <div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 
</div></pre> <p>一般来说，默认使用的吞吐量已足够满足大多数测试需求了。</p> <h2>@Warmup 和 @Measurement</h2> <p>之所以区分预热迭代和测试迭代，是为了在记录性能数据之前，将 
Java 虚拟机带至一个稳定状态。</p> <p>这里的稳定状态，不仅包括测试方法被即时编译成机器码，还包括 Java 虚拟机中各种自适配优化算法能够稳定下来，如前面提到的 TLAB 
大小，亦或者是使用传统垃圾回收器时的 Eden 区、Survivor 区和老年代的大小。</p> <p>一般来说，预热迭代的数目以及每次预热迭代的时间，需要由你根据所要测试的业务逻辑代码来调配。通常的做法便是在首次运行时配置较多次迭代，并监控性能数据达到稳定状态时的迭代数目。</p> 
<p>不少性能评测框架都会自动检测稳定状态。它们所采用的算法是计算迭代之间的差值，如果连续几个迭代与前一迭代的差值均小于某个值，便将这几个迭代以及之后的迭代当成稳定状态。</p> <p>这种做法有一个缺陷，那便是在达到最终稳定状态前，程序可能拥有多个中间稳定状态。例如通过 
Java 上的 JavaScript 引擎 Nashorn 运行 JavaScript 代码，便可能出现多个中间稳定状态的情况。（具体可参考 Aleksey Shipilev 的 devoxx 
2013 演讲 [3] 的第 21 页。）</p> <p>总而言之，开发人员需要自行决定预热迭代的次数以及每次迭代的持续时间。</p> <p>通常来说，我会在保持 5-10 个预热迭代的前提下（这样可以看出是否达到稳定状况），将总的预热时间优化至最少，以便节省性能测试的机器时间。（这在持续集成 
/ 回归测试的硬件资源跟不上代码提交速度的团队中非常重要。）</p> <p>当确定了预热迭代的次数以及每次迭代的持续时间之后，我们便可以通过<code>@Warmup</code>注解来进行配置，如下述代码所示：</p> 
<pre style="position: relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> @Warmup(iterations=10, time=100, timeUnit=TimeUnit.MILLISECONDS, 
batchSize=10) </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="2"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
public class MyBenchmark { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="3"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
... </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" 
data-line-number="4"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> } </div></td> 
</tr> </tbody> </table></code> <div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 
</div></pre> <p><code>@Warmup</code>注解有四个参数，分别为预热迭代的次数<code>iterations</code>，每次迭代持续的时间<code>time</code>和<code>timeUnit</code>（前者是数值，后者是单位。例如上面代码代表的是每次迭代持续 
100 毫秒），以及每次操作包含多少次对测试方法的调用<code>batchSize</code>。</p> <p>测试迭代可通过<code>@Measurement</code>注解来进行配置。它的可配置选项和<code>@Warmup</code>的一致，这里就不再重复了。与预热迭代不同的是，每个 
Fork 中测试迭代的数目越多，我们得到的性能数据也就越精确。</p> <h2>@State、@Setup 和 @TearDown</h2> <p>通常来说，我们所要测试的业务逻辑只是整个应用程序中的一小部分，例如某个具体的 
web app 请求。这要求在每次调用测试方法前，程序处于准备接收请求的状态。</p> <p>我们可以把上述场景抽象一下，变成程序从某种状态到另一种状态的转换，而性能测试，便是在收集该转换的性能数据。</p> 
<p>JMH 提供了<code>@State</code>注解，被它标注的类便是程序的状态。由于 JMH 将负责生成这些状态类的实例，因此，它要求状态类必须拥有无参数构造器，以及当状态类为内部类时，该状态类必须是静态的。</p> 
<p>JMH 还将程序状态细分为整个虚拟机的程序状态，线程私有的程序状态，以及线程组私有的程序状态，分别对应<code>@State</code>注解的参数<code>Scope.Benchmark</code>，<code>Scope.Thread</code>和<code>Scope.Group</code>。</p> 
<p>需要注意的是，这里的线程组并非 JDK 中的那个概念，而是 JMH 自己定义的概念。具体可以参考<code>@GroupThreads</code>注解 [4]，以及这个案例 
[5]。</p> <p><code>@State</code>的配置方法以及状态类的用法如下所示：</p> <pre style="position: relative;"><code> 
<table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
public class MyBenchmark { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="2"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
@State(Scope.Benchmark) </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="3"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
public static class MyBenchmarkState { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> String message = "exception"; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> } </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="6"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="7"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> @Benchmark </div></td> </tr> <tr> <td 
class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="8"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> public void testMethod(MyBenchmarkState 
state) { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" 
data-line-number="9"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> new Exception(state.message); 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="10"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> } </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="11"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> } </div></td> </tr> </tbody> </table></code> <div class="richcontent-pre-copy"> 
<span class="iconfont"></span>复制代码 </div></pre> <p>我们可以看到，状态类是通过方法参数的方式传入测试方法之中的。JMH 将负责把所构造的状态类实例传入该方法之中。</p> 
<p>不过，如果<code>MyBenchmark</code>被标注为<code>@State</code>，那么我们可以不用在测试方法中定义额外的参数，而是直接访问<code>MyBenchmark</code>类中的实例变量。</p> 
<p>和 JUnit 测试一样，我们可以在测试前初始化程序状态，在测试后校验程序状态。这两种操作分别对应<code>@Setup</code>和<code>@TearDown</code>注解，被它们标注的方法必须是状态类中的方法。</p> 
<p>而且，JMH 并不限定状态类中<code>@Setup</code>方法以及<code>@TearDown</code>方法的数目。当存在多个<code>@Setup</code>方法或者<code>@TearDown</code>方法时，JMH 
将按照定义的先后顺序执行。</p> <p>JMH 对<code>@Setup</code>方法以及<code>@TearDown</code>方法的调用时机是可配置的。可供选择的粒度有在整个性能测试前后调用，在每个迭代前后调用，以及在每次调用测试方法前后调用。其中，最后一个粒度将影响测试数据的精度。</p> 
<p>这三种粒度分别对应<code>@Setup</code>和<code>@TearDown</code>注解的参数<code>Level.Trial</code>，<code>Level.Iteration</code>，以及<code>Level.Invocation</code>。具体的用法如下所示：</p> 
<pre style="position: relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> public class MyBenchmark { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> @State(Scope.Benchmark) </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> public static class MyBenchmarkState { </div></td> </tr> <tr> <td 
class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> int count; </div></td> </tr> <tr> <td 
class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> @Setup(Level.Invocation) </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="7"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> public void before() { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="8"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> count = 0; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div 
class="hljs-ln-line hljs-ln-n" data-line-number="9"></div></td> <td class="hljs-ln-code"> <div 
class="hljs-ln-line"> } </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="10"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="11"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> @TearDown(Level.Invocation) </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="12"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> public void after() { </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="13"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> // Run with -ea </div></td> </tr> <tr> 
<td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="14"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> assert count == 1 : "ERROR"; </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="15"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> } </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="16"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> } </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="17"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="18"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> @Benchmark </div></td> </tr> <tr> <td 
class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="19"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> public void testMethod(MyBenchmarkState 
state) { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" 
data-line-number="20"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> state.count++; 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="21"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> } </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="22"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> } </div></td> </tr> </tbody> </table></code> <div class="richcontent-pre-copy"> 
<span class="iconfont"></span>复制代码 </div></pre> <h2>即时编译相关功能</h2> <p>JMH 还提供了不少控制即时编译的功能，例如可以控制每个方法内联与否的<code>@CompilerControl</code>注解 
[6]。</p> <p>另外一个更小粒度的功能则是<code>Blackhole</code>类。它里边的<code>consume</code>方法可以防止即时编译器将所传入的值给优化掉。</p> 
<p>具体的使用方法便是为被<code>@Benchmark</code>注解标注了的测试方法增添一个类型为<code>Blackhole</code>的参数，并且在测试方法的代码中调用其实例方法<code>Blackhole.consume</code>，如下述代码所示：</p> 
<pre style="position: relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> @Benchmark </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div 
class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> <td class="hljs-ln-code"> <div 
class="hljs-ln-line"> public void testMethod(Blackhole bh) { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> bh.consume(new Object()); // prevents escape analysis </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> } </div></td> </tr> </tbody> </table></code> 
<div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 </div></pre> <p>需要注意的是，它并不会阻止对传入值的计算的优化。举个例子，在下面这段代码中，我将<code>3+4</code>的值传入<code>Blackhole.consume</code>方法中。即时编译器仍旧会进行常量折叠，而<code>Blackhole</code>将阻止即时编译器把所得到的常量值 
7 给优化消除掉。</p> <pre style="position: relative;"><code> <table class="hljs-ln"> <tbody> <tr> 
<td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> @Benchmark </div></td> </tr> <tr> <td 
class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> public void testMethod(Blackhole bh) { 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> bh.consume(3+4); </div></td> </tr> <tr> 
<td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> } </div></td> </tr> </tbody> </table></code> 
<div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 </div></pre> <p>除了防止死代码消除的<code>consume</code>之外，<code>Blackhole</code>类还提供了一个静态方法<code>consumeCPU</code>，来消耗 
CPU 时间。该方法将接收一个 long 类型的参数，这个参数与所消耗的 CPU 时间呈线性相关。</p> <h2>总结与实践</h2> <p>今天我介绍了基准测试框架 JMH 的进阶功能。我们来回顾一下。</p> 
<ul> <li><code>@Fork</code>允许开发人员指定所要 Fork 出的 Java 虚拟机的数目。</li> <li><code>@BenchmarkMode</code>允许指定性能数据的格式。</li> 
<li><code>@Warmup</code>和<code>@Measurement</code>允许配置预热迭代或者测试迭代的数目，每个迭代的时间以及每个操作包含多少次对测试方法的调用。</li> 
<li><code>@State</code>允许配置测试程序的状态。测试前对程序状态的初始化以及测试后对程序状态的恢复或者校验可分别通过<code>@Setup</code>和<code>@TearDown</code>来实现。</li> 
</ul> <hr> <p>今天的实践环节，请逐个运行 JMH 的官方案例 [7]，具体每个案例的意义都在代码注释之中。</p> <p>最后给大家推荐一下 Aleksey Shipilev 
的 devoxx 2013 演讲（Slides[8]；视频 [9]，请自备梯子）。如果你已经完成本专栏前面两部分，特别是第二部分的学习，那么这个演讲里的绝大部分内容你应该都能理解。</p> 
<p>[1] <a href="http://hg.openjdk.java.net/code-tools/jmh/file/3769055ad883/jmh-samples/src/main/java/org/openjdk/jmh/samples/JMHSample_12_Forking.java">http://hg.openjdk.java.net/code-tools/jmh/file/3769055ad883/jmh-samples/src/main/java/org/openjdk/jmh/samples/JMHSample_12_Forking.java</a><br> 
[2] <a href="http://hg.openjdk.java.net/code-tools/jmh/file/3769055ad883/jmh-samples/src/main/java/org/openjdk/jmh/samples/JMHSample_13_RunToRun.java">http://hg.openjdk.java.net/code-tools/jmh/file/3769055ad883/jmh-samples/src/main/java/org/openjdk/jmh/samples/JMHSample_13_RunToRun.java</a><br> 
[3] <a href="https://shipilev.net/talks/devoxx-Nov2013-benchmarking.pdf">https://shipilev.net/talks/devoxx-Nov2013-benchmarking.pdf</a><br> 
[4] <a href="http://hg.openjdk.java.net/code-tools/jmh/file/3769055ad883/jmh-core/src/main/java/org/openjdk/jmh/annotations/GroupThreads.java">http://hg.openjdk.java.net/code-tools/jmh/file/3769055ad883/jmh-core/src/main/java/org/openjdk/jmh/annotations/GroupThreads.java</a><br> 
[5] <a href="http://hg.openjdk.java.net/code-tools/jmh/file/3769055ad883/jmh-samples/src/main/java/org/openjdk/jmh/samples/JMHSample_15_Asymmetric.java">http://hg.openjdk.java.net/code-tools/jmh/file/3769055ad883/jmh-samples/src/main/java/org/openjdk/jmh/samples/JMHSample_15_Asymmetric.java</a><br> 
[6] <a href="http://hg.openjdk.java.net/code-tools/jmh/file/3769055ad883/jmh-core/src/main/java/org/openjdk/jmh/annotations/CompilerControl.java">http://hg.openjdk.java.net/code-tools/jmh/file/3769055ad883/jmh-core/src/main/java/org/openjdk/jmh/annotations/CompilerControl.java</a><br> 
[7] <a href="http://hg.openjdk.java.net/code-tools/jmh/file/3769055ad883/jmh-samples/src/main/java/org/openjdk/jmh/samples">http://hg.openjdk.java.net/code-tools/jmh/file/3769055ad883/jmh-samples/src/main/java/org/openjdk/jmh/samples</a><br> 
[8] <a href="https://shipilev.net/talks/devoxx-Nov2013-benchmarking.pdf">https://shipilev.net/talks/devoxx-Nov2013-benchmarking.pdf</a><br> 
[9] <a href="https://www.youtube.com/watch?v=VaWgOCDBxYw">https://www.youtube.com/watch?v=VaWgOCDBxYw</a></p> 
<p><img src="https://static001.geekbang.org/resource/image/2a/d5/2a62e58cbdf56a5dc40748567d346fd5.jpg" 
alt=""></p>', '', 'book', 0, 'full_html', 'zh-hans', 13, 13) 
 {executed in 14 msec}
2020-11-19 20:09:25.690 INFO  jdbc.sqltiming Line:373 - select nodefiledd0_.nid as nid1_10_, nodefiledd0_.changed as changed2_10_, nodefiledd0_.created 
as created3_10_, nodefiledd0_.default_langcode as default_4_10_, nodefiledd0_.langcode as langcode5_10_, 
nodefiledd0_.promote as promote6_10_, nodefiledd0_.revision_translation_affected as revision7_10_, 
nodefiledd0_.status as status8_10_, nodefiledd0_.sticky as sticky9_10_, nodefiledd0_.title 
as title10_10_, nodefiledd0_.type as type11_10_, nodefiledd0_.uid as uid12_10_, nodefiledd0_.vid 
as vid13_10_ from node_field_data nodefiledd0_ where nodefiledd0_.nid=13 
 {executed in 2 msec}
2020-11-19 20:09:25.692 INFO  jdbc.resultsettable Line:610 - 
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|-----|----|----|
|nid |changed |created |default_langcode |langcode |promote |revision_translation_affected |status |sticky |title |type |uid |vid |
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|-----|----|----|
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|-----|----|----|

2020-11-19 20:09:25.696 INFO  jdbc.sqltiming Line:373 - select nodefieldr0_.nid as nid1_11_0_, nodefieldr0_.changed as changed2_11_0_, nodefieldr0_.created 
as created3_11_0_, nodefieldr0_.default_langcode as default_4_11_0_, nodefieldr0_.langcode 
as langcode5_11_0_, nodefieldr0_.promote as promote6_11_0_, nodefieldr0_.revision_translation_affected 
as revision7_11_0_, nodefieldr0_.status as status8_11_0_, nodefieldr0_.sticky as sticky9_11_0_, 
nodefieldr0_.title as title10_11_0_, nodefieldr0_.uid as uid11_11_0_, nodefieldr0_.vid as vid12_11_0_ 
from node_field_revision nodefieldr0_ where nodefieldr0_.nid=13 
 {executed in 1 msec}
2020-11-19 20:09:25.698 INFO  jdbc.resultsettable Line:610 - 
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|----|----|
|nid |changed |created |default_langcode |langcode |promote |revision_translation_affected |status |sticky |title |uid |vid |
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|----|----|
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|----|----|

2020-11-19 20:09:25.703 INFO  jdbc.sqltiming Line:373 - insert into node_field_revision (changed, created, default_langcode, langcode, promote, revision_translation_affected, 
status, sticky, title, uid, vid, nid) values (1605787765, 1605787765, 1, 'zh-hans', 0, 1, 1, 
0, '29丨基准测试框架JMH（下）', 1, 13, 13) 
 {executed in 1 msec}
2020-11-19 20:09:25.710 INFO  jdbc.sqltiming Line:373 - select nodefiledd0_.nid as nid1_10_0_, nodefiledd0_.changed as changed2_10_0_, nodefiledd0_.created 
as created3_10_0_, nodefiledd0_.default_langcode as default_4_10_0_, nodefiledd0_.langcode 
as langcode5_10_0_, nodefiledd0_.promote as promote6_10_0_, nodefiledd0_.revision_translation_affected 
as revision7_10_0_, nodefiledd0_.status as status8_10_0_, nodefiledd0_.sticky as sticky9_10_0_, 
nodefiledd0_.title as title10_10_0_, nodefiledd0_.type as type11_10_0_, nodefiledd0_.uid as 
uid12_10_0_, nodefiledd0_.vid as vid13_10_0_ from node_field_data nodefiledd0_ where nodefiledd0_.nid=13 
 {executed in 1 msec}
2020-11-19 20:09:25.712 INFO  jdbc.resultsettable Line:610 - 
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|-----|----|----|
|nid |changed |created |default_langcode |langcode |promote |revision_translation_affected |status |sticky |title |type |uid |vid |
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|-----|----|----|
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|-----|----|----|

2020-11-19 20:09:25.717 INFO  jdbc.sqltiming Line:373 - insert into node_field_data (changed, created, default_langcode, langcode, promote, revision_translation_affected, 
status, sticky, title, type, uid, vid, nid) values (1605787765, 1605787765, 1, 'zh-hans', 0, 
1, 1, 0, '29丨基准测试框架JMH（下）', 'book', 1, 13, 13) 
 {executed in 1 msec}
2020-11-19 20:09:25.724 INFO  jdbc.sqltiming Line:373 - select bookfieldm0_.entity_id as entity_i1_8_, bookfieldm0_.bundle as bundle2_8_, bookfieldm0_.delta 
as delta3_8_, bookfieldm0_.langcode as langcode4_8_, bookfieldm0_.field_media_value as field_me5_8_, 
bookfieldm0_.revision_id as revision6_8_ from node__field_media bookfieldm0_ where bookfieldm0_.entity_id=13 
 {executed in 1 msec}
2020-11-19 20:09:25.726 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------------|------------|
|entity_id |bundle |delta |langcode |field_media_value |revision_id |
|----------|-------|------|---------|------------------|------------|
|----------|-------|------|---------|------------------|------------|

2020-11-19 20:09:25.730 INFO  jdbc.sqltiming Line:373 - select bookfieldm0_.entity_id as entity_i1_8_0_, bookfieldm0_.bundle as bundle2_8_0_, bookfieldm0_.delta 
as delta3_8_0_, bookfieldm0_.langcode as langcode4_8_0_, bookfieldm0_.field_media_value as 
field_me5_8_0_, bookfieldm0_.revision_id as revision6_8_0_ from node__field_media bookfieldm0_ 
where bookfieldm0_.entity_id=13 
 {executed in 1 msec}
2020-11-19 20:09:25.732 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------------|------------|
|entity_id |bundle |delta |langcode |field_media_value |revision_id |
|----------|-------|------|---------|------------------|------------|
|----------|-------|------|---------|------------------|------------|

2020-11-19 20:09:25.738 INFO  jdbc.sqltiming Line:373 - insert into node__field_media (bundle, delta, langcode, field_media_value, revision_id, entity_id) 
values ('book', 0, 'zh-hans', 'https://qdall01.baidupcs.com/file/6b7bc33edf13cc2d608521c560ef8c20?bkt=en-06f5c65000af0ed6238e17ba6d2df44bc03a0ed10df1b569398f32543b89c8e6ce1a0e51f55ef451&fid=3757516097-778750-357596343514249&time=1605787764&sign=FDTAXUGERLQlBHSKfWqir-DCb740ccc5511e5e8fedcff06b081203-n39BF19eI51rPdmsUMsU8JlVnfM%3D&to=92&size=4679959&sta_dx=4679959&sta_cs=4322&sta_ft=mp3&sta_ct=7&sta_mt=0&fm2=MH%2CQingdao%2CAnywhere%2C%2Cshanghai%2Ccnc&ctime=1567182975&mtime=1605787492&resv0=-1&resv1=0&resv2=rlim&resv3=2&resv4=4679959&vuk=3757516097&iv=0&htype=&randtype=em&newver=1&newfm=1&secfm=1&flow_ver=3&pkey=en-0b6b9ffd124c89e800999120730c6cf5a3e9288ff546b06b228ae5dcca64cb2c71783bd57a225e79&sl=76480590&expires=8h&rt=pr&r=430709161&mlogid=7510760647719881125&vbdid=64799653&fin=29%E4%B8%A8%E5%9F%BA%E5%87%86%E6%B5%8B%E8%AF%95%E6%A1%86%E6%9E%B6JMH%EF%BC%88%E4%B8%8B%EF%BC%89.mp3&bflag=92,34-92&rtype=1&dp-logid=7510760647719881125&dp-callid=0.1.1&hps=1&tsl=80&csl=80&fsl=-1&csign=yVzLQPCt4DblfMLqd2BCjd2RnqQ%3D&so=0&ut=6&uter=0&serv=0&uc=1458616558&ti=263f95a325333e23b0d1b13c633140209ef3de4ee4f3d6c2&hflag=30&adg=c_0f3c8fb981bae1fdae375754a6f1d609&reqlabel=778750_l_eeb31e180410b8be0e62f686c2b42c5d_-1_43d73532db4f9890a29565ef474ca519&ibp=1&by=themis&filename=29%E4%B8%A8%E5%9F%BA%E5%87%86%E6%B5%8B%E8%AF%95%E6%A1%86%E6%9E%B6JMH%EF%BC%88%E4%B8%8B%EF%BC%89.mp3', 
13, 13) 
 {executed in 0 msec}
2020-11-19 20:09:25.745 INFO  jdbc.sqltiming Line:373 - select nodefieldm0_.entity_id as entity_i1_17_0_, nodefieldm0_.bundle as bundle2_17_0_, nodefieldm0_.delta 
as delta3_17_0_, nodefieldm0_.langcode as langcode4_17_0_, nodefieldm0_.field_media_value as 
field_me5_17_0_, nodefieldm0_.revision_id as revision6_17_0_ from node_revision__field_media 
nodefieldm0_ where nodefieldm0_.entity_id=13 
 {executed in 1 msec}
2020-11-19 20:09:25.747 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------------|------------|
|entity_id |bundle |delta |langcode |field_media_value |revision_id |
|----------|-------|------|---------|------------------|------------|
|----------|-------|------|---------|------------------|------------|

2020-11-19 20:09:25.753 INFO  jdbc.sqltiming Line:373 - insert into node_revision__field_media (bundle, delta, langcode, field_media_value, revision_id, 
entity_id) values ('book', 0, 'zh-hans', 'https://qdall01.baidupcs.com/file/6b7bc33edf13cc2d608521c560ef8c20?bkt=en-06f5c65000af0ed6238e17ba6d2df44bc03a0ed10df1b569398f32543b89c8e6ce1a0e51f55ef451&fid=3757516097-778750-357596343514249&time=1605787764&sign=FDTAXUGERLQlBHSKfWqir-DCb740ccc5511e5e8fedcff06b081203-n39BF19eI51rPdmsUMsU8JlVnfM%3D&to=92&size=4679959&sta_dx=4679959&sta_cs=4322&sta_ft=mp3&sta_ct=7&sta_mt=0&fm2=MH%2CQingdao%2CAnywhere%2C%2Cshanghai%2Ccnc&ctime=1567182975&mtime=1605787492&resv0=-1&resv1=0&resv2=rlim&resv3=2&resv4=4679959&vuk=3757516097&iv=0&htype=&randtype=em&newver=1&newfm=1&secfm=1&flow_ver=3&pkey=en-0b6b9ffd124c89e800999120730c6cf5a3e9288ff546b06b228ae5dcca64cb2c71783bd57a225e79&sl=76480590&expires=8h&rt=pr&r=430709161&mlogid=7510760647719881125&vbdid=64799653&fin=29%E4%B8%A8%E5%9F%BA%E5%87%86%E6%B5%8B%E8%AF%95%E6%A1%86%E6%9E%B6JMH%EF%BC%88%E4%B8%8B%EF%BC%89.mp3&bflag=92,34-92&rtype=1&dp-logid=7510760647719881125&dp-callid=0.1.1&hps=1&tsl=80&csl=80&fsl=-1&csign=yVzLQPCt4DblfMLqd2BCjd2RnqQ%3D&so=0&ut=6&uter=0&serv=0&uc=1458616558&ti=263f95a325333e23b0d1b13c633140209ef3de4ee4f3d6c2&hflag=30&adg=c_0f3c8fb981bae1fdae375754a6f1d609&reqlabel=778750_l_eeb31e180410b8be0e62f686c2b42c5d_-1_43d73532db4f9890a29565ef474ca519&ibp=1&by=themis&filename=29%E4%B8%A8%E5%9F%BA%E5%87%86%E6%B5%8B%E8%AF%95%E6%A1%86%E6%9E%B6JMH%EF%BC%88%E4%B8%8B%EF%BC%89.mp3', 
13, 13) 
 {executed in 1 msec}
2020-11-19 20:09:25.761 INFO  jdbc.sqltiming Line:373 - select bookfieldc0_.entity_id as entity_i1_5_, bookfieldc0_.bundle as bundle2_5_, bookfieldc0_.field_comment_value 
as field_co3_5_, bookfieldc0_.delta as delta4_5_, bookfieldc0_.field_comment_format as field_co5_5_, 
bookfieldc0_.langcode as langcode6_5_, bookfieldc0_.revision_id as revision7_5_ from node__field_comment 
bookfieldc0_ where bookfieldc0_.entity_id=13 
 {executed in 1 msec}
2020-11-19 20:09:25.763 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|--------------------|------|---------------------|---------|------------|
|entity_id |bundle |field_comment_value |delta |field_comment_format |langcode |revision_id |
|----------|-------|--------------------|------|---------------------|---------|------------|
|----------|-------|--------------------|------|---------------------|---------|------------|

2020-11-19 20:09:25.767 INFO  jdbc.sqltiming Line:373 - select bookfieldc0_.entity_id as entity_i1_5_0_, bookfieldc0_.bundle as bundle2_5_0_, bookfieldc0_.field_comment_value 
as field_co3_5_0_, bookfieldc0_.delta as delta4_5_0_, bookfieldc0_.field_comment_format as 
field_co5_5_0_, bookfieldc0_.langcode as langcode6_5_0_, bookfieldc0_.revision_id as revision7_5_0_ 
from node__field_comment bookfieldc0_ where bookfieldc0_.entity_id=13 
 {executed in 1 msec}
2020-11-19 20:09:25.769 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|--------------------|------|---------------------|---------|------------|
|entity_id |bundle |field_comment_value |delta |field_comment_format |langcode |revision_id |
|----------|-------|--------------------|------|---------------------|---------|------------|
|----------|-------|--------------------|------|---------------------|---------|------------|

2020-11-19 20:09:25.776 INFO  jdbc.sqltiming Line:373 - insert into node__field_comment (bundle, field_comment_value, delta, field_comment_format, 
langcode, revision_id, entity_id) values ('book', '<li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/11/15/81/2c31cf79.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>永烁星光</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2018-10-12 </div> </div> <div class="_2eMTs2JE_0"> 
<div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class="">1</span> </div> <!----> 
<!----> </div> </div> <div class="_3M6kV3zb_0 _3D2NkqD6_0"> 老师 @State注解 这个程序状态类 实在没有看懂，其用处在于什么？ 
</div> <!----> <!----> </div></li> <li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/12/a4/bc/02596f1a.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>浪尖</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2018-09-26 </div> </div> <div class="_2eMTs2JE_0"> 
<div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class=""></span> </div> <!----> <!----> 
</div> </div> <div class="_3M6kV3zb_0"> ccH工业学院fc和支持！J </div> <div class="_2r3UB1GX_0"> <span>展开</span><i 
class="iconfont"></i> </div> <!----> </div></li> <li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/12/10/dc/fc9efd01.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>HELSING</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2018-09-26 </div> </div> <div 
class="_2eMTs2JE_0"> <div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class=""></span> 
</div> <!----> <!----> </div> </div> <div class="_3M6kV3zb_0"> 郑老师，能不能介绍一下，为什么ZGC会快那么多啊 </div> 
<div class="_2r3UB1GX_0"> <span>展开</span><i class="iconfont"></i> </div> <!----> </div></li>', 
0, 'full_html', 'zh-hans', 13, 13) 
 {executed in 1 msec}
2020-11-19 20:09:25.783 INFO  jdbc.sqltiming Line:373 - select nodefieldc0_.entity_id as entity_i1_14_0_, nodefieldc0_.bundle as bundle2_14_0_, nodefieldc0_.field_comment_value 
as field_co3_14_0_, nodefieldc0_.delta as delta4_14_0_, nodefieldc0_.field_comment_format as 
field_co5_14_0_, nodefieldc0_.langcode as langcode6_14_0_, nodefieldc0_.revision_id as revision7_14_0_ 
from node_revision__field_comment nodefieldc0_ where nodefieldc0_.entity_id=13 
 {executed in 1 msec}
2020-11-19 20:09:25.785 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|--------------------|------|---------------------|---------|------------|
|entity_id |bundle |field_comment_value |delta |field_comment_format |langcode |revision_id |
|----------|-------|--------------------|------|---------------------|---------|------------|
|----------|-------|--------------------|------|---------------------|---------|------------|

2020-11-19 20:09:25.792 INFO  jdbc.sqltiming Line:373 - insert into node_revision__field_comment (bundle, field_comment_value, delta, field_comment_format, 
langcode, revision_id, entity_id) values ('book', '<li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/11/15/81/2c31cf79.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>永烁星光</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2018-10-12 </div> </div> <div class="_2eMTs2JE_0"> 
<div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class="">1</span> </div> <!----> 
<!----> </div> </div> <div class="_3M6kV3zb_0 _3D2NkqD6_0"> 老师 @State注解 这个程序状态类 实在没有看懂，其用处在于什么？ 
</div> <!----> <!----> </div></li> <li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/12/a4/bc/02596f1a.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>浪尖</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2018-09-26 </div> </div> <div class="_2eMTs2JE_0"> 
<div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class=""></span> </div> <!----> <!----> 
</div> </div> <div class="_3M6kV3zb_0"> ccH工业学院fc和支持！J </div> <div class="_2r3UB1GX_0"> <span>展开</span><i 
class="iconfont"></i> </div> <!----> </div></li> <li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/12/10/dc/fc9efd01.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>HELSING</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2018-09-26 </div> </div> <div 
class="_2eMTs2JE_0"> <div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class=""></span> 
</div> <!----> <!----> </div> </div> <div class="_3M6kV3zb_0"> 郑老师，能不能介绍一下，为什么ZGC会快那么多啊 </div> 
<div class="_2r3UB1GX_0"> <span>展开</span><i class="iconfont"></i> </div> <!----> </div></li>', 
0, 'full_html', 'zh-hans', 13, 13) 
 {executed in 2 msec}
2020-11-19 20:09:25.802 INFO  jdbc.sqltiming Line:373 - select bookfieldt0_.entity_id as entity_i1_9_, bookfieldt0_.bundle as bundle2_9_, bookfieldt0_.delta 
as delta3_9_, bookfieldt0_.langcode as langcode4_9_, bookfieldt0_.revision_id as revision5_9_, 
bookfieldt0_.field_thumb_value as field_th6_9_ from node__field_thumb bookfieldt0_ where bookfieldt0_.entity_id=13 
 {executed in 2 msec}
2020-11-19 20:09:25.805 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------|------------------|
|entity_id |bundle |delta |langcode |revision_id |field_thumb_value |
|----------|-------|------|---------|------------|------------------|
|----------|-------|------|---------|------------|------------------|

2020-11-19 20:09:25.809 INFO  jdbc.sqltiming Line:373 - select bookfieldt0_.entity_id as entity_i1_9_0_, bookfieldt0_.bundle as bundle2_9_0_, bookfieldt0_.delta 
as delta3_9_0_, bookfieldt0_.langcode as langcode4_9_0_, bookfieldt0_.revision_id as revision5_9_0_, 
bookfieldt0_.field_thumb_value as field_th6_9_0_ from node__field_thumb bookfieldt0_ where 
bookfieldt0_.entity_id=13 
 {executed in 1 msec}
2020-11-19 20:09:25.811 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------|------------------|
|entity_id |bundle |delta |langcode |revision_id |field_thumb_value |
|----------|-------|------|---------|------------|------------------|
|----------|-------|------|---------|------------|------------------|

2020-11-19 20:09:25.817 INFO  jdbc.sqltiming Line:373 - insert into node__field_thumb (bundle, delta, langcode, revision_id, field_thumb_value, entity_id) 
values ('book', 0, 'zh-hans', 13, 'https://static001.geekbang.org/resource/image/7d/09/7de621ccc2886d29ba618fd00cdf3409.jpg', 
13) 
 {executed in 1 msec}
2020-11-19 20:09:25.825 INFO  jdbc.sqltiming Line:373 - select nodefieldt0_.entity_id as entity_i1_18_0_, nodefieldt0_.bundle as bundle2_18_0_, nodefieldt0_.delta 
as delta3_18_0_, nodefieldt0_.langcode as langcode4_18_0_, nodefieldt0_.revision_id as revision5_18_0_, 
nodefieldt0_.field_thumb_value as field_th6_18_0_ from node_revision__field_thumb nodefieldt0_ 
where nodefieldt0_.entity_id=13 
 {executed in 1 msec}
2020-11-19 20:09:25.827 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------|------------------|
|entity_id |bundle |delta |langcode |revision_id |field_thumb_value |
|----------|-------|------|---------|------------|------------------|
|----------|-------|------|---------|------------|------------------|

2020-11-19 20:09:25.832 INFO  jdbc.sqltiming Line:373 - insert into node_revision__field_thumb (bundle, delta, langcode, revision_id, field_thumb_value, 
entity_id) values ('book', 0, 'zh-hans', 13, 'https://static001.geekbang.org/resource/image/7d/09/7de621ccc2886d29ba618fd00cdf3409.jpg', 
13) 
 {executed in 0 msec}
2020-11-19 20:09:25.841 INFO  jdbc.sqltiming Line:373 - select bookfieldf0_.entity_id as entity_i1_6_0_, bookfieldf0_.bundle as bundle2_6_0_, bookfieldf0_.delta 
as delta3_6_0_, bookfieldf0_.field_fenlei_target_id as field_fe4_6_0_, bookfieldf0_.langcode 
as langcode5_6_0_, bookfieldf0_.revision_id as revision6_6_0_ from node__field_fenlei bookfieldf0_ 
where bookfieldf0_.entity_id=13 
 {executed in 1 msec}
2020-11-19 20:09:25.843 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------------|---------|------------|
|entity_id |bundle |delta |field_fenlei_target_id |langcode |revision_id |
|----------|-------|------|-----------------------|---------|------------|
|----------|-------|------|-----------------------|---------|------------|

2020-11-19 20:09:25.848 INFO  jdbc.sqltiming Line:373 - insert into node__field_fenlei (bundle, delta, field_fenlei_target_id, langcode, revision_id, 
entity_id) values ('book', 0, 1, 'zh-hans', 13, 13) 
 {executed in 1 msec}
2020-11-19 20:09:25.857 INFO  jdbc.sqltiming Line:373 - select nodefieldf0_.entity_id as entity_i1_15_0_, nodefieldf0_.bundle as bundle2_15_0_, nodefieldf0_.delta 
as delta3_15_0_, nodefieldf0_.field_fenlei_target_id as field_fe4_15_0_, nodefieldf0_.langcode 
as langcode5_15_0_, nodefieldf0_.revision_id as revision6_15_0_ from node_revision__field_fenlei 
nodefieldf0_ where nodefieldf0_.entity_id=13 
 {executed in 2 msec}
2020-11-19 20:09:25.858 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------------|---------|------------|
|entity_id |bundle |delta |field_fenlei_target_id |langcode |revision_id |
|----------|-------|------|-----------------------|---------|------------|
|----------|-------|------|-----------------------|---------|------------|

2020-11-19 20:09:25.938 INFO  jdbc.sqltiming Line:373 - insert into node_revision__field_fenlei (bundle, delta, field_fenlei_target_id, langcode, revision_id, 
entity_id) values ('book', 0, 1, 'zh-hans', 13, 13) 
 {executed in 75 msec}
2020-11-19 20:09:25.962 INFO  jdbc.sqltiming Line:373 - select bookchecke0_.item_id as item_id1_2_, bookchecke0_.fsid as fsid2_2_, bookchecke0_.got 
as got3_2_, bookchecke0_.name as name4_2_ from book_check bookchecke0_ where bookchecke0_.fsid='25511900066587' 
and bookchecke0_.name='net_content' 
 {executed in 3 msec}
2020-11-19 20:09:25.964 INFO  jdbc.resultsettable Line:610 - 
|--------|-----|----|-----|
|item_id |fsid |got |name |
|--------|-----|----|-----|
|--------|-----|----|-----|

2020-11-19 20:09:43.313 INFO  jdbc.sqltiming Line:373 - select bookchecke0_.item_id as item_id1_2_, bookchecke0_.fsid as fsid2_2_, bookchecke0_.got 
as got3_2_, bookchecke0_.name as name4_2_ from book_check bookchecke0_ where bookchecke0_.fsid='25511900066587' 
and bookchecke0_.name='net_content' 
 {executed in 2 msec}
2020-11-19 20:09:43.316 INFO  jdbc.resultsettable Line:610 - 
|--------|-----|----|-----|
|item_id |fsid |got |name |
|--------|-----|----|-----|
|--------|-----|----|-----|

2020-11-19 20:09:43.322 INFO  jdbc.sqltiming Line:373 - insert into book_check (fsid, got, name) values ('25511900066587', 1, 'net_content') 
 {executed in 2 msec}
2020-11-19 20:09:43.324 INFO  jdbc.sqltiming Line:373 - getGeneratedKeys on query: insert into book_check (fsid, got, name) values ('25511900066587', 
1, 'net_content') 
 {executed in 0 msec}
2020-11-19 20:09:43.327 INFO  jdbc.resultsettable Line:610 - 
|--------------|
|generated_key |
|--------------|
|31            |
|--------------|

2020-11-19 20:09:43.345 INFO  jdbc.sqltiming Line:373 - select bookchecke0_.item_id as item_id1_2_, bookchecke0_.fsid as fsid2_2_, bookchecke0_.got 
as got3_2_, bookchecke0_.name as name4_2_ from book_check bookchecke0_ where bookchecke0_.fsid='25511900066587' 
and bookchecke0_.name='media' 
 {executed in 1 msec}
2020-11-19 20:09:43.346 INFO  jdbc.resultsettable Line:610 - 
|--------|-----|----|-----|
|item_id |fsid |got |name |
|--------|-----|----|-----|
|--------|-----|----|-----|

2020-11-19 20:09:43.876 INFO  jdbc.sqltiming Line:373 - select bookchecke0_.item_id as item_id1_2_, bookchecke0_.fsid as fsid2_2_, bookchecke0_.got 
as got3_2_, bookchecke0_.name as name4_2_ from book_check bookchecke0_ where bookchecke0_.fsid='25511900066587' 
and bookchecke0_.name='media' 
 {executed in 1 msec}
2020-11-19 20:09:43.879 INFO  jdbc.resultsettable Line:610 - 
|--------|-----|----|-----|
|item_id |fsid |got |name |
|--------|-----|----|-----|
|--------|-----|----|-----|

2020-11-19 20:09:43.884 INFO  jdbc.sqltiming Line:373 - insert into book_check (fsid, got, name) values ('25511900066587', 1, 'media') 
 {executed in 1 msec}
2020-11-19 20:09:43.886 INFO  jdbc.sqltiming Line:373 - getGeneratedKeys on query: insert into book_check (fsid, got, name) values ('25511900066587', 
1, 'media') 
 {executed in 0 msec}
2020-11-19 20:09:43.887 INFO  jdbc.resultsettable Line:610 - 
|--------------|
|generated_key |
|--------------|
|32            |
|--------------|

2020-11-19 20:09:43.898 INFO  jdbc.sqltiming Line:373 - select bookfieldf0_.entity_id as entity_i1_7_, bookfieldf0_.bundle as bundle2_7_, bookfieldf0_.delta 
as delta3_7_, bookfieldf0_.field_fsid_value as field_fs4_7_, bookfieldf0_.langcode as langcode5_7_, 
bookfieldf0_.revision_id as revision6_7_ from node__field_fsid bookfieldf0_ where bookfieldf0_.field_fsid_value='25511900066587' 
 {executed in 1 msec}
2020-11-19 20:09:43.899 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------|---------|------------|
|entity_id |bundle |delta |field_fsid_value |langcode |revision_id |
|----------|-------|------|-----------------|---------|------------|
|----------|-------|------|-----------------|---------|------------|

2020-11-19 20:09:43.903 INFO  jdbc.sqltiming Line:373 - insert into node_revision (langcode, nid, revision_default, revision_timestamp, revision_uid) 
values ('zh-hans', 0, 1, 1605787783, 1) 
 {executed in 1 msec}
2020-11-19 20:09:43.904 INFO  jdbc.sqltiming Line:373 - getGeneratedKeys on query: insert into node_revision (langcode, nid, revision_default, revision_timestamp, 
revision_uid) values ('zh-hans', 0, 1, 1605787783, 1) 
 {executed in 0 msec}
2020-11-19 20:09:43.906 INFO  jdbc.resultsettable Line:610 - 
|--------------|
|generated_key |
|--------------|
|14            |
|--------------|

2020-11-19 20:09:43.916 INFO  jdbc.sqltiming Line:373 - insert into node (langcode, type, uuid, vid) values ('zh-hans', 'book', '9087e45e-99bf-4327-b712-0287f7a7ec59', 
14) 
 {executed in 1 msec}
2020-11-19 20:09:43.917 INFO  jdbc.sqltiming Line:373 - getGeneratedKeys on query: insert into node (langcode, type, uuid, vid) values ('zh-hans', 
'book', '9087e45e-99bf-4327-b712-0287f7a7ec59', 14) 
 {executed in 0 msec}
2020-11-19 20:09:43.918 INFO  jdbc.resultsettable Line:610 - 
|--------------|
|generated_key |
|--------------|
|14            |
|--------------|

2020-11-19 20:09:43.932 INFO  jdbc.sqltiming Line:373 - update node_revision set langcode='zh-hans', nid=14, revision_default=1, revision_timestamp=1605787783, 
revision_uid=1 where vid=14 
 {executed in 1 msec}
2020-11-19 20:09:43.938 INFO  jdbc.sqltiming Line:373 - select bookfieldf0_.entity_id as entity_i1_7_0_, bookfieldf0_.bundle as bundle2_7_0_, bookfieldf0_.delta 
as delta3_7_0_, bookfieldf0_.field_fsid_value as field_fs4_7_0_, bookfieldf0_.langcode as langcode5_7_0_, 
bookfieldf0_.revision_id as revision6_7_0_ from node__field_fsid bookfieldf0_ where bookfieldf0_.entity_id=14 
 {executed in 1 msec}
2020-11-19 20:09:43.940 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------|---------|------------|
|entity_id |bundle |delta |field_fsid_value |langcode |revision_id |
|----------|-------|------|-----------------|---------|------------|
|----------|-------|------|-----------------|---------|------------|

2020-11-19 20:09:43.945 INFO  jdbc.sqltiming Line:373 - insert into node__field_fsid (bundle, delta, field_fsid_value, langcode, revision_id, entity_id) 
values ('book', 0, '25511900066587', 'zh-hans', 14, 14) 
 {executed in 1 msec}
2020-11-19 20:09:43.952 INFO  jdbc.sqltiming Line:373 - select nodefieldf0_.entity_id as entity_i1_16_0_, nodefieldf0_.bundle as bundle2_16_0_, nodefieldf0_.delta 
as delta3_16_0_, nodefieldf0_.field_fsid_value as field_fs4_16_0_, nodefieldf0_.langcode as 
langcode5_16_0_, nodefieldf0_.revision_id as revision6_16_0_ from node_revision__field_fsid 
nodefieldf0_ where nodefieldf0_.entity_id=14 
 {executed in 1 msec}
2020-11-19 20:09:43.954 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------|---------|------------|
|entity_id |bundle |delta |field_fsid_value |langcode |revision_id |
|----------|-------|------|-----------------|---------|------------|
|----------|-------|------|-----------------|---------|------------|

2020-11-19 20:09:43.959 INFO  jdbc.sqltiming Line:373 - insert into node_revision__field_fsid (bundle, delta, field_fsid_value, langcode, revision_id, 
entity_id) values ('book', 0, '25511900066587', 'zh-hans', 14, 14) 
 {executed in 1 msec}
2020-11-19 20:09:43.967 INFO  jdbc.sqltiming Line:373 - select bookentity0_.nid as nid1_1_, bookentity0_.bid as bid2_1_, bookentity0_.depth as depth3_1_, 
bookentity0_.has_children as has_chil4_1_, bookentity0_.p1 as p5_1_, bookentity0_.p2 as p6_1_, 
bookentity0_.p3 as p7_1_, bookentity0_.p4 as p8_1_, bookentity0_.p5 as p9_1_, bookentity0_.pid 
as pid10_1_, bookentity0_.weight as weight11_1_ from book bookentity0_ where bookentity0_.nid=14 
 {executed in 2 msec}
2020-11-19 20:09:43.969 INFO  jdbc.resultsettable Line:610 - 
|----|----|------|-------------|---|---|---|---|---|----|-------|
|nid |bid |depth |has_children |p1 |p2 |p3 |p4 |p5 |pid |weight |
|----|----|------|-------------|---|---|---|---|---|----|-------|
|----|----|------|-------------|---|---|---|---|---|----|-------|

2020-11-19 20:09:43.972 INFO  jdbc.sqltiming Line:373 - select bookentity0_.nid as nid1_1_0_, bookentity0_.bid as bid2_1_0_, bookentity0_.depth as 
depth3_1_0_, bookentity0_.has_children as has_chil4_1_0_, bookentity0_.p1 as p5_1_0_, bookentity0_.p2 
as p6_1_0_, bookentity0_.p3 as p7_1_0_, bookentity0_.p4 as p8_1_0_, bookentity0_.p5 as p9_1_0_, 
bookentity0_.pid as pid10_1_0_, bookentity0_.weight as weight11_1_0_ from book bookentity0_ 
where bookentity0_.nid=14 
 {executed in 1 msec}
2020-11-19 20:09:43.974 INFO  jdbc.resultsettable Line:610 - 
|----|----|------|-------------|---|---|---|---|---|----|-------|
|nid |bid |depth |has_children |p1 |p2 |p3 |p4 |p5 |pid |weight |
|----|----|------|-------------|---|---|---|---|---|----|-------|
|----|----|------|-------------|---|---|---|---|---|----|-------|

2020-11-19 20:09:43.980 INFO  jdbc.sqltiming Line:373 - insert into book (bid, depth, has_children, p1, p2, p3, p4, p5, pid, weight, nid) values (1, 
3, 0, 1, 8, 14, 0, 0, 8, 0, 14) 
 {executed in 1 msec}
2020-11-19 20:09:43.986 INFO  jdbc.sqltiming Line:373 - select nodebodyen0_.entity_id as entity_i1_4_, nodebodyen0_.body_value as body_val2_4_, nodebodyen0_.body_summary 
as body_sum3_4_, nodebodyen0_.bundle as bundle4_4_, nodebodyen0_.delta as delta5_4_, nodebodyen0_.body_format 
as body_for6_4_, nodebodyen0_.langcode as langcode7_4_, nodebodyen0_.revision_id as revision8_4_ 
from node__body nodebodyen0_ where nodebodyen0_.entity_id=14 
 {executed in 1 msec}
2020-11-19 20:09:43.988 INFO  jdbc.resultsettable Line:610 - 
|----------|-----------|-------------|-------|------|------------|---------|------------|
|entity_id |body_value |body_summary |bundle |delta |body_format |langcode |revision_id |
|----------|-----------|-------------|-------|------|------------|---------|------------|
|----------|-----------|-------------|-------|------|------------|---------|------------|

2020-11-19 20:09:43.992 INFO  jdbc.sqltiming Line:373 - select nodebodyre0_.entity_id as entity_i1_13_0_, nodebodyre0_.body_value as body_val2_13_0_, 
nodebodyre0_.body_summary as body_sum3_13_0_, nodebodyre0_.bundle as bundle4_13_0_, nodebodyre0_.delta 
as delta5_13_0_, nodebodyre0_.body_format as body_for6_13_0_, nodebodyre0_.langcode as langcode7_13_0_, 
nodebodyre0_.revision_id as revision8_13_0_ from node_revision__body nodebodyre0_ where nodebodyre0_.entity_id=14 
 {executed in 1 msec}
2020-11-19 20:09:43.994 INFO  jdbc.resultsettable Line:610 - 
|----------|-----------|-------------|-------|------|------------|---------|------------|
|entity_id |body_value |body_summary |bundle |delta |body_format |langcode |revision_id |
|----------|-----------|-------------|-------|------|------------|---------|------------|
|----------|-----------|-------------|-------|------|------------|---------|------------|

2020-11-19 20:09:44.014 INFO  jdbc.sqltiming Line:373 - insert into node_revision__body (body_value, body_summary, bundle, delta, body_format, langcode, 
revision_id, entity_id) values ('<p>今天我们来聊聊性能基准测试（benchmarking）。</p> <p>大家或许都看到过一些不严谨的性能测试，以及基于这些测试结果得出的令人匪夷所思的结论。</p> 
<pre style="position: relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> static int foo() { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> int i = 0; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div 
class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td> <td class="hljs-ln-code"> <div 
class="hljs-ln-line"> while (i &lt; 1_000_000_000) { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> i++; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="5"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
} </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> return i; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="7"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> } </div></td> </tr> </tbody> </table></code> <div class="richcontent-pre-copy"> 
<span class="iconfont"></span>复制代码 </div></pre> <p>举个例子，上面这段代码中的<code>foo</code>方法，将进行 10^9 
次加法操作及跳转操作。</p> <p>不少开发人员，包括我在介绍反射调用那一篇中所做的性能测试，都使用了下面这段代码的测量方式，即通过<code>System.nanoTime</code>或者<code>System.currentTimeMillis</code>来测量每若干个操作（如连续调用 
1000 次<code>foo</code>方法）所花费的时间。</p> <pre style="position: relative;"><code> <table class="hljs-ln"> 
<tbody> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> public class LoopPerformanceTest { </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> static int foo() { ... } </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> public static void main(String[] args) { </div></td> </tr> <tr> 
<td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> // warmup </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> for (int i = 0; i &lt; 20_000; i++) { </div></td> </tr> <tr> <td 
class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="7"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> foo(); </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="8"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> } </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="9"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
// measurement </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="10"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
long current = System.nanoTime(); </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div 
class="hljs-ln-line hljs-ln-n" data-line-number="11"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> for (int i = 1; i &lt;= 10_000; i++) { </div></td> </tr> <tr> <td 
class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="12"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> foo(); </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="13"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> if (i % 1000 == 0) { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="14"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> long temp = System.nanoTime(); </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="15"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> System.out.println(temp - current); </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="16"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> current = System.nanoTime(); </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="17"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> } </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="18"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
} </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="19"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> } </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="20"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> } </div></td> </tr> </tbody> </table></code> <div class="richcontent-pre-copy"> 
<span class="iconfont"></span>复制代码 </div></pre> <p>这种测量方式实际上过于理性化，忽略了 Java 虚拟机、操作系统，乃至硬件系统所带来的影响。</p> 
<h2>性能测试的坑</h2> <p>关于 Java 虚拟机所带来的影响，我们在前面的篇章中已经介绍过不少，如 Java 虚拟机堆空间的自适配，即时编译等。</p> <p>在上面这段代码中，真正进行测试的代码（即<code>// 
measurement</code>后的代码）由于循环次数不多，属于冷循环，没有能触发 OSR 编译。</p> <p>也就是说，我们会在<code>main</code>方法中解释执行，然后调用<code>foo</code>方法即时编译生成的机器码中。这种混杂了解释执行以及即时编译生成代码的测量方式，其得到的数据含义不明。</p><!-- 
[[[read_end]]] --> <p>有同学认为，我们可以假设<code>foo</code>方法耗时较长（毕竟 10^9 次加法），因此<code>main</code>方法的解释执行并不会对最终计算得出的性能数据造成太大影响。上面这段代码在我的机器上测出的结果是，每 
1000 次<code>foo</code>方法调用在 20 微秒左右。</p> <p>这是否意味着，我这台机器的 CPU 已经远超它的物理限制，其频率达到 100,000,000 
GHz 了。（假设循环主体就两条指令，每时钟周期指令数 [1] 为 1。）这显然是不可能的，目前 CPU 单核的频率大概在 2-5 GHz 左右，再怎么超频也不可能提升七八个数量级。</p> 
<p>你应该能够猜到，这和即时编译器的循环优化有关。下面便是<code>foo</code>方法的编译结果。我们可以看到，它将直接返回 10^9，而不是循环 10^9 次，并在循环中重复进行加法。</p> 
<pre style="position: relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> 0x8aa0: sub rsp,0x18 // 创建方法栈桢 </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> 0x8aa7: mov QWORD PTR [rsp+0x10],rbp // 无关指令 </div></td> </tr> <tr> 
<td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> 0x8aac: mov eax,0x3b9aca00 // return 10^9 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> 0x8ab1: add rsp,0x10 // 弹出方法栈桢 </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> 0x8ab5: pop rbp // 无关指令 </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> 0x8ab6: mov r10,QWORD PTR [r15+0x70] // 
安全点测试 </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" 
data-line-number="7"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 0x8aba: 
test DWORD PTR [r10],eax // 安全点测试 </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div 
class="hljs-ln-line hljs-ln-n" data-line-number="8"></div></td> <td class="hljs-ln-code"> <div 
class="hljs-ln-line"> 0x8abd: ret </div></td> </tr> </tbody> </table></code> <div class="richcontent-pre-copy"> 
<span class="iconfont"></span>复制代码 </div></pre> <blockquote> <p>之前我忘记解释所谓的”无关指令“是什么意思。我指的是该指令和具体的代码逻辑无关。即时编译器生成的代码可能会将 
RBP 寄存器作为通用寄存器，从而是寄存器分配算法有更多的选择。由于调用者（caller）未必保存了 RBP 寄存器的值，所以即时编译器会在进入被调用者（callee）时保存 RBP 
的值，并在退出被调用者时复原 RBP 的值。</p> </blockquote> <pre style="position: relative;"><code> <table class="hljs-ln"> 
<tbody> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> static int foo() { </div></td> </tr> <tr> 
<td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> int i = 0; </div></td> </tr> <tr> <td 
class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> while (i &lt; 1_000_000_000) { </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> i++; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> } </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="6"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
return i; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" 
data-line-number="7"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> } </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="8"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> // 优化为 </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="9"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> static int foo() { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="10"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> return 1_000_000_000; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="11"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> } </div></td> </tr> </tbody> </table></code> <div class="richcontent-pre-copy"> 
<span class="iconfont"></span>复制代码 </div></pre> <p>该循环优化并非循环展开。在默认情况下，即时编译器仅能将循环展开 60 次（对应虚拟机参数<code>-XX:LoopUnrollLimit</code>）。实际上，在介绍循环优化那篇文章中，我并没有提及这个优化。因为该优化实在是太过于简单，几乎所有开发人员都能够手工对其进行优化。</p> 
<p>在即时编译器中，它是一个基于计数循环的优化。我们也已经学过计数循环的知识。也就是说，只要将循环变量<code>i</code>改为 long 类型，便可以“避免”这个优化。</p> 
<p>关于操作系统和硬件系统所带来的影响，一个较为常见的例子便是电源管理策略。在许多机器，特别是笔记本上，操作系统会动态配置 CPU 的频率。而 CPU 的频率又直接影响到性能测试的数据，因此短时间的性能测试得出的数据未必可靠。</p> 
<p><img src="https://static001.geekbang.org/resource/image/07/97/07ca617893718782b8eb58344b7bb097.jpeg" 
alt=""></p> <p>例如我的笔记本，在刚开始进行性能评测时，单核频率可以达到 4.0 GHz。而后由于 CPU 温度升高，频率便被限制在 3.0 GHz 了。</p> <p>除了电源管理之外，CPU 
缓存、分支预测器 [2]，以及超线程技术 [3]，都会对测试结果造成影响。</p> <p>就 CPU 缓存而言，如果程序的数据本地性较好，那么它的性能指标便会非常好；如果程序存在 false 
sharing 的问题，即几个线程写入内存中属于同一缓存行的不同部分，那么它的性能指标便会非常糟糕。</p> <p>超线程技术是另一个可能误导性能测试工具的因素。我们知道，超线程技术将为每个物理核心虚拟出两个虚拟核心，从而尽可能地提高物理核心的利用率。如果性能测试的两个线程被安排在同一物理核心上，那么得到的测试数据显然要比被安排在不同物理核心上的数据糟糕得多。</p> 
<p>总而言之，性能基准测试存在着许多深坑（pitfall）。然而，除了性能测试专家外，大多数开发人员都没有足够全面的知识，能够绕开这些坑，因而得出的性能测试数据很有可能是有偏差的（biased）。</p> 
<p>下面我将介绍 OpenJDK 中的开源项目 JMH[4]（Java Microbenchmark Harness）。JMH 是一个面向 Java 语言或者其他 Java 虚拟机语言的性能基准测试框架。它针对的是纳秒级别（出自官网介绍，个人觉得精确度没那么高）、微秒级别、毫秒级别，以及秒级别的性能测试。</p> 
<p>由于许多即时编译器的开发人员参与了该项目，因此 JMH 内置了许多功能来控制即时编译器的优化。对于其他影响性能评测的因素，JMH 也提供了不少策略来降低影响，甚至是彻底解决。</p> 
<p>因此，使用这个性能基准测试框架的开发人员，可以将精力完全集中在所要测试的业务逻辑，并以最小的代价控制除了业务逻辑之外的可能影响性能的因素。</p> <pre style="position: 
relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up 
on why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial 
experiments, perform baseline and negative tests that provide experimental control, make sure 
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts. 
Do not assume the numbers tell you what you want them to tell. </div></td> </tr> </tbody> </table></code> 
<div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 </div></pre> <p>不过，JMH 
也不能完美解决性能测试数据的偏差问题。它甚至会在每次运行的输出结果中打印上述语句，所以，JMH 的开发人员也给出了一个小忠告：我们开发人员不要轻信 JMH 的性能测试数据，不要基于这些数据乱下结论。</p> 
<p>通常来说，性能基准测试的结果反映的是所测试的业务逻辑在所运行的 Java 虚拟机，操作系统，硬件系统这一组合上的性能指标，而根据这些性能指标得出的通用结论则需要经过严格论证。</p> 
<p>在理解（或忽略）了 JMH 的忠告后，我们下面便来看看如何使用 JMH。</p> <h2>生成 JMH 项目</h2> <p>JMH 的使用方式并不复杂。我们可以借助 JMH 
部署在 maven 上的 archetype，生成预设好依赖关系的 maven 项目模板。具体的命令如下所示：</p> <pre style="position: relative;"><code> 
<table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
$ mvn archetype:generate \ </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="2"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
-DinteractiveMode=false \ </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="3"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
-DarchetypeGroupId=org.openjdk.jmh \ </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div 
class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td> <td class="hljs-ln-code"> <div 
class="hljs-ln-line"> -DarchetypeArtifactId=jmh-java-benchmark-archetype \ </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> -DgroupId=org.sample \ </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> -DartifactId=test \ </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="7"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> -Dversion=1.21 </div></td> </tr> <tr> 
<td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="8"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> $ cd test </div></td> </tr> </tbody> </table></code> 
<div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 </div></pre> <p>该命令将在当前目录下生成一个<code>test</code>文件夹（对应参数<code>-DartifactId=test</code>，可更改），其中便包含了定义该 
maven 项目依赖的<code>pom.xml</code>文件，以及自动生成的测试文件<code>src/main/org/sample/MyBenchmark.java</code>（这里<code>org/sample</code>对应参数<code>-DgroupId=org.sample</code>，可更改）。后者的内容如下所示：</p> 
<pre style="position: relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> /* </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="2"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
* Copyright ... </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="3"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
*/ </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" 
data-line-number="4"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> package 
org.sample; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" 
data-line-number="5"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> import org.openjdk.jmh.annotations.Benchmark; 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="7"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="8"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> public class MyBenchmark { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="9"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="10"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
@Benchmark </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" 
data-line-number="11"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> public 
void testMethod() { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="12"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
// This is a demo/sample template for building your JMH benchmarks. Edit as needed. </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="13"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> // Put your benchmark code here. </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="14"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> } </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="15"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="16"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
} </div></td> </tr> </tbody> </table></code> <div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 
</div></pre> <p>这里面，类名<code>MyBenchmark</code>以及方法名<code>testMethod</code>并不重要，你可以随意更改。真正重要的是<code>@Benchmark</code>注解。被它标注的方法，便是 
JMH 基准测试的测试方法。该测试方法默认是空的。我们可以填入需要进行性能测试的业务逻辑。</p> <p>举个例子，我们可以测量新建异常对象的性能，如下述代码所示：</p> <pre 
style="position: relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> @Benchmark </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div 
class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> <td class="hljs-ln-code"> <div 
class="hljs-ln-line"> public void testMethod() { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> new Exception(); </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> } </div></td> </tr> </tbody> </table></code> <div class="richcontent-pre-copy"> 
<span class="iconfont"></span>复制代码 </div></pre> <p>通常来说，我们不应该使用这种貌似会被即时编译器优化掉的代码（在下篇中我会介绍 
JMH 的<code>Blackhole</code>功能）。</p> <p>不过，我们已经学习过逃逸分析了，知道 native 方法调用的调用者或者参数会被识别为逃逸。而<code>Exception</code>的构造器将间接调用至 
native 方法<code>fillInStackTrace</code>中，并且该方法调用的调用者便是新建的<code>Exception</code>对象。因此，逃逸分析将判定该新建对象逃逸，而即时编译器也无法优化掉原本的新建对象操作。</p> 
<p>当<code>Exception</code>的构造器返回时，Java 虚拟机将不再拥有指向这一新建对象的引用。因此，该新建对象可以被垃圾回收。</p> <h2>编译和运行 JMH 
项目</h2> <p>在上一篇介绍注解处理器时，我曾提到过，JMH 正是利用注解处理器 [5] 来自动生成性能测试的代码。实际上，除了<code>@Benchmark</code>之外，JMH 
的注解处理器还将处理所有位于<code>org.openjdk.jmh.annotations</code>包 [6] 下的注解。（其他注解我们会在下一篇中详细介绍。）</p> <p>我们可以运行<code>mvn 
compile</code>命令来编译这个 maven 项目。该命令将生成<code>target</code>文件夹，其中的<code>generated-sources</code>目录便存放着由 
JMH 的注解处理器所生成的 Java 源代码：</p> <pre style="position: relative;"><code> <table class="hljs-ln"> 
<tbody> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> $ mvn compile </div></td> </tr> <tr> <td 
class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> $ ls target/generated-sources/annotations/org/sample/generated/ 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> MyBenchmark_jmhType.java MyBenchmark_jmhType_B1.java 
MyBenchmark_jmhType_B2.java MyBenchmark_jmhType_B3.java MyBenchmark_testMethod_jmhTest.java 
</div></td> </tr> </tbody> </table></code> <div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 
</div></pre> <p>在这些源代码里，所有以<code>MyBenchmark_jmhType</code>为前缀的 Java 类都继承自<code>MyBenchmark</code>。这是注解处理器的常见用法，即通过生成子类来将注解所带来的额外语义扩张成方法。</p> 
<p>具体来说，它们之间的继承关系是<code>MyBenchmark_jmhType -&gt; B3 -&gt; B2 -&gt; B1 -&gt; MyBenchmark</code>（这里<code>A 
-&gt; B</code>代表 A 继承 B）。其中，B2 存放着 JMH 用来控制基准测试的各项字段。</p> <p>为了避免这些控制字段对<code>MyBenchmark</code>类中的字段造成 
false sharing 的影响，JMH 生成了 B1 和 B3，分别存放了 256 个 boolean 字段，从而避免 B2 中的字段与<code>MyBenchmark</code>类、<code>MyBenchmark_jmhType</code>类中的字段（或内存里下一个对象中的字段）会出现在同一缓存行中。</p> 
<blockquote> <p>之所以不能在同一类中安排这些字段，是因为 Java 虚拟机的字段重排列。而类之间的继承关系，便可以避免不同类所包含的字段之间的重排列。</p> </blockquote> 
<p>除了这些<code>jmhType</code>源代码外，<code>generated-sources</code>目录还存放着真正的性能测试代码<code>MyBenchmark_testMethod_jmhTest.java</code>。当进行性能测试时，Java 
虚拟机所运行的代码很有可能便是这一个源文件中的热循环经过 OSR 编译过后的代码。</p> <blockquote> <p>在通过 CompileCommand 分析即时编译后的机器码时，我们需要关注的其实是<code>MyBenchmark_testMethod_jmhTest</code>中的方法。</p> 
</blockquote> <p>由于这里面的内容过于复杂，我将在下一篇中介绍影响该生成代码的众多功能性注解，这里就不再详细进行介绍了。</p> <p>接下来，我们可以运行<code>mvn 
package</code>命令，将编译好的 class 文件打包成 jar 包。生成的 jar 包同样位于<code>target</code>目录下，其名字为<code>benchmarks.jar</code>。jar 
包里附带了一系列配置文件，如下所示：</p> <pre style="position: relative;"><code> <table class="hljs-ln"> <tbody> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> $ mvn package </div></td> </tr> <tr> <td 
class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> $ jar tf target/benchmarks.jar META-INF </div></td> </tr> <tr> <td 
class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> META-INF/MANIFEST.MF </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> META-INF/ </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> META-INF/BenchmarkList </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="7"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> META-INF/CompilerHints </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="8"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> META-INF/maven/ </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="9"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> META-INF/maven/org.sample/ </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="10"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> META-INF/maven/org.sample/test/ </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="11"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> META-INF/maven/org.sample/test/pom.xml </div></td> </tr> <tr> <td 
class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="12"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> META-INF/maven/org.sample/test/pom.properties 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="13"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> META-INF/maven/org.openjdk.jmh/ </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="14"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> META-INF/maven/org.openjdk.jmh/jmh-core/ 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="15"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> META-INF/maven/org.openjdk.jmh/jmh-core/pom.xml 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="16"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> META-INF/maven/org.openjdk.jmh/jmh-core/pom.properties 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="17"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> META-INF/maven/net.sf.jopt-simple/ </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="18"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> META-INF/maven/net.sf.jopt-simple/jopt-simple/ 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="19"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> META-INF/maven/net.sf.jopt-simple/jopt-simple/pom.xml 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="20"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> META-INF/maven/net.sf.jopt-simple/jopt-simple/pom.properties 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="21"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> META-INF/LICENSE.txt </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="22"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> META-INF/NOTICE.txt </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="23"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> META-INF/maven/org.apache.commons/ </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="24"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> META-INF/maven/org.apache.commons/commons-math3/ 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="25"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> META-INF/maven/org.apache.commons/commons-math3/pom.xml 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="26"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> META-INF/maven/org.apache.commons/commons-math3/pom.properties 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="27"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="28"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> $ unzip -c target/benchmarks.jar META-INF/MANIFEST.MF </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="29"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> Archive: target/benchmarks.jar </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="30"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> inflating: META-INF/MANIFEST.MF </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="31"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> Manifest-Version: 1.0 </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="32"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> Archiver-Version: Plexus Archiver </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="33"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> Created-By: Apache Maven 3.5.4 </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="34"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> Built-By: zhengy </div></td> </tr> <tr> 
<td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="35"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> Build-Jdk: 10.0.2 </div></td> </tr> <tr> 
<td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="36"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> Main-Class: org.openjdk.jmh.Main </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="37"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="38"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> $ unzip -c target/benchmarks.jar META-INF/BenchmarkList </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="39"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> Archive: target/benchmarks.jar </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="40"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> inflating: META-INF/BenchmarkList </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="41"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> JMH S 22 org.sample.MyBenchmark S 51 org.sample.generated.MyBenchmark_testMethod_jmhTest 
S 10 testMethod S 10 Throughput E A 1 1 1 E E E E E E E E E E E E E E E E E </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="42"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="43"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> $ unzip -c target/benchmarks.jar META-INF/CompilerHints </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="44"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> Archive: target/benchmarks.jar </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="45"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> inflating: META-INF/CompilerHints </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="46"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> dontinline,*.*_all_jmhStub </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="47"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> dontinline,*.*_avgt_jmhStub </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="48"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> dontinline,*.*_sample_jmhStub </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="49"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> dontinline,*.*_ss_jmhStub </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="50"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> dontinline,*.*_thrpt_jmhStub </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="51"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> inline,org/sample/MyBenchmark.testMethod 
</div></td> </tr> </tbody> </table></code> <div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 
</div></pre> <p>这里我展示了其中三个比较重要的配置文件。</p> <ol> <li> <p><code>MANIFEST.MF</code>中指定了该 jar 包的默认入口，即<code>org.openjdk.jmh.Main</code>[7]。</p> 
</li> <li> <p><code>BenchmarkList</code>中存放了测试配置。该配置是根据<code>MyBenchmark.java</code>里的注解自动生成的，具体我会在下一篇中详细介绍源代码中如何配置。</p> 
</li> <li> <p><code>CompilerHints</code>中存放了传递给 Java 虚拟机的<code>-XX:CompileCommandFile</code>参数的内容。它规定了无法内联以及必须内联的几个方法，其中便有存放业务逻辑的测试方法<code>testMethod</code>。</p> 
</li> </ol> <p>在编译<code>MyBenchmark_testMethod_jmhTest</code>类中的测试方法时，JMH 会让即时编译器强制内联对<code>MyBenchmark.testMethod</code>的方法调用，以避免调用开销。</p> 
<p>打包生成的 jar 包可以直接运行。具体指令如下所示：</p> <pre style="position: relative;"><code> <table class="hljs-ln"> 
<tbody> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> $ java -jar target/benchmarks.jar </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> WARNING: An illegal reflective access 
operation has occurred </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="3"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
... </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" 
data-line-number="4"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> Benchmark 
Mode Cnt Score Error Units </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="5"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
MyBenchmark.testMethod thrpt 25 1004801,393 ± 4055,462 ops/s </div></td> </tr> </tbody> </table></code> 
<div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 </div></pre> <p>这里 JMH 
会有非常多的输出，具体内容我会在下一篇中进行讲解。</p> <p>输出的最后便是本次基准测试的结果。其中比较重要的两项指标是<code>Score</code>和<code>Error</code>，分别代表本次基准测试的平均吞吐量（每秒运行<code>testMethod</code>方法的次数）以及误差范围。例如，这里的结果说明本次基准测试平均每秒生成 
10^6 个异常实例，误差范围大致在 4000 个异常实例。</p> <h2>总结与实践</h2> <p>今天我介绍了 OpenJDK 的性能基准测试项目 JMH。</p> <p>Java 
程序的性能测试存在着许多深坑，有来自 Java 虚拟机的，有来自操作系统的，甚至有来自硬件系统的。如果没有足够的知识，那么性能测试的结果很有可能是有偏差的。</p> <p>性能基准测试框架 
JMH 是 OpenJDK 中的其中一个开源项目。它内置了许多功能，来规避由 Java 虚拟机中的即时编译器或者其他优化对性能测试造成的影响。此外，它还提供了不少策略来降低来自操作系统以及硬件系统的影响。</p> 
<p>开发人员仅需将所要测试的业务逻辑通过<code>@Benchmark</code>注解，便可以让 JMH 的注解处理器自动生成真正的性能测试代码，以及相应的性能测试配置文件。</p> 
<hr> <p>今天的实践环节，请生成一个 JMH 项目，并且在<code>MyBenchmark.testMethod</code>方法中填入自己的业务逻辑。（除非你已经提前了解<code>@State</code>等 
JMH 功能，否则请不要在<code>MyBenchmark</code>中定义实例变量。）</p> <p>[1] <a href="https://en.wikipedia.org/wiki/Instructions_per_cycle">https://en.wikipedia.org/wiki/Instructions_per_cycle</a><br> 
[2] <a href="https://en.wikipedia.org/wiki/Branch_predictor">https://en.wikipedia.org/wiki/Branch_predictor</a><br> 
[3] <a href="https://en.wikipedia.org/wiki/Hyper-threading">https://en.wikipedia.org/wiki/Hyper-threading</a><br> 
[4] <a href="http://openjdk.java.net/projects/code-tools/jmh/">http://openjdk.java.net/projects/code-tools/jmh/</a><br> 
[5] <a href="http://hg.openjdk.java.net/code-tools/jmh/file/3769055ad883/jmh-generator-annprocess/src/main/java/org/openjdk/jmh/generators/BenchmarkProcessor.java">http://hg.openjdk.java.net/code-tools/jmh/file/3769055ad883/jmh-generator-annprocess/src/main/java/org/openjdk/jmh/generators/BenchmarkProcessor.java</a><br> 
[6] <a href="http://hg.openjdk.java.net/code-tools/jmh/file/3769055ad883/jmh-core/src/main/java/org/openjdk/jmh/annotations">http://hg.openjdk.java.net/code-tools/jmh/file/3769055ad883/jmh-core/src/main/java/org/openjdk/jmh/annotations</a><br> 
[7] <a href="http://hg.openjdk.java.net/code-tools/jmh/file/3769055ad883/jmh-core/src/main/java/org/openjdk/jmh/Main.java">http://hg.openjdk.java.net/code-tools/jmh/file/3769055ad883/jmh-core/src/main/java/org/openjdk/jmh/Main.java</a></p> 
<p><img src="https://static001.geekbang.org/resource/image/2a/d5/2a62e58cbdf56a5dc40748567d346fd5.jpg" 
alt=""></p>', '', 'book', 0, 'full_html', 'zh-hans', 14, 14) 
 {executed in 11 msec}
2020-11-19 20:09:44.025 INFO  jdbc.sqltiming Line:373 - select nodebodyen0_.entity_id as entity_i1_4_0_, nodebodyen0_.body_value as body_val2_4_0_, 
nodebodyen0_.body_summary as body_sum3_4_0_, nodebodyen0_.bundle as bundle4_4_0_, nodebodyen0_.delta 
as delta5_4_0_, nodebodyen0_.body_format as body_for6_4_0_, nodebodyen0_.langcode as langcode7_4_0_, 
nodebodyen0_.revision_id as revision8_4_0_ from node__body nodebodyen0_ where nodebodyen0_.entity_id=14 
 {executed in 1 msec}
2020-11-19 20:09:44.027 INFO  jdbc.resultsettable Line:610 - 
|----------|-----------|-------------|-------|------|------------|---------|------------|
|entity_id |body_value |body_summary |bundle |delta |body_format |langcode |revision_id |
|----------|-----------|-------------|-------|------|------------|---------|------------|
|----------|-----------|-------------|-------|------|------------|---------|------------|

2020-11-19 20:09:44.103 INFO  jdbc.sqltiming Line:373 - insert into node__body (body_value, body_summary, bundle, delta, body_format, langcode, revision_id, 
entity_id) values ('<p>今天我们来聊聊性能基准测试（benchmarking）。</p> <p>大家或许都看到过一些不严谨的性能测试，以及基于这些测试结果得出的令人匪夷所思的结论。</p> 
<pre style="position: relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> static int foo() { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> int i = 0; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div 
class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td> <td class="hljs-ln-code"> <div 
class="hljs-ln-line"> while (i &lt; 1_000_000_000) { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> i++; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="5"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
} </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> return i; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="7"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> } </div></td> </tr> </tbody> </table></code> <div class="richcontent-pre-copy"> 
<span class="iconfont"></span>复制代码 </div></pre> <p>举个例子，上面这段代码中的<code>foo</code>方法，将进行 10^9 
次加法操作及跳转操作。</p> <p>不少开发人员，包括我在介绍反射调用那一篇中所做的性能测试，都使用了下面这段代码的测量方式，即通过<code>System.nanoTime</code>或者<code>System.currentTimeMillis</code>来测量每若干个操作（如连续调用 
1000 次<code>foo</code>方法）所花费的时间。</p> <pre style="position: relative;"><code> <table class="hljs-ln"> 
<tbody> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> public class LoopPerformanceTest { </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> static int foo() { ... } </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> public static void main(String[] args) { </div></td> </tr> <tr> 
<td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> // warmup </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> for (int i = 0; i &lt; 20_000; i++) { </div></td> </tr> <tr> <td 
class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="7"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> foo(); </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="8"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> } </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="9"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
// measurement </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="10"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
long current = System.nanoTime(); </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div 
class="hljs-ln-line hljs-ln-n" data-line-number="11"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> for (int i = 1; i &lt;= 10_000; i++) { </div></td> </tr> <tr> <td 
class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="12"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> foo(); </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="13"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> if (i % 1000 == 0) { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="14"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> long temp = System.nanoTime(); </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="15"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> System.out.println(temp - current); </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="16"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> current = System.nanoTime(); </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="17"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> } </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="18"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
} </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="19"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> } </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="20"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> } </div></td> </tr> </tbody> </table></code> <div class="richcontent-pre-copy"> 
<span class="iconfont"></span>复制代码 </div></pre> <p>这种测量方式实际上过于理性化，忽略了 Java 虚拟机、操作系统，乃至硬件系统所带来的影响。</p> 
<h2>性能测试的坑</h2> <p>关于 Java 虚拟机所带来的影响，我们在前面的篇章中已经介绍过不少，如 Java 虚拟机堆空间的自适配，即时编译等。</p> <p>在上面这段代码中，真正进行测试的代码（即<code>// 
measurement</code>后的代码）由于循环次数不多，属于冷循环，没有能触发 OSR 编译。</p> <p>也就是说，我们会在<code>main</code>方法中解释执行，然后调用<code>foo</code>方法即时编译生成的机器码中。这种混杂了解释执行以及即时编译生成代码的测量方式，其得到的数据含义不明。</p><!-- 
[[[read_end]]] --> <p>有同学认为，我们可以假设<code>foo</code>方法耗时较长（毕竟 10^9 次加法），因此<code>main</code>方法的解释执行并不会对最终计算得出的性能数据造成太大影响。上面这段代码在我的机器上测出的结果是，每 
1000 次<code>foo</code>方法调用在 20 微秒左右。</p> <p>这是否意味着，我这台机器的 CPU 已经远超它的物理限制，其频率达到 100,000,000 
GHz 了。（假设循环主体就两条指令，每时钟周期指令数 [1] 为 1。）这显然是不可能的，目前 CPU 单核的频率大概在 2-5 GHz 左右，再怎么超频也不可能提升七八个数量级。</p> 
<p>你应该能够猜到，这和即时编译器的循环优化有关。下面便是<code>foo</code>方法的编译结果。我们可以看到，它将直接返回 10^9，而不是循环 10^9 次，并在循环中重复进行加法。</p> 
<pre style="position: relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> 0x8aa0: sub rsp,0x18 // 创建方法栈桢 </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> 0x8aa7: mov QWORD PTR [rsp+0x10],rbp // 无关指令 </div></td> </tr> <tr> 
<td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> 0x8aac: mov eax,0x3b9aca00 // return 10^9 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> 0x8ab1: add rsp,0x10 // 弹出方法栈桢 </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> 0x8ab5: pop rbp // 无关指令 </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> 0x8ab6: mov r10,QWORD PTR [r15+0x70] // 
安全点测试 </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" 
data-line-number="7"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 0x8aba: 
test DWORD PTR [r10],eax // 安全点测试 </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div 
class="hljs-ln-line hljs-ln-n" data-line-number="8"></div></td> <td class="hljs-ln-code"> <div 
class="hljs-ln-line"> 0x8abd: ret </div></td> </tr> </tbody> </table></code> <div class="richcontent-pre-copy"> 
<span class="iconfont"></span>复制代码 </div></pre> <blockquote> <p>之前我忘记解释所谓的”无关指令“是什么意思。我指的是该指令和具体的代码逻辑无关。即时编译器生成的代码可能会将 
RBP 寄存器作为通用寄存器，从而是寄存器分配算法有更多的选择。由于调用者（caller）未必保存了 RBP 寄存器的值，所以即时编译器会在进入被调用者（callee）时保存 RBP 
的值，并在退出被调用者时复原 RBP 的值。</p> </blockquote> <pre style="position: relative;"><code> <table class="hljs-ln"> 
<tbody> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> static int foo() { </div></td> </tr> <tr> 
<td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> int i = 0; </div></td> </tr> <tr> <td 
class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> while (i &lt; 1_000_000_000) { </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> i++; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> } </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="6"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
return i; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" 
data-line-number="7"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> } </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="8"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> // 优化为 </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="9"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> static int foo() { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="10"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> return 1_000_000_000; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="11"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> } </div></td> </tr> </tbody> </table></code> <div class="richcontent-pre-copy"> 
<span class="iconfont"></span>复制代码 </div></pre> <p>该循环优化并非循环展开。在默认情况下，即时编译器仅能将循环展开 60 次（对应虚拟机参数<code>-XX:LoopUnrollLimit</code>）。实际上，在介绍循环优化那篇文章中，我并没有提及这个优化。因为该优化实在是太过于简单，几乎所有开发人员都能够手工对其进行优化。</p> 
<p>在即时编译器中，它是一个基于计数循环的优化。我们也已经学过计数循环的知识。也就是说，只要将循环变量<code>i</code>改为 long 类型，便可以“避免”这个优化。</p> 
<p>关于操作系统和硬件系统所带来的影响，一个较为常见的例子便是电源管理策略。在许多机器，特别是笔记本上，操作系统会动态配置 CPU 的频率。而 CPU 的频率又直接影响到性能测试的数据，因此短时间的性能测试得出的数据未必可靠。</p> 
<p><img src="https://static001.geekbang.org/resource/image/07/97/07ca617893718782b8eb58344b7bb097.jpeg" 
alt=""></p> <p>例如我的笔记本，在刚开始进行性能评测时，单核频率可以达到 4.0 GHz。而后由于 CPU 温度升高，频率便被限制在 3.0 GHz 了。</p> <p>除了电源管理之外，CPU 
缓存、分支预测器 [2]，以及超线程技术 [3]，都会对测试结果造成影响。</p> <p>就 CPU 缓存而言，如果程序的数据本地性较好，那么它的性能指标便会非常好；如果程序存在 false 
sharing 的问题，即几个线程写入内存中属于同一缓存行的不同部分，那么它的性能指标便会非常糟糕。</p> <p>超线程技术是另一个可能误导性能测试工具的因素。我们知道，超线程技术将为每个物理核心虚拟出两个虚拟核心，从而尽可能地提高物理核心的利用率。如果性能测试的两个线程被安排在同一物理核心上，那么得到的测试数据显然要比被安排在不同物理核心上的数据糟糕得多。</p> 
<p>总而言之，性能基准测试存在着许多深坑（pitfall）。然而，除了性能测试专家外，大多数开发人员都没有足够全面的知识，能够绕开这些坑，因而得出的性能测试数据很有可能是有偏差的（biased）。</p> 
<p>下面我将介绍 OpenJDK 中的开源项目 JMH[4]（Java Microbenchmark Harness）。JMH 是一个面向 Java 语言或者其他 Java 虚拟机语言的性能基准测试框架。它针对的是纳秒级别（出自官网介绍，个人觉得精确度没那么高）、微秒级别、毫秒级别，以及秒级别的性能测试。</p> 
<p>由于许多即时编译器的开发人员参与了该项目，因此 JMH 内置了许多功能来控制即时编译器的优化。对于其他影响性能评测的因素，JMH 也提供了不少策略来降低影响，甚至是彻底解决。</p> 
<p>因此，使用这个性能基准测试框架的开发人员，可以将精力完全集中在所要测试的业务逻辑，并以最小的代价控制除了业务逻辑之外的可能影响性能的因素。</p> <pre style="position: 
relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up 
on why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial 
experiments, perform baseline and negative tests that provide experimental control, make sure 
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts. 
Do not assume the numbers tell you what you want them to tell. </div></td> </tr> </tbody> </table></code> 
<div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 </div></pre> <p>不过，JMH 
也不能完美解决性能测试数据的偏差问题。它甚至会在每次运行的输出结果中打印上述语句，所以，JMH 的开发人员也给出了一个小忠告：我们开发人员不要轻信 JMH 的性能测试数据，不要基于这些数据乱下结论。</p> 
<p>通常来说，性能基准测试的结果反映的是所测试的业务逻辑在所运行的 Java 虚拟机，操作系统，硬件系统这一组合上的性能指标，而根据这些性能指标得出的通用结论则需要经过严格论证。</p> 
<p>在理解（或忽略）了 JMH 的忠告后，我们下面便来看看如何使用 JMH。</p> <h2>生成 JMH 项目</h2> <p>JMH 的使用方式并不复杂。我们可以借助 JMH 
部署在 maven 上的 archetype，生成预设好依赖关系的 maven 项目模板。具体的命令如下所示：</p> <pre style="position: relative;"><code> 
<table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
$ mvn archetype:generate \ </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="2"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
-DinteractiveMode=false \ </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="3"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
-DarchetypeGroupId=org.openjdk.jmh \ </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div 
class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td> <td class="hljs-ln-code"> <div 
class="hljs-ln-line"> -DarchetypeArtifactId=jmh-java-benchmark-archetype \ </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> -DgroupId=org.sample \ </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> -DartifactId=test \ </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="7"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> -Dversion=1.21 </div></td> </tr> <tr> 
<td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="8"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> $ cd test </div></td> </tr> </tbody> </table></code> 
<div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 </div></pre> <p>该命令将在当前目录下生成一个<code>test</code>文件夹（对应参数<code>-DartifactId=test</code>，可更改），其中便包含了定义该 
maven 项目依赖的<code>pom.xml</code>文件，以及自动生成的测试文件<code>src/main/org/sample/MyBenchmark.java</code>（这里<code>org/sample</code>对应参数<code>-DgroupId=org.sample</code>，可更改）。后者的内容如下所示：</p> 
<pre style="position: relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> /* </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="2"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
* Copyright ... </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="3"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
*/ </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" 
data-line-number="4"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> package 
org.sample; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" 
data-line-number="5"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> import org.openjdk.jmh.annotations.Benchmark; 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="7"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="8"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> public class MyBenchmark { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="9"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="10"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
@Benchmark </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" 
data-line-number="11"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> public 
void testMethod() { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="12"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
// This is a demo/sample template for building your JMH benchmarks. Edit as needed. </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="13"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> // Put your benchmark code here. </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="14"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> } </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="15"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="16"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
} </div></td> </tr> </tbody> </table></code> <div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 
</div></pre> <p>这里面，类名<code>MyBenchmark</code>以及方法名<code>testMethod</code>并不重要，你可以随意更改。真正重要的是<code>@Benchmark</code>注解。被它标注的方法，便是 
JMH 基准测试的测试方法。该测试方法默认是空的。我们可以填入需要进行性能测试的业务逻辑。</p> <p>举个例子，我们可以测量新建异常对象的性能，如下述代码所示：</p> <pre 
style="position: relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> @Benchmark </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div 
class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> <td class="hljs-ln-code"> <div 
class="hljs-ln-line"> public void testMethod() { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> new Exception(); </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> } </div></td> </tr> </tbody> </table></code> <div class="richcontent-pre-copy"> 
<span class="iconfont"></span>复制代码 </div></pre> <p>通常来说，我们不应该使用这种貌似会被即时编译器优化掉的代码（在下篇中我会介绍 
JMH 的<code>Blackhole</code>功能）。</p> <p>不过，我们已经学习过逃逸分析了，知道 native 方法调用的调用者或者参数会被识别为逃逸。而<code>Exception</code>的构造器将间接调用至 
native 方法<code>fillInStackTrace</code>中，并且该方法调用的调用者便是新建的<code>Exception</code>对象。因此，逃逸分析将判定该新建对象逃逸，而即时编译器也无法优化掉原本的新建对象操作。</p> 
<p>当<code>Exception</code>的构造器返回时，Java 虚拟机将不再拥有指向这一新建对象的引用。因此，该新建对象可以被垃圾回收。</p> <h2>编译和运行 JMH 
项目</h2> <p>在上一篇介绍注解处理器时，我曾提到过，JMH 正是利用注解处理器 [5] 来自动生成性能测试的代码。实际上，除了<code>@Benchmark</code>之外，JMH 
的注解处理器还将处理所有位于<code>org.openjdk.jmh.annotations</code>包 [6] 下的注解。（其他注解我们会在下一篇中详细介绍。）</p> <p>我们可以运行<code>mvn 
compile</code>命令来编译这个 maven 项目。该命令将生成<code>target</code>文件夹，其中的<code>generated-sources</code>目录便存放着由 
JMH 的注解处理器所生成的 Java 源代码：</p> <pre style="position: relative;"><code> <table class="hljs-ln"> 
<tbody> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> $ mvn compile </div></td> </tr> <tr> <td 
class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> $ ls target/generated-sources/annotations/org/sample/generated/ 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> MyBenchmark_jmhType.java MyBenchmark_jmhType_B1.java 
MyBenchmark_jmhType_B2.java MyBenchmark_jmhType_B3.java MyBenchmark_testMethod_jmhTest.java 
</div></td> </tr> </tbody> </table></code> <div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 
</div></pre> <p>在这些源代码里，所有以<code>MyBenchmark_jmhType</code>为前缀的 Java 类都继承自<code>MyBenchmark</code>。这是注解处理器的常见用法，即通过生成子类来将注解所带来的额外语义扩张成方法。</p> 
<p>具体来说，它们之间的继承关系是<code>MyBenchmark_jmhType -&gt; B3 -&gt; B2 -&gt; B1 -&gt; MyBenchmark</code>（这里<code>A 
-&gt; B</code>代表 A 继承 B）。其中，B2 存放着 JMH 用来控制基准测试的各项字段。</p> <p>为了避免这些控制字段对<code>MyBenchmark</code>类中的字段造成 
false sharing 的影响，JMH 生成了 B1 和 B3，分别存放了 256 个 boolean 字段，从而避免 B2 中的字段与<code>MyBenchmark</code>类、<code>MyBenchmark_jmhType</code>类中的字段（或内存里下一个对象中的字段）会出现在同一缓存行中。</p> 
<blockquote> <p>之所以不能在同一类中安排这些字段，是因为 Java 虚拟机的字段重排列。而类之间的继承关系，便可以避免不同类所包含的字段之间的重排列。</p> </blockquote> 
<p>除了这些<code>jmhType</code>源代码外，<code>generated-sources</code>目录还存放着真正的性能测试代码<code>MyBenchmark_testMethod_jmhTest.java</code>。当进行性能测试时，Java 
虚拟机所运行的代码很有可能便是这一个源文件中的热循环经过 OSR 编译过后的代码。</p> <blockquote> <p>在通过 CompileCommand 分析即时编译后的机器码时，我们需要关注的其实是<code>MyBenchmark_testMethod_jmhTest</code>中的方法。</p> 
</blockquote> <p>由于这里面的内容过于复杂，我将在下一篇中介绍影响该生成代码的众多功能性注解，这里就不再详细进行介绍了。</p> <p>接下来，我们可以运行<code>mvn 
package</code>命令，将编译好的 class 文件打包成 jar 包。生成的 jar 包同样位于<code>target</code>目录下，其名字为<code>benchmarks.jar</code>。jar 
包里附带了一系列配置文件，如下所示：</p> <pre style="position: relative;"><code> <table class="hljs-ln"> <tbody> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> $ mvn package </div></td> </tr> <tr> <td 
class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> $ jar tf target/benchmarks.jar META-INF </div></td> </tr> <tr> <td 
class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> META-INF/MANIFEST.MF </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> META-INF/ </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> META-INF/BenchmarkList </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="7"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> META-INF/CompilerHints </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="8"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> META-INF/maven/ </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="9"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> META-INF/maven/org.sample/ </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="10"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> META-INF/maven/org.sample/test/ </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="11"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> META-INF/maven/org.sample/test/pom.xml </div></td> </tr> <tr> <td 
class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="12"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> META-INF/maven/org.sample/test/pom.properties 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="13"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> META-INF/maven/org.openjdk.jmh/ </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="14"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> META-INF/maven/org.openjdk.jmh/jmh-core/ 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="15"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> META-INF/maven/org.openjdk.jmh/jmh-core/pom.xml 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="16"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> META-INF/maven/org.openjdk.jmh/jmh-core/pom.properties 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="17"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> META-INF/maven/net.sf.jopt-simple/ </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="18"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> META-INF/maven/net.sf.jopt-simple/jopt-simple/ 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="19"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> META-INF/maven/net.sf.jopt-simple/jopt-simple/pom.xml 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="20"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> META-INF/maven/net.sf.jopt-simple/jopt-simple/pom.properties 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="21"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> META-INF/LICENSE.txt </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="22"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> META-INF/NOTICE.txt </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="23"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> META-INF/maven/org.apache.commons/ </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="24"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> META-INF/maven/org.apache.commons/commons-math3/ 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="25"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> META-INF/maven/org.apache.commons/commons-math3/pom.xml 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="26"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> META-INF/maven/org.apache.commons/commons-math3/pom.properties 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="27"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="28"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> $ unzip -c target/benchmarks.jar META-INF/MANIFEST.MF </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="29"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> Archive: target/benchmarks.jar </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="30"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> inflating: META-INF/MANIFEST.MF </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="31"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> Manifest-Version: 1.0 </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="32"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> Archiver-Version: Plexus Archiver </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="33"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> Created-By: Apache Maven 3.5.4 </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="34"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> Built-By: zhengy </div></td> </tr> <tr> 
<td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="35"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> Build-Jdk: 10.0.2 </div></td> </tr> <tr> 
<td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="36"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> Main-Class: org.openjdk.jmh.Main </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="37"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="38"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> $ unzip -c target/benchmarks.jar META-INF/BenchmarkList </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="39"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> Archive: target/benchmarks.jar </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="40"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> inflating: META-INF/BenchmarkList </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="41"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> JMH S 22 org.sample.MyBenchmark S 51 org.sample.generated.MyBenchmark_testMethod_jmhTest 
S 10 testMethod S 10 Throughput E A 1 1 1 E E E E E E E E E E E E E E E E E </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="42"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="43"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> $ unzip -c target/benchmarks.jar META-INF/CompilerHints </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="44"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> Archive: target/benchmarks.jar </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="45"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> inflating: META-INF/CompilerHints </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="46"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> dontinline,*.*_all_jmhStub </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="47"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> dontinline,*.*_avgt_jmhStub </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="48"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> dontinline,*.*_sample_jmhStub </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="49"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> dontinline,*.*_ss_jmhStub </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="50"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> dontinline,*.*_thrpt_jmhStub </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="51"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> inline,org/sample/MyBenchmark.testMethod 
</div></td> </tr> </tbody> </table></code> <div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 
</div></pre> <p>这里我展示了其中三个比较重要的配置文件。</p> <ol> <li> <p><code>MANIFEST.MF</code>中指定了该 jar 包的默认入口，即<code>org.openjdk.jmh.Main</code>[7]。</p> 
</li> <li> <p><code>BenchmarkList</code>中存放了测试配置。该配置是根据<code>MyBenchmark.java</code>里的注解自动生成的，具体我会在下一篇中详细介绍源代码中如何配置。</p> 
</li> <li> <p><code>CompilerHints</code>中存放了传递给 Java 虚拟机的<code>-XX:CompileCommandFile</code>参数的内容。它规定了无法内联以及必须内联的几个方法，其中便有存放业务逻辑的测试方法<code>testMethod</code>。</p> 
</li> </ol> <p>在编译<code>MyBenchmark_testMethod_jmhTest</code>类中的测试方法时，JMH 会让即时编译器强制内联对<code>MyBenchmark.testMethod</code>的方法调用，以避免调用开销。</p> 
<p>打包生成的 jar 包可以直接运行。具体指令如下所示：</p> <pre style="position: relative;"><code> <table class="hljs-ln"> 
<tbody> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> $ java -jar target/benchmarks.jar </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> WARNING: An illegal reflective access 
operation has occurred </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="3"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
... </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" 
data-line-number="4"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> Benchmark 
Mode Cnt Score Error Units </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="5"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
MyBenchmark.testMethod thrpt 25 1004801,393 ± 4055,462 ops/s </div></td> </tr> </tbody> </table></code> 
<div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 </div></pre> <p>这里 JMH 
会有非常多的输出，具体内容我会在下一篇中进行讲解。</p> <p>输出的最后便是本次基准测试的结果。其中比较重要的两项指标是<code>Score</code>和<code>Error</code>，分别代表本次基准测试的平均吞吐量（每秒运行<code>testMethod</code>方法的次数）以及误差范围。例如，这里的结果说明本次基准测试平均每秒生成 
10^6 个异常实例，误差范围大致在 4000 个异常实例。</p> <h2>总结与实践</h2> <p>今天我介绍了 OpenJDK 的性能基准测试项目 JMH。</p> <p>Java 
程序的性能测试存在着许多深坑，有来自 Java 虚拟机的，有来自操作系统的，甚至有来自硬件系统的。如果没有足够的知识，那么性能测试的结果很有可能是有偏差的。</p> <p>性能基准测试框架 
JMH 是 OpenJDK 中的其中一个开源项目。它内置了许多功能，来规避由 Java 虚拟机中的即时编译器或者其他优化对性能测试造成的影响。此外，它还提供了不少策略来降低来自操作系统以及硬件系统的影响。</p> 
<p>开发人员仅需将所要测试的业务逻辑通过<code>@Benchmark</code>注解，便可以让 JMH 的注解处理器自动生成真正的性能测试代码，以及相应的性能测试配置文件。</p> 
<hr> <p>今天的实践环节，请生成一个 JMH 项目，并且在<code>MyBenchmark.testMethod</code>方法中填入自己的业务逻辑。（除非你已经提前了解<code>@State</code>等 
JMH 功能，否则请不要在<code>MyBenchmark</code>中定义实例变量。）</p> <p>[1] <a href="https://en.wikipedia.org/wiki/Instructions_per_cycle">https://en.wikipedia.org/wiki/Instructions_per_cycle</a><br> 
[2] <a href="https://en.wikipedia.org/wiki/Branch_predictor">https://en.wikipedia.org/wiki/Branch_predictor</a><br> 
[3] <a href="https://en.wikipedia.org/wiki/Hyper-threading">https://en.wikipedia.org/wiki/Hyper-threading</a><br> 
[4] <a href="http://openjdk.java.net/projects/code-tools/jmh/">http://openjdk.java.net/projects/code-tools/jmh/</a><br> 
[5] <a href="http://hg.openjdk.java.net/code-tools/jmh/file/3769055ad883/jmh-generator-annprocess/src/main/java/org/openjdk/jmh/generators/BenchmarkProcessor.java">http://hg.openjdk.java.net/code-tools/jmh/file/3769055ad883/jmh-generator-annprocess/src/main/java/org/openjdk/jmh/generators/BenchmarkProcessor.java</a><br> 
[6] <a href="http://hg.openjdk.java.net/code-tools/jmh/file/3769055ad883/jmh-core/src/main/java/org/openjdk/jmh/annotations">http://hg.openjdk.java.net/code-tools/jmh/file/3769055ad883/jmh-core/src/main/java/org/openjdk/jmh/annotations</a><br> 
[7] <a href="http://hg.openjdk.java.net/code-tools/jmh/file/3769055ad883/jmh-core/src/main/java/org/openjdk/jmh/Main.java">http://hg.openjdk.java.net/code-tools/jmh/file/3769055ad883/jmh-core/src/main/java/org/openjdk/jmh/Main.java</a></p> 
<p><img src="https://static001.geekbang.org/resource/image/2a/d5/2a62e58cbdf56a5dc40748567d346fd5.jpg" 
alt=""></p>', '', 'book', 0, 'full_html', 'zh-hans', 14, 14) 
 {executed in 67 msec}
2020-11-19 20:09:44.120 INFO  jdbc.sqltiming Line:373 - select nodefiledd0_.nid as nid1_10_, nodefiledd0_.changed as changed2_10_, nodefiledd0_.created 
as created3_10_, nodefiledd0_.default_langcode as default_4_10_, nodefiledd0_.langcode as langcode5_10_, 
nodefiledd0_.promote as promote6_10_, nodefiledd0_.revision_translation_affected as revision7_10_, 
nodefiledd0_.status as status8_10_, nodefiledd0_.sticky as sticky9_10_, nodefiledd0_.title 
as title10_10_, nodefiledd0_.type as type11_10_, nodefiledd0_.uid as uid12_10_, nodefiledd0_.vid 
as vid13_10_ from node_field_data nodefiledd0_ where nodefiledd0_.nid=14 
 {executed in 3 msec}
2020-11-19 20:09:44.123 INFO  jdbc.resultsettable Line:610 - 
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|-----|----|----|
|nid |changed |created |default_langcode |langcode |promote |revision_translation_affected |status |sticky |title |type |uid |vid |
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|-----|----|----|
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|-----|----|----|

2020-11-19 20:09:44.132 INFO  jdbc.sqltiming Line:373 - select nodefieldr0_.nid as nid1_11_0_, nodefieldr0_.changed as changed2_11_0_, nodefieldr0_.created 
as created3_11_0_, nodefieldr0_.default_langcode as default_4_11_0_, nodefieldr0_.langcode 
as langcode5_11_0_, nodefieldr0_.promote as promote6_11_0_, nodefieldr0_.revision_translation_affected 
as revision7_11_0_, nodefieldr0_.status as status8_11_0_, nodefieldr0_.sticky as sticky9_11_0_, 
nodefieldr0_.title as title10_11_0_, nodefieldr0_.uid as uid11_11_0_, nodefieldr0_.vid as vid12_11_0_ 
from node_field_revision nodefieldr0_ where nodefieldr0_.nid=14 
 {executed in 3 msec}
2020-11-19 20:09:44.135 INFO  jdbc.resultsettable Line:610 - 
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|----|----|
|nid |changed |created |default_langcode |langcode |promote |revision_translation_affected |status |sticky |title |uid |vid |
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|----|----|
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|----|----|

2020-11-19 20:09:44.142 INFO  jdbc.sqltiming Line:373 - insert into node_field_revision (changed, created, default_langcode, langcode, promote, revision_translation_affected, 
status, sticky, title, uid, vid, nid) values (1605787784, 1605787784, 1, 'zh-hans', 0, 1, 1, 
0, '28丨基准测试框架JMH（上）', 1, 14, 14) 
 {executed in 3 msec}
2020-11-19 20:09:44.164 INFO  jdbc.sqltiming Line:373 - select nodefiledd0_.nid as nid1_10_0_, nodefiledd0_.changed as changed2_10_0_, nodefiledd0_.created 
as created3_10_0_, nodefiledd0_.default_langcode as default_4_10_0_, nodefiledd0_.langcode 
as langcode5_10_0_, nodefiledd0_.promote as promote6_10_0_, nodefiledd0_.revision_translation_affected 
as revision7_10_0_, nodefiledd0_.status as status8_10_0_, nodefiledd0_.sticky as sticky9_10_0_, 
nodefiledd0_.title as title10_10_0_, nodefiledd0_.type as type11_10_0_, nodefiledd0_.uid as 
uid12_10_0_, nodefiledd0_.vid as vid13_10_0_ from node_field_data nodefiledd0_ where nodefiledd0_.nid=14 
 {executed in 2 msec}
2020-11-19 20:09:44.167 INFO  jdbc.resultsettable Line:610 - 
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|-----|----|----|
|nid |changed |created |default_langcode |langcode |promote |revision_translation_affected |status |sticky |title |type |uid |vid |
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|-----|----|----|
|----|--------|--------|-----------------|---------|--------|------------------------------|-------|-------|------|-----|----|----|

2020-11-19 20:09:44.180 INFO  jdbc.sqltiming Line:373 - insert into node_field_data (changed, created, default_langcode, langcode, promote, revision_translation_affected, 
status, sticky, title, type, uid, vid, nid) values (1605787784, 1605787784, 1, 'zh-hans', 0, 
1, 1, 0, '28丨基准测试框架JMH（上）', 'book', 1, 14, 14) 
 {executed in 5 msec}
2020-11-19 20:09:44.187 INFO  jdbc.sqltiming Line:373 - select bookfieldm0_.entity_id as entity_i1_8_, bookfieldm0_.bundle as bundle2_8_, bookfieldm0_.delta 
as delta3_8_, bookfieldm0_.langcode as langcode4_8_, bookfieldm0_.field_media_value as field_me5_8_, 
bookfieldm0_.revision_id as revision6_8_ from node__field_media bookfieldm0_ where bookfieldm0_.entity_id=14 
 {executed in 1 msec}
2020-11-19 20:09:44.188 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------------|------------|
|entity_id |bundle |delta |langcode |field_media_value |revision_id |
|----------|-------|------|---------|------------------|------------|
|----------|-------|------|---------|------------------|------------|

2020-11-19 20:09:44.193 INFO  jdbc.sqltiming Line:373 - select bookfieldm0_.entity_id as entity_i1_8_0_, bookfieldm0_.bundle as bundle2_8_0_, bookfieldm0_.delta 
as delta3_8_0_, bookfieldm0_.langcode as langcode4_8_0_, bookfieldm0_.field_media_value as 
field_me5_8_0_, bookfieldm0_.revision_id as revision6_8_0_ from node__field_media bookfieldm0_ 
where bookfieldm0_.entity_id=14 
 {executed in 1 msec}
2020-11-19 20:09:44.195 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------------|------------|
|entity_id |bundle |delta |langcode |field_media_value |revision_id |
|----------|-------|------|---------|------------------|------------|
|----------|-------|------|---------|------------------|------------|

2020-11-19 20:09:44.199 INFO  jdbc.sqltiming Line:373 - insert into node__field_media (bundle, delta, langcode, field_media_value, revision_id, entity_id) 
values ('book', 0, 'zh-hans', 'https://qdall01.baidupcs.com/file/fbb28d2f0d688be04432869f213d394b?bkt=en-d3a65691252603d382e6a8db357da5699ed2beebaf8b59a14783980dd1afc339aa4b366b699c39ba&fid=3757516097-778750-635387575778768&time=1605787782&sign=FDTAXUGERLQlBHSKfWqir-DCb740ccc5511e5e8fedcff06b081203-rh9h53F3gf16IWNc2l2HOPrnAP0%3D&to=92&size=6051492&sta_dx=6051492&sta_cs=4322&sta_ft=mp3&sta_ct=7&sta_mt=0&fm2=MH%2CQingdao%2CAnywhere%2C%2Cshanghai%2Ccnc&ctime=1567182974&mtime=1605787492&resv0=-1&resv1=0&resv2=rlim&resv3=2&resv4=6051492&vuk=3757516097&iv=0&htype=&randtype=em&newver=1&newfm=1&secfm=1&flow_ver=3&pkey=en-eb7356c6bbe6f935e1f1cc6fc825dd757400b105d1bf81ba64a2d02c3100f2fd068ea268f09afbda&sl=76480590&expires=8h&rt=pr&r=747198993&mlogid=7510765563629609760&vbdid=64799653&fin=28%E4%B8%A8%E5%9F%BA%E5%87%86%E6%B5%8B%E8%AF%95%E6%A1%86%E6%9E%B6JMH%EF%BC%88%E4%B8%8A%EF%BC%89.mp3&bflag=92,34-92&rtype=1&dp-logid=7510765563629609760&dp-callid=0.1.1&hps=1&tsl=80&csl=80&fsl=-1&csign=yVzLQPCt4DblfMLqd2BCjd2RnqQ%3D&so=0&ut=6&uter=0&serv=0&uc=1458616558&ti=6271d6a92c89ad8b09c9a45f351ad7ca511fdd1e028f6026&hflag=30&adg=c_0f3c8fb981bae1fdae375754a6f1d609&reqlabel=778750_l_eeb31e180410b8be0e62f686c2b42c5d_-1_43d73532db4f9890a29565ef474ca519&ibp=1&by=themis&filename=28%E4%B8%A8%E5%9F%BA%E5%87%86%E6%B5%8B%E8%AF%95%E6%A1%86%E6%9E%B6JMH%EF%BC%88%E4%B8%8A%EF%BC%89.mp3', 
14, 14) 
 {executed in 1 msec}
2020-11-19 20:09:44.206 INFO  jdbc.sqltiming Line:373 - select nodefieldm0_.entity_id as entity_i1_17_0_, nodefieldm0_.bundle as bundle2_17_0_, nodefieldm0_.delta 
as delta3_17_0_, nodefieldm0_.langcode as langcode4_17_0_, nodefieldm0_.field_media_value as 
field_me5_17_0_, nodefieldm0_.revision_id as revision6_17_0_ from node_revision__field_media 
nodefieldm0_ where nodefieldm0_.entity_id=14 
 {executed in 1 msec}
2020-11-19 20:09:44.208 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------------|------------|
|entity_id |bundle |delta |langcode |field_media_value |revision_id |
|----------|-------|------|---------|------------------|------------|
|----------|-------|------|---------|------------------|------------|

2020-11-19 20:09:44.213 INFO  jdbc.sqltiming Line:373 - insert into node_revision__field_media (bundle, delta, langcode, field_media_value, revision_id, 
entity_id) values ('book', 0, 'zh-hans', 'https://qdall01.baidupcs.com/file/fbb28d2f0d688be04432869f213d394b?bkt=en-d3a65691252603d382e6a8db357da5699ed2beebaf8b59a14783980dd1afc339aa4b366b699c39ba&fid=3757516097-778750-635387575778768&time=1605787782&sign=FDTAXUGERLQlBHSKfWqir-DCb740ccc5511e5e8fedcff06b081203-rh9h53F3gf16IWNc2l2HOPrnAP0%3D&to=92&size=6051492&sta_dx=6051492&sta_cs=4322&sta_ft=mp3&sta_ct=7&sta_mt=0&fm2=MH%2CQingdao%2CAnywhere%2C%2Cshanghai%2Ccnc&ctime=1567182974&mtime=1605787492&resv0=-1&resv1=0&resv2=rlim&resv3=2&resv4=6051492&vuk=3757516097&iv=0&htype=&randtype=em&newver=1&newfm=1&secfm=1&flow_ver=3&pkey=en-eb7356c6bbe6f935e1f1cc6fc825dd757400b105d1bf81ba64a2d02c3100f2fd068ea268f09afbda&sl=76480590&expires=8h&rt=pr&r=747198993&mlogid=7510765563629609760&vbdid=64799653&fin=28%E4%B8%A8%E5%9F%BA%E5%87%86%E6%B5%8B%E8%AF%95%E6%A1%86%E6%9E%B6JMH%EF%BC%88%E4%B8%8A%EF%BC%89.mp3&bflag=92,34-92&rtype=1&dp-logid=7510765563629609760&dp-callid=0.1.1&hps=1&tsl=80&csl=80&fsl=-1&csign=yVzLQPCt4DblfMLqd2BCjd2RnqQ%3D&so=0&ut=6&uter=0&serv=0&uc=1458616558&ti=6271d6a92c89ad8b09c9a45f351ad7ca511fdd1e028f6026&hflag=30&adg=c_0f3c8fb981bae1fdae375754a6f1d609&reqlabel=778750_l_eeb31e180410b8be0e62f686c2b42c5d_-1_43d73532db4f9890a29565ef474ca519&ibp=1&by=themis&filename=28%E4%B8%A8%E5%9F%BA%E5%87%86%E6%B5%8B%E8%AF%95%E6%A1%86%E6%9E%B6JMH%EF%BC%88%E4%B8%8A%EF%BC%89.mp3', 
14, 14) 
 {executed in 1 msec}
2020-11-19 20:09:44.228 INFO  jdbc.sqltiming Line:373 - select bookfieldc0_.entity_id as entity_i1_5_, bookfieldc0_.bundle as bundle2_5_, bookfieldc0_.field_comment_value 
as field_co3_5_, bookfieldc0_.delta as delta4_5_, bookfieldc0_.field_comment_format as field_co5_5_, 
bookfieldc0_.langcode as langcode6_5_, bookfieldc0_.revision_id as revision7_5_ from node__field_comment 
bookfieldc0_ where bookfieldc0_.entity_id=14 
 {executed in 1 msec}
2020-11-19 20:09:44.230 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|--------------------|------|---------------------|---------|------------|
|entity_id |bundle |field_comment_value |delta |field_comment_format |langcode |revision_id |
|----------|-------|--------------------|------|---------------------|---------|------------|
|----------|-------|--------------------|------|---------------------|---------|------------|

2020-11-19 20:09:44.234 INFO  jdbc.sqltiming Line:373 - select bookfieldc0_.entity_id as entity_i1_5_0_, bookfieldc0_.bundle as bundle2_5_0_, bookfieldc0_.field_comment_value 
as field_co3_5_0_, bookfieldc0_.delta as delta4_5_0_, bookfieldc0_.field_comment_format as 
field_co5_5_0_, bookfieldc0_.langcode as langcode6_5_0_, bookfieldc0_.revision_id as revision7_5_0_ 
from node__field_comment bookfieldc0_ where bookfieldc0_.entity_id=14 
 {executed in 1 msec}
2020-11-19 20:09:44.235 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|--------------------|------|---------------------|---------|------------|
|entity_id |bundle |field_comment_value |delta |field_comment_format |langcode |revision_id |
|----------|-------|--------------------|------|---------------------|---------|------------|
|----------|-------|--------------------|------|---------------------|---------|------------|

2020-11-19 20:09:44.241 INFO  jdbc.sqltiming Line:373 - insert into node__field_comment (bundle, field_comment_value, delta, field_comment_format, 
langcode, revision_id, entity_id) values ('book', '<li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/10/49/06/b90049f4.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>shitao</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2018-12-26 </div> </div> <div 
class="_2eMTs2JE_0"> <div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class="">3</span> 
</div> <!----> <!----> </div> </div> <div class="_3M6kV3zb_0"> 这篇还没留言啊，总结下自己的一点jmh测试经验吧，希望老师指导。 
<br>1. 最好在专门的机器上做测试而不是自己的pc <br>2. 依赖的外部资源如redis，db等，测试过程中最好是独占的 <br>3. 测试时间不宜过短，我一般10min以上吧 
</div> <div class="_2r3UB1GX_0"> <span>展开</span><i class="iconfont"></i> </div> <!----> </div></li>', 
0, 'full_html', 'zh-hans', 14, 14) 
 {executed in 1 msec}
2020-11-19 20:09:44.247 INFO  jdbc.sqltiming Line:373 - select nodefieldc0_.entity_id as entity_i1_14_0_, nodefieldc0_.bundle as bundle2_14_0_, nodefieldc0_.field_comment_value 
as field_co3_14_0_, nodefieldc0_.delta as delta4_14_0_, nodefieldc0_.field_comment_format as 
field_co5_14_0_, nodefieldc0_.langcode as langcode6_14_0_, nodefieldc0_.revision_id as revision7_14_0_ 
from node_revision__field_comment nodefieldc0_ where nodefieldc0_.entity_id=14 
 {executed in 1 msec}
2020-11-19 20:09:44.249 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|--------------------|------|---------------------|---------|------------|
|entity_id |bundle |field_comment_value |delta |field_comment_format |langcode |revision_id |
|----------|-------|--------------------|------|---------------------|---------|------------|
|----------|-------|--------------------|------|---------------------|---------|------------|

2020-11-19 20:09:44.253 INFO  jdbc.sqltiming Line:373 - insert into node_revision__field_comment (bundle, field_comment_value, delta, field_comment_format, 
langcode, revision_id, entity_id) values ('book', '<li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/10/49/06/b90049f4.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<span>shitao</span> <!----> </div> <div class="_1H1Z49Dr_0"> 2018-12-26 </div> </div> <div 
class="_2eMTs2JE_0"> <div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class="">3</span> 
</div> <!----> <!----> </div> </div> <div class="_3M6kV3zb_0"> 这篇还没留言啊，总结下自己的一点jmh测试经验吧，希望老师指导。 
<br>1. 最好在专门的机器上做测试而不是自己的pc <br>2. 依赖的外部资源如redis，db等，测试过程中最好是独占的 <br>3. 测试时间不宜过短，我一般10min以上吧 
</div> <div class="_2r3UB1GX_0"> <span>展开</span><i class="iconfont"></i> </div> <!----> </div></li>', 
0, 'full_html', 'zh-hans', 14, 14) 
 {executed in 0 msec}
2020-11-19 20:09:44.260 INFO  jdbc.sqltiming Line:373 - select bookfieldt0_.entity_id as entity_i1_9_, bookfieldt0_.bundle as bundle2_9_, bookfieldt0_.delta 
as delta3_9_, bookfieldt0_.langcode as langcode4_9_, bookfieldt0_.revision_id as revision5_9_, 
bookfieldt0_.field_thumb_value as field_th6_9_ from node__field_thumb bookfieldt0_ where bookfieldt0_.entity_id=14 
 {executed in 1 msec}
2020-11-19 20:09:44.261 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------|------------------|
|entity_id |bundle |delta |langcode |revision_id |field_thumb_value |
|----------|-------|------|---------|------------|------------------|
|----------|-------|------|---------|------------|------------------|

2020-11-19 20:09:44.265 INFO  jdbc.sqltiming Line:373 - select bookfieldt0_.entity_id as entity_i1_9_0_, bookfieldt0_.bundle as bundle2_9_0_, bookfieldt0_.delta 
as delta3_9_0_, bookfieldt0_.langcode as langcode4_9_0_, bookfieldt0_.revision_id as revision5_9_0_, 
bookfieldt0_.field_thumb_value as field_th6_9_0_ from node__field_thumb bookfieldt0_ where 
bookfieldt0_.entity_id=14 
 {executed in 1 msec}
2020-11-19 20:09:44.266 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------|------------------|
|entity_id |bundle |delta |langcode |revision_id |field_thumb_value |
|----------|-------|------|---------|------------|------------------|
|----------|-------|------|---------|------------|------------------|

2020-11-19 20:09:44.271 INFO  jdbc.sqltiming Line:373 - insert into node__field_thumb (bundle, delta, langcode, revision_id, field_thumb_value, entity_id) 
values ('book', 0, 'zh-hans', 14, 'https://static001.geekbang.org/resource/image/19/86/190ba3bca5481fbbbbbd01a22ed0b286.jpg', 
14) 
 {executed in 1 msec}
2020-11-19 20:09:44.277 INFO  jdbc.sqltiming Line:373 - select nodefieldt0_.entity_id as entity_i1_18_0_, nodefieldt0_.bundle as bundle2_18_0_, nodefieldt0_.delta 
as delta3_18_0_, nodefieldt0_.langcode as langcode4_18_0_, nodefieldt0_.revision_id as revision5_18_0_, 
nodefieldt0_.field_thumb_value as field_th6_18_0_ from node_revision__field_thumb nodefieldt0_ 
where nodefieldt0_.entity_id=14 
 {executed in 1 msec}
2020-11-19 20:09:44.279 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------|------------------|
|entity_id |bundle |delta |langcode |revision_id |field_thumb_value |
|----------|-------|------|---------|------------|------------------|
|----------|-------|------|---------|------------|------------------|

2020-11-19 20:09:44.284 INFO  jdbc.sqltiming Line:373 - insert into node_revision__field_thumb (bundle, delta, langcode, revision_id, field_thumb_value, 
entity_id) values ('book', 0, 'zh-hans', 14, 'https://static001.geekbang.org/resource/image/19/86/190ba3bca5481fbbbbbd01a22ed0b286.jpg', 
14) 
 {executed in 1 msec}
2020-11-19 20:09:44.291 INFO  jdbc.sqltiming Line:373 - select bookfieldf0_.entity_id as entity_i1_6_0_, bookfieldf0_.bundle as bundle2_6_0_, bookfieldf0_.delta 
as delta3_6_0_, bookfieldf0_.field_fenlei_target_id as field_fe4_6_0_, bookfieldf0_.langcode 
as langcode5_6_0_, bookfieldf0_.revision_id as revision6_6_0_ from node__field_fenlei bookfieldf0_ 
where bookfieldf0_.entity_id=14 
 {executed in 1 msec}
2020-11-19 20:09:44.292 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------------|---------|------------|
|entity_id |bundle |delta |field_fenlei_target_id |langcode |revision_id |
|----------|-------|------|-----------------------|---------|------------|
|----------|-------|------|-----------------------|---------|------------|

2020-11-19 20:09:44.297 INFO  jdbc.sqltiming Line:373 - insert into node__field_fenlei (bundle, delta, field_fenlei_target_id, langcode, revision_id, 
entity_id) values ('book', 0, 1, 'zh-hans', 14, 14) 
 {executed in 0 msec}
2020-11-19 20:09:44.303 INFO  jdbc.sqltiming Line:373 - select nodefieldf0_.entity_id as entity_i1_15_0_, nodefieldf0_.bundle as bundle2_15_0_, nodefieldf0_.delta 
as delta3_15_0_, nodefieldf0_.field_fenlei_target_id as field_fe4_15_0_, nodefieldf0_.langcode 
as langcode5_15_0_, nodefieldf0_.revision_id as revision6_15_0_ from node_revision__field_fenlei 
nodefieldf0_ where nodefieldf0_.entity_id=14 
 {executed in 1 msec}
2020-11-19 20:09:44.305 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------------|---------|------------|
|entity_id |bundle |delta |field_fenlei_target_id |langcode |revision_id |
|----------|-------|------|-----------------------|---------|------------|
|----------|-------|------|-----------------------|---------|------------|

2020-11-19 20:09:44.310 INFO  jdbc.sqltiming Line:373 - insert into node_revision__field_fenlei (bundle, delta, field_fenlei_target_id, langcode, revision_id, 
entity_id) values ('book', 0, 1, 'zh-hans', 14, 14) 
 {executed in 1 msec}
2020-11-19 20:09:44.317 INFO  jdbc.sqltiming Line:373 - select bookchecke0_.item_id as item_id1_2_, bookchecke0_.fsid as fsid2_2_, bookchecke0_.got 
as got3_2_, bookchecke0_.name as name4_2_ from book_check bookchecke0_ where bookchecke0_.fsid='263936438166113' 
and bookchecke0_.name='net_content' 
 {executed in 1 msec}
2020-11-19 20:09:44.318 INFO  jdbc.resultsettable Line:610 - 
|--------|-----|----|-----|
|item_id |fsid |got |name |
|--------|-----|----|-----|
|--------|-----|----|-----|

2020-11-19 20:10:06.330 INFO  jdbc.sqltiming Line:373 - select bookchecke0_.item_id as item_id1_2_, bookchecke0_.fsid as fsid2_2_, bookchecke0_.got 
as got3_2_, bookchecke0_.name as name4_2_ from book_check bookchecke0_ where bookchecke0_.fsid='263936438166113' 
and bookchecke0_.name='net_content' 
 {executed in 1 msec}
2020-11-19 20:10:06.332 INFO  jdbc.resultsettable Line:610 - 
|--------|-----|----|-----|
|item_id |fsid |got |name |
|--------|-----|----|-----|
|--------|-----|----|-----|

2020-11-19 20:10:06.338 INFO  jdbc.sqltiming Line:373 - insert into book_check (fsid, got, name) values ('263936438166113', 1, 'net_content') 
 {executed in 2 msec}
2020-11-19 20:10:06.339 INFO  jdbc.sqltiming Line:373 - getGeneratedKeys on query: insert into book_check (fsid, got, name) values ('263936438166113', 
1, 'net_content') 
 {executed in 0 msec}
2020-11-19 20:10:06.342 INFO  jdbc.resultsettable Line:610 - 
|--------------|
|generated_key |
|--------------|
|33            |
|--------------|

2020-11-19 20:10:06.358 INFO  jdbc.sqltiming Line:373 - select bookchecke0_.item_id as item_id1_2_, bookchecke0_.fsid as fsid2_2_, bookchecke0_.got 
as got3_2_, bookchecke0_.name as name4_2_ from book_check bookchecke0_ where bookchecke0_.fsid='263936438166113' 
and bookchecke0_.name='media' 
 {executed in 1 msec}
2020-11-19 20:10:06.360 INFO  jdbc.resultsettable Line:610 - 
|--------|-----|----|-----|
|item_id |fsid |got |name |
|--------|-----|----|-----|
|--------|-----|----|-----|

2020-11-19 20:10:06.756 INFO  jdbc.sqltiming Line:373 - select bookchecke0_.item_id as item_id1_2_, bookchecke0_.fsid as fsid2_2_, bookchecke0_.got 
as got3_2_, bookchecke0_.name as name4_2_ from book_check bookchecke0_ where bookchecke0_.fsid='263936438166113' 
and bookchecke0_.name='media' 
 {executed in 1 msec}
2020-11-19 20:10:06.758 INFO  jdbc.resultsettable Line:610 - 
|--------|-----|----|-----|
|item_id |fsid |got |name |
|--------|-----|----|-----|
|--------|-----|----|-----|

2020-11-19 20:10:06.762 INFO  jdbc.sqltiming Line:373 - insert into book_check (fsid, got, name) values ('263936438166113', 1, 'media') 
 {executed in 1 msec}
2020-11-19 20:10:06.764 INFO  jdbc.sqltiming Line:373 - getGeneratedKeys on query: insert into book_check (fsid, got, name) values ('263936438166113', 
1, 'media') 
 {executed in 1 msec}
2020-11-19 20:10:06.766 INFO  jdbc.resultsettable Line:610 - 
|--------------|
|generated_key |
|--------------|
|34            |
|--------------|

2020-11-19 20:10:06.780 INFO  jdbc.sqltiming Line:373 - select bookfieldf0_.entity_id as entity_i1_7_, bookfieldf0_.bundle as bundle2_7_, bookfieldf0_.delta 
as delta3_7_, bookfieldf0_.field_fsid_value as field_fs4_7_, bookfieldf0_.langcode as langcode5_7_, 
bookfieldf0_.revision_id as revision6_7_ from node__field_fsid bookfieldf0_ where bookfieldf0_.field_fsid_value='263936438166113' 
 {executed in 2 msec}
2020-11-19 20:10:06.782 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------|---------|------------|
|entity_id |bundle |delta |field_fsid_value |langcode |revision_id |
|----------|-------|------|-----------------|---------|------------|
|----------|-------|------|-----------------|---------|------------|

2020-11-19 20:10:06.787 INFO  jdbc.sqltiming Line:373 - insert into node_revision (langcode, nid, revision_default, revision_timestamp, revision_uid) 
values ('zh-hans', 0, 1, 1605787806, 1) 
 {executed in 2 msec}
2020-11-19 20:10:06.788 INFO  jdbc.sqltiming Line:373 - getGeneratedKeys on query: insert into node_revision (langcode, nid, revision_default, revision_timestamp, 
revision_uid) values ('zh-hans', 0, 1, 1605787806, 1) 
 {executed in 0 msec}
2020-11-19 20:10:06.790 INFO  jdbc.resultsettable Line:610 - 
|--------------|
|generated_key |
|--------------|
|15            |
|--------------|

2020-11-19 20:10:06.800 INFO  jdbc.sqltiming Line:373 - insert into node (langcode, type, uuid, vid) values ('zh-hans', 'book', '29fbf753-ff79-4d5a-9ad1-7c09cc6b1291', 
15) 
 {executed in 1 msec}
2020-11-19 20:10:06.802 INFO  jdbc.sqltiming Line:373 - getGeneratedKeys on query: insert into node (langcode, type, uuid, vid) values ('zh-hans', 
'book', '29fbf753-ff79-4d5a-9ad1-7c09cc6b1291', 15) 
 {executed in 0 msec}
2020-11-19 20:10:06.804 INFO  jdbc.resultsettable Line:610 - 
|--------------|
|generated_key |
|--------------|
|15            |
|--------------|

2020-11-19 20:10:06.817 INFO  jdbc.sqltiming Line:373 - update node_revision set langcode='zh-hans', nid=15, revision_default=1, revision_timestamp=1605787806, 
revision_uid=1 where vid=15 
 {executed in 1 msec}
2020-11-19 20:10:06.826 INFO  jdbc.sqltiming Line:373 - select bookfieldf0_.entity_id as entity_i1_7_0_, bookfieldf0_.bundle as bundle2_7_0_, bookfieldf0_.delta 
as delta3_7_0_, bookfieldf0_.field_fsid_value as field_fs4_7_0_, bookfieldf0_.langcode as langcode5_7_0_, 
bookfieldf0_.revision_id as revision6_7_0_ from node__field_fsid bookfieldf0_ where bookfieldf0_.entity_id=15 
 {executed in 2 msec}
2020-11-19 20:10:06.828 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------|---------|------------|
|entity_id |bundle |delta |field_fsid_value |langcode |revision_id |
|----------|-------|------|-----------------|---------|------------|
|----------|-------|------|-----------------|---------|------------|

2020-11-19 20:10:06.834 INFO  jdbc.sqltiming Line:373 - insert into node__field_fsid (bundle, delta, field_fsid_value, langcode, revision_id, entity_id) 
values ('book', 0, '263936438166113', 'zh-hans', 15, 15) 
 {executed in 0 msec}
2020-11-19 20:10:06.841 INFO  jdbc.sqltiming Line:373 - select nodefieldf0_.entity_id as entity_i1_16_0_, nodefieldf0_.bundle as bundle2_16_0_, nodefieldf0_.delta 
as delta3_16_0_, nodefieldf0_.field_fsid_value as field_fs4_16_0_, nodefieldf0_.langcode as 
langcode5_16_0_, nodefieldf0_.revision_id as revision6_16_0_ from node_revision__field_fsid 
nodefieldf0_ where nodefieldf0_.entity_id=15 
 {executed in 1 msec}
2020-11-19 20:10:06.843 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------|---------|------------|
|entity_id |bundle |delta |field_fsid_value |langcode |revision_id |
|----------|-------|------|-----------------|---------|------------|
|----------|-------|------|-----------------|---------|------------|

2020-11-19 20:10:06.847 INFO  jdbc.sqltiming Line:373 - insert into node_revision__field_fsid (bundle, delta, field_fsid_value, langcode, revision_id, 
entity_id) values ('book', 0, '263936438166113', 'zh-hans', 15, 15) 
 {executed in 1 msec}
2020-11-19 20:10:06.854 INFO  jdbc.sqltiming Line:373 - select bookentity0_.nid as nid1_1_, bookentity0_.bid as bid2_1_, bookentity0_.depth as depth3_1_, 
bookentity0_.has_children as has_chil4_1_, bookentity0_.p1 as p5_1_, bookentity0_.p2 as p6_1_, 
bookentity0_.p3 as p7_1_, bookentity0_.p4 as p8_1_, bookentity0_.p5 as p9_1_, bookentity0_.pid 
as pid10_1_, bookentity0_.weight as weight11_1_ from book bookentity0_ where bookentity0_.nid=15 
 {executed in 1 msec}
2020-11-19 20:10:06.856 INFO  jdbc.resultsettable Line:610 - 
|----|----|------|-------------|---|---|---|---|---|----|-------|
|nid |bid |depth |has_children |p1 |p2 |p3 |p4 |p5 |pid |weight |
|----|----|------|-------------|---|---|---|---|---|----|-------|
|----|----|------|-------------|---|---|---|---|---|----|-------|

2020-11-19 20:10:06.859 INFO  jdbc.sqltiming Line:373 - select bookentity0_.nid as nid1_1_0_, bookentity0_.bid as bid2_1_0_, bookentity0_.depth as 
depth3_1_0_, bookentity0_.has_children as has_chil4_1_0_, bookentity0_.p1 as p5_1_0_, bookentity0_.p2 
as p6_1_0_, bookentity0_.p3 as p7_1_0_, bookentity0_.p4 as p8_1_0_, bookentity0_.p5 as p9_1_0_, 
bookentity0_.pid as pid10_1_0_, bookentity0_.weight as weight11_1_0_ from book bookentity0_ 
where bookentity0_.nid=15 
 {executed in 1 msec}
2020-11-19 20:10:06.861 INFO  jdbc.resultsettable Line:610 - 
|----|----|------|-------------|---|---|---|---|---|----|-------|
|nid |bid |depth |has_children |p1 |p2 |p3 |p4 |p5 |pid |weight |
|----|----|------|-------------|---|---|---|---|---|----|-------|
|----|----|------|-------------|---|---|---|---|---|----|-------|

2020-11-19 20:10:06.865 INFO  jdbc.sqltiming Line:373 - insert into book (bid, depth, has_children, p1, p2, p3, p4, p5, pid, weight, nid) values (1, 
3, 0, 1, 8, 15, 0, 0, 8, 0, 15) 
 {executed in 0 msec}
2020-11-19 20:10:06.872 INFO  jdbc.sqltiming Line:373 - select nodebodyen0_.entity_id as entity_i1_4_, nodebodyen0_.body_value as body_val2_4_, nodebodyen0_.body_summary 
as body_sum3_4_, nodebodyen0_.bundle as bundle4_4_, nodebodyen0_.delta as delta5_4_, nodebodyen0_.body_format 
as body_for6_4_, nodebodyen0_.langcode as langcode7_4_, nodebodyen0_.revision_id as revision8_4_ 
from node__body nodebodyen0_ where nodebodyen0_.entity_id=15 
 {executed in 1 msec}
2020-11-19 20:10:06.874 INFO  jdbc.resultsettable Line:610 - 
|----------|-----------|-------------|-------|------|------------|---------|------------|
|entity_id |body_value |body_summary |bundle |delta |body_format |langcode |revision_id |
|----------|-----------|-------------|-------|------|------------|---------|------------|
|----------|-----------|-------------|-------|------|------------|---------|------------|

2020-11-19 20:10:06.877 INFO  jdbc.sqltiming Line:373 - select nodebodyre0_.entity_id as entity_i1_13_0_, nodebodyre0_.body_value as body_val2_13_0_, 
nodebodyre0_.body_summary as body_sum3_13_0_, nodebodyre0_.bundle as bundle4_13_0_, nodebodyre0_.delta 
as delta5_13_0_, nodebodyre0_.body_format as body_for6_13_0_, nodebodyre0_.langcode as langcode7_13_0_, 
nodebodyre0_.revision_id as revision8_13_0_ from node_revision__body nodebodyre0_ where nodebodyre0_.entity_id=15 
 {executed in 1 msec}
2020-11-19 20:10:06.879 INFO  jdbc.resultsettable Line:610 - 
|----------|-----------|-------------|-------|------|------------|---------|------------|
|entity_id |body_value |body_summary |bundle |delta |body_format |langcode |revision_id |
|----------|-----------|-------------|-------|------|------------|---------|------------|
|----------|-----------|-------------|-------|------|------------|---------|------------|

2020-11-19 20:10:06.911 INFO  jdbc.sqltiming Line:373 - insert into node_revision__body (body_value, body_summary, bundle, delta, body_format, langcode, 
revision_id, entity_id) values ('<p>注解（annotation）是 Java 5 引入的，用来为类、方法、字段、参数等 Java 结构提供额外信息的机制。我先举个例子，比如，Java 
核心类库中的<code>@Override</code>注解是被用来声明某个实例方法重写了父类的同名同参数类型的方法。</p> <pre style="position: relative;"><code> 
<table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
package java.lang; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="2"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> @Target(ElementType.METHOD) </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> @Retention(RetentionPolicy.SOURCE) </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> public @interface Override { </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> } </div></td> </tr> </tbody> </table></code> 
<div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 </div></pre> <p><code>@Override</code>注解本身被另外两个元注解（即作用在注解上的注解）所标注。其中，<code>@Target</code>用来限定目标注解所能标注的 
Java 结构，这里<code>@Override</code>便只能被用来标注方法。</p> <p><code>@Retention</code>则用来限定当前注解生命周期。注解共有三种不同的生命周期：<code>SOURCE</code>，<code>CLASS</code>或<code>RUNTIME</code>，分别表示注解只出现在源代码中，只出现在源代码和字节码中，以及出现在源代码、字节码和运行过程中。</p> 
<p>这里<code>@Override</code>便只能出现在源代码中。一旦标注了<code>@Override</code>的方法所在的源代码被编译为字节码，该注解便会被擦除。</p> 
<p>我们不难猜到，<code>@Override</code>仅对 Java 编译器有用。事实上，它会为 Java 编译器引入了一条新的编译规则，即如果所标注的方法不是 Java 
语言中的重写方法，那么编译器会报错。而当编译完成时，它的使命也就结束了。</p> <p>我们知道，Java 的注解机制允许开发人员自定义注解。这些自定义注解同样可以为 Java 编译器添加编译规则。不过，这种功能需要由开发人员提供，并且以插件的形式接入 
Java 编译器中，这些插件我们称之为注解处理器（annotation processor）。</p><!-- [[[read_end]]] --> <p>除了引入新的编译规则之外，注解处理器还可以用于修改已有的 
Java 源文件（不推荐），或者生成新的 Java 源文件。下面，我将用几个案例来详细阐述注解处理器的这些功能，以及它背后的原理。</p> <h2>注解处理器的原理</h2> <p>在介绍注解处理器之前，我们先来了解一下 
Java 编译器的工作流程。</p> <p><img src="https://static001.geekbang.org/resource/image/64/b8/64e93f67c3b422afd90966bfe9aaf5b8.png" 
alt=""></p> <p>如上图所示 出处 [1]，Java 源代码的编译过程可分为三个步骤：</p> <ol> <li>将源文件解析为抽象语法树；</li> <li>调用已注册的注解处理器；</li> 
<li>生成字节码。</li> </ol> <p>如果在第 2 步调用注解处理器过程中生成了新的源文件，那么编译器将重复第 1、2 步，解析并且处理新生成的源文件。每次重复我们称之为一轮（Round）。</p> 
<p>也就是说，第一轮解析、处理的是输入至编译器中的已有源文件。如果注解处理器生成了新的源文件，则开始第二轮、第三轮，解析并且处理这些新生成的源文件。当注解处理器不再生成新的源文件，编译进入最后一轮，并最终进入生成字节码的第 
3 步。</p> <pre style="position: relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> package foo; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="3"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
import java.lang.annotation.*; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="4"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> @Target({ ElementType.TYPE, ElementType.FIELD 
}) </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" 
data-line-number="6"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> @Retention(RetentionPolicy.SOURCE) 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="7"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> public @interface CheckGetter { </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="8"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> } </div></td> </tr> </tbody> </table></code> 
<div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 </div></pre> <p>在上面这段代码中，我定义了一个注解<code>@CheckGetter</code>。它既可以用来标注类，也可以用来标注字段。此外，它和<code>@Override</code>相同，其生命周期被限定在源代码中。</p> 
<p>下面我们来实现一个处理<code>@CheckGetter</code>注解的处理器。它将遍历被标注的类中的实例字段，并检查有没有相应的<code>getter</code>方法。</p> 
<pre style="position: relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> public interface Processor { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="3"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
void init(ProcessingEnvironment processingEnv); </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="5"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
Set&lt;String&gt; getSupportedAnnotationTypes(); </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="7"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
SourceVersion getSupportedSourceVersion(); </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="8"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="9"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
boolean process(Set&lt;? extends TypeElement&gt; annotations, RoundEnvironment roundEnv); </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="10"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="11"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> ... </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="12"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
} </div></td> </tr> </tbody> </table></code> <div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 
</div></pre> <p>所有的注解处理器类都需要实现接口<code>Processor</code>。该接口主要有四个重要方法。其中，<code>init</code>方法用来存放注解处理器的初始化代码。之所以不用构造器，是因为在 
Java 编译器中，注解处理器的实例是通过反射 API 生成的。也正是因为使用反射 API，每个注解处理器类都需要定义一个无参数构造器。</p> <p>通常来说，当编写注解处理器时，我们不声明任何构造器，并依赖于 
Java 编译器，为之插入一个无参数构造器。而具体的初始化代码，则放入<code>init</code>方法之中。</p> <p>在剩下的三个方法中，<code>getSupportedAnnotationTypes</code>方法将返回注解处理器所支持的注解类型，这些注解类型只需用字符串形式表示即可。</p> 
<p><code>getSupportedSourceVersion</code>方法将返回该处理器所支持的 Java 版本，通常，这个版本需要与你的 Java 编译器版本保持一致；而<code>process</code>方法则是最为关键的注解处理方法。</p> 
<p>JDK 提供了一个实现<code>Processor</code>接口的抽象类<code>AbstractProcessor</code>。该抽象类实现了<code>init</code>、<code>getSupportedAnnotationTypes</code>和<code>getSupportedSourceVersion</code>方法。</p> 
<p>它的子类可以通过<code>@SupportedAnnotationTypes</code>和<code>@SupportedSourceVersion</code>注解来声明所支持的注解类型以及 
Java 版本。</p> <p>下面这段代码便是<code>@CheckGetter</code>注解处理器的实现。由于我使用了 Java 10 的编译器，因此将支持版本设置为<code>SourceVersion.RELEASE_10</code>。</p> 
<pre style="position: relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> package bar; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="3"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
import java.util.Set; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="4"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> import javax.annotation.processing.*; 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> import javax.lang.model.SourceVersion; 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="7"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> import javax.lang.model.element.*; </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="8"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> import javax.lang.model.util.ElementFilter; 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="9"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> import javax.tools.Diagnostic.Kind; </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="10"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="11"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> import foo.CheckGetter; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="12"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="13"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
@SupportedAnnotationTypes("foo.CheckGetter") </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="14"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> @SupportedSourceVersion(SourceVersion.RELEASE_10) </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="15"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> public class CheckGetterProcessor extends 
AbstractProcessor { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="16"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="17"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> @Override </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="18"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> public boolean process(Set&lt;? extends TypeElement&gt; annotations, 
RoundEnvironment roundEnv) { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="19"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
// TODO: annotated ElementKind.FIELD </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div 
class="hljs-ln-line hljs-ln-n" data-line-number="20"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> for (TypeElement annotatedClass : ElementFilter.typesIn(roundEnv.getElementsAnnotatedWith(CheckGetter.class))) 
{ </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="21"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> for (VariableElement field : ElementFilter.fieldsIn(annotatedClass.getEnclosedElements())) 
{ </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="22"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> if (!containsGetter(annotatedClass, field.getSimpleName().toString())) 
{ </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="23"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> processingEnv.getMessager().printMessage(Kind.ERROR, 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="24"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> String.format("getter not found for ''%s.%s''.", 
annotatedClass.getSimpleName(), field.getSimpleName())); </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="25"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> } </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="26"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
} </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="27"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> } </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="28"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> return true; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="29"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> } </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="30"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="31"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> private static boolean containsGetter(TypeElement 
typeElement, String name) { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="32"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
String getter = "get" + name.substring(0, 1).toUpperCase() + name.substring(1).toLowerCase(); 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="33"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> for (ExecutableElement executableElement 
: ElementFilter.methodsIn(typeElement.getEnclosedElements())) { </div></td> </tr> <tr> <td 
class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="34"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> if (!executableElement.getModifiers().contains(Modifier.STATIC) 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="35"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> &amp;&amp; executableElement.getSimpleName().toString().equals(getter) 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="36"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> &amp;&amp; executableElement.getParameters().isEmpty()) 
{ </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="37"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> return true; </div></td> </tr> <tr> <td 
class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="38"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> } </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="39"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> } </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="40"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
return false; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="41"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
} </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="42"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> } </div></td> </tr> </tbody> </table></code> 
<div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 </div></pre> <p>该注解处理器仅重写了<code>process</code>方法。这个方法将接收两个参数，分别代表该注解处理器所能处理的注解类型，以及囊括当前轮生成的抽象语法树的<code>RoundEnvironment</code>。</p> 
<p>由于该处理器针对的注解仅有<code>@CheckGetter</code>一个，而且我们并不会读取注解中的值，因此第一个参数并不重要。在代码中，我直接使用了</p> <pre 
style="position: relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> `roundEnv.getElementsAnnotatedWith(CheckGetter.class)` </div></td> 
</tr> </tbody> </table></code> <div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 
</div></pre> <p>来获取所有被<code>@CheckGetter</code>注解的类（以及字段）。</p> <p><code>process</code>方法涉及各种不同类型的<code>Element</code>，分别指代 
Java 程序中的各个结构。如<code>TypeElement</code>指代类或者接口，<code>VariableElement</code>指代字段、局部变量、enum 常量等，<code>ExecutableElement</code>指代方法或者构造器。</p> 
<pre style="position: relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> package foo; // PackageElement </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="3"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
class Foo { // TypeElement </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="4"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
int a; // VariableElement </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="5"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
static int b; // VariableElement </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="6"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
Foo () {} // ExecutableElement </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="7"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
void setA ( // ExecutableElement </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="8"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
int newA // VariableElement </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="9"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
) {} </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" 
data-line-number="10"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> } </div></td> 
</tr> </tbody> </table></code> <div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 
</div></pre> <p>这些结构之间也有从属关系，如上面这段代码所示 (出处 [2]）。我们可以通过<code>TypeElement.getEnclosedElements</code>方法，获得上面这段代码中<code>Foo</code>类的字段、构造器以及方法。</p> 
<p>我们也可以通过<code>ExecutableElement.getParameters</code>方法，获得<code>setA</code>方法的参数。具体这些<code>Element</code>类都有哪些 
API，你可以参考它们的 Javadoc[3]。</p> <p>在将该注解处理器编译成 class 文件后，我们便可以将其注册为 Java 编译器的插件，并用来处理其他源代码。注册的方法主要有两种。第一种是直接使用 
javac 命令的<code>-processor</code>参数，如下所示：</p> <pre style="position: relative;"><code> <table 
class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" 
data-line-number="1"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> $ javac 
-cp /CLASSPATH/TO/CheckGetterProcessor -processor bar.CheckGetterProcessor Foo.java </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> error: Class ''Foo'' is annotated as @CheckGetter, 
but field ''a'' is without getter </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div 
class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td> <td class="hljs-ln-code"> <div 
class="hljs-ln-line"> 1 error </div></td> </tr> </tbody> </table></code> <div class="richcontent-pre-copy"> 
<span class="iconfont"></span>复制代码 </div></pre> <p>第二种则是将注解处理器编译生成的 class 文件压缩入 jar 包中，并在 
jar 包的配置文件中记录该注解处理器的包名及类名，即<code>bar.CheckGetterProcessor</code>。</p> <pre style="position: 
relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
（具体路径及配置文件名为`META-INF/services/javax.annotation.processing.Processor`） </div></td> </tr> </tbody> 
</table></code> <div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 </div></pre> 
<p>当启动 Java 编译器时，它会寻找 classpath 路径上的 jar 包是否包含上述配置文件，并自动注册其中记录的注解处理器。</p> <pre style="position: 
relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
$ javac -cp /PATH/TO/CheckGetterProcessor.jar Foo.java </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> error: Class ''Foo'' is annotated as @CheckGetter, but field ''a'' 
is without getter </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="3"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
1 error </div></td> </tr> </tbody> </table></code> <div class="richcontent-pre-copy"> <span 
class="iconfont"></span>复制代码 </div></pre> <p>此外，我们还可以在 IDE 中配置注解处理器。这里我就不过多演示了，感兴趣的同学可以自行搜索。</p> 
<h2>利用注解处理器生成源代码</h2> <p>前面提到，注解处理器可以用来修改已有源代码或者生成源代码。</p> <p>确切地说，注解处理器并不能真正地修改已有源代码。这里指的是修改由 
Java 源代码生成的抽象语法树，在其中修改已有树节点或者插入新的树节点，从而使生成的字节码发生变化。</p> <p>对抽象语法树的修改涉及了 Java 编译器的内部 API，这部分很可能随着版本变更而失效。因此，我并不推荐这种修改方式。</p> 
<p>如果你感兴趣的话，可以参考 [Project Lombok][4]。这个项目自定义了一系列注解，并根据注解的内容来修改已有的源代码。例如它提供了<code>@Getter</code>和<code>@Setter</code>注解，能够为程序自动添加<code>getter</code>以及<code>setter</code>方法。有关对使用内部 
API 的讨论，你可以参考 [这篇博客][5]，以及 [Lombok 的回应][6]。</p> <p>用注解处理器来生成源代码则比较常用。我们以前介绍过的压力测试 jcstress，以及接下来即将介绍的 
JMH 工具，都是依赖这种方式来生成测试代码的。</p> <pre style="position: relative;"><code> <table class="hljs-ln"> 
<tbody> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> package foo; </div></td> </tr> <tr> <td 
class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> import java.lang.annotation.*; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="5"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
@Target(ElementType.METHOD) </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="6"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
@Retention(RetentionPolicy.SOURCE) </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div 
class="hljs-ln-line hljs-ln-n" data-line-number="7"></div></td> <td class="hljs-ln-code"> <div 
class="hljs-ln-line"> public @interface Adapt { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="8"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> Class&lt;?&gt; value(); </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="9"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> } </div></td> </tr> </tbody> </table></code> <div class="richcontent-pre-copy"> 
<span class="iconfont"></span>复制代码 </div></pre> <p>在上面这段代码中，我定义了一个注解<code>@Adapt</code>。这个注解将接收一个<code>Class</code>类型的参数<code>value</code>（如果注解类仅包含一个名为<code>value</code>的参数时，那么在使用注解时，我们可以省略<code>value=</code>），具体用法如这段代码所示。</p> 
<pre style="position: relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> // Bar.java </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> package test; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> import java.util.function.IntBinaryOperator; </div></td> </tr> <tr> 
<td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> import foo.Adapt; </div></td> </tr> <tr> 
<td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> public class Bar { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="7"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> @Adapt(IntBinaryOperator.class) </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="8"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> public static int add(int a, int b) { </div></td> </tr> <tr> <td 
class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="9"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> return a + b; </div></td> </tr> <tr> <td 
class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="10"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> } </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="11"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> } </div></td> </tr> </tbody> </table></code> <div class="richcontent-pre-copy"> 
<span class="iconfont"></span>复制代码 </div></pre> <p>接下来，我们来实现一个处理<code>@Adapt</code>注解的处理器。该处理器将生成一个新的源文件，实现参数<code>value</code>所指定的接口，并且调用至被该注解所标注的方法之中。具体的实现代码比较长，建议你在<a 
href="https://time.geekbang.org/column/108">网页端</a>观看。</p> <pre style="position: relative;"><code> 
<table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
package bar; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" 
data-line-number="2"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> import java.io.*; </div></td> </tr> <tr> 
<td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> import java.util.Set; </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> import javax.annotation.processing.*; </div></td> </tr> <tr> <td 
class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="7"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> import javax.lang.model.SourceVersion; 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="8"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> import javax.lang.model.element.*; </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="9"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> import javax.lang.model.type.TypeMirror; 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="10"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> import javax.lang.model.util.ElementFilter; 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="11"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> import javax.tools.JavaFileObject; </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="12"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="13"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> import javax.tools.Diagnostic.Kind; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="14"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="15"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
@SupportedAnnotationTypes("foo.Adapt") </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="16"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> @SupportedSourceVersion(SourceVersion.RELEASE_10) </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="17"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> public class AdaptProcessor extends AbstractProcessor 
{ </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="18"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="19"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> @Override </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div 
class="hljs-ln-line hljs-ln-n" data-line-number="20"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> public boolean process(Set&lt;? extends TypeElement&gt; annotations, 
RoundEnvironment roundEnv) { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="21"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
for (TypeElement annotation : annotations) { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="22"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> if (!"foo.Adapt".equals(annotation.getQualifiedName().toString())) 
{ </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="23"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> continue; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="24"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> } </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="25"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="26"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> ExecutableElement targetAsKey = getExecutable(annotation, 
"value"); </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" 
data-line-number="27"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="28"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> for (ExecutableElement annotatedMethod 
: ElementFilter.methodsIn(roundEnv.getElementsAnnotatedWith(annotation))) { </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="29"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> if (!annotatedMethod.getModifiers().contains(Modifier.PUBLIC)) 
{ </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="30"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> processingEnv.getMessager().printMessage(Kind.ERROR, 
"@Adapt on non-public method"); </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="31"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
continue; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" 
data-line-number="32"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> } </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="33"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> if (!annotatedMethod.getModifiers().contains(Modifier.STATIC)) 
{ </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="34"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> // TODO support non-static methods </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="35"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> continue; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="36"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> } </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="37"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="38"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> TypeElement targetInterface = getAnnotationValueAsTypeElement(annotatedMethod, 
annotation, targetAsKey); </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="39"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
if (targetInterface.getKind() != ElementKind.INTERFACE) { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="40"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> processingEnv.getMessager().printMessage(Kind.ERROR, "@Adapt with 
non-interface input"); </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="41"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
continue; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" 
data-line-number="42"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> } </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="43"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="44"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> TypeElement enclosingType = getTopLevelEnclosingType(annotatedMethod); 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="45"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> createAdapter(enclosingType, annotatedMethod, 
targetInterface); </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="46"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
} </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="47"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> } </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="48"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> return true; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="49"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> } </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="50"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="51"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> private void createAdapter(TypeElement 
enclosingClass, ExecutableElement annotatedMethod, </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="52"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> TypeElement targetInterface) { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="53"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> PackageElement packageElement = (PackageElement) enclosingClass.getEnclosingElement(); 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="54"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> String packageName = packageElement.getQualifiedName().toString(); 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="55"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> String className = enclosingClass.getSimpleName().toString(); 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="56"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> String methodName = annotatedMethod.getSimpleName().toString(); 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="57"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> String adapterName = className + "_" + 
methodName + "Adapter"; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="58"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="59"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> ExecutableElement overriddenMethod = getFirstNonDefaultExecutable(targetInterface); 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="60"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="61"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> try { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="62"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
Filer filer = processingEnv.getFiler(); </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="63"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> JavaFileObject sourceFile = filer.createSourceFile(packageName + 
"." + adapterName, new Element[0]); </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div 
class="hljs-ln-line hljs-ln-n" data-line-number="64"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="65"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
try (PrintWriter out = new PrintWriter(sourceFile.openWriter())) { </div></td> </tr> <tr> <td 
class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="66"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> out.println("package " + packageName + 
";"); </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" 
data-line-number="67"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> out.println("import 
" + targetInterface.getQualifiedName() + ";"); </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="68"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> out.println(); </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="69"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> out.println("public class " + adapterName + " implements " + targetInterface.getSimpleName() 
+ " {"); </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" 
data-line-number="70"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> out.println(" 
@Override"); </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" 
data-line-number="71"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> out.println(" 
public " + overriddenMethod.getReturnType() + " " + overriddenMethod.getSimpleName() </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="72"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> + formatParameter(overriddenMethod, true) 
+ " {"); </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" 
data-line-number="73"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> out.println(" 
return " + className + "." + methodName + formatParameter(overriddenMethod, false) + ";"); 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="74"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> out.println(" }"); </div></td> </tr> <tr> 
<td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="75"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> out.println("}"); </div></td> </tr> <tr> 
<td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="76"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> } </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="77"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> } catch (IOException e) { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="78"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> throw new RuntimeException(e); </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="79"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> } </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="80"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
} </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="81"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="82"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> private ExecutableElement getExecutable(TypeElement annotation, 
String methodName) { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="83"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
for (ExecutableElement method : ElementFilter.methodsIn(annotation.getEnclosedElements())) 
{ </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="84"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> if (methodName.equals(method.getSimpleName().toString())) 
{ </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="85"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> return method; </div></td> </tr> <tr> 
<td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="86"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> } </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="87"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> } </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="88"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
processingEnv.getMessager().printMessage(Kind.ERROR, "Incompatible @Adapt."); </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="89"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> return null; </div></td> </tr> <tr> <td 
class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="90"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> } </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="91"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="92"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
private ExecutableElement getFirstNonDefaultExecutable(TypeElement annotation) { </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="93"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> for (ExecutableElement method : ElementFilter.methodsIn(annotation.getEnclosedElements())) 
{ </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="94"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> if (!method.isDefault()) { </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="95"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> return method; </div></td> </tr> <tr> 
<td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="96"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> } </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="97"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> } </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="98"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
processingEnv.getMessager().printMessage(Kind.ERROR, </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="99"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> "Target interface should declare at least one non-default method."); 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="100"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> return null; </div></td> </tr> <tr> <td 
class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="101"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> } </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="102"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="103"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
private TypeElement getAnnotationValueAsTypeElement(ExecutableElement annotatedMethod, TypeElement 
annotation, </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" 
data-line-number="104"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> ExecutableElement 
annotationFunction) { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="105"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
TypeMirror annotationType = annotation.asType(); </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="106"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="107"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
for (AnnotationMirror annotationMirror : annotatedMethod.getAnnotationMirrors()) { </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="108"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> if (processingEnv.getTypeUtils().isSameType(annotationMirror.getAnnotationType(), 
annotationType)) { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="109"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
AnnotationValue value = annotationMirror.getElementValues().get(annotationFunction); </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="110"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> if (value == null) { </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="111"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> processingEnv.getMessager().printMessage(Kind.ERROR, 
"Unknown @Adapt target"); </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="112"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
continue; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" 
data-line-number="113"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> } </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="114"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> TypeMirror targetInterfaceTypeMirror = 
(TypeMirror) value.getValue(); </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="115"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
return (TypeElement) processingEnv.getTypeUtils().asElement(targetInterfaceTypeMirror); </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="116"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> } </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="117"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> } </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="118"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
processingEnv.getMessager().printMessage(Kind.ERROR, "@Adapt should contain target()"); </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="119"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> return null; </div></td> </tr> <tr> <td 
class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="120"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> } </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="121"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="122"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
private TypeElement getTopLevelEnclosingType(ExecutableElement annotatedMethod) { </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="123"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> TypeElement enclosingType = null; </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="124"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> Element enclosing = annotatedMethod.getEnclosingElement(); 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="125"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="126"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> while (enclosing != null) { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="127"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> if (enclosing.getKind() == ElementKind.CLASS) { </div></td> </tr> 
<tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="128"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> enclosingType = (TypeElement) enclosing; 
</div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="129"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> } else if (enclosing.getKind() == ElementKind.PACKAGE) 
{ </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="130"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> break; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="131"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> } </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="132"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
enclosing = enclosing.getEnclosingElement(); </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="133"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> } </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="134"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
return enclosingType; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="135"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
} </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="136"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="137"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> private String formatParameter(ExecutableElement method, boolean 
includeType) { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="138"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
StringBuilder builder = new StringBuilder(); </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="139"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> builder.append(''(''); </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="140"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> String separator = ""; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="141"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="142"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
for (VariableElement parameter : method.getParameters()) { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="143"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> builder.append(separator); </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="144"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> if (includeType) { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="145"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> builder.append(parameter.asType()); </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="146"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> builder.append('' ''); </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="147"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> } </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="148"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
builder.append(parameter.getSimpleName()); </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="149"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> separator = ", "; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="150"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> } </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="151"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
builder.append('')''); </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="152"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
return builder.toString(); </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="153"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
} </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="154"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> } </div></td> </tr> </tbody> </table></code> 
<div class="richcontent-pre-copy"> <span class="iconfont"></span>复制代码 </div></pre> <p>在这个注解处理器实现中，我们将读取注解中的值，因此我将使用<code>process</code>方法的第一个参数，并通过它获得被标注方法对应的<code>@Adapt</code>注解中的<code>value</code>值。</p> 
<p>之所以采用这种麻烦的方式，是因为<code>value</code>值属于<code>Class</code>类型。在编译过程中，被编译代码中的<code>Class</code>常量未必被加载进 
Java 编译器所在的虚拟机中。因此，我们需要通过<code>process</code>方法的第一个参数，获得<code>value</code>所指向的接口的抽象语法树，并据此生成源代码。</p> 
<p>生成源代码的方式实际上非常容易理解。我们可以通过<code>Filer.createSourceFile</code>方法获得一个类似于文件的概念，并通过<code>PrintWriter</code>将具体的内容一一写入即可。</p> 
<p>当将该注解处理器作为插件接入 Java 编译器时，编译前面的<code>test/Bar.java</code>将生成下述代码，并且触发新一轮的编译。</p> <pre style="position: 
relative;"><code> <table class="hljs-ln"> <tbody> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="1"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
package test; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="2"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
import java.util.function.IntBinaryOperator; </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line 
hljs-ln-n" data-line-number="4"></div></td> <td class="hljs-ln-code"> <div class="hljs-ln-line"> 
public class Bar_addAdapter implements IntBinaryOperator { </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> @Override </div></td> </tr> <tr> <td class="hljs-ln-numbers"> <div 
class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></td> <td class="hljs-ln-code"> <div 
class="hljs-ln-line"> public int applyAsInt(int arg0, int arg1) { </div></td> </tr> <tr> <td 
class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="7"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> return Bar.add(arg0, arg1); </div></td> 
</tr> <tr> <td class="hljs-ln-numbers"> <div class="hljs-ln-line hljs-ln-n" data-line-number="8"></div></td> 
<td class="hljs-ln-code"> <div class="hljs-ln-line"> } </div></td> </tr> <tr> <td class="hljs-ln-numbers"> 
<div class="hljs-ln-line hljs-ln-n" data-line-number="9"></div></td> <td class="hljs-ln-code"> 
<div class="hljs-ln-line"> } </div></td> </tr> </tbody> </table></code> <div class="richcontent-pre-copy"> 
<span class="iconfont"></span>复制代码 </div></pre> <blockquote> <p>注意，该注解处理器没有处理所编译的代码包名为空的情况。</p> 
</blockquote> <h2>总结与实践</h2> <p>今天我介绍了 Java 编译器的注解处理器。</p> <p>注解处理器主要有三个用途。一是定义编译规则，并检查被编译的源文件。二是修改已有源代码。三是生成新的源代码。其中，第二种涉及了 
Java 编译器的内部 API，因此并不推荐。第三种较为常见，是 OpenJDK 工具 jcstress，以及 JMH 生成测试代码的方式。</p> <p>Java 源代码的编译过程可分为三个步骤，分别为解析源文件生成抽象语法树，调用已注册的注解处理器，和生成字节码。如果在第 
2 步中，注解处理器生成了新的源代码，那么 Java 编译器将重复第 1、2 步，直至不再生成新的源代码。</p> <hr> <p>今天的实践环节，请实现本文的案例<code>CheckGetterProcessor</code>中的 
TODO 项，处理由<code>@CheckGetter</code>注解的字段。</p> <p>[1] <a href="http://openjdk.java.net/groups/compiler/doc/compilation-overview/index.html">http://openjdk.java.net/groups/compiler/doc/compilation-overview/index.html</a><br> 
[2] <a href="http://hannesdorfmann.com/annotation-processing/annotationprocessing101">http://hannesdorfmann.com/annotation-processing/annotationprocessing101</a><br> 
[3] <a href="https://docs.oracle.com/javase/10/docs/api/javax/lang/model/element/package-summary.html">https://docs.oracle.com/javase/10/docs/api/javax/lang/model/element/package-summary.html</a><br> 
[4] <a href="https://projectlombok.org/">https://projectlombok.org/</a><br> [5] <a href="http://notatube.blogspot.com/2010/11/project-lombok-trick-explained.html">http://notatube.blogspot.com/2010/11/project-lombok-trick-explained.html</a><br> 
[6] <a href="http://jnb.ociweb.com/jnb/jnbJan2010.html#controversy">http://jnb.ociweb.com/jnb/jnbJan2010.html#controversy</a></p> 
<p><img src="https://static001.geekbang.org/resource/image/2a/d5/2a62e58cbdf56a5dc40748567d346fd5.jpg" 
alt=""></p>', '', 'book', 0, 'full_html', 'zh-hans', 15, 15) 
 {executed in 20 msec}
2020-11-19 20:10:06.934 INFO  jdbc.sqltiming Line:373 - select nodebodyen0_.entity_id as entity_i1_4_0_, nodebodyen0_.body_value as body_val2_4_0_, 
nodebodyen0_.body_summary as body_sum3_4_0_, nodebodyen0_.bundle as bundle4_4_0_, nodebodyen0_.delta 
as delta5_4_0_, nodebodyen0_.body_format as body_for6_4_0_, nodebodyen0_.langcode as langcode7_4_0_, 
nodebodyen0_.revision_id as revision8_4_0_ from node__body nodebodyen0_ where nodebodyen0_.entity_id=15 
 {executed in 1 msec}
