2020-11-24 18:02:15.824 INFO  jdbc.resultsettable Line:610 - 
|--------|---------|---------|---------|-----------|---------|---------|---------|---------|
|item_id |fsid     |got      |name     |parse_fail |parsed   |path     |title    |vid      |
|--------|---------|---------|---------|-----------|---------|---------|---------|---------|
|754     |[unread] |[unread] |[unread] |[unread]   |[unread] |[unread] |[unread] |[unread] |
|--------|---------|---------|---------|-----------|---------|---------|---------|---------|

2020-11-24 18:03:34.752 INFO  jdbc.sqltiming Line:373 - update book_check set fsid='273998926104869', got=1, name='net_content', parse_fail='', parsed=1, 
path='109-人人都能学会的编程入门课/03丨编码能力训练篇 (7讲)/16丨数据结构（上）：突破基本类型的限制，存储更大的整数.html', title='16丨数据结构（上）：突破基本类型的限制，存储更大的整数', 
vid=754 where item_id=754 
 {executed in 0 msec}
2020-11-24 18:03:34.755 INFO  jdbc.sqltiming Line:373 - select nodebodyen0_.entity_id as entity_i1_4_, nodebodyen0_.body_value as body_val2_4_, nodebodyen0_.body_summary 
as body_sum3_4_, nodebodyen0_.bundle as bundle4_4_, nodebodyen0_.delta as delta5_4_, nodebodyen0_.body_format 
as body_for6_4_, nodebodyen0_.langcode as langcode7_4_, nodebodyen0_.revision_id as revision8_4_ 
from node__body nodebodyen0_ where nodebodyen0_.entity_id=754 
 {executed in 0 msec}
2020-11-24 18:03:34.756 INFO  jdbc.resultsettable Line:610 - 
|----------|-----------|-------------|-------|------|------------|---------|------------|
|entity_id |body_value |body_summary |bundle |delta |body_format |langcode |revision_id |
|----------|-----------|-------------|-------|------|------------|---------|------------|
|754       |           |             |book   |0     |full_html   |zh-hans  |754         |
|----------|-----------|-------------|-------|------|------------|---------|------------|

2020-11-24 18:03:34.756 INFO  jdbc.sqltiming Line:373 - select nodebodyre0_.entity_id as entity_i1_13_0_, nodebodyre0_.body_value as body_val2_13_0_, 
nodebodyre0_.body_summary as body_sum3_13_0_, nodebodyre0_.bundle as bundle4_13_0_, nodebodyre0_.delta 
as delta5_13_0_, nodebodyre0_.body_format as body_for6_13_0_, nodebodyre0_.langcode as langcode7_13_0_, 
nodebodyre0_.revision_id as revision8_13_0_ from node_revision__body nodebodyre0_ where nodebodyre0_.entity_id=754 
 {executed in 0 msec}
2020-11-24 18:03:34.756 INFO  jdbc.resultsettable Line:610 - 
|----------|-----------|-------------|-------|------|------------|---------|------------|
|entity_id |body_value |body_summary |bundle |delta |body_format |langcode |revision_id |
|----------|-----------|-------------|-------|------|------------|---------|------------|
|[unread]  |           |             |book   |0     |full_html   |zh-hans  |754         |
|----------|-----------|-------------|-------|------|------------|---------|------------|

2020-11-24 18:03:34.761 INFO  jdbc.sqltiming Line:373 - update node__body set body_value='<div data-slate-editor="true" data-key="3133" autocorrect="off" 
spellcheck="false" data-gramm="false" style="outline: none; white-space: pre-wrap; overflow-wrap: 
break-word;"> <div class="se-23fe6c9e " data-slate-type="paragraph" data-slate-object="block" 
data-key="3134"> <span data-slate-object="text" data-key="3135"><span data-slate-leaf="true" 
data-offset-key="3135:0" data-first-offset="true"><span data-slate-string="true">你好，我是胡光，咱们又见面了。</span></span></span> 
</div> <div class="se-14e38cce " data-slate-type="paragraph" data-slate-object="block" data-key="3136"> 
<span data-slate-object="text" data-key="3137"><span data-slate-leaf="true" data-offset-key="3137:0" 
data-first-offset="true"><span data-slate-string="true">上两节呢，我们讲了素数筛这个算法，并且用素数筛算法演示了程序设计过程中的框架思维。其中提到了欧拉筛法，不知道勤奋的你有没有课后自己去学习一下呢？如果你学习了欧拉筛法以后，你会对我所说的框架思维有更深刻的体会。</span></span></span> 
</div> <div class="se-c44a96be " data-slate-type="paragraph" data-slate-object="block" data-key="3138"> 
<span data-slate-object="text" data-key="3139"><span data-slate-leaf="true" data-offset-key="3139:0" 
data-first-offset="true"><span data-slate-string="true">在之前的文章中，我们介绍过算法和数据结构的作用。当时我讲到，算法的作用是做数据的计算，并且它对于编程的重要意义，不止是停留在那些叫得上来名字的具体算法上面，而是我们称之的算法思维。</span></span></span> 
</div> <div class="se-abf2e958 " data-slate-type="paragraph" data-slate-object="block" data-key="3140"> 
<span data-slate-object="text" data-key="3141"><span data-slate-leaf="true" data-offset-key="3141:0" 
data-first-offset="true"><span data-slate-string="true">算法思维的具体表现，就是我们处理得到相同信息时，所采用的不同的流程方法。这些方法呢，有好坏高低的比较，而评价的标准，主要就是</span></span></span><span 
data-slate-object="text" data-key="3142"><span data-slate-leaf="true" data-offset-key="3142:0" 
data-first-offset="true"><span class="se-e69f0fec" data-slate-type="bold" data-slate-object="mark"><span 
data-slate-string="true">从时空复杂度方面来考量</span></span></span></span><span data-slate-object="text" 
data-key="3143"><span data-slate-leaf="true" data-offset-key="3143:0" data-first-offset="true"><span 
data-slate-string="true">。由于本专栏主要是教会你掌握编程思维，所以，即使你对时空复杂度不是很了解，也不用担心它会影响你的入门编程学习。你只需要知道，这是我们衡量算法好坏的重要指标即可。</span></span></span> 
</div> <div class="se-439caf5c " data-slate-type="paragraph" data-slate-object="block" data-key="3144"> 
<span data-slate-object="text" data-key="3145"><span data-slate-leaf="true" data-offset-key="3145:0" 
data-first-offset="true"><span data-slate-string="true">前两篇文章呢，其实更多的就是给大家展示算法思维对于程序设计的重要性，并且，我还要在这里提醒一句，算法的底层是数学，适当的补充数学基础，对于算法的学习是有奇效的。</span></span></span> 
</div> <div class="se-b9d471ec " data-slate-type="paragraph" data-slate-object="block" data-key="3146"> 
<span data-slate-object="text" data-key="3147"><span data-slate-leaf="true" data-offset-key="3147:0" 
data-first-offset="true"><span data-slate-string="true">数据结构和算法，前者负责“表示数据”，后者负责“处理数据”。接下来，我将给你讲讲数据结构的重要性。</span></span></span> 
</div> <h2 class="se-5009d104" data-slate-type="heading" data-slate-object="block" data-key="3148"><span 
data-slate-object="text" data-key="3149"><span data-slate-leaf="true" data-offset-key="3149:0" 
data-first-offset="true"><span data-slate-string="true">今日任务</span></span></span></h2> <div 
class="se-97d2ebbb " data-slate-type="paragraph" data-slate-object="block" data-key="3150"> 
<span data-slate-object="text" data-key="3151"><span data-slate-leaf="true" data-offset-key="3151:0" 
data-first-offset="true"><span data-slate-string="true">表示数据到底是什么呢？为什么表示数据很重要？通过今天的 10 分钟任务，你就能明白其中的重要意义。这个任务很简单，就是请你实现一个程序，输出 
2 的 1000 次方的结果是多少。</span></span></span> </div> <div class="se-415927be " data-slate-type="paragraph" 
data-slate-object="block" data-key="3152"> <span data-slate-object="text" data-key="3153"><span 
data-slate-leaf="true" data-offset-key="3153:0" data-first-offset="true"><span data-slate-string="true">关于这个问题，你可能会意识到，C 
语言中给我们提供的 int 类型，肯定是无法完成这个任务的，因为它表示不了这么大的数字。你可能想用 long long 类型来进行解决，那你这就要犯低级错误了。long long 是 
64 位整型，也就是占 64 个 2 进制位，它顶多能表示 2 的 64 次方减 1 的结果，相对于 2 的 1000 次方来说，小太多了。</span></span></span> 
</div> <div class="se-16a8442b " data-slate-type="paragraph" data-slate-object="block" data-key="3154"> 
<span data-slate-object="text" data-key="3155"><span data-slate-leaf="true" data-offset-key="3155:0" 
data-first-offset="true"><span data-slate-string="true">你可能又想到，既然 long long 表示不了，那就使用 double，不是说 
double 是浮点数类型，可以表示很大很大的数字么？对，double 作为双精度浮点型，确实可以表示很大很大的数字，2 的 1000 次方这个数字，对于 double 的表示范围来说，也是不足挂齿的。</span></span></span> 
</div> <div class="se-28a8d619 " data-slate-type="paragraph" data-slate-object="block" data-key="3156"> 
<span data-slate-object="text" data-key="3157"><span data-slate-leaf="true" data-offset-key="3157:0" 
data-first-offset="true"><span data-slate-string="true">可这里面存在一个严重的问题，就是 double 是有精度损失的。什么意思呢？请耐心听我给你解释。</span></span></span> 
</div> <div class="se-e8536c86 " data-slate-type="paragraph" data-slate-object="block" data-key="3158"> 
<span data-slate-object="text" data-key="3159"><span data-slate-leaf="true" data-offset-key="3159:0" 
data-first-offset="true"><span data-slate-string="true">其实也很好理解，不管是 long long 类型，还是 double 
类型，它们都是 64 位的信息，也就是说，它们都可以准确表示 2 的 64 次方个数量的数字。但是，即使 double 类型表示数字的范围比 long long 要大很多，可这个当中很多数字 
double 是没有办法准确表示的。</span></span></span> </div> <div class="se-14122ee8 " data-slate-type="paragraph" 
data-slate-object="block" data-key="3160"> <span data-slate-object="text" data-key="3161"><span 
data-slate-leaf="true" data-offset-key="3161:0" data-first-offset="true"><span data-slate-string="true">至于 
double 的表示精度，一般来说是有效数字 15 位，就是一个数字，由左向右，从第一个不为零的数字起，向后 15 位都是准确的。因此 double 类型实际上也没有办法，准确表示 
2 的 1000 次方的计算结果。</span></span></span> </div> <div class="se-a35b4966 " data-slate-type="paragraph" 
data-slate-object="block" data-key="3162"> <span data-slate-object="text" data-key="3163"><span 
data-slate-leaf="true" data-offset-key="3163:0" data-first-offset="true"><span data-slate-string="true">那究竟应该如何来解决今天这个问题呢？带着这个疑问，让我们正式开始今天的释疑之行吧。</span></span></span> 
</div> <h2 class="se-78b74562" data-slate-type="heading" data-slate-object="block" data-key="3164"><span 
data-slate-object="text" data-key="3165"><span data-slate-leaf="true" data-offset-key="3165:0" 
data-first-offset="true"><span data-slate-string="true">必知必会，查缺补漏</span></span></span></h2> 
<div class="se-286f9831 " data-slate-type="paragraph" data-slate-object="block" data-key="3166"> 
<span data-slate-object="text" data-key="3167"><span data-slate-leaf="true" data-offset-key="3167:0" 
data-first-offset="true"><span data-slate-string="true">前面讲了这么多，我就是想让你明确一点，就是在我们所认识的 C 语言中，是没有任何一种数据类型，可以表示得下我们今天想要计算 
2 的 1000 次方的结果。也就是说，基础类型表示不了我们今天所要计算的这个结果，那该怎么办呢？</span></span></span> </div> <div class="se-fb3da17a 
" data-slate-type="paragraph" data-slate-object="block" data-key="3168"> <span data-slate-object="text" 
data-key="3169"><span data-slate-leaf="true" data-offset-key="3169:0" data-first-offset="true"><span 
data-slate-string="true">还记得我讲过的关于结构体的相关知识么？当时我们使用结构体，创造了一个新的代表坐标点的数据类型。按照创造类型的思路去思考现在这个问题，也就是，如果我们能采用一种能够表示更大范围的整数的数字表示法，那今天这个问题，就可以解决了。这就是我们今天要学习的内容，它的大类名字叫做</span></span></span><span 
data-slate-object="text" data-key="3170"><span data-slate-leaf="true" data-offset-key="3170:0" 
data-first-offset="true"><span class="se-28b580fa" data-slate-type="bold" data-slate-object="mark"><span 
data-slate-string="true">高精度表示法</span></span></span></span><span data-slate-object="text" data-key="3171"><span 
data-slate-leaf="true" data-offset-key="3171:0" data-first-offset="true"><span data-slate-string="true">，更具体的叫做</span></span></span><span 
data-slate-object="text" data-key="3172"><span data-slate-leaf="true" data-offset-key="3172:0" 
data-first-offset="true"><span class="se-b0491101" data-slate-type="bold" data-slate-object="mark"><span 
data-slate-string="true">大整数表示法</span></span></span></span><span data-slate-object="text" data-key="3173"><span 
data-slate-leaf="true" data-offset-key="3173:0" data-first-offset="true"><span data-slate-string="true">。</span></span></span> 
</div> <h4 class="se-95bdbdbd" data-slate-type="heading" data-slate-object="block" data-key="3174"><span 
data-slate-object="text" data-key="3175"><span data-slate-leaf="true" data-offset-key="3175:0" 
data-first-offset="true"><span data-slate-string="true">1. 大整数表示法</span></span></span></h4> 
<div class="se-4c5582dd " data-slate-type="paragraph" data-slate-object="block" data-key="3176"> 
<span data-slate-object="text" data-key="3177"><span data-slate-leaf="true" data-offset-key="3177:0" 
data-first-offset="true"><span data-slate-string="true">为了完成今天这个任务，我们需要从数据的表示上下功夫。其实，数据的表示绝不是只有一种方法，就好像你想表达数字 
1 的一半，你既可以用 0.5 来表示，也可以用 1/2 来表示。所以，今天我们想要表示很大很大的整数，其实也有很多方法，下面就看看我要给你介绍的方法吧。</span></span></span> 
</div> <div class="se-b4c33114 " data-slate-type="paragraph" data-slate-object="block" data-key="3178"> 
<span data-slate-object="text" data-key="3179"><span data-slate-leaf="true" data-offset-key="3179:0" 
data-first-offset="true"><span data-slate-string="true">首先我们先来思考一个事情，如果我想要存储一个 100 位的十进制数字，为什么现有的 
int 数据类型做不到？本质上是因为这个数字的位数，超过了 int 能够表示数字的位数上限。int 能够表示的数字大小的上限，是一个以 2 开头的 10 位数字，而我们想要存储的，却是一个 
100 位的数字。</span></span></span> </div> <div class="se-08cb08d3 " data-slate-type="paragraph" 
data-slate-object="block" data-key="3180"> <span data-slate-object="text" data-key="3181"><span 
data-slate-leaf="true" data-offset-key="3181:0" data-first-offset="true"><span data-slate-string="true">看到了这个本质问题后，其实也就找到了解决问题的方向，那就是我们要创造的这种数字的表示方法，能够有足够的空间去容纳更多位数的数字。提起空间，你想到了什么？是不是我们之前讲到的数组？也就是说，我们开辟一个整型数组空间，让这个数组的每个位置存储一位数字，这样是不是就可以很轻松地存储 
100 位数字了。</span></span></span> </div> <div class="se-9a3d45df " data-slate-type="paragraph" 
data-slate-object="block" data-key="3182"> <span data-slate-object="text" data-key="3183"><span 
data-slate-leaf="true" data-offset-key="3183:0" data-first-offset="true"><span data-slate-string="true">下面就来看看这种大整数表示法，是如何存储数字 
3526 的吧：</span></span></span> </div> <div class="se-81b30b2f" data-slate-type="image" data-slate-object="block" 
data-key="3184"> <img class="se-3cc3d621" src="https://static001.geekbang.org/resource/image/bf/6d/bf84afda4623d6e9471be24b6325896d.jpg"> 
<div class="se-4a159a26"> 图1：大整数表示示意图 </div> </div> <div class="se-4b87c671 " data-slate-type="paragraph" 
data-slate-object="block" data-key="3185"> <span data-slate-object="text" data-key="3186"><span 
data-slate-leaf="true" data-offset-key="3186:0" data-first-offset="true"><span data-slate-string="true">正如你所看到的，这种表示法中，使用数组的第 
0 位存储数字的位数，因为 3526 有 4 位，所以数组的第 0 位就设置成了 4 这个值。接下来，数组从第 1 位到第 4 位记录的就是原数字 3526，可是你有没有发现，这个数字是好像是倒着放置的，数字的最高位，也放在数组的最高位中，在图上看着感觉怪怪的。</span></span></span> 
</div> <div class="se-3aece748 " data-slate-type="paragraph" data-slate-object="block" data-key="3187"> 
<span data-slate-object="text" data-key="3188"><span data-slate-leaf="true" data-offset-key="3188:0" 
data-first-offset="true"><span data-slate-string="true">你可能会觉得别扭，可我要告诉你，这种存储方式，可是凝结了前人的智慧，最直接的一个好处，就是当你拿着两个这样的大整数做加法，产生一个新的大整数的时候，这个新产生的大整数会涉及到进位问题。</span></span></span> 
</div> <div class="se-d283a534 " data-slate-type="paragraph" data-slate-object="block" data-key="3189"> 
<span data-slate-object="text" data-key="3190"><span data-slate-leaf="true" data-offset-key="3190:0" 
data-first-offset="true"><span data-slate-string="true">例如：95 + 12 = 107，两个两位的大整数相加，产生一个三位的大整数。在这种从右到左的倒着存储表示法中，是向着数组高位去进位，去扩充位数，这是便利可行的。可你要是从左到右去正着存储，你会发现一旦最高位产生进位，就很难处理。</span></span></span> 
</div> <h4 class="se-bf21b3ee" data-slate-type="heading" data-slate-object="block" data-key="3191"><span 
data-slate-object="text" data-key="3192"><span data-slate-leaf="true" data-offset-key="3192:0" 
data-first-offset="true"><span data-slate-string="true">2. 如何计算大整数加法</span></span></span></h4> 
<div class="se-4363ce55 " data-slate-type="paragraph" data-slate-object="block" data-key="3193"> 
<span data-slate-object="text" data-key="3194"><span data-slate-leaf="true" data-offset-key="3194:0" 
data-first-offset="true"><span data-slate-string="true">你可能还是不太理解，这种大整数表示法的好处，下面我们就拿“大整数加法”来举个例子。顺便也向你展示一下，我们究竟是如何操作这种大整数。</span></span></span> 
</div> <div class="se-7de63203 " data-slate-type="paragraph" data-slate-object="block" data-key="3195"> 
<span data-slate-object="text" data-key="3196"><span data-slate-leaf="true" data-offset-key="3196:0" 
data-first-offset="true"><span data-slate-string="true">大整数加法，顾名思义就是利用大整数表式法，做加法运算。具体怎么做，你应该还记得小学时候，老师教给我们的加法竖式吧？其实大整数加法，本质上就是参考这种竖式计算法，把每一位对齐，然后按位相加，加完以后再统一处理进位。下面，我用一张图说明大整数加法，是如何计算 
445 + 9667 的：</span></span></span> </div> <div class="se-af793a26" data-slate-type="image" 
data-slate-object="block" data-key="3197"> <img class="se-a3583319" src="https://static001.geekbang.org/resource/image/6a/44/6a054bbbc6cca21bfc20034f0466aa44.jpg"> 
<div class="se-87b5d6ee"> 图2：大整数加法示意图 </div> </div> <div class="se-2d3f01e0 " data-slate-type="paragraph" 
data-slate-object="block" data-key="3198"> <span data-slate-object="text" data-key="3199"><span 
data-slate-leaf="true" data-offset-key="3199:0" data-first-offset="true"><span data-slate-string="true">正如你所看到的，首先我们用大整数表示法，分别表示 
445 和 9667 这两个数字；然后以位数最长的那个大整数，作为计算结果大整数的基础位数，445 和 9667 按位相加，得到一个 4 位的结果大整数，4 位分别是，9、10、10、12；最后我们再依次处理进位，就得到了底下那一行的结果：10112。</span></span></span> 
</div> <div class="se-22fa8c23 " data-slate-type="paragraph" data-slate-object="block" data-key="3200"> 
<span data-slate-object="text" data-key="3201"><span data-slate-leaf="true" data-offset-key="3201:0" 
data-first-offset="true"><span data-slate-string="true">在这个过程中，你会看到最高位的 9 产生了进位，最终变成了一个 5 位的大整数，产生的新最高位，我们只需要继续向后放即可。这就是我刚刚所说的，这种大整数表示法，能够非常方便地处理进位。</span></span></span> 
</div> <div class="se-c045c683 " data-slate-type="paragraph" data-slate-object="block" data-key="3202"> 
<span data-slate-object="text" data-key="3203"><span data-slate-leaf="true" data-offset-key="3203:0" 
data-first-offset="true"><span data-slate-string="true">看完了大整数加法的过程后，不可缺少的，就是代码的实现过程。下面我给你准备了一份代码，代码中有相关注释，这是需要你自己拿出时间，来进行自学的内容。</span></span></span> 
</div> <div class="se-22501880 se-abd90b79" data-slate-type="pre" data-slate-object="block" 
data-key="3204" data-code-language="cpp"> <div class="se-7245a06b se-06473a6a"> <span></span> 
</div> <div class="se-99005946"> <div class="se-b447076e se-98ec1a00" data-code-line-number="1"></div> 
<div class="se-b447076e se-98ec1a00" data-code-line-number="2"></div> <div class="se-b447076e 
se-98ec1a00" data-code-line-number="3"></div> <div class="se-b447076e se-98ec1a00" data-code-line-number="4"></div> 
<div class="se-b447076e se-98ec1a00" data-code-line-number="5"></div> <div class="se-b447076e 
se-98ec1a00" data-code-line-number="6"></div> <div class="se-b447076e se-98ec1a00" data-code-line-number="7"></div> 
<div class="se-b447076e se-98ec1a00" data-code-line-number="8"></div> <div class="se-b447076e 
se-98ec1a00" data-code-line-number="9"></div> <div class="se-b447076e se-98ec1a00" data-code-line-number="10"></div> 
<div class="se-b447076e se-98ec1a00" data-code-line-number="11"></div> <div class="se-b447076e 
se-98ec1a00" data-code-line-number="12"></div> <div class="se-b447076e se-98ec1a00" data-code-line-number="13"></div> 
<div class="se-b447076e se-98ec1a00" data-code-line-number="14"></div> <div class="se-b447076e 
se-98ec1a00" data-code-line-number="15"></div> <div class="se-b447076e se-98ec1a00" data-code-line-number="16"></div> 
<div class="se-b447076e se-98ec1a00" data-code-line-number="17"></div> <div class="se-b447076e 
se-98ec1a00" data-code-line-number="18"></div> <div class="se-b447076e se-98ec1a00" data-code-line-number="19"></div> 
<div class="se-b447076e se-98ec1a00" data-code-line-number="20"></div> <div class="se-b447076e 
se-98ec1a00" data-code-line-number="21"></div> <div class="se-b447076e se-98ec1a00" data-code-line-number="22"></div> 
<div class="se-b447076e se-98ec1a00" data-code-line-number="23"></div> <div class="se-b447076e 
se-98ec1a00" data-code-line-number="24"></div> <div class="se-b447076e se-98ec1a00" data-code-line-number="25"></div> 
<div class="se-b447076e se-98ec1a00" data-code-line-number="26"></div> <div class="se-b447076e 
se-98ec1a00" data-code-line-number="27"></div> </div> <div class="se-052b75d9 ps ps--active-x"> 
<div class="se-03eefeec se-2642b266" data-slate-type="code-line" data-slate-object="block" 
data-key="3205"> <span data-slate-object="text" data-key="3206"><span data-slate-leaf="true" 
data-offset-key="3206:0" data-first-offset="true"><span class=" gkhl-comment" data-slate-object="annotation" 
data-annotation-key="gkann_0070762910" data-annotation-type="annotation"><span data-slate-string="true">// 
定义一个交换两个变量值的宏 swap</span></span></span></span> </div> <div class="se-03eefeec se-2642b266" 
data-slate-type="code-line" data-slate-object="block" data-key="3207"> <span data-slate-object="text" 
data-key="3208"><span data-slate-leaf="true" data-offset-key="3208:0" data-first-offset="true"><span 
class=" gkhl-meta" data-slate-object="annotation" data-annotation-key="gkann_1401287236" data-annotation-type="annotation"><span 
data-slate-string="true">#define swap(a, b) { \</span></span></span></span> </div> <div class="se-03eefeec 
se-2642b266" data-slate-type="code-line" data-slate-object="block" data-key="3209"> <span data-slate-object="text" 
data-key="3210"><span data-slate-leaf="true" data-offset-key="3210:0" data-first-offset="true"><span 
data-slate-string="true"> __typeof(a) _t = a; \</span></span></span> </div> <div class="se-03eefeec 
se-2642b266" data-slate-type="code-line" data-slate-object="block" data-key="3211"> <span data-slate-object="text" 
data-key="3212"><span data-slate-leaf="true" data-offset-key="3212:0" data-first-offset="true"><span 
data-slate-string="true"> a = b, b = _t; \</span></span></span> </div> <div class="se-03eefeec 
se-2642b266" data-slate-type="code-line" data-slate-object="block" data-key="3213"> <span data-slate-object="text" 
data-key="3214"><span data-slate-leaf="true" data-offset-key="3214:0" data-first-offset="true"><span 
data-slate-string="true">}</span></span></span> </div> <div class="se-03eefeec se-2642b266" 
data-slate-type="code-line" data-slate-object="block" data-key="3215"> <span data-slate-object="text" 
data-key="3216"><span data-slate-leaf="true" data-offset-key="3216:0" data-first-offset="true"><span 
class=" gkhl-comment" data-slate-object="annotation" data-annotation-key="gkann_7449484627" 
data-annotation-type="annotation"><span data-slate-string="true">// 实现大整数加法 a + b 的结果，存放在 c 
中</span></span></span></span> </div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" 
data-slate-object="block" data-key="3217"> <span data-slate-object="text" data-key="3218"><span 
data-slate-leaf="true" data-offset-key="3218:0" data-first-offset="true"><span class=" gkhl-function" 
data-slate-object="annotation" data-annotation-key="gkann_4081852048" data-annotation-type="annotation"><span 
class=" gkhl-keyword" data-slate-object="annotation" data-annotation-key="gkann_4308125560" 
data-annotation-type="annotation"><span data-slate-string="true">void</span></span></span></span><span 
data-slate-leaf="true" data-offset-key="3218:1"><span class=" gkhl-function" data-slate-object="annotation" 
data-annotation-key="gkann_4081852048" data-annotation-type="annotation"><span data-slate-string="true"> 
</span></span></span><span data-slate-leaf="true" data-offset-key="3218:2"><span class=" gkhl-function" 
data-slate-object="annotation" data-annotation-key="gkann_4081852048" data-annotation-type="annotation"><span 
class=" gkhl-title" data-slate-object="annotation" data-annotation-key="gkann_7704052654" data-annotation-type="annotation"><span 
data-slate-string="true">plus_big_integer</span></span></span></span><span data-slate-leaf="true" 
data-offset-key="3218:3"><span class=" gkhl-params" data-slate-object="annotation" data-annotation-key="gkann_1535829112" 
data-annotation-type="annotation"><span class=" gkhl-function" data-slate-object="annotation" 
data-annotation-key="gkann_4081852048" data-annotation-type="annotation"><span data-slate-string="true">(int 
*a, int *b, int *c)</span></span></span></span><span data-slate-leaf="true" data-offset-key="3218:4"><span 
class=" gkhl-function" data-slate-object="annotation" data-annotation-key="gkann_4081852048" 
data-annotation-type="annotation"><span data-slate-string="true"> </span></span></span><span 
data-slate-leaf="true" data-offset-key="3218:5"><span data-slate-string="true">{</span></span></span> 
</div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" data-slate-object="block" 
data-key="3219"> <span data-slate-object="text" data-key="3220"><span data-slate-leaf="true" 
data-offset-key="3220:0" data-first-offset="true"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="3220:1"><span class=" gkhl-comment" data-slate-object="annotation" 
data-annotation-key="gkann_1712432892" data-annotation-type="annotation"><span data-slate-string="true">// 
让 a 指向位数较长的那个数字</span></span></span></span> </div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" 
data-slate-object="block" data-key="3221"> <span data-slate-object="text" data-key="3222"><span 
data-slate-leaf="true" data-offset-key="3222:0" data-first-offset="true"><span data-slate-string="true"> 
</span></span><span data-slate-leaf="true" data-offset-key="3222:1"><span class=" gkhl-keyword" 
data-slate-object="annotation" data-annotation-key="gkann_6264556232" data-annotation-type="annotation"><span 
data-slate-string="true">if</span></span></span><span data-slate-leaf="true" data-offset-key="3222:2"><span 
data-slate-string="true"> (a[</span></span><span data-slate-leaf="true" data-offset-key="3222:3"><span 
class=" gkhl-number" data-slate-object="annotation" data-annotation-key="gkann_6576354839" 
data-annotation-type="annotation"><span data-slate-string="true">0</span></span></span><span 
data-slate-leaf="true" data-offset-key="3222:4"><span data-slate-string="true">] &lt; b[</span></span><span 
data-slate-leaf="true" data-offset-key="3222:5"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_1572556947" data-annotation-type="annotation"><span data-slate-string="true">0</span></span></span><span 
data-slate-leaf="true" data-offset-key="3222:6"><span data-slate-string="true">]) swap(a, b);</span></span></span> 
</div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" data-slate-object="block" 
data-key="3223"> <span data-slate-object="text" data-key="3224"><span data-slate-leaf="true" 
data-offset-key="3224:0" data-first-offset="true"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="3224:1"><span class=" gkhl-comment" data-slate-object="annotation" 
data-annotation-key="gkann_1730811175" data-annotation-type="annotation"><span data-slate-string="true">// 
大整数 c 的位数以 a 的位数为基准</span></span></span></span> </div> <div class="se-03eefeec se-2642b266" 
data-slate-type="code-line" data-slate-object="block" data-key="3225"> <span data-slate-object="text" 
data-key="3226"><span data-slate-leaf="true" data-offset-key="3226:0" data-first-offset="true"><span 
data-slate-string="true"> c[</span></span><span data-slate-leaf="true" data-offset-key="3226:1"><span 
class=" gkhl-number" data-slate-object="annotation" data-annotation-key="gkann_0749622356" 
data-annotation-type="annotation"><span data-slate-string="true">0</span></span></span><span 
data-slate-leaf="true" data-offset-key="3226:2"><span data-slate-string="true">] = a[</span></span><span 
data-slate-leaf="true" data-offset-key="3226:3"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_0568502799" data-annotation-type="annotation"><span data-slate-string="true">0</span></span></span><span 
data-slate-leaf="true" data-offset-key="3226:4"><span data-slate-string="true">];</span></span></span> 
</div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" data-slate-object="block" 
data-key="3227"> <span data-slate-object="text" data-key="3228"><span data-slate-leaf="true" 
data-offset-key="3228:0" data-first-offset="true"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="3228:1"><span class=" gkhl-comment" data-slate-object="annotation" 
data-annotation-key="gkann_9295658980" data-annotation-type="annotation"><span data-slate-string="true">// 
循环模拟按位做加法</span></span></span></span> </div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" 
data-slate-object="block" data-key="3229"> <span data-slate-object="text" data-key="3230"><span 
data-slate-leaf="true" data-offset-key="3230:0" data-first-offset="true"><span data-slate-string="true"> 
</span></span><span data-slate-leaf="true" data-offset-key="3230:1"><span class=" gkhl-keyword" 
data-slate-object="annotation" data-annotation-key="gkann_2682852281" data-annotation-type="annotation"><span 
data-slate-string="true">for</span></span></span><span data-slate-leaf="true" data-offset-key="3230:2"><span 
data-slate-string="true"> (</span></span><span data-slate-leaf="true" data-offset-key="3230:3"><span 
class=" gkhl-keyword" data-slate-object="annotation" data-annotation-key="gkann_9724445135" 
data-annotation-type="annotation"><span data-slate-string="true">int</span></span></span><span 
data-slate-leaf="true" data-offset-key="3230:4"><span data-slate-string="true"> i = </span></span><span 
data-slate-leaf="true" data-offset-key="3230:5"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_3863959667" data-annotation-type="annotation"><span data-slate-string="true">1</span></span></span><span 
data-slate-leaf="true" data-offset-key="3230:6"><span data-slate-string="true">; i &lt;= a[</span></span><span 
data-slate-leaf="true" data-offset-key="3230:7"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_4514410538" data-annotation-type="annotation"><span data-slate-string="true">0</span></span></span><span 
data-slate-leaf="true" data-offset-key="3230:8"><span data-slate-string="true">]; i++) {</span></span></span> 
</div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" data-slate-object="block" 
data-key="3231"> <span data-slate-object="text" data-key="3232"><span data-slate-leaf="true" 
data-offset-key="3232:0" data-first-offset="true"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="3232:1"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_1837243913" data-annotation-type="annotation"><span data-slate-string="true">if</span></span></span><span 
data-slate-leaf="true" data-offset-key="3232:2"><span data-slate-string="true"> (i &lt;= b[</span></span><span 
data-slate-leaf="true" data-offset-key="3232:3"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_3203770727" data-annotation-type="annotation"><span data-slate-string="true">0</span></span></span><span 
data-slate-leaf="true" data-offset-key="3232:4"><span data-slate-string="true">]) c[i] = a[i] 
+ b[i]; </span></span></span> </div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" 
data-slate-object="block" data-key="3233"> <span data-slate-object="text" data-key="3234"><span 
data-slate-leaf="true" data-offset-key="3234:0" data-first-offset="true"><span data-slate-string="true"> 
</span></span><span data-slate-leaf="true" data-offset-key="3234:1"><span class=" gkhl-keyword" 
data-slate-object="annotation" data-annotation-key="gkann_4838498427" data-annotation-type="annotation"><span 
data-slate-string="true">else</span></span></span><span data-slate-leaf="true" data-offset-key="3234:2"><span 
data-slate-string="true"> c[i] = a[i];</span></span></span> </div> <div class="se-03eefeec 
se-2642b266" data-slate-type="code-line" data-slate-object="block" data-key="3235"> <span data-slate-object="text" 
data-key="3236"><span data-slate-leaf="true" data-offset-key="3236:0" data-first-offset="true"><span 
data-slate-string="true"> }</span></span></span> </div> <div class="se-03eefeec se-2642b266" 
data-slate-type="code-line" data-slate-object="block" data-key="3237"> <span data-slate-object="text" 
data-key="3238"><span data-slate-leaf="true" data-offset-key="3238:0" data-first-offset="true"><span 
data-slate-string="true"> </span></span><span data-slate-leaf="true" data-offset-key="3238:1"><span 
class=" gkhl-comment" data-slate-object="annotation" data-annotation-key="gkann_4649544584" 
data-annotation-type="annotation"><span data-slate-string="true">// 处理每一位的进位过程</span></span></span></span> 
</div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" data-slate-object="block" 
data-key="3239"> <span data-slate-object="text" data-key="3240"><span data-slate-leaf="true" 
data-offset-key="3240:0" data-first-offset="true"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="3240:1"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_5687431497" data-annotation-type="annotation"><span data-slate-string="true">for</span></span></span><span 
data-slate-leaf="true" data-offset-key="3240:2"><span data-slate-string="true"> (</span></span><span 
data-slate-leaf="true" data-offset-key="3240:3"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_2504053860" data-annotation-type="annotation"><span data-slate-string="true">int</span></span></span><span 
data-slate-leaf="true" data-offset-key="3240:4"><span data-slate-string="true"> i = </span></span><span 
data-slate-leaf="true" data-offset-key="3240:5"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_8162714055" data-annotation-type="annotation"><span data-slate-string="true">1</span></span></span><span 
data-slate-leaf="true" data-offset-key="3240:6"><span data-slate-string="true">; i &lt;= c[</span></span><span 
data-slate-leaf="true" data-offset-key="3240:7"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_0532836292" data-annotation-type="annotation"><span data-slate-string="true">0</span></span></span><span 
data-slate-leaf="true" data-offset-key="3240:8"><span data-slate-string="true">]; i++) {</span></span></span> 
</div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" data-slate-object="block" 
data-key="3241"> <span data-slate-object="text" data-key="3242"><span data-slate-leaf="true" 
data-offset-key="3242:0" data-first-offset="true"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="3242:1"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_1709618654" data-annotation-type="annotation"><span data-slate-string="true">if</span></span></span><span 
data-slate-leaf="true" data-offset-key="3242:2"><span data-slate-string="true"> (c[i] &lt; 
</span></span><span data-slate-leaf="true" data-offset-key="3242:3"><span class=" gkhl-number" 
data-slate-object="annotation" data-annotation-key="gkann_5307090628" data-annotation-type="annotation"><span 
data-slate-string="true">10</span></span></span><span data-slate-leaf="true" data-offset-key="3242:4"><span 
data-slate-string="true">) </span></span><span data-slate-leaf="true" data-offset-key="3242:5"><span 
class=" gkhl-keyword" data-slate-object="annotation" data-annotation-key="gkann_7083559901" 
data-annotation-type="annotation"><span data-slate-string="true">continue</span></span></span><span 
data-slate-leaf="true" data-offset-key="3242:6"><span data-slate-string="true">;</span></span></span> 
</div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" data-slate-object="block" 
data-key="3243"> <span data-slate-object="text" data-key="3244"><span data-slate-leaf="true" 
data-offset-key="3244:0" data-first-offset="true"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="3244:1"><span class=" gkhl-comment" data-slate-object="annotation" 
data-annotation-key="gkann_9478454919" data-annotation-type="annotation"><span data-slate-string="true">// 
判断是不是最高位产生了进位</span></span></span></span> </div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" 
data-slate-object="block" data-key="3245"> <span data-slate-object="text" data-key="3246"><span 
data-slate-leaf="true" data-offset-key="3246:0" data-first-offset="true"><span data-slate-string="true"> 
</span></span><span data-slate-leaf="true" data-offset-key="3246:1"><span class=" gkhl-comment" 
data-slate-object="annotation" data-annotation-key="gkann_0459440739" data-annotation-type="annotation"><span 
data-slate-string="true">// 如果是最高位产生进位，就进行初始化</span></span></span></span> </div> <div class="se-03eefeec 
se-2642b266" data-slate-type="code-line" data-slate-object="block" data-key="3247"> <span data-slate-object="text" 
data-key="3248"><span data-slate-leaf="true" data-offset-key="3248:0" data-first-offset="true"><span 
data-slate-string="true"> </span></span><span data-slate-leaf="true" data-offset-key="3248:1"><span 
class=" gkhl-keyword" data-slate-object="annotation" data-annotation-key="gkann_6024653321" 
data-annotation-type="annotation"><span data-slate-string="true">if</span></span></span><span 
data-slate-leaf="true" data-offset-key="3248:2"><span data-slate-string="true"> (i == c[</span></span><span 
data-slate-leaf="true" data-offset-key="3248:3"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_2947009468" data-annotation-type="annotation"><span data-slate-string="true">0</span></span></span><span 
data-slate-leaf="true" data-offset-key="3248:4"><span data-slate-string="true">]) c[++c[</span></span><span 
data-slate-leaf="true" data-offset-key="3248:5"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_1615511725" data-annotation-type="annotation"><span data-slate-string="true">0</span></span></span><span 
data-slate-leaf="true" data-offset-key="3248:6"><span data-slate-string="true">]] = </span></span><span 
data-slate-leaf="true" data-offset-key="3248:7"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_3633509284" data-annotation-type="annotation"><span data-slate-string="true">0</span></span></span><span 
data-slate-leaf="true" data-offset-key="3248:8"><span data-slate-string="true">;</span></span></span> 
</div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" data-slate-object="block" 
data-key="3249"> <span data-slate-object="text" data-key="3250"><span data-slate-leaf="true" 
data-offset-key="3250:0" data-first-offset="true"><span data-slate-string="true"> c[i + </span></span><span 
data-slate-leaf="true" data-offset-key="3250:1"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_0786473604" data-annotation-type="annotation"><span data-slate-string="true">1</span></span></span><span 
data-slate-leaf="true" data-offset-key="3250:2"><span data-slate-string="true">] += c[i] / 
</span></span><span data-slate-leaf="true" data-offset-key="3250:3"><span class=" gkhl-number" 
data-slate-object="annotation" data-annotation-key="gkann_5488785616" data-annotation-type="annotation"><span 
data-slate-string="true">10</span></span></span><span data-slate-leaf="true" data-offset-key="3250:4"><span 
data-slate-string="true">;</span></span></span> </div> <div class="se-03eefeec se-2642b266" 
data-slate-type="code-line" data-slate-object="block" data-key="3251"> <span data-slate-object="text" 
data-key="3252"><span data-slate-leaf="true" data-offset-key="3252:0" data-first-offset="true"><span 
data-slate-string="true"> c[i] %= </span></span><span data-slate-leaf="true" data-offset-key="3252:1"><span 
class=" gkhl-number" data-slate-object="annotation" data-annotation-key="gkann_3613960876" 
data-annotation-type="annotation"><span data-slate-string="true">10</span></span></span><span 
data-slate-leaf="true" data-offset-key="3252:2"><span data-slate-string="true">;</span></span></span> 
</div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" data-slate-object="block" 
data-key="3253"> <span data-slate-object="text" data-key="3254"><span data-slate-leaf="true" 
data-offset-key="3254:0" data-first-offset="true"><span data-slate-string="true"> }</span></span></span> 
</div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" data-slate-object="block" 
data-key="3255"> <span data-slate-object="text" data-key="3256"><span data-slate-leaf="true" 
data-offset-key="3256:0" data-first-offset="true"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="3256:1"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_9655268324" data-annotation-type="annotation"><span data-slate-string="true">return</span></span></span><span 
data-slate-leaf="true" data-offset-key="3256:2"><span data-slate-string="true"> ;</span></span></span> 
</div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" data-slate-object="block" 
data-key="3257"> <span data-slate-object="text" data-key="3258"><span data-slate-leaf="true" 
data-offset-key="3258:0" data-first-offset="true"><span data-slate-string="true">}</span></span></span> 
</div> <div class="ps__rail-x" style="width: 365px; left: 0px; bottom: 0px;"> <div class="ps__thumb-x" 
tabindex="0" style="left: 0px; width: 356px;"></div> </div> <div class="ps__rail-y" style="top: 
0px; right: 0px;"> <div class="ps__thumb-y" tabindex="0" style="top: 0px; height: 0px;"></div> 
</div> </div> </div> <h2 class="se-b2df0ee0" data-slate-type="heading" data-slate-object="block" 
data-key="3259"><span data-slate-object="text" data-key="3260"><span data-slate-leaf="true" 
data-offset-key="3260:0" data-first-offset="true"><span data-slate-string="true">一起动手，搞事情</span></span></span></h2> 
<div class="se-38647a2a " data-slate-type="paragraph" data-slate-object="block" data-key="3261"> 
<span data-slate-object="text" data-key="3262"><span data-slate-leaf="true" data-offset-key="3262:0" 
data-first-offset="true"><span data-slate-string="true">今天给你留的作业题，和我给你准备的那个大整数加法的代码有关。就是请你完成一个，能够实现读入两个大整数，并且输出两个大整数相加之和的程序。关于这个程序作业，你不需要考虑负数的情况，我们假设所有数字均是正整数。</span></span></span> 
</div> <div class="se-5bab83ba " data-slate-type="paragraph" data-slate-object="block" data-key="3263"> 
<span data-slate-object="text" data-key="3264"><span data-slate-leaf="true" data-offset-key="3264:0" 
data-first-offset="true"><span data-slate-string="true">这里给你个提示：在读入两个大整数的时候，你可以按照两个字符串数据进行读入，然后再把字符串数据，转换成我们上面所说的大整数表示法，最后调用上面那个大整数加法的过程。程序的关键提示已经告诉你了，剩下的部分，试试自己完成吧，加油！</span></span></span> 
</div> <h2 class="se-cc1f4a69" data-slate-type="heading" data-slate-object="block" data-key="3265"><span 
data-slate-object="text" data-key="3266"><span data-slate-leaf="true" data-offset-key="3266:0" 
data-first-offset="true"><span data-slate-string="true">突破类型，求解 </span></span></span><span 
class="se-4dbc7a92 se-2b50b467" data-slate-type="inline-katex" data-slate-object="inline" data-key="3267"><span 
data-slate-leaf="true"><span data-slate-string="true" class="katex"><span class="katex-html" 
aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span 
class="mord"><span class="mord"><span class="mord">2</span></span><span class="msupsub"><span 
class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span 
style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span 
class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span 
class="mord mtight">0</span><span class="mord mtight">0</span><span class="mord mtight">0</span></span></span></span></span></span></span></span></span></span></span></span></span></span><span 
data-slate-object="text" data-key="3269"><span data-slate-leaf="true" data-offset-key="3269:0" 
data-first-offset="true"><span data-slate-string="true"> 的值</span></span></span></h2> <div 
class="se-245b18c3 " data-slate-type="paragraph" data-slate-object="block" data-key="3270"> 
<span data-slate-object="text" data-key="3271"><span data-slate-leaf="true" data-offset-key="3271:0" 
data-first-offset="true"><span data-slate-string="true">最后，我们回到今天的任务。</span></span></span> 
</div> <div class="se-9b83d5f2 " data-slate-type="paragraph" data-slate-object="block" data-key="3272"> 
<span data-slate-object="text" data-key="3273"><span data-slate-leaf="true" data-offset-key="3273:0" 
data-first-offset="true"><span data-slate-string="true">要计算 2 的 1000 次方的结果，就是要计算 1000 次乘法，最终的结果由于数值太大，我们肯定要使用大整数表示法了。也就是说，我们要在大整数表示法的基础上，操作 
1000 次乘法，每次都是乘以 2，那么怎么做大整数乘法呢？</span></span></span> </div> <div class="se-73aa6764 " data-slate-type="paragraph" 
data-slate-object="block" data-key="3274"> <span data-slate-object="text" data-key="3275"><span 
data-slate-leaf="true" data-offset-key="3275:0" data-first-offset="true"><span data-slate-string="true">要想理解这个计算过程，我们还是得回到大整数表示法本身，所对应的数学模型理解上，具体请看下图：</span></span></span> 
</div> <div class="se-eab5b795" data-slate-type="image" data-slate-object="block" data-key="3276"> 
<img class="se-cbc57bdf" src="https://static001.geekbang.org/resource/image/34/f4/34f31f36797356b51ce1205c4e45fef4.jpg"> 
<div class="se-af578f37"> 图3：大整数表示法的数学理解 </div> </div> <div class="se-90abb084 " data-slate-type="paragraph" 
data-slate-object="block" data-key="3277"> <span data-slate-object="text" data-key="3278"><span 
data-slate-leaf="true" data-offset-key="3278:0" data-first-offset="true"><span data-slate-string="true">如图所示，我们把大整数表示法中，每一个数字所对应的位权写出来，那么数组中所存储 
3、5、2、6 的大整数信息，其实等价于下面的那一行数学公式，即 $3</span></span></span><span data-slate-object="text" data-key="3279"><span 
data-slate-leaf="true" data-offset-key="3279:0" data-first-offset="true"><span class="se-cb7c857f" 
data-slate-type="italic" data-slate-object="mark"><span data-slate-string="true">10^{3}+5</span></span></span></span><span 
data-slate-object="text" data-key="3280"><span data-slate-leaf="true" data-offset-key="3280:0" 
data-first-offset="true"><span data-slate-string="true">10^{2}+2</span></span></span><span 
data-slate-object="text" data-key="3281"><span data-slate-leaf="true" data-offset-key="3281:0" 
data-first-offset="true"><span class="se-cb7c857f" data-slate-type="italic" data-slate-object="mark"><span 
data-slate-string="true">10^{1}+6</span></span></span></span><span data-slate-object="text" 
data-key="3282"><span data-slate-leaf="true" data-offset-key="3282:0" data-first-offset="true"><span 
data-slate-string="true">10^{0}$</span></span></span> </div> <div class="se-032fe4ac " data-slate-type="paragraph" 
data-slate-object="block" data-key="3283"> <span data-slate-object="text" data-key="3284"><span 
data-slate-leaf="true" data-offset-key="3284:0" data-first-offset="true"><span data-slate-string="true">我们对（3526 
这个）上面的大整数乘以 2，其实等价于对下面那个数学式子乘以 2，就可以得到如下结果：</span></span></span> </div> <div class="se-48c29278" 
data-slate-type="image" data-slate-object="block" data-key="3285"> <img class="se-f9c745a1" 
src="https://static001.geekbang.org/resource/image/1e/df/1eea8ccb5a20819051d9b71e415ed7df.jpg"> 
<div class="se-9cea978f"> 图4：大整数乘法的理解 </div> </div> <div class="se-900f113e " data-slate-type="paragraph" 
data-slate-object="block" data-key="3286"> <span data-slate-object="text" data-key="3287"><span 
data-slate-leaf="true" data-offset-key="3287:0" data-first-offset="true"><span data-slate-string="true">你会看到，对某个大整数乘 
2 的操作，其实，可以看成是对这个大整数的每一位分别乘以 2 的操作，然后再仿照大整数加法的过程，依次处理进位即可。</span></span></span> </div> <div 
class="se-0e71e0c5 " data-slate-type="paragraph" data-slate-object="block" data-key="3288"> 
<span data-slate-object="text" data-key="3289"><span data-slate-leaf="true" data-offset-key="3289:0" 
data-first-offset="true"><span data-slate-string="true">最后，关于如何完成今天的任务，我给你一个参考程序。当然你也可以选择不看参考程序，自己实现这个过程。</span></span></span> 
</div> <div class="se-3a85b4b0 se-183e2253" data-slate-type="pre" data-slate-object="block" 
data-key="3290" data-code-language="cpp"> <div class="se-8ff5a63f se-dd62ffcb"> <span></span> 
</div> <div class="se-f36aa91e"> <div class="se-efd9692e se-867e01cf" data-code-line-number="1"></div> 
<div class="se-efd9692e se-867e01cf" data-code-line-number="2"></div> <div class="se-efd9692e 
se-867e01cf" data-code-line-number="3"></div> <div class="se-efd9692e se-867e01cf" data-code-line-number="4"></div> 
<div class="se-efd9692e se-867e01cf" data-code-line-number="5"></div> <div class="se-efd9692e 
se-867e01cf" data-code-line-number="6"></div> <div class="se-efd9692e se-867e01cf" data-code-line-number="7"></div> 
<div class="se-efd9692e se-867e01cf" data-code-line-number="8"></div> <div class="se-efd9692e 
se-867e01cf" data-code-line-number="9"></div> <div class="se-efd9692e se-867e01cf" data-code-line-number="10"></div> 
<div class="se-efd9692e se-867e01cf" data-code-line-number="11"></div> <div class="se-efd9692e 
se-867e01cf" data-code-line-number="12"></div> <div class="se-efd9692e se-867e01cf" data-code-line-number="13"></div> 
<div class="se-efd9692e se-867e01cf" data-code-line-number="14"></div> <div class="se-efd9692e 
se-867e01cf" data-code-line-number="15"></div> <div class="se-efd9692e se-867e01cf" data-code-line-number="16"></div> 
<div class="se-efd9692e se-867e01cf" data-code-line-number="17"></div> <div class="se-efd9692e 
se-867e01cf" data-code-line-number="18"></div> <div class="se-efd9692e se-867e01cf" data-code-line-number="19"></div> 
<div class="se-efd9692e se-867e01cf" data-code-line-number="20"></div> <div class="se-efd9692e 
se-867e01cf" data-code-line-number="21"></div> <div class="se-efd9692e se-867e01cf" data-code-line-number="22"></div> 
<div class="se-efd9692e se-867e01cf" data-code-line-number="23"></div> <div class="se-efd9692e 
se-867e01cf" data-code-line-number="24"></div> </div> <div class="se-7be6ac38 ps ps--active-x"> 
<div class="se-03eefeec se-2642b266" data-slate-type="code-line" data-slate-object="block" 
data-key="3291"> <span data-slate-object="text" data-key="3292"><span data-slate-leaf="true" 
data-offset-key="3292:0" data-first-offset="true"><span class=" gkhl-meta" data-slate-object="annotation" 
data-annotation-key="gkann_0047372163" data-annotation-type="annotation"><span data-slate-string="true">#include 
&lt;stdio.h&gt;</span></span></span></span> </div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" 
data-slate-object="block" data-key="3293"> <span data-slate-object="text" data-key="3294"></span> 
</div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" data-slate-object="block" 
data-key="3295"> <span data-slate-object="text" data-key="3296"><span data-slate-leaf="true" 
data-offset-key="3296:0" data-first-offset="true"><span class=" gkhl-comment" data-slate-object="annotation" 
data-annotation-key="gkann_3261611063" data-annotation-type="annotation"><span data-slate-string="true">// 
将 num 数组初始化成大整数表示的 1</span></span></span></span> </div> <div class="se-03eefeec se-2642b266" 
data-slate-type="code-line" data-slate-object="block" data-key="3297"> <span data-slate-object="text" 
data-key="3298"><span data-slate-leaf="true" data-offset-key="3298:0" data-first-offset="true"><span 
class=" gkhl-comment" data-slate-object="annotation" data-annotation-key="gkann_5517920656" 
data-annotation-type="annotation"><span data-slate-string="true">// 作用就是做累乘变量</span></span></span></span> 
</div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" data-slate-object="block" 
data-key="3299"> <span data-slate-object="text" data-key="3300"><span data-slate-leaf="true" 
data-offset-key="3300:0" data-first-offset="true"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_5921628349" data-annotation-type="annotation"><span data-slate-string="true">int</span></span></span><span 
data-slate-leaf="true" data-offset-key="3300:1"><span data-slate-string="true"> num[</span></span><span 
data-slate-leaf="true" data-offset-key="3300:2"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_8537343273" data-annotation-type="annotation"><span data-slate-string="true">400</span></span></span><span 
data-slate-leaf="true" data-offset-key="3300:3"><span data-slate-string="true">] = {</span></span><span 
data-slate-leaf="true" data-offset-key="3300:4"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_6560110294" data-annotation-type="annotation"><span data-slate-string="true">1</span></span></span><span 
data-slate-leaf="true" data-offset-key="3300:5"><span data-slate-string="true">, </span></span><span 
data-slate-leaf="true" data-offset-key="3300:6"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_0873141064" data-annotation-type="annotation"><span data-slate-string="true">1</span></span></span><span 
data-slate-leaf="true" data-offset-key="3300:7"><span data-slate-string="true">}; </span></span></span> 
</div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" data-slate-object="block" 
data-key="3301"> <span data-slate-object="text" data-key="3302"></span> </div> <div class="se-03eefeec 
se-2642b266" data-slate-type="code-line" data-slate-object="block" data-key="3303"> <span data-slate-object="text" 
data-key="3304"><span data-slate-leaf="true" data-offset-key="3304:0" data-first-offset="true"><span 
class=" gkhl-keyword" data-slate-object="annotation" data-annotation-key="gkann_0749601661" 
data-annotation-type="annotation"><span class=" gkhl-function" data-slate-object="annotation" 
data-annotation-key="gkann_5936404494" data-annotation-type="annotation"><span data-slate-string="true">int</span></span></span></span><span 
data-slate-leaf="true" data-offset-key="3304:1"><span class=" gkhl-function" data-slate-object="annotation" 
data-annotation-key="gkann_5936404494" data-annotation-type="annotation"><span data-slate-string="true"> 
</span></span></span><span data-slate-leaf="true" data-offset-key="3304:2"><span class=" gkhl-title" 
data-slate-object="annotation" data-annotation-key="gkann_7263034307" data-annotation-type="annotation"><span 
class=" gkhl-function" data-slate-object="annotation" data-annotation-key="gkann_5936404494" 
data-annotation-type="annotation"><span data-slate-string="true">main</span></span></span></span><span 
data-slate-leaf="true" data-offset-key="3304:3"><span class=" gkhl-params" data-slate-object="annotation" 
data-annotation-key="gkann_8796870973" data-annotation-type="annotation"><span class=" gkhl-function" 
data-slate-object="annotation" data-annotation-key="gkann_5936404494" data-annotation-type="annotation"><span 
data-slate-string="true">()</span></span></span></span><span data-slate-leaf="true" data-offset-key="3304:4"><span 
class=" gkhl-function" data-slate-object="annotation" data-annotation-key="gkann_5936404494" 
data-annotation-type="annotation"><span data-slate-string="true"> </span></span></span><span 
data-slate-leaf="true" data-offset-key="3304:5"><span data-slate-string="true">{</span></span></span> 
</div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" data-slate-object="block" 
data-key="3305"> <span data-slate-object="text" data-key="3306"><span data-slate-leaf="true" 
data-offset-key="3306:0" data-first-offset="true"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="3306:1"><span class=" gkhl-comment" data-slate-object="annotation" 
data-annotation-key="gkann_0393141347" data-annotation-type="annotation"><span data-slate-string="true">// 
计算 100 次 2 的 10 次方相乘的结果</span></span></span></span> </div> <div class="se-03eefeec se-2642b266" 
data-slate-type="code-line" data-slate-object="block" data-key="3307"> <span data-slate-object="text" 
data-key="3308"><span data-slate-leaf="true" data-offset-key="3308:0" data-first-offset="true"><span 
data-slate-string="true"> </span></span><span data-slate-leaf="true" data-offset-key="3308:1"><span 
class=" gkhl-keyword" data-slate-object="annotation" data-annotation-key="gkann_1466927487" 
data-annotation-type="annotation"><span data-slate-string="true">for</span></span></span><span 
data-slate-leaf="true" data-offset-key="3308:2"><span data-slate-string="true"> (</span></span><span 
data-slate-leaf="true" data-offset-key="3308:3"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_2480140150" data-annotation-type="annotation"><span data-slate-string="true">int</span></span></span><span 
data-slate-leaf="true" data-offset-key="3308:4"><span data-slate-string="true"> i = </span></span><span 
data-slate-leaf="true" data-offset-key="3308:5"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_8566658205" data-annotation-type="annotation"><span data-slate-string="true">0</span></span></span><span 
data-slate-leaf="true" data-offset-key="3308:6"><span data-slate-string="true">; i &lt; </span></span><span 
data-slate-leaf="true" data-offset-key="3308:7"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_4882495239" data-annotation-type="annotation"><span data-slate-string="true">100</span></span></span><span 
data-slate-leaf="true" data-offset-key="3308:8"><span data-slate-string="true">; i++) {</span></span></span> 
</div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" data-slate-object="block" 
data-key="3309"> <span data-slate-object="text" data-key="3310"><span data-slate-leaf="true" 
data-offset-key="3310:0" data-first-offset="true"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="3310:1"><span class=" gkhl-comment" data-slate-object="annotation" 
data-annotation-key="gkann_8452775215" data-annotation-type="annotation"><span data-slate-string="true">// 
对大整数的每一位乘以 2 的 10 次方</span></span></span></span> </div> <div class="se-03eefeec se-2642b266" 
data-slate-type="code-line" data-slate-object="block" data-key="3311"> <span data-slate-object="text" 
data-key="3312"><span data-slate-leaf="true" data-offset-key="3312:0" data-first-offset="true"><span 
data-slate-string="true"> </span></span><span data-slate-leaf="true" data-offset-key="3312:1"><span 
class=" gkhl-keyword" data-slate-object="annotation" data-annotation-key="gkann_0686442391" 
data-annotation-type="annotation"><span data-slate-string="true">for</span></span></span><span 
data-slate-leaf="true" data-offset-key="3312:2"><span data-slate-string="true"> (</span></span><span 
data-slate-leaf="true" data-offset-key="3312:3"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_2066823270" data-annotation-type="annotation"><span data-slate-string="true">int</span></span></span><span 
data-slate-leaf="true" data-offset-key="3312:4"><span data-slate-string="true"> j = </span></span><span 
data-slate-leaf="true" data-offset-key="3312:5"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_9488065635" data-annotation-type="annotation"><span data-slate-string="true">1</span></span></span><span 
data-slate-leaf="true" data-offset-key="3312:6"><span data-slate-string="true">; j &lt;= num[</span></span><span 
data-slate-leaf="true" data-offset-key="3312:7"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_5726460025" data-annotation-type="annotation"><span data-slate-string="true">0</span></span></span><span 
data-slate-leaf="true" data-offset-key="3312:8"><span data-slate-string="true">]; j++) num[j] 
*= </span></span><span data-slate-leaf="true" data-offset-key="3312:9"><span class=" gkhl-number" 
data-slate-object="annotation" data-annotation-key="gkann_9612457562" data-annotation-type="annotation"><span 
data-slate-string="true">1024</span></span></span><span data-slate-leaf="true" data-offset-key="3312:10"><span 
data-slate-string="true">; </span></span></span> </div> <div class="se-03eefeec se-2642b266" 
data-slate-type="code-line" data-slate-object="block" data-key="3313"> <span data-slate-object="text" 
data-key="3314"><span data-slate-leaf="true" data-offset-key="3314:0" data-first-offset="true"><span 
data-slate-string="true"> </span></span><span data-slate-leaf="true" data-offset-key="3314:1"><span 
class=" gkhl-comment" data-slate-object="annotation" data-annotation-key="gkann_8896182182" 
data-annotation-type="annotation"><span data-slate-string="true">// 处理进位</span></span></span></span> 
</div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" data-slate-object="block" 
data-key="3315"> <span data-slate-object="text" data-key="3316"><span data-slate-leaf="true" 
data-offset-key="3316:0" data-first-offset="true"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="3316:1"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_8929885357" data-annotation-type="annotation"><span data-slate-string="true">for</span></span></span><span 
data-slate-leaf="true" data-offset-key="3316:2"><span data-slate-string="true"> (</span></span><span 
data-slate-leaf="true" data-offset-key="3316:3"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_8697680074" data-annotation-type="annotation"><span data-slate-string="true">int</span></span></span><span 
data-slate-leaf="true" data-offset-key="3316:4"><span data-slate-string="true"> j = </span></span><span 
data-slate-leaf="true" data-offset-key="3316:5"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_5988541969" data-annotation-type="annotation"><span data-slate-string="true">1</span></span></span><span 
data-slate-leaf="true" data-offset-key="3316:6"><span data-slate-string="true">; j &lt;= num[</span></span><span 
data-slate-leaf="true" data-offset-key="3316:7"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_5946340122" data-annotation-type="annotation"><span data-slate-string="true">0</span></span></span><span 
data-slate-leaf="true" data-offset-key="3316:8"><span data-slate-string="true">]; j++) {</span></span></span> 
</div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" data-slate-object="block" 
data-key="3317"> <span data-slate-object="text" data-key="3318"><span data-slate-leaf="true" 
data-offset-key="3318:0" data-first-offset="true"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="3318:1"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_1071491069" data-annotation-type="annotation"><span data-slate-string="true">if</span></span></span><span 
data-slate-leaf="true" data-offset-key="3318:2"><span data-slate-string="true"> (num[j] &lt; 
</span></span><span data-slate-leaf="true" data-offset-key="3318:3"><span class=" gkhl-number" 
data-slate-object="annotation" data-annotation-key="gkann_0184025214" data-annotation-type="annotation"><span 
data-slate-string="true">10</span></span></span><span data-slate-leaf="true" data-offset-key="3318:4"><span 
data-slate-string="true">) </span></span><span data-slate-leaf="true" data-offset-key="3318:5"><span 
class=" gkhl-keyword" data-slate-object="annotation" data-annotation-key="gkann_8283865664" 
data-annotation-type="annotation"><span data-slate-string="true">continue</span></span></span><span 
data-slate-leaf="true" data-offset-key="3318:6"><span data-slate-string="true">; </span></span></span> 
</div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" data-slate-object="block" 
data-key="3319"> <span data-slate-object="text" data-key="3320"><span data-slate-leaf="true" 
data-offset-key="3320:0" data-first-offset="true"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="3320:1"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_2366934364" data-annotation-type="annotation"><span data-slate-string="true">if</span></span></span><span 
data-slate-leaf="true" data-offset-key="3320:2"><span data-slate-string="true"> (j == num[</span></span><span 
data-slate-leaf="true" data-offset-key="3320:3"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_8757333198" data-annotation-type="annotation"><span data-slate-string="true">0</span></span></span><span 
data-slate-leaf="true" data-offset-key="3320:4"><span data-slate-string="true">]) num[++num[</span></span><span 
data-slate-leaf="true" data-offset-key="3320:5"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_7329206628" data-annotation-type="annotation"><span data-slate-string="true">0</span></span></span><span 
data-slate-leaf="true" data-offset-key="3320:6"><span data-slate-string="true">]] = </span></span><span 
data-slate-leaf="true" data-offset-key="3320:7"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_4568278607" data-annotation-type="annotation"><span data-slate-string="true">0</span></span></span><span 
data-slate-leaf="true" data-offset-key="3320:8"><span data-slate-string="true">;</span></span></span> 
</div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" data-slate-object="block" 
data-key="3321"> <span data-slate-object="text" data-key="3322"><span data-slate-leaf="true" 
data-offset-key="3322:0" data-first-offset="true"><span data-slate-string="true"> num[j + </span></span><span 
data-slate-leaf="true" data-offset-key="3322:1"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_9238688564" data-annotation-type="annotation"><span data-slate-string="true">1</span></span></span><span 
data-slate-leaf="true" data-offset-key="3322:2"><span data-slate-string="true">] += num[i] 
/ </span></span><span data-slate-leaf="true" data-offset-key="3322:3"><span class=" gkhl-number" 
data-slate-object="annotation" data-annotation-key="gkann_2425341886" data-annotation-type="annotation"><span 
data-slate-string="true">10</span></span></span><span data-slate-leaf="true" data-offset-key="3322:4"><span 
data-slate-string="true">;</span></span></span> </div> <div class="se-03eefeec se-2642b266" 
data-slate-type="code-line" data-slate-object="block" data-key="3323"> <span data-slate-object="text" 
data-key="3324"><span data-slate-leaf="true" data-offset-key="3324:0" data-first-offset="true"><span 
data-slate-string="true"> num[j] %= </span></span><span data-slate-leaf="true" data-offset-key="3324:1"><span 
class=" gkhl-number" data-slate-object="annotation" data-annotation-key="gkann_7468144373" 
data-annotation-type="annotation"><span data-slate-string="true">10</span></span></span><span 
data-slate-leaf="true" data-offset-key="3324:2"><span data-slate-string="true">;</span></span></span> 
</div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" data-slate-object="block" 
data-key="3325"> <span data-slate-object="text" data-key="3326"><span data-slate-leaf="true" 
data-offset-key="3326:0" data-first-offset="true"><span data-slate-string="true"> }</span></span></span> 
</div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" data-slate-object="block" 
data-key="3327"> <span data-slate-object="text" data-key="3328"><span data-slate-leaf="true" 
data-offset-key="3328:0" data-first-offset="true"><span data-slate-string="true"> }</span></span></span> 
</div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" data-slate-object="block" 
data-key="3329"> <span data-slate-object="text" data-key="3330"><span data-slate-leaf="true" 
data-offset-key="3330:0" data-first-offset="true"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="3330:1"><span class=" gkhl-comment" data-slate-object="annotation" 
data-annotation-key="gkann_0198131166" data-annotation-type="annotation"><span data-slate-string="true">// 
输出大整数</span></span></span></span> </div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" 
data-slate-object="block" data-key="3331"> <span data-slate-object="text" data-key="3332"><span 
data-slate-leaf="true" data-offset-key="3332:0" data-first-offset="true"><span data-slate-string="true"> 
</span></span><span data-slate-leaf="true" data-offset-key="3332:1"><span class=" gkhl-comment" 
data-slate-object="annotation" data-annotation-key="gkann_8090247561" data-annotation-type="annotation"><span 
data-slate-string="true">// 由于大整数是倒着存的，所以输出的时候倒着遍历</span></span></span></span> </div> <div 
class="se-03eefeec se-2642b266" data-slate-type="code-line" data-slate-object="block" data-key="3333"> 
<span data-slate-object="text" data-key="3334"><span data-slate-leaf="true" data-offset-key="3334:0" 
data-first-offset="true"><span data-slate-string="true"> </span></span><span data-slate-leaf="true" 
data-offset-key="3334:1"><span class=" gkhl-keyword" data-slate-object="annotation" data-annotation-key="gkann_3521575403" 
data-annotation-type="annotation"><span data-slate-string="true">for</span></span></span><span 
data-slate-leaf="true" data-offset-key="3334:2"><span data-slate-string="true"> (</span></span><span 
data-slate-leaf="true" data-offset-key="3334:3"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_4109480233" data-annotation-type="annotation"><span data-slate-string="true">int</span></span></span><span 
data-slate-leaf="true" data-offset-key="3334:4"><span data-slate-string="true"> i = num[</span></span><span 
data-slate-leaf="true" data-offset-key="3334:5"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_8480337615" data-annotation-type="annotation"><span data-slate-string="true">0</span></span></span><span 
data-slate-leaf="true" data-offset-key="3334:6"><span data-slate-string="true">]; i &gt;= </span></span><span 
data-slate-leaf="true" data-offset-key="3334:7"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_2446935852" data-annotation-type="annotation"><span data-slate-string="true">1</span></span></span><span 
data-slate-leaf="true" data-offset-key="3334:8"><span data-slate-string="true">; --i) </span></span><span 
data-slate-leaf="true" data-offset-key="3334:9"><span class=" gkhl-built_in" data-slate-object="annotation" 
data-annotation-key="gkann_0696607037" data-annotation-type="annotation"><span data-slate-string="true">printf</span></span></span><span 
data-slate-leaf="true" data-offset-key="3334:10"><span data-slate-string="true">(</span></span><span 
data-slate-leaf="true" data-offset-key="3334:11"><span class=" gkhl-string" data-slate-object="annotation" 
data-annotation-key="gkann_5003917437" data-annotation-type="annotation"><span data-slate-string="true">"%d"</span></span></span><span 
data-slate-leaf="true" data-offset-key="3334:12"><span data-slate-string="true">, num[i]);</span></span></span> 
</div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" data-slate-object="block" 
data-key="3335"> <span data-slate-object="text" data-key="3336"><span data-slate-leaf="true" 
data-offset-key="3336:0" data-first-offset="true"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="3336:1"><span class=" gkhl-built_in" data-slate-object="annotation" 
data-annotation-key="gkann_2861763424" data-annotation-type="annotation"><span data-slate-string="true">printf</span></span></span><span 
data-slate-leaf="true" data-offset-key="3336:2"><span data-slate-string="true">(</span></span><span 
data-slate-leaf="true" data-offset-key="3336:3"><span class=" gkhl-string" data-slate-object="annotation" 
data-annotation-key="gkann_2772144646" data-annotation-type="annotation"><span data-slate-string="true">"\n"</span></span></span><span 
data-slate-leaf="true" data-offset-key="3336:4"><span data-slate-string="true">);</span></span></span> 
</div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" data-slate-object="block" 
data-key="3337"> <span data-slate-object="text" data-key="3338"><span data-slate-leaf="true" 
data-offset-key="3338:0" data-first-offset="true"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="3338:1"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_1866124008" data-annotation-type="annotation"><span data-slate-string="true">return</span></span></span><span 
data-slate-leaf="true" data-offset-key="3338:2"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="3338:3"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_0166287303" data-annotation-type="annotation"><span data-slate-string="true">0</span></span></span><span 
data-slate-leaf="true" data-offset-key="3338:4"><span data-slate-string="true">;</span></span></span> 
</div> <div class="ps__rail-x" style="width: 365px; left: 0px; bottom: 0px;"> <div class="ps__thumb-x" 
tabindex="0" style="left: 0px; width: 271px;"></div> </div> <div class="ps__rail-y" style="top: 
0px; right: 0px;"> <div class="ps__thumb-y" tabindex="0" style="top: 0px; height: 0px;"></div> 
</div> </div> </div> <h2 class="se-d95c76aa" data-slate-type="heading" data-slate-object="block" 
data-key="3339"><span data-slate-object="text" data-key="3340"><span data-slate-leaf="true" 
data-offset-key="3340:0" data-first-offset="true"><span data-slate-string="true">课程小结</span></span></span></h2> 
<div class="se-07753619 " data-slate-type="paragraph" data-slate-object="block" data-key="3341"> 
<span data-slate-object="text" data-key="3342"><span data-slate-leaf="true" data-offset-key="3342:0" 
data-first-offset="true"><span data-slate-string="true">解决了这个任务后，恭喜你，又变强了一点点。今天我们学习了大整数的表示法，以及大整数加法和乘法的基本操作，我希望你记住以下几点：</span></span></span> 
</div> <div class="se-c696ad77" data-slate-type="list" data-slate-object="block" data-key="3343"> 
<div class="se-584136b0" data-slate-type="list-line" data-slate-object="block" data-key="3344"> 
<div class="se-5ec753c2 se-c513a84f" data-code-line-number="1"></div> <div class="se-ede22f1c"> 
<span data-slate-object="text" data-key="3345"><span data-slate-leaf="true" data-offset-key="3345:0" 
data-first-offset="true"><span data-slate-string="true">在大整数的表示法中，数字是从右到左，倒着存放在数组中的。</span></span></span> 
</div> </div> <div class="se-488c9387" data-slate-type="list-line" data-slate-object="block" 
data-key="3346"> <div class="se-daf35633 se-76f2b43c" data-code-line-number="2"></div> <div 
class="se-a22a1da5"> <span data-slate-object="text" data-key="3347"><span data-slate-leaf="true" 
data-offset-key="3347:0" data-first-offset="true"><span data-slate-string="true">大整数的表示法，体现的是数据结构对于程序设计的作用。</span></span></span> 
</div> </div> <div class="se-362067cd" data-slate-type="list-line" data-slate-object="block" 
data-key="3348"> <div class="se-e8035309 se-790bf4d9" data-code-line-number="3"></div> <div 
class="se-03a349cf"> <span data-slate-object="text" data-key="3349"><span data-slate-leaf="true" 
data-offset-key="3349:0" data-first-offset="true"><span data-slate-string="true">大整数的加法和乘法过程，体现的则是算法对于程序设计的作用。</span></span></span> 
</div> </div> </div> <div class="se-8f258486 " data-slate-type="paragraph" data-slate-object="block" 
data-key="3350"> <span data-slate-object="text" data-key="3351"><span data-slate-leaf="true" 
data-offset-key="3351:0" data-first-offset="true"><span data-slate-string="true">同时，你还可以看到，我们在理解大整数乘法的过程中，是从数组的表示法与数学公式的等价性这个角度出发讨论的。其实我就是想再次跟你强调那句话，就是</span></span></span><span 
data-slate-object="text" data-key="3352"><span data-slate-leaf="true" data-offset-key="3352:0" 
data-first-offset="true"><span class="se-10a81187" data-slate-type="bold" data-slate-object="mark"><span 
data-slate-string="true">算法的底层是数学</span></span></span></span><span data-slate-object="text" 
data-key="3353"><span data-slate-leaf="true" data-offset-key="3353:0" data-first-offset="true"><span 
data-slate-string="true">。</span></span></span> </div> <div class="se-92eb0d58 " data-slate-type="paragraph" 
data-slate-object="block" data-key="3354"> <span data-slate-object="text" data-key="3355"><span 
data-slate-leaf="true" data-offset-key="3355:0" data-first-offset="true"><span data-slate-string="true">而通过今天的学习，想必你已经对“</span></span></span><span 
data-slate-object="text" data-key="3356"><span data-slate-leaf="true" data-offset-key="3356:0" 
data-first-offset="true"><span class="se-66f7aeff" data-slate-type="bold" data-slate-object="mark"><span 
data-slate-string="true">数据结构本质是用作数据的表示</span></span></span></span><span data-slate-object="text" 
data-key="3357"><span data-slate-leaf="true" data-offset-key="3357:0" data-first-offset="true"><span 
data-slate-string="true">”这句话，已经有所感觉了。综合“</span></span></span><span data-slate-object="text" 
data-key="3358"><span data-slate-leaf="true" data-offset-key="3358:0" data-first-offset="true"><span 
class="se-6f1b896c" data-slate-type="bold" data-slate-object="mark"><span data-slate-string="true">算法是做数据的计算</span></span></span></span><span 
data-slate-object="text" data-key="3359"><span data-slate-leaf="true" data-offset-key="3359:0" 
data-first-offset="true"><span data-slate-string="true">”这句话，说明算法和数据结构是程序中可以独立进行设计的两个部分，关于这点呢，将是下一节咱们讲解的重点。</span></span></span> 
</div> <div class="se-2f3d2c21 " data-slate-type="paragraph" data-slate-object="block" data-key="3360"> 
<span data-slate-object="text" data-key="3361"><span data-slate-leaf="true" data-offset-key="3361:0" 
data-first-offset="true"><span data-slate-string="true">好了，今天就到这里了，我是胡光，我们下期见。</span></span></span> 
</div> </div>', body_summary='', bundle='book', delta=0, body_format='full_html', langcode='zh-hans', 
revision_id=754 where entity_id=754 
 {executed in 2 msec}
2020-11-24 18:03:34.766 INFO  jdbc.sqltiming Line:373 - update node_revision__body set body_value='<div data-slate-editor="true" data-key="3133" autocorrect="off" 
spellcheck="false" data-gramm="false" style="outline: none; white-space: pre-wrap; overflow-wrap: 
break-word;"> <div class="se-23fe6c9e " data-slate-type="paragraph" data-slate-object="block" 
data-key="3134"> <span data-slate-object="text" data-key="3135"><span data-slate-leaf="true" 
data-offset-key="3135:0" data-first-offset="true"><span data-slate-string="true">你好，我是胡光，咱们又见面了。</span></span></span> 
</div> <div class="se-14e38cce " data-slate-type="paragraph" data-slate-object="block" data-key="3136"> 
<span data-slate-object="text" data-key="3137"><span data-slate-leaf="true" data-offset-key="3137:0" 
data-first-offset="true"><span data-slate-string="true">上两节呢，我们讲了素数筛这个算法，并且用素数筛算法演示了程序设计过程中的框架思维。其中提到了欧拉筛法，不知道勤奋的你有没有课后自己去学习一下呢？如果你学习了欧拉筛法以后，你会对我所说的框架思维有更深刻的体会。</span></span></span> 
</div> <div class="se-c44a96be " data-slate-type="paragraph" data-slate-object="block" data-key="3138"> 
<span data-slate-object="text" data-key="3139"><span data-slate-leaf="true" data-offset-key="3139:0" 
data-first-offset="true"><span data-slate-string="true">在之前的文章中，我们介绍过算法和数据结构的作用。当时我讲到，算法的作用是做数据的计算，并且它对于编程的重要意义，不止是停留在那些叫得上来名字的具体算法上面，而是我们称之的算法思维。</span></span></span> 
</div> <div class="se-abf2e958 " data-slate-type="paragraph" data-slate-object="block" data-key="3140"> 
<span data-slate-object="text" data-key="3141"><span data-slate-leaf="true" data-offset-key="3141:0" 
data-first-offset="true"><span data-slate-string="true">算法思维的具体表现，就是我们处理得到相同信息时，所采用的不同的流程方法。这些方法呢，有好坏高低的比较，而评价的标准，主要就是</span></span></span><span 
data-slate-object="text" data-key="3142"><span data-slate-leaf="true" data-offset-key="3142:0" 
data-first-offset="true"><span class="se-e69f0fec" data-slate-type="bold" data-slate-object="mark"><span 
data-slate-string="true">从时空复杂度方面来考量</span></span></span></span><span data-slate-object="text" 
data-key="3143"><span data-slate-leaf="true" data-offset-key="3143:0" data-first-offset="true"><span 
data-slate-string="true">。由于本专栏主要是教会你掌握编程思维，所以，即使你对时空复杂度不是很了解，也不用担心它会影响你的入门编程学习。你只需要知道，这是我们衡量算法好坏的重要指标即可。</span></span></span> 
</div> <div class="se-439caf5c " data-slate-type="paragraph" data-slate-object="block" data-key="3144"> 
<span data-slate-object="text" data-key="3145"><span data-slate-leaf="true" data-offset-key="3145:0" 
data-first-offset="true"><span data-slate-string="true">前两篇文章呢，其实更多的就是给大家展示算法思维对于程序设计的重要性，并且，我还要在这里提醒一句，算法的底层是数学，适当的补充数学基础，对于算法的学习是有奇效的。</span></span></span> 
</div> <div class="se-b9d471ec " data-slate-type="paragraph" data-slate-object="block" data-key="3146"> 
<span data-slate-object="text" data-key="3147"><span data-slate-leaf="true" data-offset-key="3147:0" 
data-first-offset="true"><span data-slate-string="true">数据结构和算法，前者负责“表示数据”，后者负责“处理数据”。接下来，我将给你讲讲数据结构的重要性。</span></span></span> 
</div> <h2 class="se-5009d104" data-slate-type="heading" data-slate-object="block" data-key="3148"><span 
data-slate-object="text" data-key="3149"><span data-slate-leaf="true" data-offset-key="3149:0" 
data-first-offset="true"><span data-slate-string="true">今日任务</span></span></span></h2> <div 
class="se-97d2ebbb " data-slate-type="paragraph" data-slate-object="block" data-key="3150"> 
<span data-slate-object="text" data-key="3151"><span data-slate-leaf="true" data-offset-key="3151:0" 
data-first-offset="true"><span data-slate-string="true">表示数据到底是什么呢？为什么表示数据很重要？通过今天的 10 分钟任务，你就能明白其中的重要意义。这个任务很简单，就是请你实现一个程序，输出 
2 的 1000 次方的结果是多少。</span></span></span> </div> <div class="se-415927be " data-slate-type="paragraph" 
data-slate-object="block" data-key="3152"> <span data-slate-object="text" data-key="3153"><span 
data-slate-leaf="true" data-offset-key="3153:0" data-first-offset="true"><span data-slate-string="true">关于这个问题，你可能会意识到，C 
语言中给我们提供的 int 类型，肯定是无法完成这个任务的，因为它表示不了这么大的数字。你可能想用 long long 类型来进行解决，那你这就要犯低级错误了。long long 是 
64 位整型，也就是占 64 个 2 进制位，它顶多能表示 2 的 64 次方减 1 的结果，相对于 2 的 1000 次方来说，小太多了。</span></span></span> 
</div> <div class="se-16a8442b " data-slate-type="paragraph" data-slate-object="block" data-key="3154"> 
<span data-slate-object="text" data-key="3155"><span data-slate-leaf="true" data-offset-key="3155:0" 
data-first-offset="true"><span data-slate-string="true">你可能又想到，既然 long long 表示不了，那就使用 double，不是说 
double 是浮点数类型，可以表示很大很大的数字么？对，double 作为双精度浮点型，确实可以表示很大很大的数字，2 的 1000 次方这个数字，对于 double 的表示范围来说，也是不足挂齿的。</span></span></span> 
</div> <div class="se-28a8d619 " data-slate-type="paragraph" data-slate-object="block" data-key="3156"> 
<span data-slate-object="text" data-key="3157"><span data-slate-leaf="true" data-offset-key="3157:0" 
data-first-offset="true"><span data-slate-string="true">可这里面存在一个严重的问题，就是 double 是有精度损失的。什么意思呢？请耐心听我给你解释。</span></span></span> 
</div> <div class="se-e8536c86 " data-slate-type="paragraph" data-slate-object="block" data-key="3158"> 
<span data-slate-object="text" data-key="3159"><span data-slate-leaf="true" data-offset-key="3159:0" 
data-first-offset="true"><span data-slate-string="true">其实也很好理解，不管是 long long 类型，还是 double 
类型，它们都是 64 位的信息，也就是说，它们都可以准确表示 2 的 64 次方个数量的数字。但是，即使 double 类型表示数字的范围比 long long 要大很多，可这个当中很多数字 
double 是没有办法准确表示的。</span></span></span> </div> <div class="se-14122ee8 " data-slate-type="paragraph" 
data-slate-object="block" data-key="3160"> <span data-slate-object="text" data-key="3161"><span 
data-slate-leaf="true" data-offset-key="3161:0" data-first-offset="true"><span data-slate-string="true">至于 
double 的表示精度，一般来说是有效数字 15 位，就是一个数字，由左向右，从第一个不为零的数字起，向后 15 位都是准确的。因此 double 类型实际上也没有办法，准确表示 
2 的 1000 次方的计算结果。</span></span></span> </div> <div class="se-a35b4966 " data-slate-type="paragraph" 
data-slate-object="block" data-key="3162"> <span data-slate-object="text" data-key="3163"><span 
data-slate-leaf="true" data-offset-key="3163:0" data-first-offset="true"><span data-slate-string="true">那究竟应该如何来解决今天这个问题呢？带着这个疑问，让我们正式开始今天的释疑之行吧。</span></span></span> 
</div> <h2 class="se-78b74562" data-slate-type="heading" data-slate-object="block" data-key="3164"><span 
data-slate-object="text" data-key="3165"><span data-slate-leaf="true" data-offset-key="3165:0" 
data-first-offset="true"><span data-slate-string="true">必知必会，查缺补漏</span></span></span></h2> 
<div class="se-286f9831 " data-slate-type="paragraph" data-slate-object="block" data-key="3166"> 
<span data-slate-object="text" data-key="3167"><span data-slate-leaf="true" data-offset-key="3167:0" 
data-first-offset="true"><span data-slate-string="true">前面讲了这么多，我就是想让你明确一点，就是在我们所认识的 C 语言中，是没有任何一种数据类型，可以表示得下我们今天想要计算 
2 的 1000 次方的结果。也就是说，基础类型表示不了我们今天所要计算的这个结果，那该怎么办呢？</span></span></span> </div> <div class="se-fb3da17a 
" data-slate-type="paragraph" data-slate-object="block" data-key="3168"> <span data-slate-object="text" 
data-key="3169"><span data-slate-leaf="true" data-offset-key="3169:0" data-first-offset="true"><span 
data-slate-string="true">还记得我讲过的关于结构体的相关知识么？当时我们使用结构体，创造了一个新的代表坐标点的数据类型。按照创造类型的思路去思考现在这个问题，也就是，如果我们能采用一种能够表示更大范围的整数的数字表示法，那今天这个问题，就可以解决了。这就是我们今天要学习的内容，它的大类名字叫做</span></span></span><span 
data-slate-object="text" data-key="3170"><span data-slate-leaf="true" data-offset-key="3170:0" 
data-first-offset="true"><span class="se-28b580fa" data-slate-type="bold" data-slate-object="mark"><span 
data-slate-string="true">高精度表示法</span></span></span></span><span data-slate-object="text" data-key="3171"><span 
data-slate-leaf="true" data-offset-key="3171:0" data-first-offset="true"><span data-slate-string="true">，更具体的叫做</span></span></span><span 
data-slate-object="text" data-key="3172"><span data-slate-leaf="true" data-offset-key="3172:0" 
data-first-offset="true"><span class="se-b0491101" data-slate-type="bold" data-slate-object="mark"><span 
data-slate-string="true">大整数表示法</span></span></span></span><span data-slate-object="text" data-key="3173"><span 
data-slate-leaf="true" data-offset-key="3173:0" data-first-offset="true"><span data-slate-string="true">。</span></span></span> 
</div> <h4 class="se-95bdbdbd" data-slate-type="heading" data-slate-object="block" data-key="3174"><span 
data-slate-object="text" data-key="3175"><span data-slate-leaf="true" data-offset-key="3175:0" 
data-first-offset="true"><span data-slate-string="true">1. 大整数表示法</span></span></span></h4> 
<div class="se-4c5582dd " data-slate-type="paragraph" data-slate-object="block" data-key="3176"> 
<span data-slate-object="text" data-key="3177"><span data-slate-leaf="true" data-offset-key="3177:0" 
data-first-offset="true"><span data-slate-string="true">为了完成今天这个任务，我们需要从数据的表示上下功夫。其实，数据的表示绝不是只有一种方法，就好像你想表达数字 
1 的一半，你既可以用 0.5 来表示，也可以用 1/2 来表示。所以，今天我们想要表示很大很大的整数，其实也有很多方法，下面就看看我要给你介绍的方法吧。</span></span></span> 
</div> <div class="se-b4c33114 " data-slate-type="paragraph" data-slate-object="block" data-key="3178"> 
<span data-slate-object="text" data-key="3179"><span data-slate-leaf="true" data-offset-key="3179:0" 
data-first-offset="true"><span data-slate-string="true">首先我们先来思考一个事情，如果我想要存储一个 100 位的十进制数字，为什么现有的 
int 数据类型做不到？本质上是因为这个数字的位数，超过了 int 能够表示数字的位数上限。int 能够表示的数字大小的上限，是一个以 2 开头的 10 位数字，而我们想要存储的，却是一个 
100 位的数字。</span></span></span> </div> <div class="se-08cb08d3 " data-slate-type="paragraph" 
data-slate-object="block" data-key="3180"> <span data-slate-object="text" data-key="3181"><span 
data-slate-leaf="true" data-offset-key="3181:0" data-first-offset="true"><span data-slate-string="true">看到了这个本质问题后，其实也就找到了解决问题的方向，那就是我们要创造的这种数字的表示方法，能够有足够的空间去容纳更多位数的数字。提起空间，你想到了什么？是不是我们之前讲到的数组？也就是说，我们开辟一个整型数组空间，让这个数组的每个位置存储一位数字，这样是不是就可以很轻松地存储 
100 位数字了。</span></span></span> </div> <div class="se-9a3d45df " data-slate-type="paragraph" 
data-slate-object="block" data-key="3182"> <span data-slate-object="text" data-key="3183"><span 
data-slate-leaf="true" data-offset-key="3183:0" data-first-offset="true"><span data-slate-string="true">下面就来看看这种大整数表示法，是如何存储数字 
3526 的吧：</span></span></span> </div> <div class="se-81b30b2f" data-slate-type="image" data-slate-object="block" 
data-key="3184"> <img class="se-3cc3d621" src="https://static001.geekbang.org/resource/image/bf/6d/bf84afda4623d6e9471be24b6325896d.jpg"> 
<div class="se-4a159a26"> 图1：大整数表示示意图 </div> </div> <div class="se-4b87c671 " data-slate-type="paragraph" 
data-slate-object="block" data-key="3185"> <span data-slate-object="text" data-key="3186"><span 
data-slate-leaf="true" data-offset-key="3186:0" data-first-offset="true"><span data-slate-string="true">正如你所看到的，这种表示法中，使用数组的第 
0 位存储数字的位数，因为 3526 有 4 位，所以数组的第 0 位就设置成了 4 这个值。接下来，数组从第 1 位到第 4 位记录的就是原数字 3526，可是你有没有发现，这个数字是好像是倒着放置的，数字的最高位，也放在数组的最高位中，在图上看着感觉怪怪的。</span></span></span> 
</div> <div class="se-3aece748 " data-slate-type="paragraph" data-slate-object="block" data-key="3187"> 
<span data-slate-object="text" data-key="3188"><span data-slate-leaf="true" data-offset-key="3188:0" 
data-first-offset="true"><span data-slate-string="true">你可能会觉得别扭，可我要告诉你，这种存储方式，可是凝结了前人的智慧，最直接的一个好处，就是当你拿着两个这样的大整数做加法，产生一个新的大整数的时候，这个新产生的大整数会涉及到进位问题。</span></span></span> 
</div> <div class="se-d283a534 " data-slate-type="paragraph" data-slate-object="block" data-key="3189"> 
<span data-slate-object="text" data-key="3190"><span data-slate-leaf="true" data-offset-key="3190:0" 
data-first-offset="true"><span data-slate-string="true">例如：95 + 12 = 107，两个两位的大整数相加，产生一个三位的大整数。在这种从右到左的倒着存储表示法中，是向着数组高位去进位，去扩充位数，这是便利可行的。可你要是从左到右去正着存储，你会发现一旦最高位产生进位，就很难处理。</span></span></span> 
</div> <h4 class="se-bf21b3ee" data-slate-type="heading" data-slate-object="block" data-key="3191"><span 
data-slate-object="text" data-key="3192"><span data-slate-leaf="true" data-offset-key="3192:0" 
data-first-offset="true"><span data-slate-string="true">2. 如何计算大整数加法</span></span></span></h4> 
<div class="se-4363ce55 " data-slate-type="paragraph" data-slate-object="block" data-key="3193"> 
<span data-slate-object="text" data-key="3194"><span data-slate-leaf="true" data-offset-key="3194:0" 
data-first-offset="true"><span data-slate-string="true">你可能还是不太理解，这种大整数表示法的好处，下面我们就拿“大整数加法”来举个例子。顺便也向你展示一下，我们究竟是如何操作这种大整数。</span></span></span> 
</div> <div class="se-7de63203 " data-slate-type="paragraph" data-slate-object="block" data-key="3195"> 
<span data-slate-object="text" data-key="3196"><span data-slate-leaf="true" data-offset-key="3196:0" 
data-first-offset="true"><span data-slate-string="true">大整数加法，顾名思义就是利用大整数表式法，做加法运算。具体怎么做，你应该还记得小学时候，老师教给我们的加法竖式吧？其实大整数加法，本质上就是参考这种竖式计算法，把每一位对齐，然后按位相加，加完以后再统一处理进位。下面，我用一张图说明大整数加法，是如何计算 
445 + 9667 的：</span></span></span> </div> <div class="se-af793a26" data-slate-type="image" 
data-slate-object="block" data-key="3197"> <img class="se-a3583319" src="https://static001.geekbang.org/resource/image/6a/44/6a054bbbc6cca21bfc20034f0466aa44.jpg"> 
<div class="se-87b5d6ee"> 图2：大整数加法示意图 </div> </div> <div class="se-2d3f01e0 " data-slate-type="paragraph" 
data-slate-object="block" data-key="3198"> <span data-slate-object="text" data-key="3199"><span 
data-slate-leaf="true" data-offset-key="3199:0" data-first-offset="true"><span data-slate-string="true">正如你所看到的，首先我们用大整数表示法，分别表示 
445 和 9667 这两个数字；然后以位数最长的那个大整数，作为计算结果大整数的基础位数，445 和 9667 按位相加，得到一个 4 位的结果大整数，4 位分别是，9、10、10、12；最后我们再依次处理进位，就得到了底下那一行的结果：10112。</span></span></span> 
</div> <div class="se-22fa8c23 " data-slate-type="paragraph" data-slate-object="block" data-key="3200"> 
<span data-slate-object="text" data-key="3201"><span data-slate-leaf="true" data-offset-key="3201:0" 
data-first-offset="true"><span data-slate-string="true">在这个过程中，你会看到最高位的 9 产生了进位，最终变成了一个 5 位的大整数，产生的新最高位，我们只需要继续向后放即可。这就是我刚刚所说的，这种大整数表示法，能够非常方便地处理进位。</span></span></span> 
</div> <div class="se-c045c683 " data-slate-type="paragraph" data-slate-object="block" data-key="3202"> 
<span data-slate-object="text" data-key="3203"><span data-slate-leaf="true" data-offset-key="3203:0" 
data-first-offset="true"><span data-slate-string="true">看完了大整数加法的过程后，不可缺少的，就是代码的实现过程。下面我给你准备了一份代码，代码中有相关注释，这是需要你自己拿出时间，来进行自学的内容。</span></span></span> 
</div> <div class="se-22501880 se-abd90b79" data-slate-type="pre" data-slate-object="block" 
data-key="3204" data-code-language="cpp"> <div class="se-7245a06b se-06473a6a"> <span></span> 
</div> <div class="se-99005946"> <div class="se-b447076e se-98ec1a00" data-code-line-number="1"></div> 
<div class="se-b447076e se-98ec1a00" data-code-line-number="2"></div> <div class="se-b447076e 
se-98ec1a00" data-code-line-number="3"></div> <div class="se-b447076e se-98ec1a00" data-code-line-number="4"></div> 
<div class="se-b447076e se-98ec1a00" data-code-line-number="5"></div> <div class="se-b447076e 
se-98ec1a00" data-code-line-number="6"></div> <div class="se-b447076e se-98ec1a00" data-code-line-number="7"></div> 
<div class="se-b447076e se-98ec1a00" data-code-line-number="8"></div> <div class="se-b447076e 
se-98ec1a00" data-code-line-number="9"></div> <div class="se-b447076e se-98ec1a00" data-code-line-number="10"></div> 
<div class="se-b447076e se-98ec1a00" data-code-line-number="11"></div> <div class="se-b447076e 
se-98ec1a00" data-code-line-number="12"></div> <div class="se-b447076e se-98ec1a00" data-code-line-number="13"></div> 
<div class="se-b447076e se-98ec1a00" data-code-line-number="14"></div> <div class="se-b447076e 
se-98ec1a00" data-code-line-number="15"></div> <div class="se-b447076e se-98ec1a00" data-code-line-number="16"></div> 
<div class="se-b447076e se-98ec1a00" data-code-line-number="17"></div> <div class="se-b447076e 
se-98ec1a00" data-code-line-number="18"></div> <div class="se-b447076e se-98ec1a00" data-code-line-number="19"></div> 
<div class="se-b447076e se-98ec1a00" data-code-line-number="20"></div> <div class="se-b447076e 
se-98ec1a00" data-code-line-number="21"></div> <div class="se-b447076e se-98ec1a00" data-code-line-number="22"></div> 
<div class="se-b447076e se-98ec1a00" data-code-line-number="23"></div> <div class="se-b447076e 
se-98ec1a00" data-code-line-number="24"></div> <div class="se-b447076e se-98ec1a00" data-code-line-number="25"></div> 
<div class="se-b447076e se-98ec1a00" data-code-line-number="26"></div> <div class="se-b447076e 
se-98ec1a00" data-code-line-number="27"></div> </div> <div class="se-052b75d9 ps ps--active-x"> 
<div class="se-03eefeec se-2642b266" data-slate-type="code-line" data-slate-object="block" 
data-key="3205"> <span data-slate-object="text" data-key="3206"><span data-slate-leaf="true" 
data-offset-key="3206:0" data-first-offset="true"><span class=" gkhl-comment" data-slate-object="annotation" 
data-annotation-key="gkann_0070762910" data-annotation-type="annotation"><span data-slate-string="true">// 
定义一个交换两个变量值的宏 swap</span></span></span></span> </div> <div class="se-03eefeec se-2642b266" 
data-slate-type="code-line" data-slate-object="block" data-key="3207"> <span data-slate-object="text" 
data-key="3208"><span data-slate-leaf="true" data-offset-key="3208:0" data-first-offset="true"><span 
class=" gkhl-meta" data-slate-object="annotation" data-annotation-key="gkann_1401287236" data-annotation-type="annotation"><span 
data-slate-string="true">#define swap(a, b) { \</span></span></span></span> </div> <div class="se-03eefeec 
se-2642b266" data-slate-type="code-line" data-slate-object="block" data-key="3209"> <span data-slate-object="text" 
data-key="3210"><span data-slate-leaf="true" data-offset-key="3210:0" data-first-offset="true"><span 
data-slate-string="true"> __typeof(a) _t = a; \</span></span></span> </div> <div class="se-03eefeec 
se-2642b266" data-slate-type="code-line" data-slate-object="block" data-key="3211"> <span data-slate-object="text" 
data-key="3212"><span data-slate-leaf="true" data-offset-key="3212:0" data-first-offset="true"><span 
data-slate-string="true"> a = b, b = _t; \</span></span></span> </div> <div class="se-03eefeec 
se-2642b266" data-slate-type="code-line" data-slate-object="block" data-key="3213"> <span data-slate-object="text" 
data-key="3214"><span data-slate-leaf="true" data-offset-key="3214:0" data-first-offset="true"><span 
data-slate-string="true">}</span></span></span> </div> <div class="se-03eefeec se-2642b266" 
data-slate-type="code-line" data-slate-object="block" data-key="3215"> <span data-slate-object="text" 
data-key="3216"><span data-slate-leaf="true" data-offset-key="3216:0" data-first-offset="true"><span 
class=" gkhl-comment" data-slate-object="annotation" data-annotation-key="gkann_7449484627" 
data-annotation-type="annotation"><span data-slate-string="true">// 实现大整数加法 a + b 的结果，存放在 c 
中</span></span></span></span> </div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" 
data-slate-object="block" data-key="3217"> <span data-slate-object="text" data-key="3218"><span 
data-slate-leaf="true" data-offset-key="3218:0" data-first-offset="true"><span class=" gkhl-function" 
data-slate-object="annotation" data-annotation-key="gkann_4081852048" data-annotation-type="annotation"><span 
class=" gkhl-keyword" data-slate-object="annotation" data-annotation-key="gkann_4308125560" 
data-annotation-type="annotation"><span data-slate-string="true">void</span></span></span></span><span 
data-slate-leaf="true" data-offset-key="3218:1"><span class=" gkhl-function" data-slate-object="annotation" 
data-annotation-key="gkann_4081852048" data-annotation-type="annotation"><span data-slate-string="true"> 
</span></span></span><span data-slate-leaf="true" data-offset-key="3218:2"><span class=" gkhl-function" 
data-slate-object="annotation" data-annotation-key="gkann_4081852048" data-annotation-type="annotation"><span 
class=" gkhl-title" data-slate-object="annotation" data-annotation-key="gkann_7704052654" data-annotation-type="annotation"><span 
data-slate-string="true">plus_big_integer</span></span></span></span><span data-slate-leaf="true" 
data-offset-key="3218:3"><span class=" gkhl-params" data-slate-object="annotation" data-annotation-key="gkann_1535829112" 
data-annotation-type="annotation"><span class=" gkhl-function" data-slate-object="annotation" 
data-annotation-key="gkann_4081852048" data-annotation-type="annotation"><span data-slate-string="true">(int 
*a, int *b, int *c)</span></span></span></span><span data-slate-leaf="true" data-offset-key="3218:4"><span 
class=" gkhl-function" data-slate-object="annotation" data-annotation-key="gkann_4081852048" 
data-annotation-type="annotation"><span data-slate-string="true"> </span></span></span><span 
data-slate-leaf="true" data-offset-key="3218:5"><span data-slate-string="true">{</span></span></span> 
</div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" data-slate-object="block" 
data-key="3219"> <span data-slate-object="text" data-key="3220"><span data-slate-leaf="true" 
data-offset-key="3220:0" data-first-offset="true"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="3220:1"><span class=" gkhl-comment" data-slate-object="annotation" 
data-annotation-key="gkann_1712432892" data-annotation-type="annotation"><span data-slate-string="true">// 
让 a 指向位数较长的那个数字</span></span></span></span> </div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" 
data-slate-object="block" data-key="3221"> <span data-slate-object="text" data-key="3222"><span 
data-slate-leaf="true" data-offset-key="3222:0" data-first-offset="true"><span data-slate-string="true"> 
</span></span><span data-slate-leaf="true" data-offset-key="3222:1"><span class=" gkhl-keyword" 
data-slate-object="annotation" data-annotation-key="gkann_6264556232" data-annotation-type="annotation"><span 
data-slate-string="true">if</span></span></span><span data-slate-leaf="true" data-offset-key="3222:2"><span 
data-slate-string="true"> (a[</span></span><span data-slate-leaf="true" data-offset-key="3222:3"><span 
class=" gkhl-number" data-slate-object="annotation" data-annotation-key="gkann_6576354839" 
data-annotation-type="annotation"><span data-slate-string="true">0</span></span></span><span 
data-slate-leaf="true" data-offset-key="3222:4"><span data-slate-string="true">] &lt; b[</span></span><span 
data-slate-leaf="true" data-offset-key="3222:5"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_1572556947" data-annotation-type="annotation"><span data-slate-string="true">0</span></span></span><span 
data-slate-leaf="true" data-offset-key="3222:6"><span data-slate-string="true">]) swap(a, b);</span></span></span> 
</div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" data-slate-object="block" 
data-key="3223"> <span data-slate-object="text" data-key="3224"><span data-slate-leaf="true" 
data-offset-key="3224:0" data-first-offset="true"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="3224:1"><span class=" gkhl-comment" data-slate-object="annotation" 
data-annotation-key="gkann_1730811175" data-annotation-type="annotation"><span data-slate-string="true">// 
大整数 c 的位数以 a 的位数为基准</span></span></span></span> </div> <div class="se-03eefeec se-2642b266" 
data-slate-type="code-line" data-slate-object="block" data-key="3225"> <span data-slate-object="text" 
data-key="3226"><span data-slate-leaf="true" data-offset-key="3226:0" data-first-offset="true"><span 
data-slate-string="true"> c[</span></span><span data-slate-leaf="true" data-offset-key="3226:1"><span 
class=" gkhl-number" data-slate-object="annotation" data-annotation-key="gkann_0749622356" 
data-annotation-type="annotation"><span data-slate-string="true">0</span></span></span><span 
data-slate-leaf="true" data-offset-key="3226:2"><span data-slate-string="true">] = a[</span></span><span 
data-slate-leaf="true" data-offset-key="3226:3"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_0568502799" data-annotation-type="annotation"><span data-slate-string="true">0</span></span></span><span 
data-slate-leaf="true" data-offset-key="3226:4"><span data-slate-string="true">];</span></span></span> 
</div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" data-slate-object="block" 
data-key="3227"> <span data-slate-object="text" data-key="3228"><span data-slate-leaf="true" 
data-offset-key="3228:0" data-first-offset="true"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="3228:1"><span class=" gkhl-comment" data-slate-object="annotation" 
data-annotation-key="gkann_9295658980" data-annotation-type="annotation"><span data-slate-string="true">// 
循环模拟按位做加法</span></span></span></span> </div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" 
data-slate-object="block" data-key="3229"> <span data-slate-object="text" data-key="3230"><span 
data-slate-leaf="true" data-offset-key="3230:0" data-first-offset="true"><span data-slate-string="true"> 
</span></span><span data-slate-leaf="true" data-offset-key="3230:1"><span class=" gkhl-keyword" 
data-slate-object="annotation" data-annotation-key="gkann_2682852281" data-annotation-type="annotation"><span 
data-slate-string="true">for</span></span></span><span data-slate-leaf="true" data-offset-key="3230:2"><span 
data-slate-string="true"> (</span></span><span data-slate-leaf="true" data-offset-key="3230:3"><span 
class=" gkhl-keyword" data-slate-object="annotation" data-annotation-key="gkann_9724445135" 
data-annotation-type="annotation"><span data-slate-string="true">int</span></span></span><span 
data-slate-leaf="true" data-offset-key="3230:4"><span data-slate-string="true"> i = </span></span><span 
data-slate-leaf="true" data-offset-key="3230:5"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_3863959667" data-annotation-type="annotation"><span data-slate-string="true">1</span></span></span><span 
data-slate-leaf="true" data-offset-key="3230:6"><span data-slate-string="true">; i &lt;= a[</span></span><span 
data-slate-leaf="true" data-offset-key="3230:7"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_4514410538" data-annotation-type="annotation"><span data-slate-string="true">0</span></span></span><span 
data-slate-leaf="true" data-offset-key="3230:8"><span data-slate-string="true">]; i++) {</span></span></span> 
</div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" data-slate-object="block" 
data-key="3231"> <span data-slate-object="text" data-key="3232"><span data-slate-leaf="true" 
data-offset-key="3232:0" data-first-offset="true"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="3232:1"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_1837243913" data-annotation-type="annotation"><span data-slate-string="true">if</span></span></span><span 
data-slate-leaf="true" data-offset-key="3232:2"><span data-slate-string="true"> (i &lt;= b[</span></span><span 
data-slate-leaf="true" data-offset-key="3232:3"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_3203770727" data-annotation-type="annotation"><span data-slate-string="true">0</span></span></span><span 
data-slate-leaf="true" data-offset-key="3232:4"><span data-slate-string="true">]) c[i] = a[i] 
+ b[i]; </span></span></span> </div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" 
data-slate-object="block" data-key="3233"> <span data-slate-object="text" data-key="3234"><span 
data-slate-leaf="true" data-offset-key="3234:0" data-first-offset="true"><span data-slate-string="true"> 
</span></span><span data-slate-leaf="true" data-offset-key="3234:1"><span class=" gkhl-keyword" 
data-slate-object="annotation" data-annotation-key="gkann_4838498427" data-annotation-type="annotation"><span 
data-slate-string="true">else</span></span></span><span data-slate-leaf="true" data-offset-key="3234:2"><span 
data-slate-string="true"> c[i] = a[i];</span></span></span> </div> <div class="se-03eefeec 
se-2642b266" data-slate-type="code-line" data-slate-object="block" data-key="3235"> <span data-slate-object="text" 
data-key="3236"><span data-slate-leaf="true" data-offset-key="3236:0" data-first-offset="true"><span 
data-slate-string="true"> }</span></span></span> </div> <div class="se-03eefeec se-2642b266" 
data-slate-type="code-line" data-slate-object="block" data-key="3237"> <span data-slate-object="text" 
data-key="3238"><span data-slate-leaf="true" data-offset-key="3238:0" data-first-offset="true"><span 
data-slate-string="true"> </span></span><span data-slate-leaf="true" data-offset-key="3238:1"><span 
class=" gkhl-comment" data-slate-object="annotation" data-annotation-key="gkann_4649544584" 
data-annotation-type="annotation"><span data-slate-string="true">// 处理每一位的进位过程</span></span></span></span> 
</div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" data-slate-object="block" 
data-key="3239"> <span data-slate-object="text" data-key="3240"><span data-slate-leaf="true" 
data-offset-key="3240:0" data-first-offset="true"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="3240:1"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_5687431497" data-annotation-type="annotation"><span data-slate-string="true">for</span></span></span><span 
data-slate-leaf="true" data-offset-key="3240:2"><span data-slate-string="true"> (</span></span><span 
data-slate-leaf="true" data-offset-key="3240:3"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_2504053860" data-annotation-type="annotation"><span data-slate-string="true">int</span></span></span><span 
data-slate-leaf="true" data-offset-key="3240:4"><span data-slate-string="true"> i = </span></span><span 
data-slate-leaf="true" data-offset-key="3240:5"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_8162714055" data-annotation-type="annotation"><span data-slate-string="true">1</span></span></span><span 
data-slate-leaf="true" data-offset-key="3240:6"><span data-slate-string="true">; i &lt;= c[</span></span><span 
data-slate-leaf="true" data-offset-key="3240:7"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_0532836292" data-annotation-type="annotation"><span data-slate-string="true">0</span></span></span><span 
data-slate-leaf="true" data-offset-key="3240:8"><span data-slate-string="true">]; i++) {</span></span></span> 
</div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" data-slate-object="block" 
data-key="3241"> <span data-slate-object="text" data-key="3242"><span data-slate-leaf="true" 
data-offset-key="3242:0" data-first-offset="true"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="3242:1"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_1709618654" data-annotation-type="annotation"><span data-slate-string="true">if</span></span></span><span 
data-slate-leaf="true" data-offset-key="3242:2"><span data-slate-string="true"> (c[i] &lt; 
</span></span><span data-slate-leaf="true" data-offset-key="3242:3"><span class=" gkhl-number" 
data-slate-object="annotation" data-annotation-key="gkann_5307090628" data-annotation-type="annotation"><span 
data-slate-string="true">10</span></span></span><span data-slate-leaf="true" data-offset-key="3242:4"><span 
data-slate-string="true">) </span></span><span data-slate-leaf="true" data-offset-key="3242:5"><span 
class=" gkhl-keyword" data-slate-object="annotation" data-annotation-key="gkann_7083559901" 
data-annotation-type="annotation"><span data-slate-string="true">continue</span></span></span><span 
data-slate-leaf="true" data-offset-key="3242:6"><span data-slate-string="true">;</span></span></span> 
</div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" data-slate-object="block" 
data-key="3243"> <span data-slate-object="text" data-key="3244"><span data-slate-leaf="true" 
data-offset-key="3244:0" data-first-offset="true"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="3244:1"><span class=" gkhl-comment" data-slate-object="annotation" 
data-annotation-key="gkann_9478454919" data-annotation-type="annotation"><span data-slate-string="true">// 
判断是不是最高位产生了进位</span></span></span></span> </div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" 
data-slate-object="block" data-key="3245"> <span data-slate-object="text" data-key="3246"><span 
data-slate-leaf="true" data-offset-key="3246:0" data-first-offset="true"><span data-slate-string="true"> 
</span></span><span data-slate-leaf="true" data-offset-key="3246:1"><span class=" gkhl-comment" 
data-slate-object="annotation" data-annotation-key="gkann_0459440739" data-annotation-type="annotation"><span 
data-slate-string="true">// 如果是最高位产生进位，就进行初始化</span></span></span></span> </div> <div class="se-03eefeec 
se-2642b266" data-slate-type="code-line" data-slate-object="block" data-key="3247"> <span data-slate-object="text" 
data-key="3248"><span data-slate-leaf="true" data-offset-key="3248:0" data-first-offset="true"><span 
data-slate-string="true"> </span></span><span data-slate-leaf="true" data-offset-key="3248:1"><span 
class=" gkhl-keyword" data-slate-object="annotation" data-annotation-key="gkann_6024653321" 
data-annotation-type="annotation"><span data-slate-string="true">if</span></span></span><span 
data-slate-leaf="true" data-offset-key="3248:2"><span data-slate-string="true"> (i == c[</span></span><span 
data-slate-leaf="true" data-offset-key="3248:3"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_2947009468" data-annotation-type="annotation"><span data-slate-string="true">0</span></span></span><span 
data-slate-leaf="true" data-offset-key="3248:4"><span data-slate-string="true">]) c[++c[</span></span><span 
data-slate-leaf="true" data-offset-key="3248:5"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_1615511725" data-annotation-type="annotation"><span data-slate-string="true">0</span></span></span><span 
data-slate-leaf="true" data-offset-key="3248:6"><span data-slate-string="true">]] = </span></span><span 
data-slate-leaf="true" data-offset-key="3248:7"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_3633509284" data-annotation-type="annotation"><span data-slate-string="true">0</span></span></span><span 
data-slate-leaf="true" data-offset-key="3248:8"><span data-slate-string="true">;</span></span></span> 
</div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" data-slate-object="block" 
data-key="3249"> <span data-slate-object="text" data-key="3250"><span data-slate-leaf="true" 
data-offset-key="3250:0" data-first-offset="true"><span data-slate-string="true"> c[i + </span></span><span 
data-slate-leaf="true" data-offset-key="3250:1"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_0786473604" data-annotation-type="annotation"><span data-slate-string="true">1</span></span></span><span 
data-slate-leaf="true" data-offset-key="3250:2"><span data-slate-string="true">] += c[i] / 
</span></span><span data-slate-leaf="true" data-offset-key="3250:3"><span class=" gkhl-number" 
data-slate-object="annotation" data-annotation-key="gkann_5488785616" data-annotation-type="annotation"><span 
data-slate-string="true">10</span></span></span><span data-slate-leaf="true" data-offset-key="3250:4"><span 
data-slate-string="true">;</span></span></span> </div> <div class="se-03eefeec se-2642b266" 
data-slate-type="code-line" data-slate-object="block" data-key="3251"> <span data-slate-object="text" 
data-key="3252"><span data-slate-leaf="true" data-offset-key="3252:0" data-first-offset="true"><span 
data-slate-string="true"> c[i] %= </span></span><span data-slate-leaf="true" data-offset-key="3252:1"><span 
class=" gkhl-number" data-slate-object="annotation" data-annotation-key="gkann_3613960876" 
data-annotation-type="annotation"><span data-slate-string="true">10</span></span></span><span 
data-slate-leaf="true" data-offset-key="3252:2"><span data-slate-string="true">;</span></span></span> 
</div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" data-slate-object="block" 
data-key="3253"> <span data-slate-object="text" data-key="3254"><span data-slate-leaf="true" 
data-offset-key="3254:0" data-first-offset="true"><span data-slate-string="true"> }</span></span></span> 
</div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" data-slate-object="block" 
data-key="3255"> <span data-slate-object="text" data-key="3256"><span data-slate-leaf="true" 
data-offset-key="3256:0" data-first-offset="true"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="3256:1"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_9655268324" data-annotation-type="annotation"><span data-slate-string="true">return</span></span></span><span 
data-slate-leaf="true" data-offset-key="3256:2"><span data-slate-string="true"> ;</span></span></span> 
</div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" data-slate-object="block" 
data-key="3257"> <span data-slate-object="text" data-key="3258"><span data-slate-leaf="true" 
data-offset-key="3258:0" data-first-offset="true"><span data-slate-string="true">}</span></span></span> 
</div> <div class="ps__rail-x" style="width: 365px; left: 0px; bottom: 0px;"> <div class="ps__thumb-x" 
tabindex="0" style="left: 0px; width: 356px;"></div> </div> <div class="ps__rail-y" style="top: 
0px; right: 0px;"> <div class="ps__thumb-y" tabindex="0" style="top: 0px; height: 0px;"></div> 
</div> </div> </div> <h2 class="se-b2df0ee0" data-slate-type="heading" data-slate-object="block" 
data-key="3259"><span data-slate-object="text" data-key="3260"><span data-slate-leaf="true" 
data-offset-key="3260:0" data-first-offset="true"><span data-slate-string="true">一起动手，搞事情</span></span></span></h2> 
<div class="se-38647a2a " data-slate-type="paragraph" data-slate-object="block" data-key="3261"> 
<span data-slate-object="text" data-key="3262"><span data-slate-leaf="true" data-offset-key="3262:0" 
data-first-offset="true"><span data-slate-string="true">今天给你留的作业题，和我给你准备的那个大整数加法的代码有关。就是请你完成一个，能够实现读入两个大整数，并且输出两个大整数相加之和的程序。关于这个程序作业，你不需要考虑负数的情况，我们假设所有数字均是正整数。</span></span></span> 
</div> <div class="se-5bab83ba " data-slate-type="paragraph" data-slate-object="block" data-key="3263"> 
<span data-slate-object="text" data-key="3264"><span data-slate-leaf="true" data-offset-key="3264:0" 
data-first-offset="true"><span data-slate-string="true">这里给你个提示：在读入两个大整数的时候，你可以按照两个字符串数据进行读入，然后再把字符串数据，转换成我们上面所说的大整数表示法，最后调用上面那个大整数加法的过程。程序的关键提示已经告诉你了，剩下的部分，试试自己完成吧，加油！</span></span></span> 
</div> <h2 class="se-cc1f4a69" data-slate-type="heading" data-slate-object="block" data-key="3265"><span 
data-slate-object="text" data-key="3266"><span data-slate-leaf="true" data-offset-key="3266:0" 
data-first-offset="true"><span data-slate-string="true">突破类型，求解 </span></span></span><span 
class="se-4dbc7a92 se-2b50b467" data-slate-type="inline-katex" data-slate-object="inline" data-key="3267"><span 
data-slate-leaf="true"><span data-slate-string="true" class="katex"><span class="katex-html" 
aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span 
class="mord"><span class="mord"><span class="mord">2</span></span><span class="msupsub"><span 
class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span 
style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span 
class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span 
class="mord mtight">0</span><span class="mord mtight">0</span><span class="mord mtight">0</span></span></span></span></span></span></span></span></span></span></span></span></span></span><span 
data-slate-object="text" data-key="3269"><span data-slate-leaf="true" data-offset-key="3269:0" 
data-first-offset="true"><span data-slate-string="true"> 的值</span></span></span></h2> <div 
class="se-245b18c3 " data-slate-type="paragraph" data-slate-object="block" data-key="3270"> 
<span data-slate-object="text" data-key="3271"><span data-slate-leaf="true" data-offset-key="3271:0" 
data-first-offset="true"><span data-slate-string="true">最后，我们回到今天的任务。</span></span></span> 
</div> <div class="se-9b83d5f2 " data-slate-type="paragraph" data-slate-object="block" data-key="3272"> 
<span data-slate-object="text" data-key="3273"><span data-slate-leaf="true" data-offset-key="3273:0" 
data-first-offset="true"><span data-slate-string="true">要计算 2 的 1000 次方的结果，就是要计算 1000 次乘法，最终的结果由于数值太大，我们肯定要使用大整数表示法了。也就是说，我们要在大整数表示法的基础上，操作 
1000 次乘法，每次都是乘以 2，那么怎么做大整数乘法呢？</span></span></span> </div> <div class="se-73aa6764 " data-slate-type="paragraph" 
data-slate-object="block" data-key="3274"> <span data-slate-object="text" data-key="3275"><span 
data-slate-leaf="true" data-offset-key="3275:0" data-first-offset="true"><span data-slate-string="true">要想理解这个计算过程，我们还是得回到大整数表示法本身，所对应的数学模型理解上，具体请看下图：</span></span></span> 
</div> <div class="se-eab5b795" data-slate-type="image" data-slate-object="block" data-key="3276"> 
<img class="se-cbc57bdf" src="https://static001.geekbang.org/resource/image/34/f4/34f31f36797356b51ce1205c4e45fef4.jpg"> 
<div class="se-af578f37"> 图3：大整数表示法的数学理解 </div> </div> <div class="se-90abb084 " data-slate-type="paragraph" 
data-slate-object="block" data-key="3277"> <span data-slate-object="text" data-key="3278"><span 
data-slate-leaf="true" data-offset-key="3278:0" data-first-offset="true"><span data-slate-string="true">如图所示，我们把大整数表示法中，每一个数字所对应的位权写出来，那么数组中所存储 
3、5、2、6 的大整数信息，其实等价于下面的那一行数学公式，即 $3</span></span></span><span data-slate-object="text" data-key="3279"><span 
data-slate-leaf="true" data-offset-key="3279:0" data-first-offset="true"><span class="se-cb7c857f" 
data-slate-type="italic" data-slate-object="mark"><span data-slate-string="true">10^{3}+5</span></span></span></span><span 
data-slate-object="text" data-key="3280"><span data-slate-leaf="true" data-offset-key="3280:0" 
data-first-offset="true"><span data-slate-string="true">10^{2}+2</span></span></span><span 
data-slate-object="text" data-key="3281"><span data-slate-leaf="true" data-offset-key="3281:0" 
data-first-offset="true"><span class="se-cb7c857f" data-slate-type="italic" data-slate-object="mark"><span 
data-slate-string="true">10^{1}+6</span></span></span></span><span data-slate-object="text" 
data-key="3282"><span data-slate-leaf="true" data-offset-key="3282:0" data-first-offset="true"><span 
data-slate-string="true">10^{0}$</span></span></span> </div> <div class="se-032fe4ac " data-slate-type="paragraph" 
data-slate-object="block" data-key="3283"> <span data-slate-object="text" data-key="3284"><span 
data-slate-leaf="true" data-offset-key="3284:0" data-first-offset="true"><span data-slate-string="true">我们对（3526 
这个）上面的大整数乘以 2，其实等价于对下面那个数学式子乘以 2，就可以得到如下结果：</span></span></span> </div> <div class="se-48c29278" 
data-slate-type="image" data-slate-object="block" data-key="3285"> <img class="se-f9c745a1" 
src="https://static001.geekbang.org/resource/image/1e/df/1eea8ccb5a20819051d9b71e415ed7df.jpg"> 
<div class="se-9cea978f"> 图4：大整数乘法的理解 </div> </div> <div class="se-900f113e " data-slate-type="paragraph" 
data-slate-object="block" data-key="3286"> <span data-slate-object="text" data-key="3287"><span 
data-slate-leaf="true" data-offset-key="3287:0" data-first-offset="true"><span data-slate-string="true">你会看到，对某个大整数乘 
2 的操作，其实，可以看成是对这个大整数的每一位分别乘以 2 的操作，然后再仿照大整数加法的过程，依次处理进位即可。</span></span></span> </div> <div 
class="se-0e71e0c5 " data-slate-type="paragraph" data-slate-object="block" data-key="3288"> 
<span data-slate-object="text" data-key="3289"><span data-slate-leaf="true" data-offset-key="3289:0" 
data-first-offset="true"><span data-slate-string="true">最后，关于如何完成今天的任务，我给你一个参考程序。当然你也可以选择不看参考程序，自己实现这个过程。</span></span></span> 
</div> <div class="se-3a85b4b0 se-183e2253" data-slate-type="pre" data-slate-object="block" 
data-key="3290" data-code-language="cpp"> <div class="se-8ff5a63f se-dd62ffcb"> <span></span> 
</div> <div class="se-f36aa91e"> <div class="se-efd9692e se-867e01cf" data-code-line-number="1"></div> 
<div class="se-efd9692e se-867e01cf" data-code-line-number="2"></div> <div class="se-efd9692e 
se-867e01cf" data-code-line-number="3"></div> <div class="se-efd9692e se-867e01cf" data-code-line-number="4"></div> 
<div class="se-efd9692e se-867e01cf" data-code-line-number="5"></div> <div class="se-efd9692e 
se-867e01cf" data-code-line-number="6"></div> <div class="se-efd9692e se-867e01cf" data-code-line-number="7"></div> 
<div class="se-efd9692e se-867e01cf" data-code-line-number="8"></div> <div class="se-efd9692e 
se-867e01cf" data-code-line-number="9"></div> <div class="se-efd9692e se-867e01cf" data-code-line-number="10"></div> 
<div class="se-efd9692e se-867e01cf" data-code-line-number="11"></div> <div class="se-efd9692e 
se-867e01cf" data-code-line-number="12"></div> <div class="se-efd9692e se-867e01cf" data-code-line-number="13"></div> 
<div class="se-efd9692e se-867e01cf" data-code-line-number="14"></div> <div class="se-efd9692e 
se-867e01cf" data-code-line-number="15"></div> <div class="se-efd9692e se-867e01cf" data-code-line-number="16"></div> 
<div class="se-efd9692e se-867e01cf" data-code-line-number="17"></div> <div class="se-efd9692e 
se-867e01cf" data-code-line-number="18"></div> <div class="se-efd9692e se-867e01cf" data-code-line-number="19"></div> 
<div class="se-efd9692e se-867e01cf" data-code-line-number="20"></div> <div class="se-efd9692e 
se-867e01cf" data-code-line-number="21"></div> <div class="se-efd9692e se-867e01cf" data-code-line-number="22"></div> 
<div class="se-efd9692e se-867e01cf" data-code-line-number="23"></div> <div class="se-efd9692e 
se-867e01cf" data-code-line-number="24"></div> </div> <div class="se-7be6ac38 ps ps--active-x"> 
<div class="se-03eefeec se-2642b266" data-slate-type="code-line" data-slate-object="block" 
data-key="3291"> <span data-slate-object="text" data-key="3292"><span data-slate-leaf="true" 
data-offset-key="3292:0" data-first-offset="true"><span class=" gkhl-meta" data-slate-object="annotation" 
data-annotation-key="gkann_0047372163" data-annotation-type="annotation"><span data-slate-string="true">#include 
&lt;stdio.h&gt;</span></span></span></span> </div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" 
data-slate-object="block" data-key="3293"> <span data-slate-object="text" data-key="3294"></span> 
</div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" data-slate-object="block" 
data-key="3295"> <span data-slate-object="text" data-key="3296"><span data-slate-leaf="true" 
data-offset-key="3296:0" data-first-offset="true"><span class=" gkhl-comment" data-slate-object="annotation" 
data-annotation-key="gkann_3261611063" data-annotation-type="annotation"><span data-slate-string="true">// 
将 num 数组初始化成大整数表示的 1</span></span></span></span> </div> <div class="se-03eefeec se-2642b266" 
data-slate-type="code-line" data-slate-object="block" data-key="3297"> <span data-slate-object="text" 
data-key="3298"><span data-slate-leaf="true" data-offset-key="3298:0" data-first-offset="true"><span 
class=" gkhl-comment" data-slate-object="annotation" data-annotation-key="gkann_5517920656" 
data-annotation-type="annotation"><span data-slate-string="true">// 作用就是做累乘变量</span></span></span></span> 
</div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" data-slate-object="block" 
data-key="3299"> <span data-slate-object="text" data-key="3300"><span data-slate-leaf="true" 
data-offset-key="3300:0" data-first-offset="true"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_5921628349" data-annotation-type="annotation"><span data-slate-string="true">int</span></span></span><span 
data-slate-leaf="true" data-offset-key="3300:1"><span data-slate-string="true"> num[</span></span><span 
data-slate-leaf="true" data-offset-key="3300:2"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_8537343273" data-annotation-type="annotation"><span data-slate-string="true">400</span></span></span><span 
data-slate-leaf="true" data-offset-key="3300:3"><span data-slate-string="true">] = {</span></span><span 
data-slate-leaf="true" data-offset-key="3300:4"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_6560110294" data-annotation-type="annotation"><span data-slate-string="true">1</span></span></span><span 
data-slate-leaf="true" data-offset-key="3300:5"><span data-slate-string="true">, </span></span><span 
data-slate-leaf="true" data-offset-key="3300:6"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_0873141064" data-annotation-type="annotation"><span data-slate-string="true">1</span></span></span><span 
data-slate-leaf="true" data-offset-key="3300:7"><span data-slate-string="true">}; </span></span></span> 
</div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" data-slate-object="block" 
data-key="3301"> <span data-slate-object="text" data-key="3302"></span> </div> <div class="se-03eefeec 
se-2642b266" data-slate-type="code-line" data-slate-object="block" data-key="3303"> <span data-slate-object="text" 
data-key="3304"><span data-slate-leaf="true" data-offset-key="3304:0" data-first-offset="true"><span 
class=" gkhl-keyword" data-slate-object="annotation" data-annotation-key="gkann_0749601661" 
data-annotation-type="annotation"><span class=" gkhl-function" data-slate-object="annotation" 
data-annotation-key="gkann_5936404494" data-annotation-type="annotation"><span data-slate-string="true">int</span></span></span></span><span 
data-slate-leaf="true" data-offset-key="3304:1"><span class=" gkhl-function" data-slate-object="annotation" 
data-annotation-key="gkann_5936404494" data-annotation-type="annotation"><span data-slate-string="true"> 
</span></span></span><span data-slate-leaf="true" data-offset-key="3304:2"><span class=" gkhl-title" 
data-slate-object="annotation" data-annotation-key="gkann_7263034307" data-annotation-type="annotation"><span 
class=" gkhl-function" data-slate-object="annotation" data-annotation-key="gkann_5936404494" 
data-annotation-type="annotation"><span data-slate-string="true">main</span></span></span></span><span 
data-slate-leaf="true" data-offset-key="3304:3"><span class=" gkhl-params" data-slate-object="annotation" 
data-annotation-key="gkann_8796870973" data-annotation-type="annotation"><span class=" gkhl-function" 
data-slate-object="annotation" data-annotation-key="gkann_5936404494" data-annotation-type="annotation"><span 
data-slate-string="true">()</span></span></span></span><span data-slate-leaf="true" data-offset-key="3304:4"><span 
class=" gkhl-function" data-slate-object="annotation" data-annotation-key="gkann_5936404494" 
data-annotation-type="annotation"><span data-slate-string="true"> </span></span></span><span 
data-slate-leaf="true" data-offset-key="3304:5"><span data-slate-string="true">{</span></span></span> 
</div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" data-slate-object="block" 
data-key="3305"> <span data-slate-object="text" data-key="3306"><span data-slate-leaf="true" 
data-offset-key="3306:0" data-first-offset="true"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="3306:1"><span class=" gkhl-comment" data-slate-object="annotation" 
data-annotation-key="gkann_0393141347" data-annotation-type="annotation"><span data-slate-string="true">// 
计算 100 次 2 的 10 次方相乘的结果</span></span></span></span> </div> <div class="se-03eefeec se-2642b266" 
data-slate-type="code-line" data-slate-object="block" data-key="3307"> <span data-slate-object="text" 
data-key="3308"><span data-slate-leaf="true" data-offset-key="3308:0" data-first-offset="true"><span 
data-slate-string="true"> </span></span><span data-slate-leaf="true" data-offset-key="3308:1"><span 
class=" gkhl-keyword" data-slate-object="annotation" data-annotation-key="gkann_1466927487" 
data-annotation-type="annotation"><span data-slate-string="true">for</span></span></span><span 
data-slate-leaf="true" data-offset-key="3308:2"><span data-slate-string="true"> (</span></span><span 
data-slate-leaf="true" data-offset-key="3308:3"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_2480140150" data-annotation-type="annotation"><span data-slate-string="true">int</span></span></span><span 
data-slate-leaf="true" data-offset-key="3308:4"><span data-slate-string="true"> i = </span></span><span 
data-slate-leaf="true" data-offset-key="3308:5"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_8566658205" data-annotation-type="annotation"><span data-slate-string="true">0</span></span></span><span 
data-slate-leaf="true" data-offset-key="3308:6"><span data-slate-string="true">; i &lt; </span></span><span 
data-slate-leaf="true" data-offset-key="3308:7"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_4882495239" data-annotation-type="annotation"><span data-slate-string="true">100</span></span></span><span 
data-slate-leaf="true" data-offset-key="3308:8"><span data-slate-string="true">; i++) {</span></span></span> 
</div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" data-slate-object="block" 
data-key="3309"> <span data-slate-object="text" data-key="3310"><span data-slate-leaf="true" 
data-offset-key="3310:0" data-first-offset="true"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="3310:1"><span class=" gkhl-comment" data-slate-object="annotation" 
data-annotation-key="gkann_8452775215" data-annotation-type="annotation"><span data-slate-string="true">// 
对大整数的每一位乘以 2 的 10 次方</span></span></span></span> </div> <div class="se-03eefeec se-2642b266" 
data-slate-type="code-line" data-slate-object="block" data-key="3311"> <span data-slate-object="text" 
data-key="3312"><span data-slate-leaf="true" data-offset-key="3312:0" data-first-offset="true"><span 
data-slate-string="true"> </span></span><span data-slate-leaf="true" data-offset-key="3312:1"><span 
class=" gkhl-keyword" data-slate-object="annotation" data-annotation-key="gkann_0686442391" 
data-annotation-type="annotation"><span data-slate-string="true">for</span></span></span><span 
data-slate-leaf="true" data-offset-key="3312:2"><span data-slate-string="true"> (</span></span><span 
data-slate-leaf="true" data-offset-key="3312:3"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_2066823270" data-annotation-type="annotation"><span data-slate-string="true">int</span></span></span><span 
data-slate-leaf="true" data-offset-key="3312:4"><span data-slate-string="true"> j = </span></span><span 
data-slate-leaf="true" data-offset-key="3312:5"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_9488065635" data-annotation-type="annotation"><span data-slate-string="true">1</span></span></span><span 
data-slate-leaf="true" data-offset-key="3312:6"><span data-slate-string="true">; j &lt;= num[</span></span><span 
data-slate-leaf="true" data-offset-key="3312:7"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_5726460025" data-annotation-type="annotation"><span data-slate-string="true">0</span></span></span><span 
data-slate-leaf="true" data-offset-key="3312:8"><span data-slate-string="true">]; j++) num[j] 
*= </span></span><span data-slate-leaf="true" data-offset-key="3312:9"><span class=" gkhl-number" 
data-slate-object="annotation" data-annotation-key="gkann_9612457562" data-annotation-type="annotation"><span 
data-slate-string="true">1024</span></span></span><span data-slate-leaf="true" data-offset-key="3312:10"><span 
data-slate-string="true">; </span></span></span> </div> <div class="se-03eefeec se-2642b266" 
data-slate-type="code-line" data-slate-object="block" data-key="3313"> <span data-slate-object="text" 
data-key="3314"><span data-slate-leaf="true" data-offset-key="3314:0" data-first-offset="true"><span 
data-slate-string="true"> </span></span><span data-slate-leaf="true" data-offset-key="3314:1"><span 
class=" gkhl-comment" data-slate-object="annotation" data-annotation-key="gkann_8896182182" 
data-annotation-type="annotation"><span data-slate-string="true">// 处理进位</span></span></span></span> 
</div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" data-slate-object="block" 
data-key="3315"> <span data-slate-object="text" data-key="3316"><span data-slate-leaf="true" 
data-offset-key="3316:0" data-first-offset="true"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="3316:1"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_8929885357" data-annotation-type="annotation"><span data-slate-string="true">for</span></span></span><span 
data-slate-leaf="true" data-offset-key="3316:2"><span data-slate-string="true"> (</span></span><span 
data-slate-leaf="true" data-offset-key="3316:3"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_8697680074" data-annotation-type="annotation"><span data-slate-string="true">int</span></span></span><span 
data-slate-leaf="true" data-offset-key="3316:4"><span data-slate-string="true"> j = </span></span><span 
data-slate-leaf="true" data-offset-key="3316:5"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_5988541969" data-annotation-type="annotation"><span data-slate-string="true">1</span></span></span><span 
data-slate-leaf="true" data-offset-key="3316:6"><span data-slate-string="true">; j &lt;= num[</span></span><span 
data-slate-leaf="true" data-offset-key="3316:7"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_5946340122" data-annotation-type="annotation"><span data-slate-string="true">0</span></span></span><span 
data-slate-leaf="true" data-offset-key="3316:8"><span data-slate-string="true">]; j++) {</span></span></span> 
</div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" data-slate-object="block" 
data-key="3317"> <span data-slate-object="text" data-key="3318"><span data-slate-leaf="true" 
data-offset-key="3318:0" data-first-offset="true"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="3318:1"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_1071491069" data-annotation-type="annotation"><span data-slate-string="true">if</span></span></span><span 
data-slate-leaf="true" data-offset-key="3318:2"><span data-slate-string="true"> (num[j] &lt; 
</span></span><span data-slate-leaf="true" data-offset-key="3318:3"><span class=" gkhl-number" 
data-slate-object="annotation" data-annotation-key="gkann_0184025214" data-annotation-type="annotation"><span 
data-slate-string="true">10</span></span></span><span data-slate-leaf="true" data-offset-key="3318:4"><span 
data-slate-string="true">) </span></span><span data-slate-leaf="true" data-offset-key="3318:5"><span 
class=" gkhl-keyword" data-slate-object="annotation" data-annotation-key="gkann_8283865664" 
data-annotation-type="annotation"><span data-slate-string="true">continue</span></span></span><span 
data-slate-leaf="true" data-offset-key="3318:6"><span data-slate-string="true">; </span></span></span> 
</div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" data-slate-object="block" 
data-key="3319"> <span data-slate-object="text" data-key="3320"><span data-slate-leaf="true" 
data-offset-key="3320:0" data-first-offset="true"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="3320:1"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_2366934364" data-annotation-type="annotation"><span data-slate-string="true">if</span></span></span><span 
data-slate-leaf="true" data-offset-key="3320:2"><span data-slate-string="true"> (j == num[</span></span><span 
data-slate-leaf="true" data-offset-key="3320:3"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_8757333198" data-annotation-type="annotation"><span data-slate-string="true">0</span></span></span><span 
data-slate-leaf="true" data-offset-key="3320:4"><span data-slate-string="true">]) num[++num[</span></span><span 
data-slate-leaf="true" data-offset-key="3320:5"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_7329206628" data-annotation-type="annotation"><span data-slate-string="true">0</span></span></span><span 
data-slate-leaf="true" data-offset-key="3320:6"><span data-slate-string="true">]] = </span></span><span 
data-slate-leaf="true" data-offset-key="3320:7"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_4568278607" data-annotation-type="annotation"><span data-slate-string="true">0</span></span></span><span 
data-slate-leaf="true" data-offset-key="3320:8"><span data-slate-string="true">;</span></span></span> 
</div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" data-slate-object="block" 
data-key="3321"> <span data-slate-object="text" data-key="3322"><span data-slate-leaf="true" 
data-offset-key="3322:0" data-first-offset="true"><span data-slate-string="true"> num[j + </span></span><span 
data-slate-leaf="true" data-offset-key="3322:1"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_9238688564" data-annotation-type="annotation"><span data-slate-string="true">1</span></span></span><span 
data-slate-leaf="true" data-offset-key="3322:2"><span data-slate-string="true">] += num[i] 
/ </span></span><span data-slate-leaf="true" data-offset-key="3322:3"><span class=" gkhl-number" 
data-slate-object="annotation" data-annotation-key="gkann_2425341886" data-annotation-type="annotation"><span 
data-slate-string="true">10</span></span></span><span data-slate-leaf="true" data-offset-key="3322:4"><span 
data-slate-string="true">;</span></span></span> </div> <div class="se-03eefeec se-2642b266" 
data-slate-type="code-line" data-slate-object="block" data-key="3323"> <span data-slate-object="text" 
data-key="3324"><span data-slate-leaf="true" data-offset-key="3324:0" data-first-offset="true"><span 
data-slate-string="true"> num[j] %= </span></span><span data-slate-leaf="true" data-offset-key="3324:1"><span 
class=" gkhl-number" data-slate-object="annotation" data-annotation-key="gkann_7468144373" 
data-annotation-type="annotation"><span data-slate-string="true">10</span></span></span><span 
data-slate-leaf="true" data-offset-key="3324:2"><span data-slate-string="true">;</span></span></span> 
</div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" data-slate-object="block" 
data-key="3325"> <span data-slate-object="text" data-key="3326"><span data-slate-leaf="true" 
data-offset-key="3326:0" data-first-offset="true"><span data-slate-string="true"> }</span></span></span> 
</div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" data-slate-object="block" 
data-key="3327"> <span data-slate-object="text" data-key="3328"><span data-slate-leaf="true" 
data-offset-key="3328:0" data-first-offset="true"><span data-slate-string="true"> }</span></span></span> 
</div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" data-slate-object="block" 
data-key="3329"> <span data-slate-object="text" data-key="3330"><span data-slate-leaf="true" 
data-offset-key="3330:0" data-first-offset="true"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="3330:1"><span class=" gkhl-comment" data-slate-object="annotation" 
data-annotation-key="gkann_0198131166" data-annotation-type="annotation"><span data-slate-string="true">// 
输出大整数</span></span></span></span> </div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" 
data-slate-object="block" data-key="3331"> <span data-slate-object="text" data-key="3332"><span 
data-slate-leaf="true" data-offset-key="3332:0" data-first-offset="true"><span data-slate-string="true"> 
</span></span><span data-slate-leaf="true" data-offset-key="3332:1"><span class=" gkhl-comment" 
data-slate-object="annotation" data-annotation-key="gkann_8090247561" data-annotation-type="annotation"><span 
data-slate-string="true">// 由于大整数是倒着存的，所以输出的时候倒着遍历</span></span></span></span> </div> <div 
class="se-03eefeec se-2642b266" data-slate-type="code-line" data-slate-object="block" data-key="3333"> 
<span data-slate-object="text" data-key="3334"><span data-slate-leaf="true" data-offset-key="3334:0" 
data-first-offset="true"><span data-slate-string="true"> </span></span><span data-slate-leaf="true" 
data-offset-key="3334:1"><span class=" gkhl-keyword" data-slate-object="annotation" data-annotation-key="gkann_3521575403" 
data-annotation-type="annotation"><span data-slate-string="true">for</span></span></span><span 
data-slate-leaf="true" data-offset-key="3334:2"><span data-slate-string="true"> (</span></span><span 
data-slate-leaf="true" data-offset-key="3334:3"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_4109480233" data-annotation-type="annotation"><span data-slate-string="true">int</span></span></span><span 
data-slate-leaf="true" data-offset-key="3334:4"><span data-slate-string="true"> i = num[</span></span><span 
data-slate-leaf="true" data-offset-key="3334:5"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_8480337615" data-annotation-type="annotation"><span data-slate-string="true">0</span></span></span><span 
data-slate-leaf="true" data-offset-key="3334:6"><span data-slate-string="true">]; i &gt;= </span></span><span 
data-slate-leaf="true" data-offset-key="3334:7"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_2446935852" data-annotation-type="annotation"><span data-slate-string="true">1</span></span></span><span 
data-slate-leaf="true" data-offset-key="3334:8"><span data-slate-string="true">; --i) </span></span><span 
data-slate-leaf="true" data-offset-key="3334:9"><span class=" gkhl-built_in" data-slate-object="annotation" 
data-annotation-key="gkann_0696607037" data-annotation-type="annotation"><span data-slate-string="true">printf</span></span></span><span 
data-slate-leaf="true" data-offset-key="3334:10"><span data-slate-string="true">(</span></span><span 
data-slate-leaf="true" data-offset-key="3334:11"><span class=" gkhl-string" data-slate-object="annotation" 
data-annotation-key="gkann_5003917437" data-annotation-type="annotation"><span data-slate-string="true">"%d"</span></span></span><span 
data-slate-leaf="true" data-offset-key="3334:12"><span data-slate-string="true">, num[i]);</span></span></span> 
</div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" data-slate-object="block" 
data-key="3335"> <span data-slate-object="text" data-key="3336"><span data-slate-leaf="true" 
data-offset-key="3336:0" data-first-offset="true"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="3336:1"><span class=" gkhl-built_in" data-slate-object="annotation" 
data-annotation-key="gkann_2861763424" data-annotation-type="annotation"><span data-slate-string="true">printf</span></span></span><span 
data-slate-leaf="true" data-offset-key="3336:2"><span data-slate-string="true">(</span></span><span 
data-slate-leaf="true" data-offset-key="3336:3"><span class=" gkhl-string" data-slate-object="annotation" 
data-annotation-key="gkann_2772144646" data-annotation-type="annotation"><span data-slate-string="true">"\n"</span></span></span><span 
data-slate-leaf="true" data-offset-key="3336:4"><span data-slate-string="true">);</span></span></span> 
</div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" data-slate-object="block" 
data-key="3337"> <span data-slate-object="text" data-key="3338"><span data-slate-leaf="true" 
data-offset-key="3338:0" data-first-offset="true"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="3338:1"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_1866124008" data-annotation-type="annotation"><span data-slate-string="true">return</span></span></span><span 
data-slate-leaf="true" data-offset-key="3338:2"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="3338:3"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_0166287303" data-annotation-type="annotation"><span data-slate-string="true">0</span></span></span><span 
data-slate-leaf="true" data-offset-key="3338:4"><span data-slate-string="true">;</span></span></span> 
</div> <div class="ps__rail-x" style="width: 365px; left: 0px; bottom: 0px;"> <div class="ps__thumb-x" 
tabindex="0" style="left: 0px; width: 271px;"></div> </div> <div class="ps__rail-y" style="top: 
0px; right: 0px;"> <div class="ps__thumb-y" tabindex="0" style="top: 0px; height: 0px;"></div> 
</div> </div> </div> <h2 class="se-d95c76aa" data-slate-type="heading" data-slate-object="block" 
data-key="3339"><span data-slate-object="text" data-key="3340"><span data-slate-leaf="true" 
data-offset-key="3340:0" data-first-offset="true"><span data-slate-string="true">课程小结</span></span></span></h2> 
<div class="se-07753619 " data-slate-type="paragraph" data-slate-object="block" data-key="3341"> 
<span data-slate-object="text" data-key="3342"><span data-slate-leaf="true" data-offset-key="3342:0" 
data-first-offset="true"><span data-slate-string="true">解决了这个任务后，恭喜你，又变强了一点点。今天我们学习了大整数的表示法，以及大整数加法和乘法的基本操作，我希望你记住以下几点：</span></span></span> 
</div> <div class="se-c696ad77" data-slate-type="list" data-slate-object="block" data-key="3343"> 
<div class="se-584136b0" data-slate-type="list-line" data-slate-object="block" data-key="3344"> 
<div class="se-5ec753c2 se-c513a84f" data-code-line-number="1"></div> <div class="se-ede22f1c"> 
<span data-slate-object="text" data-key="3345"><span data-slate-leaf="true" data-offset-key="3345:0" 
data-first-offset="true"><span data-slate-string="true">在大整数的表示法中，数字是从右到左，倒着存放在数组中的。</span></span></span> 
</div> </div> <div class="se-488c9387" data-slate-type="list-line" data-slate-object="block" 
data-key="3346"> <div class="se-daf35633 se-76f2b43c" data-code-line-number="2"></div> <div 
class="se-a22a1da5"> <span data-slate-object="text" data-key="3347"><span data-slate-leaf="true" 
data-offset-key="3347:0" data-first-offset="true"><span data-slate-string="true">大整数的表示法，体现的是数据结构对于程序设计的作用。</span></span></span> 
</div> </div> <div class="se-362067cd" data-slate-type="list-line" data-slate-object="block" 
data-key="3348"> <div class="se-e8035309 se-790bf4d9" data-code-line-number="3"></div> <div 
class="se-03a349cf"> <span data-slate-object="text" data-key="3349"><span data-slate-leaf="true" 
data-offset-key="3349:0" data-first-offset="true"><span data-slate-string="true">大整数的加法和乘法过程，体现的则是算法对于程序设计的作用。</span></span></span> 
</div> </div> </div> <div class="se-8f258486 " data-slate-type="paragraph" data-slate-object="block" 
data-key="3350"> <span data-slate-object="text" data-key="3351"><span data-slate-leaf="true" 
data-offset-key="3351:0" data-first-offset="true"><span data-slate-string="true">同时，你还可以看到，我们在理解大整数乘法的过程中，是从数组的表示法与数学公式的等价性这个角度出发讨论的。其实我就是想再次跟你强调那句话，就是</span></span></span><span 
data-slate-object="text" data-key="3352"><span data-slate-leaf="true" data-offset-key="3352:0" 
data-first-offset="true"><span class="se-10a81187" data-slate-type="bold" data-slate-object="mark"><span 
data-slate-string="true">算法的底层是数学</span></span></span></span><span data-slate-object="text" 
data-key="3353"><span data-slate-leaf="true" data-offset-key="3353:0" data-first-offset="true"><span 
data-slate-string="true">。</span></span></span> </div> <div class="se-92eb0d58 " data-slate-type="paragraph" 
data-slate-object="block" data-key="3354"> <span data-slate-object="text" data-key="3355"><span 
data-slate-leaf="true" data-offset-key="3355:0" data-first-offset="true"><span data-slate-string="true">而通过今天的学习，想必你已经对“</span></span></span><span 
data-slate-object="text" data-key="3356"><span data-slate-leaf="true" data-offset-key="3356:0" 
data-first-offset="true"><span class="se-66f7aeff" data-slate-type="bold" data-slate-object="mark"><span 
data-slate-string="true">数据结构本质是用作数据的表示</span></span></span></span><span data-slate-object="text" 
data-key="3357"><span data-slate-leaf="true" data-offset-key="3357:0" data-first-offset="true"><span 
data-slate-string="true">”这句话，已经有所感觉了。综合“</span></span></span><span data-slate-object="text" 
data-key="3358"><span data-slate-leaf="true" data-offset-key="3358:0" data-first-offset="true"><span 
class="se-6f1b896c" data-slate-type="bold" data-slate-object="mark"><span data-slate-string="true">算法是做数据的计算</span></span></span></span><span 
data-slate-object="text" data-key="3359"><span data-slate-leaf="true" data-offset-key="3359:0" 
data-first-offset="true"><span data-slate-string="true">”这句话，说明算法和数据结构是程序中可以独立进行设计的两个部分，关于这点呢，将是下一节咱们讲解的重点。</span></span></span> 
</div> <div class="se-2f3d2c21 " data-slate-type="paragraph" data-slate-object="block" data-key="3360"> 
<span data-slate-object="text" data-key="3361"><span data-slate-leaf="true" data-offset-key="3361:0" 
data-first-offset="true"><span data-slate-string="true">好了，今天就到这里了，我是胡光，我们下期见。</span></span></span> 
</div> </div>', body_summary='', bundle='book', delta=0, body_format='full_html', langcode='zh-hans', 
revision_id=754 where entity_id=754 
 {executed in 1 msec}
2020-11-24 18:03:34.772 INFO  jdbc.sqltiming Line:373 - select nodefiledd0_.nid as nid1_10_, nodefiledd0_.changed as changed2_10_, nodefiledd0_.created 
as created3_10_, nodefiledd0_.default_langcode as default_4_10_, nodefiledd0_.langcode as langcode5_10_, 
nodefiledd0_.promote as promote6_10_, nodefiledd0_.revision_translation_affected as revision7_10_, 
nodefiledd0_.status as status8_10_, nodefiledd0_.sticky as sticky9_10_, nodefiledd0_.title 
as title10_10_, nodefiledd0_.type as type11_10_, nodefiledd0_.uid as uid12_10_, nodefiledd0_.vid 
as vid13_10_ from node_field_data nodefiledd0_ where nodefiledd0_.nid=754 
 {executed in 1 msec}
2020-11-24 18:03:34.772 INFO  jdbc.resultsettable Line:610 - 
|----|-----------|-----------|-----------------|---------|--------|------------------------------|-------|-------|-----------------------------|-----|----|----|
|nid |changed    |created    |default_langcode |langcode |promote |revision_translation_affected |status |sticky |title                        |type |uid |vid |
|----|-----------|-----------|-----------------|---------|--------|------------------------------|-------|-------|-----------------------------|-----|----|----|
|754 |1606117097 |1606117097 |1                |zh-hans  |0       |1                             |1      |0      |16丨数据结构（上）：突破基本类型的限制，存储更大的整数 |book |1   |754 |
|----|-----------|-----------|-----------------|---------|--------|------------------------------|-------|-------|-----------------------------|-----|----|----|

2020-11-24 18:03:34.773 INFO  jdbc.sqltiming Line:373 - select nodefieldr0_.nid as nid1_11_0_, nodefieldr0_.changed as changed2_11_0_, nodefieldr0_.created 
as created3_11_0_, nodefieldr0_.default_langcode as default_4_11_0_, nodefieldr0_.langcode 
as langcode5_11_0_, nodefieldr0_.promote as promote6_11_0_, nodefieldr0_.revision_translation_affected 
as revision7_11_0_, nodefieldr0_.status as status8_11_0_, nodefieldr0_.sticky as sticky9_11_0_, 
nodefieldr0_.title as title10_11_0_, nodefieldr0_.uid as uid11_11_0_, nodefieldr0_.vid as vid12_11_0_ 
from node_field_revision nodefieldr0_ where nodefieldr0_.nid=754 
 {executed in 0 msec}
2020-11-24 18:03:34.773 INFO  jdbc.resultsettable Line:610 - 
|---------|-----------|-----------|-----------------|---------|--------|------------------------------|-------|-------|-----------------------------|----|----|
|nid      |changed    |created    |default_langcode |langcode |promote |revision_translation_affected |status |sticky |title                        |uid |vid |
|---------|-----------|-----------|-----------------|---------|--------|------------------------------|-------|-------|-----------------------------|----|----|
|[unread] |1606117097 |1606117097 |1                |zh-hans  |0       |1                             |1      |0      |16丨数据结构（上）：突破基本类型的限制，存储更大的整数 |1   |754 |
|---------|-----------|-----------|-----------------|---------|--------|------------------------------|-------|-------|-----------------------------|----|----|

2020-11-24 18:03:34.775 INFO  jdbc.sqltiming Line:373 - update node_field_data set changed=1606212214, created=1606212214, default_langcode=1, langcode='zh-hans', 
promote=0, revision_translation_affected=1, status=1, sticky=0, title='16丨数据结构（上）：突破基本类型的限制，存储更大的整数', 
type='book', uid=1, vid=754 where nid=754 
 {executed in 0 msec}
2020-11-24 18:03:34.775 INFO  jdbc.sqltiming Line:373 - update node_field_revision set changed=1606212214, created=1606212214, default_langcode=1, 
langcode='zh-hans', promote=0, revision_translation_affected=1, status=1, sticky=0, title='16丨数据结构（上）：突破基本类型的限制，存储更大的整数', 
uid=1, vid=754 where nid=754 
 {executed in 0 msec}
2020-11-24 18:03:34.779 INFO  jdbc.sqltiming Line:373 - select bookfieldm0_.entity_id as entity_i1_8_, bookfieldm0_.bundle as bundle2_8_, bookfieldm0_.delta 
as delta3_8_, bookfieldm0_.langcode as langcode4_8_, bookfieldm0_.field_media_value as field_me5_8_, 
bookfieldm0_.revision_id as revision6_8_ from node__field_media bookfieldm0_ where bookfieldm0_.entity_id=754 
 {executed in 0 msec}
2020-11-24 18:03:34.779 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------------|------------|
|entity_id |bundle |delta |langcode |field_media_value |revision_id |
|----------|-------|------|---------|------------------|------------|
|754       |book   |0     |zh-hans  |                  |754         |
|----------|-------|------|---------|------------------|------------|

2020-11-24 18:03:34.781 INFO  jdbc.sqltiming Line:373 - select nodefieldm0_.entity_id as entity_i1_17_0_, nodefieldm0_.bundle as bundle2_17_0_, nodefieldm0_.delta 
as delta3_17_0_, nodefieldm0_.langcode as langcode4_17_0_, nodefieldm0_.field_media_value as 
field_me5_17_0_, nodefieldm0_.revision_id as revision6_17_0_ from node_revision__field_media 
nodefieldm0_ where nodefieldm0_.entity_id=754 
 {executed in 0 msec}
2020-11-24 18:03:34.782 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------------|------------|
|entity_id |bundle |delta |langcode |field_media_value |revision_id |
|----------|-------|------|---------|------------------|------------|
|[unread]  |book   |0     |zh-hans  |                  |754         |
|----------|-------|------|---------|------------------|------------|

2020-11-24 18:03:34.783 INFO  jdbc.sqltiming Line:373 - select bookfieldc0_.entity_id as entity_i1_5_, bookfieldc0_.bundle as bundle2_5_, bookfieldc0_.field_comment_value 
as field_co3_5_, bookfieldc0_.delta as delta4_5_, bookfieldc0_.field_comment_format as field_co5_5_, 
bookfieldc0_.langcode as langcode6_5_, bookfieldc0_.revision_id as revision7_5_ from node__field_comment 
bookfieldc0_ where bookfieldc0_.entity_id=754 
 {executed in 0 msec}
2020-11-24 18:03:34.784 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|--------------------|------|---------------------|---------|------------|
|entity_id |bundle |field_comment_value |delta |field_comment_format |langcode |revision_id |
|----------|-------|--------------------|------|---------------------|---------|------------|
|754       |book   |                    |0     |full_html            |zh-hans  |754         |
|----------|-------|--------------------|------|---------------------|---------|------------|

2020-11-24 18:03:34.786 INFO  jdbc.sqltiming Line:373 - update node__field_comment set bundle='book', field_comment_value='<li class="reJj6Thl_0"><img 
src="https://static001.geekbang.org/account/avatar/00/14/0f/53/92a50f01.jpg" class="_2273kGdT_0"> 
<div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> <a>徐洲更</a> 
<!----> </div> <div class="_1H1Z49Dr_0"> 2020-02-22 </div> </div> <!----> </div> <div> <div 
class="_3M6kV3zb_0"> 对于原来的数据类型而言，我们的数组12345，底层使用64位存储的。而为了突破数据类型本身的限制，存放更大的数字，我们新建了一个数组，数组每个元素大小也是64位的话， 
也就是说为了表示12345，实际上使用了更多的内存空间。 <br>那么，有没有通过二进制本身，比如说在底层搞一个新的类型，比如说super long, 用128位或者更多位来表示这个大数据类型的方式呢？ 
</div> <div class="_2r3UB1GX_0"> <span>展开</span><i class="iconfont"></i> </div> <div class="_2xNIY4NG_0"> 
<p class="_33BLbmw4_0">作者回复: 这个是有的。GNU 标准下，是支持 128 位整型数据的。对于你提出的内存浪费的事情，其实文中给出的是最基本的一种实现，真正应用的时候，你可以尝试每一个整型位置存储若干位的数字，<br>例如：123456--&gt; 
12 | 34 | 56</p> </div> <div class="_1w8H0ktn_0 _2A421P4G_0"> <div class="_2jsFl-X0_0"> <i 
class="iconfont"></i> <span></span> </div> <div class="_2P4B1Hdm_0"> <i class="iconfont"></i> 
<span class="">1</span> </div> <!----> </div> </div> </div></li> <li class="reJj6Thl_0"><img 
src="https://static001.geekbang.org/account/avatar/00/12/d6/9f/0213e8a0.jpg" class="_2273kGdT_0"> 
<div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> <a>🤪HappyJoo</a> 
<!----> </div> <div class="_1H1Z49Dr_0"> 2020-02-20 </div> </div> <!----> </div> <div> <div 
class="_3M6kV3zb_0"> 老师您好，可以麻烦您有空的话帮我解决几个问题吗？谢谢！： <br>1，在标准C中是 以“__”开头,所以在标准C中要写成“__typeof()”或“__typeof__()”，在GNU 
C 中还支持直接写“typeof()”，我看您写的都是”__typeof()"，其实三个都是一样的，但是否为了不造成不必要的麻烦，才用了标准C的第一个呢？ <br> <br>2，“一起动手搞事情”前面的代码，第23行，“c[i 
+ 1] += c[i] / 10;”，请问这里直接用“+= 1”不行吗？我在这里看了好久才看明白就是一个“进一”的意思（笑哭）。 <br> <br>3，第22行，"c[++c[0]]"，这里是不是让“c[0]“先加一再拿来用？用"c[0]++"就会先用原来未加一的数值，然后才加一？我理解的对吗？ 
<br> <br>谢谢老师，欧拉筛法我看了一些blog，看的头晕，不知道他们的一些变量的作用是什么？例如（https://blog.csdn.net/tianwei0822/article/details/78309453），cnt 
是用来干什么的？里面的for循环看不太懂哈哈哈~ </div> <div class="_2r3UB1GX_0"> <span>展开</span><i class="iconfont"></i> 
</div> <div class="_2xNIY4NG_0"> <p class="_33BLbmw4_0">作者回复: 1、是的，之前不注意的时候，踩过坑，后来习惯养成了，就顺手写__typeof了。<br>2、对于加法来说确实可以，写成%=只是为了不增加你们的学习负担，否则加法学一套，乘法又得学一套。你能发现这其中的问题，说明你是很认真看了的！给你点赞！<br>3、你理解的是对的。<br><br>我在手机上操作的，不方便打开你的链接，我盲猜一下，cnt是用来记录素数个数的。</p> 
</div> <div class="_1w8H0ktn_0 _2A421P4G_0"> <div class="_2jsFl-X0_0"> <i class="iconfont"></i> 
<span>2</span> </div> <div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class="">1</span> 
</div> <!----> </div> </div> </div></li>', delta=0, field_comment_format='full_html', langcode='zh-hans', 
revision_id=754 where entity_id=754 
 {executed in 0 msec}
2020-11-24 18:03:34.788 INFO  jdbc.sqltiming Line:373 - select nodefieldc0_.entity_id as entity_i1_14_0_, nodefieldc0_.bundle as bundle2_14_0_, nodefieldc0_.field_comment_value 
as field_co3_14_0_, nodefieldc0_.delta as delta4_14_0_, nodefieldc0_.field_comment_format as 
field_co5_14_0_, nodefieldc0_.langcode as langcode6_14_0_, nodefieldc0_.revision_id as revision7_14_0_ 
from node_revision__field_comment nodefieldc0_ where nodefieldc0_.entity_id=754 
 {executed in 0 msec}
2020-11-24 18:03:34.789 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|--------------------|------|---------------------|---------|------------|
|entity_id |bundle |field_comment_value |delta |field_comment_format |langcode |revision_id |
|----------|-------|--------------------|------|---------------------|---------|------------|
|[unread]  |book   |                    |0     |full_html            |zh-hans  |754         |
|----------|-------|--------------------|------|---------------------|---------|------------|

2020-11-24 18:03:34.790 INFO  jdbc.sqltiming Line:373 - update node_revision__field_comment set bundle='book', field_comment_value='<li class="reJj6Thl_0"><img 
src="https://static001.geekbang.org/account/avatar/00/14/0f/53/92a50f01.jpg" class="_2273kGdT_0"> 
<div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> <a>徐洲更</a> 
<!----> </div> <div class="_1H1Z49Dr_0"> 2020-02-22 </div> </div> <!----> </div> <div> <div 
class="_3M6kV3zb_0"> 对于原来的数据类型而言，我们的数组12345，底层使用64位存储的。而为了突破数据类型本身的限制，存放更大的数字，我们新建了一个数组，数组每个元素大小也是64位的话， 
也就是说为了表示12345，实际上使用了更多的内存空间。 <br>那么，有没有通过二进制本身，比如说在底层搞一个新的类型，比如说super long, 用128位或者更多位来表示这个大数据类型的方式呢？ 
</div> <div class="_2r3UB1GX_0"> <span>展开</span><i class="iconfont"></i> </div> <div class="_2xNIY4NG_0"> 
<p class="_33BLbmw4_0">作者回复: 这个是有的。GNU 标准下，是支持 128 位整型数据的。对于你提出的内存浪费的事情，其实文中给出的是最基本的一种实现，真正应用的时候，你可以尝试每一个整型位置存储若干位的数字，<br>例如：123456--&gt; 
12 | 34 | 56</p> </div> <div class="_1w8H0ktn_0 _2A421P4G_0"> <div class="_2jsFl-X0_0"> <i 
class="iconfont"></i> <span></span> </div> <div class="_2P4B1Hdm_0"> <i class="iconfont"></i> 
<span class="">1</span> </div> <!----> </div> </div> </div></li> <li class="reJj6Thl_0"><img 
src="https://static001.geekbang.org/account/avatar/00/12/d6/9f/0213e8a0.jpg" class="_2273kGdT_0"> 
<div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> <a>🤪HappyJoo</a> 
<!----> </div> <div class="_1H1Z49Dr_0"> 2020-02-20 </div> </div> <!----> </div> <div> <div 
class="_3M6kV3zb_0"> 老师您好，可以麻烦您有空的话帮我解决几个问题吗？谢谢！： <br>1，在标准C中是 以“__”开头,所以在标准C中要写成“__typeof()”或“__typeof__()”，在GNU 
C 中还支持直接写“typeof()”，我看您写的都是”__typeof()"，其实三个都是一样的，但是否为了不造成不必要的麻烦，才用了标准C的第一个呢？ <br> <br>2，“一起动手搞事情”前面的代码，第23行，“c[i 
+ 1] += c[i] / 10;”，请问这里直接用“+= 1”不行吗？我在这里看了好久才看明白就是一个“进一”的意思（笑哭）。 <br> <br>3，第22行，"c[++c[0]]"，这里是不是让“c[0]“先加一再拿来用？用"c[0]++"就会先用原来未加一的数值，然后才加一？我理解的对吗？ 
<br> <br>谢谢老师，欧拉筛法我看了一些blog，看的头晕，不知道他们的一些变量的作用是什么？例如（https://blog.csdn.net/tianwei0822/article/details/78309453），cnt 
是用来干什么的？里面的for循环看不太懂哈哈哈~ </div> <div class="_2r3UB1GX_0"> <span>展开</span><i class="iconfont"></i> 
</div> <div class="_2xNIY4NG_0"> <p class="_33BLbmw4_0">作者回复: 1、是的，之前不注意的时候，踩过坑，后来习惯养成了，就顺手写__typeof了。<br>2、对于加法来说确实可以，写成%=只是为了不增加你们的学习负担，否则加法学一套，乘法又得学一套。你能发现这其中的问题，说明你是很认真看了的！给你点赞！<br>3、你理解的是对的。<br><br>我在手机上操作的，不方便打开你的链接，我盲猜一下，cnt是用来记录素数个数的。</p> 
</div> <div class="_1w8H0ktn_0 _2A421P4G_0"> <div class="_2jsFl-X0_0"> <i class="iconfont"></i> 
<span>2</span> </div> <div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class="">1</span> 
</div> <!----> </div> </div> </div></li>', delta=0, field_comment_format='full_html', langcode='zh-hans', 
revision_id=754 where entity_id=754 
 {executed in 0 msec}
2020-11-24 18:03:34.794 INFO  jdbc.sqltiming Line:373 - select bookfieldt0_.entity_id as entity_i1_9_, bookfieldt0_.bundle as bundle2_9_, bookfieldt0_.delta 
as delta3_9_, bookfieldt0_.langcode as langcode4_9_, bookfieldt0_.revision_id as revision5_9_, 
bookfieldt0_.field_thumb_value as field_th6_9_ from node__field_thumb bookfieldt0_ where bookfieldt0_.entity_id=754 
 {executed in 0 msec}
2020-11-24 18:03:34.794 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------|------------------|
|entity_id |bundle |delta |langcode |revision_id |field_thumb_value |
|----------|-------|------|---------|------------|------------------|
|754       |book   |0     |zh-hans  |754         |                  |
|----------|-------|------|---------|------------|------------------|

2020-11-24 18:03:34.796 INFO  jdbc.sqltiming Line:373 - update node__field_thumb set bundle='book', delta=0, langcode='zh-hans', revision_id=754, field_thumb_value='https://static001.geekbang.org/resource/image/e8/ec/e8cfdac0f03c7d56425bbf7c07595bec.jpg' 
where entity_id=754 
 {executed in 0 msec}
2020-11-24 18:03:34.800 INFO  jdbc.sqltiming Line:373 - select nodefieldt0_.entity_id as entity_i1_18_0_, nodefieldt0_.bundle as bundle2_18_0_, nodefieldt0_.delta 
as delta3_18_0_, nodefieldt0_.langcode as langcode4_18_0_, nodefieldt0_.revision_id as revision5_18_0_, 
nodefieldt0_.field_thumb_value as field_th6_18_0_ from node_revision__field_thumb nodefieldt0_ 
where nodefieldt0_.entity_id=754 
 {executed in 0 msec}
2020-11-24 18:03:34.800 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------|------------------|
|entity_id |bundle |delta |langcode |revision_id |field_thumb_value |
|----------|-------|------|---------|------------|------------------|
|[unread]  |book   |0     |zh-hans  |754         |                  |
|----------|-------|------|---------|------------|------------------|

2020-11-24 18:03:34.802 INFO  jdbc.sqltiming Line:373 - update node_revision__field_thumb set bundle='book', delta=0, langcode='zh-hans', revision_id=754, 
field_thumb_value='https://static001.geekbang.org/resource/image/e8/ec/e8cfdac0f03c7d56425bbf7c07595bec.jpg' 
where entity_id=754 
 {executed in 1 msec}
2020-11-24 18:03:34.805 INFO  jdbc.sqltiming Line:373 - select bookfieldf0_.entity_id as entity_i1_6_0_, bookfieldf0_.bundle as bundle2_6_0_, bookfieldf0_.delta 
as delta3_6_0_, bookfieldf0_.field_fenlei_target_id as field_fe4_6_0_, bookfieldf0_.langcode 
as langcode5_6_0_, bookfieldf0_.revision_id as revision6_6_0_ from node__field_fenlei bookfieldf0_ 
where bookfieldf0_.entity_id=754 
 {executed in 0 msec}
2020-11-24 18:03:34.806 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------------|---------|------------|
|entity_id |bundle |delta |field_fenlei_target_id |langcode |revision_id |
|----------|-------|------|-----------------------|---------|------------|
|[unread]  |book   |0     |1                      |zh-hans  |754         |
|----------|-------|------|-----------------------|---------|------------|

2020-11-24 18:03:34.808 INFO  jdbc.sqltiming Line:373 - select nodefieldf0_.entity_id as entity_i1_15_0_, nodefieldf0_.bundle as bundle2_15_0_, nodefieldf0_.delta 
as delta3_15_0_, nodefieldf0_.field_fenlei_target_id as field_fe4_15_0_, nodefieldf0_.langcode 
as langcode5_15_0_, nodefieldf0_.revision_id as revision6_15_0_ from node_revision__field_fenlei 
nodefieldf0_ where nodefieldf0_.entity_id=754 
 {executed in 0 msec}
2020-11-24 18:03:34.808 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------------|---------|------------|
|entity_id |bundle |delta |field_fenlei_target_id |langcode |revision_id |
|----------|-------|------|-----------------------|---------|------------|
|[unread]  |book   |0     |1                      |zh-hans  |754         |
|----------|-------|------|-----------------------|---------|------------|

2020-11-24 18:03:34.810 INFO  jdbc.sqltiming Line:373 - select bookchecke0_.item_id as item_id1_2_, bookchecke0_.fsid as fsid2_2_, bookchecke0_.got 
as got3_2_, bookchecke0_.name as name4_2_, bookchecke0_.parse_fail as parse_fa5_2_, bookchecke0_.parsed 
as parsed6_2_, bookchecke0_.path as path7_2_, bookchecke0_.title as title8_2_, bookchecke0_.vid 
as vid9_2_ from book_check bookchecke0_ where bookchecke0_.fsid='141045371014390' and bookchecke0_.name='net_content' 
 {executed in 0 msec}
2020-11-24 18:03:34.810 INFO  jdbc.resultsettable Line:610 - 
|--------|---------|---------|---------|-----------|---------|---------|---------|---------|
|item_id |fsid     |got      |name     |parse_fail |parsed   |path     |title    |vid      |
|--------|---------|---------|---------|-----------|---------|---------|---------|---------|
|755     |[unread] |[unread] |[unread] |[unread]   |[unread] |[unread] |[unread] |[unread] |
|--------|---------|---------|---------|-----------|---------|---------|---------|---------|

2020-11-24 18:08:15.143 INFO  jdbc.sqltiming Line:373 - update book_check set fsid='141045371014390', got=1, name='net_content', parse_fail='comment_', 
parsed=0, path='109-人人都能学会的编程入门课/03丨编码能力训练篇 (7讲)/17丨数据结构（下）：大整数实战，提升Shift-And算法能力.html', title='17丨数据结构（下）：大整数实战，提升Shift-And算法能力', 
vid=755 where item_id=755 
 {executed in 1 msec}
2020-11-24 18:08:15.150 INFO  jdbc.sqltiming Line:373 - select nodebodyen0_.entity_id as entity_i1_4_, nodebodyen0_.body_value as body_val2_4_, nodebodyen0_.body_summary 
as body_sum3_4_, nodebodyen0_.bundle as bundle4_4_, nodebodyen0_.delta as delta5_4_, nodebodyen0_.body_format 
as body_for6_4_, nodebodyen0_.langcode as langcode7_4_, nodebodyen0_.revision_id as revision8_4_ 
from node__body nodebodyen0_ where nodebodyen0_.entity_id=755 
 {executed in 0 msec}
2020-11-24 18:08:15.151 INFO  jdbc.resultsettable Line:610 - 
|----------|-----------|-------------|-------|------|------------|---------|------------|
|entity_id |body_value |body_summary |bundle |delta |body_format |langcode |revision_id |
|----------|-----------|-------------|-------|------|------------|---------|------------|
|755       |           |             |book   |0     |full_html   |zh-hans  |755         |
|----------|-----------|-------------|-------|------|------------|---------|------------|

2020-11-24 18:08:15.152 INFO  jdbc.sqltiming Line:373 - select nodebodyre0_.entity_id as entity_i1_13_0_, nodebodyre0_.body_value as body_val2_13_0_, 
nodebodyre0_.body_summary as body_sum3_13_0_, nodebodyre0_.bundle as bundle4_13_0_, nodebodyre0_.delta 
as delta5_13_0_, nodebodyre0_.body_format as body_for6_13_0_, nodebodyre0_.langcode as langcode7_13_0_, 
nodebodyre0_.revision_id as revision8_13_0_ from node_revision__body nodebodyre0_ where nodebodyre0_.entity_id=755 
 {executed in 1 msec}
2020-11-24 18:08:15.152 INFO  jdbc.resultsettable Line:610 - 
|----------|-----------|-------------|-------|------|------------|---------|------------|
|entity_id |body_value |body_summary |bundle |delta |body_format |langcode |revision_id |
|----------|-----------|-------------|-------|------|------------|---------|------------|
|[unread]  |           |             |book   |0     |full_html   |zh-hans  |755         |
|----------|-----------|-------------|-------|------|------------|---------|------------|

2020-11-24 18:08:15.156 INFO  jdbc.sqltiming Line:373 - update node__body set body_value='<div data-slate-editor="true" data-key="3791" autocorrect="off" 
spellcheck="false" data-gramm="false" style="outline: none; white-space: pre-wrap; overflow-wrap: 
break-word;"> <div class="se-65613535 " data-slate-type="paragraph" data-slate-object="block" 
data-key="3792"> <span data-slate-object="text" data-key="3793"><span data-slate-leaf="true" 
data-offset-key="3793:0" data-first-offset="true"><span data-slate-string="true">你好，我是胡光，咱们又见面了。</span></span></span> 
</div> <div class="se-4b031c55 " data-slate-type="paragraph" data-slate-object="block" data-key="3794"> 
<span data-slate-object="text" data-key="3795"><span data-slate-leaf="true" data-offset-key="3795:0" 
data-first-offset="true"><span data-slate-string="true">上节课呢，我们讲了大整数表示法的相关知识，并且给你演示了大整数加法及乘法处理过程。其实，你是否掌握了大整数表示法是次要的，主要是你可以在这个过程中，认识到数据结构的作用，也就是我强调的</span></span></span><span 
data-slate-object="text" data-key="3796"><span data-slate-leaf="true" data-offset-key="3796:0" 
data-first-offset="true"><span class="se-b84ad990" data-slate-type="bold" data-slate-object="mark"><span 
data-slate-string="true">数据结构就是负责表示数据</span></span></span></span><span data-slate-object="text" 
data-key="3797"><span data-slate-leaf="true" data-offset-key="3797:0" data-first-offset="true"><span 
data-slate-string="true">。</span></span></span> </div> <div class="se-0d22f971 " data-slate-type="paragraph" 
data-slate-object="block" data-key="3798"> <span data-slate-object="text" data-key="3799"><span 
data-slate-leaf="true" data-offset-key="3799:0" data-first-offset="true"><span data-slate-string="true">原先，我们之所以无法做较大整数的运算，那是因为我们所掌握的数据类型，无法表示很大的数字，有了大整数表示法以后，我们就可以做特别特别大的整数表示了。</span></span></span> 
</div> <div class="se-e9ae1069 " data-slate-type="paragraph" data-slate-object="block" data-key="3800"> 
<span data-slate-object="text" data-key="3801"><span data-slate-leaf="true" data-offset-key="3801:0" 
data-first-offset="true"><span data-slate-string="true">我之前也一直在说，算法是做数据计算的，它和数据结构是程序设计中，非常重要的两部分。既然是两部分，说明</span></span></span><span 
data-slate-object="text" data-key="3802"><span data-slate-leaf="true" data-offset-key="3802:0" 
data-first-offset="true"><span class="se-43284917" data-slate-type="bold" data-slate-object="mark"><span 
data-slate-string="true">算法和数据结构可以独立分开设计</span></span></span></span><span data-slate-object="text" 
data-key="3803"><span data-slate-leaf="true" data-offset-key="3803:0" data-first-offset="true"><span 
data-slate-string="true">。</span></span></span> </div> <div class="se-aa6eb03d " data-slate-type="paragraph" 
data-slate-object="block" data-key="3804"> <span data-slate-object="text" data-key="3805"><span 
data-slate-leaf="true" data-offset-key="3805:0" data-first-offset="true"><span data-slate-string="true">关于这点呢，你可以想想上节课我们学的大整数加法，它其实就是算法。为什么这么说呢？你想想，这个加法过程难道是有了大整数以后，才出现的么？显然不是，即使没有大整数表示法，我们还是了解加法过程的，只不过这一次我们用大整数表示法，模拟了加法过程。注意，加法过程是一个独立的算法过程。</span></span></span> 
</div> <div class="se-44ce3b92 " data-slate-type="paragraph" data-slate-object="block" data-key="3806"> 
<span data-slate-object="text" data-key="3807"><span data-slate-leaf="true" data-offset-key="3807:0" 
data-first-offset="true"><span data-slate-string="true">总而言之，就是在之前的课程中，我们确定了几点结论：如果是计算流程不合理，我们需要改进算法，如果是数据表示受限，我们需要求助于数据结构。</span></span></span> 
</div> <div class="se-4c578474 " data-slate-type="paragraph" data-slate-object="block" data-key="3808"> 
<span data-slate-object="text" data-key="3809"><span data-slate-leaf="true" data-offset-key="3809:0" 
data-first-offset="true"><span data-slate-string="true">为了让你更清晰地认识到，算法和数据结构是两个可以独立设计的部分，今天我们通过一个具体的算法，来感受一下这个独立设计的过程。</span></span></span> 
</div> <h2 class="se-78730ade" data-slate-type="heading" data-slate-object="block" data-key="3810"><span 
data-slate-object="text" data-key="3811"><span data-slate-leaf="true" data-offset-key="3811:0" 
data-first-offset="true"><span data-slate-string="true">字符串匹配问题</span></span></span></h2> <div 
class="se-61c6c935 " data-slate-type="paragraph" data-slate-object="block" data-key="3812"> 
<span data-slate-object="text" data-key="3813"><span data-slate-leaf="true" data-offset-key="3813:0" 
data-first-offset="true"><span data-slate-string="true">首先让我们来了解一个概念，那就是“字符串匹配问题”。什么意思呢？简单来说，就是在一个大的字符串里面，查找是否包含另外一个较小的字符串。</span></span></span> 
</div> <div class="se-25f860b0" data-slate-type="image" data-slate-object="block" data-key="3814"> 
<img class="se-1db9a472" src="https://static001.geekbang.org/resource/image/90/23/905e0c01811e78d0bb009e49b3be7e23.jpg"> 
<div class="se-d14c5203"> 图1： 字符串匹配问题 </div> </div> <div class="se-9c82018c " data-slate-type="paragraph" 
data-slate-object="block" data-key="3815"> <span data-slate-object="text" data-key="3816"><span 
data-slate-leaf="true" data-offset-key="3816:0" data-first-offset="true"><span data-slate-string="true">如图所示，我们做的就是在字符串 
cjakjoek 中，查找是否包含字符串 kjo，其中，我们把这个 cjakjoek 字符串叫做文本串，kjo 字符串叫做模式串。再举个例子，你手中有一篇英文文档，你想在这个文档中查找所有的 
hello 单词。那么，英文文档就是我们所说的文本串，hello 就是模式串。</span></span></span> </div> <div class="se-7f51124b 
" data-slate-type="paragraph" data-slate-object="block" data-key="3817"> <span data-slate-object="text" 
data-key="3818"><span data-slate-leaf="true" data-offset-key="3818:0" data-first-offset="true"><span 
data-slate-string="true">如果模式串是单独的一个，我们就称这种问题为“单模匹配问题”，如果模式串是多个，那就是“多模匹配问题”。我们今天重点讨论的是“单模匹配问题”。</span></span></span> 
</div> <div class="se-71c5fe40 " data-slate-type="paragraph" data-slate-object="block" data-key="3819"> 
<span data-slate-object="text" data-key="3820"><span data-slate-leaf="true" data-offset-key="3820:0" 
data-first-offset="true"><span data-slate-string="true">如果给你一个文本串和模式串，让你查找文本串中是否包含模式串，你用程序怎么完成？最直观的做法，就是用模式串的首字母依次性的，和文本串中的每一位对齐，每次对齐以后，看看所对应区域是否匹配，如果匹配就说明文本串包含模式串。</span></span></span> 
</div> <div class="se-d3df6b09 " data-slate-type="paragraph" data-slate-object="block" data-key="3821"> 
<span data-slate-object="text" data-key="3822"><span data-slate-leaf="true" data-offset-key="3822:0" 
data-first-offset="true"><span data-slate-string="true">下面我给出这个方法的程序代码：</span></span></span> 
</div> <div class="se-93ff1577 se-633b951c" data-slate-type="pre" data-slate-object="block" 
data-key="3823" data-code-language="cpp"> <div class="se-10e224e0 se-455e15b7"> <span></span> 
</div> <div class="se-c5dd803a"> <div class="se-23607d02 se-7c9ce428" data-code-line-number="1"></div> 
<div class="se-23607d02 se-7c9ce428" data-code-line-number="2"></div> <div class="se-23607d02 
se-7c9ce428" data-code-line-number="3"></div> <div class="se-23607d02 se-7c9ce428" data-code-line-number="4"></div> 
<div class="se-23607d02 se-7c9ce428" data-code-line-number="5"></div> <div class="se-23607d02 
se-7c9ce428" data-code-line-number="6"></div> <div class="se-23607d02 se-7c9ce428" data-code-line-number="7"></div> 
<div class="se-23607d02 se-7c9ce428" data-code-line-number="8"></div> <div class="se-23607d02 
se-7c9ce428" data-code-line-number="9"></div> <div class="se-23607d02 se-7c9ce428" data-code-line-number="10"></div> 
<div class="se-23607d02 se-7c9ce428" data-code-line-number="11"></div> <div class="se-23607d02 
se-7c9ce428" data-code-line-number="12"></div> <div class="se-23607d02 se-7c9ce428" data-code-line-number="13"></div> 
<div class="se-23607d02 se-7c9ce428" data-code-line-number="14"></div> <div class="se-23607d02 
se-7c9ce428" data-code-line-number="15"></div> <div class="se-23607d02 se-7c9ce428" data-code-line-number="16"></div> 
</div> <div class="se-7c3da888 ps ps--active-x"> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" 
data-slate-object="block" data-key="3824"> <span data-slate-object="text" data-key="3825"><span 
data-slate-leaf="true" data-offset-key="3825:0" data-first-offset="true"><span class=" gkhl-comment" 
data-slate-object="annotation" data-annotation-key="gkann_3724232443" data-annotation-type="annotation"><span 
data-slate-string="true">// 暴力匹配算法程序</span></span></span></span> </div> <div class="se-03eefeec 
se-2642b266" data-slate-type="code-line" data-slate-object="block" data-key="3826"> <span data-slate-object="text" 
data-key="3827"><span data-slate-leaf="true" data-offset-key="3827:0" data-first-offset="true"><span 
class=" gkhl-function" data-slate-object="annotation" data-annotation-key="gkann_3517792984" 
data-annotation-type="annotation"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_8766044221" data-annotation-type="annotation"><span data-slate-string="true">int</span></span></span></span><span 
data-slate-leaf="true" data-offset-key="3827:1"><span class=" gkhl-function" data-slate-object="annotation" 
data-annotation-key="gkann_3517792984" data-annotation-type="annotation"><span data-slate-string="true"> 
</span></span></span><span data-slate-leaf="true" data-offset-key="3827:2"><span class=" gkhl-function" 
data-slate-object="annotation" data-annotation-key="gkann_3517792984" data-annotation-type="annotation"><span 
class=" gkhl-title" data-slate-object="annotation" data-annotation-key="gkann_0366082730" data-annotation-type="annotation"><span 
data-slate-string="true">bruce_force</span></span></span></span><span data-slate-leaf="true" 
data-offset-key="3827:3"><span class=" gkhl-function" data-slate-object="annotation" data-annotation-key="gkann_3517792984" 
data-annotation-type="annotation"><span class=" gkhl-params" data-slate-object="annotation" 
data-annotation-key="gkann_4835603932" data-annotation-type="annotation"><span data-slate-string="true">(const 
char *text, const char *p)</span></span></span></span><span data-slate-leaf="true" data-offset-key="3827:4"><span 
class=" gkhl-function" data-slate-object="annotation" data-annotation-key="gkann_3517792984" 
data-annotation-type="annotation"><span data-slate-string="true"> </span></span></span><span 
data-slate-leaf="true" data-offset-key="3827:5"><span data-slate-string="true">{</span></span></span> 
</div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" data-slate-object="block" 
data-key="3828"> <span data-slate-object="text" data-key="3829"><span data-slate-leaf="true" 
data-offset-key="3829:0" data-first-offset="true"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="3829:1"><span class=" gkhl-comment" data-slate-object="annotation" 
data-annotation-key="gkann_8350543517" data-annotation-type="annotation"><span data-slate-string="true">// 
遍历文本串每一位</span></span></span></span> </div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" 
data-slate-object="block" data-key="3830"> <span data-slate-object="text" data-key="3831"><span 
data-slate-leaf="true" data-offset-key="3831:0" data-first-offset="true"><span data-slate-string="true"> 
</span></span><span data-slate-leaf="true" data-offset-key="3831:1"><span class=" gkhl-keyword" 
data-slate-object="annotation" data-annotation-key="gkann_5956419415" data-annotation-type="annotation"><span 
data-slate-string="true">for</span></span></span><span data-slate-leaf="true" data-offset-key="3831:2"><span 
data-slate-string="true"> (</span></span><span data-slate-leaf="true" data-offset-key="3831:3"><span 
class=" gkhl-keyword" data-slate-object="annotation" data-annotation-key="gkann_3343320622" 
data-annotation-type="annotation"><span data-slate-string="true">int</span></span></span><span 
data-slate-leaf="true" data-offset-key="3831:4"><span data-slate-string="true"> i = </span></span><span 
data-slate-leaf="true" data-offset-key="3831:5"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_1614087121" data-annotation-type="annotation"><span data-slate-string="true">0</span></span></span><span 
data-slate-leaf="true" data-offset-key="3831:6"><span data-slate-string="true">; text[i]; i++) 
{</span></span></span> </div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" 
data-slate-object="block" data-key="3832"> <span data-slate-object="text" data-key="3833"><span 
data-slate-leaf="true" data-offset-key="3833:0" data-first-offset="true"><span data-slate-string="true"> 
</span></span><span data-slate-leaf="true" data-offset-key="3833:1"><span class=" gkhl-keyword" 
data-slate-object="annotation" data-annotation-key="gkann_1834403817" data-annotation-type="annotation"><span 
data-slate-string="true">int</span></span></span><span data-slate-leaf="true" data-offset-key="3833:2"><span 
data-slate-string="true"> flag = </span></span><span data-slate-leaf="true" data-offset-key="3833:3"><span 
class=" gkhl-number" data-slate-object="annotation" data-annotation-key="gkann_0231652223" 
data-annotation-type="annotation"><span data-slate-string="true">1</span></span></span><span 
data-slate-leaf="true" data-offset-key="3833:4"><span data-slate-string="true">;</span></span></span> 
</div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" data-slate-object="block" 
data-key="3834"> <span data-slate-object="text" data-key="3835"><span data-slate-leaf="true" 
data-offset-key="3835:0" data-first-offset="true"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="3835:1"><span class=" gkhl-comment" data-slate-object="annotation" 
data-annotation-key="gkann_9230697051" data-annotation-type="annotation"><span data-slate-string="true">// 
从文本串的第 i 位开始与模式串进行匹配</span></span></span></span> </div> <div class="se-03eefeec se-2642b266" 
data-slate-type="code-line" data-slate-object="block" data-key="3836"> <span data-slate-object="text" 
data-key="3837"><span data-slate-leaf="true" data-offset-key="3837:0" data-first-offset="true"><span 
data-slate-string="true"> </span></span><span data-slate-leaf="true" data-offset-key="3837:1"><span 
class=" gkhl-keyword" data-slate-object="annotation" data-annotation-key="gkann_5595891047" 
data-annotation-type="annotation"><span data-slate-string="true">for</span></span></span><span 
data-slate-leaf="true" data-offset-key="3837:2"><span data-slate-string="true"> (</span></span><span 
data-slate-leaf="true" data-offset-key="3837:3"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_6543968896" data-annotation-type="annotation"><span data-slate-string="true">int</span></span></span><span 
data-slate-leaf="true" data-offset-key="3837:4"><span data-slate-string="true"> j = </span></span><span 
data-slate-leaf="true" data-offset-key="3837:5"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_2321227930" data-annotation-type="annotation"><span data-slate-string="true">0</span></span></span><span 
data-slate-leaf="true" data-offset-key="3837:6"><span data-slate-string="true">; p[j]; j++) 
{</span></span></span> </div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" 
data-slate-object="block" data-key="3838"> <span data-slate-object="text" data-key="3839"><span 
data-slate-leaf="true" data-offset-key="3839:0" data-first-offset="true"><span data-slate-string="true"> 
</span></span><span data-slate-leaf="true" data-offset-key="3839:1"><span class=" gkhl-keyword" 
data-slate-object="annotation" data-annotation-key="gkann_9529809524" data-annotation-type="annotation"><span 
data-slate-string="true">if</span></span></span><span data-slate-leaf="true" data-offset-key="3839:2"><span 
data-slate-string="true"> (text[i + j] == p[j]) </span></span><span data-slate-leaf="true" 
data-offset-key="3839:3"><span class=" gkhl-keyword" data-slate-object="annotation" data-annotation-key="gkann_7993323579" 
data-annotation-type="annotation"><span data-slate-string="true">continue</span></span></span><span 
data-slate-leaf="true" data-offset-key="3839:4"><span data-slate-string="true">;</span></span></span> 
</div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" data-slate-object="block" 
data-key="3840"> <span data-slate-object="text" data-key="3841"><span data-slate-leaf="true" 
data-offset-key="3841:0" data-first-offset="true"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="3841:1"><span class=" gkhl-comment" data-slate-object="annotation" 
data-annotation-key="gkann_8564432846" data-annotation-type="annotation"><span data-slate-string="true">// 
当代码到了这里，说明某一位不匹配。</span></span></span></span> </div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" 
data-slate-object="block" data-key="3842"> <span data-slate-object="text" data-key="3843"><span 
data-slate-leaf="true" data-offset-key="3843:0" data-first-offset="true"><span data-slate-string="true"> 
flag = </span></span><span data-slate-leaf="true" data-offset-key="3843:1"><span class=" gkhl-number" 
data-slate-object="annotation" data-annotation-key="gkann_3008599131" data-annotation-type="annotation"><span 
data-slate-string="true">0</span></span></span><span data-slate-leaf="true" data-offset-key="3843:2"><span 
data-slate-string="true">;</span></span></span> </div> <div class="se-03eefeec se-2642b266" 
data-slate-type="code-line" data-slate-object="block" data-key="3844"> <span data-slate-object="text" 
data-key="3845"><span data-slate-leaf="true" data-offset-key="3845:0" data-first-offset="true"><span 
data-slate-string="true"> </span></span><span data-slate-leaf="true" data-offset-key="3845:1"><span 
class=" gkhl-keyword" data-slate-object="annotation" data-annotation-key="gkann_4413348353" 
data-annotation-type="annotation"><span data-slate-string="true">break</span></span></span><span 
data-slate-leaf="true" data-offset-key="3845:2"><span data-slate-string="true">;</span></span></span> 
</div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" data-slate-object="block" 
data-key="3846"> <span data-slate-object="text" data-key="3847"><span data-slate-leaf="true" 
data-offset-key="3847:0" data-first-offset="true"><span data-slate-string="true"> }</span></span></span> 
</div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" data-slate-object="block" 
data-key="3848"> <span data-slate-object="text" data-key="3849"><span data-slate-leaf="true" 
data-offset-key="3849:0" data-first-offset="true"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="3849:1"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_0116734217" data-annotation-type="annotation"><span data-slate-string="true">if</span></span></span><span 
data-slate-leaf="true" data-offset-key="3849:2"><span data-slate-string="true"> (flag) </span></span><span 
data-slate-leaf="true" data-offset-key="3849:3"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_6141356181" data-annotation-type="annotation"><span data-slate-string="true">return</span></span></span><span 
data-slate-leaf="true" data-offset-key="3849:4"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="3849:5"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_3273319867" data-annotation-type="annotation"><span data-slate-string="true">1</span></span></span><span 
data-slate-leaf="true" data-offset-key="3849:6"><span data-slate-string="true">;</span></span></span> 
</div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" data-slate-object="block" 
data-key="3850"> <span data-slate-object="text" data-key="3851"><span data-slate-leaf="true" 
data-offset-key="3851:0" data-first-offset="true"><span data-slate-string="true"> }</span></span></span> 
</div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" data-slate-object="block" 
data-key="3852"> <span data-slate-object="text" data-key="3853"><span data-slate-leaf="true" 
data-offset-key="3853:0" data-first-offset="true"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="3853:1"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_3067293210" data-annotation-type="annotation"><span data-slate-string="true">return</span></span></span><span 
data-slate-leaf="true" data-offset-key="3853:2"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="3853:3"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_9591644878" data-annotation-type="annotation"><span data-slate-string="true">0</span></span></span><span 
data-slate-leaf="true" data-offset-key="3853:4"><span data-slate-string="true">;</span></span></span> 
</div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" data-slate-object="block" 
data-key="3854"> <span data-slate-object="text" data-key="3855"><span data-slate-leaf="true" 
data-offset-key="3855:0" data-first-offset="true"><span data-slate-string="true">}</span></span></span> 
</div> <div class="ps__rail-x" style="width: 365px; left: 0px; bottom: 0px;"> <div class="ps__thumb-x" 
tabindex="0" style="left: 0px; width: 341px;"></div> </div> <div class="ps__rail-y" style="top: 
0px; right: 0px;"> <div class="ps__thumb-y" tabindex="0" style="top: 0px; height: 0px;"></div> 
</div> </div> </div> <div class="se-50ba8a27 " data-slate-type="paragraph" data-slate-object="block" 
data-key="3856"> <span data-slate-object="text" data-key="3857"><span data-slate-leaf="true" 
data-offset-key="3857:0" data-first-offset="true"><span data-slate-string="true">正如你所看到的，这是最简单粗暴的方法。代码中的 
bruce_force 程序，就是暴力匹配算法的过程，其中参数 text 就是文本串，p 就是模式串，如果包含模式串，函数返回值是 1，如果不包含，返回值就是 0。</span></span></span> 
</div> <div class="se-f4089d47 " data-slate-type="paragraph" data-slate-object="block" data-key="3858"> 
<span data-slate-object="text" data-key="3859"><span data-slate-leaf="true" data-offset-key="3859:0" 
data-first-offset="true"><span data-slate-string="true">这个程序的效率，可以说是单模匹配的所有算法中最差的了，它的时间复杂度是 
O(nm)，其中，n 是文本串的长度，m 是模式串的长度。怎么理解呢？就是如果文本串长度是 10，模式串长度是 3，那么这个程序差不多要计算 30 次，外层循环 10 次，内层循环每次循环 
3 次。</span></span></span> </div> <div class="se-b255016c " data-slate-type="paragraph" data-slate-object="block" 
data-key="3860"> <span data-slate-object="text" data-key="3861"><span data-slate-leaf="true" 
data-offset-key="3861:0" data-first-offset="true"><span data-slate-string="true">按照这个理解，可以设想，当文本串长度是 
10000，模式串长度是 1000 的时候，程序的运行次数是接近 1000 万次这个量级的！所以这种程序的效率最差。</span></span></span> </div> <h2 
class="se-5d35ebc6" data-slate-type="heading" data-slate-object="block" data-key="3862"><span 
data-slate-object="text" data-key="3863"><span data-slate-leaf="true" data-offset-key="3863:0" 
data-first-offset="true"><span data-slate-string="true">初识 Shift-And 算法</span></span></span></h2> 
<div class="se-c1a87d2a " data-slate-type="paragraph" data-slate-object="block" data-key="3864"> 
<span data-slate-object="text" data-key="3865"><span data-slate-leaf="true" data-offset-key="3865:0" 
data-first-offset="true"><span data-slate-string="true">其实，可以高效的解决“单模匹配问题” 的算法有很多。今天，我们将来学习一种叫做 
Shift-And 的算法。</span></span></span> </div> <div class="se-f47944d1 " data-slate-type="paragraph" 
data-slate-object="block" data-key="3866"> <span data-slate-object="text" data-key="3867"><span 
data-slate-leaf="true" data-offset-key="3867:0" data-first-offset="true"><span data-slate-string="true">看到 
Shift 你会想到了什么？是不是电脑键盘上的 Shift 键？我们知道，这个键的作用是做转换，例如当你按住 Shift + 8 的时候，输入的就不是数字 8，而是一个 *。</span></span></span> 
</div> <div class="se-176074d6 " data-slate-type="paragraph" data-slate-object="block" data-key="3868"> 
<span data-slate-object="text" data-key="3869"><span data-slate-leaf="true" data-offset-key="3869:0" 
data-first-offset="true"><span data-slate-string="true">而 Shift-And 中的另一个单词 And ，其实指代的是位运算中的按位与操作。这两个单词，差不多清晰展示了这个算法的基本流程：首先做信息的转换，然后利用位运算，完成单模匹配问题。下面，我们就来具体对这两步做下讲解。</span></span></span> 
</div> <h4 class="se-eec58c01" data-slate-type="heading" data-slate-object="block" data-key="3870"><span 
data-slate-object="text" data-key="3871"><span data-slate-leaf="true" data-offset-key="3871:0" 
data-first-offset="true"><span data-slate-string="true">1. Shift-And 中的信息转换</span></span></span></h4> 
<div class="se-a5aab868 " data-slate-type="paragraph" data-slate-object="block" data-key="3872"> 
<span data-slate-object="text" data-key="3873"><span data-slate-leaf="true" data-offset-key="3873:0" 
data-first-offset="true"><span data-slate-string="true">在 Shift-And 算法中，是将模式串的信息，转换成另外一个种信息格式，如何转换呢？如下图所示：</span></span></span> 
</div> <div class="se-7bdb101a" data-slate-type="image" data-slate-object="block" data-key="3874"> 
<img class="se-a58a9726" src="https://static001.geekbang.org/resource/image/43/c0/4362d2e4ffbfc68f596184290caceac0.jpg"> 
<div class="se-318bc824"> 图2： Shift-And 编码方法示意图 </div> </div> <div class="se-47d2d140 " data-slate-type="paragraph" 
data-slate-object="block" data-key="3875"> <span data-slate-object="text" data-key="3876"><span 
data-slate-leaf="true" data-offset-key="3876:0" data-first-offset="true"><span data-slate-string="true">在 
Shift-And 中，我们可以把模式串中的每一个字符，转换成一个数字，这个数字一般是由二进制表示。关于转换字符的编码有这么一个规则，就是如果某个字符在模式串的第 i 位中出现过，那么在相关字符编码的二进制数字表示中的第 
i 位就为 1。</span></span></span> </div> <div class="se-19ccf8fe " data-slate-type="paragraph" 
data-slate-object="block" data-key="3877"> <span data-slate-object="text" data-key="3878"><span 
data-slate-leaf="true" data-offset-key="3878:0" data-first-offset="true"><span data-slate-string="true">例如，图中字符 
a，在模式串的第 0 位，第 5 位和第 6 位出现过，那么就将 a 字符编码的第 0、5、6 位设置为 1。在这里你需要注意的是，字符数组是从左向右看，也就是说最左边是最低位；而数字是从右向左看的，最右边才是最低位，这里是最容易犯糊涂的地方。</span></span></span> 
</div> <div class="se-3af0a0c0 " data-slate-type="paragraph" data-slate-object="block" data-key="3879"> 
<span data-slate-object="text" data-key="3880"><span data-slate-leaf="true" data-offset-key="3880:0" 
data-first-offset="true"><span data-slate-string="true">字符 c 呢，由于在第 1 位和第 4 位出现过，所以对应到二进制数字中，第 
1 位和第 4 位都是 1，其余位置都是 0。按照这种规则呢，你会发现，没有在模式串中出现的字符，编码值就是 0 值，也就是它的所有二进制位上都是 0。</span></span></span> 
</div> <div class="se-6641acd3 " data-slate-type="paragraph" data-slate-object="block" data-key="3881"> 
<span data-slate-object="text" data-key="3882"><span data-slate-leaf="true" data-offset-key="3882:0" 
data-first-offset="true"><span data-slate-string="true">所以，在 Shift-And 算法中，通过看一个字符的编码，就能知道这个字符，在原模式串的第几位出现过。同时，通过模式串可以生成的编码信息，也可以还原模式串信息。</span></span></span> 
</div> <div class="se-fd84348a " data-slate-type="paragraph" data-slate-object="block" data-key="3883"> 
<span data-slate-object="text" data-key="3884"><span data-slate-leaf="true" data-offset-key="3884:0" 
data-first-offset="true"><span data-slate-string="true">在之前的课程中，我们讲过类似的概念，一般来说，这种可以相互转换的信息，叫做等价信息表示。说白了就是信息一点儿也没少，只是换了一种表示形式。要想理解 
Shift-And 算法，首先就要理解这种等价的信息表示方法。</span></span></span> </div> <h4 class="se-f5ae64d1" data-slate-type="heading" 
data-slate-object="block" data-key="3885"><span data-slate-object="text" data-key="3886"><span 
data-slate-leaf="true" data-offset-key="3886:0" data-first-offset="true"><span data-slate-string="true">2. 
利用位运算做匹配</span></span></span></h4> <div class="se-27e15f0d " data-slate-type="paragraph" data-slate-object="block" 
data-key="3887"> <span data-slate-object="text" data-key="3888"><span data-slate-leaf="true" 
data-offset-key="3888:0" data-first-offset="true"><span data-slate-string="true">讲完了信息转换步骤后，我们明确了一个事情，就是 
Shift-And 算法中，只是对模式串做了信息转换，但对文本串本质内容没有做任何改动。接下来，我们就来讲解 Shift-And 算法中的 And 部分，也就是来回答 Shift-And 
算法，究竟是怎么用位运算来做字符串匹配的。先看下图：</span></span></span> </div> <div class="se-074e4c95" data-slate-type="image" 
data-slate-object="block" data-key="3889"> <img class="se-fb8d1f21" src="https://static001.geekbang.org/resource/image/12/b4/1293af0c4e3ce6a29bfe681603f19cb4.jpg"> 
<div class="se-5c01c883"> 图3： Shift-And匹配流程的关键因素 </div> </div> <div class="se-65b05342 " data-slate-type="paragraph" 
data-slate-object="block" data-key="3890"> <span data-slate-object="text" data-key="3891"><span 
data-slate-leaf="true" data-offset-key="3891:0" data-first-offset="true"><span data-slate-string="true">在图中，有一个最关键的，就是 
</span></span></span><span data-slate-object="text" data-key="3892"><span data-slate-leaf="true" 
data-offset-key="3892:0" data-first-offset="true"><span class="se-76e4c8eb" data-slate-type="bold" 
data-slate-object="mark"><span data-slate-string="true">p 变量，它是整个匹配过程的核心变量</span></span></span></span><span 
data-slate-object="text" data-key="3893"><span data-slate-leaf="true" data-offset-key="3893:0" 
data-first-offset="true"><span data-slate-string="true">。我们假设模式串的长度是 m ，code(str[i]) 代表了文本串第 
i 位字符的编码，编码方式前面已经介绍过了。整个匹配过程，从前往后，依次处理文本串的每一位，处理到第 i 位的时候，就是用第 i 位字符的编码（code（str[i])），与 p 左移 
1 位并或上 1 以后的值（p&lt;&lt; 1 | 1），做“按位与”运算，把得到的值赋给 p 变量。最终，当 p 的二进制表示的第 m 位为 1 时，说明匹配成功了。</span></span></span> 
</div> <div class="se-f4d2d348 " data-slate-type="paragraph" data-slate-object="block" data-key="3894"> 
<span data-slate-object="text" data-key="3895"><span data-slate-leaf="true" data-offset-key="3895:0" 
data-first-offset="true"><span data-slate-string="true">为了帮助你理解，我给你准备了一个具体示例，下图是模拟了当模式串为 cdd，文本串为 
acdd 时候的匹配流程：</span></span></span> </div> <div class="se-08f15fe6" data-slate-type="image" 
data-slate-object="block" data-key="3896"> <img class="se-c6528aeb" src="https://static001.geekbang.org/resource/image/4f/e4/4fbf1d8708304abf3359fa933f90cfe4.jpg"> 
<div class="se-2f7d2d2d"> 图4： Shift-And匹配流程示意图 </div> </div> <div class="se-0fd9b47f " data-slate-type="paragraph" 
data-slate-object="block" data-key="3897"> <span data-slate-object="text" data-key="3898"><span 
data-slate-leaf="true" data-offset-key="3898:0" data-first-offset="true"><span data-slate-string="true">要想理解这个匹配过程，首先就是需要注意到 
，变量 p 在第四步的时候，二进制表示的第 3 位为 1 了，说明此时截止到文本串 acdd 的第 4 位为止，匹配到了原模式串 cdd。这个过程，你需要仔细的琢磨琢磨，然后再往下看。</span></span></span> 
</div> <div class="se-d9d0f64e " data-slate-type="paragraph" data-slate-object="block" data-key="3899"> 
<span data-slate-object="text" data-key="3900"><span data-slate-leaf="true" data-offset-key="3900:0" 
data-first-offset="true"><span data-slate-string="true">接下来我们来讨论一般情况下的 p 值，如果模式串长度为 m，那么在什么情况下，p 
值的第 m 位为 1 呢？</span></span></span> </div> <div class="se-918559f3 " data-slate-type="paragraph" 
data-slate-object="block" data-key="3901"> <span data-slate-object="text" data-key="3902"><span 
data-slate-leaf="true" data-offset-key="3902:0" data-first-offset="true"><span data-slate-string="true">由算法中的 
p 值计算公式可知，</span></span></span><span data-slate-object="text" data-key="3903"><span data-slate-leaf="true" 
data-offset-key="3903:0" data-first-offset="true"><span class="se-c430c980" data-slate-type="bold" 
data-slate-object="mark"><span data-slate-string="true">p 是由“按位与”操作得到的值</span></span></span></span><span 
data-slate-object="text" data-key="3904"><span data-slate-leaf="true" data-offset-key="3904:0" 
data-first-offset="true"><span data-slate-string="true">，也就是说，其中一部分 code(str[i]) 的二进制的第 m 位必须为 
1，这就意味着 str[i] 是模式串第 m 位的字符。并且为了 p 值的第 m 位为 1，按位与的另一边 (p &lt;&lt; 1 | 1) 这个值的第 m 位也必须是 1。</span></span></span> 
</div> <div class="se-b5994123 " data-slate-type="paragraph" data-slate-object="block" data-key="3905"> 
<span data-slate-object="text" data-key="3906"><span data-slate-leaf="true" data-offset-key="3906:0" 
data-first-offset="true"><span data-slate-string="true">关于 (p &lt;&lt; 1 | 1) 这一部分中，或 1 操作，只能影响二进制的最低位，我们可以暂时忽略它。关键就是理解 
p &lt;&lt; 1 这个操作，左移以后的第 m 位为 1，说明左移之前，p 的二进制表示的 m - 1 位也是 1。</span></span></span> </div> <div 
class="se-d2e1979a " data-slate-type="paragraph" data-slate-object="block" data-key="3907"> 
<span data-slate-object="text" data-key="3908"><span data-slate-leaf="true" data-offset-key="3908:0" 
data-first-offset="true"><span data-slate-string="true">通过分析上一轮 p 的二进制表示的 m - 1 位为什么是 1 时，你会推理得到 
str[i - 1] 必须是模式串 m - 1 位的字符。依次类推，你就会得到一个结论：文本串 str 的第 i - m 位，到第 i 位之间的字符串，其实就等于原模式串的内容。下面给你准备了一个示意图：</span></span></span> 
</div> <div class="se-249a9b58" data-slate-type="image" data-slate-object="block" data-key="3909"> 
<img class="se-8faf133a" src="https://static001.geekbang.org/resource/image/b3/09/b376fbe3c81bd4631dab4da7d0c8fb09.jpg"> 
<div class="se-27bd85b7"> 图5： p 公式的理解与推导 </div> </div> <div class="se-c4852a42 " data-slate-type="paragraph" 
data-slate-object="block" data-key="3910"> <span data-slate-object="text" data-key="3911"><span 
data-slate-leaf="true" data-offset-key="3911:0" data-first-offset="true"><span data-slate-string="true">其中 
</span></span></span><span class="se-4dbc7a92 se-2b50b467" data-slate-type="inline-katex" data-slate-object="inline" 
data-key="3912"><span data-slate-leaf="true"><span data-slate-string="true" class="katex"><span 
class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span 
class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t 
vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span 
class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span 
class="mord mathdefault mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span 
class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></span><span 
data-slate-object="text" data-key="3914"><span data-slate-leaf="true" data-offset-key="3914:0" 
data-first-offset="true"><span data-slate-string="true"> 代表 p 的二进制表示的第 m 位为 1，</span></span></span><span 
class="se-4dbc7a92 se-2b50b467" data-slate-type="inline-katex" data-slate-object="inline" data-key="3915"><span 
data-slate-leaf="true"><span data-slate-string="true" class="katex"><span class="katex-html" 
aria-hidden="true"><span class="base"><span class="strut" style="height:0.638891em;vertical-align:-0.208331em;"></span><span 
class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t 
vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span 
class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span 
class="mord mtight"><span class="mord mathdefault mtight">m</span><span class="mbin mtight">−</span><span 
class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span 
class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span></span></span></span></span></span><span 
data-slate-object="text" data-key="3917"><span data-slate-leaf="true" data-offset-key="3917:0" 
data-first-offset="true"><span data-slate-string="true"> 表示 p 的二进制表示的第 m-1 位为 1。因为只有第 m-1 位为 
1，才可能左移 1 位以后的结果第 m 位为 1。</span></span></span> </div> <div class="se-a36f818c " data-slate-type="paragraph" 
data-slate-object="block" data-key="3918"> <span data-slate-object="text" data-key="3919"><span 
data-slate-leaf="true" data-offset-key="3919:0" data-first-offset="true"><span data-slate-string="true">最后我们来解释一下，为什么 
p 左移 1 位以后，还需要或上一个 1 。其实也很好理解，如果 str[i] 是模式串的第 0 位字符，那么 p 在什么情况下，第 0 位是 1 ？你会发现，根据之前推理，只有在上一个状态 
p 的 -1 位为 1 的时候，左移以后第 0 位才可能是 1。</span></span></span> </div> <div class="se-813bc7a3 " data-slate-type="paragraph" 
data-slate-object="block" data-key="3920"> <span data-slate-object="text" data-key="3921"><span 
data-slate-leaf="true" data-offset-key="3921:0" data-first-offset="true"><span data-slate-string="true">但我们知道，根本没有 
-1 位这个位置，也就是说，如果不看或 1 操作的话，一个初值为 0 的 p 变量，想通过单纯的左移操作，第 0 位永远不可能是 1。所以这个或 1 操作，其实就是为了使得 p 左移以后的第 
0 位永远置为 1，而最终计算结果中的第 0 位是否为 1，这个要看 str[i] 这个字符是否在模式串的第 0 位出现过。</span></span></span> </div> 
<div class="se-6fa5e61b " data-slate-type="paragraph" data-slate-object="block" data-key="3922"> 
<span data-slate-object="text" data-key="3923"><span data-slate-leaf="true" data-offset-key="3923:0" 
data-first-offset="true"><span data-slate-string="true">关于 Shift-And 算法这个知识点呢，我大致解释完了。你在学习这块知识的时候，可能感觉有点难，没准读完第一遍的时候，脑子都是懵的。但请相信我，也相信你自己，把这几段内容多看几遍，遇到不理解的句子，停下来多思考思考，看的次数多了，你就明白是什么意思了。</span></span></span> 
</div> <div class="se-9effaaa9 " data-slate-type="paragraph" data-slate-object="block" data-key="3924"> 
<span data-slate-object="text" data-key="3925"><span data-slate-leaf="true" data-offset-key="3925:0" 
data-first-offset="true"><span data-slate-string="true">至此呢，我们就学习完了 Shift-And 算法的两个重要的过程。代码实现呢，如下所示：</span></span></span> 
</div> <div class="se-ce5efb16 se-72db5e5c" data-slate-type="pre" data-slate-object="block" 
data-key="3926" data-code-language="cpp"> <div class="se-9ac4dc4a se-c6e8b2b4"> <span></span> 
</div> <div class="se-485c97ab"> <div class="se-fc9cf650 se-ba410aef" data-code-line-number="1"></div> 
<div class="se-fc9cf650 se-ba410aef" data-code-line-number="2"></div> <div class="se-fc9cf650 
se-ba410aef" data-code-line-number="3"></div> <div class="se-fc9cf650 se-ba410aef" data-code-line-number="4"></div> 
<div class="se-fc9cf650 se-ba410aef" data-code-line-number="5"></div> <div class="se-fc9cf650 
se-ba410aef" data-code-line-number="6"></div> <div class="se-fc9cf650 se-ba410aef" data-code-line-number="7"></div> 
<div class="se-fc9cf650 se-ba410aef" data-code-line-number="8"></div> <div class="se-fc9cf650 
se-ba410aef" data-code-line-number="9"></div> <div class="se-fc9cf650 se-ba410aef" data-code-line-number="10"></div> 
<div class="se-fc9cf650 se-ba410aef" data-code-line-number="11"></div> <div class="se-fc9cf650 
se-ba410aef" data-code-line-number="12"></div> <div class="se-fc9cf650 se-ba410aef" data-code-line-number="13"></div> 
<div class="se-fc9cf650 se-ba410aef" data-code-line-number="14"></div> </div> <div class="se-d5b4398c 
ps ps--active-x"> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" data-slate-object="block" 
data-key="3927"> <span data-slate-object="text" data-key="3928"><span data-slate-leaf="true" 
data-offset-key="3928:0" data-first-offset="true"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_0506392692" data-annotation-type="annotation"><span class=" gkhl-function" 
data-slate-object="annotation" data-annotation-key="gkann_4115359548" data-annotation-type="annotation"><span 
data-slate-string="true">int</span></span></span></span><span data-slate-leaf="true" data-offset-key="3928:1"><span 
class=" gkhl-function" data-slate-object="annotation" data-annotation-key="gkann_4115359548" 
data-annotation-type="annotation"><span data-slate-string="true"> </span></span></span><span 
data-slate-leaf="true" data-offset-key="3928:2"><span class=" gkhl-title" data-slate-object="annotation" 
data-annotation-key="gkann_4489598637" data-annotation-type="annotation"><span class=" gkhl-function" 
data-slate-object="annotation" data-annotation-key="gkann_4115359548" data-annotation-type="annotation"><span 
data-slate-string="true">shift_and</span></span></span></span><span data-slate-leaf="true" 
data-offset-key="3928:3"><span class=" gkhl-params" data-slate-object="annotation" data-annotation-key="gkann_8610176361" 
data-annotation-type="annotation"><span class=" gkhl-function" data-slate-object="annotation" 
data-annotation-key="gkann_4115359548" data-annotation-type="annotation"><span data-slate-string="true">(const 
char *str, const char *p_str)</span></span></span></span><span data-slate-leaf="true" data-offset-key="3928:4"><span 
class=" gkhl-function" data-slate-object="annotation" data-annotation-key="gkann_4115359548" 
data-annotation-type="annotation"><span data-slate-string="true"> </span></span></span><span 
data-slate-leaf="true" data-offset-key="3928:5"><span data-slate-string="true">{</span></span></span> 
</div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" data-slate-object="block" 
data-key="3929"> <span data-slate-object="text" data-key="3930"><span data-slate-leaf="true" 
data-offset-key="3930:0" data-first-offset="true"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="3930:1"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_9167520404" data-annotation-type="annotation"><span data-slate-string="true">int</span></span></span><span 
data-slate-leaf="true" data-offset-key="3930:2"><span data-slate-string="true"> code[</span></span><span 
data-slate-leaf="true" data-offset-key="3930:3"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_8259636517" data-annotation-type="annotation"><span data-slate-string="true">256</span></span></span><span 
data-slate-leaf="true" data-offset-key="3930:4"><span data-slate-string="true">] = {</span></span><span 
data-slate-leaf="true" data-offset-key="3930:5"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_1103013388" data-annotation-type="annotation"><span data-slate-string="true">0</span></span></span><span 
data-slate-leaf="true" data-offset-key="3930:6"><span data-slate-string="true">}, m = </span></span><span 
data-slate-leaf="true" data-offset-key="3930:7"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_3628218349" data-annotation-type="annotation"><span data-slate-string="true">0</span></span></span><span 
data-slate-leaf="true" data-offset-key="3930:8"><span data-slate-string="true">;</span></span></span> 
</div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" data-slate-object="block" 
data-key="3931"> <span data-slate-object="text" data-key="3932"><span data-slate-leaf="true" 
data-offset-key="3932:0" data-first-offset="true"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="3932:1"><span class=" gkhl-comment" data-slate-object="annotation" 
data-annotation-key="gkann_1920000331" data-annotation-type="annotation"><span data-slate-string="true">// 
初始化每一个字符的编码</span></span></span></span> </div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" 
data-slate-object="block" data-key="3933"> <span data-slate-object="text" data-key="3934"><span 
data-slate-leaf="true" data-offset-key="3934:0" data-first-offset="true"><span data-slate-string="true"> 
</span></span><span data-slate-leaf="true" data-offset-key="3934:1"><span class=" gkhl-keyword" 
data-slate-object="annotation" data-annotation-key="gkann_5292835146" data-annotation-type="annotation"><span 
data-slate-string="true">for</span></span></span><span data-slate-leaf="true" data-offset-key="3934:2"><span 
data-slate-string="true"> (</span></span><span data-slate-leaf="true" data-offset-key="3934:3"><span 
class=" gkhl-keyword" data-slate-object="annotation" data-annotation-key="gkann_1101759999" 
data-annotation-type="annotation"><span data-slate-string="true">int</span></span></span><span 
data-slate-leaf="true" data-offset-key="3934:4"><span data-slate-string="true"> i = </span></span><span 
data-slate-leaf="true" data-offset-key="3934:5"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_2856208353" data-annotation-type="annotation"><span data-slate-string="true">0</span></span></span><span 
data-slate-leaf="true" data-offset-key="3934:6"><span data-slate-string="true">; p_str[i]; 
i++, m++) {</span></span></span> </div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" 
data-slate-object="block" data-key="3935"> <span data-slate-object="text" data-key="3936"><span 
data-slate-leaf="true" data-offset-key="3936:0" data-first-offset="true"><span data-slate-string="true"> 
code[p_str[i]] |= (</span></span><span data-slate-leaf="true" data-offset-key="3936:1"><span 
class=" gkhl-number" data-slate-object="annotation" data-annotation-key="gkann_1498294015" 
data-annotation-type="annotation"><span data-slate-string="true">1</span></span></span><span 
data-slate-leaf="true" data-offset-key="3936:2"><span data-slate-string="true"> &lt;&lt; i);</span></span></span> 
</div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" data-slate-object="block" 
data-key="3937"> <span data-slate-object="text" data-key="3938"><span data-slate-leaf="true" 
data-offset-key="3938:0" data-first-offset="true"><span data-slate-string="true"> }</span></span></span> 
</div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" data-slate-object="block" 
data-key="3939"> <span data-slate-object="text" data-key="3940"><span data-slate-leaf="true" 
data-offset-key="3940:0" data-first-offset="true"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="3940:1"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_8446690857" data-annotation-type="annotation"><span data-slate-string="true">int</span></span></span><span 
data-slate-leaf="true" data-offset-key="3940:2"><span data-slate-string="true"> p = </span></span><span 
data-slate-leaf="true" data-offset-key="3940:3"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_1186041169" data-annotation-type="annotation"><span data-slate-string="true">0</span></span></span><span 
data-slate-leaf="true" data-offset-key="3940:4"><span data-slate-string="true">;</span></span></span> 
</div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" data-slate-object="block" 
data-key="3941"> <span data-slate-object="text" data-key="3942"><span data-slate-leaf="true" 
data-offset-key="3942:0" data-first-offset="true"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="3942:1"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_3857090032" data-annotation-type="annotation"><span data-slate-string="true">for</span></span></span><span 
data-slate-leaf="true" data-offset-key="3942:2"><span data-slate-string="true"> (</span></span><span 
data-slate-leaf="true" data-offset-key="3942:3"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_7719102487" data-annotation-type="annotation"><span data-slate-string="true">int</span></span></span><span 
data-slate-leaf="true" data-offset-key="3942:4"><span data-slate-string="true"> i = </span></span><span 
data-slate-leaf="true" data-offset-key="3942:5"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_2671379908" data-annotation-type="annotation"><span data-slate-string="true">0</span></span></span><span 
data-slate-leaf="true" data-offset-key="3942:6"><span data-slate-string="true">; str[i]; i++) 
{</span></span></span> </div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" 
data-slate-object="block" data-key="3943"> <span data-slate-object="text" data-key="3944"><span 
data-slate-leaf="true" data-offset-key="3944:0" data-first-offset="true"><span data-slate-string="true"> 
p = (p &lt;&lt; </span></span><span data-slate-leaf="true" data-offset-key="3944:1"><span class=" 
gkhl-number" data-slate-object="annotation" data-annotation-key="gkann_6321265263" data-annotation-type="annotation"><span 
data-slate-string="true">1</span></span></span><span data-slate-leaf="true" data-offset-key="3944:2"><span 
data-slate-string="true"> | </span></span><span data-slate-leaf="true" data-offset-key="3944:3"><span 
class=" gkhl-number" data-slate-object="annotation" data-annotation-key="gkann_2372419968" 
data-annotation-type="annotation"><span data-slate-string="true">1</span></span></span><span 
data-slate-leaf="true" data-offset-key="3944:4"><span data-slate-string="true">) &amp; code[str[i]];</span></span></span> 
</div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" data-slate-object="block" 
data-key="3945"> <span data-slate-object="text" data-key="3946"><span data-slate-leaf="true" 
data-offset-key="3946:0" data-first-offset="true"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="3946:1"><span class=" gkhl-comment" data-slate-object="annotation" 
data-annotation-key="gkann_5229419557" data-annotation-type="annotation"><span data-slate-string="true">// 
如果 p 所对应的模式串最高位为1，代表匹配成功</span></span></span></span> </div> <div class="se-03eefeec se-2642b266" 
data-slate-type="code-line" data-slate-object="block" data-key="3947"> <span data-slate-object="text" 
data-key="3948"><span data-slate-leaf="true" data-offset-key="3948:0" data-first-offset="true"><span 
data-slate-string="true"> </span></span><span data-slate-leaf="true" data-offset-key="3948:1"><span 
class=" gkhl-keyword" data-slate-object="annotation" data-annotation-key="gkann_3254862980" 
data-annotation-type="annotation"><span data-slate-string="true">if</span></span></span><span 
data-slate-leaf="true" data-offset-key="3948:2"><span data-slate-string="true"> (p &amp; (</span></span><span 
data-slate-leaf="true" data-offset-key="3948:3"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_3134024753" data-annotation-type="annotation"><span data-slate-string="true">1</span></span></span><span 
data-slate-leaf="true" data-offset-key="3948:4"><span data-slate-string="true"> &lt;&lt; (m 
- </span></span><span data-slate-leaf="true" data-offset-key="3948:5"><span class=" gkhl-number" 
data-slate-object="annotation" data-annotation-key="gkann_5395471529" data-annotation-type="annotation"><span 
data-slate-string="true">1</span></span></span><span data-slate-leaf="true" data-offset-key="3948:6"><span 
data-slate-string="true">))) </span></span><span data-slate-leaf="true" data-offset-key="3948:7"><span 
class=" gkhl-keyword" data-slate-object="annotation" data-annotation-key="gkann_7659249958" 
data-annotation-type="annotation"><span data-slate-string="true">return</span></span></span><span 
data-slate-leaf="true" data-offset-key="3948:8"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="3948:9"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_2821066404" data-annotation-type="annotation"><span data-slate-string="true">1</span></span></span><span 
data-slate-leaf="true" data-offset-key="3948:10"><span data-slate-string="true">;</span></span></span> 
</div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" data-slate-object="block" 
data-key="3949"> <span data-slate-object="text" data-key="3950"><span data-slate-leaf="true" 
data-offset-key="3950:0" data-first-offset="true"><span data-slate-string="true"> }</span></span></span> 
</div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" data-slate-object="block" 
data-key="3951"> <span data-slate-object="text" data-key="3952"><span data-slate-leaf="true" 
data-offset-key="3952:0" data-first-offset="true"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="3952:1"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_3294850363" data-annotation-type="annotation"><span data-slate-string="true">return</span></span></span><span 
data-slate-leaf="true" data-offset-key="3952:2"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="3952:3"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_6460231674" data-annotation-type="annotation"><span data-slate-string="true">0</span></span></span><span 
data-slate-leaf="true" data-offset-key="3952:4"><span data-slate-string="true">;</span></span></span> 
</div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" data-slate-object="block" 
data-key="3953"> <span data-slate-object="text" data-key="3954"><span data-slate-leaf="true" 
data-offset-key="3954:0" data-first-offset="true"><span data-slate-string="true">}</span></span></span> 
</div> <div class="ps__rail-x" style="width: 365px; left: 0px; bottom: 0px;"> <div class="ps__thumb-x" 
tabindex="0" style="left: 0px; width: 334px;"></div> </div> <div class="ps__rail-y" style="top: 
0px; right: 0px;"> <div class="ps__thumb-y" tabindex="0" style="top: 0px; height: 0px;"></div> 
</div> </div> </div> <div class="se-b6cbd7bf " data-slate-type="paragraph" data-slate-object="block" 
data-key="3955"> <span data-slate-object="text" data-key="3956"><span data-slate-leaf="true" 
data-offset-key="3956:0" data-first-offset="true"><span data-slate-string="true">在这份代码中，你会发现我们只用了两次循环，注意！是两次循环，而不是两层循环。一次循环是遍历模式串，生成编码 
code 信息，第二次循环是遍历文本串 str，循环迭代得到 p 变量的值，直到 p 变量的第 m 位为 1 时，就代表匹配成功。</span></span></span> </div> 
<div class="se-9b888daf " data-slate-type="paragraph" data-slate-object="block" data-key="3957"> 
<span data-slate-object="text" data-key="3958"><span data-slate-leaf="true" data-offset-key="3958:0" 
data-first-offset="true"><span data-slate-string="true">可以看到，这种算法的时间复杂度，和暴力匹配算法比起来，提升的不是一星半点。暴力算法是 
O(nm) 的，而 Shift-And 算法的时间复杂度就是 O(n + m) 的。也就意味着，同样是文本串 10000 的长度，模式串 1000 长度，Shift-And 算法，是暴力匹配算法效率的 
1000 倍！</span></span></span> </div> <h2 class="se-7142c45e" data-slate-type="heading" data-slate-object="block" 
data-key="3959"><span data-slate-object="text" data-key="3960"><span data-slate-leaf="true" 
data-offset-key="3960:0" data-first-offset="true"><span data-slate-string="true">改进 Shift-And 
算法</span></span></span></h2> <div class="se-7f178578 " data-slate-type="paragraph" data-slate-object="block" 
data-key="3961"> <span data-slate-object="text" data-key="3962"><span data-slate-leaf="true" 
data-offset-key="3962:0" data-first-offset="true"><span data-slate-string="true">说是 1000 倍，细心的你可能会发现一个问题，上述算法中的 
p 变量，是一个整型变量，也就是说，p 变量最多支持，模式串长度不超过 32 位的单模匹配问题。</span></span></span> </div> <div class="se-7434c955 
" data-slate-type="paragraph" data-slate-object="block" data-key="3963"> <span data-slate-object="text" 
data-key="3964"><span data-slate-leaf="true" data-offset-key="3964:0" data-first-offset="true"><span 
data-slate-string="true">请你想想，这个问题究竟是出在算法上，还是出在数据结构上？答案很显然，是出在数据结构上。要是有一种数据结构，支持很大的二进制整数表示，同时在这种结构的数据上，还可以操作左移、或运算以及按位与运算的话，这种结构就可以取代原有整型 
p 变量的作用。这样，我们就可以支持长度更长的模式串的匹配问题了！</span></span></span> </div> <div class="se-9bd1f493 " data-slate-type="paragraph" 
data-slate-object="block" data-key="3965"> <span data-slate-object="text" data-key="3966"><span 
data-slate-leaf="true" data-offset-key="3966:0" data-first-offset="true"><span data-slate-string="true">所以今天给你留得作业呢，就是请你在尽量不修改算法流程的情况下，增加一个类型结构，实现可以处理 
1000 位模式串的 Shift-And 算法。欢迎你把自己的答案写在留言区，我们一起来讨论实现方法。</span></span></span> </div> <h2 class="se-2058264c" 
data-slate-type="heading" data-slate-object="block" data-key="3967"><span data-slate-object="text" 
data-key="3968"><span data-slate-leaf="true" data-offset-key="3968:0" data-first-offset="true"><span 
data-slate-string="true">课程小结</span></span></span></h2> <div class="se-b9e4d09a " data-slate-type="paragraph" 
data-slate-object="block" data-key="3969"> <span data-slate-object="text" data-key="3970"><span 
data-slate-leaf="true" data-offset-key="3970:0" data-first-offset="true"><span data-slate-string="true">通过今天这堂课呢，我希望你彻底体会到，算法和数据结构是程序设计的两个部分，并且它们可以单独来进行学习、设计和实现。</span></span></span> 
</div> <div class="se-8c2a5147 " data-slate-type="paragraph" data-slate-object="block" data-key="3971"> 
<span data-slate-object="text" data-key="3972"><span data-slate-leaf="true" data-offset-key="3972:0" 
data-first-offset="true"><span data-slate-string="true">如果说，今天想让你记住点儿什么的话，那就是：</span></span></span><span 
data-slate-object="text" data-key="3973"><span data-slate-leaf="true" data-offset-key="3973:0" 
data-first-offset="true"><span class="se-7681ddf4" data-slate-type="bold" data-slate-object="mark"><span 
data-slate-string="true">等价信息表示对于解决问题很重要</span></span></span></span><span data-slate-object="text" 
data-key="3974"><span data-slate-leaf="true" data-offset-key="3974:0" data-first-offset="true"><span 
data-slate-string="true">。这个事情不止是对于程序设计而言，很多事情都是这样。同等的信息，不同的表示形式，其实就是不同的观察角度，最终的效果也会截然不同。就像今天的 
Shift-And 算法，对于模式串的信息，做了一个等价转换以后，整个算法的时间复杂度就被优化了一个数量级，这个过程值得你花时间去仔细体会。</span></span></span> 
</div> <div class="se-54c48ceb " data-slate-type="paragraph" data-slate-object="block" data-key="3975"> 
<span data-slate-object="text" data-key="3976"><span data-slate-leaf="true" data-offset-key="3976:0" 
data-first-offset="true"><span data-slate-string="true">本节课，也是我们整个“编码能力训练篇”的最后一节了，我希望你通过这部分知识的学习，掌握计算思维，以及程序设计的核心法门。下一章节，我不再赘述算法和数据结构的重要性，而是请你带着在“编码能力训练篇”掌握的技巧，随我进入“算法与数据结构篇”的学习吧！</span></span></span> 
</div> <div class="se-341b95fc " data-slate-type="paragraph" data-slate-object="block" data-key="3977"> 
<span data-slate-object="text" data-key="3978"><span data-slate-leaf="true" data-offset-key="3978:0" 
data-first-offset="true"><span data-slate-string="true">好了，今天就到这里了，我是胡光，我们下章见。</span></span></span> 
</div> </div>', body_summary='', bundle='book', delta=0, body_format='full_html', langcode='zh-hans', 
revision_id=755 where entity_id=755 
 {executed in 1 msec}
2020-11-24 18:08:15.160 INFO  jdbc.sqltiming Line:373 - update node_revision__body set body_value='<div data-slate-editor="true" data-key="3791" autocorrect="off" 
spellcheck="false" data-gramm="false" style="outline: none; white-space: pre-wrap; overflow-wrap: 
break-word;"> <div class="se-65613535 " data-slate-type="paragraph" data-slate-object="block" 
data-key="3792"> <span data-slate-object="text" data-key="3793"><span data-slate-leaf="true" 
data-offset-key="3793:0" data-first-offset="true"><span data-slate-string="true">你好，我是胡光，咱们又见面了。</span></span></span> 
</div> <div class="se-4b031c55 " data-slate-type="paragraph" data-slate-object="block" data-key="3794"> 
<span data-slate-object="text" data-key="3795"><span data-slate-leaf="true" data-offset-key="3795:0" 
data-first-offset="true"><span data-slate-string="true">上节课呢，我们讲了大整数表示法的相关知识，并且给你演示了大整数加法及乘法处理过程。其实，你是否掌握了大整数表示法是次要的，主要是你可以在这个过程中，认识到数据结构的作用，也就是我强调的</span></span></span><span 
data-slate-object="text" data-key="3796"><span data-slate-leaf="true" data-offset-key="3796:0" 
data-first-offset="true"><span class="se-b84ad990" data-slate-type="bold" data-slate-object="mark"><span 
data-slate-string="true">数据结构就是负责表示数据</span></span></span></span><span data-slate-object="text" 
data-key="3797"><span data-slate-leaf="true" data-offset-key="3797:0" data-first-offset="true"><span 
data-slate-string="true">。</span></span></span> </div> <div class="se-0d22f971 " data-slate-type="paragraph" 
data-slate-object="block" data-key="3798"> <span data-slate-object="text" data-key="3799"><span 
data-slate-leaf="true" data-offset-key="3799:0" data-first-offset="true"><span data-slate-string="true">原先，我们之所以无法做较大整数的运算，那是因为我们所掌握的数据类型，无法表示很大的数字，有了大整数表示法以后，我们就可以做特别特别大的整数表示了。</span></span></span> 
</div> <div class="se-e9ae1069 " data-slate-type="paragraph" data-slate-object="block" data-key="3800"> 
<span data-slate-object="text" data-key="3801"><span data-slate-leaf="true" data-offset-key="3801:0" 
data-first-offset="true"><span data-slate-string="true">我之前也一直在说，算法是做数据计算的，它和数据结构是程序设计中，非常重要的两部分。既然是两部分，说明</span></span></span><span 
data-slate-object="text" data-key="3802"><span data-slate-leaf="true" data-offset-key="3802:0" 
data-first-offset="true"><span class="se-43284917" data-slate-type="bold" data-slate-object="mark"><span 
data-slate-string="true">算法和数据结构可以独立分开设计</span></span></span></span><span data-slate-object="text" 
data-key="3803"><span data-slate-leaf="true" data-offset-key="3803:0" data-first-offset="true"><span 
data-slate-string="true">。</span></span></span> </div> <div class="se-aa6eb03d " data-slate-type="paragraph" 
data-slate-object="block" data-key="3804"> <span data-slate-object="text" data-key="3805"><span 
data-slate-leaf="true" data-offset-key="3805:0" data-first-offset="true"><span data-slate-string="true">关于这点呢，你可以想想上节课我们学的大整数加法，它其实就是算法。为什么这么说呢？你想想，这个加法过程难道是有了大整数以后，才出现的么？显然不是，即使没有大整数表示法，我们还是了解加法过程的，只不过这一次我们用大整数表示法，模拟了加法过程。注意，加法过程是一个独立的算法过程。</span></span></span> 
</div> <div class="se-44ce3b92 " data-slate-type="paragraph" data-slate-object="block" data-key="3806"> 
<span data-slate-object="text" data-key="3807"><span data-slate-leaf="true" data-offset-key="3807:0" 
data-first-offset="true"><span data-slate-string="true">总而言之，就是在之前的课程中，我们确定了几点结论：如果是计算流程不合理，我们需要改进算法，如果是数据表示受限，我们需要求助于数据结构。</span></span></span> 
</div> <div class="se-4c578474 " data-slate-type="paragraph" data-slate-object="block" data-key="3808"> 
<span data-slate-object="text" data-key="3809"><span data-slate-leaf="true" data-offset-key="3809:0" 
data-first-offset="true"><span data-slate-string="true">为了让你更清晰地认识到，算法和数据结构是两个可以独立设计的部分，今天我们通过一个具体的算法，来感受一下这个独立设计的过程。</span></span></span> 
</div> <h2 class="se-78730ade" data-slate-type="heading" data-slate-object="block" data-key="3810"><span 
data-slate-object="text" data-key="3811"><span data-slate-leaf="true" data-offset-key="3811:0" 
data-first-offset="true"><span data-slate-string="true">字符串匹配问题</span></span></span></h2> <div 
class="se-61c6c935 " data-slate-type="paragraph" data-slate-object="block" data-key="3812"> 
<span data-slate-object="text" data-key="3813"><span data-slate-leaf="true" data-offset-key="3813:0" 
data-first-offset="true"><span data-slate-string="true">首先让我们来了解一个概念，那就是“字符串匹配问题”。什么意思呢？简单来说，就是在一个大的字符串里面，查找是否包含另外一个较小的字符串。</span></span></span> 
</div> <div class="se-25f860b0" data-slate-type="image" data-slate-object="block" data-key="3814"> 
<img class="se-1db9a472" src="https://static001.geekbang.org/resource/image/90/23/905e0c01811e78d0bb009e49b3be7e23.jpg"> 
<div class="se-d14c5203"> 图1： 字符串匹配问题 </div> </div> <div class="se-9c82018c " data-slate-type="paragraph" 
data-slate-object="block" data-key="3815"> <span data-slate-object="text" data-key="3816"><span 
data-slate-leaf="true" data-offset-key="3816:0" data-first-offset="true"><span data-slate-string="true">如图所示，我们做的就是在字符串 
cjakjoek 中，查找是否包含字符串 kjo，其中，我们把这个 cjakjoek 字符串叫做文本串，kjo 字符串叫做模式串。再举个例子，你手中有一篇英文文档，你想在这个文档中查找所有的 
hello 单词。那么，英文文档就是我们所说的文本串，hello 就是模式串。</span></span></span> </div> <div class="se-7f51124b 
" data-slate-type="paragraph" data-slate-object="block" data-key="3817"> <span data-slate-object="text" 
data-key="3818"><span data-slate-leaf="true" data-offset-key="3818:0" data-first-offset="true"><span 
data-slate-string="true">如果模式串是单独的一个，我们就称这种问题为“单模匹配问题”，如果模式串是多个，那就是“多模匹配问题”。我们今天重点讨论的是“单模匹配问题”。</span></span></span> 
</div> <div class="se-71c5fe40 " data-slate-type="paragraph" data-slate-object="block" data-key="3819"> 
<span data-slate-object="text" data-key="3820"><span data-slate-leaf="true" data-offset-key="3820:0" 
data-first-offset="true"><span data-slate-string="true">如果给你一个文本串和模式串，让你查找文本串中是否包含模式串，你用程序怎么完成？最直观的做法，就是用模式串的首字母依次性的，和文本串中的每一位对齐，每次对齐以后，看看所对应区域是否匹配，如果匹配就说明文本串包含模式串。</span></span></span> 
</div> <div class="se-d3df6b09 " data-slate-type="paragraph" data-slate-object="block" data-key="3821"> 
<span data-slate-object="text" data-key="3822"><span data-slate-leaf="true" data-offset-key="3822:0" 
data-first-offset="true"><span data-slate-string="true">下面我给出这个方法的程序代码：</span></span></span> 
</div> <div class="se-93ff1577 se-633b951c" data-slate-type="pre" data-slate-object="block" 
data-key="3823" data-code-language="cpp"> <div class="se-10e224e0 se-455e15b7"> <span></span> 
</div> <div class="se-c5dd803a"> <div class="se-23607d02 se-7c9ce428" data-code-line-number="1"></div> 
<div class="se-23607d02 se-7c9ce428" data-code-line-number="2"></div> <div class="se-23607d02 
se-7c9ce428" data-code-line-number="3"></div> <div class="se-23607d02 se-7c9ce428" data-code-line-number="4"></div> 
<div class="se-23607d02 se-7c9ce428" data-code-line-number="5"></div> <div class="se-23607d02 
se-7c9ce428" data-code-line-number="6"></div> <div class="se-23607d02 se-7c9ce428" data-code-line-number="7"></div> 
<div class="se-23607d02 se-7c9ce428" data-code-line-number="8"></div> <div class="se-23607d02 
se-7c9ce428" data-code-line-number="9"></div> <div class="se-23607d02 se-7c9ce428" data-code-line-number="10"></div> 
<div class="se-23607d02 se-7c9ce428" data-code-line-number="11"></div> <div class="se-23607d02 
se-7c9ce428" data-code-line-number="12"></div> <div class="se-23607d02 se-7c9ce428" data-code-line-number="13"></div> 
<div class="se-23607d02 se-7c9ce428" data-code-line-number="14"></div> <div class="se-23607d02 
se-7c9ce428" data-code-line-number="15"></div> <div class="se-23607d02 se-7c9ce428" data-code-line-number="16"></div> 
</div> <div class="se-7c3da888 ps ps--active-x"> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" 
data-slate-object="block" data-key="3824"> <span data-slate-object="text" data-key="3825"><span 
data-slate-leaf="true" data-offset-key="3825:0" data-first-offset="true"><span class=" gkhl-comment" 
data-slate-object="annotation" data-annotation-key="gkann_3724232443" data-annotation-type="annotation"><span 
data-slate-string="true">// 暴力匹配算法程序</span></span></span></span> </div> <div class="se-03eefeec 
se-2642b266" data-slate-type="code-line" data-slate-object="block" data-key="3826"> <span data-slate-object="text" 
data-key="3827"><span data-slate-leaf="true" data-offset-key="3827:0" data-first-offset="true"><span 
class=" gkhl-function" data-slate-object="annotation" data-annotation-key="gkann_3517792984" 
data-annotation-type="annotation"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_8766044221" data-annotation-type="annotation"><span data-slate-string="true">int</span></span></span></span><span 
data-slate-leaf="true" data-offset-key="3827:1"><span class=" gkhl-function" data-slate-object="annotation" 
data-annotation-key="gkann_3517792984" data-annotation-type="annotation"><span data-slate-string="true"> 
</span></span></span><span data-slate-leaf="true" data-offset-key="3827:2"><span class=" gkhl-function" 
data-slate-object="annotation" data-annotation-key="gkann_3517792984" data-annotation-type="annotation"><span 
class=" gkhl-title" data-slate-object="annotation" data-annotation-key="gkann_0366082730" data-annotation-type="annotation"><span 
data-slate-string="true">bruce_force</span></span></span></span><span data-slate-leaf="true" 
data-offset-key="3827:3"><span class=" gkhl-function" data-slate-object="annotation" data-annotation-key="gkann_3517792984" 
data-annotation-type="annotation"><span class=" gkhl-params" data-slate-object="annotation" 
data-annotation-key="gkann_4835603932" data-annotation-type="annotation"><span data-slate-string="true">(const 
char *text, const char *p)</span></span></span></span><span data-slate-leaf="true" data-offset-key="3827:4"><span 
class=" gkhl-function" data-slate-object="annotation" data-annotation-key="gkann_3517792984" 
data-annotation-type="annotation"><span data-slate-string="true"> </span></span></span><span 
data-slate-leaf="true" data-offset-key="3827:5"><span data-slate-string="true">{</span></span></span> 
</div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" data-slate-object="block" 
data-key="3828"> <span data-slate-object="text" data-key="3829"><span data-slate-leaf="true" 
data-offset-key="3829:0" data-first-offset="true"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="3829:1"><span class=" gkhl-comment" data-slate-object="annotation" 
data-annotation-key="gkann_8350543517" data-annotation-type="annotation"><span data-slate-string="true">// 
遍历文本串每一位</span></span></span></span> </div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" 
data-slate-object="block" data-key="3830"> <span data-slate-object="text" data-key="3831"><span 
data-slate-leaf="true" data-offset-key="3831:0" data-first-offset="true"><span data-slate-string="true"> 
</span></span><span data-slate-leaf="true" data-offset-key="3831:1"><span class=" gkhl-keyword" 
data-slate-object="annotation" data-annotation-key="gkann_5956419415" data-annotation-type="annotation"><span 
data-slate-string="true">for</span></span></span><span data-slate-leaf="true" data-offset-key="3831:2"><span 
data-slate-string="true"> (</span></span><span data-slate-leaf="true" data-offset-key="3831:3"><span 
class=" gkhl-keyword" data-slate-object="annotation" data-annotation-key="gkann_3343320622" 
data-annotation-type="annotation"><span data-slate-string="true">int</span></span></span><span 
data-slate-leaf="true" data-offset-key="3831:4"><span data-slate-string="true"> i = </span></span><span 
data-slate-leaf="true" data-offset-key="3831:5"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_1614087121" data-annotation-type="annotation"><span data-slate-string="true">0</span></span></span><span 
data-slate-leaf="true" data-offset-key="3831:6"><span data-slate-string="true">; text[i]; i++) 
{</span></span></span> </div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" 
data-slate-object="block" data-key="3832"> <span data-slate-object="text" data-key="3833"><span 
data-slate-leaf="true" data-offset-key="3833:0" data-first-offset="true"><span data-slate-string="true"> 
</span></span><span data-slate-leaf="true" data-offset-key="3833:1"><span class=" gkhl-keyword" 
data-slate-object="annotation" data-annotation-key="gkann_1834403817" data-annotation-type="annotation"><span 
data-slate-string="true">int</span></span></span><span data-slate-leaf="true" data-offset-key="3833:2"><span 
data-slate-string="true"> flag = </span></span><span data-slate-leaf="true" data-offset-key="3833:3"><span 
class=" gkhl-number" data-slate-object="annotation" data-annotation-key="gkann_0231652223" 
data-annotation-type="annotation"><span data-slate-string="true">1</span></span></span><span 
data-slate-leaf="true" data-offset-key="3833:4"><span data-slate-string="true">;</span></span></span> 
</div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" data-slate-object="block" 
data-key="3834"> <span data-slate-object="text" data-key="3835"><span data-slate-leaf="true" 
data-offset-key="3835:0" data-first-offset="true"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="3835:1"><span class=" gkhl-comment" data-slate-object="annotation" 
data-annotation-key="gkann_9230697051" data-annotation-type="annotation"><span data-slate-string="true">// 
从文本串的第 i 位开始与模式串进行匹配</span></span></span></span> </div> <div class="se-03eefeec se-2642b266" 
data-slate-type="code-line" data-slate-object="block" data-key="3836"> <span data-slate-object="text" 
data-key="3837"><span data-slate-leaf="true" data-offset-key="3837:0" data-first-offset="true"><span 
data-slate-string="true"> </span></span><span data-slate-leaf="true" data-offset-key="3837:1"><span 
class=" gkhl-keyword" data-slate-object="annotation" data-annotation-key="gkann_5595891047" 
data-annotation-type="annotation"><span data-slate-string="true">for</span></span></span><span 
data-slate-leaf="true" data-offset-key="3837:2"><span data-slate-string="true"> (</span></span><span 
data-slate-leaf="true" data-offset-key="3837:3"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_6543968896" data-annotation-type="annotation"><span data-slate-string="true">int</span></span></span><span 
data-slate-leaf="true" data-offset-key="3837:4"><span data-slate-string="true"> j = </span></span><span 
data-slate-leaf="true" data-offset-key="3837:5"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_2321227930" data-annotation-type="annotation"><span data-slate-string="true">0</span></span></span><span 
data-slate-leaf="true" data-offset-key="3837:6"><span data-slate-string="true">; p[j]; j++) 
{</span></span></span> </div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" 
data-slate-object="block" data-key="3838"> <span data-slate-object="text" data-key="3839"><span 
data-slate-leaf="true" data-offset-key="3839:0" data-first-offset="true"><span data-slate-string="true"> 
</span></span><span data-slate-leaf="true" data-offset-key="3839:1"><span class=" gkhl-keyword" 
data-slate-object="annotation" data-annotation-key="gkann_9529809524" data-annotation-type="annotation"><span 
data-slate-string="true">if</span></span></span><span data-slate-leaf="true" data-offset-key="3839:2"><span 
data-slate-string="true"> (text[i + j] == p[j]) </span></span><span data-slate-leaf="true" 
data-offset-key="3839:3"><span class=" gkhl-keyword" data-slate-object="annotation" data-annotation-key="gkann_7993323579" 
data-annotation-type="annotation"><span data-slate-string="true">continue</span></span></span><span 
data-slate-leaf="true" data-offset-key="3839:4"><span data-slate-string="true">;</span></span></span> 
</div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" data-slate-object="block" 
data-key="3840"> <span data-slate-object="text" data-key="3841"><span data-slate-leaf="true" 
data-offset-key="3841:0" data-first-offset="true"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="3841:1"><span class=" gkhl-comment" data-slate-object="annotation" 
data-annotation-key="gkann_8564432846" data-annotation-type="annotation"><span data-slate-string="true">// 
当代码到了这里，说明某一位不匹配。</span></span></span></span> </div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" 
data-slate-object="block" data-key="3842"> <span data-slate-object="text" data-key="3843"><span 
data-slate-leaf="true" data-offset-key="3843:0" data-first-offset="true"><span data-slate-string="true"> 
flag = </span></span><span data-slate-leaf="true" data-offset-key="3843:1"><span class=" gkhl-number" 
data-slate-object="annotation" data-annotation-key="gkann_3008599131" data-annotation-type="annotation"><span 
data-slate-string="true">0</span></span></span><span data-slate-leaf="true" data-offset-key="3843:2"><span 
data-slate-string="true">;</span></span></span> </div> <div class="se-03eefeec se-2642b266" 
data-slate-type="code-line" data-slate-object="block" data-key="3844"> <span data-slate-object="text" 
data-key="3845"><span data-slate-leaf="true" data-offset-key="3845:0" data-first-offset="true"><span 
data-slate-string="true"> </span></span><span data-slate-leaf="true" data-offset-key="3845:1"><span 
class=" gkhl-keyword" data-slate-object="annotation" data-annotation-key="gkann_4413348353" 
data-annotation-type="annotation"><span data-slate-string="true">break</span></span></span><span 
data-slate-leaf="true" data-offset-key="3845:2"><span data-slate-string="true">;</span></span></span> 
</div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" data-slate-object="block" 
data-key="3846"> <span data-slate-object="text" data-key="3847"><span data-slate-leaf="true" 
data-offset-key="3847:0" data-first-offset="true"><span data-slate-string="true"> }</span></span></span> 
</div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" data-slate-object="block" 
data-key="3848"> <span data-slate-object="text" data-key="3849"><span data-slate-leaf="true" 
data-offset-key="3849:0" data-first-offset="true"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="3849:1"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_0116734217" data-annotation-type="annotation"><span data-slate-string="true">if</span></span></span><span 
data-slate-leaf="true" data-offset-key="3849:2"><span data-slate-string="true"> (flag) </span></span><span 
data-slate-leaf="true" data-offset-key="3849:3"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_6141356181" data-annotation-type="annotation"><span data-slate-string="true">return</span></span></span><span 
data-slate-leaf="true" data-offset-key="3849:4"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="3849:5"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_3273319867" data-annotation-type="annotation"><span data-slate-string="true">1</span></span></span><span 
data-slate-leaf="true" data-offset-key="3849:6"><span data-slate-string="true">;</span></span></span> 
</div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" data-slate-object="block" 
data-key="3850"> <span data-slate-object="text" data-key="3851"><span data-slate-leaf="true" 
data-offset-key="3851:0" data-first-offset="true"><span data-slate-string="true"> }</span></span></span> 
</div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" data-slate-object="block" 
data-key="3852"> <span data-slate-object="text" data-key="3853"><span data-slate-leaf="true" 
data-offset-key="3853:0" data-first-offset="true"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="3853:1"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_3067293210" data-annotation-type="annotation"><span data-slate-string="true">return</span></span></span><span 
data-slate-leaf="true" data-offset-key="3853:2"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="3853:3"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_9591644878" data-annotation-type="annotation"><span data-slate-string="true">0</span></span></span><span 
data-slate-leaf="true" data-offset-key="3853:4"><span data-slate-string="true">;</span></span></span> 
</div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" data-slate-object="block" 
data-key="3854"> <span data-slate-object="text" data-key="3855"><span data-slate-leaf="true" 
data-offset-key="3855:0" data-first-offset="true"><span data-slate-string="true">}</span></span></span> 
</div> <div class="ps__rail-x" style="width: 365px; left: 0px; bottom: 0px;"> <div class="ps__thumb-x" 
tabindex="0" style="left: 0px; width: 341px;"></div> </div> <div class="ps__rail-y" style="top: 
0px; right: 0px;"> <div class="ps__thumb-y" tabindex="0" style="top: 0px; height: 0px;"></div> 
</div> </div> </div> <div class="se-50ba8a27 " data-slate-type="paragraph" data-slate-object="block" 
data-key="3856"> <span data-slate-object="text" data-key="3857"><span data-slate-leaf="true" 
data-offset-key="3857:0" data-first-offset="true"><span data-slate-string="true">正如你所看到的，这是最简单粗暴的方法。代码中的 
bruce_force 程序，就是暴力匹配算法的过程，其中参数 text 就是文本串，p 就是模式串，如果包含模式串，函数返回值是 1，如果不包含，返回值就是 0。</span></span></span> 
</div> <div class="se-f4089d47 " data-slate-type="paragraph" data-slate-object="block" data-key="3858"> 
<span data-slate-object="text" data-key="3859"><span data-slate-leaf="true" data-offset-key="3859:0" 
data-first-offset="true"><span data-slate-string="true">这个程序的效率，可以说是单模匹配的所有算法中最差的了，它的时间复杂度是 
O(nm)，其中，n 是文本串的长度，m 是模式串的长度。怎么理解呢？就是如果文本串长度是 10，模式串长度是 3，那么这个程序差不多要计算 30 次，外层循环 10 次，内层循环每次循环 
3 次。</span></span></span> </div> <div class="se-b255016c " data-slate-type="paragraph" data-slate-object="block" 
data-key="3860"> <span data-slate-object="text" data-key="3861"><span data-slate-leaf="true" 
data-offset-key="3861:0" data-first-offset="true"><span data-slate-string="true">按照这个理解，可以设想，当文本串长度是 
10000，模式串长度是 1000 的时候，程序的运行次数是接近 1000 万次这个量级的！所以这种程序的效率最差。</span></span></span> </div> <h2 
class="se-5d35ebc6" data-slate-type="heading" data-slate-object="block" data-key="3862"><span 
data-slate-object="text" data-key="3863"><span data-slate-leaf="true" data-offset-key="3863:0" 
data-first-offset="true"><span data-slate-string="true">初识 Shift-And 算法</span></span></span></h2> 
<div class="se-c1a87d2a " data-slate-type="paragraph" data-slate-object="block" data-key="3864"> 
<span data-slate-object="text" data-key="3865"><span data-slate-leaf="true" data-offset-key="3865:0" 
data-first-offset="true"><span data-slate-string="true">其实，可以高效的解决“单模匹配问题” 的算法有很多。今天，我们将来学习一种叫做 
Shift-And 的算法。</span></span></span> </div> <div class="se-f47944d1 " data-slate-type="paragraph" 
data-slate-object="block" data-key="3866"> <span data-slate-object="text" data-key="3867"><span 
data-slate-leaf="true" data-offset-key="3867:0" data-first-offset="true"><span data-slate-string="true">看到 
Shift 你会想到了什么？是不是电脑键盘上的 Shift 键？我们知道，这个键的作用是做转换，例如当你按住 Shift + 8 的时候，输入的就不是数字 8，而是一个 *。</span></span></span> 
</div> <div class="se-176074d6 " data-slate-type="paragraph" data-slate-object="block" data-key="3868"> 
<span data-slate-object="text" data-key="3869"><span data-slate-leaf="true" data-offset-key="3869:0" 
data-first-offset="true"><span data-slate-string="true">而 Shift-And 中的另一个单词 And ，其实指代的是位运算中的按位与操作。这两个单词，差不多清晰展示了这个算法的基本流程：首先做信息的转换，然后利用位运算，完成单模匹配问题。下面，我们就来具体对这两步做下讲解。</span></span></span> 
</div> <h4 class="se-eec58c01" data-slate-type="heading" data-slate-object="block" data-key="3870"><span 
data-slate-object="text" data-key="3871"><span data-slate-leaf="true" data-offset-key="3871:0" 
data-first-offset="true"><span data-slate-string="true">1. Shift-And 中的信息转换</span></span></span></h4> 
<div class="se-a5aab868 " data-slate-type="paragraph" data-slate-object="block" data-key="3872"> 
<span data-slate-object="text" data-key="3873"><span data-slate-leaf="true" data-offset-key="3873:0" 
data-first-offset="true"><span data-slate-string="true">在 Shift-And 算法中，是将模式串的信息，转换成另外一个种信息格式，如何转换呢？如下图所示：</span></span></span> 
</div> <div class="se-7bdb101a" data-slate-type="image" data-slate-object="block" data-key="3874"> 
<img class="se-a58a9726" src="https://static001.geekbang.org/resource/image/43/c0/4362d2e4ffbfc68f596184290caceac0.jpg"> 
<div class="se-318bc824"> 图2： Shift-And 编码方法示意图 </div> </div> <div class="se-47d2d140 " data-slate-type="paragraph" 
data-slate-object="block" data-key="3875"> <span data-slate-object="text" data-key="3876"><span 
data-slate-leaf="true" data-offset-key="3876:0" data-first-offset="true"><span data-slate-string="true">在 
Shift-And 中，我们可以把模式串中的每一个字符，转换成一个数字，这个数字一般是由二进制表示。关于转换字符的编码有这么一个规则，就是如果某个字符在模式串的第 i 位中出现过，那么在相关字符编码的二进制数字表示中的第 
i 位就为 1。</span></span></span> </div> <div class="se-19ccf8fe " data-slate-type="paragraph" 
data-slate-object="block" data-key="3877"> <span data-slate-object="text" data-key="3878"><span 
data-slate-leaf="true" data-offset-key="3878:0" data-first-offset="true"><span data-slate-string="true">例如，图中字符 
a，在模式串的第 0 位，第 5 位和第 6 位出现过，那么就将 a 字符编码的第 0、5、6 位设置为 1。在这里你需要注意的是，字符数组是从左向右看，也就是说最左边是最低位；而数字是从右向左看的，最右边才是最低位，这里是最容易犯糊涂的地方。</span></span></span> 
</div> <div class="se-3af0a0c0 " data-slate-type="paragraph" data-slate-object="block" data-key="3879"> 
<span data-slate-object="text" data-key="3880"><span data-slate-leaf="true" data-offset-key="3880:0" 
data-first-offset="true"><span data-slate-string="true">字符 c 呢，由于在第 1 位和第 4 位出现过，所以对应到二进制数字中，第 
1 位和第 4 位都是 1，其余位置都是 0。按照这种规则呢，你会发现，没有在模式串中出现的字符，编码值就是 0 值，也就是它的所有二进制位上都是 0。</span></span></span> 
</div> <div class="se-6641acd3 " data-slate-type="paragraph" data-slate-object="block" data-key="3881"> 
<span data-slate-object="text" data-key="3882"><span data-slate-leaf="true" data-offset-key="3882:0" 
data-first-offset="true"><span data-slate-string="true">所以，在 Shift-And 算法中，通过看一个字符的编码，就能知道这个字符，在原模式串的第几位出现过。同时，通过模式串可以生成的编码信息，也可以还原模式串信息。</span></span></span> 
</div> <div class="se-fd84348a " data-slate-type="paragraph" data-slate-object="block" data-key="3883"> 
<span data-slate-object="text" data-key="3884"><span data-slate-leaf="true" data-offset-key="3884:0" 
data-first-offset="true"><span data-slate-string="true">在之前的课程中，我们讲过类似的概念，一般来说，这种可以相互转换的信息，叫做等价信息表示。说白了就是信息一点儿也没少，只是换了一种表示形式。要想理解 
Shift-And 算法，首先就要理解这种等价的信息表示方法。</span></span></span> </div> <h4 class="se-f5ae64d1" data-slate-type="heading" 
data-slate-object="block" data-key="3885"><span data-slate-object="text" data-key="3886"><span 
data-slate-leaf="true" data-offset-key="3886:0" data-first-offset="true"><span data-slate-string="true">2. 
利用位运算做匹配</span></span></span></h4> <div class="se-27e15f0d " data-slate-type="paragraph" data-slate-object="block" 
data-key="3887"> <span data-slate-object="text" data-key="3888"><span data-slate-leaf="true" 
data-offset-key="3888:0" data-first-offset="true"><span data-slate-string="true">讲完了信息转换步骤后，我们明确了一个事情，就是 
Shift-And 算法中，只是对模式串做了信息转换，但对文本串本质内容没有做任何改动。接下来，我们就来讲解 Shift-And 算法中的 And 部分，也就是来回答 Shift-And 
算法，究竟是怎么用位运算来做字符串匹配的。先看下图：</span></span></span> </div> <div class="se-074e4c95" data-slate-type="image" 
data-slate-object="block" data-key="3889"> <img class="se-fb8d1f21" src="https://static001.geekbang.org/resource/image/12/b4/1293af0c4e3ce6a29bfe681603f19cb4.jpg"> 
<div class="se-5c01c883"> 图3： Shift-And匹配流程的关键因素 </div> </div> <div class="se-65b05342 " data-slate-type="paragraph" 
data-slate-object="block" data-key="3890"> <span data-slate-object="text" data-key="3891"><span 
data-slate-leaf="true" data-offset-key="3891:0" data-first-offset="true"><span data-slate-string="true">在图中，有一个最关键的，就是 
</span></span></span><span data-slate-object="text" data-key="3892"><span data-slate-leaf="true" 
data-offset-key="3892:0" data-first-offset="true"><span class="se-76e4c8eb" data-slate-type="bold" 
data-slate-object="mark"><span data-slate-string="true">p 变量，它是整个匹配过程的核心变量</span></span></span></span><span 
data-slate-object="text" data-key="3893"><span data-slate-leaf="true" data-offset-key="3893:0" 
data-first-offset="true"><span data-slate-string="true">。我们假设模式串的长度是 m ，code(str[i]) 代表了文本串第 
i 位字符的编码，编码方式前面已经介绍过了。整个匹配过程，从前往后，依次处理文本串的每一位，处理到第 i 位的时候，就是用第 i 位字符的编码（code（str[i])），与 p 左移 
1 位并或上 1 以后的值（p&lt;&lt; 1 | 1），做“按位与”运算，把得到的值赋给 p 变量。最终，当 p 的二进制表示的第 m 位为 1 时，说明匹配成功了。</span></span></span> 
</div> <div class="se-f4d2d348 " data-slate-type="paragraph" data-slate-object="block" data-key="3894"> 
<span data-slate-object="text" data-key="3895"><span data-slate-leaf="true" data-offset-key="3895:0" 
data-first-offset="true"><span data-slate-string="true">为了帮助你理解，我给你准备了一个具体示例，下图是模拟了当模式串为 cdd，文本串为 
acdd 时候的匹配流程：</span></span></span> </div> <div class="se-08f15fe6" data-slate-type="image" 
data-slate-object="block" data-key="3896"> <img class="se-c6528aeb" src="https://static001.geekbang.org/resource/image/4f/e4/4fbf1d8708304abf3359fa933f90cfe4.jpg"> 
<div class="se-2f7d2d2d"> 图4： Shift-And匹配流程示意图 </div> </div> <div class="se-0fd9b47f " data-slate-type="paragraph" 
data-slate-object="block" data-key="3897"> <span data-slate-object="text" data-key="3898"><span 
data-slate-leaf="true" data-offset-key="3898:0" data-first-offset="true"><span data-slate-string="true">要想理解这个匹配过程，首先就是需要注意到 
，变量 p 在第四步的时候，二进制表示的第 3 位为 1 了，说明此时截止到文本串 acdd 的第 4 位为止，匹配到了原模式串 cdd。这个过程，你需要仔细的琢磨琢磨，然后再往下看。</span></span></span> 
</div> <div class="se-d9d0f64e " data-slate-type="paragraph" data-slate-object="block" data-key="3899"> 
<span data-slate-object="text" data-key="3900"><span data-slate-leaf="true" data-offset-key="3900:0" 
data-first-offset="true"><span data-slate-string="true">接下来我们来讨论一般情况下的 p 值，如果模式串长度为 m，那么在什么情况下，p 
值的第 m 位为 1 呢？</span></span></span> </div> <div class="se-918559f3 " data-slate-type="paragraph" 
data-slate-object="block" data-key="3901"> <span data-slate-object="text" data-key="3902"><span 
data-slate-leaf="true" data-offset-key="3902:0" data-first-offset="true"><span data-slate-string="true">由算法中的 
p 值计算公式可知，</span></span></span><span data-slate-object="text" data-key="3903"><span data-slate-leaf="true" 
data-offset-key="3903:0" data-first-offset="true"><span class="se-c430c980" data-slate-type="bold" 
data-slate-object="mark"><span data-slate-string="true">p 是由“按位与”操作得到的值</span></span></span></span><span 
data-slate-object="text" data-key="3904"><span data-slate-leaf="true" data-offset-key="3904:0" 
data-first-offset="true"><span data-slate-string="true">，也就是说，其中一部分 code(str[i]) 的二进制的第 m 位必须为 
1，这就意味着 str[i] 是模式串第 m 位的字符。并且为了 p 值的第 m 位为 1，按位与的另一边 (p &lt;&lt; 1 | 1) 这个值的第 m 位也必须是 1。</span></span></span> 
</div> <div class="se-b5994123 " data-slate-type="paragraph" data-slate-object="block" data-key="3905"> 
<span data-slate-object="text" data-key="3906"><span data-slate-leaf="true" data-offset-key="3906:0" 
data-first-offset="true"><span data-slate-string="true">关于 (p &lt;&lt; 1 | 1) 这一部分中，或 1 操作，只能影响二进制的最低位，我们可以暂时忽略它。关键就是理解 
p &lt;&lt; 1 这个操作，左移以后的第 m 位为 1，说明左移之前，p 的二进制表示的 m - 1 位也是 1。</span></span></span> </div> <div 
class="se-d2e1979a " data-slate-type="paragraph" data-slate-object="block" data-key="3907"> 
<span data-slate-object="text" data-key="3908"><span data-slate-leaf="true" data-offset-key="3908:0" 
data-first-offset="true"><span data-slate-string="true">通过分析上一轮 p 的二进制表示的 m - 1 位为什么是 1 时，你会推理得到 
str[i - 1] 必须是模式串 m - 1 位的字符。依次类推，你就会得到一个结论：文本串 str 的第 i - m 位，到第 i 位之间的字符串，其实就等于原模式串的内容。下面给你准备了一个示意图：</span></span></span> 
</div> <div class="se-249a9b58" data-slate-type="image" data-slate-object="block" data-key="3909"> 
<img class="se-8faf133a" src="https://static001.geekbang.org/resource/image/b3/09/b376fbe3c81bd4631dab4da7d0c8fb09.jpg"> 
<div class="se-27bd85b7"> 图5： p 公式的理解与推导 </div> </div> <div class="se-c4852a42 " data-slate-type="paragraph" 
data-slate-object="block" data-key="3910"> <span data-slate-object="text" data-key="3911"><span 
data-slate-leaf="true" data-offset-key="3911:0" data-first-offset="true"><span data-slate-string="true">其中 
</span></span></span><span class="se-4dbc7a92 se-2b50b467" data-slate-type="inline-katex" data-slate-object="inline" 
data-key="3912"><span data-slate-leaf="true"><span data-slate-string="true" class="katex"><span 
class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span 
class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t 
vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span 
class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span 
class="mord mathdefault mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span 
class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></span><span 
data-slate-object="text" data-key="3914"><span data-slate-leaf="true" data-offset-key="3914:0" 
data-first-offset="true"><span data-slate-string="true"> 代表 p 的二进制表示的第 m 位为 1，</span></span></span><span 
class="se-4dbc7a92 se-2b50b467" data-slate-type="inline-katex" data-slate-object="inline" data-key="3915"><span 
data-slate-leaf="true"><span data-slate-string="true" class="katex"><span class="katex-html" 
aria-hidden="true"><span class="base"><span class="strut" style="height:0.638891em;vertical-align:-0.208331em;"></span><span 
class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t 
vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span 
class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span 
class="mord mtight"><span class="mord mathdefault mtight">m</span><span class="mbin mtight">−</span><span 
class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span 
class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span></span></span></span></span></span><span 
data-slate-object="text" data-key="3917"><span data-slate-leaf="true" data-offset-key="3917:0" 
data-first-offset="true"><span data-slate-string="true"> 表示 p 的二进制表示的第 m-1 位为 1。因为只有第 m-1 位为 
1，才可能左移 1 位以后的结果第 m 位为 1。</span></span></span> </div> <div class="se-a36f818c " data-slate-type="paragraph" 
data-slate-object="block" data-key="3918"> <span data-slate-object="text" data-key="3919"><span 
data-slate-leaf="true" data-offset-key="3919:0" data-first-offset="true"><span data-slate-string="true">最后我们来解释一下，为什么 
p 左移 1 位以后，还需要或上一个 1 。其实也很好理解，如果 str[i] 是模式串的第 0 位字符，那么 p 在什么情况下，第 0 位是 1 ？你会发现，根据之前推理，只有在上一个状态 
p 的 -1 位为 1 的时候，左移以后第 0 位才可能是 1。</span></span></span> </div> <div class="se-813bc7a3 " data-slate-type="paragraph" 
data-slate-object="block" data-key="3920"> <span data-slate-object="text" data-key="3921"><span 
data-slate-leaf="true" data-offset-key="3921:0" data-first-offset="true"><span data-slate-string="true">但我们知道，根本没有 
-1 位这个位置，也就是说，如果不看或 1 操作的话，一个初值为 0 的 p 变量，想通过单纯的左移操作，第 0 位永远不可能是 1。所以这个或 1 操作，其实就是为了使得 p 左移以后的第 
0 位永远置为 1，而最终计算结果中的第 0 位是否为 1，这个要看 str[i] 这个字符是否在模式串的第 0 位出现过。</span></span></span> </div> 
<div class="se-6fa5e61b " data-slate-type="paragraph" data-slate-object="block" data-key="3922"> 
<span data-slate-object="text" data-key="3923"><span data-slate-leaf="true" data-offset-key="3923:0" 
data-first-offset="true"><span data-slate-string="true">关于 Shift-And 算法这个知识点呢，我大致解释完了。你在学习这块知识的时候，可能感觉有点难，没准读完第一遍的时候，脑子都是懵的。但请相信我，也相信你自己，把这几段内容多看几遍，遇到不理解的句子，停下来多思考思考，看的次数多了，你就明白是什么意思了。</span></span></span> 
</div> <div class="se-9effaaa9 " data-slate-type="paragraph" data-slate-object="block" data-key="3924"> 
<span data-slate-object="text" data-key="3925"><span data-slate-leaf="true" data-offset-key="3925:0" 
data-first-offset="true"><span data-slate-string="true">至此呢，我们就学习完了 Shift-And 算法的两个重要的过程。代码实现呢，如下所示：</span></span></span> 
</div> <div class="se-ce5efb16 se-72db5e5c" data-slate-type="pre" data-slate-object="block" 
data-key="3926" data-code-language="cpp"> <div class="se-9ac4dc4a se-c6e8b2b4"> <span></span> 
</div> <div class="se-485c97ab"> <div class="se-fc9cf650 se-ba410aef" data-code-line-number="1"></div> 
<div class="se-fc9cf650 se-ba410aef" data-code-line-number="2"></div> <div class="se-fc9cf650 
se-ba410aef" data-code-line-number="3"></div> <div class="se-fc9cf650 se-ba410aef" data-code-line-number="4"></div> 
<div class="se-fc9cf650 se-ba410aef" data-code-line-number="5"></div> <div class="se-fc9cf650 
se-ba410aef" data-code-line-number="6"></div> <div class="se-fc9cf650 se-ba410aef" data-code-line-number="7"></div> 
<div class="se-fc9cf650 se-ba410aef" data-code-line-number="8"></div> <div class="se-fc9cf650 
se-ba410aef" data-code-line-number="9"></div> <div class="se-fc9cf650 se-ba410aef" data-code-line-number="10"></div> 
<div class="se-fc9cf650 se-ba410aef" data-code-line-number="11"></div> <div class="se-fc9cf650 
se-ba410aef" data-code-line-number="12"></div> <div class="se-fc9cf650 se-ba410aef" data-code-line-number="13"></div> 
<div class="se-fc9cf650 se-ba410aef" data-code-line-number="14"></div> </div> <div class="se-d5b4398c 
ps ps--active-x"> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" data-slate-object="block" 
data-key="3927"> <span data-slate-object="text" data-key="3928"><span data-slate-leaf="true" 
data-offset-key="3928:0" data-first-offset="true"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_0506392692" data-annotation-type="annotation"><span class=" gkhl-function" 
data-slate-object="annotation" data-annotation-key="gkann_4115359548" data-annotation-type="annotation"><span 
data-slate-string="true">int</span></span></span></span><span data-slate-leaf="true" data-offset-key="3928:1"><span 
class=" gkhl-function" data-slate-object="annotation" data-annotation-key="gkann_4115359548" 
data-annotation-type="annotation"><span data-slate-string="true"> </span></span></span><span 
data-slate-leaf="true" data-offset-key="3928:2"><span class=" gkhl-title" data-slate-object="annotation" 
data-annotation-key="gkann_4489598637" data-annotation-type="annotation"><span class=" gkhl-function" 
data-slate-object="annotation" data-annotation-key="gkann_4115359548" data-annotation-type="annotation"><span 
data-slate-string="true">shift_and</span></span></span></span><span data-slate-leaf="true" 
data-offset-key="3928:3"><span class=" gkhl-params" data-slate-object="annotation" data-annotation-key="gkann_8610176361" 
data-annotation-type="annotation"><span class=" gkhl-function" data-slate-object="annotation" 
data-annotation-key="gkann_4115359548" data-annotation-type="annotation"><span data-slate-string="true">(const 
char *str, const char *p_str)</span></span></span></span><span data-slate-leaf="true" data-offset-key="3928:4"><span 
class=" gkhl-function" data-slate-object="annotation" data-annotation-key="gkann_4115359548" 
data-annotation-type="annotation"><span data-slate-string="true"> </span></span></span><span 
data-slate-leaf="true" data-offset-key="3928:5"><span data-slate-string="true">{</span></span></span> 
</div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" data-slate-object="block" 
data-key="3929"> <span data-slate-object="text" data-key="3930"><span data-slate-leaf="true" 
data-offset-key="3930:0" data-first-offset="true"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="3930:1"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_9167520404" data-annotation-type="annotation"><span data-slate-string="true">int</span></span></span><span 
data-slate-leaf="true" data-offset-key="3930:2"><span data-slate-string="true"> code[</span></span><span 
data-slate-leaf="true" data-offset-key="3930:3"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_8259636517" data-annotation-type="annotation"><span data-slate-string="true">256</span></span></span><span 
data-slate-leaf="true" data-offset-key="3930:4"><span data-slate-string="true">] = {</span></span><span 
data-slate-leaf="true" data-offset-key="3930:5"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_1103013388" data-annotation-type="annotation"><span data-slate-string="true">0</span></span></span><span 
data-slate-leaf="true" data-offset-key="3930:6"><span data-slate-string="true">}, m = </span></span><span 
data-slate-leaf="true" data-offset-key="3930:7"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_3628218349" data-annotation-type="annotation"><span data-slate-string="true">0</span></span></span><span 
data-slate-leaf="true" data-offset-key="3930:8"><span data-slate-string="true">;</span></span></span> 
</div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" data-slate-object="block" 
data-key="3931"> <span data-slate-object="text" data-key="3932"><span data-slate-leaf="true" 
data-offset-key="3932:0" data-first-offset="true"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="3932:1"><span class=" gkhl-comment" data-slate-object="annotation" 
data-annotation-key="gkann_1920000331" data-annotation-type="annotation"><span data-slate-string="true">// 
初始化每一个字符的编码</span></span></span></span> </div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" 
data-slate-object="block" data-key="3933"> <span data-slate-object="text" data-key="3934"><span 
data-slate-leaf="true" data-offset-key="3934:0" data-first-offset="true"><span data-slate-string="true"> 
</span></span><span data-slate-leaf="true" data-offset-key="3934:1"><span class=" gkhl-keyword" 
data-slate-object="annotation" data-annotation-key="gkann_5292835146" data-annotation-type="annotation"><span 
data-slate-string="true">for</span></span></span><span data-slate-leaf="true" data-offset-key="3934:2"><span 
data-slate-string="true"> (</span></span><span data-slate-leaf="true" data-offset-key="3934:3"><span 
class=" gkhl-keyword" data-slate-object="annotation" data-annotation-key="gkann_1101759999" 
data-annotation-type="annotation"><span data-slate-string="true">int</span></span></span><span 
data-slate-leaf="true" data-offset-key="3934:4"><span data-slate-string="true"> i = </span></span><span 
data-slate-leaf="true" data-offset-key="3934:5"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_2856208353" data-annotation-type="annotation"><span data-slate-string="true">0</span></span></span><span 
data-slate-leaf="true" data-offset-key="3934:6"><span data-slate-string="true">; p_str[i]; 
i++, m++) {</span></span></span> </div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" 
data-slate-object="block" data-key="3935"> <span data-slate-object="text" data-key="3936"><span 
data-slate-leaf="true" data-offset-key="3936:0" data-first-offset="true"><span data-slate-string="true"> 
code[p_str[i]] |= (</span></span><span data-slate-leaf="true" data-offset-key="3936:1"><span 
class=" gkhl-number" data-slate-object="annotation" data-annotation-key="gkann_1498294015" 
data-annotation-type="annotation"><span data-slate-string="true">1</span></span></span><span 
data-slate-leaf="true" data-offset-key="3936:2"><span data-slate-string="true"> &lt;&lt; i);</span></span></span> 
</div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" data-slate-object="block" 
data-key="3937"> <span data-slate-object="text" data-key="3938"><span data-slate-leaf="true" 
data-offset-key="3938:0" data-first-offset="true"><span data-slate-string="true"> }</span></span></span> 
</div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" data-slate-object="block" 
data-key="3939"> <span data-slate-object="text" data-key="3940"><span data-slate-leaf="true" 
data-offset-key="3940:0" data-first-offset="true"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="3940:1"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_8446690857" data-annotation-type="annotation"><span data-slate-string="true">int</span></span></span><span 
data-slate-leaf="true" data-offset-key="3940:2"><span data-slate-string="true"> p = </span></span><span 
data-slate-leaf="true" data-offset-key="3940:3"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_1186041169" data-annotation-type="annotation"><span data-slate-string="true">0</span></span></span><span 
data-slate-leaf="true" data-offset-key="3940:4"><span data-slate-string="true">;</span></span></span> 
</div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" data-slate-object="block" 
data-key="3941"> <span data-slate-object="text" data-key="3942"><span data-slate-leaf="true" 
data-offset-key="3942:0" data-first-offset="true"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="3942:1"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_3857090032" data-annotation-type="annotation"><span data-slate-string="true">for</span></span></span><span 
data-slate-leaf="true" data-offset-key="3942:2"><span data-slate-string="true"> (</span></span><span 
data-slate-leaf="true" data-offset-key="3942:3"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_7719102487" data-annotation-type="annotation"><span data-slate-string="true">int</span></span></span><span 
data-slate-leaf="true" data-offset-key="3942:4"><span data-slate-string="true"> i = </span></span><span 
data-slate-leaf="true" data-offset-key="3942:5"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_2671379908" data-annotation-type="annotation"><span data-slate-string="true">0</span></span></span><span 
data-slate-leaf="true" data-offset-key="3942:6"><span data-slate-string="true">; str[i]; i++) 
{</span></span></span> </div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" 
data-slate-object="block" data-key="3943"> <span data-slate-object="text" data-key="3944"><span 
data-slate-leaf="true" data-offset-key="3944:0" data-first-offset="true"><span data-slate-string="true"> 
p = (p &lt;&lt; </span></span><span data-slate-leaf="true" data-offset-key="3944:1"><span class=" 
gkhl-number" data-slate-object="annotation" data-annotation-key="gkann_6321265263" data-annotation-type="annotation"><span 
data-slate-string="true">1</span></span></span><span data-slate-leaf="true" data-offset-key="3944:2"><span 
data-slate-string="true"> | </span></span><span data-slate-leaf="true" data-offset-key="3944:3"><span 
class=" gkhl-number" data-slate-object="annotation" data-annotation-key="gkann_2372419968" 
data-annotation-type="annotation"><span data-slate-string="true">1</span></span></span><span 
data-slate-leaf="true" data-offset-key="3944:4"><span data-slate-string="true">) &amp; code[str[i]];</span></span></span> 
</div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" data-slate-object="block" 
data-key="3945"> <span data-slate-object="text" data-key="3946"><span data-slate-leaf="true" 
data-offset-key="3946:0" data-first-offset="true"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="3946:1"><span class=" gkhl-comment" data-slate-object="annotation" 
data-annotation-key="gkann_5229419557" data-annotation-type="annotation"><span data-slate-string="true">// 
如果 p 所对应的模式串最高位为1，代表匹配成功</span></span></span></span> </div> <div class="se-03eefeec se-2642b266" 
data-slate-type="code-line" data-slate-object="block" data-key="3947"> <span data-slate-object="text" 
data-key="3948"><span data-slate-leaf="true" data-offset-key="3948:0" data-first-offset="true"><span 
data-slate-string="true"> </span></span><span data-slate-leaf="true" data-offset-key="3948:1"><span 
class=" gkhl-keyword" data-slate-object="annotation" data-annotation-key="gkann_3254862980" 
data-annotation-type="annotation"><span data-slate-string="true">if</span></span></span><span 
data-slate-leaf="true" data-offset-key="3948:2"><span data-slate-string="true"> (p &amp; (</span></span><span 
data-slate-leaf="true" data-offset-key="3948:3"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_3134024753" data-annotation-type="annotation"><span data-slate-string="true">1</span></span></span><span 
data-slate-leaf="true" data-offset-key="3948:4"><span data-slate-string="true"> &lt;&lt; (m 
- </span></span><span data-slate-leaf="true" data-offset-key="3948:5"><span class=" gkhl-number" 
data-slate-object="annotation" data-annotation-key="gkann_5395471529" data-annotation-type="annotation"><span 
data-slate-string="true">1</span></span></span><span data-slate-leaf="true" data-offset-key="3948:6"><span 
data-slate-string="true">))) </span></span><span data-slate-leaf="true" data-offset-key="3948:7"><span 
class=" gkhl-keyword" data-slate-object="annotation" data-annotation-key="gkann_7659249958" 
data-annotation-type="annotation"><span data-slate-string="true">return</span></span></span><span 
data-slate-leaf="true" data-offset-key="3948:8"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="3948:9"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_2821066404" data-annotation-type="annotation"><span data-slate-string="true">1</span></span></span><span 
data-slate-leaf="true" data-offset-key="3948:10"><span data-slate-string="true">;</span></span></span> 
</div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" data-slate-object="block" 
data-key="3949"> <span data-slate-object="text" data-key="3950"><span data-slate-leaf="true" 
data-offset-key="3950:0" data-first-offset="true"><span data-slate-string="true"> }</span></span></span> 
</div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" data-slate-object="block" 
data-key="3951"> <span data-slate-object="text" data-key="3952"><span data-slate-leaf="true" 
data-offset-key="3952:0" data-first-offset="true"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="3952:1"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_3294850363" data-annotation-type="annotation"><span data-slate-string="true">return</span></span></span><span 
data-slate-leaf="true" data-offset-key="3952:2"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="3952:3"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_6460231674" data-annotation-type="annotation"><span data-slate-string="true">0</span></span></span><span 
data-slate-leaf="true" data-offset-key="3952:4"><span data-slate-string="true">;</span></span></span> 
</div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" data-slate-object="block" 
data-key="3953"> <span data-slate-object="text" data-key="3954"><span data-slate-leaf="true" 
data-offset-key="3954:0" data-first-offset="true"><span data-slate-string="true">}</span></span></span> 
</div> <div class="ps__rail-x" style="width: 365px; left: 0px; bottom: 0px;"> <div class="ps__thumb-x" 
tabindex="0" style="left: 0px; width: 334px;"></div> </div> <div class="ps__rail-y" style="top: 
0px; right: 0px;"> <div class="ps__thumb-y" tabindex="0" style="top: 0px; height: 0px;"></div> 
</div> </div> </div> <div class="se-b6cbd7bf " data-slate-type="paragraph" data-slate-object="block" 
data-key="3955"> <span data-slate-object="text" data-key="3956"><span data-slate-leaf="true" 
data-offset-key="3956:0" data-first-offset="true"><span data-slate-string="true">在这份代码中，你会发现我们只用了两次循环，注意！是两次循环，而不是两层循环。一次循环是遍历模式串，生成编码 
code 信息，第二次循环是遍历文本串 str，循环迭代得到 p 变量的值，直到 p 变量的第 m 位为 1 时，就代表匹配成功。</span></span></span> </div> 
<div class="se-9b888daf " data-slate-type="paragraph" data-slate-object="block" data-key="3957"> 
<span data-slate-object="text" data-key="3958"><span data-slate-leaf="true" data-offset-key="3958:0" 
data-first-offset="true"><span data-slate-string="true">可以看到，这种算法的时间复杂度，和暴力匹配算法比起来，提升的不是一星半点。暴力算法是 
O(nm) 的，而 Shift-And 算法的时间复杂度就是 O(n + m) 的。也就意味着，同样是文本串 10000 的长度，模式串 1000 长度，Shift-And 算法，是暴力匹配算法效率的 
1000 倍！</span></span></span> </div> <h2 class="se-7142c45e" data-slate-type="heading" data-slate-object="block" 
data-key="3959"><span data-slate-object="text" data-key="3960"><span data-slate-leaf="true" 
data-offset-key="3960:0" data-first-offset="true"><span data-slate-string="true">改进 Shift-And 
算法</span></span></span></h2> <div class="se-7f178578 " data-slate-type="paragraph" data-slate-object="block" 
data-key="3961"> <span data-slate-object="text" data-key="3962"><span data-slate-leaf="true" 
data-offset-key="3962:0" data-first-offset="true"><span data-slate-string="true">说是 1000 倍，细心的你可能会发现一个问题，上述算法中的 
p 变量，是一个整型变量，也就是说，p 变量最多支持，模式串长度不超过 32 位的单模匹配问题。</span></span></span> </div> <div class="se-7434c955 
" data-slate-type="paragraph" data-slate-object="block" data-key="3963"> <span data-slate-object="text" 
data-key="3964"><span data-slate-leaf="true" data-offset-key="3964:0" data-first-offset="true"><span 
data-slate-string="true">请你想想，这个问题究竟是出在算法上，还是出在数据结构上？答案很显然，是出在数据结构上。要是有一种数据结构，支持很大的二进制整数表示，同时在这种结构的数据上，还可以操作左移、或运算以及按位与运算的话，这种结构就可以取代原有整型 
p 变量的作用。这样，我们就可以支持长度更长的模式串的匹配问题了！</span></span></span> </div> <div class="se-9bd1f493 " data-slate-type="paragraph" 
data-slate-object="block" data-key="3965"> <span data-slate-object="text" data-key="3966"><span 
data-slate-leaf="true" data-offset-key="3966:0" data-first-offset="true"><span data-slate-string="true">所以今天给你留得作业呢，就是请你在尽量不修改算法流程的情况下，增加一个类型结构，实现可以处理 
1000 位模式串的 Shift-And 算法。欢迎你把自己的答案写在留言区，我们一起来讨论实现方法。</span></span></span> </div> <h2 class="se-2058264c" 
data-slate-type="heading" data-slate-object="block" data-key="3967"><span data-slate-object="text" 
data-key="3968"><span data-slate-leaf="true" data-offset-key="3968:0" data-first-offset="true"><span 
data-slate-string="true">课程小结</span></span></span></h2> <div class="se-b9e4d09a " data-slate-type="paragraph" 
data-slate-object="block" data-key="3969"> <span data-slate-object="text" data-key="3970"><span 
data-slate-leaf="true" data-offset-key="3970:0" data-first-offset="true"><span data-slate-string="true">通过今天这堂课呢，我希望你彻底体会到，算法和数据结构是程序设计的两个部分，并且它们可以单独来进行学习、设计和实现。</span></span></span> 
</div> <div class="se-8c2a5147 " data-slate-type="paragraph" data-slate-object="block" data-key="3971"> 
<span data-slate-object="text" data-key="3972"><span data-slate-leaf="true" data-offset-key="3972:0" 
data-first-offset="true"><span data-slate-string="true">如果说，今天想让你记住点儿什么的话，那就是：</span></span></span><span 
data-slate-object="text" data-key="3973"><span data-slate-leaf="true" data-offset-key="3973:0" 
data-first-offset="true"><span class="se-7681ddf4" data-slate-type="bold" data-slate-object="mark"><span 
data-slate-string="true">等价信息表示对于解决问题很重要</span></span></span></span><span data-slate-object="text" 
data-key="3974"><span data-slate-leaf="true" data-offset-key="3974:0" data-first-offset="true"><span 
data-slate-string="true">。这个事情不止是对于程序设计而言，很多事情都是这样。同等的信息，不同的表示形式，其实就是不同的观察角度，最终的效果也会截然不同。就像今天的 
Shift-And 算法，对于模式串的信息，做了一个等价转换以后，整个算法的时间复杂度就被优化了一个数量级，这个过程值得你花时间去仔细体会。</span></span></span> 
</div> <div class="se-54c48ceb " data-slate-type="paragraph" data-slate-object="block" data-key="3975"> 
<span data-slate-object="text" data-key="3976"><span data-slate-leaf="true" data-offset-key="3976:0" 
data-first-offset="true"><span data-slate-string="true">本节课，也是我们整个“编码能力训练篇”的最后一节了，我希望你通过这部分知识的学习，掌握计算思维，以及程序设计的核心法门。下一章节，我不再赘述算法和数据结构的重要性，而是请你带着在“编码能力训练篇”掌握的技巧，随我进入“算法与数据结构篇”的学习吧！</span></span></span> 
</div> <div class="se-341b95fc " data-slate-type="paragraph" data-slate-object="block" data-key="3977"> 
<span data-slate-object="text" data-key="3978"><span data-slate-leaf="true" data-offset-key="3978:0" 
data-first-offset="true"><span data-slate-string="true">好了，今天就到这里了，我是胡光，我们下章见。</span></span></span> 
</div> </div>', body_summary='', bundle='book', delta=0, body_format='full_html', langcode='zh-hans', 
revision_id=755 where entity_id=755 
 {executed in 1 msec}
2020-11-24 18:08:15.166 INFO  jdbc.sqltiming Line:373 - select nodefiledd0_.nid as nid1_10_, nodefiledd0_.changed as changed2_10_, nodefiledd0_.created 
as created3_10_, nodefiledd0_.default_langcode as default_4_10_, nodefiledd0_.langcode as langcode5_10_, 
nodefiledd0_.promote as promote6_10_, nodefiledd0_.revision_translation_affected as revision7_10_, 
nodefiledd0_.status as status8_10_, nodefiledd0_.sticky as sticky9_10_, nodefiledd0_.title 
as title10_10_, nodefiledd0_.type as type11_10_, nodefiledd0_.uid as uid12_10_, nodefiledd0_.vid 
as vid13_10_ from node_field_data nodefiledd0_ where nodefiledd0_.nid=755 
 {executed in 1 msec}
2020-11-24 18:08:15.166 INFO  jdbc.resultsettable Line:610 - 
|----|-----------|-----------|-----------------|---------|--------|------------------------------|-------|-------|---------------------------------|-----|----|----|
|nid |changed    |created    |default_langcode |langcode |promote |revision_translation_affected |status |sticky |title                            |type |uid |vid |
|----|-----------|-----------|-----------------|---------|--------|------------------------------|-------|-------|---------------------------------|-----|----|----|
|755 |1606117098 |1606117098 |1                |zh-hans  |0       |1                             |1      |0      |17丨数据结构（下）：大整数实战，提升Shift-And算法能力 |book |1   |755 |
|----|-----------|-----------|-----------------|---------|--------|------------------------------|-------|-------|---------------------------------|-----|----|----|

2020-11-24 18:08:15.167 INFO  jdbc.sqltiming Line:373 - select nodefieldr0_.nid as nid1_11_0_, nodefieldr0_.changed as changed2_11_0_, nodefieldr0_.created 
as created3_11_0_, nodefieldr0_.default_langcode as default_4_11_0_, nodefieldr0_.langcode 
as langcode5_11_0_, nodefieldr0_.promote as promote6_11_0_, nodefieldr0_.revision_translation_affected 
as revision7_11_0_, nodefieldr0_.status as status8_11_0_, nodefieldr0_.sticky as sticky9_11_0_, 
nodefieldr0_.title as title10_11_0_, nodefieldr0_.uid as uid11_11_0_, nodefieldr0_.vid as vid12_11_0_ 
from node_field_revision nodefieldr0_ where nodefieldr0_.nid=755 
 {executed in 0 msec}
2020-11-24 18:08:15.168 INFO  jdbc.resultsettable Line:610 - 
|---------|-----------|-----------|-----------------|---------|--------|------------------------------|-------|-------|---------------------------------|----|----|
|nid      |changed    |created    |default_langcode |langcode |promote |revision_translation_affected |status |sticky |title                            |uid |vid |
|---------|-----------|-----------|-----------------|---------|--------|------------------------------|-------|-------|---------------------------------|----|----|
|[unread] |1606117098 |1606117098 |1                |zh-hans  |0       |1                             |1      |0      |17丨数据结构（下）：大整数实战，提升Shift-And算法能力 |1   |755 |
|---------|-----------|-----------|-----------------|---------|--------|------------------------------|-------|-------|---------------------------------|----|----|

2020-11-24 18:08:15.169 INFO  jdbc.sqltiming Line:373 - update node_field_data set changed=1606212495, created=1606212495, default_langcode=1, langcode='zh-hans', 
promote=0, revision_translation_affected=1, status=1, sticky=0, title='17丨数据结构（下）：大整数实战，提升Shift-And算法能力', 
type='book', uid=1, vid=755 where nid=755 
 {executed in 0 msec}
2020-11-24 18:08:15.170 INFO  jdbc.sqltiming Line:373 - update node_field_revision set changed=1606212495, created=1606212495, default_langcode=1, 
langcode='zh-hans', promote=0, revision_translation_affected=1, status=1, sticky=0, title='17丨数据结构（下）：大整数实战，提升Shift-And算法能力', 
uid=1, vid=755 where nid=755 
 {executed in 0 msec}
2020-11-24 18:08:15.174 INFO  jdbc.sqltiming Line:373 - select bookfieldm0_.entity_id as entity_i1_8_, bookfieldm0_.bundle as bundle2_8_, bookfieldm0_.delta 
as delta3_8_, bookfieldm0_.langcode as langcode4_8_, bookfieldm0_.field_media_value as field_me5_8_, 
bookfieldm0_.revision_id as revision6_8_ from node__field_media bookfieldm0_ where bookfieldm0_.entity_id=755 
 {executed in 0 msec}
2020-11-24 18:08:15.174 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------------|------------|
|entity_id |bundle |delta |langcode |field_media_value |revision_id |
|----------|-------|------|---------|------------------|------------|
|755       |book   |0     |zh-hans  |                  |755         |
|----------|-------|------|---------|------------------|------------|

2020-11-24 18:08:15.176 INFO  jdbc.sqltiming Line:373 - select nodefieldm0_.entity_id as entity_i1_17_0_, nodefieldm0_.bundle as bundle2_17_0_, nodefieldm0_.delta 
as delta3_17_0_, nodefieldm0_.langcode as langcode4_17_0_, nodefieldm0_.field_media_value as 
field_me5_17_0_, nodefieldm0_.revision_id as revision6_17_0_ from node_revision__field_media 
nodefieldm0_ where nodefieldm0_.entity_id=755 
 {executed in 0 msec}
2020-11-24 18:08:15.176 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------------|------------|
|entity_id |bundle |delta |langcode |field_media_value |revision_id |
|----------|-------|------|---------|------------------|------------|
|[unread]  |book   |0     |zh-hans  |                  |755         |
|----------|-------|------|---------|------------------|------------|

2020-11-24 18:08:15.178 INFO  jdbc.sqltiming Line:373 - select bookfieldc0_.entity_id as entity_i1_5_, bookfieldc0_.bundle as bundle2_5_, bookfieldc0_.field_comment_value 
as field_co3_5_, bookfieldc0_.delta as delta4_5_, bookfieldc0_.field_comment_format as field_co5_5_, 
bookfieldc0_.langcode as langcode6_5_, bookfieldc0_.revision_id as revision7_5_ from node__field_comment 
bookfieldc0_ where bookfieldc0_.entity_id=755 
 {executed in 0 msec}
2020-11-24 18:08:15.179 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|--------------------|------|---------------------|---------|------------|
|entity_id |bundle |field_comment_value |delta |field_comment_format |langcode |revision_id |
|----------|-------|--------------------|------|---------------------|---------|------------|
|755       |book   |                    |0     |full_html            |zh-hans  |755         |
|----------|-------|--------------------|------|---------------------|---------|------------|

2020-11-24 18:08:15.181 INFO  jdbc.sqltiming Line:373 - select nodefieldc0_.entity_id as entity_i1_14_0_, nodefieldc0_.bundle as bundle2_14_0_, nodefieldc0_.field_comment_value 
as field_co3_14_0_, nodefieldc0_.delta as delta4_14_0_, nodefieldc0_.field_comment_format as 
field_co5_14_0_, nodefieldc0_.langcode as langcode6_14_0_, nodefieldc0_.revision_id as revision7_14_0_ 
from node_revision__field_comment nodefieldc0_ where nodefieldc0_.entity_id=755 
 {executed in 1 msec}
2020-11-24 18:08:15.181 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|--------------------|------|---------------------|---------|------------|
|entity_id |bundle |field_comment_value |delta |field_comment_format |langcode |revision_id |
|----------|-------|--------------------|------|---------------------|---------|------------|
|[unread]  |book   |                    |0     |full_html            |zh-hans  |755         |
|----------|-------|--------------------|------|---------------------|---------|------------|

2020-11-24 18:08:15.184 INFO  jdbc.sqltiming Line:373 - select bookfieldt0_.entity_id as entity_i1_9_, bookfieldt0_.bundle as bundle2_9_, bookfieldt0_.delta 
as delta3_9_, bookfieldt0_.langcode as langcode4_9_, bookfieldt0_.revision_id as revision5_9_, 
bookfieldt0_.field_thumb_value as field_th6_9_ from node__field_thumb bookfieldt0_ where bookfieldt0_.entity_id=755 
 {executed in 1 msec}
2020-11-24 18:08:15.184 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------|------------------|
|entity_id |bundle |delta |langcode |revision_id |field_thumb_value |
|----------|-------|------|---------|------------|------------------|
|755       |book   |0     |zh-hans  |755         |                  |
|----------|-------|------|---------|------------|------------------|

2020-11-24 18:08:15.186 INFO  jdbc.sqltiming Line:373 - update node__field_thumb set bundle='book', delta=0, langcode='zh-hans', revision_id=755, field_thumb_value='https://static001.geekbang.org/resource/image/41/77/41966c49370be0ce1dbc70b962997e77.jpg' 
where entity_id=755 
 {executed in 0 msec}
2020-11-24 18:08:15.188 INFO  jdbc.sqltiming Line:373 - select nodefieldt0_.entity_id as entity_i1_18_0_, nodefieldt0_.bundle as bundle2_18_0_, nodefieldt0_.delta 
as delta3_18_0_, nodefieldt0_.langcode as langcode4_18_0_, nodefieldt0_.revision_id as revision5_18_0_, 
nodefieldt0_.field_thumb_value as field_th6_18_0_ from node_revision__field_thumb nodefieldt0_ 
where nodefieldt0_.entity_id=755 
 {executed in 0 msec}
2020-11-24 18:08:15.189 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------|------------------|
|entity_id |bundle |delta |langcode |revision_id |field_thumb_value |
|----------|-------|------|---------|------------|------------------|
|[unread]  |book   |0     |zh-hans  |755         |                  |
|----------|-------|------|---------|------------|------------------|

2020-11-24 18:08:15.190 INFO  jdbc.sqltiming Line:373 - update node_revision__field_thumb set bundle='book', delta=0, langcode='zh-hans', revision_id=755, 
field_thumb_value='https://static001.geekbang.org/resource/image/41/77/41966c49370be0ce1dbc70b962997e77.jpg' 
where entity_id=755 
 {executed in 0 msec}
2020-11-24 18:08:15.193 INFO  jdbc.sqltiming Line:373 - select bookfieldf0_.entity_id as entity_i1_6_0_, bookfieldf0_.bundle as bundle2_6_0_, bookfieldf0_.delta 
as delta3_6_0_, bookfieldf0_.field_fenlei_target_id as field_fe4_6_0_, bookfieldf0_.langcode 
as langcode5_6_0_, bookfieldf0_.revision_id as revision6_6_0_ from node__field_fenlei bookfieldf0_ 
where bookfieldf0_.entity_id=755 
 {executed in 0 msec}
2020-11-24 18:08:15.193 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------------|---------|------------|
|entity_id |bundle |delta |field_fenlei_target_id |langcode |revision_id |
|----------|-------|------|-----------------------|---------|------------|
|[unread]  |book   |0     |1                      |zh-hans  |755         |
|----------|-------|------|-----------------------|---------|------------|

2020-11-24 18:08:15.195 INFO  jdbc.sqltiming Line:373 - select nodefieldf0_.entity_id as entity_i1_15_0_, nodefieldf0_.bundle as bundle2_15_0_, nodefieldf0_.delta 
as delta3_15_0_, nodefieldf0_.field_fenlei_target_id as field_fe4_15_0_, nodefieldf0_.langcode 
as langcode5_15_0_, nodefieldf0_.revision_id as revision6_15_0_ from node_revision__field_fenlei 
nodefieldf0_ where nodefieldf0_.entity_id=755 
 {executed in 0 msec}
2020-11-24 18:08:15.196 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------------|---------|------------|
|entity_id |bundle |delta |field_fenlei_target_id |langcode |revision_id |
|----------|-------|------|-----------------------|---------|------------|
|[unread]  |book   |0     |1                      |zh-hans  |755         |
|----------|-------|------|-----------------------|---------|------------|

2020-11-24 18:08:15.197 INFO  jdbc.sqltiming Line:373 - select bookchecke0_.item_id as item_id1_2_, bookchecke0_.fsid as fsid2_2_, bookchecke0_.got 
as got3_2_, bookchecke0_.name as name4_2_, bookchecke0_.parse_fail as parse_fa5_2_, bookchecke0_.parsed 
as parsed6_2_, bookchecke0_.path as path7_2_, bookchecke0_.title as title8_2_, bookchecke0_.vid 
as vid9_2_ from book_check bookchecke0_ where bookchecke0_.fsid='84041916943983' and bookchecke0_.name='net_content' 
 {executed in 0 msec}
2020-11-24 18:08:15.198 INFO  jdbc.resultsettable Line:610 - 
|--------|---------|---------|---------|-----------|---------|---------|---------|---------|
|item_id |fsid     |got      |name     |parse_fail |parsed   |path     |title    |vid      |
|--------|---------|---------|---------|-----------|---------|---------|---------|---------|
|756     |[unread] |[unread] |[unread] |[unread]   |[unread] |[unread] |[unread] |[unread] |
|--------|---------|---------|---------|-----------|---------|---------|---------|---------|

2020-11-24 18:10:56.610 INFO  jdbc.sqltiming Line:373 - update book_check set fsid='84041916943983', got=1, name='net_content', parse_fail='', parsed=1, 
path='109-人人都能学会的编程入门课/03丨编码能力训练篇 (7讲)/做好闭环（三）：编码能力训练篇的思考题答案都在这里啦！.html', title='做好闭环（三）：编码能力训练篇的思考题答案都在这里啦！', 
vid=756 where item_id=756 
 {executed in 0 msec}
2020-11-24 18:10:56.618 INFO  jdbc.sqltiming Line:373 - select nodebodyen0_.entity_id as entity_i1_4_, nodebodyen0_.body_value as body_val2_4_, nodebodyen0_.body_summary 
as body_sum3_4_, nodebodyen0_.bundle as bundle4_4_, nodebodyen0_.delta as delta5_4_, nodebodyen0_.body_format 
as body_for6_4_, nodebodyen0_.langcode as langcode7_4_, nodebodyen0_.revision_id as revision8_4_ 
from node__body nodebodyen0_ where nodebodyen0_.entity_id=756 
 {executed in 0 msec}
2020-11-24 18:10:56.619 INFO  jdbc.resultsettable Line:610 - 
|----------|-----------|-------------|-------|------|------------|---------|------------|
|entity_id |body_value |body_summary |bundle |delta |body_format |langcode |revision_id |
|----------|-----------|-------------|-------|------|------------|---------|------------|
|756       |           |             |book   |0     |full_html   |zh-hans  |756         |
|----------|-----------|-------------|-------|------|------------|---------|------------|

2020-11-24 18:10:56.619 INFO  jdbc.sqltiming Line:373 - select nodebodyre0_.entity_id as entity_i1_13_0_, nodebodyre0_.body_value as body_val2_13_0_, 
nodebodyre0_.body_summary as body_sum3_13_0_, nodebodyre0_.bundle as bundle4_13_0_, nodebodyre0_.delta 
as delta5_13_0_, nodebodyre0_.body_format as body_for6_13_0_, nodebodyre0_.langcode as langcode7_13_0_, 
nodebodyre0_.revision_id as revision8_13_0_ from node_revision__body nodebodyre0_ where nodebodyre0_.entity_id=756 
 {executed in 0 msec}
2020-11-24 18:10:56.620 INFO  jdbc.resultsettable Line:610 - 
|----------|-----------|-------------|-------|------|------------|---------|------------|
|entity_id |body_value |body_summary |bundle |delta |body_format |langcode |revision_id |
|----------|-----------|-------------|-------|------|------------|---------|------------|
|[unread]  |           |             |book   |0     |full_html   |zh-hans  |756         |
|----------|-----------|-------------|-------|------|------------|---------|------------|

2020-11-24 18:10:56.627 INFO  jdbc.sqltiming Line:373 - update node__body set body_value='<div data-slate-editor="true" data-key="4461" autocorrect="off" 
spellcheck="false" data-gramm="false" style="outline: none; white-space: pre-wrap; overflow-wrap: 
break-word;"> <div class="se-1484e15b " data-slate-type="paragraph" data-slate-object="block" 
data-key="4462"> <span data-slate-object="text" data-key="4463"><span data-slate-leaf="true" 
data-offset-key="4463:0" data-first-offset="true"><span data-slate-string="true">你好，我是胡光。</span></span></span> 
</div> <div class="se-7e3281df " data-slate-type="paragraph" data-slate-object="block" data-key="4464"> 
<span data-slate-object="text" data-key="4465"><span data-slate-leaf="true" data-offset-key="4465:0" 
data-first-offset="true"><span data-slate-string="true">不知不觉，我们已经学完了编码能力训练篇的全部内容。其实还有很多东西想给你讲，可限于篇幅，所以咱们整个编码能力训练篇中的内容，都是与接下来的算法数据结构篇有很大的联系，并且它们对于理解程序设计，也是非常基础且重要的内容。</span></span></span> 
</div> <div class="se-d33f53bf " data-slate-type="paragraph" data-slate-object="block" data-key="4466"> 
<span data-slate-object="text" data-key="4467"><span data-slate-leaf="true" data-offset-key="4467:0" 
data-first-offset="true"><span data-slate-string="true">有道是，授之以鱼，不如授之以渔，我也相信只要你跟着课程学习，一定会感觉到自己收获到了“钓鱼工具”。如果能引发你的主动思考，进而触类旁通，举一反三，那这场学习过程就更加有意义啦。</span></span></span> 
</div> <div class="se-e9e6d030 " data-slate-type="paragraph" data-slate-object="block" data-key="4468"> 
<span data-slate-object="text" data-key="4469"><span data-slate-leaf="true" data-offset-key="4469:0" 
data-first-offset="true"><span data-slate-string="true">我也非常高兴，看到很多同学都在紧跟着专栏更新节奏，坚持学习。经常在专栏上线的第一时间，这些同学就给我留言，提出自己的疑惑。大部分留言，我都在相对应的文章中回复过了，而对于文章中的思考题呢，由于要给你充足的思考时间，所以我选择在今天这样一篇文章中，给你进行一一的解答。</span></span></span> 
</div> <div class="se-fce6de7f " data-slate-type="paragraph" data-slate-object="block" data-key="4470"> 
<span data-slate-object="text" data-key="4471"><span data-slate-leaf="true" data-offset-key="4471:0" 
data-first-offset="true"><span data-slate-string="true">看一看我的参考答案，和你的思考结果之间，有什么不同吧。也欢迎你在留言区中，给出一些你感兴趣的题目的思考结果，我希望我们能在这个过程中，碰撞出更多智慧的火花。</span></span></span> 
</div> <h2 class="se-a19bacac" data-slate-type="heading" data-slate-object="block" data-key="4472"><span 
data-slate-object="text" data-key="4473"><span data-slate-leaf="true" data-offset-key="4473:0" 
data-first-offset="true"><span data-slate-string="true">数学归纳法：搞定循环与递归的钥匙</span></span></span></h2> 
<div class="se-5cf4de38 " data-slate-type="paragraph" data-slate-object="block" data-key="4474"> 
<span data-slate-object="text" data-key="4475"><span data-slate-leaf="true" data-offset-key="4475:0" 
data-first-offset="true"><span data-slate-string="true">在这一章里呢，我们介绍了保证程序正确性的最重要的数学思维：</span></span></span><span 
data-slate-object="text" data-key="4476"><span data-slate-leaf="true" data-offset-key="4476:0" 
data-first-offset="true"><span class="se-3eaa7a64" data-slate-type="bold" data-slate-object="mark"><span 
data-slate-string="true">数学归纳法</span></span></span></span><span data-slate-object="text" data-key="4477"><span 
data-slate-leaf="true" data-offset-key="4477:0" data-first-offset="true"><span data-slate-string="true">。并且，从数学归纳法出发，我们学习了递归程序设计。递归程序设计的几点要素，就是数学归纳法中的几个重要步骤。递归中的边界条件，就是数学归纳法中的 
</span></span></span><span class="se-4dbc7a92 se-2b50b467" data-slate-type="inline-katex" data-slate-object="inline" 
data-key="4478"><span data-slate-leaf="true"><span data-slate-string="true" class="katex"><span 
class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span 
class="mord"><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="msupsub"><span 
class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span 
style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" 
style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord 
mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span 
class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></span><span 
data-slate-object="text" data-key="4480"><span data-slate-leaf="true" data-offset-key="4480:0" 
data-first-offset="true"><span data-slate-string="true">，递归中的递归过程，就是数学归纳法中的假设 </span></span></span><span 
class="se-4dbc7a92 se-2b50b467" data-slate-type="inline-katex" data-slate-object="inline" data-key="4481"><span 
data-slate-leaf="true"><span data-slate-string="true" class="katex"><span class="katex-html" 
aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span 
class="mord"><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="msupsub"><span 
class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span 
style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" 
style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord 
mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span 
class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></span><span 
data-slate-object="text" data-key="4483"><span data-slate-leaf="true" data-offset-key="4483:0" 
data-first-offset="true"><span data-slate-string="true"> 成立并证明 </span></span></span><span class="se-4dbc7a92 
se-2b50b467" data-slate-type="inline-katex" data-slate-object="inline" data-key="4484"><span 
data-slate-leaf="true"><span data-slate-string="true" class="katex"><span class="katex-html" 
aria-hidden="true"><span class="base"><span class="strut" style="height:0.902771em;vertical-align:-0.208331em;"></span><span 
class="mord"><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="msupsub"><span 
class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span 
style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" 
style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord 
mtight"><span class="mord mathdefault mtight">i</span><span class="mbin mtight">+</span><span 
class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span 
class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span></span></span></span></span></span><span 
data-slate-object="text" data-key="4486"><span data-slate-leaf="true" data-offset-key="4486:0" 
data-first-offset="true"><span data-slate-string="true"> 也成立那一步，最后两步结论放到一起，就能证明我们的递归程序整体是正确的。</span></span></span> 
</div> <div class="se-853968f1 " data-slate-type="paragraph" data-slate-object="block" data-key="4487"> 
<span data-slate-object="text" data-key="4488"><span data-slate-leaf="true" data-offset-key="4488:0" 
data-first-offset="true"><span data-slate-string="true">思考题中呢，给你留了两个问题，第一个是将菲波那契数列的递归程序，改写成循环程序，关于这个问题，你可以参考留言区中 
@奔跑的八戒、@徐洲更、@一步、@Geek_Andy_Lee00、@我思故我在 等用户的答案以及我在他们当中给出的回复内容。</span></span></span> </div> 
<div class="se-9982b5fe " data-slate-type="paragraph" data-slate-object="block" data-key="4489"> 
<span data-slate-object="text" data-key="4490"><span data-slate-leaf="true" data-offset-key="4490:0" 
data-first-offset="true"><span data-slate-string="true">第二个思考题呢，是做数学归纳法与菲波那契数列递归程序步骤的一一对应，关于这个问题，请看下面我给出的参考答案，看看和你想的有什么差别吧：</span></span></span> 
</div> <div class="se-f8cc206f se-73a51566" data-slate-type="pre" data-slate-object="block" 
data-key="4491" data-code-language="cpp"> <div class="se-2d6cd852 se-f18c4edf"> <span></span> 
</div> <div class="se-3e9fbe5a"> <div class="se-f8a0c377 se-8d41cdcb" data-code-line-number="1"></div> 
<div class="se-f8a0c377 se-8d41cdcb" data-code-line-number="2"></div> <div class="se-f8a0c377 
se-8d41cdcb" data-code-line-number="3"></div> <div class="se-f8a0c377 se-8d41cdcb" data-code-line-number="4"></div> 
<div class="se-f8a0c377 se-8d41cdcb" data-code-line-number="5"></div> <div class="se-f8a0c377 
se-8d41cdcb" data-code-line-number="6"></div> <div class="se-f8a0c377 se-8d41cdcb" data-code-line-number="7"></div> 
<div class="se-f8a0c377 se-8d41cdcb" data-code-line-number="8"></div> <div class="se-f8a0c377 
se-8d41cdcb" data-code-line-number="9"></div> <div class="se-f8a0c377 se-8d41cdcb" data-code-line-number="10"></div> 
<div class="se-f8a0c377 se-8d41cdcb" data-code-line-number="11"></div> <div class="se-f8a0c377 
se-8d41cdcb" data-code-line-number="12"></div> <div class="se-f8a0c377 se-8d41cdcb" data-code-line-number="13"></div> 
</div> <div class="se-953500a6 ps"> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" 
data-slate-object="block" data-key="4492"> <span data-slate-object="text" data-key="4493"><span 
data-slate-leaf="true" data-offset-key="4493:0" data-first-offset="true"><span class=" gkhl-meta" 
data-slate-object="annotation" data-annotation-key="gkann_1853508810" data-annotation-type="annotation"><span 
data-slate-string="true">#include &lt;stdio.h&gt;</span></span></span></span> </div> <div class="se-03eefeec 
se-2642b266" data-slate-type="code-line" data-slate-object="block" data-key="4494"> <span data-slate-object="text" 
data-key="4495"></span> </div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" 
data-slate-object="block" data-key="4496"> <span data-slate-object="text" data-key="4497"><span 
data-slate-leaf="true" data-offset-key="4497:0" data-first-offset="true"><span class=" gkhl-function" 
data-slate-object="annotation" data-annotation-key="gkann_1463148607" data-annotation-type="annotation"><span 
class=" gkhl-keyword" data-slate-object="annotation" data-annotation-key="gkann_2043028747" 
data-annotation-type="annotation"><span data-slate-string="true">int</span></span></span></span><span 
data-slate-leaf="true" data-offset-key="4497:1"><span class=" gkhl-function" data-slate-object="annotation" 
data-annotation-key="gkann_1463148607" data-annotation-type="annotation"><span data-slate-string="true"> 
</span></span></span><span data-slate-leaf="true" data-offset-key="4497:2"><span class=" gkhl-function" 
data-slate-object="annotation" data-annotation-key="gkann_1463148607" data-annotation-type="annotation"><span 
class=" gkhl-title" data-slate-object="annotation" data-annotation-key="gkann_7627853661" data-annotation-type="annotation"><span 
data-slate-string="true">fib</span></span></span></span><span data-slate-leaf="true" data-offset-key="4497:3"><span 
class=" gkhl-params" data-slate-object="annotation" data-annotation-key="gkann_4961942490" 
data-annotation-type="annotation"><span class=" gkhl-function" data-slate-object="annotation" 
data-annotation-key="gkann_1463148607" data-annotation-type="annotation"><span data-slate-string="true">(int 
n)</span></span></span></span><span data-slate-leaf="true" data-offset-key="4497:4"><span class=" 
gkhl-function" data-slate-object="annotation" data-annotation-key="gkann_1463148607" data-annotation-type="annotation"><span 
data-slate-string="true"> </span></span></span><span data-slate-leaf="true" data-offset-key="4497:5"><span 
data-slate-string="true">{</span></span></span> </div> <div class="se-03eefeec se-2642b266" 
data-slate-type="code-line" data-slate-object="block" data-key="4498"> <span data-slate-object="text" 
data-key="4499"><span data-slate-leaf="true" data-offset-key="4499:0" data-first-offset="true"><span 
data-slate-string="true"> </span></span><span data-slate-leaf="true" data-offset-key="4499:1"><span 
class=" gkhl-keyword" data-slate-object="annotation" data-annotation-key="gkann_2741910770" 
data-annotation-type="annotation"><span data-slate-string="true">if</span></span></span><span 
data-slate-leaf="true" data-offset-key="4499:2"><span data-slate-string="true"> (n == </span></span><span 
data-slate-leaf="true" data-offset-key="4499:3"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_8199407965" data-annotation-type="annotation"><span data-slate-string="true">1</span></span></span><span 
data-slate-leaf="true" data-offset-key="4499:4"><span data-slate-string="true"> || n == </span></span><span 
data-slate-leaf="true" data-offset-key="4499:5"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_4865578337" data-annotation-type="annotation"><span data-slate-string="true">2</span></span></span><span 
data-slate-leaf="true" data-offset-key="4499:6"><span data-slate-string="true">) </span></span><span 
data-slate-leaf="true" data-offset-key="4499:7"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_3708074481" data-annotation-type="annotation"><span data-slate-string="true">return</span></span></span><span 
data-slate-leaf="true" data-offset-key="4499:8"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="4499:9"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_7844075961" data-annotation-type="annotation"><span data-slate-string="true">1</span></span></span><span 
data-slate-leaf="true" data-offset-key="4499:10"><span data-slate-string="true">;</span></span></span> 
</div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" data-slate-object="block" 
data-key="4500"> <span data-slate-object="text" data-key="4501"><span data-slate-leaf="true" 
data-offset-key="4501:0" data-first-offset="true"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="4501:1"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_6351758581" data-annotation-type="annotation"><span data-slate-string="true">return</span></span></span><span 
data-slate-leaf="true" data-offset-key="4501:2"><span data-slate-string="true"> fib(n - </span></span><span 
data-slate-leaf="true" data-offset-key="4501:3"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_9874623021" data-annotation-type="annotation"><span data-slate-string="true">1</span></span></span><span 
data-slate-leaf="true" data-offset-key="4501:4"><span data-slate-string="true">) + fib(n - 
</span></span><span data-slate-leaf="true" data-offset-key="4501:5"><span class=" gkhl-number" 
data-slate-object="annotation" data-annotation-key="gkann_9367454552" data-annotation-type="annotation"><span 
data-slate-string="true">2</span></span></span><span data-slate-leaf="true" data-offset-key="4501:6"><span 
data-slate-string="true">); </span></span></span> </div> <div class="se-03eefeec se-2642b266" 
data-slate-type="code-line" data-slate-object="block" data-key="4502"> <span data-slate-object="text" 
data-key="4503"><span data-slate-leaf="true" data-offset-key="4503:0" data-first-offset="true"><span 
data-slate-string="true">}</span></span></span> </div> <div class="se-03eefeec se-2642b266" 
data-slate-type="code-line" data-slate-object="block" data-key="4504"> <span data-slate-object="text" 
data-key="4505"></span> </div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" 
data-slate-object="block" data-key="4506"> <span data-slate-object="text" data-key="4507"><span 
data-slate-leaf="true" data-offset-key="4507:0" data-first-offset="true"><span class=" gkhl-function" 
data-slate-object="annotation" data-annotation-key="gkann_0636993498" data-annotation-type="annotation"><span 
class=" gkhl-keyword" data-slate-object="annotation" data-annotation-key="gkann_9343460558" 
data-annotation-type="annotation"><span data-slate-string="true">int</span></span></span></span><span 
data-slate-leaf="true" data-offset-key="4507:1"><span class=" gkhl-function" data-slate-object="annotation" 
data-annotation-key="gkann_0636993498" data-annotation-type="annotation"><span data-slate-string="true"> 
</span></span></span><span data-slate-leaf="true" data-offset-key="4507:2"><span class=" gkhl-function" 
data-slate-object="annotation" data-annotation-key="gkann_0636993498" data-annotation-type="annotation"><span 
class=" gkhl-title" data-slate-object="annotation" data-annotation-key="gkann_2219529936" data-annotation-type="annotation"><span 
data-slate-string="true">main</span></span></span></span><span data-slate-leaf="true" data-offset-key="4507:3"><span 
class=" gkhl-params" data-slate-object="annotation" data-annotation-key="gkann_2334019033" 
data-annotation-type="annotation"><span class=" gkhl-function" data-slate-object="annotation" 
data-annotation-key="gkann_0636993498" data-annotation-type="annotation"><span data-slate-string="true">()</span></span></span></span><span 
data-slate-leaf="true" data-offset-key="4507:4"><span class=" gkhl-function" data-slate-object="annotation" 
data-annotation-key="gkann_0636993498" data-annotation-type="annotation"><span data-slate-string="true"> 
</span></span></span><span data-slate-leaf="true" data-offset-key="4507:5"><span data-slate-string="true">{</span></span></span> 
</div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" data-slate-object="block" 
data-key="4508"> <span data-slate-object="text" data-key="4509"><span data-slate-leaf="true" 
data-offset-key="4509:0" data-first-offset="true"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="4509:1"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_1778262015" data-annotation-type="annotation"><span data-slate-string="true">int</span></span></span><span 
data-slate-leaf="true" data-offset-key="4509:2"><span data-slate-string="true"> n;</span></span></span> 
</div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" data-slate-object="block" 
data-key="4510"> <span data-slate-object="text" data-key="4511"><span data-slate-leaf="true" 
data-offset-key="4511:0" data-first-offset="true"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="4511:1"><span class=" gkhl-built_in" data-slate-object="annotation" 
data-annotation-key="gkann_3800730332" data-annotation-type="annotation"><span data-slate-string="true">scanf</span></span></span><span 
data-slate-leaf="true" data-offset-key="4511:2"><span data-slate-string="true">(</span></span><span 
data-slate-leaf="true" data-offset-key="4511:3"><span class=" gkhl-string" data-slate-object="annotation" 
data-annotation-key="gkann_2463941816" data-annotation-type="annotation"><span data-slate-string="true">"%d"</span></span></span><span 
data-slate-leaf="true" data-offset-key="4511:4"><span data-slate-string="true">, &amp;n);</span></span></span> 
</div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" data-slate-object="block" 
data-key="4512"> <span data-slate-object="text" data-key="4513"><span data-slate-leaf="true" 
data-offset-key="4513:0" data-first-offset="true"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="4513:1"><span class=" gkhl-built_in" data-slate-object="annotation" 
data-annotation-key="gkann_7208606169" data-annotation-type="annotation"><span data-slate-string="true">printf</span></span></span><span 
data-slate-leaf="true" data-offset-key="4513:2"><span data-slate-string="true">(</span></span><span 
data-slate-leaf="true" data-offset-key="4513:3"><span class=" gkhl-string" data-slate-object="annotation" 
data-annotation-key="gkann_0054630675" data-annotation-type="annotation"><span data-slate-string="true">"%d\n"</span></span></span><span 
data-slate-leaf="true" data-offset-key="4513:4"><span data-slate-string="true">, fib(n));</span></span></span> 
</div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" data-slate-object="block" 
data-key="4514"> <span data-slate-object="text" data-key="4515"><span data-slate-leaf="true" 
data-offset-key="4515:0" data-first-offset="true"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="4515:1"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_6037147892" data-annotation-type="annotation"><span data-slate-string="true">return</span></span></span><span 
data-slate-leaf="true" data-offset-key="4515:2"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="4515:3"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_9578350897" data-annotation-type="annotation"><span data-slate-string="true">0</span></span></span><span 
data-slate-leaf="true" data-offset-key="4515:4"><span data-slate-string="true">;</span></span></span> 
</div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" data-slate-object="block" 
data-key="4516"> <span data-slate-object="text" data-key="4517"><span data-slate-leaf="true" 
data-offset-key="4517:0" data-first-offset="true"><span data-slate-string="true">}</span></span></span> 
</div> <div class="ps__rail-x" style="left: 0px; bottom: 0px;"> <div class="ps__thumb-x" tabindex="0" 
style="left: 0px; width: 0px;"></div> </div> <div class="ps__rail-y" style="top: 0px; right: 
0px;"> <div class="ps__thumb-y" tabindex="0" style="top: 0px; height: 0px;"></div> </div> </div> 
</div> <div class="se-7eb0bbda " data-slate-type="paragraph" data-slate-object="block" data-key="4518"> 
<span data-slate-object="text" data-key="4519"><span data-slate-leaf="true" data-offset-key="4519:0" 
data-first-offset="true"><span data-slate-string="true">其中代码的第 4 行，n == 1 和 n == 2 的条件判断，就是数学归纳法中所谓的 
</span></span></span><span class="se-4dbc7a92 se-2b50b467" data-slate-type="inline-katex" data-slate-object="inline" 
data-key="4520"><span data-slate-leaf="true"><span data-slate-string="true" class="katex"><span 
class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span 
class="mord"><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="msupsub"><span 
class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span 
style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" 
style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord 
mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span 
class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></span><span 
data-slate-object="text" data-key="4522"><span data-slate-leaf="true" data-offset-key="4522:0" 
data-first-offset="true"><span data-slate-string="true"> 成立，这一步保证了，</span></span></span><span 
data-slate-type="code" data-slate-object="inline" data-key="4523" class="se-aba79128"><span 
data-slate-object="text" data-key="4524"><span data-slate-leaf="true" data-offset-key="4524:0" 
data-first-offset="true"><span data-slate-string="true">fib</span></span></span></span><span 
data-slate-object="text" data-key="4525"><span data-slate-leaf="true" data-offset-key="4525:0" 
data-first-offset="true"><span data-slate-string="true"> 函数计算的第 1 项 和 第 2 项的斐波那契函数值一定是正确的。代码的第 
5 行中呢，就是假设 </span></span></span><span data-slate-type="code" data-slate-object="inline" data-key="4526" 
class="se-aba79128"><span data-slate-object="text" data-key="4527"><span data-slate-leaf="true" 
data-offset-key="4527:0" data-first-offset="true"><span data-slate-string="true">fib(n - 1)</span></span></span></span><span 
data-slate-object="text" data-key="4528"><span data-slate-leaf="true" data-offset-key="4528:0" 
data-first-offset="true"><span data-slate-string="true"> 和 </span></span></span><span data-slate-type="code" 
data-slate-object="inline" data-key="4529" class="se-aba79128"><span data-slate-object="text" 
data-key="4530"><span data-slate-leaf="true" data-offset-key="4530:0" data-first-offset="true"><span 
data-slate-string="true">fib(n - 2)</span></span></span></span><span data-slate-object="text" 
data-key="4531"><span data-slate-leaf="true" data-offset-key="4531:0" data-first-offset="true"><span 
data-slate-string="true">的值是正确的，那么 </span></span></span><span data-slate-type="code" data-slate-object="inline" 
data-key="4532" class="se-aba79128"><span data-slate-object="text" data-key="4533"><span data-slate-leaf="true" 
data-offset-key="4533:0" data-first-offset="true"><span data-slate-string="true">fib(n)</span></span></span></span><span 
data-slate-object="text" data-key="4534"><span data-slate-leaf="true" data-offset-key="4534:0" 
data-first-offset="true"><span data-slate-string="true"> 就的值就等于 </span></span></span><span 
data-slate-type="code" data-slate-object="inline" data-key="4535" class="se-aba79128"><span 
data-slate-object="text" data-key="4536"><span data-slate-leaf="true" data-offset-key="4536:0" 
data-first-offset="true"><span data-slate-string="true">fib(n - 1) + fib(n - 2)</span></span></span></span><span 
data-slate-object="text" data-key="4537"><span data-slate-leaf="true" data-offset-key="4537:0" 
data-first-offset="true"><span data-slate-string="true"> ，这就是数学归纳法中的第二步，假设 </span></span></span><span 
class="se-4dbc7a92 se-2b50b467" data-slate-type="inline-katex" data-slate-object="inline" data-key="4538"><span 
data-slate-leaf="true"><span data-slate-string="true" class="katex"><span class="katex-html" 
aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span 
class="mord"><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="msupsub"><span 
class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span 
style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" 
style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord 
mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span 
class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></span><span 
data-slate-object="text" data-key="4540"><span data-slate-leaf="true" data-offset-key="4540:0" 
data-first-offset="true"><span data-slate-string="true"> 成立，证明 </span></span></span><span class="se-4dbc7a92 
se-2b50b467" data-slate-type="inline-katex" data-slate-object="inline" data-key="4541"><span 
data-slate-leaf="true"><span data-slate-string="true" class="katex"><span class="katex-html" 
aria-hidden="true"><span class="base"><span class="strut" style="height:0.902771em;vertical-align:-0.208331em;"></span><span 
class="mord"><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="msupsub"><span 
class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span 
style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" 
style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord 
mtight"><span class="mord mathdefault mtight">i</span><span class="mbin mtight">+</span><span 
class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span 
class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span></span></span></span></span></span><span 
data-slate-object="text" data-key="4543"><span data-slate-leaf="true" data-offset-key="4543:0" 
data-first-offset="true"><span data-slate-string="true"> 也成立。显然如果可以保证前两项的正确性，那么 </span></span></span><span 
data-slate-type="code" data-slate-object="inline" data-key="4544" class="se-aba79128"><span 
data-slate-object="text" data-key="4545"><span data-slate-leaf="true" data-offset-key="4545:0" 
data-first-offset="true"><span data-slate-string="true">fib(n)</span></span></span></span><span 
data-slate-object="text" data-key="4546"><span data-slate-leaf="true" data-offset-key="4546:0" 
data-first-offset="true"><span data-slate-string="true"> 的值一定正确。最后我们得出结论，这个</span></span></span><span 
data-slate-type="code" data-slate-object="inline" data-key="4547" class="se-aba79128"><span 
data-slate-object="text" data-key="4548"><span data-slate-leaf="true" data-offset-key="4548:0" 
data-first-offset="true"><span data-slate-string="true">fib</span></span></span></span><span 
data-slate-object="text" data-key="4549"><span data-slate-leaf="true" data-offset-key="4549:0" 
data-first-offset="true"><span data-slate-string="true"> 递归函数设计是正确的。</span></span></span> </div> 
<h2 class="se-85f8287d" data-slate-type="heading" data-slate-object="block" data-key="4550"><span 
data-slate-object="text" data-key="4551"><span data-slate-leaf="true" data-offset-key="4551:0" 
data-first-offset="true"><span data-slate-string="true">程序设计原则：把计算过程交给计算机</span></span></span></h2> 
<div class="se-a9c3e30d " data-slate-type="paragraph" data-slate-object="block" data-key="4552"> 
<span data-slate-object="text" data-key="4553"><span data-slate-leaf="true" data-offset-key="4553:0" 
data-first-offset="true"><span data-slate-string="true">这一节中，我们强调了程序设计的基本原则，就是将计算过程交给计算机。我们负责逻辑组织，计算机负责具体计算过程，这就是所谓的专业的事情交给专业的人来做。</span></span></span> 
</div> <div class="se-b5b0ba4f " data-slate-type="paragraph" data-slate-object="block" data-key="4554"> 
<span data-slate-object="text" data-key="4555"><span data-slate-leaf="true" data-offset-key="4555:0" 
data-first-offset="true"><span data-slate-string="true">本节中的思考题是计算 100 以内自然数的 “和的平方” 与 “平方和” 
的差值。在这里呢，我要给用户 @胖胖胖、@不便明言、@Geek_And_Lee00 点赞。具体的答案，你也可以参考这三个用户在留言区中的内容。</span></span></span> 
</div> <div class="se-b702e1cb " data-slate-type="paragraph" data-slate-object="block" data-key="4556"> 
<span data-slate-object="text" data-key="4557"><span data-slate-leaf="true" data-offset-key="4557:0" 
data-first-offset="true"><span data-slate-string="true">关于这道思考题的第一问，我就不给你做演示了，实现起来比较简单，你应该有能力自我完成的。下面，我主要给出 
“平方和” 公式的推导过程，而对于 “和的平方” 你可以基于等差数列求和公式来求解。</span></span></span> </div> <div class="se-96a77416 
" data-slate-type="paragraph" data-slate-object="block" data-key="4558"> <span data-slate-object="text" 
data-key="4559"><span data-slate-leaf="true" data-offset-key="4559:0" data-first-offset="true"><span 
data-slate-string="true">教给你一种比较通用的推导平方和公式的方法，也是我用着最顺手的方法，就是依靠立方和，推导平方和。首先，我们先列出来相邻两项的立方差：</span></span></span> 
</div> <div class="se-2acc0e90 ps ps--active-x"> <div data-slate-type="block-katex" data-slate-object="block" 
data-key="4560"> <span class="katex-display"><span class="katex"><span class="katex-html" aria-hidden="true"><span 
class="base"><span class="strut" style="height:9.12054em;vertical-align:-4.31027em;"></span><span 
class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span 
class="vlist-r"><span class="vlist" style="height:4.81027em;"><span style="top:-6.946162em;"><span 
class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord 
mathdefault">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span 
class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span 
class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span 
class="mord mtight">3</span></span></span></span></span></span></span></span><span class="mspace" 
style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" 
style="margin-right:0.2222222222222222em;"></span><span class="mopen">(</span><span class="mord 
mathdefault">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span 
class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span 
class="mord">1</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span 
class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span 
style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span 
class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span></span></span><span 
style="top:-5.422054em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span 
class="mopen">(</span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span 
class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span 
class="mord">1</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span 
class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span 
style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span 
class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span><span 
class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span 
class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mopen">(</span><span 
class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span 
class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span 
class="mord">2</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span 
class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span 
style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span 
class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span></span></span><span 
style="top:-3.897946em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span 
class="mopen">(</span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span 
class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span 
class="mord">2</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span 
class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span 
style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span 
class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span><span 
class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span 
class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mopen">(</span><span 
class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span 
class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span 
class="mord">3</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span 
class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span 
style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span 
class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span></span></span><span 
style="top:-2.397946em;"><span class="pstrut" style="height:3em;"></span><span class="mord"></span></span><span 
style="top:-0.8738380000000001em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span 
class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span 
class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span 
class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span 
class="mord mtight">3</span></span></span></span></span></span></span></span><span class="mspace" 
style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" 
style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord">1</span><span 
class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span 
style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span 
class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span></span></span><span 
style="top:0.6502699999999999em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span 
class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span 
class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span 
class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span 
class="mord mtight">3</span></span></span></span></span></span></span></span><span class="mspace" 
style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" 
style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord">0</span><span 
class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span 
style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span 
class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span></span></span></span><span 
class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:4.31027em;"><span></span></span></span></span></span><span 
class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" 
style="height:4.81027em;"><span style="top:-6.946162em;"><span class="pstrut" style="height:3em;"></span><span 
class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span 
class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span 
class="mord">3</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span 
class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span 
class="mord"><span class="mord mathdefault">n</span><span class="msupsub"><span class="vlist-t"><span 
class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span 
class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span 
class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" 
style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" 
style="margin-right:0.2222222222222222em;"></span><span class="mord">3</span><span class="mspace" 
style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" 
style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault">n</span><span 
class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span 
class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">1</span></span></span><span 
style="top:-5.422054em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span 
class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span 
class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span 
class="mord">3</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span 
class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span 
class="mopen">(</span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span 
class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span 
class="mord">1</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span 
class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span 
style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span 
class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span 
class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span 
class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">3</span><span 
class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span 
class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mopen">(</span><span 
class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span 
class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span 
class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span 
class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span 
class="mord">1</span></span></span><span style="top:-3.897946em;"><span class="pstrut" style="height:3em;"></span><span 
class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span 
class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span 
class="mord">3</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span 
class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span 
class="mopen">(</span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span 
class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span 
class="mord">2</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span 
class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span 
style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span 
class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span 
class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span 
class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">3</span><span 
class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span 
class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mopen">(</span><span 
class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span 
class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span 
class="mord">2</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span 
class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span 
class="mord">1</span></span></span><span style="top:-2.397946em;"><span class="pstrut" style="height:3em;"></span><span 
class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span 
class="minner">…</span></span></span><span style="top:-0.8738380000000001em;"><span class="pstrut" 
style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace" 
style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" 
style="margin-right:0.2777777777777778em;"></span><span class="mord">3</span><span class="mspace" 
style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" 
style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord">2</span><span 
class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span 
style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span 
class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span 
class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span 
class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">3</span><span 
class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span 
class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord">2</span><span 
class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span 
style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span 
class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span 
class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span 
class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">1</span></span></span><span 
style="top:0.6502699999999999em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span 
class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span 
class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span 
class="mord">3</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span 
class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span 
class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span 
class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span 
class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span 
class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" 
style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" 
style="margin-right:0.2222222222222222em;"></span><span class="mord">3</span><span class="mspace" 
style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" 
style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord">1</span><span 
class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span 
style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span 
class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span 
class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span 
class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">1</span></span></span></span><span 
class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:4.31027em;"><span></span></span></span></span></span></span></span></span></span></span></span> 
</div> <div class="ps__rail-x" style="width: 435px; left: 0px; bottom: 0px;"> <div class="ps__thumb-x" 
tabindex="0" style="left: 0px; width: 405px;"></div> </div> <div class="ps__rail-y" style="top: 
0px; right: 0px;"> <div class="ps__thumb-y" tabindex="0" style="top: 0px; height: 0px;"></div> 
</div> </div> <div class="se-95af5b31 " data-slate-type="paragraph" data-slate-object="block" 
data-key="4562"> <span data-slate-object="text" data-key="4563"><span data-slate-leaf="true" 
data-offset-key="4563:0" data-first-offset="true"><span data-slate-string="true">如上公式所示，我们将上面罗列的 
n 个等式的左右两侧分别相加，就得到了如下式子：</span></span></span> </div> <div class="se-999c83a0 ps ps--active-x"> 
<div data-slate-type="block-katex" data-slate-object="block" data-key="4564"> <span class="katex-display"><span 
class="katex"><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" 
style="height:6.2531740000000005em;vertical-align:-2.8765870000000002em;"></span><span class="mord"><span 
class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span 
class="vlist" style="height:3.3765870000000002em;"><span style="top:-6.163876em;"><span class="pstrut" 
style="height:3.6513970000000002em;"></span><span class="mord"></span></span><span style="top:-4.663876em;"><span 
class="pstrut" style="height:3.6513970000000002em;"></span><span class="mord"></span></span><span 
style="top:-2.3524790000000007em;"><span class="pstrut" style="height:3.6513970000000002em;"></span><span 
class="mord"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span 
class="vlist" style="height:2.876587em;"><span></span></span></span></span></span><span class="col-align-l"><span 
class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.3765870000000002em;"><span 
style="top:-6.163876em;"><span class="pstrut" style="height:3.6513970000000002em;"></span><span 
class="mord"><span class="mord"></span><span class="mord cjk_fallback">左</span><span class="mord 
cjk_fallback">侧</span><span class="mord cjk_fallback">：</span><span class="mord"><span class="mord 
mathdefault">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span 
class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span 
class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span 
class="mord mtight">3</span></span></span></span></span></span></span></span><span class="mspace" 
style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" 
style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathdefault">n</span><span 
class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span 
style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span 
class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span><span 
class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span 
class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mopen">(</span><span 
class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span 
class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span 
class="mord">1</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span 
class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span 
style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span 
class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span><span 
class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span 
class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mopen">(</span><span 
class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span 
class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span 
class="mord">1</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span 
class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span 
style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span 
class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span><span 
class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span 
class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mopen">(</span><span 
class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span 
class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span 
class="mord">2</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span 
class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span 
style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span 
class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span><span 
class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span 
class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="minner">…</span><span 
class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span 
class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord">1</span><span 
class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span 
style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span 
class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span><span 
class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span 
class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord">1</span><span 
class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span 
style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span 
class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span><span 
class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span 
class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord">0</span><span 
class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span 
style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span 
class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span></span></span><span 
style="top:-2.3524789999999998em;"><span class="pstrut" style="height:3.6513970000000002em;"></span><span 
class="mord"><span class="mord"></span><span class="mord cjk_fallback">右</span><span class="mord 
cjk_fallback">侧</span><span class="mord cjk_fallback">：</span><span class="mord">3</span><span 
class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span 
class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mop op-limits"><span 
class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6513970000000002em;"><span 
style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span 
class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault 
mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span 
style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop 
op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span 
class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span 
class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span><span 
class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span 
class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span 
class="mord mathdefault">i</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span 
class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span 
class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span 
class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" 
style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" 
style="margin-right:0.2222222222222222em;"></span><span class="mord">3</span><span class="mspace" 
style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" 
style="margin-right:0.2222222222222222em;"></span><span class="mop op-limits"><span class="vlist-t 
vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6513970000000002em;"><span 
style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span 
class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault 
mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span 
style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop 
op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span 
class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span 
class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span><span 
class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span 
class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">i</span><span 
class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span 
class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault">n</span></span></span></span><span 
class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.8765870000000002em;"><span></span></span></span></span></span></span></span></span></span></span></span> 
</div> <div class="ps__rail-x" style="width: 435px; left: 0px; bottom: 0px;"> <div class="ps__thumb-x" 
tabindex="0" style="left: 0px; width: 312px;"></div> </div> <div class="ps__rail-y" style="top: 
0px; right: 0px;"> <div class="ps__thumb-y" tabindex="0" style="top: 0px; height: 0px;"></div> 
</div> </div> <div class="se-5b6e8ed7 " data-slate-type="paragraph" data-slate-object="block" 
data-key="4566"> <span data-slate-object="text" data-key="4567"><span data-slate-leaf="true" 
data-offset-key="4567:0" data-first-offset="true"><span data-slate-string="true">我们看到左侧就剩下一项 
n 的立方了，这一项是可算的，右侧有一个 3 倍的平方和项，和一个 3 倍的等差数列求和项，以及一个常数项 n。接下来，左侧等于右侧，我们将平方和项与其他几项分别置于等式的两侧，就得到了如下平方和公式：</span></span></span> 
</div> <div class="se-b3484a3c ps"> <div data-slate-type="block-katex" data-slate-object="block" 
data-key="4568"> <span class="katex-display"><span class="katex"><span class="katex-html" aria-hidden="true"><span 
class="base"><span class="strut" style="height:15.916264000000002em;vertical-align:-7.708132000000001em;"></span><span 
class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span 
class="vlist-r"><span class="vlist" style="height:8.208132em;"><span style="top:-11.019529000000002em;"><span 
class="pstrut" style="height:3.6513970000000002em;"></span><span class="mord"><span class="mord 
cjk_fallback">左</span><span class="mord cjk_fallback">侧</span></span></span><span style="top:-8.708132em;"><span 
class="pstrut" style="height:3.6513970000000002em;"></span><span class="mord"></span></span><span 
style="top:-6.290463000000001em;"><span class="pstrut" style="height:3.6513970000000002em;"></span><span 
class="mord"><span class="mord cjk_fallback">移</span><span class="mord cjk_fallback">项</span></span></span><span 
style="top:-3.9790660000000004em;"><span class="pstrut" style="height:3.6513970000000002em;"></span><span 
class="mord"></span></span><span style="top:-0.7499999999999989em;"><span class="pstrut" style="height:3.6513970000000002em;"></span><span 
class="mord"></span></span><span style="top:2.4790660000000004em;"><span class="pstrut" style="height:3.6513970000000002em;"></span><span 
class="mord"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span 
class="vlist" style="height:7.708132000000001em;"><span></span></span></span></span></span><span 
class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" 
style="height:8.208132em;"><span style="top:-11.019529000000002em;"><span class="pstrut" style="height:3.6513970000000002em;"></span><span 
class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span 
class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span 
class="mord cjk_fallback">右</span><span class="mord cjk_fallback">侧</span><span class="mord 
cjk_fallback">：</span></span></span><span style="top:-8.708132em;"><span class="pstrut" style="height:3.6513970000000002em;"></span><span 
class="mord"><span class="mord"></span><span class="mord"><span class="mord mathdefault">n</span><span 
class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span 
style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span 
class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span><span 
class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span 
class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">3</span><span 
class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span 
class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mop op-limits"><span 
class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6513970000000002em;"><span 
style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span 
class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault 
mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span 
style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop 
op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span 
class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span 
class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span><span 
class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span 
class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span 
class="mord mathdefault">i</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span 
class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span 
class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span 
class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" 
style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" 
style="margin-right:0.2222222222222222em;"></span><span class="mopen">(</span><span class="mord">3</span><span 
class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span 
class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mop op-limits"><span 
class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6513970000000002em;"><span 
style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span 
class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault 
mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span 
style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop 
op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span 
class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span 
class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span><span 
class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span 
class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">i</span><span 
class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span 
class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span 
class="mord mathdefault">n</span></span></span><span style="top:-6.290463000000001em;"><span 
class="pstrut" style="height:3.6513970000000002em;"></span><span class="mord"><span class="mord"></span><span 
class="mord cjk_fallback">：</span></span></span><span style="top:-3.9790660000000004em;"><span 
class="pstrut" style="height:3.6513970000000002em;"></span><span class="mord"><span class="mord"></span><span 
class="mord">3</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span 
class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span 
class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" 
style="height:1.6513970000000002em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" 
style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord 
mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span 
class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" 
style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span 
style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span 
class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault 
mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span 
class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" 
style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">i</span><span 
class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span 
style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span 
class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span 
class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span 
class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord 
mathdefault">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span 
class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span 
class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span 
class="mord mtight">3</span></span></span></span></span></span></span></span><span class="mspace" 
style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" 
style="margin-right:0.2222222222222222em;"></span><span class="mopen">(</span><span class="mord">3</span><span 
class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span 
class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mop op-limits"><span 
class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6513970000000002em;"><span 
style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span 
class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault 
mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span 
style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop 
op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span 
class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span 
class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span><span 
class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span 
class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span 
class="mord mathdefault">i</span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span 
class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span 
class="mord mathdefault">n</span></span></span><span style="top:-0.7499999999999989em;"><span 
class="pstrut" style="height:3.6513970000000002em;"></span><span class="mord"><span class="mord"></span><span 
class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span 
class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6513970000000002em;"><span 
style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span 
class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault 
mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span 
style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop 
op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span 
class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span 
class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span><span 
class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span 
class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span 
class="mord mathdefault">i</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span 
class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span 
class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span 
class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" 
style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" 
style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span 
class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.5038179999999999em;"><span 
style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span 
class="mord">3</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span 
class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.6897100000000003em;"><span 
class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord 
mathdefault">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span 
class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span 
class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span 
class="mord mtight">3</span></span></span></span></span></span></span></span><span class="mspace" 
style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" 
style="margin-right:0.2222222222222222em;"></span><span class="mopen">(</span><span class="mord">3</span><span 
class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span 
class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mop"><span class="mop 
op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span 
class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.804292em;"><span 
style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span 
class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault 
mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span 
style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span 
class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault 
mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span 
class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span 
class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">i</span><span 
class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span 
class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span 
class="mord mathdefault">n</span></span></span></span><span class="vlist-s">​</span></span><span 
class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span 
class="mclose nulldelimiter"></span></span></span></span><span style="top:2.4790660000000004em;"><span 
class="pstrut" style="height:3.6513970000000002em;"></span><span class="mord"><span class="mord"></span><span 
class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span 
class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6513970000000002em;"><span 
style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span 
class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault 
mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span 
style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop 
op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span 
class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span 
class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span><span 
class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span 
class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span 
class="mord mathdefault">i</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span 
class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span 
class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span 
class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" 
style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" 
style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span 
class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.491108em;"><span 
style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span 
class="mord">6</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span 
class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span 
class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span><span 
class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span 
class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord 
mathdefault">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span 
class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span 
class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span 
class="mord mtight">3</span></span></span></span></span></span></span></span><span class="mspace" 
style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" 
style="margin-right:0.2222222222222222em;"></span><span class="mord">3</span><span class="mspace" 
style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" 
style="margin-right:0.2222222222222222em;"></span><span class="mopen">(</span><span class="mord">1</span><span 
class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span 
class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault">n</span><span 
class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span 
class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span 
class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span 
class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span 
class="mord">2</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span 
class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span 
class="mord mathdefault">n</span></span></span></span><span class="vlist-s">​</span></span><span 
class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span 
class="mclose nulldelimiter"></span></span></span></span></span><span class="vlist-s">​</span></span><span 
class="vlist-r"><span class="vlist" style="height:7.708132000000001em;"><span></span></span></span></span></span></span></span></span></span></span></span> 
</div> <div class="ps__rail-x" style="left: 0px; bottom: 0px;"> <div class="ps__thumb-x" tabindex="0" 
style="left: 0px; width: 0px;"></div> </div> <div class="ps__rail-y" style="top: 0px; right: 
0px;"> <div class="ps__thumb-y" tabindex="0" style="top: 0px; height: 0px;"></div> </div> </div> 
<div class="se-bd196abb " data-slate-type="paragraph" data-slate-object="block" data-key="4570"> 
<span data-slate-object="text" data-key="4571"><span data-slate-leaf="true" data-offset-key="4571:0" 
data-first-offset="true"><span data-slate-string="true">至此，我们就得到了平方和公式。其实，你还可以尝试使用这种方法，求解立方和公式，整体步骤差不多，就是先表示出相邻两项的四次方差，然后用如上步骤，继续推导即可。</span></span></span> 
</div> <h2 class="se-44108ba5" data-slate-type="heading" data-slate-object="block" data-key="4572"><span 
data-slate-object="text" data-key="4573"><span data-slate-leaf="true" data-offset-key="4573:0" 
data-first-offset="true"><span data-slate-string="true">框架思维（上）：将素数筛算法学成框架算法</span></span></span></h2> 
<div class="se-5c618563 " data-slate-type="paragraph" data-slate-object="block" data-key="4574"> 
<span data-slate-object="text" data-key="4575"><span data-slate-leaf="true" data-offset-key="4575:0" 
data-first-offset="true"><span data-slate-string="true">这一节课，我们学习了素数筛算法，素数筛每一轮找到一个素数，然后在一个标记数组中，标记掉这个素数所有的倍数，剩下没有被标记掉的数字，就是我们要的素数了。最后，我留了一个程序性质证明题，具体看如下代码：</span></span></span> 
</div> <div class="se-b669c0dc se-b861b905" data-slate-type="pre" data-slate-object="block" 
data-key="4576" data-code-language="cpp"> <div class="se-00db510d se-d704582c"> <span></span> 
</div> <div class="se-dbc3258f"> <div class="se-2b21f7be se-fec83c48" data-code-line-number="1"></div> 
<div class="se-2b21f7be se-fec83c48" data-code-line-number="2"></div> <div class="se-2b21f7be 
se-fec83c48" data-code-line-number="3"></div> <div class="se-2b21f7be se-fec83c48" data-code-line-number="4"></div> 
<div class="se-2b21f7be se-fec83c48" data-code-line-number="5"></div> <div class="se-2b21f7be 
se-fec83c48" data-code-line-number="6"></div> <div class="se-2b21f7be se-fec83c48" data-code-line-number="7"></div> 
<div class="se-2b21f7be se-fec83c48" data-code-line-number="8"></div> <div class="se-2b21f7be 
se-fec83c48" data-code-line-number="9"></div> <div class="se-2b21f7be se-fec83c48" data-code-line-number="10"></div> 
<div class="se-2b21f7be se-fec83c48" data-code-line-number="11"></div> <div class="se-2b21f7be 
se-fec83c48" data-code-line-number="12"></div> <div class="se-2b21f7be se-fec83c48" data-code-line-number="13"></div> 
<div class="se-2b21f7be se-fec83c48" data-code-line-number="14"></div> <div class="se-2b21f7be 
se-fec83c48" data-code-line-number="15"></div> <div class="se-2b21f7be se-fec83c48" data-code-line-number="16"></div> 
<div class="se-2b21f7be se-fec83c48" data-code-line-number="17"></div> <div class="se-2b21f7be 
se-fec83c48" data-code-line-number="18"></div> <div class="se-2b21f7be se-fec83c48" data-code-line-number="19"></div> 
<div class="se-2b21f7be se-fec83c48" data-code-line-number="20"></div> <div class="se-2b21f7be 
se-fec83c48" data-code-line-number="21"></div> <div class="se-2b21f7be se-fec83c48" data-code-line-number="22"></div> 
<div class="se-2b21f7be se-fec83c48" data-code-line-number="23"></div> <div class="se-2b21f7be 
se-fec83c48" data-code-line-number="24"></div> <div class="se-2b21f7be se-fec83c48" data-code-line-number="25"></div> 
<div class="se-2b21f7be se-fec83c48" data-code-line-number="26"></div> <div class="se-2b21f7be 
se-fec83c48" data-code-line-number="27"></div> <div class="se-2b21f7be se-fec83c48" data-code-line-number="28"></div> 
</div> <div class="se-969ad72f ps ps--active-x"> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" 
data-slate-object="block" data-key="4577"> <span data-slate-object="text" data-key="4578"><span 
data-slate-leaf="true" data-offset-key="4578:0" data-first-offset="true"><span class=" gkhl-meta" 
data-slate-object="annotation" data-annotation-key="gkann_3597199675" data-annotation-type="annotation"><span 
data-slate-string="true">#include &lt;stdio.h&gt;</span></span></span></span> </div> <div class="se-03eefeec 
se-2642b266" data-slate-type="code-line" data-slate-object="block" data-key="4579"> <span data-slate-object="text" 
data-key="4580"></span> </div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" 
data-slate-object="block" data-key="4581"> <span data-slate-object="text" data-key="4582"><span 
data-slate-leaf="true" data-offset-key="4582:0" data-first-offset="true"><span class=" gkhl-comment" 
data-slate-object="annotation" data-annotation-key="gkann_5797002411" data-annotation-type="annotation"><span 
data-slate-string="true">// 打印一个素因子，并且在中间输出 * 乘号</span></span></span></span> </div> <div class="se-03eefeec 
se-2642b266" data-slate-type="code-line" data-slate-object="block" data-key="4583"> <span data-slate-object="text" 
data-key="4584"><span data-slate-leaf="true" data-offset-key="4584:0" data-first-offset="true"><span 
class=" gkhl-keyword" data-slate-object="annotation" data-annotation-key="gkann_7105396112" 
data-annotation-type="annotation"><span class=" gkhl-function" data-slate-object="annotation" 
data-annotation-key="gkann_7843854951" data-annotation-type="annotation"><span data-slate-string="true">void</span></span></span></span><span 
data-slate-leaf="true" data-offset-key="4584:1"><span class=" gkhl-function" data-slate-object="annotation" 
data-annotation-key="gkann_7843854951" data-annotation-type="annotation"><span data-slate-string="true"> 
</span></span></span><span data-slate-leaf="true" data-offset-key="4584:2"><span class=" gkhl-title" 
data-slate-object="annotation" data-annotation-key="gkann_0164675521" data-annotation-type="annotation"><span 
class=" gkhl-function" data-slate-object="annotation" data-annotation-key="gkann_7843854951" 
data-annotation-type="annotation"><span data-slate-string="true">print_num</span></span></span></span><span 
data-slate-leaf="true" data-offset-key="4584:3"><span class=" gkhl-params" data-slate-object="annotation" 
data-annotation-key="gkann_5437214026" data-annotation-type="annotation"><span class=" gkhl-function" 
data-slate-object="annotation" data-annotation-key="gkann_7843854951" data-annotation-type="annotation"><span 
data-slate-string="true">(int num, int *flag)</span></span></span></span><span data-slate-leaf="true" 
data-offset-key="4584:4"><span class=" gkhl-function" data-slate-object="annotation" data-annotation-key="gkann_7843854951" 
data-annotation-type="annotation"><span data-slate-string="true"> </span></span></span><span 
data-slate-leaf="true" data-offset-key="4584:5"><span data-slate-string="true">{</span></span></span> 
</div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" data-slate-object="block" 
data-key="4585"> <span data-slate-object="text" data-key="4586"><span data-slate-leaf="true" 
data-offset-key="4586:0" data-first-offset="true"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="4586:1"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_5912669976" data-annotation-type="annotation"><span data-slate-string="true">if</span></span></span><span 
data-slate-leaf="true" data-offset-key="4586:2"><span data-slate-string="true"> (*flag == </span></span><span 
data-slate-leaf="true" data-offset-key="4586:3"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_2217433107" data-annotation-type="annotation"><span data-slate-string="true">1</span></span></span><span 
data-slate-leaf="true" data-offset-key="4586:4"><span data-slate-string="true">) </span></span><span 
data-slate-leaf="true" data-offset-key="4586:5"><span class=" gkhl-built_in" data-slate-object="annotation" 
data-annotation-key="gkann_5793887297" data-annotation-type="annotation"><span data-slate-string="true">printf</span></span></span><span 
data-slate-leaf="true" data-offset-key="4586:6"><span data-slate-string="true">(</span></span><span 
data-slate-leaf="true" data-offset-key="4586:7"><span class=" gkhl-string" data-slate-object="annotation" 
data-annotation-key="gkann_2348877020" data-annotation-type="annotation"><span data-slate-string="true">" 
* "</span></span></span><span data-slate-leaf="true" data-offset-key="4586:8"><span data-slate-string="true">);</span></span></span> 
</div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" data-slate-object="block" 
data-key="4587"> <span data-slate-object="text" data-key="4588"><span data-slate-leaf="true" 
data-offset-key="4588:0" data-first-offset="true"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="4588:1"><span class=" gkhl-built_in" data-slate-object="annotation" 
data-annotation-key="gkann_5927401861" data-annotation-type="annotation"><span data-slate-string="true">printf</span></span></span><span 
data-slate-leaf="true" data-offset-key="4588:2"><span data-slate-string="true">(</span></span><span 
data-slate-leaf="true" data-offset-key="4588:3"><span class=" gkhl-string" data-slate-object="annotation" 
data-annotation-key="gkann_4619037799" data-annotation-type="annotation"><span data-slate-string="true">"%d"</span></span></span><span 
data-slate-leaf="true" data-offset-key="4588:4"><span data-slate-string="true">, num);</span></span></span> 
</div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" data-slate-object="block" 
data-key="4589"> <span data-slate-object="text" data-key="4590"><span data-slate-leaf="true" 
data-offset-key="4590:0" data-first-offset="true"><span data-slate-string="true"> *flag = </span></span><span 
data-slate-leaf="true" data-offset-key="4590:1"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_7297226349" data-annotation-type="annotation"><span data-slate-string="true">1</span></span></span><span 
data-slate-leaf="true" data-offset-key="4590:2"><span data-slate-string="true">;</span></span></span> 
</div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" data-slate-object="block" 
data-key="4591"> <span data-slate-object="text" data-key="4592"><span data-slate-leaf="true" 
data-offset-key="4592:0" data-first-offset="true"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="4592:1"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_2889668935" data-annotation-type="annotation"><span data-slate-string="true">return</span></span></span><span 
data-slate-leaf="true" data-offset-key="4592:2"><span data-slate-string="true"> ;</span></span></span> 
</div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" data-slate-object="block" 
data-key="4593"> <span data-slate-object="text" data-key="4594"><span data-slate-leaf="true" 
data-offset-key="4594:0" data-first-offset="true"><span data-slate-string="true">}</span></span></span> 
</div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" data-slate-object="block" 
data-key="4595"> <span data-slate-object="text" data-key="4596"></span> </div> <div class="se-03eefeec 
se-2642b266" data-slate-type="code-line" data-slate-object="block" data-key="4597"> <span data-slate-object="text" 
data-key="4598"><span data-slate-leaf="true" data-offset-key="4598:0" data-first-offset="true"><span 
class=" gkhl-keyword" data-slate-object="annotation" data-annotation-key="gkann_1099600871" 
data-annotation-type="annotation"><span class=" gkhl-function" data-slate-object="annotation" 
data-annotation-key="gkann_5819554318" data-annotation-type="annotation"><span data-slate-string="true">int</span></span></span></span><span 
data-slate-leaf="true" data-offset-key="4598:1"><span class=" gkhl-function" data-slate-object="annotation" 
data-annotation-key="gkann_5819554318" data-annotation-type="annotation"><span data-slate-string="true"> 
</span></span></span><span data-slate-leaf="true" data-offset-key="4598:2"><span class=" gkhl-function" 
data-slate-object="annotation" data-annotation-key="gkann_5819554318" data-annotation-type="annotation"><span 
class=" gkhl-title" data-slate-object="annotation" data-annotation-key="gkann_8677026916" data-annotation-type="annotation"><span 
data-slate-string="true">main</span></span></span></span><span data-slate-leaf="true" data-offset-key="4598:3"><span 
class=" gkhl-function" data-slate-object="annotation" data-annotation-key="gkann_5819554318" 
data-annotation-type="annotation"><span class=" gkhl-params" data-slate-object="annotation" 
data-annotation-key="gkann_5975865025" data-annotation-type="annotation"><span data-slate-string="true">()</span></span></span></span><span 
data-slate-leaf="true" data-offset-key="4598:4"><span class=" gkhl-function" data-slate-object="annotation" 
data-annotation-key="gkann_5819554318" data-annotation-type="annotation"><span data-slate-string="true"> 
</span></span></span><span data-slate-leaf="true" data-offset-key="4598:5"><span data-slate-string="true">{</span></span></span> 
</div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" data-slate-object="block" 
data-key="4599"> <span data-slate-object="text" data-key="4600"><span data-slate-leaf="true" 
data-offset-key="4600:0" data-first-offset="true"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="4600:1"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_9926254461" data-annotation-type="annotation"><span data-slate-string="true">int</span></span></span><span 
data-slate-leaf="true" data-offset-key="4600:2"><span data-slate-string="true"> n, i = </span></span><span 
data-slate-leaf="true" data-offset-key="4600:3"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_3771187065" data-annotation-type="annotation"><span data-slate-string="true">2</span></span></span><span 
data-slate-leaf="true" data-offset-key="4600:4"><span data-slate-string="true">, flag = </span></span><span 
data-slate-leaf="true" data-offset-key="4600:5"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_9947918184" data-annotation-type="annotation"><span data-slate-string="true">0</span></span></span><span 
data-slate-leaf="true" data-offset-key="4600:6"><span data-slate-string="true">, raw_n;</span></span></span> 
</div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" data-slate-object="block" 
data-key="4601"> <span data-slate-object="text" data-key="4602"><span data-slate-leaf="true" 
data-offset-key="4602:0" data-first-offset="true"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="4602:1"><span class=" gkhl-built_in" data-slate-object="annotation" 
data-annotation-key="gkann_7085561610" data-annotation-type="annotation"><span data-slate-string="true">scanf</span></span></span><span 
data-slate-leaf="true" data-offset-key="4602:2"><span data-slate-string="true">(</span></span><span 
data-slate-leaf="true" data-offset-key="4602:3"><span class=" gkhl-string" data-slate-object="annotation" 
data-annotation-key="gkann_2619849487" data-annotation-type="annotation"><span data-slate-string="true">"%d"</span></span></span><span 
data-slate-leaf="true" data-offset-key="4602:4"><span data-slate-string="true">, &amp;n);</span></span></span> 
</div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" data-slate-object="block" 
data-key="4603"> <span data-slate-object="text" data-key="4604"><span data-slate-leaf="true" 
data-offset-key="4604:0" data-first-offset="true"><span data-slate-string="true"> raw_n = n;</span></span></span> 
</div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" data-slate-object="block" 
data-key="4605"> <span data-slate-object="text" data-key="4606"><span data-slate-leaf="true" 
data-offset-key="4606:0" data-first-offset="true"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="4606:1"><span class=" gkhl-comment" data-slate-object="annotation" 
data-annotation-key="gkann_4130261661" data-annotation-type="annotation"><span data-slate-string="true">// 
循环终止条件，循环到 n 的平方根结束</span></span></span></span> </div> <div class="se-03eefeec se-2642b266" 
data-slate-type="code-line" data-slate-object="block" data-key="4607"> <span data-slate-object="text" 
data-key="4608"><span data-slate-leaf="true" data-offset-key="4608:0" data-first-offset="true"><span 
data-slate-string="true"> </span></span><span data-slate-leaf="true" data-offset-key="4608:1"><span 
class=" gkhl-keyword" data-slate-object="annotation" data-annotation-key="gkann_0954168017" 
data-annotation-type="annotation"><span data-slate-string="true">while</span></span></span><span 
data-slate-leaf="true" data-offset-key="4608:2"><span data-slate-string="true"> (i * i &lt;= 
n) {</span></span></span> </div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" 
data-slate-object="block" data-key="4609"> <span data-slate-object="text" data-key="4610"><span 
data-slate-leaf="true" data-offset-key="4610:0" data-first-offset="true"><span data-slate-string="true"> 
</span></span><span data-slate-leaf="true" data-offset-key="4610:1"><span class=" gkhl-comment" 
data-slate-object="annotation" data-annotation-key="gkann_2201969860" data-annotation-type="annotation"><span 
data-slate-string="true">//①：只要 n 可以被 i 整除，就认为 i 是 n 的一个素因子</span></span></span></span> </div> 
<div class="se-03eefeec se-2642b266" data-slate-type="code-line" data-slate-object="block" 
data-key="4611"> <span data-slate-object="text" data-key="4612"><span data-slate-leaf="true" 
data-offset-key="4612:0" data-first-offset="true"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="4612:1"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_1152250768" data-annotation-type="annotation"><span data-slate-string="true">while</span></span></span><span 
data-slate-leaf="true" data-offset-key="4612:2"><span data-slate-string="true"> (n % i == </span></span><span 
data-slate-leaf="true" data-offset-key="4612:3"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_0538330126" data-annotation-type="annotation"><span data-slate-string="true">0</span></span></span><span 
data-slate-leaf="true" data-offset-key="4612:4"><span data-slate-string="true">) {</span></span></span> 
</div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" data-slate-object="block" 
data-key="4613"> <span data-slate-object="text" data-key="4614"><span data-slate-leaf="true" 
data-offset-key="4614:0" data-first-offset="true"><span data-slate-string="true"> print_num(i, 
&amp;flag);</span></span></span> </div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" 
data-slate-object="block" data-key="4615"> <span data-slate-object="text" data-key="4616"><span 
data-slate-leaf="true" data-offset-key="4616:0" data-first-offset="true"><span data-slate-string="true"> 
n /= i;</span></span></span> </div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" 
data-slate-object="block" data-key="4617"> <span data-slate-object="text" data-key="4618"><span 
data-slate-leaf="true" data-offset-key="4618:0" data-first-offset="true"><span data-slate-string="true"> 
}</span></span></span> </div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" 
data-slate-object="block" data-key="4619"> <span data-slate-object="text" data-key="4620"><span 
data-slate-leaf="true" data-offset-key="4620:0" data-first-offset="true"><span data-slate-string="true"> 
i += </span></span><span data-slate-leaf="true" data-offset-key="4620:1"><span class=" gkhl-number" 
data-slate-object="annotation" data-annotation-key="gkann_1698004896" data-annotation-type="annotation"><span 
data-slate-string="true">1</span></span></span><span data-slate-leaf="true" data-offset-key="4620:2"><span 
data-slate-string="true">;</span></span></span> </div> <div class="se-03eefeec se-2642b266" 
data-slate-type="code-line" data-slate-object="block" data-key="4621"> <span data-slate-object="text" 
data-key="4622"><span data-slate-leaf="true" data-offset-key="4622:0" data-first-offset="true"><span 
data-slate-string="true"> }</span></span></span> </div> <div class="se-03eefeec se-2642b266" 
data-slate-type="code-line" data-slate-object="block" data-key="4623"> <span data-slate-object="text" 
data-key="4624"><span data-slate-leaf="true" data-offset-key="4624:0" data-first-offset="true"><span 
data-slate-string="true"> </span></span><span data-slate-leaf="true" data-offset-key="4624:1"><span 
class=" gkhl-comment" data-slate-object="annotation" data-annotation-key="gkann_6697018828" 
data-annotation-type="annotation"><span data-slate-string="true">//②：如果最后 n 不等于 1，就说明 n 是最后一个素数</span></span></span></span> 
</div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" data-slate-object="block" 
data-key="4625"> <span data-slate-object="text" data-key="4626"><span data-slate-leaf="true" 
data-offset-key="4626:0" data-first-offset="true"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="4626:1"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_9662371328" data-annotation-type="annotation"><span data-slate-string="true">if</span></span></span><span 
data-slate-leaf="true" data-offset-key="4626:2"><span data-slate-string="true"> (n != </span></span><span 
data-slate-leaf="true" data-offset-key="4626:3"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_9812175409" data-annotation-type="annotation"><span data-slate-string="true">1</span></span></span><span 
data-slate-leaf="true" data-offset-key="4626:4"><span data-slate-string="true">) print_num(n, 
&amp;flag);</span></span></span> </div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" 
data-slate-object="block" data-key="4627"> <span data-slate-object="text" data-key="4628"><span 
data-slate-leaf="true" data-offset-key="4628:0" data-first-offset="true"><span data-slate-string="true"> 
</span></span><span data-slate-leaf="true" data-offset-key="4628:1"><span class=" gkhl-built_in" 
data-slate-object="annotation" data-annotation-key="gkann_2723822162" data-annotation-type="annotation"><span 
data-slate-string="true">printf</span></span></span><span data-slate-leaf="true" data-offset-key="4628:2"><span 
data-slate-string="true">(</span></span><span data-slate-leaf="true" data-offset-key="4628:3"><span 
class=" gkhl-string" data-slate-object="annotation" data-annotation-key="gkann_7291902813" 
data-annotation-type="annotation"><span data-slate-string="true">" = %d\n"</span></span></span><span 
data-slate-leaf="true" data-offset-key="4628:4"><span data-slate-string="true">, raw_n);</span></span></span> 
</div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" data-slate-object="block" 
data-key="4629"> <span data-slate-object="text" data-key="4630"><span data-slate-leaf="true" 
data-offset-key="4630:0" data-first-offset="true"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="4630:1"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_3372112059" data-annotation-type="annotation"><span data-slate-string="true">return</span></span></span><span 
data-slate-leaf="true" data-offset-key="4630:2"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="4630:3"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_7548541019" data-annotation-type="annotation"><span data-slate-string="true">0</span></span></span><span 
data-slate-leaf="true" data-offset-key="4630:4"><span data-slate-string="true">;</span></span></span> 
</div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" data-slate-object="block" 
data-key="4631"> <span data-slate-object="text" data-key="4632"><span data-slate-leaf="true" 
data-offset-key="4632:0" data-first-offset="true"><span data-slate-string="true">}</span></span></span> 
</div> <div class="ps__rail-x" style="width: 365px; left: 0px; bottom: 0px;"> <div class="ps__thumb-x" 
tabindex="0" style="left: 0px; width: 309px;"></div> </div> <div class="ps__rail-y" style="top: 
0px; right: 0px;"> <div class="ps__thumb-y" tabindex="0" style="top: 0px; height: 0px;"></div> 
</div> </div> </div> <div class="se-54a61620 " data-slate-type="paragraph" data-slate-object="block" 
data-key="4633"> <span data-slate-object="text" data-key="4634"><span data-slate-leaf="true" 
data-offset-key="4634:0" data-first-offset="true"><span data-slate-string="true">第一个，是要证明第 
18 行代码中，只要 n 可以被 i 整除，i 就一定是素数。关于这个证明，我们可以使用反证法。</span></span></span> </div> <div class="se-eb3471f0 
" data-slate-type="paragraph" data-slate-object="block" data-key="4635"> <span data-slate-object="text" 
data-key="4636"><span data-slate-leaf="true" data-offset-key="4636:0" data-first-offset="true"><span 
data-slate-string="true">假设 i 可以被 n 整除，但 i 不是素数，由算术基本定理可知，一个非素数的数字 N，一定可以分解为几个小于 N 的素数乘积的形式。我们不妨假设 
</span></span></span><span class="se-4dbc7a92 se-2b50b467" data-slate-type="inline-katex" data-slate-object="inline" 
data-key="4637"><span data-slate-leaf="true"><span data-slate-string="true" class="katex"><span 
class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span 
class="mord mathdefault">i</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span 
class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span 
class="base"><span class="strut" style="height:0.7777700000000001em;vertical-align:-0.19444em;"></span><span 
class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t 
vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span 
style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" 
style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord 
mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span 
class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span 
class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span 
class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span 
class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span 
class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span 
class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span 
class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span 
class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span 
class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></span><span 
data-slate-object="text" data-key="4639"><span data-slate-leaf="true" data-offset-key="4639:0" 
data-first-offset="true"><span data-slate-string="true">，这里 </span></span></span><span class="se-4dbc7a92 
se-2b50b467" data-slate-type="inline-katex" data-slate-object="inline" data-key="4640"><span 
data-slate-leaf="true"><span data-slate-string="true" class="katex"><span class="katex-html" 
aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span 
class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t 
vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span 
style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" 
style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord 
mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span 
class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></span><span 
data-slate-object="text" data-key="4642"><span data-slate-leaf="true" data-offset-key="4642:0" 
data-first-offset="true"><span data-slate-string="true"> 和 </span></span></span><span class="se-4dbc7a92 
se-2b50b467" data-slate-type="inline-katex" data-slate-object="inline" data-key="4643"><span 
data-slate-leaf="true"><span data-slate-string="true" class="katex"><span class="katex-html" 
aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span 
class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t 
vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span 
style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" 
style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord 
mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span 
class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></span><span 
data-slate-object="text" data-key="4645"><span data-slate-leaf="true" data-offset-key="4645:0" 
data-first-offset="true"><span data-slate-string="true"> 均为素数，如果变量 n 可以被 i 整除，那么 n 也一定可以被小于 
i 的素数 </span></span></span><span class="se-4dbc7a92 se-2b50b467" data-slate-type="inline-katex" 
data-slate-object="inline" data-key="4646"><span data-slate-leaf="true"><span data-slate-string="true" 
class="katex"><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" 
style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord 
mathdefault">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span 
class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span 
class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span 
class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span 
class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></span><span 
data-slate-object="text" data-key="4648"><span data-slate-leaf="true" data-offset-key="4648:0" 
data-first-offset="true"><span data-slate-string="true"> 整除。而根据程序的运行流程，n 中已经不可能存在小于 i 的因子了，所以 
</span></span></span><span class="se-4dbc7a92 se-2b50b467" data-slate-type="inline-katex" data-slate-object="inline" 
data-key="4649"><span data-slate-leaf="true"><span data-slate-string="true" class="katex"><span 
class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span 
class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t 
vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span 
style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" 
style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord 
mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span 
class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></span><span 
data-slate-object="text" data-key="4651"><span data-slate-leaf="true" data-offset-key="4651:0" 
data-first-offset="true"><span data-slate-string="true"> 不具备存在的条件，故原假设不成立，i 是素数。</span></span></span> 
</div> <div class="se-9178b0db " data-slate-type="paragraph" data-slate-object="block" data-key="4652"> 
<span data-slate-object="text" data-key="4653"><span data-slate-leaf="true" data-offset-key="4653:0" 
data-first-offset="true"><span data-slate-string="true">第二个，是要证明第 25 行代码中，为什么只要 n 不等于 1，n 就一定是素数呢？其实也可以参考第一问的证明流程。在 
while 循环处理过程中，数字 n 中已经不可能存在小于等于 i 的所有的因子了，又因为此时 i 是大于根号 n 的一个值，也就是说，在小于等于根号 n 范围内，找不到数字 n 的非 
1 因子，而能够满足这种性质的数字，一定是素数。</span></span></span> </div> <div class="se-7f521b51 " data-slate-type="paragraph" 
data-slate-object="block" data-key="4654"> <span data-slate-object="text" data-key="4655"><span 
data-slate-leaf="true" data-offset-key="4655:0" data-first-offset="true"><span data-slate-string="true">至此，我们就证明完了程序中两处代码的性质。</span></span></span> 
</div> <h2 class="se-1ffb9702" data-slate-type="heading" data-slate-object="block" data-key="4656"><span 
data-slate-object="text" data-key="4657"><span data-slate-leaf="true" data-offset-key="4657:0" 
data-first-offset="true"><span data-slate-string="true">数据结构（上）：突破基本类型的限制，存储更大的整数</span></span></span></h2> 
<div class="se-27746168 " data-slate-type="paragraph" data-slate-object="block" data-key="4658"> 
<span data-slate-object="text" data-key="4659"><span data-slate-leaf="true" data-offset-key="4659:0" 
data-first-offset="true"><span data-slate-string="true">在这一节中，我们学习了大整数表示法，说明了如果是数据表示的导致的程序设计过程不可行，那么我们就需要在数据结构中寻找解决方案了。</span></span></span> 
</div> <div class="se-317392f7 " data-slate-type="paragraph" data-slate-object="block" data-key="4660"> 
<span data-slate-object="text" data-key="4661"><span data-slate-leaf="true" data-offset-key="4661:0" 
data-first-offset="true"><span data-slate-string="true">在大整数表示法中，我们是将一个数字，从右到左倒着存储在数组中，并且用数组的 
0 位存储数字的位数。数组中存储的数字大小，应该等于其每一位的数字乘上相关存储位置的位权，数组的 1 位位权为 1，也就是 10 的 0 次方，2 位位权为 10，也就是 10 的 
1 次方，以此类推。</span></span></span> </div> <div class="se-6849add4 " data-slate-type="paragraph" 
data-slate-object="block" data-key="4662"> <span data-slate-object="text" data-key="4663"><span 
data-slate-leaf="true" data-offset-key="4663:0" data-first-offset="true"><span data-slate-string="true">那么接下来，我们理解大整数的乘法，也是通过这种数学公式上面的等价关系，来理解大整数乘法过程。最后给你留了一个编程题，是关于实现读入两个大整数，并且计算两个大整数加法结果的程序，以下是我的参考代码：</span></span></span> 
</div> <div class="se-dacd18e3 se-cbcaad44" data-slate-type="pre" data-slate-object="block" 
data-key="4664" data-code-language="cpp"> <div class="se-5841f897 se-742a8a0b"> <span></span> 
</div> <div class="se-e40060ed"> <div class="se-94107f7a se-52bb39d1" data-code-line-number="1"></div> 
<div class="se-94107f7a se-52bb39d1" data-code-line-number="2"></div> <div class="se-94107f7a 
se-52bb39d1" data-code-line-number="3"></div> <div class="se-94107f7a se-52bb39d1" data-code-line-number="4"></div> 
<div class="se-94107f7a se-52bb39d1" data-code-line-number="5"></div> <div class="se-94107f7a 
se-52bb39d1" data-code-line-number="6"></div> <div class="se-94107f7a se-52bb39d1" data-code-line-number="7"></div> 
<div class="se-94107f7a se-52bb39d1" data-code-line-number="8"></div> <div class="se-94107f7a 
se-52bb39d1" data-code-line-number="9"></div> <div class="se-94107f7a se-52bb39d1" data-code-line-number="10"></div> 
<div class="se-94107f7a se-52bb39d1" data-code-line-number="11"></div> <div class="se-94107f7a 
se-52bb39d1" data-code-line-number="12"></div> <div class="se-94107f7a se-52bb39d1" data-code-line-number="13"></div> 
<div class="se-94107f7a se-52bb39d1" data-code-line-number="14"></div> <div class="se-94107f7a 
se-52bb39d1" data-code-line-number="15"></div> <div class="se-94107f7a se-52bb39d1" data-code-line-number="16"></div> 
<div class="se-94107f7a se-52bb39d1" data-code-line-number="17"></div> <div class="se-94107f7a 
se-52bb39d1" data-code-line-number="18"></div> <div class="se-94107f7a se-52bb39d1" data-code-line-number="19"></div> 
<div class="se-94107f7a se-52bb39d1" data-code-line-number="20"></div> <div class="se-94107f7a 
se-52bb39d1" data-code-line-number="21"></div> <div class="se-94107f7a se-52bb39d1" data-code-line-number="22"></div> 
<div class="se-94107f7a se-52bb39d1" data-code-line-number="23"></div> <div class="se-94107f7a 
se-52bb39d1" data-code-line-number="24"></div> <div class="se-94107f7a se-52bb39d1" data-code-line-number="25"></div> 
<div class="se-94107f7a se-52bb39d1" data-code-line-number="26"></div> <div class="se-94107f7a 
se-52bb39d1" data-code-line-number="27"></div> <div class="se-94107f7a se-52bb39d1" data-code-line-number="28"></div> 
<div class="se-94107f7a se-52bb39d1" data-code-line-number="29"></div> </div> <div class="se-bc76ff51 
ps ps--active-x"> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" data-slate-object="block" 
data-key="4665"> <span data-slate-object="text" data-key="4666"><span data-slate-leaf="true" 
data-offset-key="4666:0" data-first-offset="true"><span class=" gkhl-meta" data-slate-object="annotation" 
data-annotation-key="gkann_5402258496" data-annotation-type="annotation"><span data-slate-string="true">#include 
&lt;stdio.h&gt;</span></span></span></span> </div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" 
data-slate-object="block" data-key="4667"> <span data-slate-object="text" data-key="4668"><span 
data-slate-leaf="true" data-offset-key="4668:0" data-first-offset="true"><span class=" gkhl-meta" 
data-slate-object="annotation" data-annotation-key="gkann_9159611317" data-annotation-type="annotation"><span 
data-slate-string="true">#include &lt;string.h&gt;</span></span></span></span> </div> <div 
class="se-03eefeec se-2642b266" data-slate-type="code-line" data-slate-object="block" data-key="4669"> 
<span data-slate-object="text" data-key="4670"><span data-slate-leaf="true" data-offset-key="4670:0" 
data-first-offset="true"><span class=" gkhl-meta" data-slate-object="annotation" data-annotation-key="gkann_4519897769" 
data-annotation-type="annotation"><span data-slate-string="true">#define MAX_N 1000</span></span></span></span> 
</div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" data-slate-object="block" 
data-key="4671"> <span data-slate-object="text" data-key="4672"><span data-slate-leaf="true" 
data-offset-key="4672:0" data-first-offset="true"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_0731081485" data-annotation-type="annotation"><span data-slate-string="true">char</span></span></span><span 
data-slate-leaf="true" data-offset-key="4672:1"><span data-slate-string="true"> str_a[MAX_N 
+ </span></span><span data-slate-leaf="true" data-offset-key="4672:2"><span class=" gkhl-number" 
data-slate-object="annotation" data-annotation-key="gkann_4856110951" data-annotation-type="annotation"><span 
data-slate-string="true">5</span></span></span><span data-slate-leaf="true" data-offset-key="4672:3"><span 
data-slate-string="true">], str_b[MAX_N + </span></span><span data-slate-leaf="true" data-offset-key="4672:4"><span 
class=" gkhl-number" data-slate-object="annotation" data-annotation-key="gkann_9868790427" 
data-annotation-type="annotation"><span data-slate-string="true">5</span></span></span><span 
data-slate-leaf="true" data-offset-key="4672:5"><span data-slate-string="true">];</span></span></span> 
</div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" data-slate-object="block" 
data-key="4673"> <span data-slate-object="text" data-key="4674"><span data-slate-leaf="true" 
data-offset-key="4674:0" data-first-offset="true"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_1478521048" data-annotation-type="annotation"><span data-slate-string="true">int</span></span></span><span 
data-slate-leaf="true" data-offset-key="4674:1"><span data-slate-string="true"> num1[MAX_N 
+ </span></span><span data-slate-leaf="true" data-offset-key="4674:2"><span class=" gkhl-number" 
data-slate-object="annotation" data-annotation-key="gkann_1825178900" data-annotation-type="annotation"><span 
data-slate-string="true">5</span></span></span><span data-slate-leaf="true" data-offset-key="4674:3"><span 
data-slate-string="true">], num2[MAX_N + </span></span><span data-slate-leaf="true" data-offset-key="4674:4"><span 
class=" gkhl-number" data-slate-object="annotation" data-annotation-key="gkann_5294427274" 
data-annotation-type="annotation"><span data-slate-string="true">5</span></span></span><span 
data-slate-leaf="true" data-offset-key="4674:5"><span data-slate-string="true">], num3[MAX_N 
+ </span></span><span data-slate-leaf="true" data-offset-key="4674:6"><span class=" gkhl-number" 
data-slate-object="annotation" data-annotation-key="gkann_8916694420" data-annotation-type="annotation"><span 
data-slate-string="true">5</span></span></span><span data-slate-leaf="true" data-offset-key="4674:7"><span 
data-slate-string="true">];</span></span></span> </div> <div class="se-03eefeec se-2642b266" 
data-slate-type="code-line" data-slate-object="block" data-key="4675"> <span data-slate-object="text" 
data-key="4676"></span> </div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" 
data-slate-object="block" data-key="4677"> <span data-slate-object="text" data-key="4678"><span 
data-slate-leaf="true" data-offset-key="4678:0" data-first-offset="true"><span class=" gkhl-keyword" 
data-slate-object="annotation" data-annotation-key="gkann_2656250663" data-annotation-type="annotation"><span 
class=" gkhl-function" data-slate-object="annotation" data-annotation-key="gkann_6402752733" 
data-annotation-type="annotation"><span data-slate-string="true">void</span></span></span></span><span 
data-slate-leaf="true" data-offset-key="4678:1"><span class=" gkhl-function" data-slate-object="annotation" 
data-annotation-key="gkann_6402752733" data-annotation-type="annotation"><span data-slate-string="true"> 
</span></span></span><span data-slate-leaf="true" data-offset-key="4678:2"><span class=" gkhl-title" 
data-slate-object="annotation" data-annotation-key="gkann_9281482929" data-annotation-type="annotation"><span 
class=" gkhl-function" data-slate-object="annotation" data-annotation-key="gkann_6402752733" 
data-annotation-type="annotation"><span data-slate-string="true">convert_to</span></span></span></span><span 
data-slate-leaf="true" data-offset-key="4678:3"><span class=" gkhl-function" data-slate-object="annotation" 
data-annotation-key="gkann_6402752733" data-annotation-type="annotation"><span class=" gkhl-params" 
data-slate-object="annotation" data-annotation-key="gkann_3951220793" data-annotation-type="annotation"><span 
data-slate-string="true">(char *str, int *num)</span></span></span></span><span data-slate-leaf="true" 
data-offset-key="4678:4"><span class=" gkhl-function" data-slate-object="annotation" data-annotation-key="gkann_6402752733" 
data-annotation-type="annotation"><span data-slate-string="true"> </span></span></span><span 
data-slate-leaf="true" data-offset-key="4678:5"><span data-slate-string="true">{</span></span></span> 
</div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" data-slate-object="block" 
data-key="4679"> <span data-slate-object="text" data-key="4680"><span data-slate-leaf="true" 
data-offset-key="4680:0" data-first-offset="true"><span data-slate-string="true"> num[</span></span><span 
data-slate-leaf="true" data-offset-key="4680:1"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_7844210672" data-annotation-type="annotation"><span data-slate-string="true">0</span></span></span><span 
data-slate-leaf="true" data-offset-key="4680:2"><span data-slate-string="true">] = </span></span><span 
data-slate-leaf="true" data-offset-key="4680:3"><span class=" gkhl-built_in" data-slate-object="annotation" 
data-annotation-key="gkann_2456977544" data-annotation-type="annotation"><span data-slate-string="true">strlen</span></span></span><span 
data-slate-leaf="true" data-offset-key="4680:4"><span data-slate-string="true">(str);</span></span></span> 
</div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" data-slate-object="block" 
data-key="4681"> <span data-slate-object="text" data-key="4682"><span data-slate-leaf="true" 
data-offset-key="4682:0" data-first-offset="true"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="4682:1"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_7870413835" data-annotation-type="annotation"><span data-slate-string="true">for</span></span></span><span 
data-slate-leaf="true" data-offset-key="4682:2"><span data-slate-string="true"> (</span></span><span 
data-slate-leaf="true" data-offset-key="4682:3"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_7216443043" data-annotation-type="annotation"><span data-slate-string="true">int</span></span></span><span 
data-slate-leaf="true" data-offset-key="4682:4"><span data-slate-string="true"> i = num[</span></span><span 
data-slate-leaf="true" data-offset-key="4682:5"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_1428288598" data-annotation-type="annotation"><span data-slate-string="true">0</span></span></span><span 
data-slate-leaf="true" data-offset-key="4682:6"><span data-slate-string="true">] - </span></span><span 
data-slate-leaf="true" data-offset-key="4682:7"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_3342741847" data-annotation-type="annotation"><span data-slate-string="true">1</span></span></span><span 
data-slate-leaf="true" data-offset-key="4682:8"><span data-slate-string="true">; i &gt;= </span></span><span 
data-slate-leaf="true" data-offset-key="4682:9"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_2278208826" data-annotation-type="annotation"><span data-slate-string="true">0</span></span></span><span 
data-slate-leaf="true" data-offset-key="4682:10"><span data-slate-string="true">; i--) {</span></span></span> 
</div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" data-slate-object="block" 
data-key="4683"> <span data-slate-object="text" data-key="4684"><span data-slate-leaf="true" 
data-offset-key="4684:0" data-first-offset="true"><span data-slate-string="true"> num[num[</span></span><span 
data-slate-leaf="true" data-offset-key="4684:1"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_2340096470" data-annotation-type="annotation"><span data-slate-string="true">0</span></span></span><span 
data-slate-leaf="true" data-offset-key="4684:2"><span data-slate-string="true">] - i] = str[i] 
- </span></span><span data-slate-leaf="true" data-offset-key="4684:3"><span class=" gkhl-string" 
data-slate-object="annotation" data-annotation-key="gkann_1157039260" data-annotation-type="annotation"><span 
data-slate-string="true">''0''</span></span></span><span data-slate-leaf="true" data-offset-key="4684:4"><span 
data-slate-string="true">;</span></span></span> </div> <div class="se-03eefeec se-2642b266" 
data-slate-type="code-line" data-slate-object="block" data-key="4685"> <span data-slate-object="text" 
data-key="4686"><span data-slate-leaf="true" data-offset-key="4686:0" data-first-offset="true"><span 
data-slate-string="true"> }</span></span></span> </div> <div class="se-03eefeec se-2642b266" 
data-slate-type="code-line" data-slate-object="block" data-key="4687"> <span data-slate-object="text" 
data-key="4688"><span data-slate-leaf="true" data-offset-key="4688:0" data-first-offset="true"><span 
data-slate-string="true"> </span></span><span data-slate-leaf="true" data-offset-key="4688:1"><span 
class=" gkhl-keyword" data-slate-object="annotation" data-annotation-key="gkann_9506411477" 
data-annotation-type="annotation"><span data-slate-string="true">return</span></span></span><span 
data-slate-leaf="true" data-offset-key="4688:2"><span data-slate-string="true"> ;</span></span></span> 
</div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" data-slate-object="block" 
data-key="4689"> <span data-slate-object="text" data-key="4690"><span data-slate-leaf="true" 
data-offset-key="4690:0" data-first-offset="true"><span data-slate-string="true">}</span></span></span> 
</div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" data-slate-object="block" 
data-key="4691"> <span data-slate-object="text" data-key="4692"></span> </div> <div class="se-03eefeec 
se-2642b266" data-slate-type="code-line" data-slate-object="block" data-key="4693"> <span data-slate-object="text" 
data-key="4694"><span data-slate-leaf="true" data-offset-key="4694:0" data-first-offset="true"><span 
class=" gkhl-function" data-slate-object="annotation" data-annotation-key="gkann_7007728685" 
data-annotation-type="annotation"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_2589996518" data-annotation-type="annotation"><span data-slate-string="true">void</span></span></span></span><span 
data-slate-leaf="true" data-offset-key="4694:1"><span class=" gkhl-function" data-slate-object="annotation" 
data-annotation-key="gkann_7007728685" data-annotation-type="annotation"><span data-slate-string="true"> 
</span></span></span><span data-slate-leaf="true" data-offset-key="4694:2"><span class=" gkhl-function" 
data-slate-object="annotation" data-annotation-key="gkann_7007728685" data-annotation-type="annotation"><span 
class=" gkhl-title" data-slate-object="annotation" data-annotation-key="gkann_4541297936" data-annotation-type="annotation"><span 
data-slate-string="true">output_big_integer</span></span></span></span><span data-slate-leaf="true" 
data-offset-key="4694:3"><span class=" gkhl-params" data-slate-object="annotation" data-annotation-key="gkann_3485301388" 
data-annotation-type="annotation"><span class=" gkhl-function" data-slate-object="annotation" 
data-annotation-key="gkann_7007728685" data-annotation-type="annotation"><span data-slate-string="true">(int 
*num)</span></span></span></span><span data-slate-leaf="true" data-offset-key="4694:4"><span 
class=" gkhl-function" data-slate-object="annotation" data-annotation-key="gkann_7007728685" 
data-annotation-type="annotation"><span data-slate-string="true"> </span></span></span><span 
data-slate-leaf="true" data-offset-key="4694:5"><span data-slate-string="true">{</span></span></span> 
</div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" data-slate-object="block" 
data-key="4695"> <span data-slate-object="text" data-key="4696"><span data-slate-leaf="true" 
data-offset-key="4696:0" data-first-offset="true"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="4696:1"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_0774158998" data-annotation-type="annotation"><span data-slate-string="true">for</span></span></span><span 
data-slate-leaf="true" data-offset-key="4696:2"><span data-slate-string="true"> (</span></span><span 
data-slate-leaf="true" data-offset-key="4696:3"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_4492122870" data-annotation-type="annotation"><span data-slate-string="true">int</span></span></span><span 
data-slate-leaf="true" data-offset-key="4696:4"><span data-slate-string="true"> i = num3[</span></span><span 
data-slate-leaf="true" data-offset-key="4696:5"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_5779323317" data-annotation-type="annotation"><span data-slate-string="true">0</span></span></span><span 
data-slate-leaf="true" data-offset-key="4696:6"><span data-slate-string="true">]; i &gt;= </span></span><span 
data-slate-leaf="true" data-offset-key="4696:7"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_0017471270" data-annotation-type="annotation"><span data-slate-string="true">1</span></span></span><span 
data-slate-leaf="true" data-offset-key="4696:8"><span data-slate-string="true">; i--) {</span></span></span> 
</div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" data-slate-object="block" 
data-key="4697"> <span data-slate-object="text" data-key="4698"><span data-slate-leaf="true" 
data-offset-key="4698:0" data-first-offset="true"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="4698:1"><span class=" gkhl-built_in" data-slate-object="annotation" 
data-annotation-key="gkann_8479175035" data-annotation-type="annotation"><span data-slate-string="true">printf</span></span></span><span 
data-slate-leaf="true" data-offset-key="4698:2"><span data-slate-string="true">(</span></span><span 
data-slate-leaf="true" data-offset-key="4698:3"><span class=" gkhl-string" data-slate-object="annotation" 
data-annotation-key="gkann_3235376457" data-annotation-type="annotation"><span data-slate-string="true">"%d"</span></span></span><span 
data-slate-leaf="true" data-offset-key="4698:4"><span data-slate-string="true">, num3[i]); 
</span></span></span> </div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" 
data-slate-object="block" data-key="4699"> <span data-slate-object="text" data-key="4700"><span 
data-slate-leaf="true" data-offset-key="4700:0" data-first-offset="true"><span data-slate-string="true"> 
}</span></span></span> </div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" 
data-slate-object="block" data-key="4701"> <span data-slate-object="text" data-key="4702"><span 
data-slate-leaf="true" data-offset-key="4702:0" data-first-offset="true"><span data-slate-string="true"> 
</span></span><span data-slate-leaf="true" data-offset-key="4702:1"><span class=" gkhl-keyword" 
data-slate-object="annotation" data-annotation-key="gkann_7651862840" data-annotation-type="annotation"><span 
data-slate-string="true">return</span></span></span><span data-slate-leaf="true" data-offset-key="4702:2"><span 
data-slate-string="true"> ;</span></span></span> </div> <div class="se-03eefeec se-2642b266" 
data-slate-type="code-line" data-slate-object="block" data-key="4703"> <span data-slate-object="text" 
data-key="4704"><span data-slate-leaf="true" data-offset-key="4704:0" data-first-offset="true"><span 
data-slate-string="true">}</span></span></span> </div> <div class="se-03eefeec se-2642b266" 
data-slate-type="code-line" data-slate-object="block" data-key="4705"> <span data-slate-object="text" 
data-key="4706"></span> </div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" 
data-slate-object="block" data-key="4707"> <span data-slate-object="text" data-key="4708"><span 
data-slate-leaf="true" data-offset-key="4708:0" data-first-offset="true"><span class=" gkhl-keyword" 
data-slate-object="annotation" data-annotation-key="gkann_7302703920" data-annotation-type="annotation"><span 
class=" gkhl-function" data-slate-object="annotation" data-annotation-key="gkann_4343800555" 
data-annotation-type="annotation"><span data-slate-string="true">int</span></span></span></span><span 
data-slate-leaf="true" data-offset-key="4708:1"><span class=" gkhl-function" data-slate-object="annotation" 
data-annotation-key="gkann_4343800555" data-annotation-type="annotation"><span data-slate-string="true"> 
</span></span></span><span data-slate-leaf="true" data-offset-key="4708:2"><span class=" gkhl-function" 
data-slate-object="annotation" data-annotation-key="gkann_4343800555" data-annotation-type="annotation"><span 
class=" gkhl-title" data-slate-object="annotation" data-annotation-key="gkann_4440095311" data-annotation-type="annotation"><span 
data-slate-string="true">main</span></span></span></span><span data-slate-leaf="true" data-offset-key="4708:3"><span 
class=" gkhl-params" data-slate-object="annotation" data-annotation-key="gkann_8779901248" 
data-annotation-type="annotation"><span class=" gkhl-function" data-slate-object="annotation" 
data-annotation-key="gkann_4343800555" data-annotation-type="annotation"><span data-slate-string="true">()</span></span></span></span><span 
data-slate-leaf="true" data-offset-key="4708:4"><span class=" gkhl-function" data-slate-object="annotation" 
data-annotation-key="gkann_4343800555" data-annotation-type="annotation"><span data-slate-string="true"> 
</span></span></span><span data-slate-leaf="true" data-offset-key="4708:5"><span data-slate-string="true">{</span></span></span> 
</div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" data-slate-object="block" 
data-key="4709"> <span data-slate-object="text" data-key="4710"><span data-slate-leaf="true" 
data-offset-key="4710:0" data-first-offset="true"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="4710:1"><span class=" gkhl-built_in" data-slate-object="annotation" 
data-annotation-key="gkann_7354673724" data-annotation-type="annotation"><span data-slate-string="true">scanf</span></span></span><span 
data-slate-leaf="true" data-offset-key="4710:2"><span data-slate-string="true">(</span></span><span 
data-slate-leaf="true" data-offset-key="4710:3"><span class=" gkhl-string" data-slate-object="annotation" 
data-annotation-key="gkann_8680795437" data-annotation-type="annotation"><span data-slate-string="true">"%s%s"</span></span></span><span 
data-slate-leaf="true" data-offset-key="4710:4"><span data-slate-string="true">, str_a, str_b);</span></span></span> 
</div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" data-slate-object="block" 
data-key="4711"> <span data-slate-object="text" data-key="4712"><span data-slate-leaf="true" 
data-offset-key="4712:0" data-first-offset="true"><span data-slate-string="true"> convert_to(str_a, 
num1);</span></span></span> </div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" 
data-slate-object="block" data-key="4713"> <span data-slate-object="text" data-key="4714"><span 
data-slate-leaf="true" data-offset-key="4714:0" data-first-offset="true"><span data-slate-string="true"> 
convert_to(str_b, num2);</span></span></span> </div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" 
data-slate-object="block" data-key="4715"> <span data-slate-object="text" data-key="4716"><span 
data-slate-leaf="true" data-offset-key="4716:0" data-first-offset="true"><span data-slate-string="true"> 
plus_big_integer(num1, num2, num3);</span></span></span> </div> <div class="se-03eefeec se-2642b266" 
data-slate-type="code-line" data-slate-object="block" data-key="4717"> <span data-slate-object="text" 
data-key="4718"><span data-slate-leaf="true" data-offset-key="4718:0" data-first-offset="true"><span 
data-slate-string="true"> output_big_integer(num3);</span></span></span> </div> <div class="se-03eefeec 
se-2642b266" data-slate-type="code-line" data-slate-object="block" data-key="4719"> <span data-slate-object="text" 
data-key="4720"><span data-slate-leaf="true" data-offset-key="4720:0" data-first-offset="true"><span 
data-slate-string="true"> </span></span><span data-slate-leaf="true" data-offset-key="4720:1"><span 
class=" gkhl-keyword" data-slate-object="annotation" data-annotation-key="gkann_6073766311" 
data-annotation-type="annotation"><span data-slate-string="true">return</span></span></span><span 
data-slate-leaf="true" data-offset-key="4720:2"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="4720:3"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_0152957735" data-annotation-type="annotation"><span data-slate-string="true">0</span></span></span><span 
data-slate-leaf="true" data-offset-key="4720:4"><span data-slate-string="true">;</span></span></span> 
</div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" data-slate-object="block" 
data-key="4721"> <span data-slate-object="text" data-key="4722"><span data-slate-leaf="true" 
data-offset-key="4722:0" data-first-offset="true"><span data-slate-string="true">}</span></span></span> 
</div> <div class="ps__rail-x" style="width: 365px; left: 0px; bottom: 0px;"> <div class="ps__thumb-x" 
tabindex="0" style="left: 0px; width: 316px;"></div> </div> <div class="ps__rail-y" style="top: 
0px; right: 0px;"> <div class="ps__thumb-y" tabindex="0" style="top: 0px; height: 0px;"></div> 
</div> </div> </div> <div class="se-69bac525 " data-slate-type="paragraph" data-slate-object="block" 
data-key="4723"> <span data-slate-object="text" data-key="4724"><span data-slate-leaf="true" 
data-offset-key="4724:0" data-first-offset="true"><span data-slate-string="true">可以看到，首先读入两个字符串 
str_a 和 str_b，分别代表第一个和第二个大整数。然后调用 convert_to 方法，将第一个字符串与第二个字符串，转换成大整数表示法，分别存储在 num1 和 num2 
数组中；然后再调用 plus_big_integer 方法，将两个大整数的加法结果，存储在 num3 数组中；最后，输出 num3 数组中所存储的大整数。其中，提到的 plus_big_integer 
方法，在原文中有给出，你可以回到原文中进行查看。</span></span></span> </div> <div class="se-68af13cf " data-slate-type="paragraph" 
data-slate-object="block" data-key="4725"> <span data-slate-object="text" data-key="4726"><span 
data-slate-leaf="true" data-offset-key="4726:0" data-first-offset="true"><span data-slate-string="true">这段程序设计中，最应该值得你注意的是，我们将大整数操作的相关过程，均封装成了函数方法。字符串转大整数表示法，封装成了函数 
convert_to；大整数加法过程，封装成了 plus_big_integer；输出大整数，封装成了 output_big_integer。</span></span></span> 
</div> <div class="se-b2c3d873 " data-slate-type="paragraph" data-slate-object="block" data-key="4727"> 
<span data-slate-object="text" data-key="4728"><span data-slate-leaf="true" data-offset-key="4728:0" 
data-first-offset="true"><span data-slate-string="true">封装成函数方法的好处，就在于只要保证每一个小方法是正确的，就能保证整个程序的正确性。更重要的是，如果你单独看主函数的话，即使不看每一个方法的具体实现过程，你也能够清晰的知道，这个程序流程究竟在干什么，增强了代码的可读性。最后一点好处，就是出现 
Bug 的时候，便于改错。</span></span></span> </div> <div class="se-5f1fd9f3 " data-slate-type="paragraph" 
data-slate-object="block" data-key="4729"> <span data-slate-object="text" data-key="4730"><span 
data-slate-leaf="true" data-offset-key="4730:0" data-first-offset="true"><span data-slate-string="true">关于第 
17 篇文章中，所说的改进 Shift-And 算法中的数据结构，我这里给你个提示，你可以参考大整数表示法，再参照这道题目中的程序设计原则，将操作封装成函数。</span></span></span> 
</div> <div class="se-922f8b36 " data-slate-type="paragraph" data-slate-object="block" data-key="4731"> 
<span data-slate-object="text" data-key="4732"><span data-slate-leaf="true" data-offset-key="4732:0" 
data-first-offset="true"><span data-slate-string="true">对于改进 Shift-And 算法中的数据结构，你需要做的就是用大整数表示法，表示一个二进制数字，然后根据 
Shift-And 算法的需求，做好需要封装的操作有：</span></span></span><span data-slate-object="text" data-key="4733"><span 
data-slate-leaf="true" data-offset-key="4733:0" data-first-offset="true"><span class="se-7ae6c104" 
data-slate-type="bold" data-slate-object="mark"><span data-slate-string="true">左移</span></span></span></span><span 
data-slate-object="text" data-key="4734"><span data-slate-leaf="true" data-offset-key="4734:0" 
data-first-offset="true"><span data-slate-string="true">、</span></span></span><span data-slate-object="text" 
data-key="4735"><span data-slate-leaf="true" data-offset-key="4735:0" data-first-offset="true"><span 
class="se-f0498ba4" data-slate-type="bold" data-slate-object="mark"><span data-slate-string="true">或 
1 操作</span></span></span></span><span data-slate-object="text" data-key="4736"><span data-slate-leaf="true" 
data-offset-key="4736:0" data-first-offset="true"><span data-slate-string="true">、</span></span></span><span 
data-slate-object="text" data-key="4737"><span data-slate-leaf="true" data-offset-key="4737:0" 
data-first-offset="true"><span class="se-9a1de8e6" data-slate-type="bold" data-slate-object="mark"><span 
data-slate-string="true">与运算</span></span></span></span><span data-slate-object="text" data-key="4738"><span 
data-slate-leaf="true" data-offset-key="4738:0" data-first-offset="true"><span data-slate-string="true">以及</span></span></span><span 
data-slate-object="text" data-key="4739"><span data-slate-leaf="true" data-offset-key="4739:0" 
data-first-offset="true"><span class="se-19947d65" data-slate-type="bold" data-slate-object="mark"><span 
data-slate-string="true">判断这个数字的第 m 位是否为 1</span></span></span></span><span data-slate-object="text" 
data-key="4740"><span data-slate-leaf="true" data-offset-key="4740:0" data-first-offset="true"><span 
data-slate-string="true"> 这些需要封装的操作。最终你会发现，算法流程没有改变，改变的只有程序样式。更多内容呢，你可以参考文章中，我与 @陈洲更 的留言讨论内容。</span></span></span> 
</div> <div class="se-eb5f3ec6 " data-slate-type="paragraph" data-slate-object="block" data-key="4741"> 
<span data-slate-object="text" data-key="4742"><span data-slate-leaf="true" data-offset-key="4742:0" 
data-first-offset="true"><span data-slate-string="true">好了今天的思考题答疑就结束了，如果你还有什么不清楚的，或者有更好的想法的，欢迎告诉我，我们留言区见！</span></span></span> 
</div> </div>', body_summary='', bundle='book', delta=0, body_format='full_html', langcode='zh-hans', 
revision_id=756 where entity_id=756 
 {executed in 2 msec}
2020-11-24 18:10:56.636 INFO  jdbc.sqltiming Line:373 - update node_revision__body set body_value='<div data-slate-editor="true" data-key="4461" autocorrect="off" 
spellcheck="false" data-gramm="false" style="outline: none; white-space: pre-wrap; overflow-wrap: 
break-word;"> <div class="se-1484e15b " data-slate-type="paragraph" data-slate-object="block" 
data-key="4462"> <span data-slate-object="text" data-key="4463"><span data-slate-leaf="true" 
data-offset-key="4463:0" data-first-offset="true"><span data-slate-string="true">你好，我是胡光。</span></span></span> 
</div> <div class="se-7e3281df " data-slate-type="paragraph" data-slate-object="block" data-key="4464"> 
<span data-slate-object="text" data-key="4465"><span data-slate-leaf="true" data-offset-key="4465:0" 
data-first-offset="true"><span data-slate-string="true">不知不觉，我们已经学完了编码能力训练篇的全部内容。其实还有很多东西想给你讲，可限于篇幅，所以咱们整个编码能力训练篇中的内容，都是与接下来的算法数据结构篇有很大的联系，并且它们对于理解程序设计，也是非常基础且重要的内容。</span></span></span> 
</div> <div class="se-d33f53bf " data-slate-type="paragraph" data-slate-object="block" data-key="4466"> 
<span data-slate-object="text" data-key="4467"><span data-slate-leaf="true" data-offset-key="4467:0" 
data-first-offset="true"><span data-slate-string="true">有道是，授之以鱼，不如授之以渔，我也相信只要你跟着课程学习，一定会感觉到自己收获到了“钓鱼工具”。如果能引发你的主动思考，进而触类旁通，举一反三，那这场学习过程就更加有意义啦。</span></span></span> 
</div> <div class="se-e9e6d030 " data-slate-type="paragraph" data-slate-object="block" data-key="4468"> 
<span data-slate-object="text" data-key="4469"><span data-slate-leaf="true" data-offset-key="4469:0" 
data-first-offset="true"><span data-slate-string="true">我也非常高兴，看到很多同学都在紧跟着专栏更新节奏，坚持学习。经常在专栏上线的第一时间，这些同学就给我留言，提出自己的疑惑。大部分留言，我都在相对应的文章中回复过了，而对于文章中的思考题呢，由于要给你充足的思考时间，所以我选择在今天这样一篇文章中，给你进行一一的解答。</span></span></span> 
</div> <div class="se-fce6de7f " data-slate-type="paragraph" data-slate-object="block" data-key="4470"> 
<span data-slate-object="text" data-key="4471"><span data-slate-leaf="true" data-offset-key="4471:0" 
data-first-offset="true"><span data-slate-string="true">看一看我的参考答案，和你的思考结果之间，有什么不同吧。也欢迎你在留言区中，给出一些你感兴趣的题目的思考结果，我希望我们能在这个过程中，碰撞出更多智慧的火花。</span></span></span> 
</div> <h2 class="se-a19bacac" data-slate-type="heading" data-slate-object="block" data-key="4472"><span 
data-slate-object="text" data-key="4473"><span data-slate-leaf="true" data-offset-key="4473:0" 
data-first-offset="true"><span data-slate-string="true">数学归纳法：搞定循环与递归的钥匙</span></span></span></h2> 
<div class="se-5cf4de38 " data-slate-type="paragraph" data-slate-object="block" data-key="4474"> 
<span data-slate-object="text" data-key="4475"><span data-slate-leaf="true" data-offset-key="4475:0" 
data-first-offset="true"><span data-slate-string="true">在这一章里呢，我们介绍了保证程序正确性的最重要的数学思维：</span></span></span><span 
data-slate-object="text" data-key="4476"><span data-slate-leaf="true" data-offset-key="4476:0" 
data-first-offset="true"><span class="se-3eaa7a64" data-slate-type="bold" data-slate-object="mark"><span 
data-slate-string="true">数学归纳法</span></span></span></span><span data-slate-object="text" data-key="4477"><span 
data-slate-leaf="true" data-offset-key="4477:0" data-first-offset="true"><span data-slate-string="true">。并且，从数学归纳法出发，我们学习了递归程序设计。递归程序设计的几点要素，就是数学归纳法中的几个重要步骤。递归中的边界条件，就是数学归纳法中的 
</span></span></span><span class="se-4dbc7a92 se-2b50b467" data-slate-type="inline-katex" data-slate-object="inline" 
data-key="4478"><span data-slate-leaf="true"><span data-slate-string="true" class="katex"><span 
class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span 
class="mord"><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="msupsub"><span 
class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span 
style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" 
style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord 
mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span 
class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></span><span 
data-slate-object="text" data-key="4480"><span data-slate-leaf="true" data-offset-key="4480:0" 
data-first-offset="true"><span data-slate-string="true">，递归中的递归过程，就是数学归纳法中的假设 </span></span></span><span 
class="se-4dbc7a92 se-2b50b467" data-slate-type="inline-katex" data-slate-object="inline" data-key="4481"><span 
data-slate-leaf="true"><span data-slate-string="true" class="katex"><span class="katex-html" 
aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span 
class="mord"><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="msupsub"><span 
class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span 
style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" 
style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord 
mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span 
class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></span><span 
data-slate-object="text" data-key="4483"><span data-slate-leaf="true" data-offset-key="4483:0" 
data-first-offset="true"><span data-slate-string="true"> 成立并证明 </span></span></span><span class="se-4dbc7a92 
se-2b50b467" data-slate-type="inline-katex" data-slate-object="inline" data-key="4484"><span 
data-slate-leaf="true"><span data-slate-string="true" class="katex"><span class="katex-html" 
aria-hidden="true"><span class="base"><span class="strut" style="height:0.902771em;vertical-align:-0.208331em;"></span><span 
class="mord"><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="msupsub"><span 
class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span 
style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" 
style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord 
mtight"><span class="mord mathdefault mtight">i</span><span class="mbin mtight">+</span><span 
class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span 
class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span></span></span></span></span></span><span 
data-slate-object="text" data-key="4486"><span data-slate-leaf="true" data-offset-key="4486:0" 
data-first-offset="true"><span data-slate-string="true"> 也成立那一步，最后两步结论放到一起，就能证明我们的递归程序整体是正确的。</span></span></span> 
</div> <div class="se-853968f1 " data-slate-type="paragraph" data-slate-object="block" data-key="4487"> 
<span data-slate-object="text" data-key="4488"><span data-slate-leaf="true" data-offset-key="4488:0" 
data-first-offset="true"><span data-slate-string="true">思考题中呢，给你留了两个问题，第一个是将菲波那契数列的递归程序，改写成循环程序，关于这个问题，你可以参考留言区中 
@奔跑的八戒、@徐洲更、@一步、@Geek_Andy_Lee00、@我思故我在 等用户的答案以及我在他们当中给出的回复内容。</span></span></span> </div> 
<div class="se-9982b5fe " data-slate-type="paragraph" data-slate-object="block" data-key="4489"> 
<span data-slate-object="text" data-key="4490"><span data-slate-leaf="true" data-offset-key="4490:0" 
data-first-offset="true"><span data-slate-string="true">第二个思考题呢，是做数学归纳法与菲波那契数列递归程序步骤的一一对应，关于这个问题，请看下面我给出的参考答案，看看和你想的有什么差别吧：</span></span></span> 
</div> <div class="se-f8cc206f se-73a51566" data-slate-type="pre" data-slate-object="block" 
data-key="4491" data-code-language="cpp"> <div class="se-2d6cd852 se-f18c4edf"> <span></span> 
</div> <div class="se-3e9fbe5a"> <div class="se-f8a0c377 se-8d41cdcb" data-code-line-number="1"></div> 
<div class="se-f8a0c377 se-8d41cdcb" data-code-line-number="2"></div> <div class="se-f8a0c377 
se-8d41cdcb" data-code-line-number="3"></div> <div class="se-f8a0c377 se-8d41cdcb" data-code-line-number="4"></div> 
<div class="se-f8a0c377 se-8d41cdcb" data-code-line-number="5"></div> <div class="se-f8a0c377 
se-8d41cdcb" data-code-line-number="6"></div> <div class="se-f8a0c377 se-8d41cdcb" data-code-line-number="7"></div> 
<div class="se-f8a0c377 se-8d41cdcb" data-code-line-number="8"></div> <div class="se-f8a0c377 
se-8d41cdcb" data-code-line-number="9"></div> <div class="se-f8a0c377 se-8d41cdcb" data-code-line-number="10"></div> 
<div class="se-f8a0c377 se-8d41cdcb" data-code-line-number="11"></div> <div class="se-f8a0c377 
se-8d41cdcb" data-code-line-number="12"></div> <div class="se-f8a0c377 se-8d41cdcb" data-code-line-number="13"></div> 
</div> <div class="se-953500a6 ps"> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" 
data-slate-object="block" data-key="4492"> <span data-slate-object="text" data-key="4493"><span 
data-slate-leaf="true" data-offset-key="4493:0" data-first-offset="true"><span class=" gkhl-meta" 
data-slate-object="annotation" data-annotation-key="gkann_1853508810" data-annotation-type="annotation"><span 
data-slate-string="true">#include &lt;stdio.h&gt;</span></span></span></span> </div> <div class="se-03eefeec 
se-2642b266" data-slate-type="code-line" data-slate-object="block" data-key="4494"> <span data-slate-object="text" 
data-key="4495"></span> </div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" 
data-slate-object="block" data-key="4496"> <span data-slate-object="text" data-key="4497"><span 
data-slate-leaf="true" data-offset-key="4497:0" data-first-offset="true"><span class=" gkhl-function" 
data-slate-object="annotation" data-annotation-key="gkann_1463148607" data-annotation-type="annotation"><span 
class=" gkhl-keyword" data-slate-object="annotation" data-annotation-key="gkann_2043028747" 
data-annotation-type="annotation"><span data-slate-string="true">int</span></span></span></span><span 
data-slate-leaf="true" data-offset-key="4497:1"><span class=" gkhl-function" data-slate-object="annotation" 
data-annotation-key="gkann_1463148607" data-annotation-type="annotation"><span data-slate-string="true"> 
</span></span></span><span data-slate-leaf="true" data-offset-key="4497:2"><span class=" gkhl-function" 
data-slate-object="annotation" data-annotation-key="gkann_1463148607" data-annotation-type="annotation"><span 
class=" gkhl-title" data-slate-object="annotation" data-annotation-key="gkann_7627853661" data-annotation-type="annotation"><span 
data-slate-string="true">fib</span></span></span></span><span data-slate-leaf="true" data-offset-key="4497:3"><span 
class=" gkhl-params" data-slate-object="annotation" data-annotation-key="gkann_4961942490" 
data-annotation-type="annotation"><span class=" gkhl-function" data-slate-object="annotation" 
data-annotation-key="gkann_1463148607" data-annotation-type="annotation"><span data-slate-string="true">(int 
n)</span></span></span></span><span data-slate-leaf="true" data-offset-key="4497:4"><span class=" 
gkhl-function" data-slate-object="annotation" data-annotation-key="gkann_1463148607" data-annotation-type="annotation"><span 
data-slate-string="true"> </span></span></span><span data-slate-leaf="true" data-offset-key="4497:5"><span 
data-slate-string="true">{</span></span></span> </div> <div class="se-03eefeec se-2642b266" 
data-slate-type="code-line" data-slate-object="block" data-key="4498"> <span data-slate-object="text" 
data-key="4499"><span data-slate-leaf="true" data-offset-key="4499:0" data-first-offset="true"><span 
data-slate-string="true"> </span></span><span data-slate-leaf="true" data-offset-key="4499:1"><span 
class=" gkhl-keyword" data-slate-object="annotation" data-annotation-key="gkann_2741910770" 
data-annotation-type="annotation"><span data-slate-string="true">if</span></span></span><span 
data-slate-leaf="true" data-offset-key="4499:2"><span data-slate-string="true"> (n == </span></span><span 
data-slate-leaf="true" data-offset-key="4499:3"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_8199407965" data-annotation-type="annotation"><span data-slate-string="true">1</span></span></span><span 
data-slate-leaf="true" data-offset-key="4499:4"><span data-slate-string="true"> || n == </span></span><span 
data-slate-leaf="true" data-offset-key="4499:5"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_4865578337" data-annotation-type="annotation"><span data-slate-string="true">2</span></span></span><span 
data-slate-leaf="true" data-offset-key="4499:6"><span data-slate-string="true">) </span></span><span 
data-slate-leaf="true" data-offset-key="4499:7"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_3708074481" data-annotation-type="annotation"><span data-slate-string="true">return</span></span></span><span 
data-slate-leaf="true" data-offset-key="4499:8"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="4499:9"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_7844075961" data-annotation-type="annotation"><span data-slate-string="true">1</span></span></span><span 
data-slate-leaf="true" data-offset-key="4499:10"><span data-slate-string="true">;</span></span></span> 
</div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" data-slate-object="block" 
data-key="4500"> <span data-slate-object="text" data-key="4501"><span data-slate-leaf="true" 
data-offset-key="4501:0" data-first-offset="true"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="4501:1"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_6351758581" data-annotation-type="annotation"><span data-slate-string="true">return</span></span></span><span 
data-slate-leaf="true" data-offset-key="4501:2"><span data-slate-string="true"> fib(n - </span></span><span 
data-slate-leaf="true" data-offset-key="4501:3"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_9874623021" data-annotation-type="annotation"><span data-slate-string="true">1</span></span></span><span 
data-slate-leaf="true" data-offset-key="4501:4"><span data-slate-string="true">) + fib(n - 
</span></span><span data-slate-leaf="true" data-offset-key="4501:5"><span class=" gkhl-number" 
data-slate-object="annotation" data-annotation-key="gkann_9367454552" data-annotation-type="annotation"><span 
data-slate-string="true">2</span></span></span><span data-slate-leaf="true" data-offset-key="4501:6"><span 
data-slate-string="true">); </span></span></span> </div> <div class="se-03eefeec se-2642b266" 
data-slate-type="code-line" data-slate-object="block" data-key="4502"> <span data-slate-object="text" 
data-key="4503"><span data-slate-leaf="true" data-offset-key="4503:0" data-first-offset="true"><span 
data-slate-string="true">}</span></span></span> </div> <div class="se-03eefeec se-2642b266" 
data-slate-type="code-line" data-slate-object="block" data-key="4504"> <span data-slate-object="text" 
data-key="4505"></span> </div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" 
data-slate-object="block" data-key="4506"> <span data-slate-object="text" data-key="4507"><span 
data-slate-leaf="true" data-offset-key="4507:0" data-first-offset="true"><span class=" gkhl-function" 
data-slate-object="annotation" data-annotation-key="gkann_0636993498" data-annotation-type="annotation"><span 
class=" gkhl-keyword" data-slate-object="annotation" data-annotation-key="gkann_9343460558" 
data-annotation-type="annotation"><span data-slate-string="true">int</span></span></span></span><span 
data-slate-leaf="true" data-offset-key="4507:1"><span class=" gkhl-function" data-slate-object="annotation" 
data-annotation-key="gkann_0636993498" data-annotation-type="annotation"><span data-slate-string="true"> 
</span></span></span><span data-slate-leaf="true" data-offset-key="4507:2"><span class=" gkhl-function" 
data-slate-object="annotation" data-annotation-key="gkann_0636993498" data-annotation-type="annotation"><span 
class=" gkhl-title" data-slate-object="annotation" data-annotation-key="gkann_2219529936" data-annotation-type="annotation"><span 
data-slate-string="true">main</span></span></span></span><span data-slate-leaf="true" data-offset-key="4507:3"><span 
class=" gkhl-params" data-slate-object="annotation" data-annotation-key="gkann_2334019033" 
data-annotation-type="annotation"><span class=" gkhl-function" data-slate-object="annotation" 
data-annotation-key="gkann_0636993498" data-annotation-type="annotation"><span data-slate-string="true">()</span></span></span></span><span 
data-slate-leaf="true" data-offset-key="4507:4"><span class=" gkhl-function" data-slate-object="annotation" 
data-annotation-key="gkann_0636993498" data-annotation-type="annotation"><span data-slate-string="true"> 
</span></span></span><span data-slate-leaf="true" data-offset-key="4507:5"><span data-slate-string="true">{</span></span></span> 
</div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" data-slate-object="block" 
data-key="4508"> <span data-slate-object="text" data-key="4509"><span data-slate-leaf="true" 
data-offset-key="4509:0" data-first-offset="true"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="4509:1"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_1778262015" data-annotation-type="annotation"><span data-slate-string="true">int</span></span></span><span 
data-slate-leaf="true" data-offset-key="4509:2"><span data-slate-string="true"> n;</span></span></span> 
</div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" data-slate-object="block" 
data-key="4510"> <span data-slate-object="text" data-key="4511"><span data-slate-leaf="true" 
data-offset-key="4511:0" data-first-offset="true"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="4511:1"><span class=" gkhl-built_in" data-slate-object="annotation" 
data-annotation-key="gkann_3800730332" data-annotation-type="annotation"><span data-slate-string="true">scanf</span></span></span><span 
data-slate-leaf="true" data-offset-key="4511:2"><span data-slate-string="true">(</span></span><span 
data-slate-leaf="true" data-offset-key="4511:3"><span class=" gkhl-string" data-slate-object="annotation" 
data-annotation-key="gkann_2463941816" data-annotation-type="annotation"><span data-slate-string="true">"%d"</span></span></span><span 
data-slate-leaf="true" data-offset-key="4511:4"><span data-slate-string="true">, &amp;n);</span></span></span> 
</div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" data-slate-object="block" 
data-key="4512"> <span data-slate-object="text" data-key="4513"><span data-slate-leaf="true" 
data-offset-key="4513:0" data-first-offset="true"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="4513:1"><span class=" gkhl-built_in" data-slate-object="annotation" 
data-annotation-key="gkann_7208606169" data-annotation-type="annotation"><span data-slate-string="true">printf</span></span></span><span 
data-slate-leaf="true" data-offset-key="4513:2"><span data-slate-string="true">(</span></span><span 
data-slate-leaf="true" data-offset-key="4513:3"><span class=" gkhl-string" data-slate-object="annotation" 
data-annotation-key="gkann_0054630675" data-annotation-type="annotation"><span data-slate-string="true">"%d\n"</span></span></span><span 
data-slate-leaf="true" data-offset-key="4513:4"><span data-slate-string="true">, fib(n));</span></span></span> 
</div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" data-slate-object="block" 
data-key="4514"> <span data-slate-object="text" data-key="4515"><span data-slate-leaf="true" 
data-offset-key="4515:0" data-first-offset="true"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="4515:1"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_6037147892" data-annotation-type="annotation"><span data-slate-string="true">return</span></span></span><span 
data-slate-leaf="true" data-offset-key="4515:2"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="4515:3"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_9578350897" data-annotation-type="annotation"><span data-slate-string="true">0</span></span></span><span 
data-slate-leaf="true" data-offset-key="4515:4"><span data-slate-string="true">;</span></span></span> 
</div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" data-slate-object="block" 
data-key="4516"> <span data-slate-object="text" data-key="4517"><span data-slate-leaf="true" 
data-offset-key="4517:0" data-first-offset="true"><span data-slate-string="true">}</span></span></span> 
</div> <div class="ps__rail-x" style="left: 0px; bottom: 0px;"> <div class="ps__thumb-x" tabindex="0" 
style="left: 0px; width: 0px;"></div> </div> <div class="ps__rail-y" style="top: 0px; right: 
0px;"> <div class="ps__thumb-y" tabindex="0" style="top: 0px; height: 0px;"></div> </div> </div> 
</div> <div class="se-7eb0bbda " data-slate-type="paragraph" data-slate-object="block" data-key="4518"> 
<span data-slate-object="text" data-key="4519"><span data-slate-leaf="true" data-offset-key="4519:0" 
data-first-offset="true"><span data-slate-string="true">其中代码的第 4 行，n == 1 和 n == 2 的条件判断，就是数学归纳法中所谓的 
</span></span></span><span class="se-4dbc7a92 se-2b50b467" data-slate-type="inline-katex" data-slate-object="inline" 
data-key="4520"><span data-slate-leaf="true"><span data-slate-string="true" class="katex"><span 
class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span 
class="mord"><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="msupsub"><span 
class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span 
style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" 
style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord 
mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span 
class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></span><span 
data-slate-object="text" data-key="4522"><span data-slate-leaf="true" data-offset-key="4522:0" 
data-first-offset="true"><span data-slate-string="true"> 成立，这一步保证了，</span></span></span><span 
data-slate-type="code" data-slate-object="inline" data-key="4523" class="se-aba79128"><span 
data-slate-object="text" data-key="4524"><span data-slate-leaf="true" data-offset-key="4524:0" 
data-first-offset="true"><span data-slate-string="true">fib</span></span></span></span><span 
data-slate-object="text" data-key="4525"><span data-slate-leaf="true" data-offset-key="4525:0" 
data-first-offset="true"><span data-slate-string="true"> 函数计算的第 1 项 和 第 2 项的斐波那契函数值一定是正确的。代码的第 
5 行中呢，就是假设 </span></span></span><span data-slate-type="code" data-slate-object="inline" data-key="4526" 
class="se-aba79128"><span data-slate-object="text" data-key="4527"><span data-slate-leaf="true" 
data-offset-key="4527:0" data-first-offset="true"><span data-slate-string="true">fib(n - 1)</span></span></span></span><span 
data-slate-object="text" data-key="4528"><span data-slate-leaf="true" data-offset-key="4528:0" 
data-first-offset="true"><span data-slate-string="true"> 和 </span></span></span><span data-slate-type="code" 
data-slate-object="inline" data-key="4529" class="se-aba79128"><span data-slate-object="text" 
data-key="4530"><span data-slate-leaf="true" data-offset-key="4530:0" data-first-offset="true"><span 
data-slate-string="true">fib(n - 2)</span></span></span></span><span data-slate-object="text" 
data-key="4531"><span data-slate-leaf="true" data-offset-key="4531:0" data-first-offset="true"><span 
data-slate-string="true">的值是正确的，那么 </span></span></span><span data-slate-type="code" data-slate-object="inline" 
data-key="4532" class="se-aba79128"><span data-slate-object="text" data-key="4533"><span data-slate-leaf="true" 
data-offset-key="4533:0" data-first-offset="true"><span data-slate-string="true">fib(n)</span></span></span></span><span 
data-slate-object="text" data-key="4534"><span data-slate-leaf="true" data-offset-key="4534:0" 
data-first-offset="true"><span data-slate-string="true"> 就的值就等于 </span></span></span><span 
data-slate-type="code" data-slate-object="inline" data-key="4535" class="se-aba79128"><span 
data-slate-object="text" data-key="4536"><span data-slate-leaf="true" data-offset-key="4536:0" 
data-first-offset="true"><span data-slate-string="true">fib(n - 1) + fib(n - 2)</span></span></span></span><span 
data-slate-object="text" data-key="4537"><span data-slate-leaf="true" data-offset-key="4537:0" 
data-first-offset="true"><span data-slate-string="true"> ，这就是数学归纳法中的第二步，假设 </span></span></span><span 
class="se-4dbc7a92 se-2b50b467" data-slate-type="inline-katex" data-slate-object="inline" data-key="4538"><span 
data-slate-leaf="true"><span data-slate-string="true" class="katex"><span class="katex-html" 
aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span 
class="mord"><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="msupsub"><span 
class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span 
style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" 
style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord 
mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span 
class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></span><span 
data-slate-object="text" data-key="4540"><span data-slate-leaf="true" data-offset-key="4540:0" 
data-first-offset="true"><span data-slate-string="true"> 成立，证明 </span></span></span><span class="se-4dbc7a92 
se-2b50b467" data-slate-type="inline-katex" data-slate-object="inline" data-key="4541"><span 
data-slate-leaf="true"><span data-slate-string="true" class="katex"><span class="katex-html" 
aria-hidden="true"><span class="base"><span class="strut" style="height:0.902771em;vertical-align:-0.208331em;"></span><span 
class="mord"><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="msupsub"><span 
class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span 
style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" 
style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord 
mtight"><span class="mord mathdefault mtight">i</span><span class="mbin mtight">+</span><span 
class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span 
class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span></span></span></span></span></span><span 
data-slate-object="text" data-key="4543"><span data-slate-leaf="true" data-offset-key="4543:0" 
data-first-offset="true"><span data-slate-string="true"> 也成立。显然如果可以保证前两项的正确性，那么 </span></span></span><span 
data-slate-type="code" data-slate-object="inline" data-key="4544" class="se-aba79128"><span 
data-slate-object="text" data-key="4545"><span data-slate-leaf="true" data-offset-key="4545:0" 
data-first-offset="true"><span data-slate-string="true">fib(n)</span></span></span></span><span 
data-slate-object="text" data-key="4546"><span data-slate-leaf="true" data-offset-key="4546:0" 
data-first-offset="true"><span data-slate-string="true"> 的值一定正确。最后我们得出结论，这个</span></span></span><span 
data-slate-type="code" data-slate-object="inline" data-key="4547" class="se-aba79128"><span 
data-slate-object="text" data-key="4548"><span data-slate-leaf="true" data-offset-key="4548:0" 
data-first-offset="true"><span data-slate-string="true">fib</span></span></span></span><span 
data-slate-object="text" data-key="4549"><span data-slate-leaf="true" data-offset-key="4549:0" 
data-first-offset="true"><span data-slate-string="true"> 递归函数设计是正确的。</span></span></span> </div> 
<h2 class="se-85f8287d" data-slate-type="heading" data-slate-object="block" data-key="4550"><span 
data-slate-object="text" data-key="4551"><span data-slate-leaf="true" data-offset-key="4551:0" 
data-first-offset="true"><span data-slate-string="true">程序设计原则：把计算过程交给计算机</span></span></span></h2> 
<div class="se-a9c3e30d " data-slate-type="paragraph" data-slate-object="block" data-key="4552"> 
<span data-slate-object="text" data-key="4553"><span data-slate-leaf="true" data-offset-key="4553:0" 
data-first-offset="true"><span data-slate-string="true">这一节中，我们强调了程序设计的基本原则，就是将计算过程交给计算机。我们负责逻辑组织，计算机负责具体计算过程，这就是所谓的专业的事情交给专业的人来做。</span></span></span> 
</div> <div class="se-b5b0ba4f " data-slate-type="paragraph" data-slate-object="block" data-key="4554"> 
<span data-slate-object="text" data-key="4555"><span data-slate-leaf="true" data-offset-key="4555:0" 
data-first-offset="true"><span data-slate-string="true">本节中的思考题是计算 100 以内自然数的 “和的平方” 与 “平方和” 
的差值。在这里呢，我要给用户 @胖胖胖、@不便明言、@Geek_And_Lee00 点赞。具体的答案，你也可以参考这三个用户在留言区中的内容。</span></span></span> 
</div> <div class="se-b702e1cb " data-slate-type="paragraph" data-slate-object="block" data-key="4556"> 
<span data-slate-object="text" data-key="4557"><span data-slate-leaf="true" data-offset-key="4557:0" 
data-first-offset="true"><span data-slate-string="true">关于这道思考题的第一问，我就不给你做演示了，实现起来比较简单，你应该有能力自我完成的。下面，我主要给出 
“平方和” 公式的推导过程，而对于 “和的平方” 你可以基于等差数列求和公式来求解。</span></span></span> </div> <div class="se-96a77416 
" data-slate-type="paragraph" data-slate-object="block" data-key="4558"> <span data-slate-object="text" 
data-key="4559"><span data-slate-leaf="true" data-offset-key="4559:0" data-first-offset="true"><span 
data-slate-string="true">教给你一种比较通用的推导平方和公式的方法，也是我用着最顺手的方法，就是依靠立方和，推导平方和。首先，我们先列出来相邻两项的立方差：</span></span></span> 
</div> <div class="se-2acc0e90 ps ps--active-x"> <div data-slate-type="block-katex" data-slate-object="block" 
data-key="4560"> <span class="katex-display"><span class="katex"><span class="katex-html" aria-hidden="true"><span 
class="base"><span class="strut" style="height:9.12054em;vertical-align:-4.31027em;"></span><span 
class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span 
class="vlist-r"><span class="vlist" style="height:4.81027em;"><span style="top:-6.946162em;"><span 
class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord 
mathdefault">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span 
class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span 
class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span 
class="mord mtight">3</span></span></span></span></span></span></span></span><span class="mspace" 
style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" 
style="margin-right:0.2222222222222222em;"></span><span class="mopen">(</span><span class="mord 
mathdefault">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span 
class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span 
class="mord">1</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span 
class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span 
style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span 
class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span></span></span><span 
style="top:-5.422054em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span 
class="mopen">(</span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span 
class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span 
class="mord">1</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span 
class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span 
style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span 
class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span><span 
class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span 
class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mopen">(</span><span 
class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span 
class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span 
class="mord">2</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span 
class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span 
style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span 
class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span></span></span><span 
style="top:-3.897946em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span 
class="mopen">(</span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span 
class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span 
class="mord">2</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span 
class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span 
style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span 
class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span><span 
class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span 
class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mopen">(</span><span 
class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span 
class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span 
class="mord">3</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span 
class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span 
style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span 
class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span></span></span><span 
style="top:-2.397946em;"><span class="pstrut" style="height:3em;"></span><span class="mord"></span></span><span 
style="top:-0.8738380000000001em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span 
class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span 
class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span 
class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span 
class="mord mtight">3</span></span></span></span></span></span></span></span><span class="mspace" 
style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" 
style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord">1</span><span 
class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span 
style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span 
class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span></span></span><span 
style="top:0.6502699999999999em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span 
class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span 
class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span 
class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span 
class="mord mtight">3</span></span></span></span></span></span></span></span><span class="mspace" 
style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" 
style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord">0</span><span 
class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span 
style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span 
class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span></span></span></span><span 
class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:4.31027em;"><span></span></span></span></span></span><span 
class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" 
style="height:4.81027em;"><span style="top:-6.946162em;"><span class="pstrut" style="height:3em;"></span><span 
class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span 
class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span 
class="mord">3</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span 
class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span 
class="mord"><span class="mord mathdefault">n</span><span class="msupsub"><span class="vlist-t"><span 
class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span 
class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span 
class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" 
style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" 
style="margin-right:0.2222222222222222em;"></span><span class="mord">3</span><span class="mspace" 
style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" 
style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault">n</span><span 
class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span 
class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">1</span></span></span><span 
style="top:-5.422054em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span 
class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span 
class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span 
class="mord">3</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span 
class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span 
class="mopen">(</span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span 
class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span 
class="mord">1</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span 
class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span 
style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span 
class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span 
class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span 
class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">3</span><span 
class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span 
class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mopen">(</span><span 
class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span 
class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span 
class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span 
class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span 
class="mord">1</span></span></span><span style="top:-3.897946em;"><span class="pstrut" style="height:3em;"></span><span 
class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span 
class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span 
class="mord">3</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span 
class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span 
class="mopen">(</span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span 
class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span 
class="mord">2</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span 
class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span 
style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span 
class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span 
class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span 
class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">3</span><span 
class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span 
class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mopen">(</span><span 
class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span 
class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span 
class="mord">2</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span 
class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span 
class="mord">1</span></span></span><span style="top:-2.397946em;"><span class="pstrut" style="height:3em;"></span><span 
class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span 
class="minner">…</span></span></span><span style="top:-0.8738380000000001em;"><span class="pstrut" 
style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace" 
style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" 
style="margin-right:0.2777777777777778em;"></span><span class="mord">3</span><span class="mspace" 
style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" 
style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord">2</span><span 
class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span 
style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span 
class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span 
class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span 
class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">3</span><span 
class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span 
class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord">2</span><span 
class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span 
style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span 
class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span 
class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span 
class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">1</span></span></span><span 
style="top:0.6502699999999999em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span 
class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span 
class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span 
class="mord">3</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span 
class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span 
class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span 
class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span 
class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span 
class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" 
style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" 
style="margin-right:0.2222222222222222em;"></span><span class="mord">3</span><span class="mspace" 
style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" 
style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord">1</span><span 
class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span 
style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span 
class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span 
class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span 
class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">1</span></span></span></span><span 
class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:4.31027em;"><span></span></span></span></span></span></span></span></span></span></span></span> 
</div> <div class="ps__rail-x" style="width: 435px; left: 0px; bottom: 0px;"> <div class="ps__thumb-x" 
tabindex="0" style="left: 0px; width: 405px;"></div> </div> <div class="ps__rail-y" style="top: 
0px; right: 0px;"> <div class="ps__thumb-y" tabindex="0" style="top: 0px; height: 0px;"></div> 
</div> </div> <div class="se-95af5b31 " data-slate-type="paragraph" data-slate-object="block" 
data-key="4562"> <span data-slate-object="text" data-key="4563"><span data-slate-leaf="true" 
data-offset-key="4563:0" data-first-offset="true"><span data-slate-string="true">如上公式所示，我们将上面罗列的 
n 个等式的左右两侧分别相加，就得到了如下式子：</span></span></span> </div> <div class="se-999c83a0 ps ps--active-x"> 
<div data-slate-type="block-katex" data-slate-object="block" data-key="4564"> <span class="katex-display"><span 
class="katex"><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" 
style="height:6.2531740000000005em;vertical-align:-2.8765870000000002em;"></span><span class="mord"><span 
class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span 
class="vlist" style="height:3.3765870000000002em;"><span style="top:-6.163876em;"><span class="pstrut" 
style="height:3.6513970000000002em;"></span><span class="mord"></span></span><span style="top:-4.663876em;"><span 
class="pstrut" style="height:3.6513970000000002em;"></span><span class="mord"></span></span><span 
style="top:-2.3524790000000007em;"><span class="pstrut" style="height:3.6513970000000002em;"></span><span 
class="mord"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span 
class="vlist" style="height:2.876587em;"><span></span></span></span></span></span><span class="col-align-l"><span 
class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.3765870000000002em;"><span 
style="top:-6.163876em;"><span class="pstrut" style="height:3.6513970000000002em;"></span><span 
class="mord"><span class="mord"></span><span class="mord cjk_fallback">左</span><span class="mord 
cjk_fallback">侧</span><span class="mord cjk_fallback">：</span><span class="mord"><span class="mord 
mathdefault">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span 
class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span 
class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span 
class="mord mtight">3</span></span></span></span></span></span></span></span><span class="mspace" 
style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" 
style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathdefault">n</span><span 
class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span 
style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span 
class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span><span 
class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span 
class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mopen">(</span><span 
class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span 
class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span 
class="mord">1</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span 
class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span 
style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span 
class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span><span 
class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span 
class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mopen">(</span><span 
class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span 
class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span 
class="mord">1</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span 
class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span 
style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span 
class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span><span 
class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span 
class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mopen">(</span><span 
class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span 
class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span 
class="mord">2</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span 
class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span 
style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span 
class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span><span 
class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span 
class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="minner">…</span><span 
class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span 
class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord">1</span><span 
class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span 
style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span 
class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span><span 
class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span 
class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord">1</span><span 
class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span 
style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span 
class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span><span 
class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span 
class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord">0</span><span 
class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span 
style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span 
class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span></span></span><span 
style="top:-2.3524789999999998em;"><span class="pstrut" style="height:3.6513970000000002em;"></span><span 
class="mord"><span class="mord"></span><span class="mord cjk_fallback">右</span><span class="mord 
cjk_fallback">侧</span><span class="mord cjk_fallback">：</span><span class="mord">3</span><span 
class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span 
class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mop op-limits"><span 
class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6513970000000002em;"><span 
style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span 
class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault 
mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span 
style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop 
op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span 
class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span 
class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span><span 
class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span 
class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span 
class="mord mathdefault">i</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span 
class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span 
class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span 
class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" 
style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" 
style="margin-right:0.2222222222222222em;"></span><span class="mord">3</span><span class="mspace" 
style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" 
style="margin-right:0.2222222222222222em;"></span><span class="mop op-limits"><span class="vlist-t 
vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6513970000000002em;"><span 
style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span 
class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault 
mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span 
style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop 
op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span 
class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span 
class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span><span 
class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span 
class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">i</span><span 
class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span 
class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault">n</span></span></span></span><span 
class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.8765870000000002em;"><span></span></span></span></span></span></span></span></span></span></span></span> 
</div> <div class="ps__rail-x" style="width: 435px; left: 0px; bottom: 0px;"> <div class="ps__thumb-x" 
tabindex="0" style="left: 0px; width: 312px;"></div> </div> <div class="ps__rail-y" style="top: 
0px; right: 0px;"> <div class="ps__thumb-y" tabindex="0" style="top: 0px; height: 0px;"></div> 
</div> </div> <div class="se-5b6e8ed7 " data-slate-type="paragraph" data-slate-object="block" 
data-key="4566"> <span data-slate-object="text" data-key="4567"><span data-slate-leaf="true" 
data-offset-key="4567:0" data-first-offset="true"><span data-slate-string="true">我们看到左侧就剩下一项 
n 的立方了，这一项是可算的，右侧有一个 3 倍的平方和项，和一个 3 倍的等差数列求和项，以及一个常数项 n。接下来，左侧等于右侧，我们将平方和项与其他几项分别置于等式的两侧，就得到了如下平方和公式：</span></span></span> 
</div> <div class="se-b3484a3c ps"> <div data-slate-type="block-katex" data-slate-object="block" 
data-key="4568"> <span class="katex-display"><span class="katex"><span class="katex-html" aria-hidden="true"><span 
class="base"><span class="strut" style="height:15.916264000000002em;vertical-align:-7.708132000000001em;"></span><span 
class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span 
class="vlist-r"><span class="vlist" style="height:8.208132em;"><span style="top:-11.019529000000002em;"><span 
class="pstrut" style="height:3.6513970000000002em;"></span><span class="mord"><span class="mord 
cjk_fallback">左</span><span class="mord cjk_fallback">侧</span></span></span><span style="top:-8.708132em;"><span 
class="pstrut" style="height:3.6513970000000002em;"></span><span class="mord"></span></span><span 
style="top:-6.290463000000001em;"><span class="pstrut" style="height:3.6513970000000002em;"></span><span 
class="mord"><span class="mord cjk_fallback">移</span><span class="mord cjk_fallback">项</span></span></span><span 
style="top:-3.9790660000000004em;"><span class="pstrut" style="height:3.6513970000000002em;"></span><span 
class="mord"></span></span><span style="top:-0.7499999999999989em;"><span class="pstrut" style="height:3.6513970000000002em;"></span><span 
class="mord"></span></span><span style="top:2.4790660000000004em;"><span class="pstrut" style="height:3.6513970000000002em;"></span><span 
class="mord"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span 
class="vlist" style="height:7.708132000000001em;"><span></span></span></span></span></span><span 
class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" 
style="height:8.208132em;"><span style="top:-11.019529000000002em;"><span class="pstrut" style="height:3.6513970000000002em;"></span><span 
class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span 
class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span 
class="mord cjk_fallback">右</span><span class="mord cjk_fallback">侧</span><span class="mord 
cjk_fallback">：</span></span></span><span style="top:-8.708132em;"><span class="pstrut" style="height:3.6513970000000002em;"></span><span 
class="mord"><span class="mord"></span><span class="mord"><span class="mord mathdefault">n</span><span 
class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span 
style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span 
class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span><span 
class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span 
class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">3</span><span 
class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span 
class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mop op-limits"><span 
class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6513970000000002em;"><span 
style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span 
class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault 
mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span 
style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop 
op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span 
class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span 
class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span><span 
class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span 
class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span 
class="mord mathdefault">i</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span 
class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span 
class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span 
class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" 
style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" 
style="margin-right:0.2222222222222222em;"></span><span class="mopen">(</span><span class="mord">3</span><span 
class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span 
class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mop op-limits"><span 
class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6513970000000002em;"><span 
style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span 
class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault 
mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span 
style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop 
op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span 
class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span 
class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span><span 
class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span 
class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">i</span><span 
class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span 
class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span 
class="mord mathdefault">n</span></span></span><span style="top:-6.290463000000001em;"><span 
class="pstrut" style="height:3.6513970000000002em;"></span><span class="mord"><span class="mord"></span><span 
class="mord cjk_fallback">：</span></span></span><span style="top:-3.9790660000000004em;"><span 
class="pstrut" style="height:3.6513970000000002em;"></span><span class="mord"><span class="mord"></span><span 
class="mord">3</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span 
class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span 
class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" 
style="height:1.6513970000000002em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" 
style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord 
mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span 
class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" 
style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span 
style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span 
class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault 
mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span 
class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" 
style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">i</span><span 
class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span 
style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span 
class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span 
class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span 
class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord 
mathdefault">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span 
class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span 
class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span 
class="mord mtight">3</span></span></span></span></span></span></span></span><span class="mspace" 
style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" 
style="margin-right:0.2222222222222222em;"></span><span class="mopen">(</span><span class="mord">3</span><span 
class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span 
class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mop op-limits"><span 
class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6513970000000002em;"><span 
style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span 
class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault 
mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span 
style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop 
op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span 
class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span 
class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span><span 
class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span 
class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span 
class="mord mathdefault">i</span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span 
class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span 
class="mord mathdefault">n</span></span></span><span style="top:-0.7499999999999989em;"><span 
class="pstrut" style="height:3.6513970000000002em;"></span><span class="mord"><span class="mord"></span><span 
class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span 
class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6513970000000002em;"><span 
style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span 
class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault 
mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span 
style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop 
op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span 
class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span 
class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span><span 
class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span 
class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span 
class="mord mathdefault">i</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span 
class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span 
class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span 
class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" 
style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" 
style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span 
class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.5038179999999999em;"><span 
style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span 
class="mord">3</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span 
class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.6897100000000003em;"><span 
class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord 
mathdefault">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span 
class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span 
class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span 
class="mord mtight">3</span></span></span></span></span></span></span></span><span class="mspace" 
style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" 
style="margin-right:0.2222222222222222em;"></span><span class="mopen">(</span><span class="mord">3</span><span 
class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span 
class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mop"><span class="mop 
op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span 
class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.804292em;"><span 
style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span 
class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault 
mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span 
style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span 
class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault 
mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span 
class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span 
class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">i</span><span 
class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span 
class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span 
class="mord mathdefault">n</span></span></span></span><span class="vlist-s">​</span></span><span 
class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span 
class="mclose nulldelimiter"></span></span></span></span><span style="top:2.4790660000000004em;"><span 
class="pstrut" style="height:3.6513970000000002em;"></span><span class="mord"><span class="mord"></span><span 
class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span 
class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6513970000000002em;"><span 
style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span 
class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault 
mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span 
style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop 
op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span 
class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span 
class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span><span 
class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span 
class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span 
class="mord mathdefault">i</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span 
class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span 
class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span 
class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" 
style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" 
style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span 
class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.491108em;"><span 
style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span 
class="mord">6</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span 
class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span 
class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span><span 
class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span 
class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord 
mathdefault">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span 
class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span 
class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span 
class="mord mtight">3</span></span></span></span></span></span></span></span><span class="mspace" 
style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" 
style="margin-right:0.2222222222222222em;"></span><span class="mord">3</span><span class="mspace" 
style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" 
style="margin-right:0.2222222222222222em;"></span><span class="mopen">(</span><span class="mord">1</span><span 
class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span 
class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault">n</span><span 
class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span 
class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span 
class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span 
class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span 
class="mord">2</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span 
class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span 
class="mord mathdefault">n</span></span></span></span><span class="vlist-s">​</span></span><span 
class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span 
class="mclose nulldelimiter"></span></span></span></span></span><span class="vlist-s">​</span></span><span 
class="vlist-r"><span class="vlist" style="height:7.708132000000001em;"><span></span></span></span></span></span></span></span></span></span></span></span> 
</div> <div class="ps__rail-x" style="left: 0px; bottom: 0px;"> <div class="ps__thumb-x" tabindex="0" 
style="left: 0px; width: 0px;"></div> </div> <div class="ps__rail-y" style="top: 0px; right: 
0px;"> <div class="ps__thumb-y" tabindex="0" style="top: 0px; height: 0px;"></div> </div> </div> 
<div class="se-bd196abb " data-slate-type="paragraph" data-slate-object="block" data-key="4570"> 
<span data-slate-object="text" data-key="4571"><span data-slate-leaf="true" data-offset-key="4571:0" 
data-first-offset="true"><span data-slate-string="true">至此，我们就得到了平方和公式。其实，你还可以尝试使用这种方法，求解立方和公式，整体步骤差不多，就是先表示出相邻两项的四次方差，然后用如上步骤，继续推导即可。</span></span></span> 
</div> <h2 class="se-44108ba5" data-slate-type="heading" data-slate-object="block" data-key="4572"><span 
data-slate-object="text" data-key="4573"><span data-slate-leaf="true" data-offset-key="4573:0" 
data-first-offset="true"><span data-slate-string="true">框架思维（上）：将素数筛算法学成框架算法</span></span></span></h2> 
<div class="se-5c618563 " data-slate-type="paragraph" data-slate-object="block" data-key="4574"> 
<span data-slate-object="text" data-key="4575"><span data-slate-leaf="true" data-offset-key="4575:0" 
data-first-offset="true"><span data-slate-string="true">这一节课，我们学习了素数筛算法，素数筛每一轮找到一个素数，然后在一个标记数组中，标记掉这个素数所有的倍数，剩下没有被标记掉的数字，就是我们要的素数了。最后，我留了一个程序性质证明题，具体看如下代码：</span></span></span> 
</div> <div class="se-b669c0dc se-b861b905" data-slate-type="pre" data-slate-object="block" 
data-key="4576" data-code-language="cpp"> <div class="se-00db510d se-d704582c"> <span></span> 
</div> <div class="se-dbc3258f"> <div class="se-2b21f7be se-fec83c48" data-code-line-number="1"></div> 
<div class="se-2b21f7be se-fec83c48" data-code-line-number="2"></div> <div class="se-2b21f7be 
se-fec83c48" data-code-line-number="3"></div> <div class="se-2b21f7be se-fec83c48" data-code-line-number="4"></div> 
<div class="se-2b21f7be se-fec83c48" data-code-line-number="5"></div> <div class="se-2b21f7be 
se-fec83c48" data-code-line-number="6"></div> <div class="se-2b21f7be se-fec83c48" data-code-line-number="7"></div> 
<div class="se-2b21f7be se-fec83c48" data-code-line-number="8"></div> <div class="se-2b21f7be 
se-fec83c48" data-code-line-number="9"></div> <div class="se-2b21f7be se-fec83c48" data-code-line-number="10"></div> 
<div class="se-2b21f7be se-fec83c48" data-code-line-number="11"></div> <div class="se-2b21f7be 
se-fec83c48" data-code-line-number="12"></div> <div class="se-2b21f7be se-fec83c48" data-code-line-number="13"></div> 
<div class="se-2b21f7be se-fec83c48" data-code-line-number="14"></div> <div class="se-2b21f7be 
se-fec83c48" data-code-line-number="15"></div> <div class="se-2b21f7be se-fec83c48" data-code-line-number="16"></div> 
<div class="se-2b21f7be se-fec83c48" data-code-line-number="17"></div> <div class="se-2b21f7be 
se-fec83c48" data-code-line-number="18"></div> <div class="se-2b21f7be se-fec83c48" data-code-line-number="19"></div> 
<div class="se-2b21f7be se-fec83c48" data-code-line-number="20"></div> <div class="se-2b21f7be 
se-fec83c48" data-code-line-number="21"></div> <div class="se-2b21f7be se-fec83c48" data-code-line-number="22"></div> 
<div class="se-2b21f7be se-fec83c48" data-code-line-number="23"></div> <div class="se-2b21f7be 
se-fec83c48" data-code-line-number="24"></div> <div class="se-2b21f7be se-fec83c48" data-code-line-number="25"></div> 
<div class="se-2b21f7be se-fec83c48" data-code-line-number="26"></div> <div class="se-2b21f7be 
se-fec83c48" data-code-line-number="27"></div> <div class="se-2b21f7be se-fec83c48" data-code-line-number="28"></div> 
</div> <div class="se-969ad72f ps ps--active-x"> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" 
data-slate-object="block" data-key="4577"> <span data-slate-object="text" data-key="4578"><span 
data-slate-leaf="true" data-offset-key="4578:0" data-first-offset="true"><span class=" gkhl-meta" 
data-slate-object="annotation" data-annotation-key="gkann_3597199675" data-annotation-type="annotation"><span 
data-slate-string="true">#include &lt;stdio.h&gt;</span></span></span></span> </div> <div class="se-03eefeec 
se-2642b266" data-slate-type="code-line" data-slate-object="block" data-key="4579"> <span data-slate-object="text" 
data-key="4580"></span> </div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" 
data-slate-object="block" data-key="4581"> <span data-slate-object="text" data-key="4582"><span 
data-slate-leaf="true" data-offset-key="4582:0" data-first-offset="true"><span class=" gkhl-comment" 
data-slate-object="annotation" data-annotation-key="gkann_5797002411" data-annotation-type="annotation"><span 
data-slate-string="true">// 打印一个素因子，并且在中间输出 * 乘号</span></span></span></span> </div> <div class="se-03eefeec 
se-2642b266" data-slate-type="code-line" data-slate-object="block" data-key="4583"> <span data-slate-object="text" 
data-key="4584"><span data-slate-leaf="true" data-offset-key="4584:0" data-first-offset="true"><span 
class=" gkhl-keyword" data-slate-object="annotation" data-annotation-key="gkann_7105396112" 
data-annotation-type="annotation"><span class=" gkhl-function" data-slate-object="annotation" 
data-annotation-key="gkann_7843854951" data-annotation-type="annotation"><span data-slate-string="true">void</span></span></span></span><span 
data-slate-leaf="true" data-offset-key="4584:1"><span class=" gkhl-function" data-slate-object="annotation" 
data-annotation-key="gkann_7843854951" data-annotation-type="annotation"><span data-slate-string="true"> 
</span></span></span><span data-slate-leaf="true" data-offset-key="4584:2"><span class=" gkhl-title" 
data-slate-object="annotation" data-annotation-key="gkann_0164675521" data-annotation-type="annotation"><span 
class=" gkhl-function" data-slate-object="annotation" data-annotation-key="gkann_7843854951" 
data-annotation-type="annotation"><span data-slate-string="true">print_num</span></span></span></span><span 
data-slate-leaf="true" data-offset-key="4584:3"><span class=" gkhl-params" data-slate-object="annotation" 
data-annotation-key="gkann_5437214026" data-annotation-type="annotation"><span class=" gkhl-function" 
data-slate-object="annotation" data-annotation-key="gkann_7843854951" data-annotation-type="annotation"><span 
data-slate-string="true">(int num, int *flag)</span></span></span></span><span data-slate-leaf="true" 
data-offset-key="4584:4"><span class=" gkhl-function" data-slate-object="annotation" data-annotation-key="gkann_7843854951" 
data-annotation-type="annotation"><span data-slate-string="true"> </span></span></span><span 
data-slate-leaf="true" data-offset-key="4584:5"><span data-slate-string="true">{</span></span></span> 
</div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" data-slate-object="block" 
data-key="4585"> <span data-slate-object="text" data-key="4586"><span data-slate-leaf="true" 
data-offset-key="4586:0" data-first-offset="true"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="4586:1"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_5912669976" data-annotation-type="annotation"><span data-slate-string="true">if</span></span></span><span 
data-slate-leaf="true" data-offset-key="4586:2"><span data-slate-string="true"> (*flag == </span></span><span 
data-slate-leaf="true" data-offset-key="4586:3"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_2217433107" data-annotation-type="annotation"><span data-slate-string="true">1</span></span></span><span 
data-slate-leaf="true" data-offset-key="4586:4"><span data-slate-string="true">) </span></span><span 
data-slate-leaf="true" data-offset-key="4586:5"><span class=" gkhl-built_in" data-slate-object="annotation" 
data-annotation-key="gkann_5793887297" data-annotation-type="annotation"><span data-slate-string="true">printf</span></span></span><span 
data-slate-leaf="true" data-offset-key="4586:6"><span data-slate-string="true">(</span></span><span 
data-slate-leaf="true" data-offset-key="4586:7"><span class=" gkhl-string" data-slate-object="annotation" 
data-annotation-key="gkann_2348877020" data-annotation-type="annotation"><span data-slate-string="true">" 
* "</span></span></span><span data-slate-leaf="true" data-offset-key="4586:8"><span data-slate-string="true">);</span></span></span> 
</div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" data-slate-object="block" 
data-key="4587"> <span data-slate-object="text" data-key="4588"><span data-slate-leaf="true" 
data-offset-key="4588:0" data-first-offset="true"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="4588:1"><span class=" gkhl-built_in" data-slate-object="annotation" 
data-annotation-key="gkann_5927401861" data-annotation-type="annotation"><span data-slate-string="true">printf</span></span></span><span 
data-slate-leaf="true" data-offset-key="4588:2"><span data-slate-string="true">(</span></span><span 
data-slate-leaf="true" data-offset-key="4588:3"><span class=" gkhl-string" data-slate-object="annotation" 
data-annotation-key="gkann_4619037799" data-annotation-type="annotation"><span data-slate-string="true">"%d"</span></span></span><span 
data-slate-leaf="true" data-offset-key="4588:4"><span data-slate-string="true">, num);</span></span></span> 
</div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" data-slate-object="block" 
data-key="4589"> <span data-slate-object="text" data-key="4590"><span data-slate-leaf="true" 
data-offset-key="4590:0" data-first-offset="true"><span data-slate-string="true"> *flag = </span></span><span 
data-slate-leaf="true" data-offset-key="4590:1"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_7297226349" data-annotation-type="annotation"><span data-slate-string="true">1</span></span></span><span 
data-slate-leaf="true" data-offset-key="4590:2"><span data-slate-string="true">;</span></span></span> 
</div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" data-slate-object="block" 
data-key="4591"> <span data-slate-object="text" data-key="4592"><span data-slate-leaf="true" 
data-offset-key="4592:0" data-first-offset="true"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="4592:1"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_2889668935" data-annotation-type="annotation"><span data-slate-string="true">return</span></span></span><span 
data-slate-leaf="true" data-offset-key="4592:2"><span data-slate-string="true"> ;</span></span></span> 
</div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" data-slate-object="block" 
data-key="4593"> <span data-slate-object="text" data-key="4594"><span data-slate-leaf="true" 
data-offset-key="4594:0" data-first-offset="true"><span data-slate-string="true">}</span></span></span> 
</div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" data-slate-object="block" 
data-key="4595"> <span data-slate-object="text" data-key="4596"></span> </div> <div class="se-03eefeec 
se-2642b266" data-slate-type="code-line" data-slate-object="block" data-key="4597"> <span data-slate-object="text" 
data-key="4598"><span data-slate-leaf="true" data-offset-key="4598:0" data-first-offset="true"><span 
class=" gkhl-keyword" data-slate-object="annotation" data-annotation-key="gkann_1099600871" 
data-annotation-type="annotation"><span class=" gkhl-function" data-slate-object="annotation" 
data-annotation-key="gkann_5819554318" data-annotation-type="annotation"><span data-slate-string="true">int</span></span></span></span><span 
data-slate-leaf="true" data-offset-key="4598:1"><span class=" gkhl-function" data-slate-object="annotation" 
data-annotation-key="gkann_5819554318" data-annotation-type="annotation"><span data-slate-string="true"> 
</span></span></span><span data-slate-leaf="true" data-offset-key="4598:2"><span class=" gkhl-function" 
data-slate-object="annotation" data-annotation-key="gkann_5819554318" data-annotation-type="annotation"><span 
class=" gkhl-title" data-slate-object="annotation" data-annotation-key="gkann_8677026916" data-annotation-type="annotation"><span 
data-slate-string="true">main</span></span></span></span><span data-slate-leaf="true" data-offset-key="4598:3"><span 
class=" gkhl-function" data-slate-object="annotation" data-annotation-key="gkann_5819554318" 
data-annotation-type="annotation"><span class=" gkhl-params" data-slate-object="annotation" 
data-annotation-key="gkann_5975865025" data-annotation-type="annotation"><span data-slate-string="true">()</span></span></span></span><span 
data-slate-leaf="true" data-offset-key="4598:4"><span class=" gkhl-function" data-slate-object="annotation" 
data-annotation-key="gkann_5819554318" data-annotation-type="annotation"><span data-slate-string="true"> 
</span></span></span><span data-slate-leaf="true" data-offset-key="4598:5"><span data-slate-string="true">{</span></span></span> 
</div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" data-slate-object="block" 
data-key="4599"> <span data-slate-object="text" data-key="4600"><span data-slate-leaf="true" 
data-offset-key="4600:0" data-first-offset="true"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="4600:1"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_9926254461" data-annotation-type="annotation"><span data-slate-string="true">int</span></span></span><span 
data-slate-leaf="true" data-offset-key="4600:2"><span data-slate-string="true"> n, i = </span></span><span 
data-slate-leaf="true" data-offset-key="4600:3"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_3771187065" data-annotation-type="annotation"><span data-slate-string="true">2</span></span></span><span 
data-slate-leaf="true" data-offset-key="4600:4"><span data-slate-string="true">, flag = </span></span><span 
data-slate-leaf="true" data-offset-key="4600:5"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_9947918184" data-annotation-type="annotation"><span data-slate-string="true">0</span></span></span><span 
data-slate-leaf="true" data-offset-key="4600:6"><span data-slate-string="true">, raw_n;</span></span></span> 
</div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" data-slate-object="block" 
data-key="4601"> <span data-slate-object="text" data-key="4602"><span data-slate-leaf="true" 
data-offset-key="4602:0" data-first-offset="true"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="4602:1"><span class=" gkhl-built_in" data-slate-object="annotation" 
data-annotation-key="gkann_7085561610" data-annotation-type="annotation"><span data-slate-string="true">scanf</span></span></span><span 
data-slate-leaf="true" data-offset-key="4602:2"><span data-slate-string="true">(</span></span><span 
data-slate-leaf="true" data-offset-key="4602:3"><span class=" gkhl-string" data-slate-object="annotation" 
data-annotation-key="gkann_2619849487" data-annotation-type="annotation"><span data-slate-string="true">"%d"</span></span></span><span 
data-slate-leaf="true" data-offset-key="4602:4"><span data-slate-string="true">, &amp;n);</span></span></span> 
</div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" data-slate-object="block" 
data-key="4603"> <span data-slate-object="text" data-key="4604"><span data-slate-leaf="true" 
data-offset-key="4604:0" data-first-offset="true"><span data-slate-string="true"> raw_n = n;</span></span></span> 
</div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" data-slate-object="block" 
data-key="4605"> <span data-slate-object="text" data-key="4606"><span data-slate-leaf="true" 
data-offset-key="4606:0" data-first-offset="true"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="4606:1"><span class=" gkhl-comment" data-slate-object="annotation" 
data-annotation-key="gkann_4130261661" data-annotation-type="annotation"><span data-slate-string="true">// 
循环终止条件，循环到 n 的平方根结束</span></span></span></span> </div> <div class="se-03eefeec se-2642b266" 
data-slate-type="code-line" data-slate-object="block" data-key="4607"> <span data-slate-object="text" 
data-key="4608"><span data-slate-leaf="true" data-offset-key="4608:0" data-first-offset="true"><span 
data-slate-string="true"> </span></span><span data-slate-leaf="true" data-offset-key="4608:1"><span 
class=" gkhl-keyword" data-slate-object="annotation" data-annotation-key="gkann_0954168017" 
data-annotation-type="annotation"><span data-slate-string="true">while</span></span></span><span 
data-slate-leaf="true" data-offset-key="4608:2"><span data-slate-string="true"> (i * i &lt;= 
n) {</span></span></span> </div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" 
data-slate-object="block" data-key="4609"> <span data-slate-object="text" data-key="4610"><span 
data-slate-leaf="true" data-offset-key="4610:0" data-first-offset="true"><span data-slate-string="true"> 
</span></span><span data-slate-leaf="true" data-offset-key="4610:1"><span class=" gkhl-comment" 
data-slate-object="annotation" data-annotation-key="gkann_2201969860" data-annotation-type="annotation"><span 
data-slate-string="true">//①：只要 n 可以被 i 整除，就认为 i 是 n 的一个素因子</span></span></span></span> </div> 
<div class="se-03eefeec se-2642b266" data-slate-type="code-line" data-slate-object="block" 
data-key="4611"> <span data-slate-object="text" data-key="4612"><span data-slate-leaf="true" 
data-offset-key="4612:0" data-first-offset="true"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="4612:1"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_1152250768" data-annotation-type="annotation"><span data-slate-string="true">while</span></span></span><span 
data-slate-leaf="true" data-offset-key="4612:2"><span data-slate-string="true"> (n % i == </span></span><span 
data-slate-leaf="true" data-offset-key="4612:3"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_0538330126" data-annotation-type="annotation"><span data-slate-string="true">0</span></span></span><span 
data-slate-leaf="true" data-offset-key="4612:4"><span data-slate-string="true">) {</span></span></span> 
</div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" data-slate-object="block" 
data-key="4613"> <span data-slate-object="text" data-key="4614"><span data-slate-leaf="true" 
data-offset-key="4614:0" data-first-offset="true"><span data-slate-string="true"> print_num(i, 
&amp;flag);</span></span></span> </div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" 
data-slate-object="block" data-key="4615"> <span data-slate-object="text" data-key="4616"><span 
data-slate-leaf="true" data-offset-key="4616:0" data-first-offset="true"><span data-slate-string="true"> 
n /= i;</span></span></span> </div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" 
data-slate-object="block" data-key="4617"> <span data-slate-object="text" data-key="4618"><span 
data-slate-leaf="true" data-offset-key="4618:0" data-first-offset="true"><span data-slate-string="true"> 
}</span></span></span> </div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" 
data-slate-object="block" data-key="4619"> <span data-slate-object="text" data-key="4620"><span 
data-slate-leaf="true" data-offset-key="4620:0" data-first-offset="true"><span data-slate-string="true"> 
i += </span></span><span data-slate-leaf="true" data-offset-key="4620:1"><span class=" gkhl-number" 
data-slate-object="annotation" data-annotation-key="gkann_1698004896" data-annotation-type="annotation"><span 
data-slate-string="true">1</span></span></span><span data-slate-leaf="true" data-offset-key="4620:2"><span 
data-slate-string="true">;</span></span></span> </div> <div class="se-03eefeec se-2642b266" 
data-slate-type="code-line" data-slate-object="block" data-key="4621"> <span data-slate-object="text" 
data-key="4622"><span data-slate-leaf="true" data-offset-key="4622:0" data-first-offset="true"><span 
data-slate-string="true"> }</span></span></span> </div> <div class="se-03eefeec se-2642b266" 
data-slate-type="code-line" data-slate-object="block" data-key="4623"> <span data-slate-object="text" 
data-key="4624"><span data-slate-leaf="true" data-offset-key="4624:0" data-first-offset="true"><span 
data-slate-string="true"> </span></span><span data-slate-leaf="true" data-offset-key="4624:1"><span 
class=" gkhl-comment" data-slate-object="annotation" data-annotation-key="gkann_6697018828" 
data-annotation-type="annotation"><span data-slate-string="true">//②：如果最后 n 不等于 1，就说明 n 是最后一个素数</span></span></span></span> 
</div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" data-slate-object="block" 
data-key="4625"> <span data-slate-object="text" data-key="4626"><span data-slate-leaf="true" 
data-offset-key="4626:0" data-first-offset="true"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="4626:1"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_9662371328" data-annotation-type="annotation"><span data-slate-string="true">if</span></span></span><span 
data-slate-leaf="true" data-offset-key="4626:2"><span data-slate-string="true"> (n != </span></span><span 
data-slate-leaf="true" data-offset-key="4626:3"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_9812175409" data-annotation-type="annotation"><span data-slate-string="true">1</span></span></span><span 
data-slate-leaf="true" data-offset-key="4626:4"><span data-slate-string="true">) print_num(n, 
&amp;flag);</span></span></span> </div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" 
data-slate-object="block" data-key="4627"> <span data-slate-object="text" data-key="4628"><span 
data-slate-leaf="true" data-offset-key="4628:0" data-first-offset="true"><span data-slate-string="true"> 
</span></span><span data-slate-leaf="true" data-offset-key="4628:1"><span class=" gkhl-built_in" 
data-slate-object="annotation" data-annotation-key="gkann_2723822162" data-annotation-type="annotation"><span 
data-slate-string="true">printf</span></span></span><span data-slate-leaf="true" data-offset-key="4628:2"><span 
data-slate-string="true">(</span></span><span data-slate-leaf="true" data-offset-key="4628:3"><span 
class=" gkhl-string" data-slate-object="annotation" data-annotation-key="gkann_7291902813" 
data-annotation-type="annotation"><span data-slate-string="true">" = %d\n"</span></span></span><span 
data-slate-leaf="true" data-offset-key="4628:4"><span data-slate-string="true">, raw_n);</span></span></span> 
</div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" data-slate-object="block" 
data-key="4629"> <span data-slate-object="text" data-key="4630"><span data-slate-leaf="true" 
data-offset-key="4630:0" data-first-offset="true"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="4630:1"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_3372112059" data-annotation-type="annotation"><span data-slate-string="true">return</span></span></span><span 
data-slate-leaf="true" data-offset-key="4630:2"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="4630:3"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_7548541019" data-annotation-type="annotation"><span data-slate-string="true">0</span></span></span><span 
data-slate-leaf="true" data-offset-key="4630:4"><span data-slate-string="true">;</span></span></span> 
</div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" data-slate-object="block" 
data-key="4631"> <span data-slate-object="text" data-key="4632"><span data-slate-leaf="true" 
data-offset-key="4632:0" data-first-offset="true"><span data-slate-string="true">}</span></span></span> 
</div> <div class="ps__rail-x" style="width: 365px; left: 0px; bottom: 0px;"> <div class="ps__thumb-x" 
tabindex="0" style="left: 0px; width: 309px;"></div> </div> <div class="ps__rail-y" style="top: 
0px; right: 0px;"> <div class="ps__thumb-y" tabindex="0" style="top: 0px; height: 0px;"></div> 
</div> </div> </div> <div class="se-54a61620 " data-slate-type="paragraph" data-slate-object="block" 
data-key="4633"> <span data-slate-object="text" data-key="4634"><span data-slate-leaf="true" 
data-offset-key="4634:0" data-first-offset="true"><span data-slate-string="true">第一个，是要证明第 
18 行代码中，只要 n 可以被 i 整除，i 就一定是素数。关于这个证明，我们可以使用反证法。</span></span></span> </div> <div class="se-eb3471f0 
" data-slate-type="paragraph" data-slate-object="block" data-key="4635"> <span data-slate-object="text" 
data-key="4636"><span data-slate-leaf="true" data-offset-key="4636:0" data-first-offset="true"><span 
data-slate-string="true">假设 i 可以被 n 整除，但 i 不是素数，由算术基本定理可知，一个非素数的数字 N，一定可以分解为几个小于 N 的素数乘积的形式。我们不妨假设 
</span></span></span><span class="se-4dbc7a92 se-2b50b467" data-slate-type="inline-katex" data-slate-object="inline" 
data-key="4637"><span data-slate-leaf="true"><span data-slate-string="true" class="katex"><span 
class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span 
class="mord mathdefault">i</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span 
class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span 
class="base"><span class="strut" style="height:0.7777700000000001em;vertical-align:-0.19444em;"></span><span 
class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t 
vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span 
style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" 
style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord 
mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span 
class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span 
class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span 
class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span 
class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span 
class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span 
class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span 
class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span 
class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span 
class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></span><span 
data-slate-object="text" data-key="4639"><span data-slate-leaf="true" data-offset-key="4639:0" 
data-first-offset="true"><span data-slate-string="true">，这里 </span></span></span><span class="se-4dbc7a92 
se-2b50b467" data-slate-type="inline-katex" data-slate-object="inline" data-key="4640"><span 
data-slate-leaf="true"><span data-slate-string="true" class="katex"><span class="katex-html" 
aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span 
class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t 
vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span 
style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" 
style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord 
mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span 
class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></span><span 
data-slate-object="text" data-key="4642"><span data-slate-leaf="true" data-offset-key="4642:0" 
data-first-offset="true"><span data-slate-string="true"> 和 </span></span></span><span class="se-4dbc7a92 
se-2b50b467" data-slate-type="inline-katex" data-slate-object="inline" data-key="4643"><span 
data-slate-leaf="true"><span data-slate-string="true" class="katex"><span class="katex-html" 
aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span 
class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t 
vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span 
style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" 
style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord 
mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span 
class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></span><span 
data-slate-object="text" data-key="4645"><span data-slate-leaf="true" data-offset-key="4645:0" 
data-first-offset="true"><span data-slate-string="true"> 均为素数，如果变量 n 可以被 i 整除，那么 n 也一定可以被小于 
i 的素数 </span></span></span><span class="se-4dbc7a92 se-2b50b467" data-slate-type="inline-katex" 
data-slate-object="inline" data-key="4646"><span data-slate-leaf="true"><span data-slate-string="true" 
class="katex"><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" 
style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord 
mathdefault">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span 
class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span 
class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span 
class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span 
class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></span><span 
data-slate-object="text" data-key="4648"><span data-slate-leaf="true" data-offset-key="4648:0" 
data-first-offset="true"><span data-slate-string="true"> 整除。而根据程序的运行流程，n 中已经不可能存在小于 i 的因子了，所以 
</span></span></span><span class="se-4dbc7a92 se-2b50b467" data-slate-type="inline-katex" data-slate-object="inline" 
data-key="4649"><span data-slate-leaf="true"><span data-slate-string="true" class="katex"><span 
class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span 
class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t 
vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span 
style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" 
style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord 
mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span 
class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></span><span 
data-slate-object="text" data-key="4651"><span data-slate-leaf="true" data-offset-key="4651:0" 
data-first-offset="true"><span data-slate-string="true"> 不具备存在的条件，故原假设不成立，i 是素数。</span></span></span> 
</div> <div class="se-9178b0db " data-slate-type="paragraph" data-slate-object="block" data-key="4652"> 
<span data-slate-object="text" data-key="4653"><span data-slate-leaf="true" data-offset-key="4653:0" 
data-first-offset="true"><span data-slate-string="true">第二个，是要证明第 25 行代码中，为什么只要 n 不等于 1，n 就一定是素数呢？其实也可以参考第一问的证明流程。在 
while 循环处理过程中，数字 n 中已经不可能存在小于等于 i 的所有的因子了，又因为此时 i 是大于根号 n 的一个值，也就是说，在小于等于根号 n 范围内，找不到数字 n 的非 
1 因子，而能够满足这种性质的数字，一定是素数。</span></span></span> </div> <div class="se-7f521b51 " data-slate-type="paragraph" 
data-slate-object="block" data-key="4654"> <span data-slate-object="text" data-key="4655"><span 
data-slate-leaf="true" data-offset-key="4655:0" data-first-offset="true"><span data-slate-string="true">至此，我们就证明完了程序中两处代码的性质。</span></span></span> 
</div> <h2 class="se-1ffb9702" data-slate-type="heading" data-slate-object="block" data-key="4656"><span 
data-slate-object="text" data-key="4657"><span data-slate-leaf="true" data-offset-key="4657:0" 
data-first-offset="true"><span data-slate-string="true">数据结构（上）：突破基本类型的限制，存储更大的整数</span></span></span></h2> 
<div class="se-27746168 " data-slate-type="paragraph" data-slate-object="block" data-key="4658"> 
<span data-slate-object="text" data-key="4659"><span data-slate-leaf="true" data-offset-key="4659:0" 
data-first-offset="true"><span data-slate-string="true">在这一节中，我们学习了大整数表示法，说明了如果是数据表示的导致的程序设计过程不可行，那么我们就需要在数据结构中寻找解决方案了。</span></span></span> 
</div> <div class="se-317392f7 " data-slate-type="paragraph" data-slate-object="block" data-key="4660"> 
<span data-slate-object="text" data-key="4661"><span data-slate-leaf="true" data-offset-key="4661:0" 
data-first-offset="true"><span data-slate-string="true">在大整数表示法中，我们是将一个数字，从右到左倒着存储在数组中，并且用数组的 
0 位存储数字的位数。数组中存储的数字大小，应该等于其每一位的数字乘上相关存储位置的位权，数组的 1 位位权为 1，也就是 10 的 0 次方，2 位位权为 10，也就是 10 的 
1 次方，以此类推。</span></span></span> </div> <div class="se-6849add4 " data-slate-type="paragraph" 
data-slate-object="block" data-key="4662"> <span data-slate-object="text" data-key="4663"><span 
data-slate-leaf="true" data-offset-key="4663:0" data-first-offset="true"><span data-slate-string="true">那么接下来，我们理解大整数的乘法，也是通过这种数学公式上面的等价关系，来理解大整数乘法过程。最后给你留了一个编程题，是关于实现读入两个大整数，并且计算两个大整数加法结果的程序，以下是我的参考代码：</span></span></span> 
</div> <div class="se-dacd18e3 se-cbcaad44" data-slate-type="pre" data-slate-object="block" 
data-key="4664" data-code-language="cpp"> <div class="se-5841f897 se-742a8a0b"> <span></span> 
</div> <div class="se-e40060ed"> <div class="se-94107f7a se-52bb39d1" data-code-line-number="1"></div> 
<div class="se-94107f7a se-52bb39d1" data-code-line-number="2"></div> <div class="se-94107f7a 
se-52bb39d1" data-code-line-number="3"></div> <div class="se-94107f7a se-52bb39d1" data-code-line-number="4"></div> 
<div class="se-94107f7a se-52bb39d1" data-code-line-number="5"></div> <div class="se-94107f7a 
se-52bb39d1" data-code-line-number="6"></div> <div class="se-94107f7a se-52bb39d1" data-code-line-number="7"></div> 
<div class="se-94107f7a se-52bb39d1" data-code-line-number="8"></div> <div class="se-94107f7a 
se-52bb39d1" data-code-line-number="9"></div> <div class="se-94107f7a se-52bb39d1" data-code-line-number="10"></div> 
<div class="se-94107f7a se-52bb39d1" data-code-line-number="11"></div> <div class="se-94107f7a 
se-52bb39d1" data-code-line-number="12"></div> <div class="se-94107f7a se-52bb39d1" data-code-line-number="13"></div> 
<div class="se-94107f7a se-52bb39d1" data-code-line-number="14"></div> <div class="se-94107f7a 
se-52bb39d1" data-code-line-number="15"></div> <div class="se-94107f7a se-52bb39d1" data-code-line-number="16"></div> 
<div class="se-94107f7a se-52bb39d1" data-code-line-number="17"></div> <div class="se-94107f7a 
se-52bb39d1" data-code-line-number="18"></div> <div class="se-94107f7a se-52bb39d1" data-code-line-number="19"></div> 
<div class="se-94107f7a se-52bb39d1" data-code-line-number="20"></div> <div class="se-94107f7a 
se-52bb39d1" data-code-line-number="21"></div> <div class="se-94107f7a se-52bb39d1" data-code-line-number="22"></div> 
<div class="se-94107f7a se-52bb39d1" data-code-line-number="23"></div> <div class="se-94107f7a 
se-52bb39d1" data-code-line-number="24"></div> <div class="se-94107f7a se-52bb39d1" data-code-line-number="25"></div> 
<div class="se-94107f7a se-52bb39d1" data-code-line-number="26"></div> <div class="se-94107f7a 
se-52bb39d1" data-code-line-number="27"></div> <div class="se-94107f7a se-52bb39d1" data-code-line-number="28"></div> 
<div class="se-94107f7a se-52bb39d1" data-code-line-number="29"></div> </div> <div class="se-bc76ff51 
ps ps--active-x"> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" data-slate-object="block" 
data-key="4665"> <span data-slate-object="text" data-key="4666"><span data-slate-leaf="true" 
data-offset-key="4666:0" data-first-offset="true"><span class=" gkhl-meta" data-slate-object="annotation" 
data-annotation-key="gkann_5402258496" data-annotation-type="annotation"><span data-slate-string="true">#include 
&lt;stdio.h&gt;</span></span></span></span> </div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" 
data-slate-object="block" data-key="4667"> <span data-slate-object="text" data-key="4668"><span 
data-slate-leaf="true" data-offset-key="4668:0" data-first-offset="true"><span class=" gkhl-meta" 
data-slate-object="annotation" data-annotation-key="gkann_9159611317" data-annotation-type="annotation"><span 
data-slate-string="true">#include &lt;string.h&gt;</span></span></span></span> </div> <div 
class="se-03eefeec se-2642b266" data-slate-type="code-line" data-slate-object="block" data-key="4669"> 
<span data-slate-object="text" data-key="4670"><span data-slate-leaf="true" data-offset-key="4670:0" 
data-first-offset="true"><span class=" gkhl-meta" data-slate-object="annotation" data-annotation-key="gkann_4519897769" 
data-annotation-type="annotation"><span data-slate-string="true">#define MAX_N 1000</span></span></span></span> 
</div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" data-slate-object="block" 
data-key="4671"> <span data-slate-object="text" data-key="4672"><span data-slate-leaf="true" 
data-offset-key="4672:0" data-first-offset="true"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_0731081485" data-annotation-type="annotation"><span data-slate-string="true">char</span></span></span><span 
data-slate-leaf="true" data-offset-key="4672:1"><span data-slate-string="true"> str_a[MAX_N 
+ </span></span><span data-slate-leaf="true" data-offset-key="4672:2"><span class=" gkhl-number" 
data-slate-object="annotation" data-annotation-key="gkann_4856110951" data-annotation-type="annotation"><span 
data-slate-string="true">5</span></span></span><span data-slate-leaf="true" data-offset-key="4672:3"><span 
data-slate-string="true">], str_b[MAX_N + </span></span><span data-slate-leaf="true" data-offset-key="4672:4"><span 
class=" gkhl-number" data-slate-object="annotation" data-annotation-key="gkann_9868790427" 
data-annotation-type="annotation"><span data-slate-string="true">5</span></span></span><span 
data-slate-leaf="true" data-offset-key="4672:5"><span data-slate-string="true">];</span></span></span> 
</div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" data-slate-object="block" 
data-key="4673"> <span data-slate-object="text" data-key="4674"><span data-slate-leaf="true" 
data-offset-key="4674:0" data-first-offset="true"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_1478521048" data-annotation-type="annotation"><span data-slate-string="true">int</span></span></span><span 
data-slate-leaf="true" data-offset-key="4674:1"><span data-slate-string="true"> num1[MAX_N 
+ </span></span><span data-slate-leaf="true" data-offset-key="4674:2"><span class=" gkhl-number" 
data-slate-object="annotation" data-annotation-key="gkann_1825178900" data-annotation-type="annotation"><span 
data-slate-string="true">5</span></span></span><span data-slate-leaf="true" data-offset-key="4674:3"><span 
data-slate-string="true">], num2[MAX_N + </span></span><span data-slate-leaf="true" data-offset-key="4674:4"><span 
class=" gkhl-number" data-slate-object="annotation" data-annotation-key="gkann_5294427274" 
data-annotation-type="annotation"><span data-slate-string="true">5</span></span></span><span 
data-slate-leaf="true" data-offset-key="4674:5"><span data-slate-string="true">], num3[MAX_N 
+ </span></span><span data-slate-leaf="true" data-offset-key="4674:6"><span class=" gkhl-number" 
data-slate-object="annotation" data-annotation-key="gkann_8916694420" data-annotation-type="annotation"><span 
data-slate-string="true">5</span></span></span><span data-slate-leaf="true" data-offset-key="4674:7"><span 
data-slate-string="true">];</span></span></span> </div> <div class="se-03eefeec se-2642b266" 
data-slate-type="code-line" data-slate-object="block" data-key="4675"> <span data-slate-object="text" 
data-key="4676"></span> </div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" 
data-slate-object="block" data-key="4677"> <span data-slate-object="text" data-key="4678"><span 
data-slate-leaf="true" data-offset-key="4678:0" data-first-offset="true"><span class=" gkhl-keyword" 
data-slate-object="annotation" data-annotation-key="gkann_2656250663" data-annotation-type="annotation"><span 
class=" gkhl-function" data-slate-object="annotation" data-annotation-key="gkann_6402752733" 
data-annotation-type="annotation"><span data-slate-string="true">void</span></span></span></span><span 
data-slate-leaf="true" data-offset-key="4678:1"><span class=" gkhl-function" data-slate-object="annotation" 
data-annotation-key="gkann_6402752733" data-annotation-type="annotation"><span data-slate-string="true"> 
</span></span></span><span data-slate-leaf="true" data-offset-key="4678:2"><span class=" gkhl-title" 
data-slate-object="annotation" data-annotation-key="gkann_9281482929" data-annotation-type="annotation"><span 
class=" gkhl-function" data-slate-object="annotation" data-annotation-key="gkann_6402752733" 
data-annotation-type="annotation"><span data-slate-string="true">convert_to</span></span></span></span><span 
data-slate-leaf="true" data-offset-key="4678:3"><span class=" gkhl-function" data-slate-object="annotation" 
data-annotation-key="gkann_6402752733" data-annotation-type="annotation"><span class=" gkhl-params" 
data-slate-object="annotation" data-annotation-key="gkann_3951220793" data-annotation-type="annotation"><span 
data-slate-string="true">(char *str, int *num)</span></span></span></span><span data-slate-leaf="true" 
data-offset-key="4678:4"><span class=" gkhl-function" data-slate-object="annotation" data-annotation-key="gkann_6402752733" 
data-annotation-type="annotation"><span data-slate-string="true"> </span></span></span><span 
data-slate-leaf="true" data-offset-key="4678:5"><span data-slate-string="true">{</span></span></span> 
</div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" data-slate-object="block" 
data-key="4679"> <span data-slate-object="text" data-key="4680"><span data-slate-leaf="true" 
data-offset-key="4680:0" data-first-offset="true"><span data-slate-string="true"> num[</span></span><span 
data-slate-leaf="true" data-offset-key="4680:1"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_7844210672" data-annotation-type="annotation"><span data-slate-string="true">0</span></span></span><span 
data-slate-leaf="true" data-offset-key="4680:2"><span data-slate-string="true">] = </span></span><span 
data-slate-leaf="true" data-offset-key="4680:3"><span class=" gkhl-built_in" data-slate-object="annotation" 
data-annotation-key="gkann_2456977544" data-annotation-type="annotation"><span data-slate-string="true">strlen</span></span></span><span 
data-slate-leaf="true" data-offset-key="4680:4"><span data-slate-string="true">(str);</span></span></span> 
</div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" data-slate-object="block" 
data-key="4681"> <span data-slate-object="text" data-key="4682"><span data-slate-leaf="true" 
data-offset-key="4682:0" data-first-offset="true"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="4682:1"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_7870413835" data-annotation-type="annotation"><span data-slate-string="true">for</span></span></span><span 
data-slate-leaf="true" data-offset-key="4682:2"><span data-slate-string="true"> (</span></span><span 
data-slate-leaf="true" data-offset-key="4682:3"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_7216443043" data-annotation-type="annotation"><span data-slate-string="true">int</span></span></span><span 
data-slate-leaf="true" data-offset-key="4682:4"><span data-slate-string="true"> i = num[</span></span><span 
data-slate-leaf="true" data-offset-key="4682:5"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_1428288598" data-annotation-type="annotation"><span data-slate-string="true">0</span></span></span><span 
data-slate-leaf="true" data-offset-key="4682:6"><span data-slate-string="true">] - </span></span><span 
data-slate-leaf="true" data-offset-key="4682:7"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_3342741847" data-annotation-type="annotation"><span data-slate-string="true">1</span></span></span><span 
data-slate-leaf="true" data-offset-key="4682:8"><span data-slate-string="true">; i &gt;= </span></span><span 
data-slate-leaf="true" data-offset-key="4682:9"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_2278208826" data-annotation-type="annotation"><span data-slate-string="true">0</span></span></span><span 
data-slate-leaf="true" data-offset-key="4682:10"><span data-slate-string="true">; i--) {</span></span></span> 
</div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" data-slate-object="block" 
data-key="4683"> <span data-slate-object="text" data-key="4684"><span data-slate-leaf="true" 
data-offset-key="4684:0" data-first-offset="true"><span data-slate-string="true"> num[num[</span></span><span 
data-slate-leaf="true" data-offset-key="4684:1"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_2340096470" data-annotation-type="annotation"><span data-slate-string="true">0</span></span></span><span 
data-slate-leaf="true" data-offset-key="4684:2"><span data-slate-string="true">] - i] = str[i] 
- </span></span><span data-slate-leaf="true" data-offset-key="4684:3"><span class=" gkhl-string" 
data-slate-object="annotation" data-annotation-key="gkann_1157039260" data-annotation-type="annotation"><span 
data-slate-string="true">''0''</span></span></span><span data-slate-leaf="true" data-offset-key="4684:4"><span 
data-slate-string="true">;</span></span></span> </div> <div class="se-03eefeec se-2642b266" 
data-slate-type="code-line" data-slate-object="block" data-key="4685"> <span data-slate-object="text" 
data-key="4686"><span data-slate-leaf="true" data-offset-key="4686:0" data-first-offset="true"><span 
data-slate-string="true"> }</span></span></span> </div> <div class="se-03eefeec se-2642b266" 
data-slate-type="code-line" data-slate-object="block" data-key="4687"> <span data-slate-object="text" 
data-key="4688"><span data-slate-leaf="true" data-offset-key="4688:0" data-first-offset="true"><span 
data-slate-string="true"> </span></span><span data-slate-leaf="true" data-offset-key="4688:1"><span 
class=" gkhl-keyword" data-slate-object="annotation" data-annotation-key="gkann_9506411477" 
data-annotation-type="annotation"><span data-slate-string="true">return</span></span></span><span 
data-slate-leaf="true" data-offset-key="4688:2"><span data-slate-string="true"> ;</span></span></span> 
</div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" data-slate-object="block" 
data-key="4689"> <span data-slate-object="text" data-key="4690"><span data-slate-leaf="true" 
data-offset-key="4690:0" data-first-offset="true"><span data-slate-string="true">}</span></span></span> 
</div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" data-slate-object="block" 
data-key="4691"> <span data-slate-object="text" data-key="4692"></span> </div> <div class="se-03eefeec 
se-2642b266" data-slate-type="code-line" data-slate-object="block" data-key="4693"> <span data-slate-object="text" 
data-key="4694"><span data-slate-leaf="true" data-offset-key="4694:0" data-first-offset="true"><span 
class=" gkhl-function" data-slate-object="annotation" data-annotation-key="gkann_7007728685" 
data-annotation-type="annotation"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_2589996518" data-annotation-type="annotation"><span data-slate-string="true">void</span></span></span></span><span 
data-slate-leaf="true" data-offset-key="4694:1"><span class=" gkhl-function" data-slate-object="annotation" 
data-annotation-key="gkann_7007728685" data-annotation-type="annotation"><span data-slate-string="true"> 
</span></span></span><span data-slate-leaf="true" data-offset-key="4694:2"><span class=" gkhl-function" 
data-slate-object="annotation" data-annotation-key="gkann_7007728685" data-annotation-type="annotation"><span 
class=" gkhl-title" data-slate-object="annotation" data-annotation-key="gkann_4541297936" data-annotation-type="annotation"><span 
data-slate-string="true">output_big_integer</span></span></span></span><span data-slate-leaf="true" 
data-offset-key="4694:3"><span class=" gkhl-params" data-slate-object="annotation" data-annotation-key="gkann_3485301388" 
data-annotation-type="annotation"><span class=" gkhl-function" data-slate-object="annotation" 
data-annotation-key="gkann_7007728685" data-annotation-type="annotation"><span data-slate-string="true">(int 
*num)</span></span></span></span><span data-slate-leaf="true" data-offset-key="4694:4"><span 
class=" gkhl-function" data-slate-object="annotation" data-annotation-key="gkann_7007728685" 
data-annotation-type="annotation"><span data-slate-string="true"> </span></span></span><span 
data-slate-leaf="true" data-offset-key="4694:5"><span data-slate-string="true">{</span></span></span> 
</div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" data-slate-object="block" 
data-key="4695"> <span data-slate-object="text" data-key="4696"><span data-slate-leaf="true" 
data-offset-key="4696:0" data-first-offset="true"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="4696:1"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_0774158998" data-annotation-type="annotation"><span data-slate-string="true">for</span></span></span><span 
data-slate-leaf="true" data-offset-key="4696:2"><span data-slate-string="true"> (</span></span><span 
data-slate-leaf="true" data-offset-key="4696:3"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_4492122870" data-annotation-type="annotation"><span data-slate-string="true">int</span></span></span><span 
data-slate-leaf="true" data-offset-key="4696:4"><span data-slate-string="true"> i = num3[</span></span><span 
data-slate-leaf="true" data-offset-key="4696:5"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_5779323317" data-annotation-type="annotation"><span data-slate-string="true">0</span></span></span><span 
data-slate-leaf="true" data-offset-key="4696:6"><span data-slate-string="true">]; i &gt;= </span></span><span 
data-slate-leaf="true" data-offset-key="4696:7"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_0017471270" data-annotation-type="annotation"><span data-slate-string="true">1</span></span></span><span 
data-slate-leaf="true" data-offset-key="4696:8"><span data-slate-string="true">; i--) {</span></span></span> 
</div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" data-slate-object="block" 
data-key="4697"> <span data-slate-object="text" data-key="4698"><span data-slate-leaf="true" 
data-offset-key="4698:0" data-first-offset="true"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="4698:1"><span class=" gkhl-built_in" data-slate-object="annotation" 
data-annotation-key="gkann_8479175035" data-annotation-type="annotation"><span data-slate-string="true">printf</span></span></span><span 
data-slate-leaf="true" data-offset-key="4698:2"><span data-slate-string="true">(</span></span><span 
data-slate-leaf="true" data-offset-key="4698:3"><span class=" gkhl-string" data-slate-object="annotation" 
data-annotation-key="gkann_3235376457" data-annotation-type="annotation"><span data-slate-string="true">"%d"</span></span></span><span 
data-slate-leaf="true" data-offset-key="4698:4"><span data-slate-string="true">, num3[i]); 
</span></span></span> </div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" 
data-slate-object="block" data-key="4699"> <span data-slate-object="text" data-key="4700"><span 
data-slate-leaf="true" data-offset-key="4700:0" data-first-offset="true"><span data-slate-string="true"> 
}</span></span></span> </div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" 
data-slate-object="block" data-key="4701"> <span data-slate-object="text" data-key="4702"><span 
data-slate-leaf="true" data-offset-key="4702:0" data-first-offset="true"><span data-slate-string="true"> 
</span></span><span data-slate-leaf="true" data-offset-key="4702:1"><span class=" gkhl-keyword" 
data-slate-object="annotation" data-annotation-key="gkann_7651862840" data-annotation-type="annotation"><span 
data-slate-string="true">return</span></span></span><span data-slate-leaf="true" data-offset-key="4702:2"><span 
data-slate-string="true"> ;</span></span></span> </div> <div class="se-03eefeec se-2642b266" 
data-slate-type="code-line" data-slate-object="block" data-key="4703"> <span data-slate-object="text" 
data-key="4704"><span data-slate-leaf="true" data-offset-key="4704:0" data-first-offset="true"><span 
data-slate-string="true">}</span></span></span> </div> <div class="se-03eefeec se-2642b266" 
data-slate-type="code-line" data-slate-object="block" data-key="4705"> <span data-slate-object="text" 
data-key="4706"></span> </div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" 
data-slate-object="block" data-key="4707"> <span data-slate-object="text" data-key="4708"><span 
data-slate-leaf="true" data-offset-key="4708:0" data-first-offset="true"><span class=" gkhl-keyword" 
data-slate-object="annotation" data-annotation-key="gkann_7302703920" data-annotation-type="annotation"><span 
class=" gkhl-function" data-slate-object="annotation" data-annotation-key="gkann_4343800555" 
data-annotation-type="annotation"><span data-slate-string="true">int</span></span></span></span><span 
data-slate-leaf="true" data-offset-key="4708:1"><span class=" gkhl-function" data-slate-object="annotation" 
data-annotation-key="gkann_4343800555" data-annotation-type="annotation"><span data-slate-string="true"> 
</span></span></span><span data-slate-leaf="true" data-offset-key="4708:2"><span class=" gkhl-function" 
data-slate-object="annotation" data-annotation-key="gkann_4343800555" data-annotation-type="annotation"><span 
class=" gkhl-title" data-slate-object="annotation" data-annotation-key="gkann_4440095311" data-annotation-type="annotation"><span 
data-slate-string="true">main</span></span></span></span><span data-slate-leaf="true" data-offset-key="4708:3"><span 
class=" gkhl-params" data-slate-object="annotation" data-annotation-key="gkann_8779901248" 
data-annotation-type="annotation"><span class=" gkhl-function" data-slate-object="annotation" 
data-annotation-key="gkann_4343800555" data-annotation-type="annotation"><span data-slate-string="true">()</span></span></span></span><span 
data-slate-leaf="true" data-offset-key="4708:4"><span class=" gkhl-function" data-slate-object="annotation" 
data-annotation-key="gkann_4343800555" data-annotation-type="annotation"><span data-slate-string="true"> 
</span></span></span><span data-slate-leaf="true" data-offset-key="4708:5"><span data-slate-string="true">{</span></span></span> 
</div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" data-slate-object="block" 
data-key="4709"> <span data-slate-object="text" data-key="4710"><span data-slate-leaf="true" 
data-offset-key="4710:0" data-first-offset="true"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="4710:1"><span class=" gkhl-built_in" data-slate-object="annotation" 
data-annotation-key="gkann_7354673724" data-annotation-type="annotation"><span data-slate-string="true">scanf</span></span></span><span 
data-slate-leaf="true" data-offset-key="4710:2"><span data-slate-string="true">(</span></span><span 
data-slate-leaf="true" data-offset-key="4710:3"><span class=" gkhl-string" data-slate-object="annotation" 
data-annotation-key="gkann_8680795437" data-annotation-type="annotation"><span data-slate-string="true">"%s%s"</span></span></span><span 
data-slate-leaf="true" data-offset-key="4710:4"><span data-slate-string="true">, str_a, str_b);</span></span></span> 
</div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" data-slate-object="block" 
data-key="4711"> <span data-slate-object="text" data-key="4712"><span data-slate-leaf="true" 
data-offset-key="4712:0" data-first-offset="true"><span data-slate-string="true"> convert_to(str_a, 
num1);</span></span></span> </div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" 
data-slate-object="block" data-key="4713"> <span data-slate-object="text" data-key="4714"><span 
data-slate-leaf="true" data-offset-key="4714:0" data-first-offset="true"><span data-slate-string="true"> 
convert_to(str_b, num2);</span></span></span> </div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" 
data-slate-object="block" data-key="4715"> <span data-slate-object="text" data-key="4716"><span 
data-slate-leaf="true" data-offset-key="4716:0" data-first-offset="true"><span data-slate-string="true"> 
plus_big_integer(num1, num2, num3);</span></span></span> </div> <div class="se-03eefeec se-2642b266" 
data-slate-type="code-line" data-slate-object="block" data-key="4717"> <span data-slate-object="text" 
data-key="4718"><span data-slate-leaf="true" data-offset-key="4718:0" data-first-offset="true"><span 
data-slate-string="true"> output_big_integer(num3);</span></span></span> </div> <div class="se-03eefeec 
se-2642b266" data-slate-type="code-line" data-slate-object="block" data-key="4719"> <span data-slate-object="text" 
data-key="4720"><span data-slate-leaf="true" data-offset-key="4720:0" data-first-offset="true"><span 
data-slate-string="true"> </span></span><span data-slate-leaf="true" data-offset-key="4720:1"><span 
class=" gkhl-keyword" data-slate-object="annotation" data-annotation-key="gkann_6073766311" 
data-annotation-type="annotation"><span data-slate-string="true">return</span></span></span><span 
data-slate-leaf="true" data-offset-key="4720:2"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="4720:3"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_0152957735" data-annotation-type="annotation"><span data-slate-string="true">0</span></span></span><span 
data-slate-leaf="true" data-offset-key="4720:4"><span data-slate-string="true">;</span></span></span> 
</div> <div class="se-03eefeec se-2642b266" data-slate-type="code-line" data-slate-object="block" 
data-key="4721"> <span data-slate-object="text" data-key="4722"><span data-slate-leaf="true" 
data-offset-key="4722:0" data-first-offset="true"><span data-slate-string="true">}</span></span></span> 
</div> <div class="ps__rail-x" style="width: 365px; left: 0px; bottom: 0px;"> <div class="ps__thumb-x" 
tabindex="0" style="left: 0px; width: 316px;"></div> </div> <div class="ps__rail-y" style="top: 
0px; right: 0px;"> <div class="ps__thumb-y" tabindex="0" style="top: 0px; height: 0px;"></div> 
</div> </div> </div> <div class="se-69bac525 " data-slate-type="paragraph" data-slate-object="block" 
data-key="4723"> <span data-slate-object="text" data-key="4724"><span data-slate-leaf="true" 
data-offset-key="4724:0" data-first-offset="true"><span data-slate-string="true">可以看到，首先读入两个字符串 
str_a 和 str_b，分别代表第一个和第二个大整数。然后调用 convert_to 方法，将第一个字符串与第二个字符串，转换成大整数表示法，分别存储在 num1 和 num2 
数组中；然后再调用 plus_big_integer 方法，将两个大整数的加法结果，存储在 num3 数组中；最后，输出 num3 数组中所存储的大整数。其中，提到的 plus_big_integer 
方法，在原文中有给出，你可以回到原文中进行查看。</span></span></span> </div> <div class="se-68af13cf " data-slate-type="paragraph" 
data-slate-object="block" data-key="4725"> <span data-slate-object="text" data-key="4726"><span 
data-slate-leaf="true" data-offset-key="4726:0" data-first-offset="true"><span data-slate-string="true">这段程序设计中，最应该值得你注意的是，我们将大整数操作的相关过程，均封装成了函数方法。字符串转大整数表示法，封装成了函数 
convert_to；大整数加法过程，封装成了 plus_big_integer；输出大整数，封装成了 output_big_integer。</span></span></span> 
</div> <div class="se-b2c3d873 " data-slate-type="paragraph" data-slate-object="block" data-key="4727"> 
<span data-slate-object="text" data-key="4728"><span data-slate-leaf="true" data-offset-key="4728:0" 
data-first-offset="true"><span data-slate-string="true">封装成函数方法的好处，就在于只要保证每一个小方法是正确的，就能保证整个程序的正确性。更重要的是，如果你单独看主函数的话，即使不看每一个方法的具体实现过程，你也能够清晰的知道，这个程序流程究竟在干什么，增强了代码的可读性。最后一点好处，就是出现 
Bug 的时候，便于改错。</span></span></span> </div> <div class="se-5f1fd9f3 " data-slate-type="paragraph" 
data-slate-object="block" data-key="4729"> <span data-slate-object="text" data-key="4730"><span 
data-slate-leaf="true" data-offset-key="4730:0" data-first-offset="true"><span data-slate-string="true">关于第 
17 篇文章中，所说的改进 Shift-And 算法中的数据结构，我这里给你个提示，你可以参考大整数表示法，再参照这道题目中的程序设计原则，将操作封装成函数。</span></span></span> 
</div> <div class="se-922f8b36 " data-slate-type="paragraph" data-slate-object="block" data-key="4731"> 
<span data-slate-object="text" data-key="4732"><span data-slate-leaf="true" data-offset-key="4732:0" 
data-first-offset="true"><span data-slate-string="true">对于改进 Shift-And 算法中的数据结构，你需要做的就是用大整数表示法，表示一个二进制数字，然后根据 
Shift-And 算法的需求，做好需要封装的操作有：</span></span></span><span data-slate-object="text" data-key="4733"><span 
data-slate-leaf="true" data-offset-key="4733:0" data-first-offset="true"><span class="se-7ae6c104" 
data-slate-type="bold" data-slate-object="mark"><span data-slate-string="true">左移</span></span></span></span><span 
data-slate-object="text" data-key="4734"><span data-slate-leaf="true" data-offset-key="4734:0" 
data-first-offset="true"><span data-slate-string="true">、</span></span></span><span data-slate-object="text" 
data-key="4735"><span data-slate-leaf="true" data-offset-key="4735:0" data-first-offset="true"><span 
class="se-f0498ba4" data-slate-type="bold" data-slate-object="mark"><span data-slate-string="true">或 
1 操作</span></span></span></span><span data-slate-object="text" data-key="4736"><span data-slate-leaf="true" 
data-offset-key="4736:0" data-first-offset="true"><span data-slate-string="true">、</span></span></span><span 
data-slate-object="text" data-key="4737"><span data-slate-leaf="true" data-offset-key="4737:0" 
data-first-offset="true"><span class="se-9a1de8e6" data-slate-type="bold" data-slate-object="mark"><span 
data-slate-string="true">与运算</span></span></span></span><span data-slate-object="text" data-key="4738"><span 
data-slate-leaf="true" data-offset-key="4738:0" data-first-offset="true"><span data-slate-string="true">以及</span></span></span><span 
data-slate-object="text" data-key="4739"><span data-slate-leaf="true" data-offset-key="4739:0" 
data-first-offset="true"><span class="se-19947d65" data-slate-type="bold" data-slate-object="mark"><span 
data-slate-string="true">判断这个数字的第 m 位是否为 1</span></span></span></span><span data-slate-object="text" 
data-key="4740"><span data-slate-leaf="true" data-offset-key="4740:0" data-first-offset="true"><span 
data-slate-string="true"> 这些需要封装的操作。最终你会发现，算法流程没有改变，改变的只有程序样式。更多内容呢，你可以参考文章中，我与 @陈洲更 的留言讨论内容。</span></span></span> 
</div> <div class="se-eb5f3ec6 " data-slate-type="paragraph" data-slate-object="block" data-key="4741"> 
<span data-slate-object="text" data-key="4742"><span data-slate-leaf="true" data-offset-key="4742:0" 
data-first-offset="true"><span data-slate-string="true">好了今天的思考题答疑就结束了，如果你还有什么不清楚的，或者有更好的想法的，欢迎告诉我，我们留言区见！</span></span></span> 
</div> </div>', body_summary='', bundle='book', delta=0, body_format='full_html', langcode='zh-hans', 
revision_id=756 where entity_id=756 
 {executed in 2 msec}
2020-11-24 18:10:56.645 INFO  jdbc.sqltiming Line:373 - select nodefiledd0_.nid as nid1_10_, nodefiledd0_.changed as changed2_10_, nodefiledd0_.created 
as created3_10_, nodefiledd0_.default_langcode as default_4_10_, nodefiledd0_.langcode as langcode5_10_, 
nodefiledd0_.promote as promote6_10_, nodefiledd0_.revision_translation_affected as revision7_10_, 
nodefiledd0_.status as status8_10_, nodefiledd0_.sticky as sticky9_10_, nodefiledd0_.title 
as title10_10_, nodefiledd0_.type as type11_10_, nodefiledd0_.uid as uid12_10_, nodefiledd0_.vid 
as vid13_10_ from node_field_data nodefiledd0_ where nodefiledd0_.nid=756 
 {executed in 0 msec}
2020-11-24 18:10:56.645 INFO  jdbc.resultsettable Line:610 - 
|----|-----------|-----------|-----------------|---------|--------|------------------------------|-------|-------|----------------------------|-----|----|----|
|nid |changed    |created    |default_langcode |langcode |promote |revision_translation_affected |status |sticky |title                       |type |uid |vid |
|----|-----------|-----------|-----------------|---------|--------|------------------------------|-------|-------|----------------------------|-----|----|----|
|756 |1606117098 |1606117098 |1                |zh-hans  |0       |1                             |1      |0      |做好闭环（三）：编码能力训练篇的思考题答案都在这里啦！ |book |1   |756 |
|----|-----------|-----------|-----------------|---------|--------|------------------------------|-------|-------|----------------------------|-----|----|----|

2020-11-24 18:10:56.646 INFO  jdbc.sqltiming Line:373 - select nodefieldr0_.nid as nid1_11_0_, nodefieldr0_.changed as changed2_11_0_, nodefieldr0_.created 
as created3_11_0_, nodefieldr0_.default_langcode as default_4_11_0_, nodefieldr0_.langcode 
as langcode5_11_0_, nodefieldr0_.promote as promote6_11_0_, nodefieldr0_.revision_translation_affected 
as revision7_11_0_, nodefieldr0_.status as status8_11_0_, nodefieldr0_.sticky as sticky9_11_0_, 
nodefieldr0_.title as title10_11_0_, nodefieldr0_.uid as uid11_11_0_, nodefieldr0_.vid as vid12_11_0_ 
from node_field_revision nodefieldr0_ where nodefieldr0_.nid=756 
 {executed in 0 msec}
2020-11-24 18:10:56.646 INFO  jdbc.resultsettable Line:610 - 
|---------|-----------|-----------|-----------------|---------|--------|------------------------------|-------|-------|----------------------------|----|----|
|nid      |changed    |created    |default_langcode |langcode |promote |revision_translation_affected |status |sticky |title                       |uid |vid |
|---------|-----------|-----------|-----------------|---------|--------|------------------------------|-------|-------|----------------------------|----|----|
|[unread] |1606117098 |1606117098 |1                |zh-hans  |0       |1                             |1      |0      |做好闭环（三）：编码能力训练篇的思考题答案都在这里啦！ |1   |756 |
|---------|-----------|-----------|-----------------|---------|--------|------------------------------|-------|-------|----------------------------|----|----|

2020-11-24 18:10:56.648 INFO  jdbc.sqltiming Line:373 - update node_field_data set changed=1606212656, created=1606212656, default_langcode=1, langcode='zh-hans', 
promote=0, revision_translation_affected=1, status=1, sticky=0, title='做好闭环（三）：编码能力训练篇的思考题答案都在这里啦！', 
type='book', uid=1, vid=756 where nid=756 
 {executed in 0 msec}
2020-11-24 18:10:56.648 INFO  jdbc.sqltiming Line:373 - update node_field_revision set changed=1606212656, created=1606212656, default_langcode=1, 
langcode='zh-hans', promote=0, revision_translation_affected=1, status=1, sticky=0, title='做好闭环（三）：编码能力训练篇的思考题答案都在这里啦！', 
uid=1, vid=756 where nid=756 
 {executed in 0 msec}
2020-11-24 18:10:56.653 INFO  jdbc.sqltiming Line:373 - select bookfieldm0_.entity_id as entity_i1_8_, bookfieldm0_.bundle as bundle2_8_, bookfieldm0_.delta 
as delta3_8_, bookfieldm0_.langcode as langcode4_8_, bookfieldm0_.field_media_value as field_me5_8_, 
bookfieldm0_.revision_id as revision6_8_ from node__field_media bookfieldm0_ where bookfieldm0_.entity_id=756 
 {executed in 0 msec}
2020-11-24 18:10:56.654 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------------|------------|
|entity_id |bundle |delta |langcode |field_media_value |revision_id |
|----------|-------|------|---------|------------------|------------|
|756       |book   |0     |zh-hans  |                  |756         |
|----------|-------|------|---------|------------------|------------|

2020-11-24 18:10:56.655 INFO  jdbc.sqltiming Line:373 - select nodefieldm0_.entity_id as entity_i1_17_0_, nodefieldm0_.bundle as bundle2_17_0_, nodefieldm0_.delta 
as delta3_17_0_, nodefieldm0_.langcode as langcode4_17_0_, nodefieldm0_.field_media_value as 
field_me5_17_0_, nodefieldm0_.revision_id as revision6_17_0_ from node_revision__field_media 
nodefieldm0_ where nodefieldm0_.entity_id=756 
 {executed in 0 msec}
2020-11-24 18:10:56.656 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------------|------------|
|entity_id |bundle |delta |langcode |field_media_value |revision_id |
|----------|-------|------|---------|------------------|------------|
|[unread]  |book   |0     |zh-hans  |                  |756         |
|----------|-------|------|---------|------------------|------------|

2020-11-24 18:10:56.658 INFO  jdbc.sqltiming Line:373 - select bookfieldc0_.entity_id as entity_i1_5_, bookfieldc0_.bundle as bundle2_5_, bookfieldc0_.field_comment_value 
as field_co3_5_, bookfieldc0_.delta as delta4_5_, bookfieldc0_.field_comment_format as field_co5_5_, 
bookfieldc0_.langcode as langcode6_5_, bookfieldc0_.revision_id as revision7_5_ from node__field_comment 
bookfieldc0_ where bookfieldc0_.entity_id=756 
 {executed in 1 msec}
2020-11-24 18:10:56.658 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|--------------------|------|---------------------|---------|------------|
|entity_id |bundle |field_comment_value |delta |field_comment_format |langcode |revision_id |
|----------|-------|--------------------|------|---------------------|---------|------------|
|756       |book   |                    |0     |full_html            |zh-hans  |756         |
|----------|-------|--------------------|------|---------------------|---------|------------|

2020-11-24 18:10:56.660 INFO  jdbc.sqltiming Line:373 - update node__field_comment set bundle='book', field_comment_value='<li class="reJj6Thl_0"><img 
src="https://static001.geekbang.org/account/avatar/00/12/ec/3e/51fa2c6e.jpg" class="_2273kGdT_0"> 
<div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> <a>胖胖胖</a> 
<!----> </div> <div class="_1H1Z49Dr_0"> 2020-02-25 </div> </div> <!----> </div> <div> <div 
class="_3M6kV3zb_0 _3D2NkqD6_0"> 老师，函数指针后面会讲嘛，还挺想学这部分内容的。。。 </div> <!----> <div class="_2xNIY4NG_0"> 
<p class="_33BLbmw4_0">作者回复: 后面就主要给你们讲算法和数据结构相关的东西了。关于 C 语言的函数指针相关的内容，其实掌握的关键点就在于函数指针的定义语法，其他的部分，和正常指针无异。</p> 
</div> <div class="_1w8H0ktn_0 _2A421P4G_0"> <div class="_2jsFl-X0_0"> <i class="iconfont"></i> 
<span></span> </div> <div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class=""></span> 
</div> <!----> </div> </div> </div></li> <li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/0f/57/4f/6fb51ff1.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<a>一步</a> <!----> </div> <div class="_1H1Z49Dr_0"> 2020-02-25 </div> </div> <!----> </div> 
<div> <div class="_3M6kV3zb_0 _3D2NkqD6_0"> 老师，关于第15讲【框架思维下】有点疑问，已在第15讲下留言，希望老师能解惑 </div> <!----> 
<div class="_2xNIY4NG_0"> <p class="_33BLbmw4_0">作者回复: 好的，疫情期间，被憋在家办公，需要处理自己的生活起居，衣食住行，连外卖都点不了，所以回复不及时。-_-|||</p> 
</div> <div class="_1w8H0ktn_0 _2A421P4G_0"> <div class="_2jsFl-X0_0"> <i class="iconfont"></i> 
<span></span> </div> <div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class=""></span> 
</div> <!----> </div> </div> </div></li>', delta=0, field_comment_format='full_html', langcode='zh-hans', 
revision_id=756 where entity_id=756 
 {executed in 1 msec}
2020-11-24 18:10:56.663 INFO  jdbc.sqltiming Line:373 - select nodefieldc0_.entity_id as entity_i1_14_0_, nodefieldc0_.bundle as bundle2_14_0_, nodefieldc0_.field_comment_value 
as field_co3_14_0_, nodefieldc0_.delta as delta4_14_0_, nodefieldc0_.field_comment_format as 
field_co5_14_0_, nodefieldc0_.langcode as langcode6_14_0_, nodefieldc0_.revision_id as revision7_14_0_ 
from node_revision__field_comment nodefieldc0_ where nodefieldc0_.entity_id=756 
 {executed in 0 msec}
2020-11-24 18:10:56.664 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|--------------------|------|---------------------|---------|------------|
|entity_id |bundle |field_comment_value |delta |field_comment_format |langcode |revision_id |
|----------|-------|--------------------|------|---------------------|---------|------------|
|[unread]  |book   |                    |0     |full_html            |zh-hans  |756         |
|----------|-------|--------------------|------|---------------------|---------|------------|

2020-11-24 18:10:56.665 INFO  jdbc.sqltiming Line:373 - update node_revision__field_comment set bundle='book', field_comment_value='<li class="reJj6Thl_0"><img 
src="https://static001.geekbang.org/account/avatar/00/12/ec/3e/51fa2c6e.jpg" class="_2273kGdT_0"> 
<div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> <a>胖胖胖</a> 
<!----> </div> <div class="_1H1Z49Dr_0"> 2020-02-25 </div> </div> <!----> </div> <div> <div 
class="_3M6kV3zb_0 _3D2NkqD6_0"> 老师，函数指针后面会讲嘛，还挺想学这部分内容的。。。 </div> <!----> <div class="_2xNIY4NG_0"> 
<p class="_33BLbmw4_0">作者回复: 后面就主要给你们讲算法和数据结构相关的东西了。关于 C 语言的函数指针相关的内容，其实掌握的关键点就在于函数指针的定义语法，其他的部分，和正常指针无异。</p> 
</div> <div class="_1w8H0ktn_0 _2A421P4G_0"> <div class="_2jsFl-X0_0"> <i class="iconfont"></i> 
<span></span> </div> <div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class=""></span> 
</div> <!----> </div> </div> </div></li> <li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/0f/57/4f/6fb51ff1.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<a>一步</a> <!----> </div> <div class="_1H1Z49Dr_0"> 2020-02-25 </div> </div> <!----> </div> 
<div> <div class="_3M6kV3zb_0 _3D2NkqD6_0"> 老师，关于第15讲【框架思维下】有点疑问，已在第15讲下留言，希望老师能解惑 </div> <!----> 
<div class="_2xNIY4NG_0"> <p class="_33BLbmw4_0">作者回复: 好的，疫情期间，被憋在家办公，需要处理自己的生活起居，衣食住行，连外卖都点不了，所以回复不及时。-_-|||</p> 
</div> <div class="_1w8H0ktn_0 _2A421P4G_0"> <div class="_2jsFl-X0_0"> <i class="iconfont"></i> 
<span></span> </div> <div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class=""></span> 
</div> <!----> </div> </div> </div></li>', delta=0, field_comment_format='full_html', langcode='zh-hans', 
revision_id=756 where entity_id=756 
 {executed in 0 msec}
2020-11-24 18:10:56.679 INFO  jdbc.sqltiming Line:373 - select bookfieldt0_.entity_id as entity_i1_9_, bookfieldt0_.bundle as bundle2_9_, bookfieldt0_.delta 
as delta3_9_, bookfieldt0_.langcode as langcode4_9_, bookfieldt0_.revision_id as revision5_9_, 
bookfieldt0_.field_thumb_value as field_th6_9_ from node__field_thumb bookfieldt0_ where bookfieldt0_.entity_id=756 
 {executed in 0 msec}
2020-11-24 18:10:56.680 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------|------------------|
|entity_id |bundle |delta |langcode |revision_id |field_thumb_value |
|----------|-------|------|---------|------------|------------------|
|756       |book   |0     |zh-hans  |756         |                  |
|----------|-------|------|---------|------------|------------------|

2020-11-24 18:10:56.696 INFO  jdbc.sqltiming Line:373 - update node__field_thumb set bundle='book', delta=0, langcode='zh-hans', revision_id=756, field_thumb_value='https://static001.geekbang.org/resource/image/f6/cf/f6f11d975bdc331f9a57dc4f70ce5ccf.jpg' 
where entity_id=756 
 {executed in 15 msec}
2020-11-24 18:10:56.699 INFO  jdbc.sqltiming Line:373 - select nodefieldt0_.entity_id as entity_i1_18_0_, nodefieldt0_.bundle as bundle2_18_0_, nodefieldt0_.delta 
as delta3_18_0_, nodefieldt0_.langcode as langcode4_18_0_, nodefieldt0_.revision_id as revision5_18_0_, 
nodefieldt0_.field_thumb_value as field_th6_18_0_ from node_revision__field_thumb nodefieldt0_ 
where nodefieldt0_.entity_id=756 
 {executed in 0 msec}
2020-11-24 18:10:56.700 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------|------------------|
|entity_id |bundle |delta |langcode |revision_id |field_thumb_value |
|----------|-------|------|---------|------------|------------------|
|[unread]  |book   |0     |zh-hans  |756         |                  |
|----------|-------|------|---------|------------|------------------|

2020-11-24 18:10:56.701 INFO  jdbc.sqltiming Line:373 - update node_revision__field_thumb set bundle='book', delta=0, langcode='zh-hans', revision_id=756, 
field_thumb_value='https://static001.geekbang.org/resource/image/f6/cf/f6f11d975bdc331f9a57dc4f70ce5ccf.jpg' 
where entity_id=756 
 {executed in 0 msec}
2020-11-24 18:10:56.704 INFO  jdbc.sqltiming Line:373 - select bookfieldf0_.entity_id as entity_i1_6_0_, bookfieldf0_.bundle as bundle2_6_0_, bookfieldf0_.delta 
as delta3_6_0_, bookfieldf0_.field_fenlei_target_id as field_fe4_6_0_, bookfieldf0_.langcode 
as langcode5_6_0_, bookfieldf0_.revision_id as revision6_6_0_ from node__field_fenlei bookfieldf0_ 
where bookfieldf0_.entity_id=756 
 {executed in 0 msec}
2020-11-24 18:10:56.705 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------------|---------|------------|
|entity_id |bundle |delta |field_fenlei_target_id |langcode |revision_id |
|----------|-------|------|-----------------------|---------|------------|
|[unread]  |book   |0     |1                      |zh-hans  |756         |
|----------|-------|------|-----------------------|---------|------------|

2020-11-24 18:10:56.706 INFO  jdbc.sqltiming Line:373 - select nodefieldf0_.entity_id as entity_i1_15_0_, nodefieldf0_.bundle as bundle2_15_0_, nodefieldf0_.delta 
as delta3_15_0_, nodefieldf0_.field_fenlei_target_id as field_fe4_15_0_, nodefieldf0_.langcode 
as langcode5_15_0_, nodefieldf0_.revision_id as revision6_15_0_ from node_revision__field_fenlei 
nodefieldf0_ where nodefieldf0_.entity_id=756 
 {executed in 0 msec}
2020-11-24 18:10:56.707 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------------|---------|------------|
|entity_id |bundle |delta |field_fenlei_target_id |langcode |revision_id |
|----------|-------|------|-----------------------|---------|------------|
|[unread]  |book   |0     |1                      |zh-hans  |756         |
|----------|-------|------|-----------------------|---------|------------|

2020-11-24 18:10:56.709 INFO  jdbc.sqltiming Line:373 - select bookchecke0_.item_id as item_id1_2_, bookchecke0_.fsid as fsid2_2_, bookchecke0_.got 
as got3_2_, bookchecke0_.name as name4_2_, bookchecke0_.parse_fail as parse_fa5_2_, bookchecke0_.parsed 
as parsed6_2_, bookchecke0_.path as path7_2_, bookchecke0_.title as title8_2_, bookchecke0_.vid 
as vid9_2_ from book_check bookchecke0_ where bookchecke0_.fsid='268589234320036' and bookchecke0_.name='net_content' 
 {executed in 1 msec}
2020-11-24 18:10:56.709 INFO  jdbc.resultsettable Line:610 - 
|--------|---------|---------|---------|-----------|---------|---------|---------|---------|
|item_id |fsid     |got      |name     |parse_fail |parsed   |path     |title    |vid      |
|--------|---------|---------|---------|-----------|---------|---------|---------|---------|
|757     |[unread] |[unread] |[unread] |[unread]   |[unread] |[unread] |[unread] |[unread] |
|--------|---------|---------|---------|-----------|---------|---------|---------|---------|

2020-11-24 18:18:36.683 INFO  jdbc.sqltiming Line:373 - update book_check set fsid='268589234320036', got=1, name='net_content', parse_fail='comment_', 
parsed=0, path='109-人人都能学会的编程入门课/04丨算法数据结构篇 (9讲)/18丨重新认识数据结构（上）：初识链表结构.html', title='18丨重新认识数据结构（上）：初识链表结构', 
vid=757 where item_id=757 
 {executed in 1 msec}
2020-11-24 18:18:36.690 INFO  jdbc.sqltiming Line:373 - select nodebodyen0_.entity_id as entity_i1_4_, nodebodyen0_.body_value as body_val2_4_, nodebodyen0_.body_summary 
as body_sum3_4_, nodebodyen0_.bundle as bundle4_4_, nodebodyen0_.delta as delta5_4_, nodebodyen0_.body_format 
as body_for6_4_, nodebodyen0_.langcode as langcode7_4_, nodebodyen0_.revision_id as revision8_4_ 
from node__body nodebodyen0_ where nodebodyen0_.entity_id=757 
 {executed in 0 msec}
2020-11-24 18:18:36.691 INFO  jdbc.resultsettable Line:610 - 
|----------|-----------|-------------|-------|------|------------|---------|------------|
|entity_id |body_value |body_summary |bundle |delta |body_format |langcode |revision_id |
|----------|-----------|-------------|-------|------|------------|---------|------------|
|757       |           |             |book   |0     |full_html   |zh-hans  |757         |
|----------|-----------|-------------|-------|------|------------|---------|------------|

2020-11-24 18:18:36.691 INFO  jdbc.sqltiming Line:373 - select nodebodyre0_.entity_id as entity_i1_13_0_, nodebodyre0_.body_value as body_val2_13_0_, 
nodebodyre0_.body_summary as body_sum3_13_0_, nodebodyre0_.bundle as bundle4_13_0_, nodebodyre0_.delta 
as delta5_13_0_, nodebodyre0_.body_format as body_for6_13_0_, nodebodyre0_.langcode as langcode7_13_0_, 
nodebodyre0_.revision_id as revision8_13_0_ from node_revision__body nodebodyre0_ where nodebodyre0_.entity_id=757 
 {executed in 0 msec}
2020-11-24 18:18:36.692 INFO  jdbc.resultsettable Line:610 - 
|----------|-----------|-------------|-------|------|------------|---------|------------|
|entity_id |body_value |body_summary |bundle |delta |body_format |langcode |revision_id |
|----------|-----------|-------------|-------|------|------------|---------|------------|
|[unread]  |           |             |book   |0     |full_html   |zh-hans  |757         |
|----------|-----------|-------------|-------|------|------------|---------|------------|

2020-11-24 18:18:36.694 INFO  jdbc.sqltiming Line:373 - update node__body set body_value='<div data-slate-editor="true" data-key="442" autocorrect="off" 
spellcheck="false" data-gramm="false" style="outline: none; white-space: pre-wrap; overflow-wrap: 
break-word;"> <div class="se-7f99772e " data-slate-type="paragraph" data-slate-object="block" 
data-key="443"> <span data-slate-object="text" data-key="444"><span data-slate-leaf="true" 
data-offset-key="444:0" data-first-offset="true"><span data-slate-string="true">你好，我是胡光，欢迎来到“算法数据结构篇”的第一课。</span></span></span> 
</div> <div class="se-ced27449 " data-slate-type="paragraph" data-slate-object="block" data-key="445"> 
<span data-slate-object="text" data-key="446"><span data-slate-leaf="true" data-offset-key="446:0" 
data-first-offset="true"><span data-slate-string="true">在之前的学习中，我们对数据结构的认识，主要集中在它是用来做数据的表示，更具体地讲，就是数据结构所讨论的问题，是将现实中的数据如何合理地表示在程序中，以使程序完成既定的目标任务。</span></span></span> 
</div> <div class="se-987d9017 " data-slate-type="paragraph" data-slate-object="block" data-key="447"> 
<span data-slate-object="text" data-key="448"><span data-slate-leaf="true" data-offset-key="448:0" 
data-first-offset="true"><span data-slate-string="true">不知道你还记不记得，在上节课 Shift-And 算法的学习中，我们发现不同的数据，或者说信息表示方式，会给解决问题的效率带来很大的影响。因此，基本确定了数据的表示，在程序设计过程中发挥着非常重要的作用，也就意味着我们必须对数据结构的学习重视起来。</span></span></span> 
</div> <div class="se-48bc0da5 " data-slate-type="paragraph" data-slate-object="block" data-key="449"> 
<span data-slate-object="text" data-key="450"><span data-slate-leaf="true" data-offset-key="450:0" 
data-first-offset="true"><span data-slate-string="true">之前我们所讨论的数据结构呢，其实都只是停留在程序内部的数据结构，这是一种具体的，可见的数据结构，并对我们设计的程序产生重要影响。我们也认识到，这种具体的数据结构的重要作用，会对我们设计的程序产生重要的影响。今天呢，我将带你重新认识数据结构，发现它的另一面，那就是数据结构对我们思维方式的影响，这种影响更抽象，也更重要。</span></span></span> 
</div> <div class="se-a1ca83aa " data-slate-type="paragraph" data-slate-object="block" data-key="451"> 
<span data-slate-object="text" data-key="452"><span data-slate-leaf="true" data-offset-key="452:0" 
data-first-offset="true"><span data-slate-string="true">接下来的两次课程内容呢，我将通过链表结构的讲解，让你认识这种思维层面的数据结构。</span></span></span> 
</div> <h2 class="se-2856e573" data-slate-type="heading" data-slate-object="block" data-key="453"><span 
data-slate-object="text" data-key="454"><span data-slate-leaf="true" data-offset-key="454:0" 
data-first-offset="true"><span data-slate-string="true">必知必会，查缺补漏</span></span></span></h2> 
<div class="se-5dba30b3 " data-slate-type="paragraph" data-slate-object="block" data-key="455"> 
<span data-slate-object="text" data-key="456"><span data-slate-leaf="true" data-offset-key="456:0" 
data-first-offset="true"><span data-slate-string="true">今天我们将要学习的链表，是一种常见的基础数据结构，属于数据结构中线性结构的一种。在讲如何学习链表之前，我们先来看一看通常情况下，如何学习数据结构的相关的知识。</span></span></span> 
</div> <h4 class="se-71c5754b" data-slate-type="heading" data-slate-object="block" data-key="457"><span 
data-slate-object="text" data-key="458"><span data-slate-leaf="true" data-offset-key="458:0" 
data-first-offset="true"><span data-slate-string="true">1. 数据结构：结构定义 + 结构操作</span></span></span></h4> 
<div class="se-a7905420 " data-slate-type="paragraph" data-slate-object="block" data-key="459"> 
<span data-slate-object="text" data-key="460"><span data-slate-leaf="true" data-offset-key="460:0" 
data-first-offset="true"><span data-slate-string="true">你应该玩过拼装式的玩具吧，类似于高达机器人之类的。面对这样的玩具，我一般在拼装之前看看说明书，知道这个玩具包含哪几部分，然后对这些部分进行拼装，等把各部分拼好了后，再把它们组合起来，最终的成品就完成了。</span></span></span> 
</div> <div class="se-83006e37" data-slate-type="image" data-slate-object="block" data-key="461"></div> 
</div>', body_summary='', bundle='book', delta=0, body_format='full_html', langcode='zh-hans', 
revision_id=757 where entity_id=757 
 {executed in 1 msec}
2020-11-24 18:18:36.694 INFO  jdbc.sqltiming Line:373 - update node_revision__body set body_value='<div data-slate-editor="true" data-key="442" autocorrect="off" 
spellcheck="false" data-gramm="false" style="outline: none; white-space: pre-wrap; overflow-wrap: 
break-word;"> <div class="se-7f99772e " data-slate-type="paragraph" data-slate-object="block" 
data-key="443"> <span data-slate-object="text" data-key="444"><span data-slate-leaf="true" 
data-offset-key="444:0" data-first-offset="true"><span data-slate-string="true">你好，我是胡光，欢迎来到“算法数据结构篇”的第一课。</span></span></span> 
</div> <div class="se-ced27449 " data-slate-type="paragraph" data-slate-object="block" data-key="445"> 
<span data-slate-object="text" data-key="446"><span data-slate-leaf="true" data-offset-key="446:0" 
data-first-offset="true"><span data-slate-string="true">在之前的学习中，我们对数据结构的认识，主要集中在它是用来做数据的表示，更具体地讲，就是数据结构所讨论的问题，是将现实中的数据如何合理地表示在程序中，以使程序完成既定的目标任务。</span></span></span> 
</div> <div class="se-987d9017 " data-slate-type="paragraph" data-slate-object="block" data-key="447"> 
<span data-slate-object="text" data-key="448"><span data-slate-leaf="true" data-offset-key="448:0" 
data-first-offset="true"><span data-slate-string="true">不知道你还记不记得，在上节课 Shift-And 算法的学习中，我们发现不同的数据，或者说信息表示方式，会给解决问题的效率带来很大的影响。因此，基本确定了数据的表示，在程序设计过程中发挥着非常重要的作用，也就意味着我们必须对数据结构的学习重视起来。</span></span></span> 
</div> <div class="se-48bc0da5 " data-slate-type="paragraph" data-slate-object="block" data-key="449"> 
<span data-slate-object="text" data-key="450"><span data-slate-leaf="true" data-offset-key="450:0" 
data-first-offset="true"><span data-slate-string="true">之前我们所讨论的数据结构呢，其实都只是停留在程序内部的数据结构，这是一种具体的，可见的数据结构，并对我们设计的程序产生重要影响。我们也认识到，这种具体的数据结构的重要作用，会对我们设计的程序产生重要的影响。今天呢，我将带你重新认识数据结构，发现它的另一面，那就是数据结构对我们思维方式的影响，这种影响更抽象，也更重要。</span></span></span> 
</div> <div class="se-a1ca83aa " data-slate-type="paragraph" data-slate-object="block" data-key="451"> 
<span data-slate-object="text" data-key="452"><span data-slate-leaf="true" data-offset-key="452:0" 
data-first-offset="true"><span data-slate-string="true">接下来的两次课程内容呢，我将通过链表结构的讲解，让你认识这种思维层面的数据结构。</span></span></span> 
</div> <h2 class="se-2856e573" data-slate-type="heading" data-slate-object="block" data-key="453"><span 
data-slate-object="text" data-key="454"><span data-slate-leaf="true" data-offset-key="454:0" 
data-first-offset="true"><span data-slate-string="true">必知必会，查缺补漏</span></span></span></h2> 
<div class="se-5dba30b3 " data-slate-type="paragraph" data-slate-object="block" data-key="455"> 
<span data-slate-object="text" data-key="456"><span data-slate-leaf="true" data-offset-key="456:0" 
data-first-offset="true"><span data-slate-string="true">今天我们将要学习的链表，是一种常见的基础数据结构，属于数据结构中线性结构的一种。在讲如何学习链表之前，我们先来看一看通常情况下，如何学习数据结构的相关的知识。</span></span></span> 
</div> <h4 class="se-71c5754b" data-slate-type="heading" data-slate-object="block" data-key="457"><span 
data-slate-object="text" data-key="458"><span data-slate-leaf="true" data-offset-key="458:0" 
data-first-offset="true"><span data-slate-string="true">1. 数据结构：结构定义 + 结构操作</span></span></span></h4> 
<div class="se-a7905420 " data-slate-type="paragraph" data-slate-object="block" data-key="459"> 
<span data-slate-object="text" data-key="460"><span data-slate-leaf="true" data-offset-key="460:0" 
data-first-offset="true"><span data-slate-string="true">你应该玩过拼装式的玩具吧，类似于高达机器人之类的。面对这样的玩具，我一般在拼装之前看看说明书，知道这个玩具包含哪几部分，然后对这些部分进行拼装，等把各部分拼好了后，再把它们组合起来，最终的成品就完成了。</span></span></span> 
</div> <div class="se-83006e37" data-slate-type="image" data-slate-object="block" data-key="461"></div> 
</div>', body_summary='', bundle='book', delta=0, body_format='full_html', langcode='zh-hans', 
revision_id=757 where entity_id=757 
 {executed in 0 msec}
2020-11-24 18:18:36.698 INFO  jdbc.sqltiming Line:373 - select nodefiledd0_.nid as nid1_10_, nodefiledd0_.changed as changed2_10_, nodefiledd0_.created 
as created3_10_, nodefiledd0_.default_langcode as default_4_10_, nodefiledd0_.langcode as langcode5_10_, 
nodefiledd0_.promote as promote6_10_, nodefiledd0_.revision_translation_affected as revision7_10_, 
nodefiledd0_.status as status8_10_, nodefiledd0_.sticky as sticky9_10_, nodefiledd0_.title 
as title10_10_, nodefiledd0_.type as type11_10_, nodefiledd0_.uid as uid12_10_, nodefiledd0_.vid 
as vid13_10_ from node_field_data nodefiledd0_ where nodefiledd0_.nid=757 
 {executed in 0 msec}
2020-11-24 18:18:36.699 INFO  jdbc.resultsettable Line:610 - 
|----|-----------|-----------|-----------------|---------|--------|------------------------------|-------|-------|----------------------|-----|----|----|
|nid |changed    |created    |default_langcode |langcode |promote |revision_translation_affected |status |sticky |title                 |type |uid |vid |
|----|-----------|-----------|-----------------|---------|--------|------------------------------|-------|-------|----------------------|-----|----|----|
|757 |1606117098 |1606117098 |1                |zh-hans  |0       |1                             |1      |0      |18丨重新认识数据结构（上）：初识链表结构 |book |1   |757 |
|----|-----------|-----------|-----------------|---------|--------|------------------------------|-------|-------|----------------------|-----|----|----|

2020-11-24 18:18:36.699 INFO  jdbc.sqltiming Line:373 - select nodefieldr0_.nid as nid1_11_0_, nodefieldr0_.changed as changed2_11_0_, nodefieldr0_.created 
as created3_11_0_, nodefieldr0_.default_langcode as default_4_11_0_, nodefieldr0_.langcode 
as langcode5_11_0_, nodefieldr0_.promote as promote6_11_0_, nodefieldr0_.revision_translation_affected 
as revision7_11_0_, nodefieldr0_.status as status8_11_0_, nodefieldr0_.sticky as sticky9_11_0_, 
nodefieldr0_.title as title10_11_0_, nodefieldr0_.uid as uid11_11_0_, nodefieldr0_.vid as vid12_11_0_ 
from node_field_revision nodefieldr0_ where nodefieldr0_.nid=757 
 {executed in 0 msec}
2020-11-24 18:18:36.700 INFO  jdbc.resultsettable Line:610 - 
|---------|-----------|-----------|-----------------|---------|--------|------------------------------|-------|-------|----------------------|----|----|
|nid      |changed    |created    |default_langcode |langcode |promote |revision_translation_affected |status |sticky |title                 |uid |vid |
|---------|-----------|-----------|-----------------|---------|--------|------------------------------|-------|-------|----------------------|----|----|
|[unread] |1606117098 |1606117098 |1                |zh-hans  |0       |1                             |1      |0      |18丨重新认识数据结构（上）：初识链表结构 |1   |757 |
|---------|-----------|-----------|-----------------|---------|--------|------------------------------|-------|-------|----------------------|----|----|

2020-11-24 18:18:36.701 INFO  jdbc.sqltiming Line:373 - update node_field_data set changed=1606213116, created=1606213116, default_langcode=1, langcode='zh-hans', 
promote=0, revision_translation_affected=1, status=1, sticky=0, title='18丨重新认识数据结构（上）：初识链表结构', 
type='book', uid=1, vid=757 where nid=757 
 {executed in 0 msec}
2020-11-24 18:18:36.702 INFO  jdbc.sqltiming Line:373 - update node_field_revision set changed=1606213116, created=1606213116, default_langcode=1, 
langcode='zh-hans', promote=0, revision_translation_affected=1, status=1, sticky=0, title='18丨重新认识数据结构（上）：初识链表结构', 
uid=1, vid=757 where nid=757 
 {executed in 0 msec}
2020-11-24 18:18:36.705 INFO  jdbc.sqltiming Line:373 - select bookfieldm0_.entity_id as entity_i1_8_, bookfieldm0_.bundle as bundle2_8_, bookfieldm0_.delta 
as delta3_8_, bookfieldm0_.langcode as langcode4_8_, bookfieldm0_.field_media_value as field_me5_8_, 
bookfieldm0_.revision_id as revision6_8_ from node__field_media bookfieldm0_ where bookfieldm0_.entity_id=757 
 {executed in 0 msec}
2020-11-24 18:18:36.706 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------------|------------|
|entity_id |bundle |delta |langcode |field_media_value |revision_id |
|----------|-------|------|---------|------------------|------------|
|757       |book   |0     |zh-hans  |                  |757         |
|----------|-------|------|---------|------------------|------------|

2020-11-24 18:18:36.708 INFO  jdbc.sqltiming Line:373 - select nodefieldm0_.entity_id as entity_i1_17_0_, nodefieldm0_.bundle as bundle2_17_0_, nodefieldm0_.delta 
as delta3_17_0_, nodefieldm0_.langcode as langcode4_17_0_, nodefieldm0_.field_media_value as 
field_me5_17_0_, nodefieldm0_.revision_id as revision6_17_0_ from node_revision__field_media 
nodefieldm0_ where nodefieldm0_.entity_id=757 
 {executed in 1 msec}
2020-11-24 18:18:36.708 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------------|------------|
|entity_id |bundle |delta |langcode |field_media_value |revision_id |
|----------|-------|------|---------|------------------|------------|
|[unread]  |book   |0     |zh-hans  |                  |757         |
|----------|-------|------|---------|------------------|------------|

2020-11-24 18:18:36.710 INFO  jdbc.sqltiming Line:373 - select bookfieldc0_.entity_id as entity_i1_5_, bookfieldc0_.bundle as bundle2_5_, bookfieldc0_.field_comment_value 
as field_co3_5_, bookfieldc0_.delta as delta4_5_, bookfieldc0_.field_comment_format as field_co5_5_, 
bookfieldc0_.langcode as langcode6_5_, bookfieldc0_.revision_id as revision7_5_ from node__field_comment 
bookfieldc0_ where bookfieldc0_.entity_id=757 
 {executed in 0 msec}
2020-11-24 18:18:36.710 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|--------------------|------|---------------------|---------|------------|
|entity_id |bundle |field_comment_value |delta |field_comment_format |langcode |revision_id |
|----------|-------|--------------------|------|---------------------|---------|------------|
|757       |book   |                    |0     |full_html            |zh-hans  |757         |
|----------|-------|--------------------|------|---------------------|---------|------------|

2020-11-24 18:18:36.712 INFO  jdbc.sqltiming Line:373 - select nodefieldc0_.entity_id as entity_i1_14_0_, nodefieldc0_.bundle as bundle2_14_0_, nodefieldc0_.field_comment_value 
as field_co3_14_0_, nodefieldc0_.delta as delta4_14_0_, nodefieldc0_.field_comment_format as 
field_co5_14_0_, nodefieldc0_.langcode as langcode6_14_0_, nodefieldc0_.revision_id as revision7_14_0_ 
from node_revision__field_comment nodefieldc0_ where nodefieldc0_.entity_id=757 
 {executed in 0 msec}
2020-11-24 18:18:36.712 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|--------------------|------|---------------------|---------|------------|
|entity_id |bundle |field_comment_value |delta |field_comment_format |langcode |revision_id |
|----------|-------|--------------------|------|---------------------|---------|------------|
|[unread]  |book   |                    |0     |full_html            |zh-hans  |757         |
|----------|-------|--------------------|------|---------------------|---------|------------|

2020-11-24 18:18:36.714 INFO  jdbc.sqltiming Line:373 - select bookfieldt0_.entity_id as entity_i1_9_, bookfieldt0_.bundle as bundle2_9_, bookfieldt0_.delta 
as delta3_9_, bookfieldt0_.langcode as langcode4_9_, bookfieldt0_.revision_id as revision5_9_, 
bookfieldt0_.field_thumb_value as field_th6_9_ from node__field_thumb bookfieldt0_ where bookfieldt0_.entity_id=757 
 {executed in 0 msec}
2020-11-24 18:18:36.714 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------|------------------|
|entity_id |bundle |delta |langcode |revision_id |field_thumb_value |
|----------|-------|------|---------|------------|------------------|
|757       |book   |0     |zh-hans  |757         |                  |
|----------|-------|------|---------|------------|------------------|

2020-11-24 18:18:36.716 INFO  jdbc.sqltiming Line:373 - update node__field_thumb set bundle='book', delta=0, langcode='zh-hans', revision_id=757, field_thumb_value='https://static001.geekbang.org/resource/image/65/bf/65d94e252b3efbd03c1da4faca5539bf.jpg' 
where entity_id=757 
 {executed in 0 msec}
2020-11-24 18:18:36.719 INFO  jdbc.sqltiming Line:373 - select nodefieldt0_.entity_id as entity_i1_18_0_, nodefieldt0_.bundle as bundle2_18_0_, nodefieldt0_.delta 
as delta3_18_0_, nodefieldt0_.langcode as langcode4_18_0_, nodefieldt0_.revision_id as revision5_18_0_, 
nodefieldt0_.field_thumb_value as field_th6_18_0_ from node_revision__field_thumb nodefieldt0_ 
where nodefieldt0_.entity_id=757 
 {executed in 0 msec}
2020-11-24 18:18:36.719 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------|------------------|
|entity_id |bundle |delta |langcode |revision_id |field_thumb_value |
|----------|-------|------|---------|------------|------------------|
|[unread]  |book   |0     |zh-hans  |757         |                  |
|----------|-------|------|---------|------------|------------------|

2020-11-24 18:18:36.721 INFO  jdbc.sqltiming Line:373 - update node_revision__field_thumb set bundle='book', delta=0, langcode='zh-hans', revision_id=757, 
field_thumb_value='https://static001.geekbang.org/resource/image/65/bf/65d94e252b3efbd03c1da4faca5539bf.jpg' 
where entity_id=757 
 {executed in 0 msec}
2020-11-24 18:18:36.723 INFO  jdbc.sqltiming Line:373 - select bookfieldf0_.entity_id as entity_i1_6_0_, bookfieldf0_.bundle as bundle2_6_0_, bookfieldf0_.delta 
as delta3_6_0_, bookfieldf0_.field_fenlei_target_id as field_fe4_6_0_, bookfieldf0_.langcode 
as langcode5_6_0_, bookfieldf0_.revision_id as revision6_6_0_ from node__field_fenlei bookfieldf0_ 
where bookfieldf0_.entity_id=757 
 {executed in 0 msec}
2020-11-24 18:18:36.724 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------------|---------|------------|
|entity_id |bundle |delta |field_fenlei_target_id |langcode |revision_id |
|----------|-------|------|-----------------------|---------|------------|
|[unread]  |book   |0     |1                      |zh-hans  |757         |
|----------|-------|------|-----------------------|---------|------------|

2020-11-24 18:18:36.725 INFO  jdbc.sqltiming Line:373 - select nodefieldf0_.entity_id as entity_i1_15_0_, nodefieldf0_.bundle as bundle2_15_0_, nodefieldf0_.delta 
as delta3_15_0_, nodefieldf0_.field_fenlei_target_id as field_fe4_15_0_, nodefieldf0_.langcode 
as langcode5_15_0_, nodefieldf0_.revision_id as revision6_15_0_ from node_revision__field_fenlei 
nodefieldf0_ where nodefieldf0_.entity_id=757 
 {executed in 0 msec}
2020-11-24 18:18:36.726 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------------|---------|------------|
|entity_id |bundle |delta |field_fenlei_target_id |langcode |revision_id |
|----------|-------|------|-----------------------|---------|------------|
|[unread]  |book   |0     |1                      |zh-hans  |757         |
|----------|-------|------|-----------------------|---------|------------|

2020-11-24 18:18:36.727 INFO  jdbc.sqltiming Line:373 - select bookchecke0_.item_id as item_id1_2_, bookchecke0_.fsid as fsid2_2_, bookchecke0_.got 
as got3_2_, bookchecke0_.name as name4_2_, bookchecke0_.parse_fail as parse_fa5_2_, bookchecke0_.parsed 
as parsed6_2_, bookchecke0_.path as path7_2_, bookchecke0_.title as title8_2_, bookchecke0_.vid 
as vid9_2_ from book_check bookchecke0_ where bookchecke0_.fsid='534273077165079' and bookchecke0_.name='net_content' 
 {executed in 0 msec}
2020-11-24 18:18:36.728 INFO  jdbc.resultsettable Line:610 - 
|--------|---------|---------|---------|-----------|---------|---------|---------|---------|
|item_id |fsid     |got      |name     |parse_fail |parsed   |path     |title    |vid      |
|--------|---------|---------|---------|-----------|---------|---------|---------|---------|
|758     |[unread] |[unread] |[unread] |[unread]   |[unread] |[unread] |[unread] |[unread] |
|--------|---------|---------|---------|-----------|---------|---------|---------|---------|

2020-11-24 18:21:50.231 INFO  jdbc.sqltiming Line:373 - update book_check set fsid='534273077165079', got=1, name='net_content', parse_fail='con_comment_thumb', 
parsed=0, path='109-人人都能学会的编程入门课/04丨算法数据结构篇 (9讲)/19丨重新认识数据结构（下）：有趣的链表思维.html', title='19丨重新认识数据结构（下）：有趣的链表思维', 
vid=758 where item_id=758 
 {executed in 0 msec}
2020-11-24 18:21:50.239 INFO  jdbc.sqltiming Line:373 - select nodebodyen0_.entity_id as entity_i1_4_, nodebodyen0_.body_value as body_val2_4_, nodebodyen0_.body_summary 
as body_sum3_4_, nodebodyen0_.bundle as bundle4_4_, nodebodyen0_.delta as delta5_4_, nodebodyen0_.body_format 
as body_for6_4_, nodebodyen0_.langcode as langcode7_4_, nodebodyen0_.revision_id as revision8_4_ 
from node__body nodebodyen0_ where nodebodyen0_.entity_id=758 
 {executed in 0 msec}
2020-11-24 18:21:50.239 INFO  jdbc.resultsettable Line:610 - 
|----------|-----------|-------------|-------|------|------------|---------|------------|
|entity_id |body_value |body_summary |bundle |delta |body_format |langcode |revision_id |
|----------|-----------|-------------|-------|------|------------|---------|------------|
|758       |           |             |book   |0     |full_html   |zh-hans  |758         |
|----------|-----------|-------------|-------|------|------------|---------|------------|

2020-11-24 18:21:50.240 INFO  jdbc.sqltiming Line:373 - select nodebodyre0_.entity_id as entity_i1_13_0_, nodebodyre0_.body_value as body_val2_13_0_, 
nodebodyre0_.body_summary as body_sum3_13_0_, nodebodyre0_.bundle as bundle4_13_0_, nodebodyre0_.delta 
as delta5_13_0_, nodebodyre0_.body_format as body_for6_13_0_, nodebodyre0_.langcode as langcode7_13_0_, 
nodebodyre0_.revision_id as revision8_13_0_ from node_revision__body nodebodyre0_ where nodebodyre0_.entity_id=758 
 {executed in 0 msec}
2020-11-24 18:21:50.241 INFO  jdbc.resultsettable Line:610 - 
|----------|-----------|-------------|-------|------|------------|---------|------------|
|entity_id |body_value |body_summary |bundle |delta |body_format |langcode |revision_id |
|----------|-----------|-------------|-------|------|------------|---------|------------|
|[unread]  |           |             |book   |0     |full_html   |zh-hans  |758         |
|----------|-----------|-------------|-------|------|------------|---------|------------|

2020-11-24 18:21:50.244 INFO  jdbc.sqltiming Line:373 - select nodefiledd0_.nid as nid1_10_, nodefiledd0_.changed as changed2_10_, nodefiledd0_.created 
as created3_10_, nodefiledd0_.default_langcode as default_4_10_, nodefiledd0_.langcode as langcode5_10_, 
nodefiledd0_.promote as promote6_10_, nodefiledd0_.revision_translation_affected as revision7_10_, 
nodefiledd0_.status as status8_10_, nodefiledd0_.sticky as sticky9_10_, nodefiledd0_.title 
as title10_10_, nodefiledd0_.type as type11_10_, nodefiledd0_.uid as uid12_10_, nodefiledd0_.vid 
as vid13_10_ from node_field_data nodefiledd0_ where nodefiledd0_.nid=758 
 {executed in 1 msec}
2020-11-24 18:21:50.244 INFO  jdbc.resultsettable Line:610 - 
|----|-----------|-----------|-----------------|---------|--------|------------------------------|-------|-------|-----------------------|-----|----|----|
|nid |changed    |created    |default_langcode |langcode |promote |revision_translation_affected |status |sticky |title                  |type |uid |vid |
|----|-----------|-----------|-----------------|---------|--------|------------------------------|-------|-------|-----------------------|-----|----|----|
|758 |1606117099 |1606117099 |1                |zh-hans  |0       |1                             |1      |0      |19丨重新认识数据结构（下）：有趣的链表思维 |book |1   |758 |
|----|-----------|-----------|-----------------|---------|--------|------------------------------|-------|-------|-----------------------|-----|----|----|

2020-11-24 18:21:50.245 INFO  jdbc.sqltiming Line:373 - select nodefieldr0_.nid as nid1_11_0_, nodefieldr0_.changed as changed2_11_0_, nodefieldr0_.created 
as created3_11_0_, nodefieldr0_.default_langcode as default_4_11_0_, nodefieldr0_.langcode 
as langcode5_11_0_, nodefieldr0_.promote as promote6_11_0_, nodefieldr0_.revision_translation_affected 
as revision7_11_0_, nodefieldr0_.status as status8_11_0_, nodefieldr0_.sticky as sticky9_11_0_, 
nodefieldr0_.title as title10_11_0_, nodefieldr0_.uid as uid11_11_0_, nodefieldr0_.vid as vid12_11_0_ 
from node_field_revision nodefieldr0_ where nodefieldr0_.nid=758 
 {executed in 0 msec}
2020-11-24 18:21:50.245 INFO  jdbc.resultsettable Line:610 - 
|---------|-----------|-----------|-----------------|---------|--------|------------------------------|-------|-------|-----------------------|----|----|
|nid      |changed    |created    |default_langcode |langcode |promote |revision_translation_affected |status |sticky |title                  |uid |vid |
|---------|-----------|-----------|-----------------|---------|--------|------------------------------|-------|-------|-----------------------|----|----|
|[unread] |1606117099 |1606117099 |1                |zh-hans  |0       |1                             |1      |0      |19丨重新认识数据结构（下）：有趣的链表思维 |1   |758 |
|---------|-----------|-----------|-----------------|---------|--------|------------------------------|-------|-------|-----------------------|----|----|

2020-11-24 18:21:50.247 INFO  jdbc.sqltiming Line:373 - update node_field_data set changed=1606213310, created=1606213310, default_langcode=1, langcode='zh-hans', 
promote=0, revision_translation_affected=1, status=1, sticky=0, title='19丨重新认识数据结构（下）：有趣的链表思维', 
type='book', uid=1, vid=758 where nid=758 
 {executed in 0 msec}
2020-11-24 18:21:50.247 INFO  jdbc.sqltiming Line:373 - update node_field_revision set changed=1606213310, created=1606213310, default_langcode=1, 
langcode='zh-hans', promote=0, revision_translation_affected=1, status=1, sticky=0, title='19丨重新认识数据结构（下）：有趣的链表思维', 
uid=1, vid=758 where nid=758 
 {executed in 0 msec}
2020-11-24 18:21:50.251 INFO  jdbc.sqltiming Line:373 - select bookfieldm0_.entity_id as entity_i1_8_, bookfieldm0_.bundle as bundle2_8_, bookfieldm0_.delta 
as delta3_8_, bookfieldm0_.langcode as langcode4_8_, bookfieldm0_.field_media_value as field_me5_8_, 
bookfieldm0_.revision_id as revision6_8_ from node__field_media bookfieldm0_ where bookfieldm0_.entity_id=758 
 {executed in 0 msec}
2020-11-24 18:21:50.251 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------------|------------|
|entity_id |bundle |delta |langcode |field_media_value |revision_id |
|----------|-------|------|---------|------------------|------------|
|758       |book   |0     |zh-hans  |                  |758         |
|----------|-------|------|---------|------------------|------------|

2020-11-24 18:21:50.253 INFO  jdbc.sqltiming Line:373 - select nodefieldm0_.entity_id as entity_i1_17_0_, nodefieldm0_.bundle as bundle2_17_0_, nodefieldm0_.delta 
as delta3_17_0_, nodefieldm0_.langcode as langcode4_17_0_, nodefieldm0_.field_media_value as 
field_me5_17_0_, nodefieldm0_.revision_id as revision6_17_0_ from node_revision__field_media 
nodefieldm0_ where nodefieldm0_.entity_id=758 
 {executed in 0 msec}
2020-11-24 18:21:50.253 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------------|------------|
|entity_id |bundle |delta |langcode |field_media_value |revision_id |
|----------|-------|------|---------|------------------|------------|
|[unread]  |book   |0     |zh-hans  |                  |758         |
|----------|-------|------|---------|------------------|------------|

2020-11-24 18:21:50.255 INFO  jdbc.sqltiming Line:373 - select bookfieldc0_.entity_id as entity_i1_5_, bookfieldc0_.bundle as bundle2_5_, bookfieldc0_.field_comment_value 
as field_co3_5_, bookfieldc0_.delta as delta4_5_, bookfieldc0_.field_comment_format as field_co5_5_, 
bookfieldc0_.langcode as langcode6_5_, bookfieldc0_.revision_id as revision7_5_ from node__field_comment 
bookfieldc0_ where bookfieldc0_.entity_id=758 
 {executed in 0 msec}
2020-11-24 18:21:50.256 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|--------------------|------|---------------------|---------|------------|
|entity_id |bundle |field_comment_value |delta |field_comment_format |langcode |revision_id |
|----------|-------|--------------------|------|---------------------|---------|------------|
|758       |book   |                    |0     |full_html            |zh-hans  |758         |
|----------|-------|--------------------|------|---------------------|---------|------------|

2020-11-24 18:21:50.258 INFO  jdbc.sqltiming Line:373 - select nodefieldc0_.entity_id as entity_i1_14_0_, nodefieldc0_.bundle as bundle2_14_0_, nodefieldc0_.field_comment_value 
as field_co3_14_0_, nodefieldc0_.delta as delta4_14_0_, nodefieldc0_.field_comment_format as 
field_co5_14_0_, nodefieldc0_.langcode as langcode6_14_0_, nodefieldc0_.revision_id as revision7_14_0_ 
from node_revision__field_comment nodefieldc0_ where nodefieldc0_.entity_id=758 
 {executed in 1 msec}
2020-11-24 18:21:50.258 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|--------------------|------|---------------------|---------|------------|
|entity_id |bundle |field_comment_value |delta |field_comment_format |langcode |revision_id |
|----------|-------|--------------------|------|---------------------|---------|------------|
|[unread]  |book   |                    |0     |full_html            |zh-hans  |758         |
|----------|-------|--------------------|------|---------------------|---------|------------|

2020-11-24 18:21:50.260 INFO  jdbc.sqltiming Line:373 - select bookfieldt0_.entity_id as entity_i1_9_, bookfieldt0_.bundle as bundle2_9_, bookfieldt0_.delta 
as delta3_9_, bookfieldt0_.langcode as langcode4_9_, bookfieldt0_.revision_id as revision5_9_, 
bookfieldt0_.field_thumb_value as field_th6_9_ from node__field_thumb bookfieldt0_ where bookfieldt0_.entity_id=758 
 {executed in 0 msec}
2020-11-24 18:21:50.260 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------|------------------|
|entity_id |bundle |delta |langcode |revision_id |field_thumb_value |
|----------|-------|------|---------|------------|------------------|
|758       |book   |0     |zh-hans  |758         |                  |
|----------|-------|------|---------|------------|------------------|

2020-11-24 18:21:50.262 INFO  jdbc.sqltiming Line:373 - select nodefieldt0_.entity_id as entity_i1_18_0_, nodefieldt0_.bundle as bundle2_18_0_, nodefieldt0_.delta 
as delta3_18_0_, nodefieldt0_.langcode as langcode4_18_0_, nodefieldt0_.revision_id as revision5_18_0_, 
nodefieldt0_.field_thumb_value as field_th6_18_0_ from node_revision__field_thumb nodefieldt0_ 
where nodefieldt0_.entity_id=758 
 {executed in 0 msec}
2020-11-24 18:21:50.262 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------|------------------|
|entity_id |bundle |delta |langcode |revision_id |field_thumb_value |
|----------|-------|------|---------|------------|------------------|
|[unread]  |book   |0     |zh-hans  |758         |                  |
|----------|-------|------|---------|------------|------------------|

2020-11-24 18:21:50.264 INFO  jdbc.sqltiming Line:373 - select bookfieldf0_.entity_id as entity_i1_6_0_, bookfieldf0_.bundle as bundle2_6_0_, bookfieldf0_.delta 
as delta3_6_0_, bookfieldf0_.field_fenlei_target_id as field_fe4_6_0_, bookfieldf0_.langcode 
as langcode5_6_0_, bookfieldf0_.revision_id as revision6_6_0_ from node__field_fenlei bookfieldf0_ 
where bookfieldf0_.entity_id=758 
 {executed in 0 msec}
2020-11-24 18:21:50.264 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------------|---------|------------|
|entity_id |bundle |delta |field_fenlei_target_id |langcode |revision_id |
|----------|-------|------|-----------------------|---------|------------|
|[unread]  |book   |0     |1                      |zh-hans  |758         |
|----------|-------|------|-----------------------|---------|------------|

2020-11-24 18:21:50.266 INFO  jdbc.sqltiming Line:373 - select nodefieldf0_.entity_id as entity_i1_15_0_, nodefieldf0_.bundle as bundle2_15_0_, nodefieldf0_.delta 
as delta3_15_0_, nodefieldf0_.field_fenlei_target_id as field_fe4_15_0_, nodefieldf0_.langcode 
as langcode5_15_0_, nodefieldf0_.revision_id as revision6_15_0_ from node_revision__field_fenlei 
nodefieldf0_ where nodefieldf0_.entity_id=758 
 {executed in 0 msec}
2020-11-24 18:21:50.267 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------------|---------|------------|
|entity_id |bundle |delta |field_fenlei_target_id |langcode |revision_id |
|----------|-------|------|-----------------------|---------|------------|
|[unread]  |book   |0     |1                      |zh-hans  |758         |
|----------|-------|------|-----------------------|---------|------------|

2020-11-24 18:21:50.269 INFO  jdbc.sqltiming Line:373 - select bookchecke0_.item_id as item_id1_2_, bookchecke0_.fsid as fsid2_2_, bookchecke0_.got 
as got3_2_, bookchecke0_.name as name4_2_, bookchecke0_.parse_fail as parse_fa5_2_, bookchecke0_.parsed 
as parsed6_2_, bookchecke0_.path as path7_2_, bookchecke0_.title as title8_2_, bookchecke0_.vid 
as vid9_2_ from book_check bookchecke0_ where bookchecke0_.fsid='126966167765816' and bookchecke0_.name='net_content' 
 {executed in 1 msec}
2020-11-24 18:21:50.269 INFO  jdbc.resultsettable Line:610 - 
|--------|---------|---------|---------|-----------|---------|---------|---------|---------|
|item_id |fsid     |got      |name     |parse_fail |parsed   |path     |title    |vid      |
|--------|---------|---------|---------|-----------|---------|---------|---------|---------|
|759     |[unread] |[unread] |[unread] |[unread]   |[unread] |[unread] |[unread] |[unread] |
|--------|---------|---------|---------|-----------|---------|---------|---------|---------|

2020-11-24 18:27:13.811 INFO  jdbc.sqltiming Line:373 - update book_check set fsid='126966167765816', got=1, name='net_content', parse_fail='comment_', 
parsed=0, path='109-人人都能学会的编程入门课/04丨算法数据结构篇 (9讲)/20丨二分查找：提升程序的查找效率.html', title='20丨二分查找：提升程序的查找效率', 
vid=759 where item_id=759 
 {executed in 0 msec}
2020-11-24 18:27:13.816 INFO  jdbc.sqltiming Line:373 - select nodebodyen0_.entity_id as entity_i1_4_, nodebodyen0_.body_value as body_val2_4_, nodebodyen0_.body_summary 
as body_sum3_4_, nodebodyen0_.bundle as bundle4_4_, nodebodyen0_.delta as delta5_4_, nodebodyen0_.body_format 
as body_for6_4_, nodebodyen0_.langcode as langcode7_4_, nodebodyen0_.revision_id as revision8_4_ 
from node__body nodebodyen0_ where nodebodyen0_.entity_id=759 
 {executed in 0 msec}
2020-11-24 18:27:13.817 INFO  jdbc.resultsettable Line:610 - 
|----------|-----------|-------------|-------|------|------------|---------|------------|
|entity_id |body_value |body_summary |bundle |delta |body_format |langcode |revision_id |
|----------|-----------|-------------|-------|------|------------|---------|------------|
|759       |           |             |book   |0     |full_html   |zh-hans  |759         |
|----------|-----------|-------------|-------|------|------------|---------|------------|

2020-11-24 18:27:13.817 INFO  jdbc.sqltiming Line:373 - select nodebodyre0_.entity_id as entity_i1_13_0_, nodebodyre0_.body_value as body_val2_13_0_, 
nodebodyre0_.body_summary as body_sum3_13_0_, nodebodyre0_.bundle as bundle4_13_0_, nodebodyre0_.delta 
as delta5_13_0_, nodebodyre0_.body_format as body_for6_13_0_, nodebodyre0_.langcode as langcode7_13_0_, 
nodebodyre0_.revision_id as revision8_13_0_ from node_revision__body nodebodyre0_ where nodebodyre0_.entity_id=759 
 {executed in 0 msec}
2020-11-24 18:27:13.818 INFO  jdbc.resultsettable Line:610 - 
|----------|-----------|-------------|-------|------|------------|---------|------------|
|entity_id |body_value |body_summary |bundle |delta |body_format |langcode |revision_id |
|----------|-----------|-------------|-------|------|------------|---------|------------|
|[unread]  |           |             |book   |0     |full_html   |zh-hans  |759         |
|----------|-----------|-------------|-------|------|------------|---------|------------|

2020-11-24 18:27:13.823 INFO  jdbc.sqltiming Line:373 - update node__body set body_value='<div data-slate-editor="true" data-key="332" autocorrect="off" 
spellcheck="false" data-gramm="false" style="outline: none; white-space: pre-wrap; overflow-wrap: 
break-word;"> <div class="se-643b8566 " data-slate-type="paragraph" data-slate-object="block" 
data-key="333"> <span data-slate-object="text" data-key="334"><span data-slate-leaf="true" 
data-offset-key="334:0" data-first-offset="true"><span data-slate-string="true">你好，我是胡光，欢迎回来。</span></span></span> 
</div> <div class="se-7bc1ad8b " data-slate-type="paragraph" data-slate-object="block" data-key="335"> 
<span data-slate-object="text" data-key="336"><span data-slate-leaf="true" data-offset-key="336:0" 
data-first-offset="true"><span data-slate-string="true">上节课，我们讲了链表的基础结构，以及体会了一把链表结构在思维逻辑层面的作用，就是面对看似复杂的问题，当我们把它转换成链表结构思维去解决的时候，这些问题和困难都迎刃而解。</span></span></span> 
</div> <div class="se-e6f0e47b " data-slate-type="paragraph" data-slate-object="block" data-key="337"> 
<span data-slate-object="text" data-key="338"><span data-slate-leaf="true" data-offset-key="338:0" 
data-first-offset="true"><span data-slate-string="true">今天呢，我将带你学习一种简单、有趣且高效的算法，叫做二分查找。在学习二分查找之前呢，有一个关于二分查找的笑话，你必须知道。</span></span></span> 
</div> <div class="se-2fdb3d0b " data-slate-type="paragraph" data-slate-object="block" data-key="339"> 
<span data-slate-object="text" data-key="340"><span data-slate-leaf="true" data-offset-key="340:0" 
data-first-offset="true"><span data-slate-string="true">话说，在学校图书馆的计算机科学相关书籍借阅区里面，有一个女生抱着 40 
本书往外走，经过图书馆安检机器的时候，安检机器发出了警报声。这时候，女生很无奈，就把书放到了地上，准备一本一本地去试，看看究竟是哪一本书没有消磁。</span></span></span> 
</div> <div class="se-da2f30c9 " data-slate-type="paragraph" data-slate-object="block" data-key="341"> 
<span data-slate-object="text" data-key="342"><span data-slate-leaf="true" data-offset-key="342:0" 
data-first-offset="true"><span data-slate-string="true">女生的举动，被旁边图书馆管理员阿姨看到了，阿姨看不下去了，叫住了她，说：这么一本一本的尝试，多慢啊！我教你一种方法。眼看阿姨将书分成两摞，拿起其中一摞的书，过了一下安检，安检机器响了，阿姨就又将这摞书分成了两部分，拿出其中一部分又过了一次安检……就这样，阿姨每次将书的数量减少一半，没几次就找到了那本没有消磁的书。阿姨得意洋洋地说：小姑娘，这就是书中讲的二分查找算法，你这专业知识不过关啊！次日，图书馆发现，丢了 
39 本书。</span></span></span> </div> <div class="se-e00a66c3 " data-slate-type="paragraph" data-slate-object="block" 
data-key="343"> <span data-slate-object="text" data-key="344"><span data-slate-leaf="true" 
data-offset-key="344:0" data-first-offset="true"><span data-slate-string="true">上面这个故事中的阿姨，虽然知道二分查找算法，可明显是对使用算法的前提条件没有搞清楚。今天，我教给你的不仅是二分查找算法本身，还希望你能准确搞清楚二分查找算法的使用场景。</span></span></span> 
</div> <h2 class="se-17e3f750" data-slate-type="heading" data-slate-object="block" data-key="345"><span 
data-slate-object="text" data-key="346"><span data-slate-leaf="true" data-offset-key="346:0" 
data-first-offset="true"><span data-slate-string="true">今日任务</span></span></span></h2> <div 
class="se-e77cffac " data-slate-type="paragraph" data-slate-object="block" data-key="347"> 
<span data-slate-object="text" data-key="348"><span data-slate-leaf="true" data-offset-key="348:0" 
data-first-offset="true"><span data-slate-string="true">在正式开始今天课程之前呢，先来看一下今天这 10 分钟的任务吧。</span></span></span> 
</div> <div class="se-f3e0ffd1 " data-slate-type="paragraph" data-slate-object="block" data-key="349"> 
<span data-slate-object="text" data-key="350"><span data-slate-leaf="true" data-offset-key="350:0" 
data-first-offset="true"><span data-slate-string="true">假设你手上有 n 段长度不等的绳子，你现在想将这些绳子进行裁剪，裁剪出 
k 条长度相等的绳子，注意，只能剪断绳子，不能拼接绳子。问题就是，你能得到的这 k 段绳子的最长长度是多长？</span></span></span> </div> <div class="se-3d43c272" 
data-slate-type="image" data-slate-object="block" data-key="351"> <img class="se-bf18eaba" 
src="https://static001.geekbang.org/resource/image/72/41/72e13fc8a526d82a6f700892ea294741.jpg"> 
<div class="se-4722953c"> 图1： 切绳子任务示意图 </div> </div> <div class="se-3fe1561d " data-slate-type="paragraph" 
data-slate-object="block" data-key="352"> <span data-slate-object="text" data-key="353"><span 
data-slate-leaf="true" data-offset-key="353:0" data-first-offset="true"><span data-slate-string="true">如图所示，如果你手中有 
3 条绳子，分别是 4 米、6 米 和 5 米，想要切出等长的 4 段，你会发现，每段最长就是 3 米。</span></span></span> </div> <div class="se-484a56ee 
" data-slate-type="paragraph" data-slate-object="block" data-key="354"> <span data-slate-object="text" 
data-key="355"><span data-slate-leaf="true" data-offset-key="355:0" data-first-offset="true"><span 
data-slate-string="true">那么我们是如何得到“每段最长就是 3 米”这个答案的呢？当然，你可以采用枚举法，就是先尝试能不能切出至少 4 段的 1 米长绳子，如果可以的话，再去尝试每段长度 
2 米是否可行，依次尝试下去，直到尝试不下去为止。最后一次尝试可行的长度，就是每段绳子的最长长度了。</span></span></span> </div> <div class="se-594dc7f0 
" data-slate-type="paragraph" data-slate-object="block" data-key="356"> <span data-slate-object="text" 
data-key="357"><span data-slate-leaf="true" data-offset-key="357:0" data-first-offset="true"><span 
data-slate-string="true">这种做法，就像前面故事中想要一本一本进行尝试的女生，显得低效且繁琐。而今天，我将扮演图书馆阿姨的角色，当然，不会像故事中的阿姨一样，犯了前提条件没有搞清的错误，去给你讲一种更高效的方法！</span></span></span> 
</div> <h2 class="se-08d9d651" data-slate-type="heading" data-slate-object="block" data-key="358"><span 
data-slate-object="text" data-key="359"><span data-slate-leaf="true" data-offset-key="359:0" 
data-first-offset="true"><span data-slate-string="true">必知必会，查缺补漏</span></span></span></h2> 
<h4 class="se-e2dcc64e" data-slate-type="heading" data-slate-object="block" data-key="360"><span 
data-slate-object="text" data-key="361"><span data-slate-leaf="true" data-offset-key="361:0" 
data-first-offset="true"><span data-slate-string="true">1. 二分查找算法基础</span></span></span></h4> 
<div class="se-7e9ffd34 " data-slate-type="paragraph" data-slate-object="block" data-key="362"> 
<span data-slate-object="text" data-key="363"><span data-slate-leaf="true" data-offset-key="363:0" 
data-first-offset="true"><span data-slate-string="true">最简单的二分算法的形式，就是在一个有序数组中，查找一个数字 x 是否存在。而二分算法，就是要基于这种有序性，才能对原问题进行加速求解。</span></span></span> 
</div> <div class="se-af7693bc " data-slate-type="paragraph" data-slate-object="block" data-key="364"> 
<span data-slate-object="text" data-key="365"><span data-slate-leaf="true" data-offset-key="365:0" 
data-first-offset="true"><span data-slate-string="true">我们先来思考，如何在一个数组中查找一个数字 x，最直接的方法，就是从头到尾一个一个找，找到了就是有数字 
x，找不到就是没有数字 x。</span></span></span> </div> <div class="se-70c440d9 " data-slate-type="paragraph" 
data-slate-object="block" data-key="366"> <span data-slate-object="text" data-key="367"><span 
data-slate-leaf="true" data-offset-key="367:0" data-first-offset="true"><span data-slate-string="true">而二分算法呢，是确定一个查找区间，然后从查找区间的一半处，与 
x 进行比较，如果中间的数字比 x 大，说明 x 在前半段，就把后半段扔掉；如果比 x 小，就把前半段扔掉，继续在后半段区间内查找。你会发现，二分查找的过程，每一次比较，都会使区间减少一半，对于一个大小为 
n 的区间，我们只需要 </span></span></span><span class="se-873bfe8e se-5c4df624" data-slate-type="inline-katex" 
data-slate-object="inline" data-key="368"><span data-slate-leaf="true"><span data-slate-string="true" 
class="katex"><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" 
style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span 
class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">o</span><span 
class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="msupsub"><span 
class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span 
style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" 
style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord 
mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span 
class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span><span 
class="mord"><span class="mord mathdefault">n</span></span></span></span></span></span></span><span 
data-slate-object="text" data-key="370"><span data-slate-leaf="true" data-offset-key="370:0" 
data-first-offset="true"><span data-slate-string="true"> 次比较操作即可确定结果。</span></span></span> 
</div> <div class="se-456fc18d " data-slate-type="paragraph" data-slate-object="block" data-key="371"> 
<span data-slate-object="text" data-key="372"><span data-slate-leaf="true" data-offset-key="372:0" 
data-first-offset="true"><span data-slate-string="true">具体的过程呢，如下图所示：</span></span></span> 
</div> <div class="se-d610ea86" data-slate-type="image" data-slate-object="block" data-key="373"> 
<img class="se-3a9e9ab5" src="https://static001.geekbang.org/resource/image/9a/80/9afee42d2620c807f2dfc1507e349480.jpg"> 
<div class="se-82c7bee1"> 图2： 二分查找算法示意图 </div> </div> <div class="se-faa145df " data-slate-type="paragraph" 
data-slate-object="block" data-key="374"> <span data-slate-object="text" data-key="375"><span 
data-slate-leaf="true" data-offset-key="375:0" data-first-offset="true"><span data-slate-string="true">图中呢，我们以查找 
17 这个数字为例，L 和 R 所圈定的，就是当前的查找区间，一开始 L = 0，R = 6，mid 所指向的就是数组的中间位置，根据 L 和 R 计算得到 mid 的值是 3。查看数组第 
3 位的值是 12，比待查找值 17 要小，说明如果 17 在这个有序数组中，那它一定在 mid 所指向位置的后面，而 mid 本身所指向的数字已经确定不是 17 了，所以下一次我们可以将查找区间，定位到 
mid + 1 到 R，也就是将 L 调整到 mid + 1 （即数组第 4 位）的位置。</span></span></span> </div> <div class="se-37ca6ad4 
" data-slate-type="paragraph" data-slate-object="block" data-key="376"> <span data-slate-object="text" 
data-key="377"><span data-slate-leaf="true" data-offset-key="377:0" data-first-offset="true"><span 
data-slate-string="true">理解二分查找的过程，首先要理解二分查找是怎么保证查找过程正确性的。中心思想就一个：</span></span></span><span 
data-slate-object="text" data-key="378"><span data-slate-leaf="true" data-offset-key="378:0" 
data-first-offset="true"><span class="se-7a0f78a4" data-slate-type="bold" data-slate-object="mark"><span 
data-slate-string="true">不管如何调整区间，都要保证待查找数字，总是落在我们的由 L 和 R 标记的查找区间内部</span></span></span></span><span 
data-slate-object="text" data-key="379"><span data-slate-leaf="true" data-offset-key="379:0" 
data-first-offset="true"><span data-slate-string="true">。而二分查找，实际上“二分”的就是查找范围。这个过程，就像警察排查犯罪嫌疑人一样，通过一些特定的条件，快速地缩小范围，并锁定真正的罪犯。</span></span></span> 
</div> <div class="se-68b3d446 " data-slate-type="paragraph" data-slate-object="block" data-key="380"> 
<span data-slate-object="text" data-key="381"><span data-slate-leaf="true" data-offset-key="381:0" 
data-first-offset="true"><span data-slate-string="true">下面是一份二分查找的示例代码：</span></span></span> 
</div> <div class="se-1bf1fb11 se-151670c5" data-slate-type="pre" data-slate-object="block" 
data-key="382" data-code-language="cpp"> <div class="se-a9b10a62 se-4077c707"> <span></span> 
</div> <div class="se-207ee9a4"> <div class="se-1fe95f65 se-eb10198e" data-code-line-number="1"></div> 
<div class="se-1fe95f65 se-eb10198e" data-code-line-number="2"></div> <div class="se-1fe95f65 
se-eb10198e" data-code-line-number="3"></div> <div class="se-1fe95f65 se-eb10198e" data-code-line-number="4"></div> 
<div class="se-1fe95f65 se-eb10198e" data-code-line-number="5"></div> <div class="se-1fe95f65 
se-eb10198e" data-code-line-number="6"></div> <div class="se-1fe95f65 se-eb10198e" data-code-line-number="7"></div> 
<div class="se-1fe95f65 se-eb10198e" data-code-line-number="8"></div> <div class="se-1fe95f65 
se-eb10198e" data-code-line-number="9"></div> <div class="se-1fe95f65 se-eb10198e" data-code-line-number="10"></div> 
</div> <div class="se-1a3be193 ps"> <div class="se-cd1deb10 se-7bbbff4f" data-slate-type="code-line" 
data-slate-object="block" data-key="383"> <span data-slate-object="text" data-key="384"><span 
data-slate-leaf="true" data-offset-key="384:0" data-first-offset="true"><span class=" gkhl-keyword" 
data-slate-object="annotation" data-annotation-key="gkann_3499522702" data-annotation-type="annotation"><span 
class=" gkhl-function" data-slate-object="annotation" data-annotation-key="gkann_0015633488" 
data-annotation-type="annotation"><span data-slate-string="true">int</span></span></span></span><span 
data-slate-leaf="true" data-offset-key="384:1"><span class=" gkhl-function" data-slate-object="annotation" 
data-annotation-key="gkann_0015633488" data-annotation-type="annotation"><span data-slate-string="true"> 
</span></span></span><span data-slate-leaf="true" data-offset-key="384:2"><span class=" gkhl-title" 
data-slate-object="annotation" data-annotation-key="gkann_8272169037" data-annotation-type="annotation"><span 
class=" gkhl-function" data-slate-object="annotation" data-annotation-key="gkann_0015633488" 
data-annotation-type="annotation"><span data-slate-string="true">binary_search</span></span></span></span><span 
data-slate-leaf="true" data-offset-key="384:3"><span class=" gkhl-params" data-slate-object="annotation" 
data-annotation-key="gkann_8696522015" data-annotation-type="annotation"><span class=" gkhl-function" 
data-slate-object="annotation" data-annotation-key="gkann_0015633488" data-annotation-type="annotation"><span 
data-slate-string="true">(int *arr, int n, int x)</span></span></span></span><span data-slate-leaf="true" 
data-offset-key="384:4"><span class=" gkhl-function" data-slate-object="annotation" data-annotation-key="gkann_0015633488" 
data-annotation-type="annotation"><span data-slate-string="true"> </span></span></span><span 
data-slate-leaf="true" data-offset-key="384:5"><span data-slate-string="true">{</span></span></span> 
</div> <div class="se-cd1deb10 se-7bbbff4f" data-slate-type="code-line" data-slate-object="block" 
data-key="385"> <span data-slate-object="text" data-key="386"><span data-slate-leaf="true" 
data-offset-key="386:0" data-first-offset="true"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="386:1"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_8429522429" data-annotation-type="annotation"><span data-slate-string="true">int</span></span></span><span 
data-slate-leaf="true" data-offset-key="386:2"><span data-slate-string="true"> l = </span></span><span 
data-slate-leaf="true" data-offset-key="386:3"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_5281903224" data-annotation-type="annotation"><span data-slate-string="true">0</span></span></span><span 
data-slate-leaf="true" data-offset-key="386:4"><span data-slate-string="true">, r = n - </span></span><span 
data-slate-leaf="true" data-offset-key="386:5"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_5223757280" data-annotation-type="annotation"><span data-slate-string="true">1</span></span></span><span 
data-slate-leaf="true" data-offset-key="386:6"><span data-slate-string="true">, mid;</span></span></span> 
</div> <div class="se-cd1deb10 se-7bbbff4f" data-slate-type="code-line" data-slate-object="block" 
data-key="387"> <span data-slate-object="text" data-key="388"><span data-slate-leaf="true" 
data-offset-key="388:0" data-first-offset="true"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="388:1"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_9594009023" data-annotation-type="annotation"><span data-slate-string="true">while</span></span></span><span 
data-slate-leaf="true" data-offset-key="388:2"><span data-slate-string="true"> (l &lt;= r) 
{</span></span></span> </div> <div class="se-cd1deb10 se-7bbbff4f" data-slate-type="code-line" 
data-slate-object="block" data-key="389"> <span data-slate-object="text" data-key="390"><span 
data-slate-leaf="true" data-offset-key="390:0" data-first-offset="true"><span data-slate-string="true"> 
mid = (l + r) &gt;&gt; </span></span><span data-slate-leaf="true" data-offset-key="390:1"><span 
class=" gkhl-number" data-slate-object="annotation" data-annotation-key="gkann_5978968048" 
data-annotation-type="annotation"><span data-slate-string="true">1</span></span></span><span 
data-slate-leaf="true" data-offset-key="390:2"><span data-slate-string="true">; </span></span></span> 
</div> <div class="se-cd1deb10 se-7bbbff4f" data-slate-type="code-line" data-slate-object="block" 
data-key="391"> <span data-slate-object="text" data-key="392"><span data-slate-leaf="true" 
data-offset-key="392:0" data-first-offset="true"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="392:1"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_4637638139" data-annotation-type="annotation"><span data-slate-string="true">if</span></span></span><span 
data-slate-leaf="true" data-offset-key="392:2"><span data-slate-string="true"> (arr[mid] == 
x) </span></span><span data-slate-leaf="true" data-offset-key="392:3"><span class=" gkhl-keyword" 
data-slate-object="annotation" data-annotation-key="gkann_8326005867" data-annotation-type="annotation"><span 
data-slate-string="true">return</span></span></span><span data-slate-leaf="true" data-offset-key="392:4"><span 
data-slate-string="true"> mid;</span></span></span> </div> <div class="se-cd1deb10 se-7bbbff4f" 
data-slate-type="code-line" data-slate-object="block" data-key="393"> <span data-slate-object="text" 
data-key="394"><span data-slate-leaf="true" data-offset-key="394:0" data-first-offset="true"><span 
data-slate-string="true"> </span></span><span data-slate-leaf="true" data-offset-key="394:1"><span 
class=" gkhl-keyword" data-slate-object="annotation" data-annotation-key="gkann_0618869264" 
data-annotation-type="annotation"><span data-slate-string="true">if</span></span></span><span 
data-slate-leaf="true" data-offset-key="394:2"><span data-slate-string="true"> (arr[mid] &gt; 
x) r = mid - </span></span><span data-slate-leaf="true" data-offset-key="394:3"><span class=" 
gkhl-number" data-slate-object="annotation" data-annotation-key="gkann_5660802432" data-annotation-type="annotation"><span 
data-slate-string="true">1</span></span></span><span data-slate-leaf="true" data-offset-key="394:4"><span 
data-slate-string="true">;</span></span></span> </div> <div class="se-cd1deb10 se-7bbbff4f" 
data-slate-type="code-line" data-slate-object="block" data-key="395"> <span data-slate-object="text" 
data-key="396"><span data-slate-leaf="true" data-offset-key="396:0" data-first-offset="true"><span 
data-slate-string="true"> </span></span><span data-slate-leaf="true" data-offset-key="396:1"><span 
class=" gkhl-keyword" data-slate-object="annotation" data-annotation-key="gkann_9372560276" 
data-annotation-type="annotation"><span data-slate-string="true">else</span></span></span><span 
data-slate-leaf="true" data-offset-key="396:2"><span data-slate-string="true"> l = mid + </span></span><span 
data-slate-leaf="true" data-offset-key="396:3"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_6175003917" data-annotation-type="annotation"><span data-slate-string="true">1</span></span></span><span 
data-slate-leaf="true" data-offset-key="396:4"><span data-slate-string="true">;</span></span></span> 
</div> <div class="se-cd1deb10 se-7bbbff4f" data-slate-type="code-line" data-slate-object="block" 
data-key="397"> <span data-slate-object="text" data-key="398"><span data-slate-leaf="true" 
data-offset-key="398:0" data-first-offset="true"><span data-slate-string="true"> }</span></span></span> 
</div> <div class="se-cd1deb10 se-7bbbff4f" data-slate-type="code-line" data-slate-object="block" 
data-key="399"> <span data-slate-object="text" data-key="400"><span data-slate-leaf="true" 
data-offset-key="400:0" data-first-offset="true"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="400:1"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_8195418861" data-annotation-type="annotation"><span data-slate-string="true">return</span></span></span><span 
data-slate-leaf="true" data-offset-key="400:2"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="400:3"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_1393116665" data-annotation-type="annotation"><span data-slate-string="true">-1</span></span></span><span 
data-slate-leaf="true" data-offset-key="400:4"><span data-slate-string="true">;</span></span></span> 
</div> <div class="se-cd1deb10 se-7bbbff4f" data-slate-type="code-line" data-slate-object="block" 
data-key="401"> <span data-slate-object="text" data-key="402"><span data-slate-leaf="true" 
data-offset-key="402:0" data-first-offset="true"><span data-slate-string="true">}</span></span></span> 
</div> <div class="ps__rail-x" style="left: 0px; bottom: 0px;"> <div class="ps__thumb-x" tabindex="0" 
style="left: 0px; width: 0px;"></div> </div> <div class="ps__rail-y" style="top: 0px; right: 
0px;"> <div class="ps__thumb-y" tabindex="0" style="top: 0px; height: 0px;"></div> </div> </div> 
</div> <div class="se-1d18b8e2 " data-slate-type="paragraph" data-slate-object="block" data-key="403"> 
<span data-slate-object="text" data-key="404"><span data-slate-leaf="true" data-offset-key="404:0" 
data-first-offset="true"><span data-slate-string="true">如代码所示，binary_search 函数传入三个参数，分别代表有序数组 
arr，数组长度 n 和待查找数字 x。如果在数组中存在数字 x，函数将返回 x 数字的下标，否则就会返回 -1，代表数组中不存在数字 x。</span></span></span> 
</div> <div class="se-02c57718 " data-slate-type="paragraph" data-slate-object="block" data-key="405"> 
<span data-slate-object="text" data-key="406"><span data-slate-leaf="true" data-offset-key="406:0" 
data-first-offset="true"><span data-slate-string="true">你会看到，函数中有一个 while 循环，循环的执行条件是 l &lt;= 
r，意味着待查找区间不为空。每次循环开始的时候，都是先通过 l 和 r 的值，计算得到一个中间位置的下标 mid 值，然后比较 mid 位置的值与 x 的大小关系，从而确定区间调整策略。</span></span></span> 
</div> <div class="se-ba6cb33d " data-slate-type="paragraph" data-slate-object="block" data-key="407"> 
<span data-slate-object="text" data-key="408"><span data-slate-leaf="true" data-offset-key="408:0" 
data-first-offset="true"><span data-slate-string="true">如果 arr[mid] 大于 x，说明 x 值在区间的前半段，那么 mid 
及 mid 位置以后的值，就不在下一次查找的范围之内了，我们就把区间的尾部位置 r 向前移动，移动到 mid - 1 位。arr[mid] 小于 x 时候的调整策略与之类似。</span></span></span> 
</div> <div class="se-0aa3b42d " data-slate-type="paragraph" data-slate-object="block" data-key="409"> 
<span data-slate-object="text" data-key="410"><span data-slate-leaf="true" data-offset-key="410:0" 
data-first-offset="true"><span data-slate-string="true">至此，我们就学习完了基础的二分查找算法。</span></span></span> 
</div> <h4 class="se-bb21508d" data-slate-type="heading" data-slate-object="block" data-key="411"><span 
data-slate-object="text" data-key="412"><span data-slate-leaf="true" data-offset-key="412:0" 
data-first-offset="true"><span data-slate-string="true">2. 二分答案的基本思路</span></span></span></h4> 
<div class="se-01acf7ca " data-slate-type="paragraph" data-slate-object="block" data-key="413"> 
<span data-slate-object="text" data-key="414"><span data-slate-leaf="true" data-offset-key="414:0" 
data-first-offset="true"><span data-slate-string="true">其实二分查找的算法思想，最有价值的部分，不是刚才讲的有序数组查找问题。而是由其衍生出来的叫做“二分答案”的思想。</span></span></span> 
</div> <div class="se-c547e7f0 " data-slate-type="paragraph" data-slate-object="block" data-key="415"> 
<span data-slate-object="text" data-key="416"><span data-slate-leaf="true" data-offset-key="416:0" 
data-first-offset="true"><span data-slate-string="true">关于二分答案的思想，你可以先回想一下，我们是如何介绍数组与函数的关系的？我们说：数组和函数本质上做的都是映射，函数是压缩的数组，数组是展开的函数。</span></span></span> 
</div> <div class="se-80daeb7a " data-slate-type="paragraph" data-slate-object="block" data-key="417"> 
<span data-slate-object="text" data-key="418"><span data-slate-leaf="true" data-offset-key="418:0" 
data-first-offset="true"><span data-slate-string="true">我们沿着函数和数组的关系，回头再看看二分查找的代码，你会发现二分查找是在一个有序数组中，确定某一位为待查找值的位置，也就是 
arr[x] = y，给定待查找 y 值，确定 x 值。对于这个有序数组，我们可以看成是一个单调函数，而对于这个 arr[x] = y 中去确定 x 值的过程，可以看成是对单调函数 
f(x) = y 进行求解的过程。</span></span></span> </div> <div class="se-426a3dd4 " data-slate-type="paragraph" 
data-slate-object="block" data-key="419"> <span data-slate-object="text" data-key="420"><span 
data-slate-leaf="true" data-offset-key="420:0" data-first-offset="true"><span data-slate-string="true">如何判断，什么场景下需要使用二分思想对问题求解呢？其实，二分能解决的问题，还是比较有代表性的，基本需要满足如下两点：</span></span></span> 
</div> <div class="se-c8977882" data-slate-type="list" data-slate-object="block" data-key="421"> 
<div class="se-8ded1bcd" data-slate-type="list-line" data-slate-object="block" data-key="422"> 
<div class="se-c4c19cc9 se-313657a7" data-code-line-number="1"></div> <div class="se-0fcb1da3"> 
<span data-slate-object="text" data-key="423"><span data-slate-leaf="true" data-offset-key="423:0" 
data-first-offset="true"><span data-slate-string="true">f(x) 是一个单调函数。</span></span></span> 
</div> </div> <div class="se-3f4765c0" data-slate-type="list-line" data-slate-object="block" 
data-key="424"> <div class="se-e37c8805 se-283538e9" data-code-line-number="2"></div> <div 
class="se-981e9f50"> <span data-slate-object="text" data-key="425"><span data-slate-leaf="true" 
data-offset-key="425:0" data-first-offset="true"><span data-slate-string="true">f(x) = y 函数，由 
x 确定 y 值比较简单，而由 y 值确定 x 就比较困难。</span></span></span> </div> </div> </div> <div class="se-fc1cf406 
" data-slate-type="paragraph" data-slate-object="block" data-key="426"> <span data-slate-object="text" 
data-key="427"><span data-slate-leaf="true" data-offset-key="427:0" data-first-offset="true"><span 
data-slate-string="true">关于第一点，我就不做过多解释了。至于第二点，你可以参考有序数组那个例子，对于数组来说，arr[x] = y，给定数组下标 x，确定值 
y，这个过程对于计算机来说很容易，可给定 y 值，确定 y 值所在的下标 x，这个过程就不太容易了。所以，我们使用了二分查找算法。</span></span></span> </div> 
<div class="se-dc21fcba " data-slate-type="paragraph" data-slate-object="block" data-key="428"> 
<span data-slate-object="text" data-key="429"><span data-slate-leaf="true" data-offset-key="429:0" 
data-first-offset="true"><span data-slate-string="true">总地来说，</span></span></span><span data-slate-object="text" 
data-key="430"><span data-slate-leaf="true" data-offset-key="430:0" data-first-offset="true"><span 
class="se-9c2a3cba" data-slate-type="bold" data-slate-object="mark"><span data-slate-string="true">二分答案就是把二分查找过程中的数组换成了函数</span></span></span></span><span 
data-slate-object="text" data-key="431"><span data-slate-leaf="true" data-offset-key="431:0" 
data-first-offset="true"><span data-slate-string="true">。关于二分答案的知识，你先理解思想，接下来我会用具体例子来给你展示。</span></span></span> 
</div> <h2 class="se-d22f1901" data-slate-type="heading" data-slate-object="block" data-key="432"><span 
data-slate-object="text" data-key="433"><span data-slate-leaf="true" data-offset-key="433:0" 
data-first-offset="true"><span data-slate-string="true">一起动手，搞事情</span></span></span></h2> 
<div class="se-db2b110c " data-slate-type="paragraph" data-slate-object="block" data-key="434"> 
<span data-slate-object="text" data-key="435"><span data-slate-leaf="true" data-offset-key="435:0" 
data-first-offset="true"><span data-slate-string="true">今天给你留的作业题呢，是一个我们大家普遍都比较关心的问题，与计算工资有关系。下表是“个人所得税缴纳税率表”的一部分：</span></span></span> 
</div> <div class="se-446379c6" data-slate-type="image" data-slate-object="block" data-key="436"></div> 
</div>', body_summary='', bundle='book', delta=0, body_format='full_html', langcode='zh-hans', 
revision_id=759 where entity_id=759 
 {executed in 4 msec}
2020-11-24 18:27:13.827 INFO  jdbc.sqltiming Line:373 - update node_revision__body set body_value='<div data-slate-editor="true" data-key="332" autocorrect="off" 
spellcheck="false" data-gramm="false" style="outline: none; white-space: pre-wrap; overflow-wrap: 
break-word;"> <div class="se-643b8566 " data-slate-type="paragraph" data-slate-object="block" 
data-key="333"> <span data-slate-object="text" data-key="334"><span data-slate-leaf="true" 
data-offset-key="334:0" data-first-offset="true"><span data-slate-string="true">你好，我是胡光，欢迎回来。</span></span></span> 
</div> <div class="se-7bc1ad8b " data-slate-type="paragraph" data-slate-object="block" data-key="335"> 
<span data-slate-object="text" data-key="336"><span data-slate-leaf="true" data-offset-key="336:0" 
data-first-offset="true"><span data-slate-string="true">上节课，我们讲了链表的基础结构，以及体会了一把链表结构在思维逻辑层面的作用，就是面对看似复杂的问题，当我们把它转换成链表结构思维去解决的时候，这些问题和困难都迎刃而解。</span></span></span> 
</div> <div class="se-e6f0e47b " data-slate-type="paragraph" data-slate-object="block" data-key="337"> 
<span data-slate-object="text" data-key="338"><span data-slate-leaf="true" data-offset-key="338:0" 
data-first-offset="true"><span data-slate-string="true">今天呢，我将带你学习一种简单、有趣且高效的算法，叫做二分查找。在学习二分查找之前呢，有一个关于二分查找的笑话，你必须知道。</span></span></span> 
</div> <div class="se-2fdb3d0b " data-slate-type="paragraph" data-slate-object="block" data-key="339"> 
<span data-slate-object="text" data-key="340"><span data-slate-leaf="true" data-offset-key="340:0" 
data-first-offset="true"><span data-slate-string="true">话说，在学校图书馆的计算机科学相关书籍借阅区里面，有一个女生抱着 40 
本书往外走，经过图书馆安检机器的时候，安检机器发出了警报声。这时候，女生很无奈，就把书放到了地上，准备一本一本地去试，看看究竟是哪一本书没有消磁。</span></span></span> 
</div> <div class="se-da2f30c9 " data-slate-type="paragraph" data-slate-object="block" data-key="341"> 
<span data-slate-object="text" data-key="342"><span data-slate-leaf="true" data-offset-key="342:0" 
data-first-offset="true"><span data-slate-string="true">女生的举动，被旁边图书馆管理员阿姨看到了，阿姨看不下去了，叫住了她，说：这么一本一本的尝试，多慢啊！我教你一种方法。眼看阿姨将书分成两摞，拿起其中一摞的书，过了一下安检，安检机器响了，阿姨就又将这摞书分成了两部分，拿出其中一部分又过了一次安检……就这样，阿姨每次将书的数量减少一半，没几次就找到了那本没有消磁的书。阿姨得意洋洋地说：小姑娘，这就是书中讲的二分查找算法，你这专业知识不过关啊！次日，图书馆发现，丢了 
39 本书。</span></span></span> </div> <div class="se-e00a66c3 " data-slate-type="paragraph" data-slate-object="block" 
data-key="343"> <span data-slate-object="text" data-key="344"><span data-slate-leaf="true" 
data-offset-key="344:0" data-first-offset="true"><span data-slate-string="true">上面这个故事中的阿姨，虽然知道二分查找算法，可明显是对使用算法的前提条件没有搞清楚。今天，我教给你的不仅是二分查找算法本身，还希望你能准确搞清楚二分查找算法的使用场景。</span></span></span> 
</div> <h2 class="se-17e3f750" data-slate-type="heading" data-slate-object="block" data-key="345"><span 
data-slate-object="text" data-key="346"><span data-slate-leaf="true" data-offset-key="346:0" 
data-first-offset="true"><span data-slate-string="true">今日任务</span></span></span></h2> <div 
class="se-e77cffac " data-slate-type="paragraph" data-slate-object="block" data-key="347"> 
<span data-slate-object="text" data-key="348"><span data-slate-leaf="true" data-offset-key="348:0" 
data-first-offset="true"><span data-slate-string="true">在正式开始今天课程之前呢，先来看一下今天这 10 分钟的任务吧。</span></span></span> 
</div> <div class="se-f3e0ffd1 " data-slate-type="paragraph" data-slate-object="block" data-key="349"> 
<span data-slate-object="text" data-key="350"><span data-slate-leaf="true" data-offset-key="350:0" 
data-first-offset="true"><span data-slate-string="true">假设你手上有 n 段长度不等的绳子，你现在想将这些绳子进行裁剪，裁剪出 
k 条长度相等的绳子，注意，只能剪断绳子，不能拼接绳子。问题就是，你能得到的这 k 段绳子的最长长度是多长？</span></span></span> </div> <div class="se-3d43c272" 
data-slate-type="image" data-slate-object="block" data-key="351"> <img class="se-bf18eaba" 
src="https://static001.geekbang.org/resource/image/72/41/72e13fc8a526d82a6f700892ea294741.jpg"> 
<div class="se-4722953c"> 图1： 切绳子任务示意图 </div> </div> <div class="se-3fe1561d " data-slate-type="paragraph" 
data-slate-object="block" data-key="352"> <span data-slate-object="text" data-key="353"><span 
data-slate-leaf="true" data-offset-key="353:0" data-first-offset="true"><span data-slate-string="true">如图所示，如果你手中有 
3 条绳子，分别是 4 米、6 米 和 5 米，想要切出等长的 4 段，你会发现，每段最长就是 3 米。</span></span></span> </div> <div class="se-484a56ee 
" data-slate-type="paragraph" data-slate-object="block" data-key="354"> <span data-slate-object="text" 
data-key="355"><span data-slate-leaf="true" data-offset-key="355:0" data-first-offset="true"><span 
data-slate-string="true">那么我们是如何得到“每段最长就是 3 米”这个答案的呢？当然，你可以采用枚举法，就是先尝试能不能切出至少 4 段的 1 米长绳子，如果可以的话，再去尝试每段长度 
2 米是否可行，依次尝试下去，直到尝试不下去为止。最后一次尝试可行的长度，就是每段绳子的最长长度了。</span></span></span> </div> <div class="se-594dc7f0 
" data-slate-type="paragraph" data-slate-object="block" data-key="356"> <span data-slate-object="text" 
data-key="357"><span data-slate-leaf="true" data-offset-key="357:0" data-first-offset="true"><span 
data-slate-string="true">这种做法，就像前面故事中想要一本一本进行尝试的女生，显得低效且繁琐。而今天，我将扮演图书馆阿姨的角色，当然，不会像故事中的阿姨一样，犯了前提条件没有搞清的错误，去给你讲一种更高效的方法！</span></span></span> 
</div> <h2 class="se-08d9d651" data-slate-type="heading" data-slate-object="block" data-key="358"><span 
data-slate-object="text" data-key="359"><span data-slate-leaf="true" data-offset-key="359:0" 
data-first-offset="true"><span data-slate-string="true">必知必会，查缺补漏</span></span></span></h2> 
<h4 class="se-e2dcc64e" data-slate-type="heading" data-slate-object="block" data-key="360"><span 
data-slate-object="text" data-key="361"><span data-slate-leaf="true" data-offset-key="361:0" 
data-first-offset="true"><span data-slate-string="true">1. 二分查找算法基础</span></span></span></h4> 
<div class="se-7e9ffd34 " data-slate-type="paragraph" data-slate-object="block" data-key="362"> 
<span data-slate-object="text" data-key="363"><span data-slate-leaf="true" data-offset-key="363:0" 
data-first-offset="true"><span data-slate-string="true">最简单的二分算法的形式，就是在一个有序数组中，查找一个数字 x 是否存在。而二分算法，就是要基于这种有序性，才能对原问题进行加速求解。</span></span></span> 
</div> <div class="se-af7693bc " data-slate-type="paragraph" data-slate-object="block" data-key="364"> 
<span data-slate-object="text" data-key="365"><span data-slate-leaf="true" data-offset-key="365:0" 
data-first-offset="true"><span data-slate-string="true">我们先来思考，如何在一个数组中查找一个数字 x，最直接的方法，就是从头到尾一个一个找，找到了就是有数字 
x，找不到就是没有数字 x。</span></span></span> </div> <div class="se-70c440d9 " data-slate-type="paragraph" 
data-slate-object="block" data-key="366"> <span data-slate-object="text" data-key="367"><span 
data-slate-leaf="true" data-offset-key="367:0" data-first-offset="true"><span data-slate-string="true">而二分算法呢，是确定一个查找区间，然后从查找区间的一半处，与 
x 进行比较，如果中间的数字比 x 大，说明 x 在前半段，就把后半段扔掉；如果比 x 小，就把前半段扔掉，继续在后半段区间内查找。你会发现，二分查找的过程，每一次比较，都会使区间减少一半，对于一个大小为 
n 的区间，我们只需要 </span></span></span><span class="se-873bfe8e se-5c4df624" data-slate-type="inline-katex" 
data-slate-object="inline" data-key="368"><span data-slate-leaf="true"><span data-slate-string="true" 
class="katex"><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" 
style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span 
class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">o</span><span 
class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="msupsub"><span 
class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span 
style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" 
style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord 
mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span 
class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span><span 
class="mord"><span class="mord mathdefault">n</span></span></span></span></span></span></span><span 
data-slate-object="text" data-key="370"><span data-slate-leaf="true" data-offset-key="370:0" 
data-first-offset="true"><span data-slate-string="true"> 次比较操作即可确定结果。</span></span></span> 
</div> <div class="se-456fc18d " data-slate-type="paragraph" data-slate-object="block" data-key="371"> 
<span data-slate-object="text" data-key="372"><span data-slate-leaf="true" data-offset-key="372:0" 
data-first-offset="true"><span data-slate-string="true">具体的过程呢，如下图所示：</span></span></span> 
</div> <div class="se-d610ea86" data-slate-type="image" data-slate-object="block" data-key="373"> 
<img class="se-3a9e9ab5" src="https://static001.geekbang.org/resource/image/9a/80/9afee42d2620c807f2dfc1507e349480.jpg"> 
<div class="se-82c7bee1"> 图2： 二分查找算法示意图 </div> </div> <div class="se-faa145df " data-slate-type="paragraph" 
data-slate-object="block" data-key="374"> <span data-slate-object="text" data-key="375"><span 
data-slate-leaf="true" data-offset-key="375:0" data-first-offset="true"><span data-slate-string="true">图中呢，我们以查找 
17 这个数字为例，L 和 R 所圈定的，就是当前的查找区间，一开始 L = 0，R = 6，mid 所指向的就是数组的中间位置，根据 L 和 R 计算得到 mid 的值是 3。查看数组第 
3 位的值是 12，比待查找值 17 要小，说明如果 17 在这个有序数组中，那它一定在 mid 所指向位置的后面，而 mid 本身所指向的数字已经确定不是 17 了，所以下一次我们可以将查找区间，定位到 
mid + 1 到 R，也就是将 L 调整到 mid + 1 （即数组第 4 位）的位置。</span></span></span> </div> <div class="se-37ca6ad4 
" data-slate-type="paragraph" data-slate-object="block" data-key="376"> <span data-slate-object="text" 
data-key="377"><span data-slate-leaf="true" data-offset-key="377:0" data-first-offset="true"><span 
data-slate-string="true">理解二分查找的过程，首先要理解二分查找是怎么保证查找过程正确性的。中心思想就一个：</span></span></span><span 
data-slate-object="text" data-key="378"><span data-slate-leaf="true" data-offset-key="378:0" 
data-first-offset="true"><span class="se-7a0f78a4" data-slate-type="bold" data-slate-object="mark"><span 
data-slate-string="true">不管如何调整区间，都要保证待查找数字，总是落在我们的由 L 和 R 标记的查找区间内部</span></span></span></span><span 
data-slate-object="text" data-key="379"><span data-slate-leaf="true" data-offset-key="379:0" 
data-first-offset="true"><span data-slate-string="true">。而二分查找，实际上“二分”的就是查找范围。这个过程，就像警察排查犯罪嫌疑人一样，通过一些特定的条件，快速地缩小范围，并锁定真正的罪犯。</span></span></span> 
</div> <div class="se-68b3d446 " data-slate-type="paragraph" data-slate-object="block" data-key="380"> 
<span data-slate-object="text" data-key="381"><span data-slate-leaf="true" data-offset-key="381:0" 
data-first-offset="true"><span data-slate-string="true">下面是一份二分查找的示例代码：</span></span></span> 
</div> <div class="se-1bf1fb11 se-151670c5" data-slate-type="pre" data-slate-object="block" 
data-key="382" data-code-language="cpp"> <div class="se-a9b10a62 se-4077c707"> <span></span> 
</div> <div class="se-207ee9a4"> <div class="se-1fe95f65 se-eb10198e" data-code-line-number="1"></div> 
<div class="se-1fe95f65 se-eb10198e" data-code-line-number="2"></div> <div class="se-1fe95f65 
se-eb10198e" data-code-line-number="3"></div> <div class="se-1fe95f65 se-eb10198e" data-code-line-number="4"></div> 
<div class="se-1fe95f65 se-eb10198e" data-code-line-number="5"></div> <div class="se-1fe95f65 
se-eb10198e" data-code-line-number="6"></div> <div class="se-1fe95f65 se-eb10198e" data-code-line-number="7"></div> 
<div class="se-1fe95f65 se-eb10198e" data-code-line-number="8"></div> <div class="se-1fe95f65 
se-eb10198e" data-code-line-number="9"></div> <div class="se-1fe95f65 se-eb10198e" data-code-line-number="10"></div> 
</div> <div class="se-1a3be193 ps"> <div class="se-cd1deb10 se-7bbbff4f" data-slate-type="code-line" 
data-slate-object="block" data-key="383"> <span data-slate-object="text" data-key="384"><span 
data-slate-leaf="true" data-offset-key="384:0" data-first-offset="true"><span class=" gkhl-keyword" 
data-slate-object="annotation" data-annotation-key="gkann_3499522702" data-annotation-type="annotation"><span 
class=" gkhl-function" data-slate-object="annotation" data-annotation-key="gkann_0015633488" 
data-annotation-type="annotation"><span data-slate-string="true">int</span></span></span></span><span 
data-slate-leaf="true" data-offset-key="384:1"><span class=" gkhl-function" data-slate-object="annotation" 
data-annotation-key="gkann_0015633488" data-annotation-type="annotation"><span data-slate-string="true"> 
</span></span></span><span data-slate-leaf="true" data-offset-key="384:2"><span class=" gkhl-title" 
data-slate-object="annotation" data-annotation-key="gkann_8272169037" data-annotation-type="annotation"><span 
class=" gkhl-function" data-slate-object="annotation" data-annotation-key="gkann_0015633488" 
data-annotation-type="annotation"><span data-slate-string="true">binary_search</span></span></span></span><span 
data-slate-leaf="true" data-offset-key="384:3"><span class=" gkhl-params" data-slate-object="annotation" 
data-annotation-key="gkann_8696522015" data-annotation-type="annotation"><span class=" gkhl-function" 
data-slate-object="annotation" data-annotation-key="gkann_0015633488" data-annotation-type="annotation"><span 
data-slate-string="true">(int *arr, int n, int x)</span></span></span></span><span data-slate-leaf="true" 
data-offset-key="384:4"><span class=" gkhl-function" data-slate-object="annotation" data-annotation-key="gkann_0015633488" 
data-annotation-type="annotation"><span data-slate-string="true"> </span></span></span><span 
data-slate-leaf="true" data-offset-key="384:5"><span data-slate-string="true">{</span></span></span> 
</div> <div class="se-cd1deb10 se-7bbbff4f" data-slate-type="code-line" data-slate-object="block" 
data-key="385"> <span data-slate-object="text" data-key="386"><span data-slate-leaf="true" 
data-offset-key="386:0" data-first-offset="true"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="386:1"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_8429522429" data-annotation-type="annotation"><span data-slate-string="true">int</span></span></span><span 
data-slate-leaf="true" data-offset-key="386:2"><span data-slate-string="true"> l = </span></span><span 
data-slate-leaf="true" data-offset-key="386:3"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_5281903224" data-annotation-type="annotation"><span data-slate-string="true">0</span></span></span><span 
data-slate-leaf="true" data-offset-key="386:4"><span data-slate-string="true">, r = n - </span></span><span 
data-slate-leaf="true" data-offset-key="386:5"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_5223757280" data-annotation-type="annotation"><span data-slate-string="true">1</span></span></span><span 
data-slate-leaf="true" data-offset-key="386:6"><span data-slate-string="true">, mid;</span></span></span> 
</div> <div class="se-cd1deb10 se-7bbbff4f" data-slate-type="code-line" data-slate-object="block" 
data-key="387"> <span data-slate-object="text" data-key="388"><span data-slate-leaf="true" 
data-offset-key="388:0" data-first-offset="true"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="388:1"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_9594009023" data-annotation-type="annotation"><span data-slate-string="true">while</span></span></span><span 
data-slate-leaf="true" data-offset-key="388:2"><span data-slate-string="true"> (l &lt;= r) 
{</span></span></span> </div> <div class="se-cd1deb10 se-7bbbff4f" data-slate-type="code-line" 
data-slate-object="block" data-key="389"> <span data-slate-object="text" data-key="390"><span 
data-slate-leaf="true" data-offset-key="390:0" data-first-offset="true"><span data-slate-string="true"> 
mid = (l + r) &gt;&gt; </span></span><span data-slate-leaf="true" data-offset-key="390:1"><span 
class=" gkhl-number" data-slate-object="annotation" data-annotation-key="gkann_5978968048" 
data-annotation-type="annotation"><span data-slate-string="true">1</span></span></span><span 
data-slate-leaf="true" data-offset-key="390:2"><span data-slate-string="true">; </span></span></span> 
</div> <div class="se-cd1deb10 se-7bbbff4f" data-slate-type="code-line" data-slate-object="block" 
data-key="391"> <span data-slate-object="text" data-key="392"><span data-slate-leaf="true" 
data-offset-key="392:0" data-first-offset="true"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="392:1"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_4637638139" data-annotation-type="annotation"><span data-slate-string="true">if</span></span></span><span 
data-slate-leaf="true" data-offset-key="392:2"><span data-slate-string="true"> (arr[mid] == 
x) </span></span><span data-slate-leaf="true" data-offset-key="392:3"><span class=" gkhl-keyword" 
data-slate-object="annotation" data-annotation-key="gkann_8326005867" data-annotation-type="annotation"><span 
data-slate-string="true">return</span></span></span><span data-slate-leaf="true" data-offset-key="392:4"><span 
data-slate-string="true"> mid;</span></span></span> </div> <div class="se-cd1deb10 se-7bbbff4f" 
data-slate-type="code-line" data-slate-object="block" data-key="393"> <span data-slate-object="text" 
data-key="394"><span data-slate-leaf="true" data-offset-key="394:0" data-first-offset="true"><span 
data-slate-string="true"> </span></span><span data-slate-leaf="true" data-offset-key="394:1"><span 
class=" gkhl-keyword" data-slate-object="annotation" data-annotation-key="gkann_0618869264" 
data-annotation-type="annotation"><span data-slate-string="true">if</span></span></span><span 
data-slate-leaf="true" data-offset-key="394:2"><span data-slate-string="true"> (arr[mid] &gt; 
x) r = mid - </span></span><span data-slate-leaf="true" data-offset-key="394:3"><span class=" 
gkhl-number" data-slate-object="annotation" data-annotation-key="gkann_5660802432" data-annotation-type="annotation"><span 
data-slate-string="true">1</span></span></span><span data-slate-leaf="true" data-offset-key="394:4"><span 
data-slate-string="true">;</span></span></span> </div> <div class="se-cd1deb10 se-7bbbff4f" 
data-slate-type="code-line" data-slate-object="block" data-key="395"> <span data-slate-object="text" 
data-key="396"><span data-slate-leaf="true" data-offset-key="396:0" data-first-offset="true"><span 
data-slate-string="true"> </span></span><span data-slate-leaf="true" data-offset-key="396:1"><span 
class=" gkhl-keyword" data-slate-object="annotation" data-annotation-key="gkann_9372560276" 
data-annotation-type="annotation"><span data-slate-string="true">else</span></span></span><span 
data-slate-leaf="true" data-offset-key="396:2"><span data-slate-string="true"> l = mid + </span></span><span 
data-slate-leaf="true" data-offset-key="396:3"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_6175003917" data-annotation-type="annotation"><span data-slate-string="true">1</span></span></span><span 
data-slate-leaf="true" data-offset-key="396:4"><span data-slate-string="true">;</span></span></span> 
</div> <div class="se-cd1deb10 se-7bbbff4f" data-slate-type="code-line" data-slate-object="block" 
data-key="397"> <span data-slate-object="text" data-key="398"><span data-slate-leaf="true" 
data-offset-key="398:0" data-first-offset="true"><span data-slate-string="true"> }</span></span></span> 
</div> <div class="se-cd1deb10 se-7bbbff4f" data-slate-type="code-line" data-slate-object="block" 
data-key="399"> <span data-slate-object="text" data-key="400"><span data-slate-leaf="true" 
data-offset-key="400:0" data-first-offset="true"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="400:1"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_8195418861" data-annotation-type="annotation"><span data-slate-string="true">return</span></span></span><span 
data-slate-leaf="true" data-offset-key="400:2"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="400:3"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_1393116665" data-annotation-type="annotation"><span data-slate-string="true">-1</span></span></span><span 
data-slate-leaf="true" data-offset-key="400:4"><span data-slate-string="true">;</span></span></span> 
</div> <div class="se-cd1deb10 se-7bbbff4f" data-slate-type="code-line" data-slate-object="block" 
data-key="401"> <span data-slate-object="text" data-key="402"><span data-slate-leaf="true" 
data-offset-key="402:0" data-first-offset="true"><span data-slate-string="true">}</span></span></span> 
</div> <div class="ps__rail-x" style="left: 0px; bottom: 0px;"> <div class="ps__thumb-x" tabindex="0" 
style="left: 0px; width: 0px;"></div> </div> <div class="ps__rail-y" style="top: 0px; right: 
0px;"> <div class="ps__thumb-y" tabindex="0" style="top: 0px; height: 0px;"></div> </div> </div> 
</div> <div class="se-1d18b8e2 " data-slate-type="paragraph" data-slate-object="block" data-key="403"> 
<span data-slate-object="text" data-key="404"><span data-slate-leaf="true" data-offset-key="404:0" 
data-first-offset="true"><span data-slate-string="true">如代码所示，binary_search 函数传入三个参数，分别代表有序数组 
arr，数组长度 n 和待查找数字 x。如果在数组中存在数字 x，函数将返回 x 数字的下标，否则就会返回 -1，代表数组中不存在数字 x。</span></span></span> 
</div> <div class="se-02c57718 " data-slate-type="paragraph" data-slate-object="block" data-key="405"> 
<span data-slate-object="text" data-key="406"><span data-slate-leaf="true" data-offset-key="406:0" 
data-first-offset="true"><span data-slate-string="true">你会看到，函数中有一个 while 循环，循环的执行条件是 l &lt;= 
r，意味着待查找区间不为空。每次循环开始的时候，都是先通过 l 和 r 的值，计算得到一个中间位置的下标 mid 值，然后比较 mid 位置的值与 x 的大小关系，从而确定区间调整策略。</span></span></span> 
</div> <div class="se-ba6cb33d " data-slate-type="paragraph" data-slate-object="block" data-key="407"> 
<span data-slate-object="text" data-key="408"><span data-slate-leaf="true" data-offset-key="408:0" 
data-first-offset="true"><span data-slate-string="true">如果 arr[mid] 大于 x，说明 x 值在区间的前半段，那么 mid 
及 mid 位置以后的值，就不在下一次查找的范围之内了，我们就把区间的尾部位置 r 向前移动，移动到 mid - 1 位。arr[mid] 小于 x 时候的调整策略与之类似。</span></span></span> 
</div> <div class="se-0aa3b42d " data-slate-type="paragraph" data-slate-object="block" data-key="409"> 
<span data-slate-object="text" data-key="410"><span data-slate-leaf="true" data-offset-key="410:0" 
data-first-offset="true"><span data-slate-string="true">至此，我们就学习完了基础的二分查找算法。</span></span></span> 
</div> <h4 class="se-bb21508d" data-slate-type="heading" data-slate-object="block" data-key="411"><span 
data-slate-object="text" data-key="412"><span data-slate-leaf="true" data-offset-key="412:0" 
data-first-offset="true"><span data-slate-string="true">2. 二分答案的基本思路</span></span></span></h4> 
<div class="se-01acf7ca " data-slate-type="paragraph" data-slate-object="block" data-key="413"> 
<span data-slate-object="text" data-key="414"><span data-slate-leaf="true" data-offset-key="414:0" 
data-first-offset="true"><span data-slate-string="true">其实二分查找的算法思想，最有价值的部分，不是刚才讲的有序数组查找问题。而是由其衍生出来的叫做“二分答案”的思想。</span></span></span> 
</div> <div class="se-c547e7f0 " data-slate-type="paragraph" data-slate-object="block" data-key="415"> 
<span data-slate-object="text" data-key="416"><span data-slate-leaf="true" data-offset-key="416:0" 
data-first-offset="true"><span data-slate-string="true">关于二分答案的思想，你可以先回想一下，我们是如何介绍数组与函数的关系的？我们说：数组和函数本质上做的都是映射，函数是压缩的数组，数组是展开的函数。</span></span></span> 
</div> <div class="se-80daeb7a " data-slate-type="paragraph" data-slate-object="block" data-key="417"> 
<span data-slate-object="text" data-key="418"><span data-slate-leaf="true" data-offset-key="418:0" 
data-first-offset="true"><span data-slate-string="true">我们沿着函数和数组的关系，回头再看看二分查找的代码，你会发现二分查找是在一个有序数组中，确定某一位为待查找值的位置，也就是 
arr[x] = y，给定待查找 y 值，确定 x 值。对于这个有序数组，我们可以看成是一个单调函数，而对于这个 arr[x] = y 中去确定 x 值的过程，可以看成是对单调函数 
f(x) = y 进行求解的过程。</span></span></span> </div> <div class="se-426a3dd4 " data-slate-type="paragraph" 
data-slate-object="block" data-key="419"> <span data-slate-object="text" data-key="420"><span 
data-slate-leaf="true" data-offset-key="420:0" data-first-offset="true"><span data-slate-string="true">如何判断，什么场景下需要使用二分思想对问题求解呢？其实，二分能解决的问题，还是比较有代表性的，基本需要满足如下两点：</span></span></span> 
</div> <div class="se-c8977882" data-slate-type="list" data-slate-object="block" data-key="421"> 
<div class="se-8ded1bcd" data-slate-type="list-line" data-slate-object="block" data-key="422"> 
<div class="se-c4c19cc9 se-313657a7" data-code-line-number="1"></div> <div class="se-0fcb1da3"> 
<span data-slate-object="text" data-key="423"><span data-slate-leaf="true" data-offset-key="423:0" 
data-first-offset="true"><span data-slate-string="true">f(x) 是一个单调函数。</span></span></span> 
</div> </div> <div class="se-3f4765c0" data-slate-type="list-line" data-slate-object="block" 
data-key="424"> <div class="se-e37c8805 se-283538e9" data-code-line-number="2"></div> <div 
class="se-981e9f50"> <span data-slate-object="text" data-key="425"><span data-slate-leaf="true" 
data-offset-key="425:0" data-first-offset="true"><span data-slate-string="true">f(x) = y 函数，由 
x 确定 y 值比较简单，而由 y 值确定 x 就比较困难。</span></span></span> </div> </div> </div> <div class="se-fc1cf406 
" data-slate-type="paragraph" data-slate-object="block" data-key="426"> <span data-slate-object="text" 
data-key="427"><span data-slate-leaf="true" data-offset-key="427:0" data-first-offset="true"><span 
data-slate-string="true">关于第一点，我就不做过多解释了。至于第二点，你可以参考有序数组那个例子，对于数组来说，arr[x] = y，给定数组下标 x，确定值 
y，这个过程对于计算机来说很容易，可给定 y 值，确定 y 值所在的下标 x，这个过程就不太容易了。所以，我们使用了二分查找算法。</span></span></span> </div> 
<div class="se-dc21fcba " data-slate-type="paragraph" data-slate-object="block" data-key="428"> 
<span data-slate-object="text" data-key="429"><span data-slate-leaf="true" data-offset-key="429:0" 
data-first-offset="true"><span data-slate-string="true">总地来说，</span></span></span><span data-slate-object="text" 
data-key="430"><span data-slate-leaf="true" data-offset-key="430:0" data-first-offset="true"><span 
class="se-9c2a3cba" data-slate-type="bold" data-slate-object="mark"><span data-slate-string="true">二分答案就是把二分查找过程中的数组换成了函数</span></span></span></span><span 
data-slate-object="text" data-key="431"><span data-slate-leaf="true" data-offset-key="431:0" 
data-first-offset="true"><span data-slate-string="true">。关于二分答案的知识，你先理解思想，接下来我会用具体例子来给你展示。</span></span></span> 
</div> <h2 class="se-d22f1901" data-slate-type="heading" data-slate-object="block" data-key="432"><span 
data-slate-object="text" data-key="433"><span data-slate-leaf="true" data-offset-key="433:0" 
data-first-offset="true"><span data-slate-string="true">一起动手，搞事情</span></span></span></h2> 
<div class="se-db2b110c " data-slate-type="paragraph" data-slate-object="block" data-key="434"> 
<span data-slate-object="text" data-key="435"><span data-slate-leaf="true" data-offset-key="435:0" 
data-first-offset="true"><span data-slate-string="true">今天给你留的作业题呢，是一个我们大家普遍都比较关心的问题，与计算工资有关系。下表是“个人所得税缴纳税率表”的一部分：</span></span></span> 
</div> <div class="se-446379c6" data-slate-type="image" data-slate-object="block" data-key="436"></div> 
</div>', body_summary='', bundle='book', delta=0, body_format='full_html', langcode='zh-hans', 
revision_id=759 where entity_id=759 
 {executed in 2 msec}
2020-11-24 18:27:13.834 INFO  jdbc.sqltiming Line:373 - select nodefiledd0_.nid as nid1_10_, nodefiledd0_.changed as changed2_10_, nodefiledd0_.created 
as created3_10_, nodefiledd0_.default_langcode as default_4_10_, nodefiledd0_.langcode as langcode5_10_, 
nodefiledd0_.promote as promote6_10_, nodefiledd0_.revision_translation_affected as revision7_10_, 
nodefiledd0_.status as status8_10_, nodefiledd0_.sticky as sticky9_10_, nodefiledd0_.title 
as title10_10_, nodefiledd0_.type as type11_10_, nodefiledd0_.uid as uid12_10_, nodefiledd0_.vid 
as vid13_10_ from node_field_data nodefiledd0_ where nodefiledd0_.nid=759 
 {executed in 1 msec}
2020-11-24 18:27:13.834 INFO  jdbc.resultsettable Line:610 - 
|----|-----------|-----------|-----------------|---------|--------|------------------------------|-------|-------|------------------|-----|----|----|
|nid |changed    |created    |default_langcode |langcode |promote |revision_translation_affected |status |sticky |title             |type |uid |vid |
|----|-----------|-----------|-----------------|---------|--------|------------------------------|-------|-------|------------------|-----|----|----|
|759 |1606117099 |1606117099 |1                |zh-hans  |0       |1                             |1      |0      |20丨二分查找：提升程序的查找效率 |book |1   |759 |
|----|-----------|-----------|-----------------|---------|--------|------------------------------|-------|-------|------------------|-----|----|----|

2020-11-24 18:27:13.835 INFO  jdbc.sqltiming Line:373 - select nodefieldr0_.nid as nid1_11_0_, nodefieldr0_.changed as changed2_11_0_, nodefieldr0_.created 
as created3_11_0_, nodefieldr0_.default_langcode as default_4_11_0_, nodefieldr0_.langcode 
as langcode5_11_0_, nodefieldr0_.promote as promote6_11_0_, nodefieldr0_.revision_translation_affected 
as revision7_11_0_, nodefieldr0_.status as status8_11_0_, nodefieldr0_.sticky as sticky9_11_0_, 
nodefieldr0_.title as title10_11_0_, nodefieldr0_.uid as uid11_11_0_, nodefieldr0_.vid as vid12_11_0_ 
from node_field_revision nodefieldr0_ where nodefieldr0_.nid=759 
 {executed in 0 msec}
2020-11-24 18:27:13.835 INFO  jdbc.resultsettable Line:610 - 
|---------|-----------|-----------|-----------------|---------|--------|------------------------------|-------|-------|------------------|----|----|
|nid      |changed    |created    |default_langcode |langcode |promote |revision_translation_affected |status |sticky |title             |uid |vid |
|---------|-----------|-----------|-----------------|---------|--------|------------------------------|-------|-------|------------------|----|----|
|[unread] |1606117099 |1606117099 |1                |zh-hans  |0       |1                             |1      |0      |20丨二分查找：提升程序的查找效率 |1   |759 |
|---------|-----------|-----------|-----------------|---------|--------|------------------------------|-------|-------|------------------|----|----|

2020-11-24 18:27:13.837 INFO  jdbc.sqltiming Line:373 - update node_field_data set changed=1606213633, created=1606213633, default_langcode=1, langcode='zh-hans', 
promote=0, revision_translation_affected=1, status=1, sticky=0, title='20丨二分查找：提升程序的查找效率', 
type='book', uid=1, vid=759 where nid=759 
 {executed in 0 msec}
2020-11-24 18:27:13.838 INFO  jdbc.sqltiming Line:373 - update node_field_revision set changed=1606213633, created=1606213633, default_langcode=1, 
langcode='zh-hans', promote=0, revision_translation_affected=1, status=1, sticky=0, title='20丨二分查找：提升程序的查找效率', 
uid=1, vid=759 where nid=759 
 {executed in 0 msec}
2020-11-24 18:27:13.842 INFO  jdbc.sqltiming Line:373 - select bookfieldm0_.entity_id as entity_i1_8_, bookfieldm0_.bundle as bundle2_8_, bookfieldm0_.delta 
as delta3_8_, bookfieldm0_.langcode as langcode4_8_, bookfieldm0_.field_media_value as field_me5_8_, 
bookfieldm0_.revision_id as revision6_8_ from node__field_media bookfieldm0_ where bookfieldm0_.entity_id=759 
 {executed in 1 msec}
2020-11-24 18:27:13.842 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------------|------------|
|entity_id |bundle |delta |langcode |field_media_value |revision_id |
|----------|-------|------|---------|------------------|------------|
|759       |book   |0     |zh-hans  |                  |759         |
|----------|-------|------|---------|------------------|------------|

2020-11-24 18:27:13.844 INFO  jdbc.sqltiming Line:373 - select nodefieldm0_.entity_id as entity_i1_17_0_, nodefieldm0_.bundle as bundle2_17_0_, nodefieldm0_.delta 
as delta3_17_0_, nodefieldm0_.langcode as langcode4_17_0_, nodefieldm0_.field_media_value as 
field_me5_17_0_, nodefieldm0_.revision_id as revision6_17_0_ from node_revision__field_media 
nodefieldm0_ where nodefieldm0_.entity_id=759 
 {executed in 0 msec}
2020-11-24 18:27:13.844 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------------|------------|
|entity_id |bundle |delta |langcode |field_media_value |revision_id |
|----------|-------|------|---------|------------------|------------|
|[unread]  |book   |0     |zh-hans  |                  |759         |
|----------|-------|------|---------|------------------|------------|

2020-11-24 18:27:13.846 INFO  jdbc.sqltiming Line:373 - select bookfieldc0_.entity_id as entity_i1_5_, bookfieldc0_.bundle as bundle2_5_, bookfieldc0_.field_comment_value 
as field_co3_5_, bookfieldc0_.delta as delta4_5_, bookfieldc0_.field_comment_format as field_co5_5_, 
bookfieldc0_.langcode as langcode6_5_, bookfieldc0_.revision_id as revision7_5_ from node__field_comment 
bookfieldc0_ where bookfieldc0_.entity_id=759 
 {executed in 0 msec}
2020-11-24 18:27:13.847 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|--------------------|------|---------------------|---------|------------|
|entity_id |bundle |field_comment_value |delta |field_comment_format |langcode |revision_id |
|----------|-------|--------------------|------|---------------------|---------|------------|
|759       |book   |                    |0     |full_html            |zh-hans  |759         |
|----------|-------|--------------------|------|---------------------|---------|------------|

2020-11-24 18:27:13.848 INFO  jdbc.sqltiming Line:373 - select nodefieldc0_.entity_id as entity_i1_14_0_, nodefieldc0_.bundle as bundle2_14_0_, nodefieldc0_.field_comment_value 
as field_co3_14_0_, nodefieldc0_.delta as delta4_14_0_, nodefieldc0_.field_comment_format as 
field_co5_14_0_, nodefieldc0_.langcode as langcode6_14_0_, nodefieldc0_.revision_id as revision7_14_0_ 
from node_revision__field_comment nodefieldc0_ where nodefieldc0_.entity_id=759 
 {executed in 0 msec}
2020-11-24 18:27:13.849 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|--------------------|------|---------------------|---------|------------|
|entity_id |bundle |field_comment_value |delta |field_comment_format |langcode |revision_id |
|----------|-------|--------------------|------|---------------------|---------|------------|
|[unread]  |book   |                    |0     |full_html            |zh-hans  |759         |
|----------|-------|--------------------|------|---------------------|---------|------------|

2020-11-24 18:27:13.851 INFO  jdbc.sqltiming Line:373 - select bookfieldt0_.entity_id as entity_i1_9_, bookfieldt0_.bundle as bundle2_9_, bookfieldt0_.delta 
as delta3_9_, bookfieldt0_.langcode as langcode4_9_, bookfieldt0_.revision_id as revision5_9_, 
bookfieldt0_.field_thumb_value as field_th6_9_ from node__field_thumb bookfieldt0_ where bookfieldt0_.entity_id=759 
 {executed in 1 msec}
2020-11-24 18:27:13.851 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------|------------------|
|entity_id |bundle |delta |langcode |revision_id |field_thumb_value |
|----------|-------|------|---------|------------|------------------|
|759       |book   |0     |zh-hans  |759         |                  |
|----------|-------|------|---------|------------|------------------|

2020-11-24 18:27:13.853 INFO  jdbc.sqltiming Line:373 - update node__field_thumb set bundle='book', delta=0, langcode='zh-hans', revision_id=759, field_thumb_value='https://static001.geekbang.org/resource/image/c6/5d/c69fb264a22db44923125501e13df35d.jpg' 
where entity_id=759 
 {executed in 0 msec}
2020-11-24 18:27:13.856 INFO  jdbc.sqltiming Line:373 - select nodefieldt0_.entity_id as entity_i1_18_0_, nodefieldt0_.bundle as bundle2_18_0_, nodefieldt0_.delta 
as delta3_18_0_, nodefieldt0_.langcode as langcode4_18_0_, nodefieldt0_.revision_id as revision5_18_0_, 
nodefieldt0_.field_thumb_value as field_th6_18_0_ from node_revision__field_thumb nodefieldt0_ 
where nodefieldt0_.entity_id=759 
 {executed in 0 msec}
2020-11-24 18:27:13.856 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------|------------------|
|entity_id |bundle |delta |langcode |revision_id |field_thumb_value |
|----------|-------|------|---------|------------|------------------|
|[unread]  |book   |0     |zh-hans  |759         |                  |
|----------|-------|------|---------|------------|------------------|

2020-11-24 18:27:13.858 INFO  jdbc.sqltiming Line:373 - update node_revision__field_thumb set bundle='book', delta=0, langcode='zh-hans', revision_id=759, 
field_thumb_value='https://static001.geekbang.org/resource/image/c6/5d/c69fb264a22db44923125501e13df35d.jpg' 
where entity_id=759 
 {executed in 0 msec}
2020-11-24 18:27:13.861 INFO  jdbc.sqltiming Line:373 - select bookfieldf0_.entity_id as entity_i1_6_0_, bookfieldf0_.bundle as bundle2_6_0_, bookfieldf0_.delta 
as delta3_6_0_, bookfieldf0_.field_fenlei_target_id as field_fe4_6_0_, bookfieldf0_.langcode 
as langcode5_6_0_, bookfieldf0_.revision_id as revision6_6_0_ from node__field_fenlei bookfieldf0_ 
where bookfieldf0_.entity_id=759 
 {executed in 1 msec}
2020-11-24 18:27:13.861 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------------|---------|------------|
|entity_id |bundle |delta |field_fenlei_target_id |langcode |revision_id |
|----------|-------|------|-----------------------|---------|------------|
|[unread]  |book   |0     |1                      |zh-hans  |759         |
|----------|-------|------|-----------------------|---------|------------|

2020-11-24 18:27:13.863 INFO  jdbc.sqltiming Line:373 - select nodefieldf0_.entity_id as entity_i1_15_0_, nodefieldf0_.bundle as bundle2_15_0_, nodefieldf0_.delta 
as delta3_15_0_, nodefieldf0_.field_fenlei_target_id as field_fe4_15_0_, nodefieldf0_.langcode 
as langcode5_15_0_, nodefieldf0_.revision_id as revision6_15_0_ from node_revision__field_fenlei 
nodefieldf0_ where nodefieldf0_.entity_id=759 
 {executed in 0 msec}
2020-11-24 18:27:13.863 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------------|---------|------------|
|entity_id |bundle |delta |field_fenlei_target_id |langcode |revision_id |
|----------|-------|------|-----------------------|---------|------------|
|[unread]  |book   |0     |1                      |zh-hans  |759         |
|----------|-------|------|-----------------------|---------|------------|

2020-11-24 18:27:13.865 INFO  jdbc.sqltiming Line:373 - select bookchecke0_.item_id as item_id1_2_, bookchecke0_.fsid as fsid2_2_, bookchecke0_.got 
as got3_2_, bookchecke0_.name as name4_2_, bookchecke0_.parse_fail as parse_fa5_2_, bookchecke0_.parsed 
as parsed6_2_, bookchecke0_.path as path7_2_, bookchecke0_.title as title8_2_, bookchecke0_.vid 
as vid9_2_ from book_check bookchecke0_ where bookchecke0_.fsid='978049516886417' and bookchecke0_.name='net_content' 
 {executed in 0 msec}
2020-11-24 18:27:13.866 INFO  jdbc.resultsettable Line:610 - 
|--------|---------|---------|---------|-----------|---------|---------|---------|---------|
|item_id |fsid     |got      |name     |parse_fail |parsed   |path     |title    |vid      |
|--------|---------|---------|---------|-----------|---------|---------|---------|---------|
|760     |[unread] |[unread] |[unread] |[unread]   |[unread] |[unread] |[unread] |[unread] |
|--------|---------|---------|---------|-----------|---------|---------|---------|---------|

2020-11-24 18:31:35.711 INFO  jdbc.sqltiming Line:373 - update book_check set fsid='978049516886417', got=1, name='net_content', parse_fail='comment_', 
parsed=0, path='109-人人都能学会的编程入门课/04丨算法数据结构篇 (9讲)/21丨队列与单调队列：滑动区间最大值.html', title='21丨队列与单调队列：滑动区间最大值', 
vid=760 where item_id=760 
 {executed in 1 msec}
2020-11-24 18:31:35.714 INFO  jdbc.sqltiming Line:373 - select nodebodyen0_.entity_id as entity_i1_4_, nodebodyen0_.body_value as body_val2_4_, nodebodyen0_.body_summary 
as body_sum3_4_, nodebodyen0_.bundle as bundle4_4_, nodebodyen0_.delta as delta5_4_, nodebodyen0_.body_format 
as body_for6_4_, nodebodyen0_.langcode as langcode7_4_, nodebodyen0_.revision_id as revision8_4_ 
from node__body nodebodyen0_ where nodebodyen0_.entity_id=760 
 {executed in 0 msec}
2020-11-24 18:31:35.715 INFO  jdbc.resultsettable Line:610 - 
|----------|-----------|-------------|-------|------|------------|---------|------------|
|entity_id |body_value |body_summary |bundle |delta |body_format |langcode |revision_id |
|----------|-----------|-------------|-------|------|------------|---------|------------|
|760       |           |             |book   |0     |full_html   |zh-hans  |760         |
|----------|-----------|-------------|-------|------|------------|---------|------------|

2020-11-24 18:31:35.715 INFO  jdbc.sqltiming Line:373 - select nodebodyre0_.entity_id as entity_i1_13_0_, nodebodyre0_.body_value as body_val2_13_0_, 
nodebodyre0_.body_summary as body_sum3_13_0_, nodebodyre0_.bundle as bundle4_13_0_, nodebodyre0_.delta 
as delta5_13_0_, nodebodyre0_.body_format as body_for6_13_0_, nodebodyre0_.langcode as langcode7_13_0_, 
nodebodyre0_.revision_id as revision8_13_0_ from node_revision__body nodebodyre0_ where nodebodyre0_.entity_id=760 
 {executed in 0 msec}
2020-11-24 18:31:35.716 INFO  jdbc.resultsettable Line:610 - 
|----------|-----------|-------------|-------|------|------------|---------|------------|
|entity_id |body_value |body_summary |bundle |delta |body_format |langcode |revision_id |
|----------|-----------|-------------|-------|------|------------|---------|------------|
|[unread]  |           |             |book   |0     |full_html   |zh-hans  |760         |
|----------|-----------|-------------|-------|------|------------|---------|------------|

2020-11-24 18:31:35.718 INFO  jdbc.sqltiming Line:373 - update node__body set body_value='<div data-slate-editor="true" data-key="880" autocorrect="off" 
spellcheck="false" data-gramm="false" style="outline: none; white-space: pre-wrap; overflow-wrap: 
break-word;"> <div class="se-7b6cd1ce " data-slate-type="paragraph" data-slate-object="block" 
data-key="881"> <span data-slate-object="text" data-key="882"><span data-slate-leaf="true" 
data-offset-key="882:0" data-first-offset="true"><span data-slate-string="true">你好，我是胡光，欢迎回来。</span></span></span> 
</div> <div class="se-26c06960 " data-slate-type="paragraph" data-slate-object="block" data-key="883"> 
<span data-slate-object="text" data-key="884"><span data-slate-leaf="true" data-offset-key="884:0" 
data-first-offset="true"><span data-slate-string="true">上节课呢，我们学习了二分查找的基本思想，以及明确了二分答案所使用的问题模型，你会发现，正因为问题具有单调性，我们才可以使用二分查找算法对问题求解过程进行加速。</span></span></span> 
</div> <div class="se-dd5a65c6 " data-slate-type="paragraph" data-slate-object="block" data-key="885"> 
<span data-slate-object="text" data-key="886"><span data-slate-leaf="true" data-offset-key="886:0" 
data-first-offset="true"><span data-slate-string="true">今天呢，我将带你学习一种性质有趣、简单且高效的数据结构，叫做：单调队列。学习这个数据结构的时候呢，我们还是要强调一下那句话：数据结构，就是定义一种性质，并且维护这种性质。</span></span></span> 
</div> <h2 class="se-da209017" data-slate-type="heading" data-slate-object="block" data-key="887"><span 
data-slate-object="text" data-key="888"><span data-slate-leaf="true" data-offset-key="888:0" 
data-first-offset="true"><span data-slate-string="true">今日任务</span></span></span></h2> <div 
class="se-e0c0fe79 " data-slate-type="paragraph" data-slate-object="block" data-key="889"> 
<span data-slate-object="text" data-key="890"><span data-slate-leaf="true" data-offset-key="890:0" 
data-first-offset="true"><span data-slate-string="true">在正式开始学习之前呢，先来看一下今天这 10 分钟的任务吧。</span></span></span> 
</div> <div class="se-d11c3e90 " data-slate-type="paragraph" data-slate-object="block" data-key="891"> 
<span data-slate-object="text" data-key="892"><span data-slate-leaf="true" data-offset-key="892:0" 
data-first-offset="true"><span data-slate-string="true">滑动区间最大值，就是指在固定区间长度的前提下，在一个序列上，从前到后滑动这个区间窗口，每次窗口内部的最大值，就组成了滑动区间最大值。</span></span></span> 
</div> <div class="se-783587ae " data-slate-type="paragraph" data-slate-object="block" data-key="893"> 
<span data-slate-object="text" data-key="894"><span data-slate-leaf="true" data-offset-key="894:0" 
data-first-offset="true"><span data-slate-string="true">例如，给你如下包含 8 个数字的序列，区间长度设置为 3：</span></span></span> 
</div> <div class="se-7e3d2b35 se-f1280aab" data-slate-type="pre" data-slate-object="block" 
data-key="895"> <div class="se-5318285d se-7bf41395"> <span></span> </div> <div class="se-f97a480f"> 
<div class="se-bbc1c4a7 se-41e67f8b" data-code-line-number="1"></div> <div class="se-bbc1c4a7 
se-41e67f8b" data-code-line-number="2"></div> <div class="se-bbc1c4a7 se-41e67f8b" data-code-line-number="3"></div> 
<div class="se-bbc1c4a7 se-41e67f8b" data-code-line-number="4"></div> <div class="se-bbc1c4a7 
se-41e67f8b" data-code-line-number="5"></div> <div class="se-bbc1c4a7 se-41e67f8b" data-code-line-number="6"></div> 
</div> <div class="se-e2a9fd4a ps"> <div class="se-cd1deb10 se-7bbbff4f" data-slate-type="code-line" 
data-slate-object="block" data-key="896"> <span data-slate-object="text" data-key="897"><span 
data-slate-leaf="true" data-offset-key="897:0" data-first-offset="true"><span data-slate-string="true">[6 
4 2] 10 3 8 5 9 -&gt; 6</span></span></span> </div> <div class="se-cd1deb10 se-7bbbff4f" data-slate-type="code-line" 
data-slate-object="block" data-key="898"> <span data-slate-object="text" data-key="899"><span 
data-slate-leaf="true" data-offset-key="899:0" data-first-offset="true"><span data-slate-string="true">6 
[4 2 10] 3 8 5 9 -&gt; 10</span></span></span> </div> <div class="se-cd1deb10 se-7bbbff4f" 
data-slate-type="code-line" data-slate-object="block" data-key="900"> <span data-slate-object="text" 
data-key="901"><span data-slate-leaf="true" data-offset-key="901:0" data-first-offset="true"><span 
data-slate-string="true">6 4 [2 10 3] 8 5 9 -&gt; 10</span></span></span> </div> <div class="se-cd1deb10 
se-7bbbff4f" data-slate-type="code-line" data-slate-object="block" data-key="902"> <span data-slate-object="text" 
data-key="903"><span data-slate-leaf="true" data-offset-key="903:0" data-first-offset="true"><span 
data-slate-string="true">6 4 2 [10 3 8] 5 9 -&gt; 10</span></span></span> </div> <div class="se-cd1deb10 
se-7bbbff4f" data-slate-type="code-line" data-slate-object="block" data-key="904"> <span data-slate-object="text" 
data-key="905"><span data-slate-leaf="true" data-offset-key="905:0" data-first-offset="true"><span 
data-slate-string="true">6 4 2 10 [3 8 5] 9 -&gt; 8</span></span></span> </div> <div class="se-cd1deb10 
se-7bbbff4f" data-slate-type="code-line" data-slate-object="block" data-key="906"> <span data-slate-object="text" 
data-key="907"><span data-slate-leaf="true" data-offset-key="907:0" data-first-offset="true"><span 
data-slate-string="true">6 4 2 10 3 [8 5 9] -&gt; 9</span></span></span> </div> <div class="ps__rail-x" 
style="left: 0px; bottom: 0px;"> <div class="ps__thumb-x" tabindex="0" style="left: 0px; width: 
0px;"></div> </div> <div class="ps__rail-y" style="top: 0px; right: 0px;"> <div class="ps__thumb-y" 
tabindex="0" style="top: 0px; height: 0px;"></div> </div> </div> </div> <div class="se-3d2f5b32 
" data-slate-type="paragraph" data-slate-object="block" data-key="908"> <span data-slate-object="text" 
data-key="909"><span data-slate-leaf="true" data-offset-key="909:0" data-first-offset="true"><span 
data-slate-string="true">滑动区间从数字 6 开始出发，每次向右移动一个数字，同时把左边的一个数字丢出去，保持区间长度为 3，最后移动到数字 9 停止。可以看到，这个序列共包含 
8 个数字，所以最后形成的滑动区间最大值共有 6 个，依次是 6、10、10、10、8、9。</span></span></span> </div> <div class="se-e3a5826d 
" data-slate-type="paragraph" data-slate-object="block" data-key="910"> <span data-slate-object="text" 
data-key="911"><span data-slate-leaf="true" data-offset-key="911:0" data-first-offset="true"><span 
data-slate-string="true">面对这个问题，你很容易采用 </span></span></span><span class="se-873bfe8e se-5c4df624" 
data-slate-type="inline-katex" data-slate-object="inline" data-key="912"><span data-slate-leaf="true"><span 
data-slate-string="true" class="katex"><span class="katex-html" aria-hidden="true"><span class="base"><span 
class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" 
style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span 
class="mord mathdefault">m</span><span class="mclose">)</span></span></span></span></span></span><span 
data-slate-object="text" data-key="914"><span data-slate-leaf="true" data-offset-key="914:0" 
data-first-offset="true"><span data-slate-string="true"> 的算法来完成，n 是区间长度，m 是窗口长度，就是枚举区间的终止位置，每次扫描区间内部，获得最大值。</span></span></span> 
</div> <div class="se-d116a5f5 " data-slate-type="paragraph" data-slate-object="block" data-key="915"> 
<span data-slate-object="text" data-key="916"><span data-slate-leaf="true" data-offset-key="916:0" 
data-first-offset="true"><span data-slate-string="true">而我今天要给你讲的这种方法，能让时间复杂度降低到 </span></span></span><span 
class="se-873bfe8e se-5c4df624" data-slate-type="inline-katex" data-slate-object="inline" data-key="917"><span 
data-slate-leaf="true"><span data-slate-string="true" class="katex"><span class="katex-html" 
aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span 
class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span 
class="mord mathdefault">n</span><span class="mclose">)</span></span></span></span></span></span><span 
data-slate-object="text" data-key="919"><span data-slate-leaf="true" data-offset-key="919:0" 
data-first-offset="true"><span data-slate-string="true">，你可以认为是对原序列扫描一遍，就能得到问题的答案。这究竟是什么样神奇的方法呢？带着这份好奇，我们开始今天的课程吧！</span></span></span> 
</div> <h2 class="se-a3bab0d8" data-slate-type="heading" data-slate-object="block" data-key="920"><span 
data-slate-object="text" data-key="921"><span data-slate-leaf="true" data-offset-key="921:0" 
data-first-offset="true"><span data-slate-string="true">必知必会，查缺补漏</span></span></span></h2> 
<div class="se-5872c81c " data-slate-type="paragraph" data-slate-object="block" data-key="922"> 
<span data-slate-object="text" data-key="923"><span data-slate-leaf="true" data-offset-key="923:0" 
data-first-offset="true"><span data-slate-string="true">想要完成今天这个任务呢，你必须掌握今天我将要教给你的一种新的结构，就是：单调队列。</span></span></span> 
</div> <h4 class="se-f7d1019b" data-slate-type="heading" data-slate-object="block" data-key="924"><span 
data-slate-object="text" data-key="925"><span data-slate-leaf="true" data-offset-key="925:0" 
data-first-offset="true"><span data-slate-string="true">1. 初识队列</span></span></span></h4> <div 
class="se-8bdeb452 " data-slate-type="paragraph" data-slate-object="block" data-key="926"> 
<span data-slate-object="text" data-key="927"><span data-slate-leaf="true" data-offset-key="927:0" 
data-first-offset="true"><span data-slate-string="true">首先让我们来认识一下最简单的队列结构，举一个生活中最常见的例子：火车站排队买票，你应该都经历过吧？售票员坐在窗口里面，每次只能服务队列中排在最前面的那个人，每当有人买完票，都会从队列的头部离开，后面的人上前一步，接替离开的人向售票员购票，当有其他人想要来买票的时候，必须从队列的末尾开始排队。这种结构就是典型的队列结构。</span></span></span> 
</div> <div class="se-3a13dffe " data-slate-type="paragraph" data-slate-object="block" data-key="928"> 
<span data-slate-object="text" data-key="929"><span data-slate-leaf="true" data-offset-key="929:0" 
data-first-offset="true"><span data-slate-string="true">我们计算机中的队列，和买票的这个队列是一样的，先到先得，先入先出，每个元素都是从队列尾部入队，在头部被处理完后再出队。如下图所示：</span></span></span> 
</div> <div class="se-8a23ae46" data-slate-type="image" data-slate-object="block" data-key="930"> 
<img class="se-4552c18b" src="https://static001.geekbang.org/resource/image/12/31/1223c53b5bd1e0e4d2bc50f18244ce31.jpg"> 
<div class="se-6211750b"> 队列结构示意图 </div> </div> <div class="se-4a21a9a8 " data-slate-type="paragraph" 
data-slate-object="block" data-key="931"> <span data-slate-object="text" data-key="932"><span 
data-slate-leaf="true" data-offset-key="932:0" data-first-offset="true"><span data-slate-string="true">如图所示，队列就像一个数组一样，每个元素从数组尾部进入数组，从头部出数组。这种结构很简单，你应该很容易理解它的工作顺序。任何事物，往往就是看起来越简单，想要掌握其真谛就越难。就像是我给你一把锤子，你知道这东西大概可以干什么，而我要是给你一块铁，你可能就懵了。其实队列就是这种表面简单，可作用却不简单的数据结构。</span></span></span> 
</div> <div class="se-e883991a " data-slate-type="paragraph" data-slate-object="block" data-key="933"> 
<span data-slate-object="text" data-key="934"><span data-slate-leaf="true" data-offset-key="934:0" 
data-first-offset="true"><span data-slate-string="true">想要理解队列，你就必须理解一句话，叫做：计算机是很专注的。什么意思呢，我们回忆一下之前讲到的链表判环，作为人类的你和我，可以一眼就看出来链表中是否有环。而对于计算机程序来说，只有指针指向的地方，才是它能看得到的地方。所以，我们才费了很大的力气，为计算机设计了一个快慢指针的算法，来判断链表中是否有环。</span></span></span> 
</div> <div class="se-a040bd5d " data-slate-type="paragraph" data-slate-object="block" data-key="935"> 
<span data-slate-object="text" data-key="936"><span data-slate-leaf="true" data-offset-key="936:0" 
data-first-offset="true"><span data-slate-string="true">实际上，当我们在实现程序的时候，我们不仅要把数据存储在计算机中，我们还要规定计算机处理这些数据的顺序。想一想，我们之前设计的所有的循环程序，不就是在规定计算机的处理顺序么？</span></span></span> 
</div> <div class="se-41c53aef " data-slate-type="paragraph" data-slate-object="block" data-key="937"> 
<span data-slate-object="text" data-key="938"><span data-slate-leaf="true" data-offset-key="938:0" 
data-first-offset="true"><span data-slate-string="true">而今天我们学习的这个队列，你可以把其中的元素，看成是计算机要处理的一个个的任务，那么队列结构，其实就是规定了这些任务的处理顺序，程序只从队列头部取任务，先到先处理，后到的任务，需要在队列后面排着，直到轮到它，这样就可以把计算机的专注与高效发挥到极致。</span></span></span> 
</div> <div class="se-341bfc1c " data-slate-type="paragraph" data-slate-object="block" data-key="939"> 
<span data-slate-object="text" data-key="940"><span data-slate-leaf="true" data-offset-key="940:0" 
data-first-offset="true"><span data-slate-string="true">学习编程，与其说是将我们的思维转换成代码，不如说是将我们的思维，锻炼成计算机的思维。注意，计算机的处理逻辑，是有顺序的。今天，我们所说的队列，就代表了一种顺序。后面，我们还会介绍另外一种顺序的代表，就是“栈”，到时候我再详细讲解。</span></span></span> 
</div> <h4 class="se-7b3d6aca" data-slate-type="heading" data-slate-object="block" data-key="941"><span 
data-slate-object="text" data-key="942"><span data-slate-leaf="true" data-offset-key="942:0" 
data-first-offset="true"><span data-slate-string="true">2. 队列升级：单调队列</span></span></span></h4> 
<div class="se-79ff447c " data-slate-type="paragraph" data-slate-object="block" data-key="943"> 
<span data-slate-object="text" data-key="944"><span data-slate-leaf="true" data-offset-key="944:0" 
data-first-offset="true"><span data-slate-string="true">讲完了最简单的队列以后，下面就来让我们学习一种队列的升级产物：单调队列。在正式讲解单调队列之前，让我们来讲一个现实中的单调队列的例子。</span></span></span> 
</div> <div class="se-7f067b1b " data-slate-type="paragraph" data-slate-object="block" data-key="945"> 
<span data-slate-object="text" data-key="946"><span data-slate-leaf="true" data-offset-key="946:0" 
data-first-offset="true"><span data-slate-string="true">假设你的学长张三，作为乒乓球体育生，很幸运地进了高中学校的校队。学校规定当前校队中，能力最强的人，才有可能代表学校去参加比赛。那么在校的这三年，张三都有机会代表学校参加国家赛。</span></span></span> 
</div> <div class="se-a032cf09 " data-slate-type="paragraph" data-slate-object="block" data-key="947"> 
<span data-slate-object="text" data-key="948"><span data-slate-leaf="true" data-offset-key="948:0" 
data-first-offset="true"><span data-slate-string="true">高一的时候张三战斗力 85，比他能力强的有两个人，一个是高二的孔令辉，战斗力 
93，一个是高三的刘国梁，战斗力 98。那么此时，能代表学校参加比赛的只有最高战力的刘国梁。</span></span></span> </div> <div class="se-58374f36" 
data-slate-type="image" data-slate-object="block" data-key="949"> <img class="se-b49ad4d8" 
src="https://static001.geekbang.org/resource/image/44/88/440a0401bc65a31d9002a77163abad88.jpg"> 
</div> <div class="se-bf1b6bd8 " data-slate-type="paragraph" data-slate-object="block" data-key="950"> 
<span data-slate-object="text" data-key="951"><span data-slate-leaf="true" data-offset-key="951:0" 
data-first-offset="true"><span data-slate-string="true">过了一年，张三上了高二，原高二的孔令辉上了高三，刘国梁毕业了，如果张三的战力比后面上来的新生要强，那么他再等一年，有可能在高三的时候代表学校参赛。然而这时作为高一乒乓球体育生的你也进入了校队，战斗力 
88。悲剧出现了，因为只要你在学校，张三永远不可能参加国家赛了。</span></span></span> </div> <div class="se-d1707d0d" data-slate-type="image" 
data-slate-object="block" data-key="952"></div> </div>', body_summary='', bundle='book', delta=0, 
body_format='full_html', langcode='zh-hans', revision_id=760 where entity_id=760 
 {executed in 1 msec}
2020-11-24 18:31:35.719 INFO  jdbc.sqltiming Line:373 - update node_revision__body set body_value='<div data-slate-editor="true" data-key="880" autocorrect="off" 
spellcheck="false" data-gramm="false" style="outline: none; white-space: pre-wrap; overflow-wrap: 
break-word;"> <div class="se-7b6cd1ce " data-slate-type="paragraph" data-slate-object="block" 
data-key="881"> <span data-slate-object="text" data-key="882"><span data-slate-leaf="true" 
data-offset-key="882:0" data-first-offset="true"><span data-slate-string="true">你好，我是胡光，欢迎回来。</span></span></span> 
</div> <div class="se-26c06960 " data-slate-type="paragraph" data-slate-object="block" data-key="883"> 
<span data-slate-object="text" data-key="884"><span data-slate-leaf="true" data-offset-key="884:0" 
data-first-offset="true"><span data-slate-string="true">上节课呢，我们学习了二分查找的基本思想，以及明确了二分答案所使用的问题模型，你会发现，正因为问题具有单调性，我们才可以使用二分查找算法对问题求解过程进行加速。</span></span></span> 
</div> <div class="se-dd5a65c6 " data-slate-type="paragraph" data-slate-object="block" data-key="885"> 
<span data-slate-object="text" data-key="886"><span data-slate-leaf="true" data-offset-key="886:0" 
data-first-offset="true"><span data-slate-string="true">今天呢，我将带你学习一种性质有趣、简单且高效的数据结构，叫做：单调队列。学习这个数据结构的时候呢，我们还是要强调一下那句话：数据结构，就是定义一种性质，并且维护这种性质。</span></span></span> 
</div> <h2 class="se-da209017" data-slate-type="heading" data-slate-object="block" data-key="887"><span 
data-slate-object="text" data-key="888"><span data-slate-leaf="true" data-offset-key="888:0" 
data-first-offset="true"><span data-slate-string="true">今日任务</span></span></span></h2> <div 
class="se-e0c0fe79 " data-slate-type="paragraph" data-slate-object="block" data-key="889"> 
<span data-slate-object="text" data-key="890"><span data-slate-leaf="true" data-offset-key="890:0" 
data-first-offset="true"><span data-slate-string="true">在正式开始学习之前呢，先来看一下今天这 10 分钟的任务吧。</span></span></span> 
</div> <div class="se-d11c3e90 " data-slate-type="paragraph" data-slate-object="block" data-key="891"> 
<span data-slate-object="text" data-key="892"><span data-slate-leaf="true" data-offset-key="892:0" 
data-first-offset="true"><span data-slate-string="true">滑动区间最大值，就是指在固定区间长度的前提下，在一个序列上，从前到后滑动这个区间窗口，每次窗口内部的最大值，就组成了滑动区间最大值。</span></span></span> 
</div> <div class="se-783587ae " data-slate-type="paragraph" data-slate-object="block" data-key="893"> 
<span data-slate-object="text" data-key="894"><span data-slate-leaf="true" data-offset-key="894:0" 
data-first-offset="true"><span data-slate-string="true">例如，给你如下包含 8 个数字的序列，区间长度设置为 3：</span></span></span> 
</div> <div class="se-7e3d2b35 se-f1280aab" data-slate-type="pre" data-slate-object="block" 
data-key="895"> <div class="se-5318285d se-7bf41395"> <span></span> </div> <div class="se-f97a480f"> 
<div class="se-bbc1c4a7 se-41e67f8b" data-code-line-number="1"></div> <div class="se-bbc1c4a7 
se-41e67f8b" data-code-line-number="2"></div> <div class="se-bbc1c4a7 se-41e67f8b" data-code-line-number="3"></div> 
<div class="se-bbc1c4a7 se-41e67f8b" data-code-line-number="4"></div> <div class="se-bbc1c4a7 
se-41e67f8b" data-code-line-number="5"></div> <div class="se-bbc1c4a7 se-41e67f8b" data-code-line-number="6"></div> 
</div> <div class="se-e2a9fd4a ps"> <div class="se-cd1deb10 se-7bbbff4f" data-slate-type="code-line" 
data-slate-object="block" data-key="896"> <span data-slate-object="text" data-key="897"><span 
data-slate-leaf="true" data-offset-key="897:0" data-first-offset="true"><span data-slate-string="true">[6 
4 2] 10 3 8 5 9 -&gt; 6</span></span></span> </div> <div class="se-cd1deb10 se-7bbbff4f" data-slate-type="code-line" 
data-slate-object="block" data-key="898"> <span data-slate-object="text" data-key="899"><span 
data-slate-leaf="true" data-offset-key="899:0" data-first-offset="true"><span data-slate-string="true">6 
[4 2 10] 3 8 5 9 -&gt; 10</span></span></span> </div> <div class="se-cd1deb10 se-7bbbff4f" 
data-slate-type="code-line" data-slate-object="block" data-key="900"> <span data-slate-object="text" 
data-key="901"><span data-slate-leaf="true" data-offset-key="901:0" data-first-offset="true"><span 
data-slate-string="true">6 4 [2 10 3] 8 5 9 -&gt; 10</span></span></span> </div> <div class="se-cd1deb10 
se-7bbbff4f" data-slate-type="code-line" data-slate-object="block" data-key="902"> <span data-slate-object="text" 
data-key="903"><span data-slate-leaf="true" data-offset-key="903:0" data-first-offset="true"><span 
data-slate-string="true">6 4 2 [10 3 8] 5 9 -&gt; 10</span></span></span> </div> <div class="se-cd1deb10 
se-7bbbff4f" data-slate-type="code-line" data-slate-object="block" data-key="904"> <span data-slate-object="text" 
data-key="905"><span data-slate-leaf="true" data-offset-key="905:0" data-first-offset="true"><span 
data-slate-string="true">6 4 2 10 [3 8 5] 9 -&gt; 8</span></span></span> </div> <div class="se-cd1deb10 
se-7bbbff4f" data-slate-type="code-line" data-slate-object="block" data-key="906"> <span data-slate-object="text" 
data-key="907"><span data-slate-leaf="true" data-offset-key="907:0" data-first-offset="true"><span 
data-slate-string="true">6 4 2 10 3 [8 5 9] -&gt; 9</span></span></span> </div> <div class="ps__rail-x" 
style="left: 0px; bottom: 0px;"> <div class="ps__thumb-x" tabindex="0" style="left: 0px; width: 
0px;"></div> </div> <div class="ps__rail-y" style="top: 0px; right: 0px;"> <div class="ps__thumb-y" 
tabindex="0" style="top: 0px; height: 0px;"></div> </div> </div> </div> <div class="se-3d2f5b32 
" data-slate-type="paragraph" data-slate-object="block" data-key="908"> <span data-slate-object="text" 
data-key="909"><span data-slate-leaf="true" data-offset-key="909:0" data-first-offset="true"><span 
data-slate-string="true">滑动区间从数字 6 开始出发，每次向右移动一个数字，同时把左边的一个数字丢出去，保持区间长度为 3，最后移动到数字 9 停止。可以看到，这个序列共包含 
8 个数字，所以最后形成的滑动区间最大值共有 6 个，依次是 6、10、10、10、8、9。</span></span></span> </div> <div class="se-e3a5826d 
" data-slate-type="paragraph" data-slate-object="block" data-key="910"> <span data-slate-object="text" 
data-key="911"><span data-slate-leaf="true" data-offset-key="911:0" data-first-offset="true"><span 
data-slate-string="true">面对这个问题，你很容易采用 </span></span></span><span class="se-873bfe8e se-5c4df624" 
data-slate-type="inline-katex" data-slate-object="inline" data-key="912"><span data-slate-leaf="true"><span 
data-slate-string="true" class="katex"><span class="katex-html" aria-hidden="true"><span class="base"><span 
class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" 
style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span 
class="mord mathdefault">m</span><span class="mclose">)</span></span></span></span></span></span><span 
data-slate-object="text" data-key="914"><span data-slate-leaf="true" data-offset-key="914:0" 
data-first-offset="true"><span data-slate-string="true"> 的算法来完成，n 是区间长度，m 是窗口长度，就是枚举区间的终止位置，每次扫描区间内部，获得最大值。</span></span></span> 
</div> <div class="se-d116a5f5 " data-slate-type="paragraph" data-slate-object="block" data-key="915"> 
<span data-slate-object="text" data-key="916"><span data-slate-leaf="true" data-offset-key="916:0" 
data-first-offset="true"><span data-slate-string="true">而我今天要给你讲的这种方法，能让时间复杂度降低到 </span></span></span><span 
class="se-873bfe8e se-5c4df624" data-slate-type="inline-katex" data-slate-object="inline" data-key="917"><span 
data-slate-leaf="true"><span data-slate-string="true" class="katex"><span class="katex-html" 
aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span 
class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span 
class="mord mathdefault">n</span><span class="mclose">)</span></span></span></span></span></span><span 
data-slate-object="text" data-key="919"><span data-slate-leaf="true" data-offset-key="919:0" 
data-first-offset="true"><span data-slate-string="true">，你可以认为是对原序列扫描一遍，就能得到问题的答案。这究竟是什么样神奇的方法呢？带着这份好奇，我们开始今天的课程吧！</span></span></span> 
</div> <h2 class="se-a3bab0d8" data-slate-type="heading" data-slate-object="block" data-key="920"><span 
data-slate-object="text" data-key="921"><span data-slate-leaf="true" data-offset-key="921:0" 
data-first-offset="true"><span data-slate-string="true">必知必会，查缺补漏</span></span></span></h2> 
<div class="se-5872c81c " data-slate-type="paragraph" data-slate-object="block" data-key="922"> 
<span data-slate-object="text" data-key="923"><span data-slate-leaf="true" data-offset-key="923:0" 
data-first-offset="true"><span data-slate-string="true">想要完成今天这个任务呢，你必须掌握今天我将要教给你的一种新的结构，就是：单调队列。</span></span></span> 
</div> <h4 class="se-f7d1019b" data-slate-type="heading" data-slate-object="block" data-key="924"><span 
data-slate-object="text" data-key="925"><span data-slate-leaf="true" data-offset-key="925:0" 
data-first-offset="true"><span data-slate-string="true">1. 初识队列</span></span></span></h4> <div 
class="se-8bdeb452 " data-slate-type="paragraph" data-slate-object="block" data-key="926"> 
<span data-slate-object="text" data-key="927"><span data-slate-leaf="true" data-offset-key="927:0" 
data-first-offset="true"><span data-slate-string="true">首先让我们来认识一下最简单的队列结构，举一个生活中最常见的例子：火车站排队买票，你应该都经历过吧？售票员坐在窗口里面，每次只能服务队列中排在最前面的那个人，每当有人买完票，都会从队列的头部离开，后面的人上前一步，接替离开的人向售票员购票，当有其他人想要来买票的时候，必须从队列的末尾开始排队。这种结构就是典型的队列结构。</span></span></span> 
</div> <div class="se-3a13dffe " data-slate-type="paragraph" data-slate-object="block" data-key="928"> 
<span data-slate-object="text" data-key="929"><span data-slate-leaf="true" data-offset-key="929:0" 
data-first-offset="true"><span data-slate-string="true">我们计算机中的队列，和买票的这个队列是一样的，先到先得，先入先出，每个元素都是从队列尾部入队，在头部被处理完后再出队。如下图所示：</span></span></span> 
</div> <div class="se-8a23ae46" data-slate-type="image" data-slate-object="block" data-key="930"> 
<img class="se-4552c18b" src="https://static001.geekbang.org/resource/image/12/31/1223c53b5bd1e0e4d2bc50f18244ce31.jpg"> 
<div class="se-6211750b"> 队列结构示意图 </div> </div> <div class="se-4a21a9a8 " data-slate-type="paragraph" 
data-slate-object="block" data-key="931"> <span data-slate-object="text" data-key="932"><span 
data-slate-leaf="true" data-offset-key="932:0" data-first-offset="true"><span data-slate-string="true">如图所示，队列就像一个数组一样，每个元素从数组尾部进入数组，从头部出数组。这种结构很简单，你应该很容易理解它的工作顺序。任何事物，往往就是看起来越简单，想要掌握其真谛就越难。就像是我给你一把锤子，你知道这东西大概可以干什么，而我要是给你一块铁，你可能就懵了。其实队列就是这种表面简单，可作用却不简单的数据结构。</span></span></span> 
</div> <div class="se-e883991a " data-slate-type="paragraph" data-slate-object="block" data-key="933"> 
<span data-slate-object="text" data-key="934"><span data-slate-leaf="true" data-offset-key="934:0" 
data-first-offset="true"><span data-slate-string="true">想要理解队列，你就必须理解一句话，叫做：计算机是很专注的。什么意思呢，我们回忆一下之前讲到的链表判环，作为人类的你和我，可以一眼就看出来链表中是否有环。而对于计算机程序来说，只有指针指向的地方，才是它能看得到的地方。所以，我们才费了很大的力气，为计算机设计了一个快慢指针的算法，来判断链表中是否有环。</span></span></span> 
</div> <div class="se-a040bd5d " data-slate-type="paragraph" data-slate-object="block" data-key="935"> 
<span data-slate-object="text" data-key="936"><span data-slate-leaf="true" data-offset-key="936:0" 
data-first-offset="true"><span data-slate-string="true">实际上，当我们在实现程序的时候，我们不仅要把数据存储在计算机中，我们还要规定计算机处理这些数据的顺序。想一想，我们之前设计的所有的循环程序，不就是在规定计算机的处理顺序么？</span></span></span> 
</div> <div class="se-41c53aef " data-slate-type="paragraph" data-slate-object="block" data-key="937"> 
<span data-slate-object="text" data-key="938"><span data-slate-leaf="true" data-offset-key="938:0" 
data-first-offset="true"><span data-slate-string="true">而今天我们学习的这个队列，你可以把其中的元素，看成是计算机要处理的一个个的任务，那么队列结构，其实就是规定了这些任务的处理顺序，程序只从队列头部取任务，先到先处理，后到的任务，需要在队列后面排着，直到轮到它，这样就可以把计算机的专注与高效发挥到极致。</span></span></span> 
</div> <div class="se-341bfc1c " data-slate-type="paragraph" data-slate-object="block" data-key="939"> 
<span data-slate-object="text" data-key="940"><span data-slate-leaf="true" data-offset-key="940:0" 
data-first-offset="true"><span data-slate-string="true">学习编程，与其说是将我们的思维转换成代码，不如说是将我们的思维，锻炼成计算机的思维。注意，计算机的处理逻辑，是有顺序的。今天，我们所说的队列，就代表了一种顺序。后面，我们还会介绍另外一种顺序的代表，就是“栈”，到时候我再详细讲解。</span></span></span> 
</div> <h4 class="se-7b3d6aca" data-slate-type="heading" data-slate-object="block" data-key="941"><span 
data-slate-object="text" data-key="942"><span data-slate-leaf="true" data-offset-key="942:0" 
data-first-offset="true"><span data-slate-string="true">2. 队列升级：单调队列</span></span></span></h4> 
<div class="se-79ff447c " data-slate-type="paragraph" data-slate-object="block" data-key="943"> 
<span data-slate-object="text" data-key="944"><span data-slate-leaf="true" data-offset-key="944:0" 
data-first-offset="true"><span data-slate-string="true">讲完了最简单的队列以后，下面就来让我们学习一种队列的升级产物：单调队列。在正式讲解单调队列之前，让我们来讲一个现实中的单调队列的例子。</span></span></span> 
</div> <div class="se-7f067b1b " data-slate-type="paragraph" data-slate-object="block" data-key="945"> 
<span data-slate-object="text" data-key="946"><span data-slate-leaf="true" data-offset-key="946:0" 
data-first-offset="true"><span data-slate-string="true">假设你的学长张三，作为乒乓球体育生，很幸运地进了高中学校的校队。学校规定当前校队中，能力最强的人，才有可能代表学校去参加比赛。那么在校的这三年，张三都有机会代表学校参加国家赛。</span></span></span> 
</div> <div class="se-a032cf09 " data-slate-type="paragraph" data-slate-object="block" data-key="947"> 
<span data-slate-object="text" data-key="948"><span data-slate-leaf="true" data-offset-key="948:0" 
data-first-offset="true"><span data-slate-string="true">高一的时候张三战斗力 85，比他能力强的有两个人，一个是高二的孔令辉，战斗力 
93，一个是高三的刘国梁，战斗力 98。那么此时，能代表学校参加比赛的只有最高战力的刘国梁。</span></span></span> </div> <div class="se-58374f36" 
data-slate-type="image" data-slate-object="block" data-key="949"> <img class="se-b49ad4d8" 
src="https://static001.geekbang.org/resource/image/44/88/440a0401bc65a31d9002a77163abad88.jpg"> 
</div> <div class="se-bf1b6bd8 " data-slate-type="paragraph" data-slate-object="block" data-key="950"> 
<span data-slate-object="text" data-key="951"><span data-slate-leaf="true" data-offset-key="951:0" 
data-first-offset="true"><span data-slate-string="true">过了一年，张三上了高二，原高二的孔令辉上了高三，刘国梁毕业了，如果张三的战力比后面上来的新生要强，那么他再等一年，有可能在高三的时候代表学校参赛。然而这时作为高一乒乓球体育生的你也进入了校队，战斗力 
88。悲剧出现了，因为只要你在学校，张三永远不可能参加国家赛了。</span></span></span> </div> <div class="se-d1707d0d" data-slate-type="image" 
data-slate-object="block" data-key="952"></div> </div>', body_summary='', bundle='book', delta=0, 
body_format='full_html', langcode='zh-hans', revision_id=760 where entity_id=760 
 {executed in 0 msec}
2020-11-24 18:31:35.723 INFO  jdbc.sqltiming Line:373 - select nodefiledd0_.nid as nid1_10_, nodefiledd0_.changed as changed2_10_, nodefiledd0_.created 
as created3_10_, nodefiledd0_.default_langcode as default_4_10_, nodefiledd0_.langcode as langcode5_10_, 
nodefiledd0_.promote as promote6_10_, nodefiledd0_.revision_translation_affected as revision7_10_, 
nodefiledd0_.status as status8_10_, nodefiledd0_.sticky as sticky9_10_, nodefiledd0_.title 
as title10_10_, nodefiledd0_.type as type11_10_, nodefiledd0_.uid as uid12_10_, nodefiledd0_.vid 
as vid13_10_ from node_field_data nodefiledd0_ where nodefiledd0_.nid=760 
 {executed in 0 msec}
2020-11-24 18:31:35.724 INFO  jdbc.resultsettable Line:610 - 
|----|-----------|-----------|-----------------|---------|--------|------------------------------|-------|-------|-------------------|-----|----|----|
|nid |changed    |created    |default_langcode |langcode |promote |revision_translation_affected |status |sticky |title              |type |uid |vid |
|----|-----------|-----------|-----------------|---------|--------|------------------------------|-------|-------|-------------------|-----|----|----|
|760 |1606117100 |1606117100 |1                |zh-hans  |0       |1                             |1      |0      |21丨队列与单调队列：滑动区间最大值 |book |1   |760 |
|----|-----------|-----------|-----------------|---------|--------|------------------------------|-------|-------|-------------------|-----|----|----|

2020-11-24 18:31:35.725 INFO  jdbc.sqltiming Line:373 - select nodefieldr0_.nid as nid1_11_0_, nodefieldr0_.changed as changed2_11_0_, nodefieldr0_.created 
as created3_11_0_, nodefieldr0_.default_langcode as default_4_11_0_, nodefieldr0_.langcode 
as langcode5_11_0_, nodefieldr0_.promote as promote6_11_0_, nodefieldr0_.revision_translation_affected 
as revision7_11_0_, nodefieldr0_.status as status8_11_0_, nodefieldr0_.sticky as sticky9_11_0_, 
nodefieldr0_.title as title10_11_0_, nodefieldr0_.uid as uid11_11_0_, nodefieldr0_.vid as vid12_11_0_ 
from node_field_revision nodefieldr0_ where nodefieldr0_.nid=760 
 {executed in 0 msec}
2020-11-24 18:31:35.725 INFO  jdbc.resultsettable Line:610 - 
|---------|-----------|-----------|-----------------|---------|--------|------------------------------|-------|-------|-------------------|----|----|
|nid      |changed    |created    |default_langcode |langcode |promote |revision_translation_affected |status |sticky |title              |uid |vid |
|---------|-----------|-----------|-----------------|---------|--------|------------------------------|-------|-------|-------------------|----|----|
|[unread] |1606117100 |1606117100 |1                |zh-hans  |0       |1                             |1      |0      |21丨队列与单调队列：滑动区间最大值 |1   |760 |
|---------|-----------|-----------|-----------------|---------|--------|------------------------------|-------|-------|-------------------|----|----|

2020-11-24 18:31:35.727 INFO  jdbc.sqltiming Line:373 - update node_field_data set changed=1606213895, created=1606213895, default_langcode=1, langcode='zh-hans', 
promote=0, revision_translation_affected=1, status=1, sticky=0, title='21丨队列与单调队列：滑动区间最大值', 
type='book', uid=1, vid=760 where nid=760 
 {executed in 0 msec}
2020-11-24 18:31:35.727 INFO  jdbc.sqltiming Line:373 - update node_field_revision set changed=1606213895, created=1606213895, default_langcode=1, 
langcode='zh-hans', promote=0, revision_translation_affected=1, status=1, sticky=0, title='21丨队列与单调队列：滑动区间最大值', 
uid=1, vid=760 where nid=760 
 {executed in 0 msec}
2020-11-24 18:31:35.731 INFO  jdbc.sqltiming Line:373 - select bookfieldm0_.entity_id as entity_i1_8_, bookfieldm0_.bundle as bundle2_8_, bookfieldm0_.delta 
as delta3_8_, bookfieldm0_.langcode as langcode4_8_, bookfieldm0_.field_media_value as field_me5_8_, 
bookfieldm0_.revision_id as revision6_8_ from node__field_media bookfieldm0_ where bookfieldm0_.entity_id=760 
 {executed in 0 msec}
2020-11-24 18:31:35.732 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------------|------------|
|entity_id |bundle |delta |langcode |field_media_value |revision_id |
|----------|-------|------|---------|------------------|------------|
|760       |book   |0     |zh-hans  |                  |760         |
|----------|-------|------|---------|------------------|------------|

2020-11-24 18:31:35.733 INFO  jdbc.sqltiming Line:373 - select nodefieldm0_.entity_id as entity_i1_17_0_, nodefieldm0_.bundle as bundle2_17_0_, nodefieldm0_.delta 
as delta3_17_0_, nodefieldm0_.langcode as langcode4_17_0_, nodefieldm0_.field_media_value as 
field_me5_17_0_, nodefieldm0_.revision_id as revision6_17_0_ from node_revision__field_media 
nodefieldm0_ where nodefieldm0_.entity_id=760 
 {executed in 0 msec}
2020-11-24 18:31:35.734 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------------|------------|
|entity_id |bundle |delta |langcode |field_media_value |revision_id |
|----------|-------|------|---------|------------------|------------|
|[unread]  |book   |0     |zh-hans  |                  |760         |
|----------|-------|------|---------|------------------|------------|

2020-11-24 18:31:35.736 INFO  jdbc.sqltiming Line:373 - select bookfieldc0_.entity_id as entity_i1_5_, bookfieldc0_.bundle as bundle2_5_, bookfieldc0_.field_comment_value 
as field_co3_5_, bookfieldc0_.delta as delta4_5_, bookfieldc0_.field_comment_format as field_co5_5_, 
bookfieldc0_.langcode as langcode6_5_, bookfieldc0_.revision_id as revision7_5_ from node__field_comment 
bookfieldc0_ where bookfieldc0_.entity_id=760 
 {executed in 0 msec}
2020-11-24 18:31:35.736 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|--------------------|------|---------------------|---------|------------|
|entity_id |bundle |field_comment_value |delta |field_comment_format |langcode |revision_id |
|----------|-------|--------------------|------|---------------------|---------|------------|
|760       |book   |                    |0     |full_html            |zh-hans  |760         |
|----------|-------|--------------------|------|---------------------|---------|------------|

2020-11-24 18:31:35.738 INFO  jdbc.sqltiming Line:373 - select nodefieldc0_.entity_id as entity_i1_14_0_, nodefieldc0_.bundle as bundle2_14_0_, nodefieldc0_.field_comment_value 
as field_co3_14_0_, nodefieldc0_.delta as delta4_14_0_, nodefieldc0_.field_comment_format as 
field_co5_14_0_, nodefieldc0_.langcode as langcode6_14_0_, nodefieldc0_.revision_id as revision7_14_0_ 
from node_revision__field_comment nodefieldc0_ where nodefieldc0_.entity_id=760 
 {executed in 0 msec}
2020-11-24 18:31:35.739 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|--------------------|------|---------------------|---------|------------|
|entity_id |bundle |field_comment_value |delta |field_comment_format |langcode |revision_id |
|----------|-------|--------------------|------|---------------------|---------|------------|
|[unread]  |book   |                    |0     |full_html            |zh-hans  |760         |
|----------|-------|--------------------|------|---------------------|---------|------------|

2020-11-24 18:31:35.740 INFO  jdbc.sqltiming Line:373 - select bookfieldt0_.entity_id as entity_i1_9_, bookfieldt0_.bundle as bundle2_9_, bookfieldt0_.delta 
as delta3_9_, bookfieldt0_.langcode as langcode4_9_, bookfieldt0_.revision_id as revision5_9_, 
bookfieldt0_.field_thumb_value as field_th6_9_ from node__field_thumb bookfieldt0_ where bookfieldt0_.entity_id=760 
 {executed in 0 msec}
2020-11-24 18:31:35.741 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------|------------------|
|entity_id |bundle |delta |langcode |revision_id |field_thumb_value |
|----------|-------|------|---------|------------|------------------|
|760       |book   |0     |zh-hans  |760         |                  |
|----------|-------|------|---------|------------|------------------|

2020-11-24 18:31:35.742 INFO  jdbc.sqltiming Line:373 - update node__field_thumb set bundle='book', delta=0, langcode='zh-hans', revision_id=760, field_thumb_value='https://static001.geekbang.org/resource/image/43/0f/432ac00505654764bae53155a60cb50f.jpg' 
where entity_id=760 
 {executed in 0 msec}
2020-11-24 18:31:35.745 INFO  jdbc.sqltiming Line:373 - select nodefieldt0_.entity_id as entity_i1_18_0_, nodefieldt0_.bundle as bundle2_18_0_, nodefieldt0_.delta 
as delta3_18_0_, nodefieldt0_.langcode as langcode4_18_0_, nodefieldt0_.revision_id as revision5_18_0_, 
nodefieldt0_.field_thumb_value as field_th6_18_0_ from node_revision__field_thumb nodefieldt0_ 
where nodefieldt0_.entity_id=760 
 {executed in 0 msec}
2020-11-24 18:31:35.745 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------|------------------|
|entity_id |bundle |delta |langcode |revision_id |field_thumb_value |
|----------|-------|------|---------|------------|------------------|
|[unread]  |book   |0     |zh-hans  |760         |                  |
|----------|-------|------|---------|------------|------------------|

2020-11-24 18:31:35.747 INFO  jdbc.sqltiming Line:373 - update node_revision__field_thumb set bundle='book', delta=0, langcode='zh-hans', revision_id=760, 
field_thumb_value='https://static001.geekbang.org/resource/image/43/0f/432ac00505654764bae53155a60cb50f.jpg' 
where entity_id=760 
 {executed in 0 msec}
2020-11-24 18:31:35.750 INFO  jdbc.sqltiming Line:373 - select bookfieldf0_.entity_id as entity_i1_6_0_, bookfieldf0_.bundle as bundle2_6_0_, bookfieldf0_.delta 
as delta3_6_0_, bookfieldf0_.field_fenlei_target_id as field_fe4_6_0_, bookfieldf0_.langcode 
as langcode5_6_0_, bookfieldf0_.revision_id as revision6_6_0_ from node__field_fenlei bookfieldf0_ 
where bookfieldf0_.entity_id=760 
 {executed in 0 msec}
2020-11-24 18:31:35.750 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------------|---------|------------|
|entity_id |bundle |delta |field_fenlei_target_id |langcode |revision_id |
|----------|-------|------|-----------------------|---------|------------|
|[unread]  |book   |0     |1                      |zh-hans  |760         |
|----------|-------|------|-----------------------|---------|------------|

2020-11-24 18:31:35.752 INFO  jdbc.sqltiming Line:373 - select nodefieldf0_.entity_id as entity_i1_15_0_, nodefieldf0_.bundle as bundle2_15_0_, nodefieldf0_.delta 
as delta3_15_0_, nodefieldf0_.field_fenlei_target_id as field_fe4_15_0_, nodefieldf0_.langcode 
as langcode5_15_0_, nodefieldf0_.revision_id as revision6_15_0_ from node_revision__field_fenlei 
nodefieldf0_ where nodefieldf0_.entity_id=760 
 {executed in 0 msec}
2020-11-24 18:31:35.752 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------------|---------|------------|
|entity_id |bundle |delta |field_fenlei_target_id |langcode |revision_id |
|----------|-------|------|-----------------------|---------|------------|
|[unread]  |book   |0     |1                      |zh-hans  |760         |
|----------|-------|------|-----------------------|---------|------------|

2020-11-24 18:31:35.754 INFO  jdbc.sqltiming Line:373 - select bookchecke0_.item_id as item_id1_2_, bookchecke0_.fsid as fsid2_2_, bookchecke0_.got 
as got3_2_, bookchecke0_.name as name4_2_, bookchecke0_.parse_fail as parse_fa5_2_, bookchecke0_.parsed 
as parsed6_2_, bookchecke0_.path as path7_2_, bookchecke0_.title as title8_2_, bookchecke0_.vid 
as vid9_2_ from book_check bookchecke0_ where bookchecke0_.fsid='433054176788944' and bookchecke0_.name='net_content' 
 {executed in 0 msec}
2020-11-24 18:31:35.754 INFO  jdbc.resultsettable Line:610 - 
|--------|---------|---------|---------|-----------|---------|---------|---------|---------|
|item_id |fsid     |got      |name     |parse_fail |parsed   |path     |title    |vid      |
|--------|---------|---------|---------|-----------|---------|---------|---------|---------|
|761     |[unread] |[unread] |[unread] |[unread]   |[unread] |[unread] |[unread] |[unread] |
|--------|---------|---------|---------|-----------|---------|---------|---------|---------|

2020-11-24 18:34:33.377 INFO  jdbc.sqltiming Line:373 - update book_check set fsid='433054176788944', got=1, name='net_content', parse_fail='con_comment_thumb', 
parsed=0, path='109-人人都能学会的编程入门课/04丨算法数据结构篇 (9讲)/22丨栈与单调栈：最大矩形面积.html', title='22丨栈与单调栈：最大矩形面积', 
vid=761 where item_id=761 
 {executed in 0 msec}
2020-11-24 18:34:33.384 INFO  jdbc.sqltiming Line:373 - select nodebodyen0_.entity_id as entity_i1_4_, nodebodyen0_.body_value as body_val2_4_, nodebodyen0_.body_summary 
as body_sum3_4_, nodebodyen0_.bundle as bundle4_4_, nodebodyen0_.delta as delta5_4_, nodebodyen0_.body_format 
as body_for6_4_, nodebodyen0_.langcode as langcode7_4_, nodebodyen0_.revision_id as revision8_4_ 
from node__body nodebodyen0_ where nodebodyen0_.entity_id=761 
 {executed in 0 msec}
2020-11-24 18:34:33.385 INFO  jdbc.resultsettable Line:610 - 
|----------|-----------|-------------|-------|------|------------|---------|------------|
|entity_id |body_value |body_summary |bundle |delta |body_format |langcode |revision_id |
|----------|-----------|-------------|-------|------|------------|---------|------------|
|761       |           |             |book   |0     |full_html   |zh-hans  |761         |
|----------|-----------|-------------|-------|------|------------|---------|------------|

2020-11-24 18:34:33.385 INFO  jdbc.sqltiming Line:373 - select nodebodyre0_.entity_id as entity_i1_13_0_, nodebodyre0_.body_value as body_val2_13_0_, 
nodebodyre0_.body_summary as body_sum3_13_0_, nodebodyre0_.bundle as bundle4_13_0_, nodebodyre0_.delta 
as delta5_13_0_, nodebodyre0_.body_format as body_for6_13_0_, nodebodyre0_.langcode as langcode7_13_0_, 
nodebodyre0_.revision_id as revision8_13_0_ from node_revision__body nodebodyre0_ where nodebodyre0_.entity_id=761 
 {executed in 0 msec}
2020-11-24 18:34:33.386 INFO  jdbc.resultsettable Line:610 - 
|----------|-----------|-------------|-------|------|------------|---------|------------|
|entity_id |body_value |body_summary |bundle |delta |body_format |langcode |revision_id |
|----------|-----------|-------------|-------|------|------------|---------|------------|
|[unread]  |           |             |book   |0     |full_html   |zh-hans  |761         |
|----------|-----------|-------------|-------|------|------------|---------|------------|

2020-11-24 18:34:33.389 INFO  jdbc.sqltiming Line:373 - select nodefiledd0_.nid as nid1_10_, nodefiledd0_.changed as changed2_10_, nodefiledd0_.created 
as created3_10_, nodefiledd0_.default_langcode as default_4_10_, nodefiledd0_.langcode as langcode5_10_, 
nodefiledd0_.promote as promote6_10_, nodefiledd0_.revision_translation_affected as revision7_10_, 
nodefiledd0_.status as status8_10_, nodefiledd0_.sticky as sticky9_10_, nodefiledd0_.title 
as title10_10_, nodefiledd0_.type as type11_10_, nodefiledd0_.uid as uid12_10_, nodefiledd0_.vid 
as vid13_10_ from node_field_data nodefiledd0_ where nodefiledd0_.nid=761 
 {executed in 0 msec}
2020-11-24 18:34:33.389 INFO  jdbc.resultsettable Line:610 - 
|----|-----------|-----------|-----------------|---------|--------|------------------------------|-------|-------|----------------|-----|----|----|
|nid |changed    |created    |default_langcode |langcode |promote |revision_translation_affected |status |sticky |title           |type |uid |vid |
|----|-----------|-----------|-----------------|---------|--------|------------------------------|-------|-------|----------------|-----|----|----|
|761 |1606117100 |1606117100 |1                |zh-hans  |0       |1                             |1      |0      |22丨栈与单调栈：最大矩形面积 |book |1   |761 |
|----|-----------|-----------|-----------------|---------|--------|------------------------------|-------|-------|----------------|-----|----|----|

2020-11-24 18:34:33.390 INFO  jdbc.sqltiming Line:373 - select nodefieldr0_.nid as nid1_11_0_, nodefieldr0_.changed as changed2_11_0_, nodefieldr0_.created 
as created3_11_0_, nodefieldr0_.default_langcode as default_4_11_0_, nodefieldr0_.langcode 
as langcode5_11_0_, nodefieldr0_.promote as promote6_11_0_, nodefieldr0_.revision_translation_affected 
as revision7_11_0_, nodefieldr0_.status as status8_11_0_, nodefieldr0_.sticky as sticky9_11_0_, 
nodefieldr0_.title as title10_11_0_, nodefieldr0_.uid as uid11_11_0_, nodefieldr0_.vid as vid12_11_0_ 
from node_field_revision nodefieldr0_ where nodefieldr0_.nid=761 
 {executed in 0 msec}
2020-11-24 18:34:33.390 INFO  jdbc.resultsettable Line:610 - 
|---------|-----------|-----------|-----------------|---------|--------|------------------------------|-------|-------|----------------|----|----|
|nid      |changed    |created    |default_langcode |langcode |promote |revision_translation_affected |status |sticky |title           |uid |vid |
|---------|-----------|-----------|-----------------|---------|--------|------------------------------|-------|-------|----------------|----|----|
|[unread] |1606117100 |1606117100 |1                |zh-hans  |0       |1                             |1      |0      |22丨栈与单调栈：最大矩形面积 |1   |761 |
|---------|-----------|-----------|-----------------|---------|--------|------------------------------|-------|-------|----------------|----|----|

2020-11-24 18:34:33.392 INFO  jdbc.sqltiming Line:373 - update node_field_data set changed=1606214073, created=1606214073, default_langcode=1, langcode='zh-hans', 
promote=0, revision_translation_affected=1, status=1, sticky=0, title='22丨栈与单调栈：最大矩形面积', type='book', 
uid=1, vid=761 where nid=761 
 {executed in 0 msec}
2020-11-24 18:34:33.393 INFO  jdbc.sqltiming Line:373 - update node_field_revision set changed=1606214073, created=1606214073, default_langcode=1, 
langcode='zh-hans', promote=0, revision_translation_affected=1, status=1, sticky=0, title='22丨栈与单调栈：最大矩形面积', 
uid=1, vid=761 where nid=761 
 {executed in 1 msec}
2020-11-24 18:34:33.396 INFO  jdbc.sqltiming Line:373 - select bookfieldm0_.entity_id as entity_i1_8_, bookfieldm0_.bundle as bundle2_8_, bookfieldm0_.delta 
as delta3_8_, bookfieldm0_.langcode as langcode4_8_, bookfieldm0_.field_media_value as field_me5_8_, 
bookfieldm0_.revision_id as revision6_8_ from node__field_media bookfieldm0_ where bookfieldm0_.entity_id=761 
 {executed in 0 msec}
2020-11-24 18:34:33.397 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------------|------------|
|entity_id |bundle |delta |langcode |field_media_value |revision_id |
|----------|-------|------|---------|------------------|------------|
|761       |book   |0     |zh-hans  |                  |761         |
|----------|-------|------|---------|------------------|------------|

2020-11-24 18:34:33.399 INFO  jdbc.sqltiming Line:373 - select nodefieldm0_.entity_id as entity_i1_17_0_, nodefieldm0_.bundle as bundle2_17_0_, nodefieldm0_.delta 
as delta3_17_0_, nodefieldm0_.langcode as langcode4_17_0_, nodefieldm0_.field_media_value as 
field_me5_17_0_, nodefieldm0_.revision_id as revision6_17_0_ from node_revision__field_media 
nodefieldm0_ where nodefieldm0_.entity_id=761 
 {executed in 0 msec}
2020-11-24 18:34:33.399 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------------|------------|
|entity_id |bundle |delta |langcode |field_media_value |revision_id |
|----------|-------|------|---------|------------------|------------|
|[unread]  |book   |0     |zh-hans  |                  |761         |
|----------|-------|------|---------|------------------|------------|

2020-11-24 18:34:33.401 INFO  jdbc.sqltiming Line:373 - select bookfieldc0_.entity_id as entity_i1_5_, bookfieldc0_.bundle as bundle2_5_, bookfieldc0_.field_comment_value 
as field_co3_5_, bookfieldc0_.delta as delta4_5_, bookfieldc0_.field_comment_format as field_co5_5_, 
bookfieldc0_.langcode as langcode6_5_, bookfieldc0_.revision_id as revision7_5_ from node__field_comment 
bookfieldc0_ where bookfieldc0_.entity_id=761 
 {executed in 0 msec}
2020-11-24 18:34:33.402 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|--------------------|------|---------------------|---------|------------|
|entity_id |bundle |field_comment_value |delta |field_comment_format |langcode |revision_id |
|----------|-------|--------------------|------|---------------------|---------|------------|
|761       |book   |                    |0     |full_html            |zh-hans  |761         |
|----------|-------|--------------------|------|---------------------|---------|------------|

2020-11-24 18:34:33.404 INFO  jdbc.sqltiming Line:373 - select nodefieldc0_.entity_id as entity_i1_14_0_, nodefieldc0_.bundle as bundle2_14_0_, nodefieldc0_.field_comment_value 
as field_co3_14_0_, nodefieldc0_.delta as delta4_14_0_, nodefieldc0_.field_comment_format as 
field_co5_14_0_, nodefieldc0_.langcode as langcode6_14_0_, nodefieldc0_.revision_id as revision7_14_0_ 
from node_revision__field_comment nodefieldc0_ where nodefieldc0_.entity_id=761 
 {executed in 0 msec}
2020-11-24 18:34:33.404 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|--------------------|------|---------------------|---------|------------|
|entity_id |bundle |field_comment_value |delta |field_comment_format |langcode |revision_id |
|----------|-------|--------------------|------|---------------------|---------|------------|
|[unread]  |book   |                    |0     |full_html            |zh-hans  |761         |
|----------|-------|--------------------|------|---------------------|---------|------------|

2020-11-24 18:34:33.406 INFO  jdbc.sqltiming Line:373 - select bookfieldt0_.entity_id as entity_i1_9_, bookfieldt0_.bundle as bundle2_9_, bookfieldt0_.delta 
as delta3_9_, bookfieldt0_.langcode as langcode4_9_, bookfieldt0_.revision_id as revision5_9_, 
bookfieldt0_.field_thumb_value as field_th6_9_ from node__field_thumb bookfieldt0_ where bookfieldt0_.entity_id=761 
 {executed in 0 msec}
2020-11-24 18:34:33.407 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------|------------------|
|entity_id |bundle |delta |langcode |revision_id |field_thumb_value |
|----------|-------|------|---------|------------|------------------|
|761       |book   |0     |zh-hans  |761         |                  |
|----------|-------|------|---------|------------|------------------|

2020-11-24 18:34:33.409 INFO  jdbc.sqltiming Line:373 - select nodefieldt0_.entity_id as entity_i1_18_0_, nodefieldt0_.bundle as bundle2_18_0_, nodefieldt0_.delta 
as delta3_18_0_, nodefieldt0_.langcode as langcode4_18_0_, nodefieldt0_.revision_id as revision5_18_0_, 
nodefieldt0_.field_thumb_value as field_th6_18_0_ from node_revision__field_thumb nodefieldt0_ 
where nodefieldt0_.entity_id=761 
 {executed in 1 msec}
2020-11-24 18:34:33.409 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------|------------------|
|entity_id |bundle |delta |langcode |revision_id |field_thumb_value |
|----------|-------|------|---------|------------|------------------|
|[unread]  |book   |0     |zh-hans  |761         |                  |
|----------|-------|------|---------|------------|------------------|

2020-11-24 18:34:33.411 INFO  jdbc.sqltiming Line:373 - select bookfieldf0_.entity_id as entity_i1_6_0_, bookfieldf0_.bundle as bundle2_6_0_, bookfieldf0_.delta 
as delta3_6_0_, bookfieldf0_.field_fenlei_target_id as field_fe4_6_0_, bookfieldf0_.langcode 
as langcode5_6_0_, bookfieldf0_.revision_id as revision6_6_0_ from node__field_fenlei bookfieldf0_ 
where bookfieldf0_.entity_id=761 
 {executed in 0 msec}
2020-11-24 18:34:33.411 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------------|---------|------------|
|entity_id |bundle |delta |field_fenlei_target_id |langcode |revision_id |
|----------|-------|------|-----------------------|---------|------------|
|[unread]  |book   |0     |1                      |zh-hans  |761         |
|----------|-------|------|-----------------------|---------|------------|

2020-11-24 18:34:33.413 INFO  jdbc.sqltiming Line:373 - select nodefieldf0_.entity_id as entity_i1_15_0_, nodefieldf0_.bundle as bundle2_15_0_, nodefieldf0_.delta 
as delta3_15_0_, nodefieldf0_.field_fenlei_target_id as field_fe4_15_0_, nodefieldf0_.langcode 
as langcode5_15_0_, nodefieldf0_.revision_id as revision6_15_0_ from node_revision__field_fenlei 
nodefieldf0_ where nodefieldf0_.entity_id=761 
 {executed in 0 msec}
2020-11-24 18:34:33.413 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------------|---------|------------|
|entity_id |bundle |delta |field_fenlei_target_id |langcode |revision_id |
|----------|-------|------|-----------------------|---------|------------|
|[unread]  |book   |0     |1                      |zh-hans  |761         |
|----------|-------|------|-----------------------|---------|------------|

2020-11-24 18:34:33.415 INFO  jdbc.sqltiming Line:373 - select bookchecke0_.item_id as item_id1_2_, bookchecke0_.fsid as fsid2_2_, bookchecke0_.got 
as got3_2_, bookchecke0_.name as name4_2_, bookchecke0_.parse_fail as parse_fa5_2_, bookchecke0_.parsed 
as parsed6_2_, bookchecke0_.path as path7_2_, bookchecke0_.title as title8_2_, bookchecke0_.vid 
as vid9_2_ from book_check bookchecke0_ where bookchecke0_.fsid='413787653275820' and bookchecke0_.name='net_content' 
 {executed in 0 msec}
2020-11-24 18:34:33.416 INFO  jdbc.resultsettable Line:610 - 
|--------|---------|---------|---------|-----------|---------|---------|---------|---------|
|item_id |fsid     |got      |name     |parse_fail |parsed   |path     |title    |vid      |
|--------|---------|---------|---------|-----------|---------|---------|---------|---------|
|762     |[unread] |[unread] |[unread] |[unread]   |[unread] |[unread] |[unread] |[unread] |
|--------|---------|---------|---------|-----------|---------|---------|---------|---------|

2020-11-24 18:39:08.405 INFO  jdbc.sqltiming Line:373 - update book_check set fsid='413787653275820', got=1, name='net_content', parse_fail='comment_', 
parsed=0, path='109-人人都能学会的编程入门课/04丨算法数据结构篇 (9讲)/23丨深入理解：容斥原理与递推算法.html', title='23丨深入理解：容斥原理与递推算法', 
vid=762 where item_id=762 
 {executed in 0 msec}
2020-11-24 18:39:08.414 INFO  jdbc.sqltiming Line:373 - select nodebodyen0_.entity_id as entity_i1_4_, nodebodyen0_.body_value as body_val2_4_, nodebodyen0_.body_summary 
as body_sum3_4_, nodebodyen0_.bundle as bundle4_4_, nodebodyen0_.delta as delta5_4_, nodebodyen0_.body_format 
as body_for6_4_, nodebodyen0_.langcode as langcode7_4_, nodebodyen0_.revision_id as revision8_4_ 
from node__body nodebodyen0_ where nodebodyen0_.entity_id=762 
 {executed in 0 msec}
2020-11-24 18:39:08.415 INFO  jdbc.resultsettable Line:610 - 
|----------|-----------|-------------|-------|------|------------|---------|------------|
|entity_id |body_value |body_summary |bundle |delta |body_format |langcode |revision_id |
|----------|-----------|-------------|-------|------|------------|---------|------------|
|762       |           |             |book   |0     |full_html   |zh-hans  |762         |
|----------|-----------|-------------|-------|------|------------|---------|------------|

2020-11-24 18:39:08.415 INFO  jdbc.sqltiming Line:373 - select nodebodyre0_.entity_id as entity_i1_13_0_, nodebodyre0_.body_value as body_val2_13_0_, 
nodebodyre0_.body_summary as body_sum3_13_0_, nodebodyre0_.bundle as bundle4_13_0_, nodebodyre0_.delta 
as delta5_13_0_, nodebodyre0_.body_format as body_for6_13_0_, nodebodyre0_.langcode as langcode7_13_0_, 
nodebodyre0_.revision_id as revision8_13_0_ from node_revision__body nodebodyre0_ where nodebodyre0_.entity_id=762 
 {executed in 0 msec}
2020-11-24 18:39:08.416 INFO  jdbc.resultsettable Line:610 - 
|----------|-----------|-------------|-------|------|------------|---------|------------|
|entity_id |body_value |body_summary |bundle |delta |body_format |langcode |revision_id |
|----------|-----------|-------------|-------|------|------------|---------|------------|
|[unread]  |           |             |book   |0     |full_html   |zh-hans  |762         |
|----------|-----------|-------------|-------|------|------------|---------|------------|

2020-11-24 18:39:08.418 INFO  jdbc.sqltiming Line:373 - update node__body set body_value='<div data-slate-editor="true" data-key="1963" autocorrect="off" 
spellcheck="false" data-gramm="false" style="outline: none; white-space: pre-wrap; overflow-wrap: 
break-word;"> <div class="se-f511869d " data-slate-type="paragraph" data-slate-object="block" 
data-key="1964"> <span data-slate-object="text" data-key="1965"><span data-slate-leaf="true" 
data-offset-key="1965:0" data-first-offset="true"><span data-slate-string="true">你好，我是胡光，欢迎回来。</span></span></span> 
</div> <div class="se-eff5b9dc " data-slate-type="paragraph" data-slate-object="block" data-key="1966"> 
<span data-slate-object="text" data-key="1967"><span data-slate-leaf="true" data-offset-key="1967:0" 
data-first-offset="true"><span data-slate-string="true">上两节呢，我们学习了两个具有单调性的数据结构：</span></span></span><span 
data-slate-object="text" data-key="1968"><span data-slate-leaf="true" data-offset-key="1968:0" 
data-first-offset="true"><span class="se-7a5b028a" data-slate-type="bold" data-slate-object="mark"><span 
data-slate-string="true">单调队列</span></span></span></span><span data-slate-object="text" data-key="1969"><span 
data-slate-leaf="true" data-offset-key="1969:0" data-first-offset="true"><span data-slate-string="true">和</span></span></span><span 
data-slate-object="text" data-key="1970"><span data-slate-leaf="true" data-offset-key="1970:0" 
data-first-offset="true"><span class="se-000049e4" data-slate-type="bold" data-slate-object="mark"><span 
data-slate-string="true">单调栈</span></span></span></span><span data-slate-object="text" data-key="1971"><span 
data-slate-leaf="true" data-offset-key="1971:0" data-first-offset="true"><span data-slate-string="true">。其中，单调队列是用来维护滑动窗口内的区间最值的单调结构，单调栈是用来维护最近大于或小于关系的单调结构。这两种单调结构的均摊时间复杂度都是 
</span></span></span><span class="se-873bfe8e se-5c4df624" data-slate-type="inline-katex" data-slate-object="inline" 
data-key="1972"><span data-slate-leaf="true"><span data-slate-string="true" class="katex"><span 
class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span 
class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span 
class="mord">1</span><span class="mclose">)</span></span></span></span></span></span><span 
data-slate-object="text" data-key="1974"><span data-slate-leaf="true" data-offset-key="1974:0" 
data-first-offset="true"><span data-slate-string="true">，每个元素的操作次数最多是 2 次，足以看到这两种结构的高效。如果想彻底掌握这两种结构，我建议你在课下时间要不断地练习。</span></span></span> 
</div> <div class="se-899a6a2c " data-slate-type="paragraph" data-slate-object="block" data-key="1975"> 
<span data-slate-object="text" data-key="1976"><span data-slate-leaf="true" data-offset-key="1976:0" 
data-first-offset="true"><span data-slate-string="true">从今天开始呢，我们将从数据结构，跳跃到算法的学习上。将要带大家认识一类比较偏重于思维的算法，大类叫做递推算法，以及其中的一个重要的组成部分，动态规划类算法。</span></span></span> 
</div> <div class="se-5071b6fb " data-slate-type="paragraph" data-slate-object="block" data-key="1977"> 
<span data-slate-object="text" data-key="1978"><span data-slate-leaf="true" data-offset-key="1978:0" 
data-first-offset="true"><span data-slate-string="true">关于递推算法，在“语言基础篇”的第 5 篇文章</span></span></span><a 
data-slate-type="link" data-slate-object="inline" data-key="1979" class="se-aca7eb14 se-07d00eec"><span 
data-slate-object="text" data-key="1980"><span data-slate-leaf="true" data-offset-key="1980:0" 
data-first-offset="true"><span data-slate-string="true">《数组：一秒钟，定义 1000 个变量》</span></span></span></a><span 
data-slate-object="text" data-key="1981"><span data-slate-leaf="true" data-offset-key="1981:0" 
data-first-offset="true"><span data-slate-string="true">中，我们其实就使用了递推算法的思想。如果你已经忘了的话，可以先回去看看，重新复习一下之前的内容，为今天的课程做好充足的准备。</span></span></span> 
</div> <h2 class="se-2f379fc3" data-slate-type="heading" data-slate-object="block" data-key="1982"><span 
data-slate-object="text" data-key="1983"><span data-slate-leaf="true" data-offset-key="1983:0" 
data-first-offset="true"><span data-slate-string="true">今日任务</span></span></span></h2> <div 
class="se-175c6cb7 " data-slate-type="paragraph" data-slate-object="block" data-key="1984"> 
<span data-slate-object="text" data-key="1985"><span data-slate-leaf="true" data-offset-key="1985:0" 
data-first-offset="true"><span data-slate-string="true">咱们今天这 10 分钟的任务呢，和钱有关系。众所周知，在不计算小于 1 
元钱的面额的前提下，我国的纸币系统中，曾经拥有如下面值：1 元、2 元、5 元、10 元、20 元、50 元 和 100 元。假设，每一种面值的纸币，我们都有无限张，现在想用这些钱凑出 
1000 元，请问你有多少种不同的方案做到？</span></span></span> </div> <div class="se-eaccd914 " data-slate-type="paragraph" 
data-slate-object="block" data-key="1986"> <span data-slate-object="text" data-key="1987"><span 
data-slate-leaf="true" data-offset-key="1987:0" data-first-offset="true"><span data-slate-string="true">这里说的不同方案，是不关注钱币之间的顺序的，例如要凑 
7 元钱，可以是 1 元、5 元、1 元，也可以是 1 元、1 元、5 元，这两种方案我们视为同一种。</span></span></span> </div> <div class="se-feb4a5df 
" data-slate-type="paragraph" data-slate-object="block" data-key="1988"> <span data-slate-object="text" 
data-key="1989"><span data-slate-leaf="true" data-offset-key="1989:0" data-first-offset="true"><span 
data-slate-string="true">好了，面对这个问题，你要怎样进行解决呢？让我们开始今天的学习吧。</span></span></span> </div> <h2 class="se-763389f5" 
data-slate-type="heading" data-slate-object="block" data-key="1990"><span data-slate-object="text" 
data-key="1991"><span data-slate-leaf="true" data-offset-key="1991:0" data-first-offset="true"><span 
data-slate-string="true">必知必会，查缺补漏</span></span></span></h2> <h4 class="se-81bb1c06" data-slate-type="heading" 
data-slate-object="block" data-key="1992"><span data-slate-object="text" data-key="1993"><span 
data-slate-leaf="true" data-offset-key="1993:0" data-first-offset="true"><span data-slate-string="true">温故知新：容斥原理</span></span></span></h4> 
<div class="se-3d99252b " data-slate-type="paragraph" data-slate-object="block" data-key="1994"> 
<span data-slate-object="text" data-key="1995"><span data-slate-leaf="true" data-offset-key="1995:0" 
data-first-offset="true"><span data-slate-string="true">在讲今天的递推问题之前呢，先来带你学习一个与递推思维相关的数学原理：容斥原理。</span></span></span> 
</div> <div class="se-098b8672 " data-slate-type="paragraph" data-slate-object="block" data-key="1996"> 
<span data-slate-object="text" data-key="1997"><span data-slate-leaf="true" data-offset-key="1997:0" 
data-first-offset="true"><span data-slate-string="true">我们知道，一般在计数问题中，为了保证计数准确，必须注意两个问题：一是没有重复，二是没有遗漏。保证没有遗漏，这一点比较好做到，就像对某片地区采取地毯式轰炸，只要炸弹足够多，你可以很容易地保证，没有任何一个被漏掉的地方。可你要保证任何一片土地都仅被轰炸一次，这就很难做到。计数类问题往往也是这样的，想要保证没有遗漏的计数，比较简单，可要是想保证没有重复的计数，可能就困难那么一点儿了。</span></span></span> 
</div> <div class="se-0e6a69de " data-slate-type="paragraph" data-slate-object="block" data-key="1998"> 
<span data-slate-object="text" data-key="1999"><span data-slate-leaf="true" data-offset-key="1999:0" 
data-first-offset="true"><span data-slate-string="true">容斥原理就是为了解决计数类问题中的重复问题，其基本思想是：先不考虑重叠的情况，把包含于某内容中的所有对象的数目先计算出来，然后再把计数时重复计算的数目排斥出去，使得计算的结果既无遗漏又无重复。简单来说，就是在计算过程中，如果加多了，就把加多的部分减掉，如果发现又减多了，就再加回来一部分，一直到不多不少为止。</span></span></span> 
</div> <div class="se-4593213b " data-slate-type="paragraph" data-slate-object="block" data-key="2000"> 
<span data-slate-object="text" data-key="2001"><span data-slate-leaf="true" data-offset-key="2001:0" 
data-first-offset="true"><span data-slate-string="true">这么说，你可能还是有点儿懵。没关系，回想一下，我们之前在第 13 节课</span></span></span><a 
data-slate-type="link" data-slate-object="inline" data-key="2002" class="se-aca7eb14 se-07d00eec"><span 
data-slate-object="text" data-key="2003"><span data-slate-leaf="true" data-offset-key="2003:0" 
data-first-offset="true"><span data-slate-string="true">《程序设计原则：把计算过程交给计算机》</span></span></span></a><span 
data-slate-object="text" data-key="2004"><span data-slate-leaf="true" data-offset-key="2004:0" 
data-first-offset="true"><span data-slate-string="true">中，提到的求 1000 以内，3 或者 5 倍数的所有数字和的问题。</span></span></span> 
</div> <div class="se-b002376d " data-slate-type="paragraph" data-slate-object="block" data-key="2005"> 
<span data-slate-object="text" data-key="2006"><span data-slate-leaf="true" data-offset-key="2006:0" 
data-first-offset="true"><span data-slate-string="true">原问题解决方法如图所示：</span></span></span> </div> 
<div class="se-e996c7e5" data-slate-type="image" data-slate-object="block" data-key="2007"> 
<img class="se-aa7860af" src="https://static001.geekbang.org/resource/image/0b/9d/0b903e61a086497d128d0fe6197ec19d.jpg"> 
<div class="se-28d30c3f"> 图1： 倍数问题的集合表示 </div> </div> <div class="se-cd6c0448 " data-slate-type="paragraph" 
data-slate-object="block" data-key="2008"> <span data-slate-object="text" data-key="2009"><span 
data-slate-leaf="true" data-offset-key="2009:0" data-first-offset="true"><span data-slate-string="true">当时，我们提出了基于等差数列求和的一种做法，就是用 
3 的倍数，加上 5 的倍数，然而我们发现，有一部分加多了，就又减掉了 15 的倍数，这样才是我们真正想要求的值。你仔细想一想，这种做法本质上，其实就是容斥原理的一种体现。</span></span></span> 
</div> <div class="se-65e00255 " data-slate-type="paragraph" data-slate-object="block" data-key="2010"> 
<span data-slate-object="text" data-key="2011"><span data-slate-leaf="true" data-offset-key="2011:0" 
data-first-offset="true"><span data-slate-string="true">关于理解容斥原理，你需要理解问题的集合思维，关于这点呢，我在下面还会带着你做详细的理解，和问题模型的对应。</span></span></span> 
</div> <h4 class="se-9b1daa26" data-slate-type="heading" data-slate-object="block" data-key="2012"><span 
data-slate-object="text" data-key="2013"><span data-slate-leaf="true" data-offset-key="2013:0" 
data-first-offset="true"><span data-slate-string="true">一个递推算法例子：兔子繁殖问题</span></span></span></h4> 
<div class="se-17d21b48 " data-slate-type="paragraph" data-slate-object="block" data-key="2014"> 
<span data-slate-object="text" data-key="2015"><span data-slate-leaf="true" data-offset-key="2015:0" 
data-first-offset="true"><span data-slate-string="true">我们先从一个简单的问题开始，逐步熟悉容斥原理与递推算法。假设有一片草原上，莫名其妙来了一只外星兔子，这种外星兔子呢，第一个月的时候是幼体，第二个月成长为成体，从第三个月开始，成体兔子每个月都会产生出一只克隆体的幼体兔子，而且这种兔子不会衰老，一旦成体以后，就会一直生下去。按照这种情况，请你计算出第 
n 个月，草原上有多少只兔子？</span></span></span> </div> <div class="se-5916c391 " data-slate-type="paragraph" 
data-slate-object="block" data-key="2016"> <span data-slate-object="text" data-key="2017"><span 
data-slate-leaf="true" data-offset-key="2017:0" data-first-offset="true"><span data-slate-string="true">这里我给出了前 
6 个月，草原上兔子数量的情况：</span></span></span> </div> <div class="se-bf2965fa" data-slate-type="image" 
data-slate-object="block" data-key="2018"></div> </div>', body_summary='', bundle='book', delta=0, 
body_format='full_html', langcode='zh-hans', revision_id=762 where entity_id=762 
 {executed in 1 msec}
2020-11-24 18:39:08.419 INFO  jdbc.sqltiming Line:373 - update node_revision__body set body_value='<div data-slate-editor="true" data-key="1963" autocorrect="off" 
spellcheck="false" data-gramm="false" style="outline: none; white-space: pre-wrap; overflow-wrap: 
break-word;"> <div class="se-f511869d " data-slate-type="paragraph" data-slate-object="block" 
data-key="1964"> <span data-slate-object="text" data-key="1965"><span data-slate-leaf="true" 
data-offset-key="1965:0" data-first-offset="true"><span data-slate-string="true">你好，我是胡光，欢迎回来。</span></span></span> 
</div> <div class="se-eff5b9dc " data-slate-type="paragraph" data-slate-object="block" data-key="1966"> 
<span data-slate-object="text" data-key="1967"><span data-slate-leaf="true" data-offset-key="1967:0" 
data-first-offset="true"><span data-slate-string="true">上两节呢，我们学习了两个具有单调性的数据结构：</span></span></span><span 
data-slate-object="text" data-key="1968"><span data-slate-leaf="true" data-offset-key="1968:0" 
data-first-offset="true"><span class="se-7a5b028a" data-slate-type="bold" data-slate-object="mark"><span 
data-slate-string="true">单调队列</span></span></span></span><span data-slate-object="text" data-key="1969"><span 
data-slate-leaf="true" data-offset-key="1969:0" data-first-offset="true"><span data-slate-string="true">和</span></span></span><span 
data-slate-object="text" data-key="1970"><span data-slate-leaf="true" data-offset-key="1970:0" 
data-first-offset="true"><span class="se-000049e4" data-slate-type="bold" data-slate-object="mark"><span 
data-slate-string="true">单调栈</span></span></span></span><span data-slate-object="text" data-key="1971"><span 
data-slate-leaf="true" data-offset-key="1971:0" data-first-offset="true"><span data-slate-string="true">。其中，单调队列是用来维护滑动窗口内的区间最值的单调结构，单调栈是用来维护最近大于或小于关系的单调结构。这两种单调结构的均摊时间复杂度都是 
</span></span></span><span class="se-873bfe8e se-5c4df624" data-slate-type="inline-katex" data-slate-object="inline" 
data-key="1972"><span data-slate-leaf="true"><span data-slate-string="true" class="katex"><span 
class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span 
class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span 
class="mord">1</span><span class="mclose">)</span></span></span></span></span></span><span 
data-slate-object="text" data-key="1974"><span data-slate-leaf="true" data-offset-key="1974:0" 
data-first-offset="true"><span data-slate-string="true">，每个元素的操作次数最多是 2 次，足以看到这两种结构的高效。如果想彻底掌握这两种结构，我建议你在课下时间要不断地练习。</span></span></span> 
</div> <div class="se-899a6a2c " data-slate-type="paragraph" data-slate-object="block" data-key="1975"> 
<span data-slate-object="text" data-key="1976"><span data-slate-leaf="true" data-offset-key="1976:0" 
data-first-offset="true"><span data-slate-string="true">从今天开始呢，我们将从数据结构，跳跃到算法的学习上。将要带大家认识一类比较偏重于思维的算法，大类叫做递推算法，以及其中的一个重要的组成部分，动态规划类算法。</span></span></span> 
</div> <div class="se-5071b6fb " data-slate-type="paragraph" data-slate-object="block" data-key="1977"> 
<span data-slate-object="text" data-key="1978"><span data-slate-leaf="true" data-offset-key="1978:0" 
data-first-offset="true"><span data-slate-string="true">关于递推算法，在“语言基础篇”的第 5 篇文章</span></span></span><a 
data-slate-type="link" data-slate-object="inline" data-key="1979" class="se-aca7eb14 se-07d00eec"><span 
data-slate-object="text" data-key="1980"><span data-slate-leaf="true" data-offset-key="1980:0" 
data-first-offset="true"><span data-slate-string="true">《数组：一秒钟，定义 1000 个变量》</span></span></span></a><span 
data-slate-object="text" data-key="1981"><span data-slate-leaf="true" data-offset-key="1981:0" 
data-first-offset="true"><span data-slate-string="true">中，我们其实就使用了递推算法的思想。如果你已经忘了的话，可以先回去看看，重新复习一下之前的内容，为今天的课程做好充足的准备。</span></span></span> 
</div> <h2 class="se-2f379fc3" data-slate-type="heading" data-slate-object="block" data-key="1982"><span 
data-slate-object="text" data-key="1983"><span data-slate-leaf="true" data-offset-key="1983:0" 
data-first-offset="true"><span data-slate-string="true">今日任务</span></span></span></h2> <div 
class="se-175c6cb7 " data-slate-type="paragraph" data-slate-object="block" data-key="1984"> 
<span data-slate-object="text" data-key="1985"><span data-slate-leaf="true" data-offset-key="1985:0" 
data-first-offset="true"><span data-slate-string="true">咱们今天这 10 分钟的任务呢，和钱有关系。众所周知，在不计算小于 1 
元钱的面额的前提下，我国的纸币系统中，曾经拥有如下面值：1 元、2 元、5 元、10 元、20 元、50 元 和 100 元。假设，每一种面值的纸币，我们都有无限张，现在想用这些钱凑出 
1000 元，请问你有多少种不同的方案做到？</span></span></span> </div> <div class="se-eaccd914 " data-slate-type="paragraph" 
data-slate-object="block" data-key="1986"> <span data-slate-object="text" data-key="1987"><span 
data-slate-leaf="true" data-offset-key="1987:0" data-first-offset="true"><span data-slate-string="true">这里说的不同方案，是不关注钱币之间的顺序的，例如要凑 
7 元钱，可以是 1 元、5 元、1 元，也可以是 1 元、1 元、5 元，这两种方案我们视为同一种。</span></span></span> </div> <div class="se-feb4a5df 
" data-slate-type="paragraph" data-slate-object="block" data-key="1988"> <span data-slate-object="text" 
data-key="1989"><span data-slate-leaf="true" data-offset-key="1989:0" data-first-offset="true"><span 
data-slate-string="true">好了，面对这个问题，你要怎样进行解决呢？让我们开始今天的学习吧。</span></span></span> </div> <h2 class="se-763389f5" 
data-slate-type="heading" data-slate-object="block" data-key="1990"><span data-slate-object="text" 
data-key="1991"><span data-slate-leaf="true" data-offset-key="1991:0" data-first-offset="true"><span 
data-slate-string="true">必知必会，查缺补漏</span></span></span></h2> <h4 class="se-81bb1c06" data-slate-type="heading" 
data-slate-object="block" data-key="1992"><span data-slate-object="text" data-key="1993"><span 
data-slate-leaf="true" data-offset-key="1993:0" data-first-offset="true"><span data-slate-string="true">温故知新：容斥原理</span></span></span></h4> 
<div class="se-3d99252b " data-slate-type="paragraph" data-slate-object="block" data-key="1994"> 
<span data-slate-object="text" data-key="1995"><span data-slate-leaf="true" data-offset-key="1995:0" 
data-first-offset="true"><span data-slate-string="true">在讲今天的递推问题之前呢，先来带你学习一个与递推思维相关的数学原理：容斥原理。</span></span></span> 
</div> <div class="se-098b8672 " data-slate-type="paragraph" data-slate-object="block" data-key="1996"> 
<span data-slate-object="text" data-key="1997"><span data-slate-leaf="true" data-offset-key="1997:0" 
data-first-offset="true"><span data-slate-string="true">我们知道，一般在计数问题中，为了保证计数准确，必须注意两个问题：一是没有重复，二是没有遗漏。保证没有遗漏，这一点比较好做到，就像对某片地区采取地毯式轰炸，只要炸弹足够多，你可以很容易地保证，没有任何一个被漏掉的地方。可你要保证任何一片土地都仅被轰炸一次，这就很难做到。计数类问题往往也是这样的，想要保证没有遗漏的计数，比较简单，可要是想保证没有重复的计数，可能就困难那么一点儿了。</span></span></span> 
</div> <div class="se-0e6a69de " data-slate-type="paragraph" data-slate-object="block" data-key="1998"> 
<span data-slate-object="text" data-key="1999"><span data-slate-leaf="true" data-offset-key="1999:0" 
data-first-offset="true"><span data-slate-string="true">容斥原理就是为了解决计数类问题中的重复问题，其基本思想是：先不考虑重叠的情况，把包含于某内容中的所有对象的数目先计算出来，然后再把计数时重复计算的数目排斥出去，使得计算的结果既无遗漏又无重复。简单来说，就是在计算过程中，如果加多了，就把加多的部分减掉，如果发现又减多了，就再加回来一部分，一直到不多不少为止。</span></span></span> 
</div> <div class="se-4593213b " data-slate-type="paragraph" data-slate-object="block" data-key="2000"> 
<span data-slate-object="text" data-key="2001"><span data-slate-leaf="true" data-offset-key="2001:0" 
data-first-offset="true"><span data-slate-string="true">这么说，你可能还是有点儿懵。没关系，回想一下，我们之前在第 13 节课</span></span></span><a 
data-slate-type="link" data-slate-object="inline" data-key="2002" class="se-aca7eb14 se-07d00eec"><span 
data-slate-object="text" data-key="2003"><span data-slate-leaf="true" data-offset-key="2003:0" 
data-first-offset="true"><span data-slate-string="true">《程序设计原则：把计算过程交给计算机》</span></span></span></a><span 
data-slate-object="text" data-key="2004"><span data-slate-leaf="true" data-offset-key="2004:0" 
data-first-offset="true"><span data-slate-string="true">中，提到的求 1000 以内，3 或者 5 倍数的所有数字和的问题。</span></span></span> 
</div> <div class="se-b002376d " data-slate-type="paragraph" data-slate-object="block" data-key="2005"> 
<span data-slate-object="text" data-key="2006"><span data-slate-leaf="true" data-offset-key="2006:0" 
data-first-offset="true"><span data-slate-string="true">原问题解决方法如图所示：</span></span></span> </div> 
<div class="se-e996c7e5" data-slate-type="image" data-slate-object="block" data-key="2007"> 
<img class="se-aa7860af" src="https://static001.geekbang.org/resource/image/0b/9d/0b903e61a086497d128d0fe6197ec19d.jpg"> 
<div class="se-28d30c3f"> 图1： 倍数问题的集合表示 </div> </div> <div class="se-cd6c0448 " data-slate-type="paragraph" 
data-slate-object="block" data-key="2008"> <span data-slate-object="text" data-key="2009"><span 
data-slate-leaf="true" data-offset-key="2009:0" data-first-offset="true"><span data-slate-string="true">当时，我们提出了基于等差数列求和的一种做法，就是用 
3 的倍数，加上 5 的倍数，然而我们发现，有一部分加多了，就又减掉了 15 的倍数，这样才是我们真正想要求的值。你仔细想一想，这种做法本质上，其实就是容斥原理的一种体现。</span></span></span> 
</div> <div class="se-65e00255 " data-slate-type="paragraph" data-slate-object="block" data-key="2010"> 
<span data-slate-object="text" data-key="2011"><span data-slate-leaf="true" data-offset-key="2011:0" 
data-first-offset="true"><span data-slate-string="true">关于理解容斥原理，你需要理解问题的集合思维，关于这点呢，我在下面还会带着你做详细的理解，和问题模型的对应。</span></span></span> 
</div> <h4 class="se-9b1daa26" data-slate-type="heading" data-slate-object="block" data-key="2012"><span 
data-slate-object="text" data-key="2013"><span data-slate-leaf="true" data-offset-key="2013:0" 
data-first-offset="true"><span data-slate-string="true">一个递推算法例子：兔子繁殖问题</span></span></span></h4> 
<div class="se-17d21b48 " data-slate-type="paragraph" data-slate-object="block" data-key="2014"> 
<span data-slate-object="text" data-key="2015"><span data-slate-leaf="true" data-offset-key="2015:0" 
data-first-offset="true"><span data-slate-string="true">我们先从一个简单的问题开始，逐步熟悉容斥原理与递推算法。假设有一片草原上，莫名其妙来了一只外星兔子，这种外星兔子呢，第一个月的时候是幼体，第二个月成长为成体，从第三个月开始，成体兔子每个月都会产生出一只克隆体的幼体兔子，而且这种兔子不会衰老，一旦成体以后，就会一直生下去。按照这种情况，请你计算出第 
n 个月，草原上有多少只兔子？</span></span></span> </div> <div class="se-5916c391 " data-slate-type="paragraph" 
data-slate-object="block" data-key="2016"> <span data-slate-object="text" data-key="2017"><span 
data-slate-leaf="true" data-offset-key="2017:0" data-first-offset="true"><span data-slate-string="true">这里我给出了前 
6 个月，草原上兔子数量的情况：</span></span></span> </div> <div class="se-bf2965fa" data-slate-type="image" 
data-slate-object="block" data-key="2018"></div> </div>', body_summary='', bundle='book', delta=0, 
body_format='full_html', langcode='zh-hans', revision_id=762 where entity_id=762 
 {executed in 1 msec}
2020-11-24 18:39:08.424 INFO  jdbc.sqltiming Line:373 - select nodefiledd0_.nid as nid1_10_, nodefiledd0_.changed as changed2_10_, nodefiledd0_.created 
as created3_10_, nodefiledd0_.default_langcode as default_4_10_, nodefiledd0_.langcode as langcode5_10_, 
nodefiledd0_.promote as promote6_10_, nodefiledd0_.revision_translation_affected as revision7_10_, 
nodefiledd0_.status as status8_10_, nodefiledd0_.sticky as sticky9_10_, nodefiledd0_.title 
as title10_10_, nodefiledd0_.type as type11_10_, nodefiledd0_.uid as uid12_10_, nodefiledd0_.vid 
as vid13_10_ from node_field_data nodefiledd0_ where nodefiledd0_.nid=762 
 {executed in 0 msec}
2020-11-24 18:39:08.424 INFO  jdbc.resultsettable Line:610 - 
|----|-----------|-----------|-----------------|---------|--------|------------------------------|-------|-------|------------------|-----|----|----|
|nid |changed    |created    |default_langcode |langcode |promote |revision_translation_affected |status |sticky |title             |type |uid |vid |
|----|-----------|-----------|-----------------|---------|--------|------------------------------|-------|-------|------------------|-----|----|----|
|762 |1606117100 |1606117100 |1                |zh-hans  |0       |1                             |1      |0      |23丨深入理解：容斥原理与递推算法 |book |1   |762 |
|----|-----------|-----------|-----------------|---------|--------|------------------------------|-------|-------|------------------|-----|----|----|

2020-11-24 18:39:08.425 INFO  jdbc.sqltiming Line:373 - select nodefieldr0_.nid as nid1_11_0_, nodefieldr0_.changed as changed2_11_0_, nodefieldr0_.created 
as created3_11_0_, nodefieldr0_.default_langcode as default_4_11_0_, nodefieldr0_.langcode 
as langcode5_11_0_, nodefieldr0_.promote as promote6_11_0_, nodefieldr0_.revision_translation_affected 
as revision7_11_0_, nodefieldr0_.status as status8_11_0_, nodefieldr0_.sticky as sticky9_11_0_, 
nodefieldr0_.title as title10_11_0_, nodefieldr0_.uid as uid11_11_0_, nodefieldr0_.vid as vid12_11_0_ 
from node_field_revision nodefieldr0_ where nodefieldr0_.nid=762 
 {executed in 0 msec}
2020-11-24 18:39:08.425 INFO  jdbc.resultsettable Line:610 - 
|---------|-----------|-----------|-----------------|---------|--------|------------------------------|-------|-------|------------------|----|----|
|nid      |changed    |created    |default_langcode |langcode |promote |revision_translation_affected |status |sticky |title             |uid |vid |
|---------|-----------|-----------|-----------------|---------|--------|------------------------------|-------|-------|------------------|----|----|
|[unread] |1606117100 |1606117100 |1                |zh-hans  |0       |1                             |1      |0      |23丨深入理解：容斥原理与递推算法 |1   |762 |
|---------|-----------|-----------|-----------------|---------|--------|------------------------------|-------|-------|------------------|----|----|

2020-11-24 18:39:08.427 INFO  jdbc.sqltiming Line:373 - update node_field_data set changed=1606214348, created=1606214348, default_langcode=1, langcode='zh-hans', 
promote=0, revision_translation_affected=1, status=1, sticky=0, title='23丨深入理解：容斥原理与递推算法', 
type='book', uid=1, vid=762 where nid=762 
 {executed in 0 msec}
2020-11-24 18:39:08.427 INFO  jdbc.sqltiming Line:373 - update node_field_revision set changed=1606214348, created=1606214348, default_langcode=1, 
langcode='zh-hans', promote=0, revision_translation_affected=1, status=1, sticky=0, title='23丨深入理解：容斥原理与递推算法', 
uid=1, vid=762 where nid=762 
 {executed in 0 msec}
2020-11-24 18:39:08.432 INFO  jdbc.sqltiming Line:373 - select bookfieldm0_.entity_id as entity_i1_8_, bookfieldm0_.bundle as bundle2_8_, bookfieldm0_.delta 
as delta3_8_, bookfieldm0_.langcode as langcode4_8_, bookfieldm0_.field_media_value as field_me5_8_, 
bookfieldm0_.revision_id as revision6_8_ from node__field_media bookfieldm0_ where bookfieldm0_.entity_id=762 
 {executed in 0 msec}
2020-11-24 18:39:08.433 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------------|------------|
|entity_id |bundle |delta |langcode |field_media_value |revision_id |
|----------|-------|------|---------|------------------|------------|
|762       |book   |0     |zh-hans  |                  |762         |
|----------|-------|------|---------|------------------|------------|

2020-11-24 18:39:08.434 INFO  jdbc.sqltiming Line:373 - select nodefieldm0_.entity_id as entity_i1_17_0_, nodefieldm0_.bundle as bundle2_17_0_, nodefieldm0_.delta 
as delta3_17_0_, nodefieldm0_.langcode as langcode4_17_0_, nodefieldm0_.field_media_value as 
field_me5_17_0_, nodefieldm0_.revision_id as revision6_17_0_ from node_revision__field_media 
nodefieldm0_ where nodefieldm0_.entity_id=762 
 {executed in 0 msec}
2020-11-24 18:39:08.435 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------------|------------|
|entity_id |bundle |delta |langcode |field_media_value |revision_id |
|----------|-------|------|---------|------------------|------------|
|[unread]  |book   |0     |zh-hans  |                  |762         |
|----------|-------|------|---------|------------------|------------|

2020-11-24 18:39:08.437 INFO  jdbc.sqltiming Line:373 - select bookfieldc0_.entity_id as entity_i1_5_, bookfieldc0_.bundle as bundle2_5_, bookfieldc0_.field_comment_value 
as field_co3_5_, bookfieldc0_.delta as delta4_5_, bookfieldc0_.field_comment_format as field_co5_5_, 
bookfieldc0_.langcode as langcode6_5_, bookfieldc0_.revision_id as revision7_5_ from node__field_comment 
bookfieldc0_ where bookfieldc0_.entity_id=762 
 {executed in 1 msec}
2020-11-24 18:39:08.437 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|--------------------|------|---------------------|---------|------------|
|entity_id |bundle |field_comment_value |delta |field_comment_format |langcode |revision_id |
|----------|-------|--------------------|------|---------------------|---------|------------|
|762       |book   |                    |0     |full_html            |zh-hans  |762         |
|----------|-------|--------------------|------|---------------------|---------|------------|

2020-11-24 18:39:08.439 INFO  jdbc.sqltiming Line:373 - select nodefieldc0_.entity_id as entity_i1_14_0_, nodefieldc0_.bundle as bundle2_14_0_, nodefieldc0_.field_comment_value 
as field_co3_14_0_, nodefieldc0_.delta as delta4_14_0_, nodefieldc0_.field_comment_format as 
field_co5_14_0_, nodefieldc0_.langcode as langcode6_14_0_, nodefieldc0_.revision_id as revision7_14_0_ 
from node_revision__field_comment nodefieldc0_ where nodefieldc0_.entity_id=762 
 {executed in 0 msec}
2020-11-24 18:39:08.439 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|--------------------|------|---------------------|---------|------------|
|entity_id |bundle |field_comment_value |delta |field_comment_format |langcode |revision_id |
|----------|-------|--------------------|------|---------------------|---------|------------|
|[unread]  |book   |                    |0     |full_html            |zh-hans  |762         |
|----------|-------|--------------------|------|---------------------|---------|------------|

2020-11-24 18:39:08.441 INFO  jdbc.sqltiming Line:373 - select bookfieldt0_.entity_id as entity_i1_9_, bookfieldt0_.bundle as bundle2_9_, bookfieldt0_.delta 
as delta3_9_, bookfieldt0_.langcode as langcode4_9_, bookfieldt0_.revision_id as revision5_9_, 
bookfieldt0_.field_thumb_value as field_th6_9_ from node__field_thumb bookfieldt0_ where bookfieldt0_.entity_id=762 
 {executed in 0 msec}
2020-11-24 18:39:08.442 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------|------------------|
|entity_id |bundle |delta |langcode |revision_id |field_thumb_value |
|----------|-------|------|---------|------------|------------------|
|762       |book   |0     |zh-hans  |762         |                  |
|----------|-------|------|---------|------------|------------------|

2020-11-24 18:39:08.444 INFO  jdbc.sqltiming Line:373 - update node__field_thumb set bundle='book', delta=0, langcode='zh-hans', revision_id=762, field_thumb_value='https://static001.geekbang.org/resource/image/ef/2e/ef424b3ef71d7b04b0a3e89ccb3a502e.jpg' 
where entity_id=762 
 {executed in 1 msec}
2020-11-24 18:39:08.447 INFO  jdbc.sqltiming Line:373 - select nodefieldt0_.entity_id as entity_i1_18_0_, nodefieldt0_.bundle as bundle2_18_0_, nodefieldt0_.delta 
as delta3_18_0_, nodefieldt0_.langcode as langcode4_18_0_, nodefieldt0_.revision_id as revision5_18_0_, 
nodefieldt0_.field_thumb_value as field_th6_18_0_ from node_revision__field_thumb nodefieldt0_ 
where nodefieldt0_.entity_id=762 
 {executed in 0 msec}
2020-11-24 18:39:08.448 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------|------------------|
|entity_id |bundle |delta |langcode |revision_id |field_thumb_value |
|----------|-------|------|---------|------------|------------------|
|[unread]  |book   |0     |zh-hans  |762         |                  |
|----------|-------|------|---------|------------|------------------|

2020-11-24 18:39:08.449 INFO  jdbc.sqltiming Line:373 - update node_revision__field_thumb set bundle='book', delta=0, langcode='zh-hans', revision_id=762, 
field_thumb_value='https://static001.geekbang.org/resource/image/ef/2e/ef424b3ef71d7b04b0a3e89ccb3a502e.jpg' 
where entity_id=762 
 {executed in 0 msec}
2020-11-24 18:39:08.453 INFO  jdbc.sqltiming Line:373 - select bookfieldf0_.entity_id as entity_i1_6_0_, bookfieldf0_.bundle as bundle2_6_0_, bookfieldf0_.delta 
as delta3_6_0_, bookfieldf0_.field_fenlei_target_id as field_fe4_6_0_, bookfieldf0_.langcode 
as langcode5_6_0_, bookfieldf0_.revision_id as revision6_6_0_ from node__field_fenlei bookfieldf0_ 
where bookfieldf0_.entity_id=762 
 {executed in 0 msec}
2020-11-24 18:39:08.453 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------------|---------|------------|
|entity_id |bundle |delta |field_fenlei_target_id |langcode |revision_id |
|----------|-------|------|-----------------------|---------|------------|
|[unread]  |book   |0     |1                      |zh-hans  |762         |
|----------|-------|------|-----------------------|---------|------------|

2020-11-24 18:39:08.455 INFO  jdbc.sqltiming Line:373 - select nodefieldf0_.entity_id as entity_i1_15_0_, nodefieldf0_.bundle as bundle2_15_0_, nodefieldf0_.delta 
as delta3_15_0_, nodefieldf0_.field_fenlei_target_id as field_fe4_15_0_, nodefieldf0_.langcode 
as langcode5_15_0_, nodefieldf0_.revision_id as revision6_15_0_ from node_revision__field_fenlei 
nodefieldf0_ where nodefieldf0_.entity_id=762 
 {executed in 0 msec}
2020-11-24 18:39:08.456 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------------|---------|------------|
|entity_id |bundle |delta |field_fenlei_target_id |langcode |revision_id |
|----------|-------|------|-----------------------|---------|------------|
|[unread]  |book   |0     |1                      |zh-hans  |762         |
|----------|-------|------|-----------------------|---------|------------|

2020-11-24 18:39:08.458 INFO  jdbc.sqltiming Line:373 - select bookchecke0_.item_id as item_id1_2_, bookchecke0_.fsid as fsid2_2_, bookchecke0_.got 
as got3_2_, bookchecke0_.name as name4_2_, bookchecke0_.parse_fail as parse_fa5_2_, bookchecke0_.parsed 
as parsed6_2_, bookchecke0_.path as path7_2_, bookchecke0_.title as title8_2_, bookchecke0_.vid 
as vid9_2_ from book_check bookchecke0_ where bookchecke0_.fsid='1099657870129333' and bookchecke0_.name='net_content' 
 {executed in 1 msec}
2020-11-24 18:39:08.458 INFO  jdbc.resultsettable Line:610 - 
|--------|---------|---------|---------|-----------|---------|---------|---------|---------|
|item_id |fsid     |got      |name     |parse_fail |parsed   |path     |title    |vid      |
|--------|---------|---------|---------|-----------|---------|---------|---------|---------|
|763     |[unread] |[unread] |[unread] |[unread]   |[unread] |[unread] |[unread] |[unread] |
|--------|---------|---------|---------|-----------|---------|---------|---------|---------|

2020-11-24 18:42:14.600 INFO  jdbc.sqltiming Line:373 - update book_check set fsid='1099657870129333', got=1, name='net_content', parse_fail='comment_', 
parsed=0, path='109-人人都能学会的编程入门课/04丨算法数据结构篇 (9讲)/24丨动态规划（上）：只需四步，搞定动态规划算法设计.html', title='24丨动态规划（上）：只需四步，搞定动态规划算法设计', 
vid=763 where item_id=763 
 {executed in 1 msec}
2020-11-24 18:42:14.604 INFO  jdbc.sqltiming Line:373 - select nodebodyen0_.entity_id as entity_i1_4_, nodebodyen0_.body_value as body_val2_4_, nodebodyen0_.body_summary 
as body_sum3_4_, nodebodyen0_.bundle as bundle4_4_, nodebodyen0_.delta as delta5_4_, nodebodyen0_.body_format 
as body_for6_4_, nodebodyen0_.langcode as langcode7_4_, nodebodyen0_.revision_id as revision8_4_ 
from node__body nodebodyen0_ where nodebodyen0_.entity_id=763 
 {executed in 0 msec}
2020-11-24 18:42:14.605 INFO  jdbc.resultsettable Line:610 - 
|----------|-----------|-------------|-------|------|------------|---------|------------|
|entity_id |body_value |body_summary |bundle |delta |body_format |langcode |revision_id |
|----------|-----------|-------------|-------|------|------------|---------|------------|
|763       |           |             |book   |0     |full_html   |zh-hans  |763         |
|----------|-----------|-------------|-------|------|------------|---------|------------|

2020-11-24 18:42:14.606 INFO  jdbc.sqltiming Line:373 - select nodebodyre0_.entity_id as entity_i1_13_0_, nodebodyre0_.body_value as body_val2_13_0_, 
nodebodyre0_.body_summary as body_sum3_13_0_, nodebodyre0_.bundle as bundle4_13_0_, nodebodyre0_.delta 
as delta5_13_0_, nodebodyre0_.body_format as body_for6_13_0_, nodebodyre0_.langcode as langcode7_13_0_, 
nodebodyre0_.revision_id as revision8_13_0_ from node_revision__body nodebodyre0_ where nodebodyre0_.entity_id=763 
 {executed in 1 msec}
2020-11-24 18:42:14.606 INFO  jdbc.resultsettable Line:610 - 
|----------|-----------|-------------|-------|------|------------|---------|------------|
|entity_id |body_value |body_summary |bundle |delta |body_format |langcode |revision_id |
|----------|-----------|-------------|-------|------|------------|---------|------------|
|[unread]  |           |             |book   |0     |full_html   |zh-hans  |763         |
|----------|-----------|-------------|-------|------|------------|---------|------------|

2020-11-24 18:42:14.608 INFO  jdbc.sqltiming Line:373 - update node__body set body_value='<div data-slate-editor="true" data-key="321" autocorrect="off" 
spellcheck="false" data-gramm="false" style="outline: none; white-space: pre-wrap; overflow-wrap: 
break-word;"> <div class="se-20de6ba4 " data-slate-type="paragraph" data-slate-object="block" 
data-key="322"> <span data-slate-object="text" data-key="323"><span data-slate-leaf="true" 
data-offset-key="323:0" data-first-offset="true"><span data-slate-string="true">你好，我是胡光，欢迎回来。</span></span></span> 
</div> <div class="se-b5c5c533 " data-slate-type="paragraph" data-slate-object="block" data-key="324"> 
<span data-slate-object="text" data-key="325"><span data-slate-leaf="true" data-offset-key="325:0" 
data-first-offset="true"><span data-slate-string="true">上节课呢，我们学习了递推算法的一般求解步骤：先是定义递推状态，然后推导递推公式，最后是程序设计与实现。并且为了顺利完成递推算法，还介绍了在推导递推公式中的重要指导思想“容斥原理”的相关内容。</span></span></span> 
</div> <div class="se-7c8b856f " data-slate-type="paragraph" data-slate-object="block" data-key="326"> 
<span data-slate-object="text" data-key="327"><span data-slate-leaf="true" data-offset-key="327:0" 
data-first-offset="true"><span data-slate-string="true">递推算法解决的主要类型问题之一，就是计数类问题。就像上节课我们提到的，求 
n 个月以后的小兔子数量，求拼凑钱币的方法总数，还有更早之前学习的，求前 n 个数字二进制表示中 1 的个数，等等，这些都是计数类问题。</span></span></span> </div> 
<div class="se-6d022c01 " data-slate-type="paragraph" data-slate-object="block" data-key="328"> 
<span data-slate-object="text" data-key="329"><span data-slate-leaf="true" data-offset-key="329:0" 
data-first-offset="true"><span data-slate-string="true">而在递推算法中，还有一类不同于计数类问题，它是求解最优化解的问题的算法，这类算法有一个专有名称，叫做：动态规划。这就是我们今天要学习的，递推算法中的一个子集算法，动态规划算法。</span></span></span> 
</div> <h2 class="se-716c7f57" data-slate-type="heading" data-slate-object="block" data-key="330"><span 
data-slate-object="text" data-key="331"><span data-slate-leaf="true" data-offset-key="331:0" 
data-first-offset="true"><span data-slate-string="true">初识：数字三角形问题</span></span></span></h2> 
<div class="se-9c94e09b " data-slate-type="paragraph" data-slate-object="block" data-key="332"> 
<span data-slate-object="text" data-key="333"><span data-slate-leaf="true" data-offset-key="333:0" 
data-first-offset="true"><span data-slate-string="true">想了解什么是动态规划算法，咱们得先从一个叫做“数字三角形”的简单的动态规划问题开始。数字三角形这个问题很简单，这里我给出了一个由数字组成的 
6 层三角形，如下图所示：</span></span></span> </div> <div class="se-285ee7f0" data-slate-type="image" 
data-slate-object="block" data-key="334"></div> </div>', body_summary='', bundle='book', delta=0, 
body_format='full_html', langcode='zh-hans', revision_id=763 where entity_id=763 
 {executed in 1 msec}
2020-11-24 18:42:14.608 INFO  jdbc.sqltiming Line:373 - update node_revision__body set body_value='<div data-slate-editor="true" data-key="321" autocorrect="off" 
spellcheck="false" data-gramm="false" style="outline: none; white-space: pre-wrap; overflow-wrap: 
break-word;"> <div class="se-20de6ba4 " data-slate-type="paragraph" data-slate-object="block" 
data-key="322"> <span data-slate-object="text" data-key="323"><span data-slate-leaf="true" 
data-offset-key="323:0" data-first-offset="true"><span data-slate-string="true">你好，我是胡光，欢迎回来。</span></span></span> 
</div> <div class="se-b5c5c533 " data-slate-type="paragraph" data-slate-object="block" data-key="324"> 
<span data-slate-object="text" data-key="325"><span data-slate-leaf="true" data-offset-key="325:0" 
data-first-offset="true"><span data-slate-string="true">上节课呢，我们学习了递推算法的一般求解步骤：先是定义递推状态，然后推导递推公式，最后是程序设计与实现。并且为了顺利完成递推算法，还介绍了在推导递推公式中的重要指导思想“容斥原理”的相关内容。</span></span></span> 
</div> <div class="se-7c8b856f " data-slate-type="paragraph" data-slate-object="block" data-key="326"> 
<span data-slate-object="text" data-key="327"><span data-slate-leaf="true" data-offset-key="327:0" 
data-first-offset="true"><span data-slate-string="true">递推算法解决的主要类型问题之一，就是计数类问题。就像上节课我们提到的，求 
n 个月以后的小兔子数量，求拼凑钱币的方法总数，还有更早之前学习的，求前 n 个数字二进制表示中 1 的个数，等等，这些都是计数类问题。</span></span></span> </div> 
<div class="se-6d022c01 " data-slate-type="paragraph" data-slate-object="block" data-key="328"> 
<span data-slate-object="text" data-key="329"><span data-slate-leaf="true" data-offset-key="329:0" 
data-first-offset="true"><span data-slate-string="true">而在递推算法中，还有一类不同于计数类问题，它是求解最优化解的问题的算法，这类算法有一个专有名称，叫做：动态规划。这就是我们今天要学习的，递推算法中的一个子集算法，动态规划算法。</span></span></span> 
</div> <h2 class="se-716c7f57" data-slate-type="heading" data-slate-object="block" data-key="330"><span 
data-slate-object="text" data-key="331"><span data-slate-leaf="true" data-offset-key="331:0" 
data-first-offset="true"><span data-slate-string="true">初识：数字三角形问题</span></span></span></h2> 
<div class="se-9c94e09b " data-slate-type="paragraph" data-slate-object="block" data-key="332"> 
<span data-slate-object="text" data-key="333"><span data-slate-leaf="true" data-offset-key="333:0" 
data-first-offset="true"><span data-slate-string="true">想了解什么是动态规划算法，咱们得先从一个叫做“数字三角形”的简单的动态规划问题开始。数字三角形这个问题很简单，这里我给出了一个由数字组成的 
6 层三角形，如下图所示：</span></span></span> </div> <div class="se-285ee7f0" data-slate-type="image" 
data-slate-object="block" data-key="334"></div> </div>', body_summary='', bundle='book', delta=0, 
body_format='full_html', langcode='zh-hans', revision_id=763 where entity_id=763 
 {executed in 0 msec}
2020-11-24 18:42:14.613 INFO  jdbc.sqltiming Line:373 - select nodefiledd0_.nid as nid1_10_, nodefiledd0_.changed as changed2_10_, nodefiledd0_.created 
as created3_10_, nodefiledd0_.default_langcode as default_4_10_, nodefiledd0_.langcode as langcode5_10_, 
nodefiledd0_.promote as promote6_10_, nodefiledd0_.revision_translation_affected as revision7_10_, 
nodefiledd0_.status as status8_10_, nodefiledd0_.sticky as sticky9_10_, nodefiledd0_.title 
as title10_10_, nodefiledd0_.type as type11_10_, nodefiledd0_.uid as uid12_10_, nodefiledd0_.vid 
as vid13_10_ from node_field_data nodefiledd0_ where nodefiledd0_.nid=763 
 {executed in 0 msec}
2020-11-24 18:42:14.614 INFO  jdbc.resultsettable Line:610 - 
|----|-----------|-----------|-----------------|---------|--------|------------------------------|-------|-------|---------------------------|-----|----|----|
|nid |changed    |created    |default_langcode |langcode |promote |revision_translation_affected |status |sticky |title                      |type |uid |vid |
|----|-----------|-----------|-----------------|---------|--------|------------------------------|-------|-------|---------------------------|-----|----|----|
|763 |1606117101 |1606117101 |1                |zh-hans  |0       |1                             |1      |0      |24丨动态规划（上）：只需四步，搞定动态规划算法设计 |book |1   |763 |
|----|-----------|-----------|-----------------|---------|--------|------------------------------|-------|-------|---------------------------|-----|----|----|

2020-11-24 18:42:14.614 INFO  jdbc.sqltiming Line:373 - select nodefieldr0_.nid as nid1_11_0_, nodefieldr0_.changed as changed2_11_0_, nodefieldr0_.created 
as created3_11_0_, nodefieldr0_.default_langcode as default_4_11_0_, nodefieldr0_.langcode 
as langcode5_11_0_, nodefieldr0_.promote as promote6_11_0_, nodefieldr0_.revision_translation_affected 
as revision7_11_0_, nodefieldr0_.status as status8_11_0_, nodefieldr0_.sticky as sticky9_11_0_, 
nodefieldr0_.title as title10_11_0_, nodefieldr0_.uid as uid11_11_0_, nodefieldr0_.vid as vid12_11_0_ 
from node_field_revision nodefieldr0_ where nodefieldr0_.nid=763 
 {executed in 0 msec}
2020-11-24 18:42:14.615 INFO  jdbc.resultsettable Line:610 - 
|---------|-----------|-----------|-----------------|---------|--------|------------------------------|-------|-------|---------------------------|----|----|
|nid      |changed    |created    |default_langcode |langcode |promote |revision_translation_affected |status |sticky |title                      |uid |vid |
|---------|-----------|-----------|-----------------|---------|--------|------------------------------|-------|-------|---------------------------|----|----|
|[unread] |1606117101 |1606117101 |1                |zh-hans  |0       |1                             |1      |0      |24丨动态规划（上）：只需四步，搞定动态规划算法设计 |1   |763 |
|---------|-----------|-----------|-----------------|---------|--------|------------------------------|-------|-------|---------------------------|----|----|

2020-11-24 18:42:14.616 INFO  jdbc.sqltiming Line:373 - update node_field_data set changed=1606214534, created=1606214534, default_langcode=1, langcode='zh-hans', 
promote=0, revision_translation_affected=1, status=1, sticky=0, title='24丨动态规划（上）：只需四步，搞定动态规划算法设计', 
type='book', uid=1, vid=763 where nid=763 
 {executed in 0 msec}
2020-11-24 18:42:14.617 INFO  jdbc.sqltiming Line:373 - update node_field_revision set changed=1606214534, created=1606214534, default_langcode=1, 
langcode='zh-hans', promote=0, revision_translation_affected=1, status=1, sticky=0, title='24丨动态规划（上）：只需四步，搞定动态规划算法设计', 
uid=1, vid=763 where nid=763 
 {executed in 0 msec}
2020-11-24 18:42:14.622 INFO  jdbc.sqltiming Line:373 - select bookfieldm0_.entity_id as entity_i1_8_, bookfieldm0_.bundle as bundle2_8_, bookfieldm0_.delta 
as delta3_8_, bookfieldm0_.langcode as langcode4_8_, bookfieldm0_.field_media_value as field_me5_8_, 
bookfieldm0_.revision_id as revision6_8_ from node__field_media bookfieldm0_ where bookfieldm0_.entity_id=763 
 {executed in 1 msec}
2020-11-24 18:42:14.622 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------------|------------|
|entity_id |bundle |delta |langcode |field_media_value |revision_id |
|----------|-------|------|---------|------------------|------------|
|763       |book   |0     |zh-hans  |                  |763         |
|----------|-------|------|---------|------------------|------------|

2020-11-24 18:42:14.624 INFO  jdbc.sqltiming Line:373 - select nodefieldm0_.entity_id as entity_i1_17_0_, nodefieldm0_.bundle as bundle2_17_0_, nodefieldm0_.delta 
as delta3_17_0_, nodefieldm0_.langcode as langcode4_17_0_, nodefieldm0_.field_media_value as 
field_me5_17_0_, nodefieldm0_.revision_id as revision6_17_0_ from node_revision__field_media 
nodefieldm0_ where nodefieldm0_.entity_id=763 
 {executed in 0 msec}
2020-11-24 18:42:14.624 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------------|------------|
|entity_id |bundle |delta |langcode |field_media_value |revision_id |
|----------|-------|------|---------|------------------|------------|
|[unread]  |book   |0     |zh-hans  |                  |763         |
|----------|-------|------|---------|------------------|------------|

2020-11-24 18:42:14.626 INFO  jdbc.sqltiming Line:373 - select bookfieldc0_.entity_id as entity_i1_5_, bookfieldc0_.bundle as bundle2_5_, bookfieldc0_.field_comment_value 
as field_co3_5_, bookfieldc0_.delta as delta4_5_, bookfieldc0_.field_comment_format as field_co5_5_, 
bookfieldc0_.langcode as langcode6_5_, bookfieldc0_.revision_id as revision7_5_ from node__field_comment 
bookfieldc0_ where bookfieldc0_.entity_id=763 
 {executed in 0 msec}
2020-11-24 18:42:14.626 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|--------------------|------|---------------------|---------|------------|
|entity_id |bundle |field_comment_value |delta |field_comment_format |langcode |revision_id |
|----------|-------|--------------------|------|---------------------|---------|------------|
|763       |book   |                    |0     |full_html            |zh-hans  |763         |
|----------|-------|--------------------|------|---------------------|---------|------------|

2020-11-24 18:42:14.628 INFO  jdbc.sqltiming Line:373 - select nodefieldc0_.entity_id as entity_i1_14_0_, nodefieldc0_.bundle as bundle2_14_0_, nodefieldc0_.field_comment_value 
as field_co3_14_0_, nodefieldc0_.delta as delta4_14_0_, nodefieldc0_.field_comment_format as 
field_co5_14_0_, nodefieldc0_.langcode as langcode6_14_0_, nodefieldc0_.revision_id as revision7_14_0_ 
from node_revision__field_comment nodefieldc0_ where nodefieldc0_.entity_id=763 
 {executed in 0 msec}
2020-11-24 18:42:14.629 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|--------------------|------|---------------------|---------|------------|
|entity_id |bundle |field_comment_value |delta |field_comment_format |langcode |revision_id |
|----------|-------|--------------------|------|---------------------|---------|------------|
|[unread]  |book   |                    |0     |full_html            |zh-hans  |763         |
|----------|-------|--------------------|------|---------------------|---------|------------|

2020-11-24 18:42:14.631 INFO  jdbc.sqltiming Line:373 - select bookfieldt0_.entity_id as entity_i1_9_, bookfieldt0_.bundle as bundle2_9_, bookfieldt0_.delta 
as delta3_9_, bookfieldt0_.langcode as langcode4_9_, bookfieldt0_.revision_id as revision5_9_, 
bookfieldt0_.field_thumb_value as field_th6_9_ from node__field_thumb bookfieldt0_ where bookfieldt0_.entity_id=763 
 {executed in 1 msec}
2020-11-24 18:42:14.631 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------|------------------|
|entity_id |bundle |delta |langcode |revision_id |field_thumb_value |
|----------|-------|------|---------|------------|------------------|
|763       |book   |0     |zh-hans  |763         |                  |
|----------|-------|------|---------|------------|------------------|

2020-11-24 18:42:14.633 INFO  jdbc.sqltiming Line:373 - update node__field_thumb set bundle='book', delta=0, langcode='zh-hans', revision_id=763, field_thumb_value='https://static001.geekbang.org/resource/image/8d/54/8d20d5de093f596ea2df222157aedc54.jpg' 
where entity_id=763 
 {executed in 1 msec}
2020-11-24 18:42:14.635 INFO  jdbc.sqltiming Line:373 - select nodefieldt0_.entity_id as entity_i1_18_0_, nodefieldt0_.bundle as bundle2_18_0_, nodefieldt0_.delta 
as delta3_18_0_, nodefieldt0_.langcode as langcode4_18_0_, nodefieldt0_.revision_id as revision5_18_0_, 
nodefieldt0_.field_thumb_value as field_th6_18_0_ from node_revision__field_thumb nodefieldt0_ 
where nodefieldt0_.entity_id=763 
 {executed in 0 msec}
2020-11-24 18:42:14.635 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------|------------------|
|entity_id |bundle |delta |langcode |revision_id |field_thumb_value |
|----------|-------|------|---------|------------|------------------|
|[unread]  |book   |0     |zh-hans  |763         |                  |
|----------|-------|------|---------|------------|------------------|

2020-11-24 18:42:14.637 INFO  jdbc.sqltiming Line:373 - update node_revision__field_thumb set bundle='book', delta=0, langcode='zh-hans', revision_id=763, 
field_thumb_value='https://static001.geekbang.org/resource/image/8d/54/8d20d5de093f596ea2df222157aedc54.jpg' 
where entity_id=763 
 {executed in 0 msec}
2020-11-24 18:42:14.640 INFO  jdbc.sqltiming Line:373 - select bookfieldf0_.entity_id as entity_i1_6_0_, bookfieldf0_.bundle as bundle2_6_0_, bookfieldf0_.delta 
as delta3_6_0_, bookfieldf0_.field_fenlei_target_id as field_fe4_6_0_, bookfieldf0_.langcode 
as langcode5_6_0_, bookfieldf0_.revision_id as revision6_6_0_ from node__field_fenlei bookfieldf0_ 
where bookfieldf0_.entity_id=763 
 {executed in 1 msec}
2020-11-24 18:42:14.640 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------------|---------|------------|
|entity_id |bundle |delta |field_fenlei_target_id |langcode |revision_id |
|----------|-------|------|-----------------------|---------|------------|
|[unread]  |book   |0     |1                      |zh-hans  |763         |
|----------|-------|------|-----------------------|---------|------------|

2020-11-24 18:42:14.642 INFO  jdbc.sqltiming Line:373 - select nodefieldf0_.entity_id as entity_i1_15_0_, nodefieldf0_.bundle as bundle2_15_0_, nodefieldf0_.delta 
as delta3_15_0_, nodefieldf0_.field_fenlei_target_id as field_fe4_15_0_, nodefieldf0_.langcode 
as langcode5_15_0_, nodefieldf0_.revision_id as revision6_15_0_ from node_revision__field_fenlei 
nodefieldf0_ where nodefieldf0_.entity_id=763 
 {executed in 0 msec}
2020-11-24 18:42:14.642 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------------|---------|------------|
|entity_id |bundle |delta |field_fenlei_target_id |langcode |revision_id |
|----------|-------|------|-----------------------|---------|------------|
|[unread]  |book   |0     |1                      |zh-hans  |763         |
|----------|-------|------|-----------------------|---------|------------|

2020-11-24 18:42:14.644 INFO  jdbc.sqltiming Line:373 - select bookchecke0_.item_id as item_id1_2_, bookchecke0_.fsid as fsid2_2_, bookchecke0_.got 
as got3_2_, bookchecke0_.name as name4_2_, bookchecke0_.parse_fail as parse_fa5_2_, bookchecke0_.parsed 
as parsed6_2_, bookchecke0_.path as path7_2_, bookchecke0_.title as title8_2_, bookchecke0_.vid 
as vid9_2_ from book_check bookchecke0_ where bookchecke0_.fsid='253757520722497' and bookchecke0_.name='net_content' 
 {executed in 0 msec}
2020-11-24 18:42:14.645 INFO  jdbc.resultsettable Line:610 - 
|--------|---------|---------|---------|-----------|---------|---------|---------|---------|
|item_id |fsid     |got      |name     |parse_fail |parsed   |path     |title    |vid      |
|--------|---------|---------|---------|-----------|---------|---------|---------|---------|
|764     |[unread] |[unread] |[unread] |[unread]   |[unread] |[unread] |[unread] |[unread] |
|--------|---------|---------|---------|-----------|---------|---------|---------|---------|

2020-11-24 18:44:42.928 INFO  jdbc.sqltiming Line:373 - update book_check set fsid='253757520722497', got=1, name='net_content', parse_fail='con_comment_thumb', 
parsed=0, path='109-人人都能学会的编程入门课/04丨算法数据结构篇 (9讲)/25丨动态规划（下）：背包问题与动态规划算法优化.html', title='25丨动态规划（下）：背包问题与动态规划算法优化', 
vid=764 where item_id=764 
 {executed in 0 msec}
2020-11-24 18:44:42.932 INFO  jdbc.sqltiming Line:373 - select nodebodyen0_.entity_id as entity_i1_4_, nodebodyen0_.body_value as body_val2_4_, nodebodyen0_.body_summary 
as body_sum3_4_, nodebodyen0_.bundle as bundle4_4_, nodebodyen0_.delta as delta5_4_, nodebodyen0_.body_format 
as body_for6_4_, nodebodyen0_.langcode as langcode7_4_, nodebodyen0_.revision_id as revision8_4_ 
from node__body nodebodyen0_ where nodebodyen0_.entity_id=764 
 {executed in 0 msec}
2020-11-24 18:44:42.932 INFO  jdbc.resultsettable Line:610 - 
|----------|-----------|-------------|-------|------|------------|---------|------------|
|entity_id |body_value |body_summary |bundle |delta |body_format |langcode |revision_id |
|----------|-----------|-------------|-------|------|------------|---------|------------|
|764       |           |             |book   |0     |full_html   |zh-hans  |764         |
|----------|-----------|-------------|-------|------|------------|---------|------------|

2020-11-24 18:44:42.933 INFO  jdbc.sqltiming Line:373 - select nodebodyre0_.entity_id as entity_i1_13_0_, nodebodyre0_.body_value as body_val2_13_0_, 
nodebodyre0_.body_summary as body_sum3_13_0_, nodebodyre0_.bundle as bundle4_13_0_, nodebodyre0_.delta 
as delta5_13_0_, nodebodyre0_.body_format as body_for6_13_0_, nodebodyre0_.langcode as langcode7_13_0_, 
nodebodyre0_.revision_id as revision8_13_0_ from node_revision__body nodebodyre0_ where nodebodyre0_.entity_id=764 
 {executed in 0 msec}
2020-11-24 18:44:42.933 INFO  jdbc.resultsettable Line:610 - 
|----------|-----------|-------------|-------|------|------------|---------|------------|
|entity_id |body_value |body_summary |bundle |delta |body_format |langcode |revision_id |
|----------|-----------|-------------|-------|------|------------|---------|------------|
|[unread]  |           |             |book   |0     |full_html   |zh-hans  |764         |
|----------|-----------|-------------|-------|------|------------|---------|------------|

2020-11-24 18:44:42.936 INFO  jdbc.sqltiming Line:373 - select nodefiledd0_.nid as nid1_10_, nodefiledd0_.changed as changed2_10_, nodefiledd0_.created 
as created3_10_, nodefiledd0_.default_langcode as default_4_10_, nodefiledd0_.langcode as langcode5_10_, 
nodefiledd0_.promote as promote6_10_, nodefiledd0_.revision_translation_affected as revision7_10_, 
nodefiledd0_.status as status8_10_, nodefiledd0_.sticky as sticky9_10_, nodefiledd0_.title 
as title10_10_, nodefiledd0_.type as type11_10_, nodefiledd0_.uid as uid12_10_, nodefiledd0_.vid 
as vid13_10_ from node_field_data nodefiledd0_ where nodefiledd0_.nid=764 
 {executed in 0 msec}
2020-11-24 18:44:42.937 INFO  jdbc.resultsettable Line:610 - 
|----|-----------|-----------|-----------------|---------|--------|------------------------------|-------|-------|-------------------------|-----|----|----|
|nid |changed    |created    |default_langcode |langcode |promote |revision_translation_affected |status |sticky |title                    |type |uid |vid |
|----|-----------|-----------|-----------------|---------|--------|------------------------------|-------|-------|-------------------------|-----|----|----|
|764 |1606117101 |1606117101 |1                |zh-hans  |0       |1                             |1      |0      |25丨动态规划（下）：背包问题与动态规划算法优化 |book |1   |764 |
|----|-----------|-----------|-----------------|---------|--------|------------------------------|-------|-------|-------------------------|-----|----|----|

2020-11-24 18:44:42.938 INFO  jdbc.sqltiming Line:373 - select nodefieldr0_.nid as nid1_11_0_, nodefieldr0_.changed as changed2_11_0_, nodefieldr0_.created 
as created3_11_0_, nodefieldr0_.default_langcode as default_4_11_0_, nodefieldr0_.langcode 
as langcode5_11_0_, nodefieldr0_.promote as promote6_11_0_, nodefieldr0_.revision_translation_affected 
as revision7_11_0_, nodefieldr0_.status as status8_11_0_, nodefieldr0_.sticky as sticky9_11_0_, 
nodefieldr0_.title as title10_11_0_, nodefieldr0_.uid as uid11_11_0_, nodefieldr0_.vid as vid12_11_0_ 
from node_field_revision nodefieldr0_ where nodefieldr0_.nid=764 
 {executed in 1 msec}
2020-11-24 18:44:42.938 INFO  jdbc.resultsettable Line:610 - 
|---------|-----------|-----------|-----------------|---------|--------|------------------------------|-------|-------|-------------------------|----|----|
|nid      |changed    |created    |default_langcode |langcode |promote |revision_translation_affected |status |sticky |title                    |uid |vid |
|---------|-----------|-----------|-----------------|---------|--------|------------------------------|-------|-------|-------------------------|----|----|
|[unread] |1606117101 |1606117101 |1                |zh-hans  |0       |1                             |1      |0      |25丨动态规划（下）：背包问题与动态规划算法优化 |1   |764 |
|---------|-----------|-----------|-----------------|---------|--------|------------------------------|-------|-------|-------------------------|----|----|

2020-11-24 18:44:42.940 INFO  jdbc.sqltiming Line:373 - update node_field_data set changed=1606214682, created=1606214682, default_langcode=1, langcode='zh-hans', 
promote=0, revision_translation_affected=1, status=1, sticky=0, title='25丨动态规划（下）：背包问题与动态规划算法优化', 
type='book', uid=1, vid=764 where nid=764 
 {executed in 0 msec}
2020-11-24 18:44:42.940 INFO  jdbc.sqltiming Line:373 - update node_field_revision set changed=1606214682, created=1606214682, default_langcode=1, 
langcode='zh-hans', promote=0, revision_translation_affected=1, status=1, sticky=0, title='25丨动态规划（下）：背包问题与动态规划算法优化', 
uid=1, vid=764 where nid=764 
 {executed in 0 msec}
2020-11-24 18:44:42.944 INFO  jdbc.sqltiming Line:373 - select bookfieldm0_.entity_id as entity_i1_8_, bookfieldm0_.bundle as bundle2_8_, bookfieldm0_.delta 
as delta3_8_, bookfieldm0_.langcode as langcode4_8_, bookfieldm0_.field_media_value as field_me5_8_, 
bookfieldm0_.revision_id as revision6_8_ from node__field_media bookfieldm0_ where bookfieldm0_.entity_id=764 
 {executed in 0 msec}
2020-11-24 18:44:42.944 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------------|------------|
|entity_id |bundle |delta |langcode |field_media_value |revision_id |
|----------|-------|------|---------|------------------|------------|
|764       |book   |0     |zh-hans  |                  |764         |
|----------|-------|------|---------|------------------|------------|

2020-11-24 18:44:42.946 INFO  jdbc.sqltiming Line:373 - select nodefieldm0_.entity_id as entity_i1_17_0_, nodefieldm0_.bundle as bundle2_17_0_, nodefieldm0_.delta 
as delta3_17_0_, nodefieldm0_.langcode as langcode4_17_0_, nodefieldm0_.field_media_value as 
field_me5_17_0_, nodefieldm0_.revision_id as revision6_17_0_ from node_revision__field_media 
nodefieldm0_ where nodefieldm0_.entity_id=764 
 {executed in 0 msec}
2020-11-24 18:44:42.947 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------------|------------|
|entity_id |bundle |delta |langcode |field_media_value |revision_id |
|----------|-------|------|---------|------------------|------------|
|[unread]  |book   |0     |zh-hans  |                  |764         |
|----------|-------|------|---------|------------------|------------|

2020-11-24 18:44:42.948 INFO  jdbc.sqltiming Line:373 - select bookfieldc0_.entity_id as entity_i1_5_, bookfieldc0_.bundle as bundle2_5_, bookfieldc0_.field_comment_value 
as field_co3_5_, bookfieldc0_.delta as delta4_5_, bookfieldc0_.field_comment_format as field_co5_5_, 
bookfieldc0_.langcode as langcode6_5_, bookfieldc0_.revision_id as revision7_5_ from node__field_comment 
bookfieldc0_ where bookfieldc0_.entity_id=764 
 {executed in 0 msec}
2020-11-24 18:44:42.949 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|--------------------|------|---------------------|---------|------------|
|entity_id |bundle |field_comment_value |delta |field_comment_format |langcode |revision_id |
|----------|-------|--------------------|------|---------------------|---------|------------|
|764       |book   |                    |0     |full_html            |zh-hans  |764         |
|----------|-------|--------------------|------|---------------------|---------|------------|

2020-11-24 18:44:42.951 INFO  jdbc.sqltiming Line:373 - select nodefieldc0_.entity_id as entity_i1_14_0_, nodefieldc0_.bundle as bundle2_14_0_, nodefieldc0_.field_comment_value 
as field_co3_14_0_, nodefieldc0_.delta as delta4_14_0_, nodefieldc0_.field_comment_format as 
field_co5_14_0_, nodefieldc0_.langcode as langcode6_14_0_, nodefieldc0_.revision_id as revision7_14_0_ 
from node_revision__field_comment nodefieldc0_ where nodefieldc0_.entity_id=764 
 {executed in 0 msec}
2020-11-24 18:44:42.951 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|--------------------|------|---------------------|---------|------------|
|entity_id |bundle |field_comment_value |delta |field_comment_format |langcode |revision_id |
|----------|-------|--------------------|------|---------------------|---------|------------|
|[unread]  |book   |                    |0     |full_html            |zh-hans  |764         |
|----------|-------|--------------------|------|---------------------|---------|------------|

2020-11-24 18:44:42.953 INFO  jdbc.sqltiming Line:373 - select bookfieldt0_.entity_id as entity_i1_9_, bookfieldt0_.bundle as bundle2_9_, bookfieldt0_.delta 
as delta3_9_, bookfieldt0_.langcode as langcode4_9_, bookfieldt0_.revision_id as revision5_9_, 
bookfieldt0_.field_thumb_value as field_th6_9_ from node__field_thumb bookfieldt0_ where bookfieldt0_.entity_id=764 
 {executed in 0 msec}
2020-11-24 18:44:42.953 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------|------------------|
|entity_id |bundle |delta |langcode |revision_id |field_thumb_value |
|----------|-------|------|---------|------------|------------------|
|764       |book   |0     |zh-hans  |764         |                  |
|----------|-------|------|---------|------------|------------------|

2020-11-24 18:44:42.955 INFO  jdbc.sqltiming Line:373 - select nodefieldt0_.entity_id as entity_i1_18_0_, nodefieldt0_.bundle as bundle2_18_0_, nodefieldt0_.delta 
as delta3_18_0_, nodefieldt0_.langcode as langcode4_18_0_, nodefieldt0_.revision_id as revision5_18_0_, 
nodefieldt0_.field_thumb_value as field_th6_18_0_ from node_revision__field_thumb nodefieldt0_ 
where nodefieldt0_.entity_id=764 
 {executed in 0 msec}
2020-11-24 18:44:42.956 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------|------------------|
|entity_id |bundle |delta |langcode |revision_id |field_thumb_value |
|----------|-------|------|---------|------------|------------------|
|[unread]  |book   |0     |zh-hans  |764         |                  |
|----------|-------|------|---------|------------|------------------|

2020-11-24 18:44:42.958 INFO  jdbc.sqltiming Line:373 - select bookfieldf0_.entity_id as entity_i1_6_0_, bookfieldf0_.bundle as bundle2_6_0_, bookfieldf0_.delta 
as delta3_6_0_, bookfieldf0_.field_fenlei_target_id as field_fe4_6_0_, bookfieldf0_.langcode 
as langcode5_6_0_, bookfieldf0_.revision_id as revision6_6_0_ from node__field_fenlei bookfieldf0_ 
where bookfieldf0_.entity_id=764 
 {executed in 0 msec}
2020-11-24 18:44:42.958 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------------|---------|------------|
|entity_id |bundle |delta |field_fenlei_target_id |langcode |revision_id |
|----------|-------|------|-----------------------|---------|------------|
|[unread]  |book   |0     |1                      |zh-hans  |764         |
|----------|-------|------|-----------------------|---------|------------|

2020-11-24 18:44:42.960 INFO  jdbc.sqltiming Line:373 - select nodefieldf0_.entity_id as entity_i1_15_0_, nodefieldf0_.bundle as bundle2_15_0_, nodefieldf0_.delta 
as delta3_15_0_, nodefieldf0_.field_fenlei_target_id as field_fe4_15_0_, nodefieldf0_.langcode 
as langcode5_15_0_, nodefieldf0_.revision_id as revision6_15_0_ from node_revision__field_fenlei 
nodefieldf0_ where nodefieldf0_.entity_id=764 
 {executed in 0 msec}
2020-11-24 18:44:42.960 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------------|---------|------------|
|entity_id |bundle |delta |field_fenlei_target_id |langcode |revision_id |
|----------|-------|------|-----------------------|---------|------------|
|[unread]  |book   |0     |1                      |zh-hans  |764         |
|----------|-------|------|-----------------------|---------|------------|

2020-11-24 18:44:42.962 INFO  jdbc.sqltiming Line:373 - select bookchecke0_.item_id as item_id1_2_, bookchecke0_.fsid as fsid2_2_, bookchecke0_.got 
as got3_2_, bookchecke0_.name as name4_2_, bookchecke0_.parse_fail as parse_fa5_2_, bookchecke0_.parsed 
as parsed6_2_, bookchecke0_.path as path7_2_, bookchecke0_.title as title8_2_, bookchecke0_.vid 
as vid9_2_ from book_check bookchecke0_ where bookchecke0_.fsid='191338663413367' and bookchecke0_.name='net_content' 
 {executed in 0 msec}
2020-11-24 18:44:42.963 INFO  jdbc.resultsettable Line:610 - 
|--------|---------|---------|---------|-----------|---------|---------|---------|---------|
|item_id |fsid     |got      |name     |parse_fail |parsed   |path     |title    |vid      |
|--------|---------|---------|---------|-----------|---------|---------|---------|---------|
|765     |[unread] |[unread] |[unread] |[unread]   |[unread] |[unread] |[unread] |[unread] |
|--------|---------|---------|---------|-----------|---------|---------|---------|---------|

2020-11-24 18:47:44.263 INFO  jdbc.sqltiming Line:373 - update book_check set fsid='191338663413367', got=1, name='net_content', parse_fail='comment_', 
parsed=0, path='109-人人都能学会的编程入门课/04丨算法数据结构篇 (9讲)/做好闭环（四）：二分答案算法的代码统一结构.html', title='做好闭环（四）：二分答案算法的代码统一结构', 
vid=765 where item_id=765 
 {executed in 0 msec}
2020-11-24 18:47:44.272 INFO  jdbc.sqltiming Line:373 - select nodebodyen0_.entity_id as entity_i1_4_, nodebodyen0_.body_value as body_val2_4_, nodebodyen0_.body_summary 
as body_sum3_4_, nodebodyen0_.bundle as bundle4_4_, nodebodyen0_.delta as delta5_4_, nodebodyen0_.body_format 
as body_for6_4_, nodebodyen0_.langcode as langcode7_4_, nodebodyen0_.revision_id as revision8_4_ 
from node__body nodebodyen0_ where nodebodyen0_.entity_id=765 
 {executed in 0 msec}
2020-11-24 18:47:44.272 INFO  jdbc.resultsettable Line:610 - 
|----------|-----------|-------------|-------|------|------------|---------|------------|
|entity_id |body_value |body_summary |bundle |delta |body_format |langcode |revision_id |
|----------|-----------|-------------|-------|------|------------|---------|------------|
|765       |           |             |book   |0     |full_html   |zh-hans  |765         |
|----------|-----------|-------------|-------|------|------------|---------|------------|

2020-11-24 18:47:44.273 INFO  jdbc.sqltiming Line:373 - select nodebodyre0_.entity_id as entity_i1_13_0_, nodebodyre0_.body_value as body_val2_13_0_, 
nodebodyre0_.body_summary as body_sum3_13_0_, nodebodyre0_.bundle as bundle4_13_0_, nodebodyre0_.delta 
as delta5_13_0_, nodebodyre0_.body_format as body_for6_13_0_, nodebodyre0_.langcode as langcode7_13_0_, 
nodebodyre0_.revision_id as revision8_13_0_ from node_revision__body nodebodyre0_ where nodebodyre0_.entity_id=765 
 {executed in 0 msec}
2020-11-24 18:47:44.273 INFO  jdbc.resultsettable Line:610 - 
|----------|-----------|-------------|-------|------|------------|---------|------------|
|entity_id |body_value |body_summary |bundle |delta |body_format |langcode |revision_id |
|----------|-----------|-------------|-------|------|------------|---------|------------|
|[unread]  |           |             |book   |0     |full_html   |zh-hans  |765         |
|----------|-----------|-------------|-------|------|------------|---------|------------|

2020-11-24 18:47:44.278 INFO  jdbc.sqltiming Line:373 - update node__body set body_value='<div data-slate-editor="true" data-key="1596" autocorrect="off" 
spellcheck="false" data-gramm="false" style="outline: none; white-space: pre-wrap; overflow-wrap: 
break-word;"> <div class="se-2aefb468 " data-slate-type="paragraph" data-slate-object="block" 
data-key="1597"> <span data-slate-object="text" data-key="1598"><span data-slate-leaf="true" 
data-offset-key="1598:0" data-first-offset="true"><span data-slate-string="true">你好，我是胡光。</span></span></span> 
</div> <div class="se-c3736581 " data-slate-type="paragraph" data-slate-object="block" data-key="1599"> 
<span data-slate-object="text" data-key="1600"><span data-slate-leaf="true" data-offset-key="1600:0" 
data-first-offset="true"><span data-slate-string="true">不知不觉，我们已经讲完了“算法数据结构篇”的全部内容。说是“讲完”，其实更意味着你的算法数据结构的学习之路才刚刚开始，因为编程的核心与灵魂就是算法和数据结构。但这毕竟是一个入门课，所以，整个这部分的内容，我更多是侧重说说那些你可能比较陌生的，且有趣的思维与结构。</span></span></span> 
</div> <div class="se-1a19f56f " data-slate-type="paragraph" data-slate-object="block" data-key="1601"> 
<span data-slate-object="text" data-key="1602"><span data-slate-leaf="true" data-offset-key="1602:0" 
data-first-offset="true"><span data-slate-string="true">我希望通过这个过程，能够激起你对于算法数据结构的学习热情。时至今日，我相信你应该更能深刻地理解我在开篇词里说到的，“学编程，不等于学语言“这句话的含义。</span></span></span> 
</div> <div class="se-4c13dfac " data-slate-type="paragraph" data-slate-object="block" data-key="1603"> 
<span data-slate-object="text" data-key="1604"><span data-slate-leaf="true" data-offset-key="1604:0" 
data-first-offset="true"><span data-slate-string="true">我也非常高兴，看到很多同学都在紧跟着专栏更新节奏，坚持学习。经常在专栏上线的第一时间，这些同学就给我留言，提出自己的疑惑。大部分留言，我都在相对应的课程中回复过了，而对于每节课中的思考题呢，由于要给你充足的思考时间，所以我选择在今天这样一节课中，给你进行一一的解答。</span></span></span> 
</div> <div class="se-2556c201 " data-slate-type="paragraph" data-slate-object="block" data-key="1605"> 
<span data-slate-object="text" data-key="1606"><span data-slate-leaf="true" data-offset-key="1606:0" 
data-first-offset="true"><span data-slate-string="true">看一看我的参考答案，和你的思考结果之间，有什么不同吧。也欢迎你在留言区中，给出一些你感兴趣的题目的思考结果，我希望我们能在这个过程中，碰撞出更多智慧的火花。</span></span></span> 
</div> <h2 class="se-ee8f6427" data-slate-type="heading" data-slate-object="block" data-key="1607"><a 
data-slate-type="link" data-slate-object="inline" data-key="1608" class="se-4be0ddc9 se-76b96135"><span 
data-slate-object="text" data-key="1609"><span data-slate-leaf="true" data-offset-key="1609:0" 
data-first-offset="true"><span data-slate-string="true">重新认识数据结构（上）：初识链表结构</span></span></span></a></h2> 
<div class="se-5974e7b2 " data-slate-type="paragraph" data-slate-object="block" data-key="1610"> 
<span data-slate-object="text" data-key="1611"><span data-slate-leaf="true" data-offset-key="1611:0" 
data-first-offset="true"><span data-slate-string="true">在这一节里，我们学习了基本的链表结构，并且演示了链表结构的插入操作。最后呢，给你留了一个题目，就是实现链表的删除操作。留言区中很多人实现的代码，我也都看过了，总的来说，很多用户对“虚拟头结点”的掌握还是很不错的，下面是我给出的参考代码：</span></span></span> 
</div> <div class="se-bb43c4bf se-952fc9c7" data-slate-type="pre" data-slate-object="block" 
data-key="1612" data-code-language="cpp"> <div class="se-d1ea42f0 se-e8e76daf"> <span></span> 
</div> <div class="se-1e54cdf1"> <div class="se-ec233324 se-d68df055" data-code-line-number="1"></div> 
<div class="se-ec233324 se-d68df055" data-code-line-number="2"></div> <div class="se-ec233324 
se-d68df055" data-code-line-number="3"></div> <div class="se-ec233324 se-d68df055" data-code-line-number="4"></div> 
<div class="se-ec233324 se-d68df055" data-code-line-number="5"></div> <div class="se-ec233324 
se-d68df055" data-code-line-number="6"></div> <div class="se-ec233324 se-d68df055" data-code-line-number="7"></div> 
<div class="se-ec233324 se-d68df055" data-code-line-number="8"></div> </div> <div class="se-ef13dd83 
ps ps--active-x"> <div class="se-edcd0337 se-376506be" data-slate-type="code-line" data-slate-object="block" 
data-key="1613"> <span data-slate-object="text" data-key="1614"><span data-slate-leaf="true" 
data-offset-key="1614:0" data-first-offset="true"><span class=" gkhl-function" data-slate-object="annotation" 
data-annotation-key="gkann_7659470317" data-annotation-type="annotation"><span data-slate-string="true">struct 
Node *erase(strcut Node *head, int ind) </span></span></span><span data-slate-leaf="true" data-offset-key="1614:1"><span 
data-slate-string="true">{</span></span></span> </div> <div class="se-edcd0337 se-376506be" 
data-slate-type="code-line" data-slate-object="block" data-key="1615"> <span data-slate-object="text" 
data-key="1616"><span data-slate-leaf="true" data-offset-key="1616:0" data-first-offset="true"><span 
data-slate-string="true"> </span></span><span data-slate-leaf="true" data-offset-key="1616:1"><span 
class=" gkhl-class" data-slate-object="annotation" data-annotation-key="gkann_6742691392" data-annotation-type="annotation"><span 
class=" gkhl-keyword" data-slate-object="annotation" data-annotation-key="gkann_2089444764" 
data-annotation-type="annotation"><span data-slate-string="true">struct</span></span></span></span><span 
data-slate-leaf="true" data-offset-key="1616:2"><span class=" gkhl-class" data-slate-object="annotation" 
data-annotation-key="gkann_6742691392" data-annotation-type="annotation"><span data-slate-string="true"> 
</span></span></span><span data-slate-leaf="true" data-offset-key="1616:3"><span class=" gkhl-class" 
data-slate-object="annotation" data-annotation-key="gkann_6742691392" data-annotation-type="annotation"><span 
class=" gkhl-title" data-slate-object="annotation" data-annotation-key="gkann_4366181669" data-annotation-type="annotation"><span 
data-slate-string="true">Node</span></span></span></span><span data-slate-leaf="true" data-offset-key="1616:4"><span 
class=" gkhl-class" data-slate-object="annotation" data-annotation-key="gkann_6742691392" data-annotation-type="annotation"><span 
data-slate-string="true"> </span></span></span><span data-slate-leaf="true" data-offset-key="1616:5"><span 
class=" gkhl-class" data-slate-object="annotation" data-annotation-key="gkann_6742691392" data-annotation-type="annotation"><span 
class=" gkhl-title" data-slate-object="annotation" data-annotation-key="gkann_4723784028" data-annotation-type="annotation"><span 
data-slate-string="true">ret</span></span></span></span><span data-slate-leaf="true" data-offset-key="1616:6"><span 
class=" gkhl-class" data-slate-object="annotation" data-annotation-key="gkann_6742691392" data-annotation-type="annotation"><span 
data-slate-string="true">, *</span></span></span><span data-slate-leaf="true" data-offset-key="1616:7"><span 
class=" gkhl-class" data-slate-object="annotation" data-annotation-key="gkann_6742691392" data-annotation-type="annotation"><span 
class=" gkhl-title" data-slate-object="annotation" data-annotation-key="gkann_2603293946" data-annotation-type="annotation"><span 
data-slate-string="true">p</span></span></span></span><span data-slate-leaf="true" data-offset-key="1616:8"><span 
class=" gkhl-class" data-slate-object="annotation" data-annotation-key="gkann_6742691392" data-annotation-type="annotation"><span 
data-slate-string="true"> = &amp;</span></span></span><span data-slate-leaf="true" data-offset-key="1616:9"><span 
class=" gkhl-class" data-slate-object="annotation" data-annotation-key="gkann_6742691392" data-annotation-type="annotation"><span 
class=" gkhl-title" data-slate-object="annotation" data-annotation-key="gkann_0151104729" data-annotation-type="annotation"><span 
data-slate-string="true">ret</span></span></span></span><span data-slate-leaf="true" data-offset-key="1616:10"><span 
class=" gkhl-class" data-slate-object="annotation" data-annotation-key="gkann_6742691392" data-annotation-type="annotation"><span 
data-slate-string="true">, *</span></span></span><span data-slate-leaf="true" data-offset-key="1616:11"><span 
class=" gkhl-class" data-slate-object="annotation" data-annotation-key="gkann_6742691392" data-annotation-type="annotation"><span 
class=" gkhl-title" data-slate-object="annotation" data-annotation-key="gkann_3974845887" data-annotation-type="annotation"><span 
data-slate-string="true">q</span></span></span></span><span data-slate-leaf="true" data-offset-key="1616:12"><span 
class=" gkhl-class" data-slate-object="annotation" data-annotation-key="gkann_6742691392" data-annotation-type="annotation"><span 
data-slate-string="true">;</span></span></span></span> </div> <div class="se-edcd0337 se-376506be" 
data-slate-type="code-line" data-slate-object="block" data-key="1617"> <span data-slate-object="text" 
data-key="1618"><span data-slate-leaf="true" data-offset-key="1618:0" data-first-offset="true"><span 
data-slate-string="true"> ret.next = head;</span></span></span> </div> <div class="se-edcd0337 
se-376506be" data-slate-type="code-line" data-slate-object="block" data-key="1619"> <span data-slate-object="text" 
data-key="1620"><span data-slate-leaf="true" data-offset-key="1620:0" data-first-offset="true"><span 
data-slate-string="true"> </span></span><span data-slate-leaf="true" data-offset-key="1620:1"><span 
class=" gkhl-keyword" data-slate-object="annotation" data-annotation-key="gkann_4051126268" 
data-annotation-type="annotation"><span data-slate-string="true">while</span></span></span><span 
data-slate-leaf="true" data-offset-key="1620:2"><span data-slate-string="true"> (ind--) p = 
p-&gt;next;</span></span></span> </div> <div class="se-edcd0337 se-376506be" data-slate-type="code-line" 
data-slate-object="block" data-key="1621"> <span data-slate-object="text" data-key="1622"><span 
data-slate-leaf="true" data-offset-key="1622:0" data-first-offset="true"><span data-slate-string="true"> 
q = p-&gt;next;</span></span></span> </div> <div class="se-edcd0337 se-376506be" data-slate-type="code-line" 
data-slate-object="block" data-key="1623"> <span data-slate-object="text" data-key="1624"><span 
data-slate-leaf="true" data-offset-key="1624:0" data-first-offset="true"><span data-slate-string="true"> 
p-&gt;next = p-&gt;next-&gt;next;</span></span></span> </div> <div class="se-edcd0337 se-376506be" 
data-slate-type="code-line" data-slate-object="block" data-key="1625"> <span data-slate-object="text" 
data-key="1626"><span data-slate-leaf="true" data-offset-key="1626:0" data-first-offset="true"><span 
data-slate-string="true"> </span></span><span data-slate-leaf="true" data-offset-key="1626:1"><span 
class=" gkhl-keyword" data-slate-object="annotation" data-annotation-key="gkann_7841770371" 
data-annotation-type="annotation"><span data-slate-string="true">return</span></span></span><span 
data-slate-leaf="true" data-offset-key="1626:2"><span data-slate-string="true"> ret.next;</span></span></span> 
</div> <div class="se-edcd0337 se-376506be" data-slate-type="code-line" data-slate-object="block" 
data-key="1627"> <span data-slate-object="text" data-key="1628"><span data-slate-leaf="true" 
data-offset-key="1628:0" data-first-offset="true"><span data-slate-string="true">}</span></span></span> 
</div> <div class="ps__rail-x" style="width: 365px; left: 0px; bottom: 0px;"> <div class="ps__thumb-x" 
tabindex="0" style="left: 0px; width: 356px;"></div> </div> <div class="ps__rail-y" style="top: 
0px; right: 0px;"> <div class="ps__thumb-y" tabindex="0" style="top: 0px; height: 0px;"></div> 
</div> </div> </div> <div class="se-511a7e95 " data-slate-type="paragraph" data-slate-object="block" 
data-key="1629"> <span data-slate-object="text" data-key="1630"><span data-slate-leaf="true" 
data-offset-key="1630:0" data-first-offset="true"><span data-slate-string="true">由于删除操作，有可能删除的是 
head 所指向链表的头结点，所以代码中使用了虚拟头结点的技巧来实现。其中，细心的你可能会发现一个致命的问题：删除节点的操作中，我们只是改变了链表节点的指向关系，跳过了那个待删除节点的位置，那原先那个待删除节点呢？这个节点的空间呢？</span></span></span> 
</div> <div class="se-b5aa48d1 " data-slate-type="paragraph" data-slate-object="block" data-key="1631"> 
<span data-slate-object="text" data-key="1632"><span data-slate-leaf="true" data-offset-key="1632:0" 
data-first-offset="true"><span data-slate-string="true">这就涉及到操作系统中的内存管理相关的知识了，由于这里不影响编程逻辑的理解，所以，我们就不展开说了。如果你感兴趣，可以自行搜索：内存泄漏、malloc、free 
等关键字进行学习。</span></span></span> </div> <h2 class="se-04054904" data-slate-type="heading" data-slate-object="block" 
data-key="1633"><a data-slate-type="link" data-slate-object="inline" data-key="1634" class="se-4be0ddc9 
se-76b96135"><span data-slate-object="text" data-key="1635"><span data-slate-leaf="true" data-offset-key="1635:0" 
data-first-offset="true"><span data-slate-string="true">重新认识数据结构（下）：有趣的 “链表” 思维</span></span></span></a></h2> 
<div class="se-3e0eb96b " data-slate-type="paragraph" data-slate-object="block" data-key="1636"> 
<span data-slate-object="text" data-key="1637"><span data-slate-leaf="true" data-offset-key="1637:0" 
data-first-offset="true"><span data-slate-string="true">这一节是上一节链表知识的升华，我们将一个快乐数序列，在思维层面映射成了链表结构，之后就将快乐数的判定问题，很自然的转换成了链表判环问题，算是彻彻底底的体验了一把链表思维。最后呢，我留了两个思考题，下面我给你一一解答。</span></span></span> 
</div> <h4 class="se-5a531b69" data-slate-type="heading" data-slate-object="block" data-key="1638"><span 
data-slate-object="text" data-key="1639"><span data-slate-leaf="true" data-offset-key="1639:0" 
data-first-offset="true"><span data-slate-string="true">1. 计算环的长度</span></span></span></h4> 
<div class="se-3d5e5288 " data-slate-type="paragraph" data-slate-object="block" data-key="1640"> 
<span data-slate-object="text" data-key="1641"><span data-slate-leaf="true" data-offset-key="1641:0" 
data-first-offset="true"><span data-slate-string="true">第一个问题，如果链表中有环的话，那么这个环的长度是多少？这个问题比较简单，我看到留言区中很多用户都能自行想出来，在这里我就简单说一说。</span></span></span> 
</div> <div class="se-09fd74e0 " data-slate-type="paragraph" data-slate-object="block" data-key="1642"> 
<span data-slate-object="text" data-key="1643"><span data-slate-leaf="true" data-offset-key="1643:0" 
data-first-offset="true"><span data-slate-string="true">我们可以肯定，如果链表中有环，那么采用快慢指针的方法，两个指针一定会在环中相遇。此时，可以让其中一个指针不动，另外一个指针再沿着环走一圈，直到两个指针再次相遇，这样，就能得到环的长度了。</span></span></span> 
</div> <h4 class="se-e80896d7" data-slate-type="heading" data-slate-object="block" data-key="1644"><span 
data-slate-object="text" data-key="1645"><span data-slate-leaf="true" data-offset-key="1645:0" 
data-first-offset="true"><span data-slate-string="true">2. 找到环的起始位置</span></span></span></h4> 
<div class="se-5f7afa1e " data-slate-type="paragraph" data-slate-object="block" data-key="1646"> 
<span data-slate-object="text" data-key="1647"><span data-slate-leaf="true" data-offset-key="1647:0" 
data-first-offset="true"><span data-slate-string="true">第二个问题，如果链表中有环，请求出环的起始点。如下图所示，环的起始点为 
3 号点。</span></span></span> </div> <div class="se-5dec3d8a" data-slate-type="image" data-slate-object="block" 
data-key="1648"> <img class="se-a6d69e31" src="https://static001.geekbang.org/resource/image/ca/74/caf1c157963e86d929d28b9d6b747674.jpg"> 
<div class="se-20d5237f"> 图1： 链表成环示意图 </div> </div> <div class="se-ad00287a " data-slate-type="paragraph" 
data-slate-object="block" data-key="1649"> <span data-slate-object="text" data-key="1650"><span 
data-slate-leaf="true" data-offset-key="1650:0" data-first-offset="true"><span data-slate-string="true">这里呢，我将用图跟你感性地解答这个问题，请你注意，以下我所要讲的不是一个严格的证明过程，如果想要更准确地理解这个问题，你可以试着借助“同余式”来理解。下面，就开始我们的非严谨图例演示。</span></span></span> 
</div> <div class="se-74b131b1 " data-slate-type="paragraph" data-slate-object="block" data-key="1651"> 
<span data-slate-object="text" data-key="1652"><span data-slate-leaf="true" data-offset-key="1652:0" 
data-first-offset="true"><span data-slate-string="true">首先，假设从链表起始点到环的起点距离为 x，那么当快慢指针中的慢指针 
p 刚刚走到环的起始点位置的时候，q 指针应该在环内部距离环起始点 x 的位置上，如图所示：</span></span></span> </div> <div class="se-bb059985" 
data-slate-type="image" data-slate-object="block" data-key="1653"> <img class="se-cecefaff" 
src="https://static001.geekbang.org/resource/image/e6/e6/e60d36ddb8d437c776d73e54e01252e6.jpg"> 
<div class="se-23bfcbb8"> 图2： p 节点刚刚进入环时刻 </div> </div> <div class="se-a44087f1 " data-slate-type="paragraph" 
data-slate-object="block" data-key="1654"> <span data-slate-object="text" data-key="1655"><span 
data-slate-leaf="true" data-offset-key="1655:0" data-first-offset="true"><span data-slate-string="true">图中，q 
指针距离环起始点 x 步，q 指针沿着链表向前走 y 步，就又可以到达环的起始点位置，如图所示 x + y 等于环长。也就是说，q 指针想要遇到 p 指针，就必须要追上 y 步的距离，又因为 
p 指针每次走 1 步，q 指针每轮走 2 步，所以 q 指针每轮追上 1 步，也就是说，从此刻开始，当 q 指针追上 p 指针的时候，p 指针正好向前走了 y 步，如图所示：</span></span></span> 
</div> <div class="se-4871ed7b" data-slate-type="image" data-slate-object="block" data-key="1656"> 
<img class="se-6b8cedb2" src="https://static001.geekbang.org/resource/image/23/56/23c57e116b438cb6774f8420e1d86156.jpg"> 
<div class="se-e8ba5d70"> 图3： p、q环中相遇时刻 </div> </div> <div class="se-f6ca17b9 " data-slate-type="paragraph" 
data-slate-object="block" data-key="1657"> <span data-slate-object="text" data-key="1658"><span 
data-slate-leaf="true" data-offset-key="1658:0" data-first-offset="true"><span data-slate-string="true">此时，你会发现 
p 点在环中走了 y 步以后，p 和 q 相遇了，也就意味着 p 点再走 x 步就到环的起始点了。而恰巧，从链表头结点开始到环的起始点也是 x 步，所以此时只需要让 p 站在相遇点，q 
指针回到链表的起始点，然后两个指针以相同的速度，一起往后走，直到二者再次相遇的时候，相遇点就是环的起始点了。</span></span></span> </div> <div class="se-96460d15 
" data-slate-type="paragraph" data-slate-object="block" data-key="1659"> <span data-slate-object="text" 
data-key="1660"><span data-slate-leaf="true" data-offset-key="1660:0" data-first-offset="true"><span 
data-slate-string="true">至此，我们就看完了求解环起始点位置的方法，至于代码么，就不是难题了，你可以自行发挥了。</span></span></span> </div> 
<h2 class="se-3b30b194" data-slate-type="heading" data-slate-object="block" data-key="1661"><a 
data-slate-type="link" data-slate-object="inline" data-key="1662" class="se-4be0ddc9 se-76b96135"><span 
data-slate-object="text" data-key="1663"><span data-slate-leaf="true" data-offset-key="1663:0" 
data-first-offset="true"><span data-slate-string="true">二分查找：提升程序的查找效率</span></span></span></a></h2> 
<div class="se-23ba00af " data-slate-type="paragraph" data-slate-object="block" data-key="1664"> 
<span data-slate-object="text" data-key="1665"><span data-slate-leaf="true" data-offset-key="1665:0" 
data-first-offset="true"><span data-slate-string="true">这一节中呢，我们学习了简单的二分查找算法，由此我们引申出了二分答案的相关算法。二分答案算法的应用场景呢，就是有一个函数 
f(x) = y，如果它具有单调性，并且通过 x 求 y 很好求，而通过 y 确定 x 就很麻烦，这时，二分答案算法就该登场了。</span></span></span> </div> 
<div class="se-5c2723a7 " data-slate-type="paragraph" data-slate-object="block" data-key="1666"> 
<span data-slate-object="text" data-key="1667"><span data-slate-leaf="true" data-offset-key="1667:0" 
data-first-offset="true"><span data-slate-string="true">最后的思考题中呢，是一道通过税后工资，计算税前工资的题目。我们可以发现，根据个人所得税缴纳的规则，肯定是税前工资越高，税后工资就越高，所以我们把税前工资 
x 和税后工资 y 之间，看成是一个映射关系 f 的话，那么 f(x) = y 的函数，就是单调函数。</span></span></span> </div> <div class="se-b42a4183 
" data-slate-type="paragraph" data-slate-object="block" data-key="1668"> <span data-slate-object="text" 
data-key="1669"><span data-slate-leaf="true" data-offset-key="1669:0" data-first-offset="true"><span 
data-slate-string="true">而这个 f 函数呢，我们也可以看到，通过税前工资 x 确定税后工资 y 的过程很简单，而通过税后工资 y 计算税前工资 x 的过程就不那么容易了。因此，我们当然要搬出二分答案算法，来解决这个问题了。下面是我给出的示例代码：</span></span></span> 
</div> <div class="se-41999ab1 se-153bd3ce" data-slate-type="pre" data-slate-object="block" 
data-key="1670" data-code-language="cpp"> <div class="se-65dab90d se-d4880c5b"> <span></span> 
</div> <div class="se-b10f6dc4"> <div class="se-27e07122 se-076a1937" data-code-line-number="1"></div> 
<div class="se-27e07122 se-076a1937" data-code-line-number="2"></div> <div class="se-27e07122 
se-076a1937" data-code-line-number="3"></div> <div class="se-27e07122 se-076a1937" data-code-line-number="4"></div> 
<div class="se-27e07122 se-076a1937" data-code-line-number="5"></div> <div class="se-27e07122 
se-076a1937" data-code-line-number="6"></div> <div class="se-27e07122 se-076a1937" data-code-line-number="7"></div> 
<div class="se-27e07122 se-076a1937" data-code-line-number="8"></div> <div class="se-27e07122 
se-076a1937" data-code-line-number="9"></div> <div class="se-27e07122 se-076a1937" data-code-line-number="10"></div> 
<div class="se-27e07122 se-076a1937" data-code-line-number="11"></div> <div class="se-27e07122 
se-076a1937" data-code-line-number="12"></div> <div class="se-27e07122 se-076a1937" data-code-line-number="13"></div> 
<div class="se-27e07122 se-076a1937" data-code-line-number="14"></div> <div class="se-27e07122 
se-076a1937" data-code-line-number="15"></div> <div class="se-27e07122 se-076a1937" data-code-line-number="16"></div> 
<div class="se-27e07122 se-076a1937" data-code-line-number="17"></div> <div class="se-27e07122 
se-076a1937" data-code-line-number="18"></div> <div class="se-27e07122 se-076a1937" data-code-line-number="19"></div> 
<div class="se-27e07122 se-076a1937" data-code-line-number="20"></div> <div class="se-27e07122 
se-076a1937" data-code-line-number="21"></div> <div class="se-27e07122 se-076a1937" data-code-line-number="22"></div> 
<div class="se-27e07122 se-076a1937" data-code-line-number="23"></div> </div> <div class="se-f2a2db7c 
ps ps--active-x"> <div class="se-edcd0337 se-376506be" data-slate-type="code-line" data-slate-object="block" 
data-key="1671"> <span data-slate-object="text" data-key="1672"><span data-slate-leaf="true" 
data-offset-key="1672:0" data-first-offset="true"><span class=" gkhl-meta" data-slate-object="annotation" 
data-annotation-key="gkann_1670845127" data-annotation-type="annotation"><span data-slate-string="true">#define 
EPS 1e-7</span></span></span></span> </div> <div class="se-edcd0337 se-376506be" data-slate-type="code-line" 
data-slate-object="block" data-key="1673"> <span data-slate-object="text" data-key="1674"><span 
data-slate-leaf="true" data-offset-key="1674:0" data-first-offset="true"><span class=" gkhl-meta" 
data-slate-object="annotation" data-annotation-key="gkann_5509934242" data-annotation-type="annotation"><span 
data-slate-string="true">#define min(a, b) ((a) &lt; (b) ? (a) : (b))</span></span></span></span> 
</div> <div class="se-edcd0337 se-376506be" data-slate-type="code-line" data-slate-object="block" 
data-key="1675"> <span data-slate-object="text" data-key="1676"></span> </div> <div class="se-edcd0337 
se-376506be" data-slate-type="code-line" data-slate-object="block" data-key="1677"> <span data-slate-object="text" 
data-key="1678"><span data-slate-leaf="true" data-offset-key="1678:0" data-first-offset="true"><span 
class=" gkhl-keyword" data-slate-object="annotation" data-annotation-key="gkann_3201906712" 
data-annotation-type="annotation"><span class=" gkhl-function" data-slate-object="annotation" 
data-annotation-key="gkann_9698847035" data-annotation-type="annotation"><span data-slate-string="true">double</span></span></span></span><span 
data-slate-leaf="true" data-offset-key="1678:1"><span class=" gkhl-function" data-slate-object="annotation" 
data-annotation-key="gkann_9698847035" data-annotation-type="annotation"><span data-slate-string="true"> 
</span></span></span><span data-slate-leaf="true" data-offset-key="1678:2"><span class=" gkhl-function" 
data-slate-object="annotation" data-annotation-key="gkann_9698847035" data-annotation-type="annotation"><span 
class=" gkhl-title" data-slate-object="annotation" data-annotation-key="gkann_3583265569" data-annotation-type="annotation"><span 
data-slate-string="true">f</span></span></span></span><span data-slate-leaf="true" data-offset-key="1678:3"><span 
class=" gkhl-function" data-slate-object="annotation" data-annotation-key="gkann_9698847035" 
data-annotation-type="annotation"><span class=" gkhl-params" data-slate-object="annotation" 
data-annotation-key="gkann_5866710466" data-annotation-type="annotation"><span data-slate-string="true">(double 
x)</span></span></span></span><span data-slate-leaf="true" data-offset-key="1678:4"><span class=" 
gkhl-function" data-slate-object="annotation" data-annotation-key="gkann_9698847035" data-annotation-type="annotation"><span 
data-slate-string="true"> </span></span></span><span data-slate-leaf="true" data-offset-key="1678:5"><span 
data-slate-string="true">{</span></span></span> </div> <div class="se-edcd0337 se-376506be" 
data-slate-type="code-line" data-slate-object="block" data-key="1679"> <span data-slate-object="text" 
data-key="1680"><span data-slate-leaf="true" data-offset-key="1680:0" data-first-offset="true"><span 
data-slate-string="true"> </span></span><span data-slate-leaf="true" data-offset-key="1680:1"><span 
class=" gkhl-keyword" data-slate-object="annotation" data-annotation-key="gkann_5691563564" 
data-annotation-type="annotation"><span data-slate-string="true">double</span></span></span><span 
data-slate-leaf="true" data-offset-key="1680:2"><span data-slate-string="true"> xx = min(</span></span><span 
data-slate-leaf="true" data-offset-key="1680:3"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_5857750803" data-annotation-type="annotation"><span data-slate-string="true">3000</span></span></span><span 
data-slate-leaf="true" data-offset-key="1680:4"><span data-slate-string="true">, x) * </span></span><span 
data-slate-leaf="true" data-offset-key="1680:5"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_6181064309" data-annotation-type="annotation"><span data-slate-string="true">0.03</span></span></span><span 
data-slate-leaf="true" data-offset-key="1680:6"><span data-slate-string="true">;</span></span></span> 
</div> <div class="se-edcd0337 se-376506be" data-slate-type="code-line" data-slate-object="block" 
data-key="1681"> <span data-slate-object="text" data-key="1682"><span data-slate-leaf="true" 
data-offset-key="1682:0" data-first-offset="true"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="1682:1"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_2621971041" data-annotation-type="annotation"><span data-slate-string="true">if</span></span></span><span 
data-slate-leaf="true" data-offset-key="1682:2"><span data-slate-string="true"> (x &gt; </span></span><span 
data-slate-leaf="true" data-offset-key="1682:3"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_5309779801" data-annotation-type="annotation"><span data-slate-string="true">3000</span></span></span><span 
data-slate-leaf="true" data-offset-key="1682:4"><span data-slate-string="true">) {</span></span></span> 
</div> <div class="se-edcd0337 se-376506be" data-slate-type="code-line" data-slate-object="block" 
data-key="1683"> <span data-slate-object="text" data-key="1684"><span data-slate-leaf="true" 
data-offset-key="1684:0" data-first-offset="true"><span data-slate-string="true"> xx += (min(</span></span><span 
data-slate-leaf="true" data-offset-key="1684:1"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_6494322270" data-annotation-type="annotation"><span data-slate-string="true">12000</span></span></span><span 
data-slate-leaf="true" data-offset-key="1684:2"><span data-slate-string="true">, x) - </span></span><span 
data-slate-leaf="true" data-offset-key="1684:3"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_4874114517" data-annotation-type="annotation"><span data-slate-string="true">3000</span></span></span><span 
data-slate-leaf="true" data-offset-key="1684:4"><span data-slate-string="true">) * </span></span><span 
data-slate-leaf="true" data-offset-key="1684:5"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_6918854547" data-annotation-type="annotation"><span data-slate-string="true">0.1</span></span></span><span 
data-slate-leaf="true" data-offset-key="1684:6"><span data-slate-string="true">;</span></span></span> 
</div> <div class="se-edcd0337 se-376506be" data-slate-type="code-line" data-slate-object="block" 
data-key="1685"> <span data-slate-object="text" data-key="1686"><span data-slate-leaf="true" 
data-offset-key="1686:0" data-first-offset="true"><span data-slate-string="true"> } </span></span></span> 
</div> <div class="se-edcd0337 se-376506be" data-slate-type="code-line" data-slate-object="block" 
data-key="1687"> <span data-slate-object="text" data-key="1688"><span data-slate-leaf="true" 
data-offset-key="1688:0" data-first-offset="true"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="1688:1"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_7256541991" data-annotation-type="annotation"><span data-slate-string="true">if</span></span></span><span 
data-slate-leaf="true" data-offset-key="1688:2"><span data-slate-string="true"> (x &gt; </span></span><span 
data-slate-leaf="true" data-offset-key="1688:3"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_0392233153" data-annotation-type="annotation"><span data-slate-string="true">12000</span></span></span><span 
data-slate-leaf="true" data-offset-key="1688:4"><span data-slate-string="true">) {</span></span></span> 
</div> <div class="se-edcd0337 se-376506be" data-slate-type="code-line" data-slate-object="block" 
data-key="1689"> <span data-slate-object="text" data-key="1690"><span data-slate-leaf="true" 
data-offset-key="1690:0" data-first-offset="true"><span data-slate-string="true"> xx += (min(</span></span><span 
data-slate-leaf="true" data-offset-key="1690:1"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_5407286555" data-annotation-type="annotation"><span data-slate-string="true">25000</span></span></span><span 
data-slate-leaf="true" data-offset-key="1690:2"><span data-slate-string="true">, x) - </span></span><span 
data-slate-leaf="true" data-offset-key="1690:3"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_3757606883" data-annotation-type="annotation"><span data-slate-string="true">12000</span></span></span><span 
data-slate-leaf="true" data-offset-key="1690:4"><span data-slate-string="true">) * </span></span><span 
data-slate-leaf="true" data-offset-key="1690:5"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_5765880020" data-annotation-type="annotation"><span data-slate-string="true">0.2</span></span></span><span 
data-slate-leaf="true" data-offset-key="1690:6"><span data-slate-string="true">;</span></span></span> 
</div> <div class="se-edcd0337 se-376506be" data-slate-type="code-line" data-slate-object="block" 
data-key="1691"> <span data-slate-object="text" data-key="1692"><span data-slate-leaf="true" 
data-offset-key="1692:0" data-first-offset="true"><span data-slate-string="true"> }</span></span></span> 
</div> <div class="se-edcd0337 se-376506be" data-slate-type="code-line" data-slate-object="block" 
data-key="1693"> <span data-slate-object="text" data-key="1694"><span data-slate-leaf="true" 
data-offset-key="1694:0" data-first-offset="true"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="1694:1"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_7068677539" data-annotation-type="annotation"><span data-slate-string="true">if</span></span></span><span 
data-slate-leaf="true" data-offset-key="1694:2"><span data-slate-string="true"> (xx &gt; </span></span><span 
data-slate-leaf="true" data-offset-key="1694:3"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_9107531057" data-annotation-type="annotation"><span data-slate-string="true">25000</span></span></span><span 
data-slate-leaf="true" data-offset-key="1694:4"><span data-slate-string="true">) {</span></span></span> 
</div> <div class="se-edcd0337 se-376506be" data-slate-type="code-line" data-slate-object="block" 
data-key="1695"> <span data-slate-object="text" data-key="1696"><span data-slate-leaf="true" 
data-offset-key="1696:0" data-first-offset="true"><span data-slate-string="true"> xx += (min(</span></span><span 
data-slate-leaf="true" data-offset-key="1696:1"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_6395183282" data-annotation-type="annotation"><span data-slate-string="true">35000</span></span></span><span 
data-slate-leaf="true" data-offset-key="1696:2"><span data-slate-string="true">, x) - </span></span><span 
data-slate-leaf="true" data-offset-key="1696:3"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_9429589847" data-annotation-type="annotation"><span data-slate-string="true">25000</span></span></span><span 
data-slate-leaf="true" data-offset-key="1696:4"><span data-slate-string="true">) * </span></span><span 
data-slate-leaf="true" data-offset-key="1696:5"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_3496531194" data-annotation-type="annotation"><span data-slate-string="true">0.25</span></span></span><span 
data-slate-leaf="true" data-offset-key="1696:6"><span data-slate-string="true">;</span></span></span> 
</div> <div class="se-edcd0337 se-376506be" data-slate-type="code-line" data-slate-object="block" 
data-key="1697"> <span data-slate-object="text" data-key="1698"><span data-slate-leaf="true" 
data-offset-key="1698:0" data-first-offset="true"><span data-slate-string="true"> }</span></span></span> 
</div> <div class="se-edcd0337 se-376506be" data-slate-type="code-line" data-slate-object="block" 
data-key="1699"> <span data-slate-object="text" data-key="1700"><span data-slate-leaf="true" 
data-offset-key="1700:0" data-first-offset="true"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="1700:1"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_9712809993" data-annotation-type="annotation"><span data-slate-string="true">return</span></span></span><span 
data-slate-leaf="true" data-offset-key="1700:2"><span data-slate-string="true"> x - xx;</span></span></span> 
</div> <div class="se-edcd0337 se-376506be" data-slate-type="code-line" data-slate-object="block" 
data-key="1701"> <span data-slate-object="text" data-key="1702"><span data-slate-leaf="true" 
data-offset-key="1702:0" data-first-offset="true"><span data-slate-string="true">}</span></span></span> 
</div> <div class="se-edcd0337 se-376506be" data-slate-type="code-line" data-slate-object="block" 
data-key="1703"> <span data-slate-object="text" data-key="1704"></span> </div> <div class="se-edcd0337 
se-376506be" data-slate-type="code-line" data-slate-object="block" data-key="1705"> <span data-slate-object="text" 
data-key="1706"><span data-slate-leaf="true" data-offset-key="1706:0" data-first-offset="true"><span 
class=" gkhl-function" data-slate-object="annotation" data-annotation-key="gkann_4586842194" 
data-annotation-type="annotation"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_1087778019" data-annotation-type="annotation"><span data-slate-string="true">double</span></span></span></span><span 
data-slate-leaf="true" data-offset-key="1706:1"><span class=" gkhl-function" data-slate-object="annotation" 
data-annotation-key="gkann_4586842194" data-annotation-type="annotation"><span data-slate-string="true"> 
</span></span></span><span data-slate-leaf="true" data-offset-key="1706:2"><span class=" gkhl-function" 
data-slate-object="annotation" data-annotation-key="gkann_4586842194" data-annotation-type="annotation"><span 
class=" gkhl-title" data-slate-object="annotation" data-annotation-key="gkann_7508760242" data-annotation-type="annotation"><span 
data-slate-string="true">binary_search</span></span></span></span><span data-slate-leaf="true" 
data-offset-key="1706:3"><span class=" gkhl-function" data-slate-object="annotation" data-annotation-key="gkann_4586842194" 
data-annotation-type="annotation"><span class=" gkhl-params" data-slate-object="annotation" 
data-annotation-key="gkann_0579697028" data-annotation-type="annotation"><span data-slate-string="true">(double 
l, double r, double y)</span></span></span></span><span data-slate-leaf="true" data-offset-key="1706:4"><span 
class=" gkhl-function" data-slate-object="annotation" data-annotation-key="gkann_4586842194" 
data-annotation-type="annotation"><span data-slate-string="true"> </span></span></span><span 
data-slate-leaf="true" data-offset-key="1706:5"><span data-slate-string="true">{</span></span></span> 
</div> <div class="se-edcd0337 se-376506be" data-slate-type="code-line" data-slate-object="block" 
data-key="1707"> <span data-slate-object="text" data-key="1708"><span data-slate-leaf="true" 
data-offset-key="1708:0" data-first-offset="true"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="1708:1"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_1257028683" data-annotation-type="annotation"><span data-slate-string="true">if</span></span></span><span 
data-slate-leaf="true" data-offset-key="1708:2"><span data-slate-string="true"> (r - l &lt;= 
EPS) </span></span><span data-slate-leaf="true" data-offset-key="1708:3"><span class=" gkhl-keyword" 
data-slate-object="annotation" data-annotation-key="gkann_7120938444" data-annotation-type="annotation"><span 
data-slate-string="true">return</span></span></span><span data-slate-leaf="true" data-offset-key="1708:4"><span 
data-slate-string="true"> l;</span></span></span> </div> <div class="se-edcd0337 se-376506be" 
data-slate-type="code-line" data-slate-object="block" data-key="1709"> <span data-slate-object="text" 
data-key="1710"><span data-slate-leaf="true" data-offset-key="1710:0" data-first-offset="true"><span 
data-slate-string="true"> </span></span><span data-slate-leaf="true" data-offset-key="1710:1"><span 
class=" gkhl-keyword" data-slate-object="annotation" data-annotation-key="gkann_0313328580" 
data-annotation-type="annotation"><span data-slate-string="true">double</span></span></span><span 
data-slate-leaf="true" data-offset-key="1710:2"><span data-slate-string="true"> mid = (l + 
r) / </span></span><span data-slate-leaf="true" data-offset-key="1710:3"><span class=" gkhl-number" 
data-slate-object="annotation" data-annotation-key="gkann_5462864317" data-annotation-type="annotation"><span 
data-slate-string="true">2.0</span></span></span><span data-slate-leaf="true" data-offset-key="1710:4"><span 
data-slate-string="true">;</span></span></span> </div> <div class="se-edcd0337 se-376506be" 
data-slate-type="code-line" data-slate-object="block" data-key="1711"> <span data-slate-object="text" 
data-key="1712"><span data-slate-leaf="true" data-offset-key="1712:0" data-first-offset="true"><span 
data-slate-string="true"> </span></span><span data-slate-leaf="true" data-offset-key="1712:1"><span 
class=" gkhl-keyword" data-slate-object="annotation" data-annotation-key="gkann_2968356992" 
data-annotation-type="annotation"><span data-slate-string="true">if</span></span></span><span 
data-slate-leaf="true" data-offset-key="1712:2"><span data-slate-string="true"> (f(mid) &lt; 
y) </span></span><span data-slate-leaf="true" data-offset-key="1712:3"><span class=" gkhl-keyword" 
data-slate-object="annotation" data-annotation-key="gkann_0255773452" data-annotation-type="annotation"><span 
data-slate-string="true">return</span></span></span><span data-slate-leaf="true" data-offset-key="1712:4"><span 
data-slate-string="true"> binary_search(mid, r, y);</span></span></span> </div> <div class="se-edcd0337 
se-376506be" data-slate-type="code-line" data-slate-object="block" data-key="1713"> <span data-slate-object="text" 
data-key="1714"><span data-slate-leaf="true" data-offset-key="1714:0" data-first-offset="true"><span 
data-slate-string="true"> </span></span><span data-slate-leaf="true" data-offset-key="1714:1"><span 
class=" gkhl-keyword" data-slate-object="annotation" data-annotation-key="gkann_6639724010" 
data-annotation-type="annotation"><span data-slate-string="true">return</span></span></span><span 
data-slate-leaf="true" data-offset-key="1714:2"><span data-slate-string="true"> binary_search(l, 
mid, y);</span></span></span> </div> <div class="se-edcd0337 se-376506be" data-slate-type="code-line" 
data-slate-object="block" data-key="1715"> <span data-slate-object="text" data-key="1716"><span 
data-slate-leaf="true" data-offset-key="1716:0" data-first-offset="true"><span data-slate-string="true">}</span></span></span> 
</div> <div class="ps__rail-x" style="width: 365px; left: 0px; bottom: 0px;"> <div class="ps__thumb-x" 
tabindex="0" style="left: 0px; width: 328px;"></div> </div> <div class="ps__rail-y" style="top: 
0px; right: 0px;"> <div class="ps__thumb-y" tabindex="0" style="top: 0px; height: 0px;"></div> 
</div> </div> </div> <div class="se-8077ca6c " data-slate-type="paragraph" data-slate-object="block" 
data-key="1717"> <span data-slate-object="text" data-key="1718"><span data-slate-leaf="true" 
data-offset-key="1718:0" data-first-offset="true"><span data-slate-string="true">你会发现，代码中的 
binary_search 函数，和我们那一讲中所给的切绳子问题的代码几乎一模一样，唯一不同的就是 f 函数换了样子。</span></span></span> </div> <div 
class="se-838f7ca4 " data-slate-type="paragraph" data-slate-object="block" data-key="1719"> 
<span data-slate-object="text" data-key="1720"><span data-slate-leaf="true" data-offset-key="1720:0" 
data-first-offset="true"><span data-slate-string="true">其实对于二分答案的算法实现，代码真的不是什么难点，难点在于发现问题可以采用二分算法的过程。也就是看到那两条性质判断：f(x)=y 
是不是具有单调性；是不是通过 x 求 y 比较容易，通过 y 求 x 比较困难。</span></span></span> </div> <h2 class="se-664e32c4" 
data-slate-type="heading" data-slate-object="block" data-key="1721"><a data-slate-type="link" 
data-slate-object="inline" data-key="1722" class="se-4be0ddc9 se-76b96135"><span data-slate-object="text" 
data-key="1723"><span data-slate-leaf="true" data-offset-key="1723:0" data-first-offset="true"><span 
data-slate-string="true">栈与单调栈：最大矩形面积</span></span></span></a></h2> <div class="se-569cb11f 
" data-slate-type="paragraph" data-slate-object="block" data-key="1724"> <span data-slate-object="text" 
data-key="1725"><span data-slate-leaf="true" data-offset-key="1725:0" data-first-offset="true"><span 
data-slate-string="true">本节呢，我们学习了栈和单调栈的基本知识，并且知道了单调栈是用来维护最近大于或小于关系的数据结构。最后的思考题呢，是判断一个括号序列是否是合法的，所谓合法的括号序列，也就是括号之间要么是完全包含，要么是并列无关。</span></span></span> 
</div> <div class="se-1de431eb " data-slate-type="paragraph" data-slate-object="block" data-key="1726"> 
<span data-slate-object="text" data-key="1727"><span data-slate-leaf="true" data-offset-key="1727:0" 
data-first-offset="true"><span data-slate-string="true">根据栈的基础知识，如果我们把一个元素入栈动作看成是左括号，出栈看成是对应的右括号，那么一组元素的入栈及出栈操作，就可以唯一对应到一个合法的括号序列。例如，如下操作序列：</span></span></span> 
</div> <div class="se-6f878eb2 se-ed4bf4a0" data-slate-type="pre" data-slate-object="block" 
data-key="1728"> <div class="se-8f580599 se-fc02f862"> <span></span> </div> <div class="se-a2963424"> 
<div class="se-48018892 se-0325e9aa" data-code-line-number="1"></div> <div class="se-48018892 
se-0325e9aa" data-code-line-number="2"></div> </div> <div class="se-f9a8b712 ps"> <div class="se-edcd0337 
se-376506be" data-slate-type="code-line" data-slate-object="block" data-key="1729"> <span data-slate-object="text" 
data-key="1730"><span data-slate-leaf="true" data-offset-key="1730:0" data-first-offset="true"><span 
data-slate-string="true"> 1 2 3 4 5 6 7 8 9 10</span></span></span> </div> <div class="se-edcd0337 
se-376506be" data-slate-type="code-line" data-slate-object="block" data-key="1731"> <span data-slate-object="text" 
data-key="1732"><span data-slate-leaf="true" data-offset-key="1732:0" data-first-offset="true"><span 
data-slate-string="true">push push pop pop push push pop push pop pop </span></span></span> 
</div> <div class="ps__rail-x" style="left: 0px; bottom: 0px;"> <div class="ps__thumb-x" tabindex="0" 
style="left: 0px; width: 0px;"></div> </div> <div class="ps__rail-y" style="top: 0px; right: 
0px;"> <div class="ps__thumb-y" tabindex="0" style="top: 0px; height: 0px;"></div> </div> </div> 
</div> <div class="se-3d9d1b3f " data-slate-type="paragraph" data-slate-object="block" data-key="1733"> 
<span data-slate-object="text" data-key="1734"><span data-slate-leaf="true" data-offset-key="1734:0" 
data-first-offset="true"><span data-slate-string="true">其中 push 是入栈操作，pop 是出栈操作。显然，3 号的 pop 
操作，弹出的应该是 2 号 push 进去的元素，也就是 2 号和 3 号操作是一对操作。那么把 push 写成左括号，pop 写成右括号，如上操作序列，就可以对应如下的括号序列：</span></span></span> 
</div> <div class="se-0fd9a897 se-8f8e7a11" data-slate-type="pre" data-slate-object="block" 
data-key="1735"> <div class="se-b2cf8226 se-48954b6b"> <span></span> </div> <div class="se-c87df9cd"> 
<div class="se-ac23760a se-f22e311b" data-code-line-number="1"></div> </div> <div class="se-9408b324 
ps"> <div class="se-edcd0337 se-376506be" data-slate-type="code-line" data-slate-object="block" 
data-key="1736"> <span data-slate-object="text" data-key="1737"><span data-slate-leaf="true" 
data-offset-key="1737:0" data-first-offset="true"><span data-slate-string="true">【（）】{【】【】}</span></span></span> 
</div> <div class="ps__rail-x" style="left: 0px; bottom: 0px;"> <div class="ps__thumb-x" tabindex="0" 
style="left: 0px; width: 0px;"></div> </div> <div class="ps__rail-y" style="top: 0px; right: 
0px;"> <div class="ps__thumb-y" tabindex="0" style="top: 0px; height: 0px;"></div> </div> </div> 
</div> <div class="se-f7df6824 " data-slate-type="paragraph" data-slate-object="block" data-key="1738"> 
<span data-slate-object="text" data-key="1739"><span data-slate-leaf="true" data-offset-key="1739:0" 
data-first-offset="true"><span data-slate-string="true">你会发现，相对应的左右括号，就对应了相匹配的 push 和 pop 操作。那么判断一个括号序列是否合法，就可以把这个括号序列看成是一组入栈和出栈操作。</span></span></span> 
</div> <div class="se-d3e7cc4d " data-slate-type="paragraph" data-slate-object="block" data-key="1740"> 
<span data-slate-object="text" data-key="1741"><span data-slate-leaf="true" data-offset-key="1741:0" 
data-first-offset="true"><span data-slate-string="true">我们依次处理括号序列中的每一位，碰到左括号就入栈；碰到右括号，我们就弹出栈顶的一个左括号，看看是否和当前右括号是匹配的，如果不匹配就说明括号序列非法，如果匹配，就继续处理下一个括号序列中的字符。直到最后，如果栈中为空，就说明原括号序列合法。</span></span></span> 
</div> <div class="se-b9ca32b7 " data-slate-type="paragraph" data-slate-object="block" data-key="1742"> 
<span data-slate-object="text" data-key="1743"><span data-slate-leaf="true" data-offset-key="1743:0" 
data-first-offset="true"><span data-slate-string="true">好了，至此我们就讲完了这道题目的解题思路，接下来就是请你把我说的解题思路，转换成代码了，加油！如果实在想不出来，也可以参考用户 
@胖胖胖 、@Hunter Liu 在留言区中的代码和解题思路。</span></span></span> </div> <h2 class="se-09353af6" data-slate-type="heading" 
data-slate-object="block" data-key="1744"><a data-slate-type="link" data-slate-object="inline" 
data-key="1745" class="se-4be0ddc9 se-76b96135"><span data-slate-object="text" data-key="1746"><span 
data-slate-leaf="true" data-offset-key="1746:0" data-first-offset="true"><span data-slate-string="true">动态规划（下）：动态规划之背包问题与优化</span></span></span></a></h2> 
<div class="se-1ccde8a0 " data-slate-type="paragraph" data-slate-object="block" data-key="1747"> 
<span data-slate-object="text" data-key="1748"><span data-slate-leaf="true" data-offset-key="1748:0" 
data-first-offset="true"><span data-slate-string="true">在这一节课，我们认识了背包类动态规划算法，讲了 0/1 背包问题，以及多重背包问题转 
0/1 背包问题的转换技巧。其中我们提到了用二进制拆分法对多重背包拆分过程进行优化，这样不但可以大大减少拆分出来的物品数量，并且还不影响转换成等价的 0/1 背包问题。</span></span></span> 
</div> <div class="se-7161587c " data-slate-type="paragraph" data-slate-object="block" data-key="1749"> 
<span data-slate-object="text" data-key="1750"><span data-slate-leaf="true" data-offset-key="1750:0" 
data-first-offset="true"><span data-slate-string="true">关于动态规划状态定义的相关理解，这里给用户 @徐洲更 点赞，大家可以在</span></span></span><a 
data-slate-type="link" data-slate-object="inline" data-key="1751" class="se-4be0ddc9 se-76b96135"><span 
data-slate-object="text" data-key="1752"><span data-slate-leaf="true" data-offset-key="1752:0" 
data-first-offset="true"><span data-slate-string="true">《动态规划（上）：只需四步，搞定动态规划算法设计》</span></span></span></a><span 
data-slate-object="text" data-key="1753"><span data-slate-leaf="true" data-offset-key="1753:0" 
data-first-offset="true"><span data-slate-string="true">当中看到他的留言。</span></span></span> </div> 
<div class="se-6b845c94 " data-slate-type="paragraph" data-slate-object="block" data-key="1754"> 
<span data-slate-object="text" data-key="1755"><span data-slate-leaf="true" data-offset-key="1755:0" 
data-first-offset="true"><span data-slate-string="true">下面呢，我就给出多重背包转 0/1 背包的示例代码：</span></span></span> 
</div> <div class="se-8b064b39 se-c2c69d53" data-slate-type="pre" data-slate-object="block" 
data-key="1756" data-code-language="cpp"> <div class="se-0593101e se-07366cc5"> <span></span> 
</div> <div class="se-764b9323"> <div class="se-867b7331 se-17c7b462" data-code-line-number="1"></div> 
<div class="se-867b7331 se-17c7b462" data-code-line-number="2"></div> <div class="se-867b7331 
se-17c7b462" data-code-line-number="3"></div> <div class="se-867b7331 se-17c7b462" data-code-line-number="4"></div> 
<div class="se-867b7331 se-17c7b462" data-code-line-number="5"></div> <div class="se-867b7331 
se-17c7b462" data-code-line-number="6"></div> <div class="se-867b7331 se-17c7b462" data-code-line-number="7"></div> 
<div class="se-867b7331 se-17c7b462" data-code-line-number="8"></div> <div class="se-867b7331 
se-17c7b462" data-code-line-number="9"></div> <div class="se-867b7331 se-17c7b462" data-code-line-number="10"></div> 
<div class="se-867b7331 se-17c7b462" data-code-line-number="11"></div> <div class="se-867b7331 
se-17c7b462" data-code-line-number="12"></div> <div class="se-867b7331 se-17c7b462" data-code-line-number="13"></div> 
<div class="se-867b7331 se-17c7b462" data-code-line-number="14"></div> <div class="se-867b7331 
se-17c7b462" data-code-line-number="15"></div> <div class="se-867b7331 se-17c7b462" data-code-line-number="16"></div> 
<div class="se-867b7331 se-17c7b462" data-code-line-number="17"></div> <div class="se-867b7331 
se-17c7b462" data-code-line-number="18"></div> <div class="se-867b7331 se-17c7b462" data-code-line-number="19"></div> 
<div class="se-867b7331 se-17c7b462" data-code-line-number="20"></div> <div class="se-867b7331 
se-17c7b462" data-code-line-number="21"></div> <div class="se-867b7331 se-17c7b462" data-code-line-number="22"></div> 
<div class="se-867b7331 se-17c7b462" data-code-line-number="23"></div> <div class="se-867b7331 
se-17c7b462" data-code-line-number="24"></div> <div class="se-867b7331 se-17c7b462" data-code-line-number="25"></div> 
<div class="se-867b7331 se-17c7b462" data-code-line-number="26"></div> <div class="se-867b7331 
se-17c7b462" data-code-line-number="27"></div> <div class="se-867b7331 se-17c7b462" data-code-line-number="28"></div> 
<div class="se-867b7331 se-17c7b462" data-code-line-number="29"></div> <div class="se-867b7331 
se-17c7b462" data-code-line-number="30"></div> <div class="se-867b7331 se-17c7b462" data-code-line-number="31"></div> 
<div class="se-867b7331 se-17c7b462" data-code-line-number="32"></div> <div class="se-867b7331 
se-17c7b462" data-code-line-number="33"></div> <div class="se-867b7331 se-17c7b462" data-code-line-number="34"></div> 
<div class="se-867b7331 se-17c7b462" data-code-line-number="35"></div> </div> <div class="se-51fc1602 
ps ps--active-x"> <div class="se-edcd0337 se-376506be" data-slate-type="code-line" data-slate-object="block" 
data-key="1757"> <span data-slate-object="text" data-key="1758"><span data-slate-leaf="true" 
data-offset-key="1758:0" data-first-offset="true"><span class=" gkhl-meta" data-slate-object="annotation" 
data-annotation-key="gkann_3250341053" data-annotation-type="annotation"><span data-slate-string="true">#define 
MAX_N 100</span></span></span></span> </div> <div class="se-edcd0337 se-376506be" data-slate-type="code-line" 
data-slate-object="block" data-key="1759"> <span data-slate-object="text" data-key="1760"><span 
data-slate-leaf="true" data-offset-key="1760:0" data-first-offset="true"><span class=" gkhl-meta" 
data-slate-object="annotation" data-annotation-key="gkann_8016769253" data-annotation-type="annotation"><span 
data-slate-string="true">#define MAX_W 10000</span></span></span></span> </div> <div class="se-edcd0337 
se-376506be" data-slate-type="code-line" data-slate-object="block" data-key="1761"> <span data-slate-object="text" 
data-key="1762"><span data-slate-leaf="true" data-offset-key="1762:0" data-first-offset="true"><span 
class=" gkhl-keyword" data-slate-object="annotation" data-annotation-key="gkann_0783203719" 
data-annotation-type="annotation"><span data-slate-string="true">int</span></span></span><span 
data-slate-leaf="true" data-offset-key="1762:1"><span data-slate-string="true"> v[MAX_N + </span></span><span 
data-slate-leaf="true" data-offset-key="1762:2"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_5188715729" data-annotation-type="annotation"><span data-slate-string="true">5</span></span></span><span 
data-slate-leaf="true" data-offset-key="1762:3"><span data-slate-string="true">], w[MAX_N + 
</span></span><span data-slate-leaf="true" data-offset-key="1762:4"><span class=" gkhl-number" 
data-slate-object="annotation" data-annotation-key="gkann_4588842405" data-annotation-type="annotation"><span 
data-slate-string="true">5</span></span></span><span data-slate-leaf="true" data-offset-key="1762:5"><span 
data-slate-string="true">], c[MAX_N + </span></span><span data-slate-leaf="true" data-offset-key="1762:6"><span 
class=" gkhl-number" data-slate-object="annotation" data-annotation-key="gkann_5266073135" 
data-annotation-type="annotation"><span data-slate-string="true">5</span></span></span><span 
data-slate-leaf="true" data-offset-key="1762:7"><span data-slate-string="true">];</span></span></span> 
</div> <div class="se-edcd0337 se-376506be" data-slate-type="code-line" data-slate-object="block" 
data-key="1763"> <span data-slate-object="text" data-key="1764"><span data-slate-leaf="true" 
data-offset-key="1764:0" data-first-offset="true"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_5171996896" data-annotation-type="annotation"><span data-slate-string="true">int</span></span></span><span 
data-slate-leaf="true" data-offset-key="1764:1"><span data-slate-string="true"> v1[MAX_N + 
</span></span><span data-slate-leaf="true" data-offset-key="1764:2"><span class=" gkhl-number" 
data-slate-object="annotation" data-annotation-key="gkann_1336903449" data-annotation-type="annotation"><span 
data-slate-string="true">5</span></span></span><span data-slate-leaf="true" data-offset-key="1764:3"><span 
data-slate-string="true">], w1[MAX_N + </span></span><span data-slate-leaf="true" data-offset-key="1764:4"><span 
class=" gkhl-number" data-slate-object="annotation" data-annotation-key="gkann_4068534686" 
data-annotation-type="annotation"><span data-slate-string="true">5</span></span></span><span 
data-slate-leaf="true" data-offset-key="1764:5"><span data-slate-string="true">], n2 = </span></span><span 
data-slate-leaf="true" data-offset-key="1764:6"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_1793659809" data-annotation-type="annotation"><span data-slate-string="true">0</span></span></span><span 
data-slate-leaf="true" data-offset-key="1764:7"><span data-slate-string="true">;</span></span></span> 
</div> <div class="se-edcd0337 se-376506be" data-slate-type="code-line" data-slate-object="block" 
data-key="1765"> <span data-slate-object="text" data-key="1766"><span data-slate-leaf="true" 
data-offset-key="1766:0" data-first-offset="true"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_5299753292" data-annotation-type="annotation"><span data-slate-string="true">int</span></span></span><span 
data-slate-leaf="true" data-offset-key="1766:1"><span data-slate-string="true"> dp[MAX_N + 
</span></span><span data-slate-leaf="true" data-offset-key="1766:2"><span class=" gkhl-number" 
data-slate-object="annotation" data-annotation-key="gkann_6115026169" data-annotation-type="annotation"><span 
data-slate-string="true">5</span></span></span><span data-slate-leaf="true" data-offset-key="1766:3"><span 
data-slate-string="true">][MAX_W + </span></span><span data-slate-leaf="true" data-offset-key="1766:4"><span 
class=" gkhl-number" data-slate-object="annotation" data-annotation-key="gkann_8158918344" 
data-annotation-type="annotation"><span data-slate-string="true">5</span></span></span><span 
data-slate-leaf="true" data-offset-key="1766:5"><span data-slate-string="true">];</span></span></span> 
</div> <div class="se-edcd0337 se-376506be" data-slate-type="code-line" data-slate-object="block" 
data-key="1767"> <span data-slate-object="text" data-key="1768"></span> </div> <div class="se-edcd0337 
se-376506be" data-slate-type="code-line" data-slate-object="block" data-key="1769"> <span data-slate-object="text" 
data-key="1770"></span> </div> <div class="se-edcd0337 se-376506be" data-slate-type="code-line" 
data-slate-object="block" data-key="1771"> <span data-slate-object="text" data-key="1772"><span 
data-slate-leaf="true" data-offset-key="1772:0" data-first-offset="true"><span class=" gkhl-comment" 
data-slate-object="annotation" data-annotation-key="gkann_5298490993" data-annotation-type="annotation"><span 
data-slate-string="true">// 添加一个0/1背包中的物品</span></span></span></span> </div> <div class="se-edcd0337 
se-376506be" data-slate-type="code-line" data-slate-object="block" data-key="1773"> <span data-slate-object="text" 
data-key="1774"><span data-slate-leaf="true" data-offset-key="1774:0" data-first-offset="true"><span 
class=" gkhl-keyword" data-slate-object="annotation" data-annotation-key="gkann_6803616210" 
data-annotation-type="annotation"><span class=" gkhl-function" data-slate-object="annotation" 
data-annotation-key="gkann_2833566149" data-annotation-type="annotation"><span data-slate-string="true">void</span></span></span></span><span 
data-slate-leaf="true" data-offset-key="1774:1"><span class=" gkhl-function" data-slate-object="annotation" 
data-annotation-key="gkann_2833566149" data-annotation-type="annotation"><span data-slate-string="true"> 
</span></span></span><span data-slate-leaf="true" data-offset-key="1774:2"><span class=" gkhl-function" 
data-slate-object="annotation" data-annotation-key="gkann_2833566149" data-annotation-type="annotation"><span 
class=" gkhl-title" data-slate-object="annotation" data-annotation-key="gkann_8618553293" data-annotation-type="annotation"><span 
data-slate-string="true">add_item</span></span></span></span><span data-slate-leaf="true" data-offset-key="1774:3"><span 
class=" gkhl-params" data-slate-object="annotation" data-annotation-key="gkann_5305376516" 
data-annotation-type="annotation"><span class=" gkhl-function" data-slate-object="annotation" 
data-annotation-key="gkann_2833566149" data-annotation-type="annotation"><span data-slate-string="true">(int 
v_value, int w_value)</span></span></span></span><span data-slate-leaf="true" data-offset-key="1774:4"><span 
class=" gkhl-function" data-slate-object="annotation" data-annotation-key="gkann_2833566149" 
data-annotation-type="annotation"><span data-slate-string="true"> </span></span></span><span 
data-slate-leaf="true" data-offset-key="1774:5"><span data-slate-string="true">{</span></span></span> 
</div> <div class="se-edcd0337 se-376506be" data-slate-type="code-line" data-slate-object="block" 
data-key="1775"> <span data-slate-object="text" data-key="1776"><span data-slate-leaf="true" 
data-offset-key="1776:0" data-first-offset="true"><span data-slate-string="true"> n2++;</span></span></span> 
</div> <div class="se-edcd0337 se-376506be" data-slate-type="code-line" data-slate-object="block" 
data-key="1777"> <span data-slate-object="text" data-key="1778"><span data-slate-leaf="true" 
data-offset-key="1778:0" data-first-offset="true"><span data-slate-string="true"> v1[n2] = 
v_value;</span></span></span> </div> <div class="se-edcd0337 se-376506be" data-slate-type="code-line" 
data-slate-object="block" data-key="1779"> <span data-slate-object="text" data-key="1780"><span 
data-slate-leaf="true" data-offset-key="1780:0" data-first-offset="true"><span data-slate-string="true"> 
w1[n2] = w_value;</span></span></span> </div> <div class="se-edcd0337 se-376506be" data-slate-type="code-line" 
data-slate-object="block" data-key="1781"> <span data-slate-object="text" data-key="1782"><span 
data-slate-leaf="true" data-offset-key="1782:0" data-first-offset="true"><span data-slate-string="true"> 
</span></span><span data-slate-leaf="true" data-offset-key="1782:1"><span class=" gkhl-keyword" 
data-slate-object="annotation" data-annotation-key="gkann_0249883677" data-annotation-type="annotation"><span 
data-slate-string="true">return</span></span></span><span data-slate-leaf="true" data-offset-key="1782:2"><span 
data-slate-string="true"> ;</span></span></span> </div> <div class="se-edcd0337 se-376506be" 
data-slate-type="code-line" data-slate-object="block" data-key="1783"> <span data-slate-object="text" 
data-key="1784"><span data-slate-leaf="true" data-offset-key="1784:0" data-first-offset="true"><span 
data-slate-string="true">}</span></span></span> </div> <div class="se-edcd0337 se-376506be" 
data-slate-type="code-line" data-slate-object="block" data-key="1785"> <span data-slate-object="text" 
data-key="1786"></span> </div> <div class="se-edcd0337 se-376506be" data-slate-type="code-line" 
data-slate-object="block" data-key="1787"> <span data-slate-object="text" data-key="1788"><span 
data-slate-leaf="true" data-offset-key="1788:0" data-first-offset="true"><span class=" gkhl-keyword" 
data-slate-object="annotation" data-annotation-key="gkann_4318174135" data-annotation-type="annotation"><span 
class=" gkhl-function" data-slate-object="annotation" data-annotation-key="gkann_4598005987" 
data-annotation-type="annotation"><span data-slate-string="true">int</span></span></span></span><span 
data-slate-leaf="true" data-offset-key="1788:1"><span class=" gkhl-function" data-slate-object="annotation" 
data-annotation-key="gkann_4598005987" data-annotation-type="annotation"><span data-slate-string="true"> 
</span></span></span><span data-slate-leaf="true" data-offset-key="1788:2"><span class=" gkhl-function" 
data-slate-object="annotation" data-annotation-key="gkann_4598005987" data-annotation-type="annotation"><span 
class=" gkhl-title" data-slate-object="annotation" data-annotation-key="gkann_9798496972" data-annotation-type="annotation"><span 
data-slate-string="true">get_dp</span></span></span></span><span data-slate-leaf="true" data-offset-key="1788:3"><span 
class=" gkhl-params" data-slate-object="annotation" data-annotation-key="gkann_3109694776" 
data-annotation-type="annotation"><span class=" gkhl-function" data-slate-object="annotation" 
data-annotation-key="gkann_4598005987" data-annotation-type="annotation"><span data-slate-string="true">(int 
n, int W)</span></span></span></span><span data-slate-leaf="true" data-offset-key="1788:4"><span 
class=" gkhl-function" data-slate-object="annotation" data-annotation-key="gkann_4598005987" 
data-annotation-type="annotation"><span data-slate-string="true"> </span></span></span><span 
data-slate-leaf="true" data-offset-key="1788:5"><span data-slate-string="true">{</span></span></span> 
</div> <div class="se-edcd0337 se-376506be" data-slate-type="code-line" data-slate-object="block" 
data-key="1789"> <span data-slate-object="text" data-key="1790"><span data-slate-leaf="true" 
data-offset-key="1790:0" data-first-offset="true"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="1790:1"><span class=" gkhl-comment" data-slate-object="annotation" 
data-annotation-key="gkann_7830392600" data-annotation-type="annotation"><span data-slate-string="true">// 
对多重背包中的每一种物品进行拆分</span></span></span></span> </div> <div class="se-edcd0337 se-376506be" data-slate-type="code-line" 
data-slate-object="block" data-key="1791"> <span data-slate-object="text" data-key="1792"><span 
data-slate-leaf="true" data-offset-key="1792:0" data-first-offset="true"><span data-slate-string="true"> 
</span></span><span data-slate-leaf="true" data-offset-key="1792:1"><span class=" gkhl-keyword" 
data-slate-object="annotation" data-annotation-key="gkann_0168306194" data-annotation-type="annotation"><span 
data-slate-string="true">for</span></span></span><span data-slate-leaf="true" data-offset-key="1792:2"><span 
data-slate-string="true"> (</span></span><span data-slate-leaf="true" data-offset-key="1792:3"><span 
class=" gkhl-keyword" data-slate-object="annotation" data-annotation-key="gkann_6580162749" 
data-annotation-type="annotation"><span data-slate-string="true">int</span></span></span><span 
data-slate-leaf="true" data-offset-key="1792:4"><span data-slate-string="true"> i = </span></span><span 
data-slate-leaf="true" data-offset-key="1792:5"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_7677725166" data-annotation-type="annotation"><span data-slate-string="true">1</span></span></span><span 
data-slate-leaf="true" data-offset-key="1792:6"><span data-slate-string="true">; i &lt;= n; 
i++) {</span></span></span> </div> <div class="se-edcd0337 se-376506be" data-slate-type="code-line" 
data-slate-object="block" data-key="1793"> <span data-slate-object="text" data-key="1794"><span 
data-slate-leaf="true" data-offset-key="1794:0" data-first-offset="true"><span data-slate-string="true"> 
</span></span><span data-slate-leaf="true" data-offset-key="1794:1"><span class=" gkhl-comment" 
data-slate-object="annotation" data-annotation-key="gkann_5548056433" data-annotation-type="annotation"><span 
data-slate-string="true">// 采用二进制拆分法</span></span></span></span> </div> <div class="se-edcd0337 
se-376506be" data-slate-type="code-line" data-slate-object="block" data-key="1795"> <span data-slate-object="text" 
data-key="1796"><span data-slate-leaf="true" data-offset-key="1796:0" data-first-offset="true"><span 
data-slate-string="true"> </span></span><span data-slate-leaf="true" data-offset-key="1796:1"><span 
class=" gkhl-keyword" data-slate-object="annotation" data-annotation-key="gkann_2806373225" 
data-annotation-type="annotation"><span data-slate-string="true">for</span></span></span><span 
data-slate-leaf="true" data-offset-key="1796:2"><span data-slate-string="true"> (</span></span><span 
data-slate-leaf="true" data-offset-key="1796:3"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_5363181592" data-annotation-type="annotation"><span data-slate-string="true">int</span></span></span><span 
data-slate-leaf="true" data-offset-key="1796:4"><span data-slate-string="true"> k = </span></span><span 
data-slate-leaf="true" data-offset-key="1796:5"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_8756670193" data-annotation-type="annotation"><span data-slate-string="true">1</span></span></span><span 
data-slate-leaf="true" data-offset-key="1796:6"><span data-slate-string="true">; k &lt;= c[i]; 
c[i] -= k, k &lt;&lt;= </span></span><span data-slate-leaf="true" data-offset-key="1796:7"><span 
class=" gkhl-number" data-slate-object="annotation" data-annotation-key="gkann_6451653475" 
data-annotation-type="annotation"><span data-slate-string="true">1</span></span></span><span 
data-slate-leaf="true" data-offset-key="1796:8"><span data-slate-string="true">) {</span></span></span> 
</div> <div class="se-edcd0337 se-376506be" data-slate-type="code-line" data-slate-object="block" 
data-key="1797"> <span data-slate-object="text" data-key="1798"><span data-slate-leaf="true" 
data-offset-key="1798:0" data-first-offset="true"><span data-slate-string="true"> add_item(k 
* v[i], k * w[i]);</span></span></span> </div> <div class="se-edcd0337 se-376506be" data-slate-type="code-line" 
data-slate-object="block" data-key="1799"> <span data-slate-object="text" data-key="1800"><span 
data-slate-leaf="true" data-offset-key="1800:0" data-first-offset="true"><span data-slate-string="true"> 
}</span></span></span> </div> <div class="se-edcd0337 se-376506be" data-slate-type="code-line" 
data-slate-object="block" data-key="1801"> <span data-slate-object="text" data-key="1802"><span 
data-slate-leaf="true" data-offset-key="1802:0" data-first-offset="true"><span data-slate-string="true"> 
</span></span><span data-slate-leaf="true" data-offset-key="1802:1"><span class=" gkhl-keyword" 
data-slate-object="annotation" data-annotation-key="gkann_6679053753" data-annotation-type="annotation"><span 
data-slate-string="true">if</span></span></span><span data-slate-leaf="true" data-offset-key="1802:2"><span 
data-slate-string="true"> (c[i]) add_item(c[i] * v[i], c[i] * w[i]);</span></span></span> </div> 
<div class="se-edcd0337 se-376506be" data-slate-type="code-line" data-slate-object="block" 
data-key="1803"> <span data-slate-object="text" data-key="1804"><span data-slate-leaf="true" 
data-offset-key="1804:0" data-first-offset="true"><span data-slate-string="true"> }</span></span></span> 
</div> <div class="se-edcd0337 se-376506be" data-slate-type="code-line" data-slate-object="block" 
data-key="1805"> <span data-slate-object="text" data-key="1806"><span data-slate-leaf="true" 
data-offset-key="1806:0" data-first-offset="true"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="1806:1"><span class=" gkhl-comment" data-slate-object="annotation" 
data-annotation-key="gkann_6452580241" data-annotation-type="annotation"><span data-slate-string="true">// 
按照0/1背包的方式进行求解</span></span></span></span> </div> <div class="se-edcd0337 se-376506be" data-slate-type="code-line" 
data-slate-object="block" data-key="1807"> <span data-slate-object="text" data-key="1808"><span 
data-slate-leaf="true" data-offset-key="1808:0" data-first-offset="true"><span data-slate-string="true"> 
</span></span><span data-slate-leaf="true" data-offset-key="1808:1"><span class=" gkhl-keyword" 
data-slate-object="annotation" data-annotation-key="gkann_5811993384" data-annotation-type="annotation"><span 
data-slate-string="true">for</span></span></span><span data-slate-leaf="true" data-offset-key="1808:2"><span 
data-slate-string="true"> (</span></span><span data-slate-leaf="true" data-offset-key="1808:3"><span 
class=" gkhl-keyword" data-slate-object="annotation" data-annotation-key="gkann_3264156124" 
data-annotation-type="annotation"><span data-slate-string="true">int</span></span></span><span 
data-slate-leaf="true" data-offset-key="1808:4"><span data-slate-string="true"> i = </span></span><span 
data-slate-leaf="true" data-offset-key="1808:5"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_6719352839" data-annotation-type="annotation"><span data-slate-string="true">1</span></span></span><span 
data-slate-leaf="true" data-offset-key="1808:6"><span data-slate-string="true">; i &lt;= n2; 
i++) {</span></span></span> </div> <div class="se-edcd0337 se-376506be" data-slate-type="code-line" 
data-slate-object="block" data-key="1809"> <span data-slate-object="text" data-key="1810"><span 
data-slate-leaf="true" data-offset-key="1810:0" data-first-offset="true"><span data-slate-string="true"> 
</span></span><span data-slate-leaf="true" data-offset-key="1810:1"><span class=" gkhl-keyword" 
data-slate-object="annotation" data-annotation-key="gkann_6969964289" data-annotation-type="annotation"><span 
data-slate-string="true">for</span></span></span><span data-slate-leaf="true" data-offset-key="1810:2"><span 
data-slate-string="true"> (</span></span><span data-slate-leaf="true" data-offset-key="1810:3"><span 
class=" gkhl-keyword" data-slate-object="annotation" data-annotation-key="gkann_6568961888" 
data-annotation-type="annotation"><span data-slate-string="true">int</span></span></span><span 
data-slate-leaf="true" data-offset-key="1810:4"><span data-slate-string="true"> j = </span></span><span 
data-slate-leaf="true" data-offset-key="1810:5"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_3860136291" data-annotation-type="annotation"><span data-slate-string="true">1</span></span></span><span 
data-slate-leaf="true" data-offset-key="1810:6"><span data-slate-string="true">; j &lt;= W; 
j++) {</span></span></span> </div> <div class="se-edcd0337 se-376506be" data-slate-type="code-line" 
data-slate-object="block" data-key="1811"> <span data-slate-object="text" data-key="1812"><span 
data-slate-leaf="true" data-offset-key="1812:0" data-first-offset="true"><span data-slate-string="true"> 
dp[i][j] = dp[i - </span></span><span data-slate-leaf="true" data-offset-key="1812:1"><span 
class=" gkhl-number" data-slate-object="annotation" data-annotation-key="gkann_5755099342" 
data-annotation-type="annotation"><span data-slate-string="true">1</span></span></span><span 
data-slate-leaf="true" data-offset-key="1812:2"><span data-slate-string="true">][j]; </span></span></span> 
</div> <div class="se-edcd0337 se-376506be" data-slate-type="code-line" data-slate-object="block" 
data-key="1813"> <span data-slate-object="text" data-key="1814"><span data-slate-leaf="true" 
data-offset-key="1814:0" data-first-offset="true"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="1814:1"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_3825586642" data-annotation-type="annotation"><span data-slate-string="true">if</span></span></span><span 
data-slate-leaf="true" data-offset-key="1814:2"><span data-slate-string="true"> (j &lt; w1[i]) 
</span></span><span data-slate-leaf="true" data-offset-key="1814:3"><span class=" gkhl-keyword" 
data-slate-object="annotation" data-annotation-key="gkann_5587184712" data-annotation-type="annotation"><span 
data-slate-string="true">continue</span></span></span><span data-slate-leaf="true" data-offset-key="1814:4"><span 
data-slate-string="true">;</span></span></span> </div> <div class="se-edcd0337 se-376506be" 
data-slate-type="code-line" data-slate-object="block" data-key="1815"> <span data-slate-object="text" 
data-key="1816"><span data-slate-leaf="true" data-offset-key="1816:0" data-first-offset="true"><span 
data-slate-string="true"> </span></span><span data-slate-leaf="true" data-offset-key="1816:1"><span 
class=" gkhl-keyword" data-slate-object="annotation" data-annotation-key="gkann_7232888318" 
data-annotation-type="annotation"><span data-slate-string="true">if</span></span></span><span 
data-slate-leaf="true" data-offset-key="1816:2"><span data-slate-string="true"> (dp[i - </span></span><span 
data-slate-leaf="true" data-offset-key="1816:3"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_5401726518" data-annotation-type="annotation"><span data-slate-string="true">1</span></span></span><span 
data-slate-leaf="true" data-offset-key="1816:4"><span data-slate-string="true">][j - w1[i]] 
+ v1[i] &lt; dp[i][j]) </span></span><span data-slate-leaf="true" data-offset-key="1816:5"><span 
class=" gkhl-keyword" data-slate-object="annotation" data-annotation-key="gkann_8206874120" 
data-annotation-type="annotation"><span data-slate-string="true">continue</span></span></span><span 
data-slate-leaf="true" data-offset-key="1816:6"><span data-slate-string="true">;</span></span></span> 
</div> <div class="se-edcd0337 se-376506be" data-slate-type="code-line" data-slate-object="block" 
data-key="1817"> <span data-slate-object="text" data-key="1818"><span data-slate-leaf="true" 
data-offset-key="1818:0" data-first-offset="true"><span data-slate-string="true"> dp[i][j] 
= dp[i - </span></span><span data-slate-leaf="true" data-offset-key="1818:1"><span class=" 
gkhl-number" data-slate-object="annotation" data-annotation-key="gkann_1495465661" data-annotation-type="annotation"><span 
data-slate-string="true">1</span></span></span><span data-slate-leaf="true" data-offset-key="1818:2"><span 
data-slate-string="true">][j - w1[i]] + v1[i];</span></span></span> </div> <div class="se-edcd0337 
se-376506be" data-slate-type="code-line" data-slate-object="block" data-key="1819"> <span data-slate-object="text" 
data-key="1820"><span data-slate-leaf="true" data-offset-key="1820:0" data-first-offset="true"><span 
data-slate-string="true"> }</span></span></span> </div> <div class="se-edcd0337 se-376506be" 
data-slate-type="code-line" data-slate-object="block" data-key="1821"> <span data-slate-object="text" 
data-key="1822"><span data-slate-leaf="true" data-offset-key="1822:0" data-first-offset="true"><span 
data-slate-string="true"> }</span></span></span> </div> <div class="se-edcd0337 se-376506be" 
data-slate-type="code-line" data-slate-object="block" data-key="1823"> <span data-slate-object="text" 
data-key="1824"><span data-slate-leaf="true" data-offset-key="1824:0" data-first-offset="true"><span 
data-slate-string="true"> </span></span><span data-slate-leaf="true" data-offset-key="1824:1"><span 
class=" gkhl-keyword" data-slate-object="annotation" data-annotation-key="gkann_2909785226" 
data-annotation-type="annotation"><span data-slate-string="true">return</span></span></span><span 
data-slate-leaf="true" data-offset-key="1824:2"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="1824:3"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_7699194373" data-annotation-type="annotation"><span data-slate-string="true">0</span></span></span><span 
data-slate-leaf="true" data-offset-key="1824:4"><span data-slate-string="true">;</span></span></span> 
</div> <div class="se-edcd0337 se-376506be" data-slate-type="code-line" data-slate-object="block" 
data-key="1825"> <span data-slate-object="text" data-key="1826"><span data-slate-leaf="true" 
data-offset-key="1826:0" data-first-offset="true"><span data-slate-string="true">} </span></span></span> 
</div> <div class="ps__rail-x" style="width: 365px; left: 0px; bottom: 0px;"> <div class="ps__thumb-x" 
tabindex="0" style="left: 0px; width: 258px;"></div> </div> <div class="ps__rail-y" style="top: 
0px; right: 0px;"> <div class="ps__thumb-y" tabindex="0" style="top: 0px; height: 0px;"></div> 
</div> </div> </div> <div class="se-274acdef " data-slate-type="paragraph" data-slate-object="block" 
data-key="1827"> <span data-slate-object="text" data-key="1828"><span data-slate-leaf="true" 
data-offset-key="1828:0" data-first-offset="true"><span data-slate-string="true">代码中，v、w、c 
数组存储的是多重背包中第 i 种物品的价值、重量和数量，v1、w1 数组用来存储拆分出来的 0/1 背包中的物品价值和重量信息，get_dp 函数就是求解多重背包问题的过程。</span></span></span> 
</div> <div class="se-edbacf6f " data-slate-type="paragraph" data-slate-object="block" data-key="1829"> 
<span data-slate-object="text" data-key="1830"><span data-slate-leaf="true" data-offset-key="1830:0" 
data-first-offset="true"><span data-slate-string="true">其中，分成两步进行求解，首先对多重背包中的每种物品，按照二进制拆分法，打包拆分成 
0/1 背包中的若干个物品。拆分完成后，再按照 0/1 背包的算法流程进行求解，需要注意的是，代码中的循环变量 k，枚举的就是拆分的每一堆的物品数量，从数量 1 开始，每次扩大一倍。</span></span></span> 
</div> <div class="se-486fd73c " data-slate-type="paragraph" data-slate-object="block" data-key="1831"> 
<span data-slate-object="text" data-key="1832"><span data-slate-leaf="true" data-offset-key="1832:0" 
data-first-offset="true"><span data-slate-string="true">对于多重背包中的每种物品，经过二进制拆分以后，最后剩下的几个，要单独算作一个物品，这就是代码第 
22 行的含义。理解了二进制拆分的过程以后，后面的 0/1 背包的求解过程，就不需要我来解释了，都是老生常谈了。</span></span></span> </div> <div class="se-fd17df1d 
" data-slate-type="paragraph" data-slate-object="block" data-key="1833"> <span data-slate-object="text" 
data-key="1834"><span data-slate-leaf="true" data-offset-key="1834:0" data-first-offset="true"><span 
data-slate-string="true">好了，今天的思考题答疑就结束了，如果你还有什么不清楚，或者有更好的想法，欢迎告诉我，我们留言区见！</span></span></span> 
</div> </div>', body_summary='', bundle='book', delta=0, body_format='full_html', langcode='zh-hans', 
revision_id=765 where entity_id=765 
 {executed in 1 msec}
2020-11-24 18:47:44.283 INFO  jdbc.sqltiming Line:373 - update node_revision__body set body_value='<div data-slate-editor="true" data-key="1596" autocorrect="off" 
spellcheck="false" data-gramm="false" style="outline: none; white-space: pre-wrap; overflow-wrap: 
break-word;"> <div class="se-2aefb468 " data-slate-type="paragraph" data-slate-object="block" 
data-key="1597"> <span data-slate-object="text" data-key="1598"><span data-slate-leaf="true" 
data-offset-key="1598:0" data-first-offset="true"><span data-slate-string="true">你好，我是胡光。</span></span></span> 
</div> <div class="se-c3736581 " data-slate-type="paragraph" data-slate-object="block" data-key="1599"> 
<span data-slate-object="text" data-key="1600"><span data-slate-leaf="true" data-offset-key="1600:0" 
data-first-offset="true"><span data-slate-string="true">不知不觉，我们已经讲完了“算法数据结构篇”的全部内容。说是“讲完”，其实更意味着你的算法数据结构的学习之路才刚刚开始，因为编程的核心与灵魂就是算法和数据结构。但这毕竟是一个入门课，所以，整个这部分的内容，我更多是侧重说说那些你可能比较陌生的，且有趣的思维与结构。</span></span></span> 
</div> <div class="se-1a19f56f " data-slate-type="paragraph" data-slate-object="block" data-key="1601"> 
<span data-slate-object="text" data-key="1602"><span data-slate-leaf="true" data-offset-key="1602:0" 
data-first-offset="true"><span data-slate-string="true">我希望通过这个过程，能够激起你对于算法数据结构的学习热情。时至今日，我相信你应该更能深刻地理解我在开篇词里说到的，“学编程，不等于学语言“这句话的含义。</span></span></span> 
</div> <div class="se-4c13dfac " data-slate-type="paragraph" data-slate-object="block" data-key="1603"> 
<span data-slate-object="text" data-key="1604"><span data-slate-leaf="true" data-offset-key="1604:0" 
data-first-offset="true"><span data-slate-string="true">我也非常高兴，看到很多同学都在紧跟着专栏更新节奏，坚持学习。经常在专栏上线的第一时间，这些同学就给我留言，提出自己的疑惑。大部分留言，我都在相对应的课程中回复过了，而对于每节课中的思考题呢，由于要给你充足的思考时间，所以我选择在今天这样一节课中，给你进行一一的解答。</span></span></span> 
</div> <div class="se-2556c201 " data-slate-type="paragraph" data-slate-object="block" data-key="1605"> 
<span data-slate-object="text" data-key="1606"><span data-slate-leaf="true" data-offset-key="1606:0" 
data-first-offset="true"><span data-slate-string="true">看一看我的参考答案，和你的思考结果之间，有什么不同吧。也欢迎你在留言区中，给出一些你感兴趣的题目的思考结果，我希望我们能在这个过程中，碰撞出更多智慧的火花。</span></span></span> 
</div> <h2 class="se-ee8f6427" data-slate-type="heading" data-slate-object="block" data-key="1607"><a 
data-slate-type="link" data-slate-object="inline" data-key="1608" class="se-4be0ddc9 se-76b96135"><span 
data-slate-object="text" data-key="1609"><span data-slate-leaf="true" data-offset-key="1609:0" 
data-first-offset="true"><span data-slate-string="true">重新认识数据结构（上）：初识链表结构</span></span></span></a></h2> 
<div class="se-5974e7b2 " data-slate-type="paragraph" data-slate-object="block" data-key="1610"> 
<span data-slate-object="text" data-key="1611"><span data-slate-leaf="true" data-offset-key="1611:0" 
data-first-offset="true"><span data-slate-string="true">在这一节里，我们学习了基本的链表结构，并且演示了链表结构的插入操作。最后呢，给你留了一个题目，就是实现链表的删除操作。留言区中很多人实现的代码，我也都看过了，总的来说，很多用户对“虚拟头结点”的掌握还是很不错的，下面是我给出的参考代码：</span></span></span> 
</div> <div class="se-bb43c4bf se-952fc9c7" data-slate-type="pre" data-slate-object="block" 
data-key="1612" data-code-language="cpp"> <div class="se-d1ea42f0 se-e8e76daf"> <span></span> 
</div> <div class="se-1e54cdf1"> <div class="se-ec233324 se-d68df055" data-code-line-number="1"></div> 
<div class="se-ec233324 se-d68df055" data-code-line-number="2"></div> <div class="se-ec233324 
se-d68df055" data-code-line-number="3"></div> <div class="se-ec233324 se-d68df055" data-code-line-number="4"></div> 
<div class="se-ec233324 se-d68df055" data-code-line-number="5"></div> <div class="se-ec233324 
se-d68df055" data-code-line-number="6"></div> <div class="se-ec233324 se-d68df055" data-code-line-number="7"></div> 
<div class="se-ec233324 se-d68df055" data-code-line-number="8"></div> </div> <div class="se-ef13dd83 
ps ps--active-x"> <div class="se-edcd0337 se-376506be" data-slate-type="code-line" data-slate-object="block" 
data-key="1613"> <span data-slate-object="text" data-key="1614"><span data-slate-leaf="true" 
data-offset-key="1614:0" data-first-offset="true"><span class=" gkhl-function" data-slate-object="annotation" 
data-annotation-key="gkann_7659470317" data-annotation-type="annotation"><span data-slate-string="true">struct 
Node *erase(strcut Node *head, int ind) </span></span></span><span data-slate-leaf="true" data-offset-key="1614:1"><span 
data-slate-string="true">{</span></span></span> </div> <div class="se-edcd0337 se-376506be" 
data-slate-type="code-line" data-slate-object="block" data-key="1615"> <span data-slate-object="text" 
data-key="1616"><span data-slate-leaf="true" data-offset-key="1616:0" data-first-offset="true"><span 
data-slate-string="true"> </span></span><span data-slate-leaf="true" data-offset-key="1616:1"><span 
class=" gkhl-class" data-slate-object="annotation" data-annotation-key="gkann_6742691392" data-annotation-type="annotation"><span 
class=" gkhl-keyword" data-slate-object="annotation" data-annotation-key="gkann_2089444764" 
data-annotation-type="annotation"><span data-slate-string="true">struct</span></span></span></span><span 
data-slate-leaf="true" data-offset-key="1616:2"><span class=" gkhl-class" data-slate-object="annotation" 
data-annotation-key="gkann_6742691392" data-annotation-type="annotation"><span data-slate-string="true"> 
</span></span></span><span data-slate-leaf="true" data-offset-key="1616:3"><span class=" gkhl-class" 
data-slate-object="annotation" data-annotation-key="gkann_6742691392" data-annotation-type="annotation"><span 
class=" gkhl-title" data-slate-object="annotation" data-annotation-key="gkann_4366181669" data-annotation-type="annotation"><span 
data-slate-string="true">Node</span></span></span></span><span data-slate-leaf="true" data-offset-key="1616:4"><span 
class=" gkhl-class" data-slate-object="annotation" data-annotation-key="gkann_6742691392" data-annotation-type="annotation"><span 
data-slate-string="true"> </span></span></span><span data-slate-leaf="true" data-offset-key="1616:5"><span 
class=" gkhl-class" data-slate-object="annotation" data-annotation-key="gkann_6742691392" data-annotation-type="annotation"><span 
class=" gkhl-title" data-slate-object="annotation" data-annotation-key="gkann_4723784028" data-annotation-type="annotation"><span 
data-slate-string="true">ret</span></span></span></span><span data-slate-leaf="true" data-offset-key="1616:6"><span 
class=" gkhl-class" data-slate-object="annotation" data-annotation-key="gkann_6742691392" data-annotation-type="annotation"><span 
data-slate-string="true">, *</span></span></span><span data-slate-leaf="true" data-offset-key="1616:7"><span 
class=" gkhl-class" data-slate-object="annotation" data-annotation-key="gkann_6742691392" data-annotation-type="annotation"><span 
class=" gkhl-title" data-slate-object="annotation" data-annotation-key="gkann_2603293946" data-annotation-type="annotation"><span 
data-slate-string="true">p</span></span></span></span><span data-slate-leaf="true" data-offset-key="1616:8"><span 
class=" gkhl-class" data-slate-object="annotation" data-annotation-key="gkann_6742691392" data-annotation-type="annotation"><span 
data-slate-string="true"> = &amp;</span></span></span><span data-slate-leaf="true" data-offset-key="1616:9"><span 
class=" gkhl-class" data-slate-object="annotation" data-annotation-key="gkann_6742691392" data-annotation-type="annotation"><span 
class=" gkhl-title" data-slate-object="annotation" data-annotation-key="gkann_0151104729" data-annotation-type="annotation"><span 
data-slate-string="true">ret</span></span></span></span><span data-slate-leaf="true" data-offset-key="1616:10"><span 
class=" gkhl-class" data-slate-object="annotation" data-annotation-key="gkann_6742691392" data-annotation-type="annotation"><span 
data-slate-string="true">, *</span></span></span><span data-slate-leaf="true" data-offset-key="1616:11"><span 
class=" gkhl-class" data-slate-object="annotation" data-annotation-key="gkann_6742691392" data-annotation-type="annotation"><span 
class=" gkhl-title" data-slate-object="annotation" data-annotation-key="gkann_3974845887" data-annotation-type="annotation"><span 
data-slate-string="true">q</span></span></span></span><span data-slate-leaf="true" data-offset-key="1616:12"><span 
class=" gkhl-class" data-slate-object="annotation" data-annotation-key="gkann_6742691392" data-annotation-type="annotation"><span 
data-slate-string="true">;</span></span></span></span> </div> <div class="se-edcd0337 se-376506be" 
data-slate-type="code-line" data-slate-object="block" data-key="1617"> <span data-slate-object="text" 
data-key="1618"><span data-slate-leaf="true" data-offset-key="1618:0" data-first-offset="true"><span 
data-slate-string="true"> ret.next = head;</span></span></span> </div> <div class="se-edcd0337 
se-376506be" data-slate-type="code-line" data-slate-object="block" data-key="1619"> <span data-slate-object="text" 
data-key="1620"><span data-slate-leaf="true" data-offset-key="1620:0" data-first-offset="true"><span 
data-slate-string="true"> </span></span><span data-slate-leaf="true" data-offset-key="1620:1"><span 
class=" gkhl-keyword" data-slate-object="annotation" data-annotation-key="gkann_4051126268" 
data-annotation-type="annotation"><span data-slate-string="true">while</span></span></span><span 
data-slate-leaf="true" data-offset-key="1620:2"><span data-slate-string="true"> (ind--) p = 
p-&gt;next;</span></span></span> </div> <div class="se-edcd0337 se-376506be" data-slate-type="code-line" 
data-slate-object="block" data-key="1621"> <span data-slate-object="text" data-key="1622"><span 
data-slate-leaf="true" data-offset-key="1622:0" data-first-offset="true"><span data-slate-string="true"> 
q = p-&gt;next;</span></span></span> </div> <div class="se-edcd0337 se-376506be" data-slate-type="code-line" 
data-slate-object="block" data-key="1623"> <span data-slate-object="text" data-key="1624"><span 
data-slate-leaf="true" data-offset-key="1624:0" data-first-offset="true"><span data-slate-string="true"> 
p-&gt;next = p-&gt;next-&gt;next;</span></span></span> </div> <div class="se-edcd0337 se-376506be" 
data-slate-type="code-line" data-slate-object="block" data-key="1625"> <span data-slate-object="text" 
data-key="1626"><span data-slate-leaf="true" data-offset-key="1626:0" data-first-offset="true"><span 
data-slate-string="true"> </span></span><span data-slate-leaf="true" data-offset-key="1626:1"><span 
class=" gkhl-keyword" data-slate-object="annotation" data-annotation-key="gkann_7841770371" 
data-annotation-type="annotation"><span data-slate-string="true">return</span></span></span><span 
data-slate-leaf="true" data-offset-key="1626:2"><span data-slate-string="true"> ret.next;</span></span></span> 
</div> <div class="se-edcd0337 se-376506be" data-slate-type="code-line" data-slate-object="block" 
data-key="1627"> <span data-slate-object="text" data-key="1628"><span data-slate-leaf="true" 
data-offset-key="1628:0" data-first-offset="true"><span data-slate-string="true">}</span></span></span> 
</div> <div class="ps__rail-x" style="width: 365px; left: 0px; bottom: 0px;"> <div class="ps__thumb-x" 
tabindex="0" style="left: 0px; width: 356px;"></div> </div> <div class="ps__rail-y" style="top: 
0px; right: 0px;"> <div class="ps__thumb-y" tabindex="0" style="top: 0px; height: 0px;"></div> 
</div> </div> </div> <div class="se-511a7e95 " data-slate-type="paragraph" data-slate-object="block" 
data-key="1629"> <span data-slate-object="text" data-key="1630"><span data-slate-leaf="true" 
data-offset-key="1630:0" data-first-offset="true"><span data-slate-string="true">由于删除操作，有可能删除的是 
head 所指向链表的头结点，所以代码中使用了虚拟头结点的技巧来实现。其中，细心的你可能会发现一个致命的问题：删除节点的操作中，我们只是改变了链表节点的指向关系，跳过了那个待删除节点的位置，那原先那个待删除节点呢？这个节点的空间呢？</span></span></span> 
</div> <div class="se-b5aa48d1 " data-slate-type="paragraph" data-slate-object="block" data-key="1631"> 
<span data-slate-object="text" data-key="1632"><span data-slate-leaf="true" data-offset-key="1632:0" 
data-first-offset="true"><span data-slate-string="true">这就涉及到操作系统中的内存管理相关的知识了，由于这里不影响编程逻辑的理解，所以，我们就不展开说了。如果你感兴趣，可以自行搜索：内存泄漏、malloc、free 
等关键字进行学习。</span></span></span> </div> <h2 class="se-04054904" data-slate-type="heading" data-slate-object="block" 
data-key="1633"><a data-slate-type="link" data-slate-object="inline" data-key="1634" class="se-4be0ddc9 
se-76b96135"><span data-slate-object="text" data-key="1635"><span data-slate-leaf="true" data-offset-key="1635:0" 
data-first-offset="true"><span data-slate-string="true">重新认识数据结构（下）：有趣的 “链表” 思维</span></span></span></a></h2> 
<div class="se-3e0eb96b " data-slate-type="paragraph" data-slate-object="block" data-key="1636"> 
<span data-slate-object="text" data-key="1637"><span data-slate-leaf="true" data-offset-key="1637:0" 
data-first-offset="true"><span data-slate-string="true">这一节是上一节链表知识的升华，我们将一个快乐数序列，在思维层面映射成了链表结构，之后就将快乐数的判定问题，很自然的转换成了链表判环问题，算是彻彻底底的体验了一把链表思维。最后呢，我留了两个思考题，下面我给你一一解答。</span></span></span> 
</div> <h4 class="se-5a531b69" data-slate-type="heading" data-slate-object="block" data-key="1638"><span 
data-slate-object="text" data-key="1639"><span data-slate-leaf="true" data-offset-key="1639:0" 
data-first-offset="true"><span data-slate-string="true">1. 计算环的长度</span></span></span></h4> 
<div class="se-3d5e5288 " data-slate-type="paragraph" data-slate-object="block" data-key="1640"> 
<span data-slate-object="text" data-key="1641"><span data-slate-leaf="true" data-offset-key="1641:0" 
data-first-offset="true"><span data-slate-string="true">第一个问题，如果链表中有环的话，那么这个环的长度是多少？这个问题比较简单，我看到留言区中很多用户都能自行想出来，在这里我就简单说一说。</span></span></span> 
</div> <div class="se-09fd74e0 " data-slate-type="paragraph" data-slate-object="block" data-key="1642"> 
<span data-slate-object="text" data-key="1643"><span data-slate-leaf="true" data-offset-key="1643:0" 
data-first-offset="true"><span data-slate-string="true">我们可以肯定，如果链表中有环，那么采用快慢指针的方法，两个指针一定会在环中相遇。此时，可以让其中一个指针不动，另外一个指针再沿着环走一圈，直到两个指针再次相遇，这样，就能得到环的长度了。</span></span></span> 
</div> <h4 class="se-e80896d7" data-slate-type="heading" data-slate-object="block" data-key="1644"><span 
data-slate-object="text" data-key="1645"><span data-slate-leaf="true" data-offset-key="1645:0" 
data-first-offset="true"><span data-slate-string="true">2. 找到环的起始位置</span></span></span></h4> 
<div class="se-5f7afa1e " data-slate-type="paragraph" data-slate-object="block" data-key="1646"> 
<span data-slate-object="text" data-key="1647"><span data-slate-leaf="true" data-offset-key="1647:0" 
data-first-offset="true"><span data-slate-string="true">第二个问题，如果链表中有环，请求出环的起始点。如下图所示，环的起始点为 
3 号点。</span></span></span> </div> <div class="se-5dec3d8a" data-slate-type="image" data-slate-object="block" 
data-key="1648"> <img class="se-a6d69e31" src="https://static001.geekbang.org/resource/image/ca/74/caf1c157963e86d929d28b9d6b747674.jpg"> 
<div class="se-20d5237f"> 图1： 链表成环示意图 </div> </div> <div class="se-ad00287a " data-slate-type="paragraph" 
data-slate-object="block" data-key="1649"> <span data-slate-object="text" data-key="1650"><span 
data-slate-leaf="true" data-offset-key="1650:0" data-first-offset="true"><span data-slate-string="true">这里呢，我将用图跟你感性地解答这个问题，请你注意，以下我所要讲的不是一个严格的证明过程，如果想要更准确地理解这个问题，你可以试着借助“同余式”来理解。下面，就开始我们的非严谨图例演示。</span></span></span> 
</div> <div class="se-74b131b1 " data-slate-type="paragraph" data-slate-object="block" data-key="1651"> 
<span data-slate-object="text" data-key="1652"><span data-slate-leaf="true" data-offset-key="1652:0" 
data-first-offset="true"><span data-slate-string="true">首先，假设从链表起始点到环的起点距离为 x，那么当快慢指针中的慢指针 
p 刚刚走到环的起始点位置的时候，q 指针应该在环内部距离环起始点 x 的位置上，如图所示：</span></span></span> </div> <div class="se-bb059985" 
data-slate-type="image" data-slate-object="block" data-key="1653"> <img class="se-cecefaff" 
src="https://static001.geekbang.org/resource/image/e6/e6/e60d36ddb8d437c776d73e54e01252e6.jpg"> 
<div class="se-23bfcbb8"> 图2： p 节点刚刚进入环时刻 </div> </div> <div class="se-a44087f1 " data-slate-type="paragraph" 
data-slate-object="block" data-key="1654"> <span data-slate-object="text" data-key="1655"><span 
data-slate-leaf="true" data-offset-key="1655:0" data-first-offset="true"><span data-slate-string="true">图中，q 
指针距离环起始点 x 步，q 指针沿着链表向前走 y 步，就又可以到达环的起始点位置，如图所示 x + y 等于环长。也就是说，q 指针想要遇到 p 指针，就必须要追上 y 步的距离，又因为 
p 指针每次走 1 步，q 指针每轮走 2 步，所以 q 指针每轮追上 1 步，也就是说，从此刻开始，当 q 指针追上 p 指针的时候，p 指针正好向前走了 y 步，如图所示：</span></span></span> 
</div> <div class="se-4871ed7b" data-slate-type="image" data-slate-object="block" data-key="1656"> 
<img class="se-6b8cedb2" src="https://static001.geekbang.org/resource/image/23/56/23c57e116b438cb6774f8420e1d86156.jpg"> 
<div class="se-e8ba5d70"> 图3： p、q环中相遇时刻 </div> </div> <div class="se-f6ca17b9 " data-slate-type="paragraph" 
data-slate-object="block" data-key="1657"> <span data-slate-object="text" data-key="1658"><span 
data-slate-leaf="true" data-offset-key="1658:0" data-first-offset="true"><span data-slate-string="true">此时，你会发现 
p 点在环中走了 y 步以后，p 和 q 相遇了，也就意味着 p 点再走 x 步就到环的起始点了。而恰巧，从链表头结点开始到环的起始点也是 x 步，所以此时只需要让 p 站在相遇点，q 
指针回到链表的起始点，然后两个指针以相同的速度，一起往后走，直到二者再次相遇的时候，相遇点就是环的起始点了。</span></span></span> </div> <div class="se-96460d15 
" data-slate-type="paragraph" data-slate-object="block" data-key="1659"> <span data-slate-object="text" 
data-key="1660"><span data-slate-leaf="true" data-offset-key="1660:0" data-first-offset="true"><span 
data-slate-string="true">至此，我们就看完了求解环起始点位置的方法，至于代码么，就不是难题了，你可以自行发挥了。</span></span></span> </div> 
<h2 class="se-3b30b194" data-slate-type="heading" data-slate-object="block" data-key="1661"><a 
data-slate-type="link" data-slate-object="inline" data-key="1662" class="se-4be0ddc9 se-76b96135"><span 
data-slate-object="text" data-key="1663"><span data-slate-leaf="true" data-offset-key="1663:0" 
data-first-offset="true"><span data-slate-string="true">二分查找：提升程序的查找效率</span></span></span></a></h2> 
<div class="se-23ba00af " data-slate-type="paragraph" data-slate-object="block" data-key="1664"> 
<span data-slate-object="text" data-key="1665"><span data-slate-leaf="true" data-offset-key="1665:0" 
data-first-offset="true"><span data-slate-string="true">这一节中呢，我们学习了简单的二分查找算法，由此我们引申出了二分答案的相关算法。二分答案算法的应用场景呢，就是有一个函数 
f(x) = y，如果它具有单调性，并且通过 x 求 y 很好求，而通过 y 确定 x 就很麻烦，这时，二分答案算法就该登场了。</span></span></span> </div> 
<div class="se-5c2723a7 " data-slate-type="paragraph" data-slate-object="block" data-key="1666"> 
<span data-slate-object="text" data-key="1667"><span data-slate-leaf="true" data-offset-key="1667:0" 
data-first-offset="true"><span data-slate-string="true">最后的思考题中呢，是一道通过税后工资，计算税前工资的题目。我们可以发现，根据个人所得税缴纳的规则，肯定是税前工资越高，税后工资就越高，所以我们把税前工资 
x 和税后工资 y 之间，看成是一个映射关系 f 的话，那么 f(x) = y 的函数，就是单调函数。</span></span></span> </div> <div class="se-b42a4183 
" data-slate-type="paragraph" data-slate-object="block" data-key="1668"> <span data-slate-object="text" 
data-key="1669"><span data-slate-leaf="true" data-offset-key="1669:0" data-first-offset="true"><span 
data-slate-string="true">而这个 f 函数呢，我们也可以看到，通过税前工资 x 确定税后工资 y 的过程很简单，而通过税后工资 y 计算税前工资 x 的过程就不那么容易了。因此，我们当然要搬出二分答案算法，来解决这个问题了。下面是我给出的示例代码：</span></span></span> 
</div> <div class="se-41999ab1 se-153bd3ce" data-slate-type="pre" data-slate-object="block" 
data-key="1670" data-code-language="cpp"> <div class="se-65dab90d se-d4880c5b"> <span></span> 
</div> <div class="se-b10f6dc4"> <div class="se-27e07122 se-076a1937" data-code-line-number="1"></div> 
<div class="se-27e07122 se-076a1937" data-code-line-number="2"></div> <div class="se-27e07122 
se-076a1937" data-code-line-number="3"></div> <div class="se-27e07122 se-076a1937" data-code-line-number="4"></div> 
<div class="se-27e07122 se-076a1937" data-code-line-number="5"></div> <div class="se-27e07122 
se-076a1937" data-code-line-number="6"></div> <div class="se-27e07122 se-076a1937" data-code-line-number="7"></div> 
<div class="se-27e07122 se-076a1937" data-code-line-number="8"></div> <div class="se-27e07122 
se-076a1937" data-code-line-number="9"></div> <div class="se-27e07122 se-076a1937" data-code-line-number="10"></div> 
<div class="se-27e07122 se-076a1937" data-code-line-number="11"></div> <div class="se-27e07122 
se-076a1937" data-code-line-number="12"></div> <div class="se-27e07122 se-076a1937" data-code-line-number="13"></div> 
<div class="se-27e07122 se-076a1937" data-code-line-number="14"></div> <div class="se-27e07122 
se-076a1937" data-code-line-number="15"></div> <div class="se-27e07122 se-076a1937" data-code-line-number="16"></div> 
<div class="se-27e07122 se-076a1937" data-code-line-number="17"></div> <div class="se-27e07122 
se-076a1937" data-code-line-number="18"></div> <div class="se-27e07122 se-076a1937" data-code-line-number="19"></div> 
<div class="se-27e07122 se-076a1937" data-code-line-number="20"></div> <div class="se-27e07122 
se-076a1937" data-code-line-number="21"></div> <div class="se-27e07122 se-076a1937" data-code-line-number="22"></div> 
<div class="se-27e07122 se-076a1937" data-code-line-number="23"></div> </div> <div class="se-f2a2db7c 
ps ps--active-x"> <div class="se-edcd0337 se-376506be" data-slate-type="code-line" data-slate-object="block" 
data-key="1671"> <span data-slate-object="text" data-key="1672"><span data-slate-leaf="true" 
data-offset-key="1672:0" data-first-offset="true"><span class=" gkhl-meta" data-slate-object="annotation" 
data-annotation-key="gkann_1670845127" data-annotation-type="annotation"><span data-slate-string="true">#define 
EPS 1e-7</span></span></span></span> </div> <div class="se-edcd0337 se-376506be" data-slate-type="code-line" 
data-slate-object="block" data-key="1673"> <span data-slate-object="text" data-key="1674"><span 
data-slate-leaf="true" data-offset-key="1674:0" data-first-offset="true"><span class=" gkhl-meta" 
data-slate-object="annotation" data-annotation-key="gkann_5509934242" data-annotation-type="annotation"><span 
data-slate-string="true">#define min(a, b) ((a) &lt; (b) ? (a) : (b))</span></span></span></span> 
</div> <div class="se-edcd0337 se-376506be" data-slate-type="code-line" data-slate-object="block" 
data-key="1675"> <span data-slate-object="text" data-key="1676"></span> </div> <div class="se-edcd0337 
se-376506be" data-slate-type="code-line" data-slate-object="block" data-key="1677"> <span data-slate-object="text" 
data-key="1678"><span data-slate-leaf="true" data-offset-key="1678:0" data-first-offset="true"><span 
class=" gkhl-keyword" data-slate-object="annotation" data-annotation-key="gkann_3201906712" 
data-annotation-type="annotation"><span class=" gkhl-function" data-slate-object="annotation" 
data-annotation-key="gkann_9698847035" data-annotation-type="annotation"><span data-slate-string="true">double</span></span></span></span><span 
data-slate-leaf="true" data-offset-key="1678:1"><span class=" gkhl-function" data-slate-object="annotation" 
data-annotation-key="gkann_9698847035" data-annotation-type="annotation"><span data-slate-string="true"> 
</span></span></span><span data-slate-leaf="true" data-offset-key="1678:2"><span class=" gkhl-function" 
data-slate-object="annotation" data-annotation-key="gkann_9698847035" data-annotation-type="annotation"><span 
class=" gkhl-title" data-slate-object="annotation" data-annotation-key="gkann_3583265569" data-annotation-type="annotation"><span 
data-slate-string="true">f</span></span></span></span><span data-slate-leaf="true" data-offset-key="1678:3"><span 
class=" gkhl-function" data-slate-object="annotation" data-annotation-key="gkann_9698847035" 
data-annotation-type="annotation"><span class=" gkhl-params" data-slate-object="annotation" 
data-annotation-key="gkann_5866710466" data-annotation-type="annotation"><span data-slate-string="true">(double 
x)</span></span></span></span><span data-slate-leaf="true" data-offset-key="1678:4"><span class=" 
gkhl-function" data-slate-object="annotation" data-annotation-key="gkann_9698847035" data-annotation-type="annotation"><span 
data-slate-string="true"> </span></span></span><span data-slate-leaf="true" data-offset-key="1678:5"><span 
data-slate-string="true">{</span></span></span> </div> <div class="se-edcd0337 se-376506be" 
data-slate-type="code-line" data-slate-object="block" data-key="1679"> <span data-slate-object="text" 
data-key="1680"><span data-slate-leaf="true" data-offset-key="1680:0" data-first-offset="true"><span 
data-slate-string="true"> </span></span><span data-slate-leaf="true" data-offset-key="1680:1"><span 
class=" gkhl-keyword" data-slate-object="annotation" data-annotation-key="gkann_5691563564" 
data-annotation-type="annotation"><span data-slate-string="true">double</span></span></span><span 
data-slate-leaf="true" data-offset-key="1680:2"><span data-slate-string="true"> xx = min(</span></span><span 
data-slate-leaf="true" data-offset-key="1680:3"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_5857750803" data-annotation-type="annotation"><span data-slate-string="true">3000</span></span></span><span 
data-slate-leaf="true" data-offset-key="1680:4"><span data-slate-string="true">, x) * </span></span><span 
data-slate-leaf="true" data-offset-key="1680:5"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_6181064309" data-annotation-type="annotation"><span data-slate-string="true">0.03</span></span></span><span 
data-slate-leaf="true" data-offset-key="1680:6"><span data-slate-string="true">;</span></span></span> 
</div> <div class="se-edcd0337 se-376506be" data-slate-type="code-line" data-slate-object="block" 
data-key="1681"> <span data-slate-object="text" data-key="1682"><span data-slate-leaf="true" 
data-offset-key="1682:0" data-first-offset="true"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="1682:1"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_2621971041" data-annotation-type="annotation"><span data-slate-string="true">if</span></span></span><span 
data-slate-leaf="true" data-offset-key="1682:2"><span data-slate-string="true"> (x &gt; </span></span><span 
data-slate-leaf="true" data-offset-key="1682:3"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_5309779801" data-annotation-type="annotation"><span data-slate-string="true">3000</span></span></span><span 
data-slate-leaf="true" data-offset-key="1682:4"><span data-slate-string="true">) {</span></span></span> 
</div> <div class="se-edcd0337 se-376506be" data-slate-type="code-line" data-slate-object="block" 
data-key="1683"> <span data-slate-object="text" data-key="1684"><span data-slate-leaf="true" 
data-offset-key="1684:0" data-first-offset="true"><span data-slate-string="true"> xx += (min(</span></span><span 
data-slate-leaf="true" data-offset-key="1684:1"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_6494322270" data-annotation-type="annotation"><span data-slate-string="true">12000</span></span></span><span 
data-slate-leaf="true" data-offset-key="1684:2"><span data-slate-string="true">, x) - </span></span><span 
data-slate-leaf="true" data-offset-key="1684:3"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_4874114517" data-annotation-type="annotation"><span data-slate-string="true">3000</span></span></span><span 
data-slate-leaf="true" data-offset-key="1684:4"><span data-slate-string="true">) * </span></span><span 
data-slate-leaf="true" data-offset-key="1684:5"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_6918854547" data-annotation-type="annotation"><span data-slate-string="true">0.1</span></span></span><span 
data-slate-leaf="true" data-offset-key="1684:6"><span data-slate-string="true">;</span></span></span> 
</div> <div class="se-edcd0337 se-376506be" data-slate-type="code-line" data-slate-object="block" 
data-key="1685"> <span data-slate-object="text" data-key="1686"><span data-slate-leaf="true" 
data-offset-key="1686:0" data-first-offset="true"><span data-slate-string="true"> } </span></span></span> 
</div> <div class="se-edcd0337 se-376506be" data-slate-type="code-line" data-slate-object="block" 
data-key="1687"> <span data-slate-object="text" data-key="1688"><span data-slate-leaf="true" 
data-offset-key="1688:0" data-first-offset="true"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="1688:1"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_7256541991" data-annotation-type="annotation"><span data-slate-string="true">if</span></span></span><span 
data-slate-leaf="true" data-offset-key="1688:2"><span data-slate-string="true"> (x &gt; </span></span><span 
data-slate-leaf="true" data-offset-key="1688:3"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_0392233153" data-annotation-type="annotation"><span data-slate-string="true">12000</span></span></span><span 
data-slate-leaf="true" data-offset-key="1688:4"><span data-slate-string="true">) {</span></span></span> 
</div> <div class="se-edcd0337 se-376506be" data-slate-type="code-line" data-slate-object="block" 
data-key="1689"> <span data-slate-object="text" data-key="1690"><span data-slate-leaf="true" 
data-offset-key="1690:0" data-first-offset="true"><span data-slate-string="true"> xx += (min(</span></span><span 
data-slate-leaf="true" data-offset-key="1690:1"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_5407286555" data-annotation-type="annotation"><span data-slate-string="true">25000</span></span></span><span 
data-slate-leaf="true" data-offset-key="1690:2"><span data-slate-string="true">, x) - </span></span><span 
data-slate-leaf="true" data-offset-key="1690:3"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_3757606883" data-annotation-type="annotation"><span data-slate-string="true">12000</span></span></span><span 
data-slate-leaf="true" data-offset-key="1690:4"><span data-slate-string="true">) * </span></span><span 
data-slate-leaf="true" data-offset-key="1690:5"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_5765880020" data-annotation-type="annotation"><span data-slate-string="true">0.2</span></span></span><span 
data-slate-leaf="true" data-offset-key="1690:6"><span data-slate-string="true">;</span></span></span> 
</div> <div class="se-edcd0337 se-376506be" data-slate-type="code-line" data-slate-object="block" 
data-key="1691"> <span data-slate-object="text" data-key="1692"><span data-slate-leaf="true" 
data-offset-key="1692:0" data-first-offset="true"><span data-slate-string="true"> }</span></span></span> 
</div> <div class="se-edcd0337 se-376506be" data-slate-type="code-line" data-slate-object="block" 
data-key="1693"> <span data-slate-object="text" data-key="1694"><span data-slate-leaf="true" 
data-offset-key="1694:0" data-first-offset="true"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="1694:1"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_7068677539" data-annotation-type="annotation"><span data-slate-string="true">if</span></span></span><span 
data-slate-leaf="true" data-offset-key="1694:2"><span data-slate-string="true"> (xx &gt; </span></span><span 
data-slate-leaf="true" data-offset-key="1694:3"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_9107531057" data-annotation-type="annotation"><span data-slate-string="true">25000</span></span></span><span 
data-slate-leaf="true" data-offset-key="1694:4"><span data-slate-string="true">) {</span></span></span> 
</div> <div class="se-edcd0337 se-376506be" data-slate-type="code-line" data-slate-object="block" 
data-key="1695"> <span data-slate-object="text" data-key="1696"><span data-slate-leaf="true" 
data-offset-key="1696:0" data-first-offset="true"><span data-slate-string="true"> xx += (min(</span></span><span 
data-slate-leaf="true" data-offset-key="1696:1"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_6395183282" data-annotation-type="annotation"><span data-slate-string="true">35000</span></span></span><span 
data-slate-leaf="true" data-offset-key="1696:2"><span data-slate-string="true">, x) - </span></span><span 
data-slate-leaf="true" data-offset-key="1696:3"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_9429589847" data-annotation-type="annotation"><span data-slate-string="true">25000</span></span></span><span 
data-slate-leaf="true" data-offset-key="1696:4"><span data-slate-string="true">) * </span></span><span 
data-slate-leaf="true" data-offset-key="1696:5"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_3496531194" data-annotation-type="annotation"><span data-slate-string="true">0.25</span></span></span><span 
data-slate-leaf="true" data-offset-key="1696:6"><span data-slate-string="true">;</span></span></span> 
</div> <div class="se-edcd0337 se-376506be" data-slate-type="code-line" data-slate-object="block" 
data-key="1697"> <span data-slate-object="text" data-key="1698"><span data-slate-leaf="true" 
data-offset-key="1698:0" data-first-offset="true"><span data-slate-string="true"> }</span></span></span> 
</div> <div class="se-edcd0337 se-376506be" data-slate-type="code-line" data-slate-object="block" 
data-key="1699"> <span data-slate-object="text" data-key="1700"><span data-slate-leaf="true" 
data-offset-key="1700:0" data-first-offset="true"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="1700:1"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_9712809993" data-annotation-type="annotation"><span data-slate-string="true">return</span></span></span><span 
data-slate-leaf="true" data-offset-key="1700:2"><span data-slate-string="true"> x - xx;</span></span></span> 
</div> <div class="se-edcd0337 se-376506be" data-slate-type="code-line" data-slate-object="block" 
data-key="1701"> <span data-slate-object="text" data-key="1702"><span data-slate-leaf="true" 
data-offset-key="1702:0" data-first-offset="true"><span data-slate-string="true">}</span></span></span> 
</div> <div class="se-edcd0337 se-376506be" data-slate-type="code-line" data-slate-object="block" 
data-key="1703"> <span data-slate-object="text" data-key="1704"></span> </div> <div class="se-edcd0337 
se-376506be" data-slate-type="code-line" data-slate-object="block" data-key="1705"> <span data-slate-object="text" 
data-key="1706"><span data-slate-leaf="true" data-offset-key="1706:0" data-first-offset="true"><span 
class=" gkhl-function" data-slate-object="annotation" data-annotation-key="gkann_4586842194" 
data-annotation-type="annotation"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_1087778019" data-annotation-type="annotation"><span data-slate-string="true">double</span></span></span></span><span 
data-slate-leaf="true" data-offset-key="1706:1"><span class=" gkhl-function" data-slate-object="annotation" 
data-annotation-key="gkann_4586842194" data-annotation-type="annotation"><span data-slate-string="true"> 
</span></span></span><span data-slate-leaf="true" data-offset-key="1706:2"><span class=" gkhl-function" 
data-slate-object="annotation" data-annotation-key="gkann_4586842194" data-annotation-type="annotation"><span 
class=" gkhl-title" data-slate-object="annotation" data-annotation-key="gkann_7508760242" data-annotation-type="annotation"><span 
data-slate-string="true">binary_search</span></span></span></span><span data-slate-leaf="true" 
data-offset-key="1706:3"><span class=" gkhl-function" data-slate-object="annotation" data-annotation-key="gkann_4586842194" 
data-annotation-type="annotation"><span class=" gkhl-params" data-slate-object="annotation" 
data-annotation-key="gkann_0579697028" data-annotation-type="annotation"><span data-slate-string="true">(double 
l, double r, double y)</span></span></span></span><span data-slate-leaf="true" data-offset-key="1706:4"><span 
class=" gkhl-function" data-slate-object="annotation" data-annotation-key="gkann_4586842194" 
data-annotation-type="annotation"><span data-slate-string="true"> </span></span></span><span 
data-slate-leaf="true" data-offset-key="1706:5"><span data-slate-string="true">{</span></span></span> 
</div> <div class="se-edcd0337 se-376506be" data-slate-type="code-line" data-slate-object="block" 
data-key="1707"> <span data-slate-object="text" data-key="1708"><span data-slate-leaf="true" 
data-offset-key="1708:0" data-first-offset="true"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="1708:1"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_1257028683" data-annotation-type="annotation"><span data-slate-string="true">if</span></span></span><span 
data-slate-leaf="true" data-offset-key="1708:2"><span data-slate-string="true"> (r - l &lt;= 
EPS) </span></span><span data-slate-leaf="true" data-offset-key="1708:3"><span class=" gkhl-keyword" 
data-slate-object="annotation" data-annotation-key="gkann_7120938444" data-annotation-type="annotation"><span 
data-slate-string="true">return</span></span></span><span data-slate-leaf="true" data-offset-key="1708:4"><span 
data-slate-string="true"> l;</span></span></span> </div> <div class="se-edcd0337 se-376506be" 
data-slate-type="code-line" data-slate-object="block" data-key="1709"> <span data-slate-object="text" 
data-key="1710"><span data-slate-leaf="true" data-offset-key="1710:0" data-first-offset="true"><span 
data-slate-string="true"> </span></span><span data-slate-leaf="true" data-offset-key="1710:1"><span 
class=" gkhl-keyword" data-slate-object="annotation" data-annotation-key="gkann_0313328580" 
data-annotation-type="annotation"><span data-slate-string="true">double</span></span></span><span 
data-slate-leaf="true" data-offset-key="1710:2"><span data-slate-string="true"> mid = (l + 
r) / </span></span><span data-slate-leaf="true" data-offset-key="1710:3"><span class=" gkhl-number" 
data-slate-object="annotation" data-annotation-key="gkann_5462864317" data-annotation-type="annotation"><span 
data-slate-string="true">2.0</span></span></span><span data-slate-leaf="true" data-offset-key="1710:4"><span 
data-slate-string="true">;</span></span></span> </div> <div class="se-edcd0337 se-376506be" 
data-slate-type="code-line" data-slate-object="block" data-key="1711"> <span data-slate-object="text" 
data-key="1712"><span data-slate-leaf="true" data-offset-key="1712:0" data-first-offset="true"><span 
data-slate-string="true"> </span></span><span data-slate-leaf="true" data-offset-key="1712:1"><span 
class=" gkhl-keyword" data-slate-object="annotation" data-annotation-key="gkann_2968356992" 
data-annotation-type="annotation"><span data-slate-string="true">if</span></span></span><span 
data-slate-leaf="true" data-offset-key="1712:2"><span data-slate-string="true"> (f(mid) &lt; 
y) </span></span><span data-slate-leaf="true" data-offset-key="1712:3"><span class=" gkhl-keyword" 
data-slate-object="annotation" data-annotation-key="gkann_0255773452" data-annotation-type="annotation"><span 
data-slate-string="true">return</span></span></span><span data-slate-leaf="true" data-offset-key="1712:4"><span 
data-slate-string="true"> binary_search(mid, r, y);</span></span></span> </div> <div class="se-edcd0337 
se-376506be" data-slate-type="code-line" data-slate-object="block" data-key="1713"> <span data-slate-object="text" 
data-key="1714"><span data-slate-leaf="true" data-offset-key="1714:0" data-first-offset="true"><span 
data-slate-string="true"> </span></span><span data-slate-leaf="true" data-offset-key="1714:1"><span 
class=" gkhl-keyword" data-slate-object="annotation" data-annotation-key="gkann_6639724010" 
data-annotation-type="annotation"><span data-slate-string="true">return</span></span></span><span 
data-slate-leaf="true" data-offset-key="1714:2"><span data-slate-string="true"> binary_search(l, 
mid, y);</span></span></span> </div> <div class="se-edcd0337 se-376506be" data-slate-type="code-line" 
data-slate-object="block" data-key="1715"> <span data-slate-object="text" data-key="1716"><span 
data-slate-leaf="true" data-offset-key="1716:0" data-first-offset="true"><span data-slate-string="true">}</span></span></span> 
</div> <div class="ps__rail-x" style="width: 365px; left: 0px; bottom: 0px;"> <div class="ps__thumb-x" 
tabindex="0" style="left: 0px; width: 328px;"></div> </div> <div class="ps__rail-y" style="top: 
0px; right: 0px;"> <div class="ps__thumb-y" tabindex="0" style="top: 0px; height: 0px;"></div> 
</div> </div> </div> <div class="se-8077ca6c " data-slate-type="paragraph" data-slate-object="block" 
data-key="1717"> <span data-slate-object="text" data-key="1718"><span data-slate-leaf="true" 
data-offset-key="1718:0" data-first-offset="true"><span data-slate-string="true">你会发现，代码中的 
binary_search 函数，和我们那一讲中所给的切绳子问题的代码几乎一模一样，唯一不同的就是 f 函数换了样子。</span></span></span> </div> <div 
class="se-838f7ca4 " data-slate-type="paragraph" data-slate-object="block" data-key="1719"> 
<span data-slate-object="text" data-key="1720"><span data-slate-leaf="true" data-offset-key="1720:0" 
data-first-offset="true"><span data-slate-string="true">其实对于二分答案的算法实现，代码真的不是什么难点，难点在于发现问题可以采用二分算法的过程。也就是看到那两条性质判断：f(x)=y 
是不是具有单调性；是不是通过 x 求 y 比较容易，通过 y 求 x 比较困难。</span></span></span> </div> <h2 class="se-664e32c4" 
data-slate-type="heading" data-slate-object="block" data-key="1721"><a data-slate-type="link" 
data-slate-object="inline" data-key="1722" class="se-4be0ddc9 se-76b96135"><span data-slate-object="text" 
data-key="1723"><span data-slate-leaf="true" data-offset-key="1723:0" data-first-offset="true"><span 
data-slate-string="true">栈与单调栈：最大矩形面积</span></span></span></a></h2> <div class="se-569cb11f 
" data-slate-type="paragraph" data-slate-object="block" data-key="1724"> <span data-slate-object="text" 
data-key="1725"><span data-slate-leaf="true" data-offset-key="1725:0" data-first-offset="true"><span 
data-slate-string="true">本节呢，我们学习了栈和单调栈的基本知识，并且知道了单调栈是用来维护最近大于或小于关系的数据结构。最后的思考题呢，是判断一个括号序列是否是合法的，所谓合法的括号序列，也就是括号之间要么是完全包含，要么是并列无关。</span></span></span> 
</div> <div class="se-1de431eb " data-slate-type="paragraph" data-slate-object="block" data-key="1726"> 
<span data-slate-object="text" data-key="1727"><span data-slate-leaf="true" data-offset-key="1727:0" 
data-first-offset="true"><span data-slate-string="true">根据栈的基础知识，如果我们把一个元素入栈动作看成是左括号，出栈看成是对应的右括号，那么一组元素的入栈及出栈操作，就可以唯一对应到一个合法的括号序列。例如，如下操作序列：</span></span></span> 
</div> <div class="se-6f878eb2 se-ed4bf4a0" data-slate-type="pre" data-slate-object="block" 
data-key="1728"> <div class="se-8f580599 se-fc02f862"> <span></span> </div> <div class="se-a2963424"> 
<div class="se-48018892 se-0325e9aa" data-code-line-number="1"></div> <div class="se-48018892 
se-0325e9aa" data-code-line-number="2"></div> </div> <div class="se-f9a8b712 ps"> <div class="se-edcd0337 
se-376506be" data-slate-type="code-line" data-slate-object="block" data-key="1729"> <span data-slate-object="text" 
data-key="1730"><span data-slate-leaf="true" data-offset-key="1730:0" data-first-offset="true"><span 
data-slate-string="true"> 1 2 3 4 5 6 7 8 9 10</span></span></span> </div> <div class="se-edcd0337 
se-376506be" data-slate-type="code-line" data-slate-object="block" data-key="1731"> <span data-slate-object="text" 
data-key="1732"><span data-slate-leaf="true" data-offset-key="1732:0" data-first-offset="true"><span 
data-slate-string="true">push push pop pop push push pop push pop pop </span></span></span> 
</div> <div class="ps__rail-x" style="left: 0px; bottom: 0px;"> <div class="ps__thumb-x" tabindex="0" 
style="left: 0px; width: 0px;"></div> </div> <div class="ps__rail-y" style="top: 0px; right: 
0px;"> <div class="ps__thumb-y" tabindex="0" style="top: 0px; height: 0px;"></div> </div> </div> 
</div> <div class="se-3d9d1b3f " data-slate-type="paragraph" data-slate-object="block" data-key="1733"> 
<span data-slate-object="text" data-key="1734"><span data-slate-leaf="true" data-offset-key="1734:0" 
data-first-offset="true"><span data-slate-string="true">其中 push 是入栈操作，pop 是出栈操作。显然，3 号的 pop 
操作，弹出的应该是 2 号 push 进去的元素，也就是 2 号和 3 号操作是一对操作。那么把 push 写成左括号，pop 写成右括号，如上操作序列，就可以对应如下的括号序列：</span></span></span> 
</div> <div class="se-0fd9a897 se-8f8e7a11" data-slate-type="pre" data-slate-object="block" 
data-key="1735"> <div class="se-b2cf8226 se-48954b6b"> <span></span> </div> <div class="se-c87df9cd"> 
<div class="se-ac23760a se-f22e311b" data-code-line-number="1"></div> </div> <div class="se-9408b324 
ps"> <div class="se-edcd0337 se-376506be" data-slate-type="code-line" data-slate-object="block" 
data-key="1736"> <span data-slate-object="text" data-key="1737"><span data-slate-leaf="true" 
data-offset-key="1737:0" data-first-offset="true"><span data-slate-string="true">【（）】{【】【】}</span></span></span> 
</div> <div class="ps__rail-x" style="left: 0px; bottom: 0px;"> <div class="ps__thumb-x" tabindex="0" 
style="left: 0px; width: 0px;"></div> </div> <div class="ps__rail-y" style="top: 0px; right: 
0px;"> <div class="ps__thumb-y" tabindex="0" style="top: 0px; height: 0px;"></div> </div> </div> 
</div> <div class="se-f7df6824 " data-slate-type="paragraph" data-slate-object="block" data-key="1738"> 
<span data-slate-object="text" data-key="1739"><span data-slate-leaf="true" data-offset-key="1739:0" 
data-first-offset="true"><span data-slate-string="true">你会发现，相对应的左右括号，就对应了相匹配的 push 和 pop 操作。那么判断一个括号序列是否合法，就可以把这个括号序列看成是一组入栈和出栈操作。</span></span></span> 
</div> <div class="se-d3e7cc4d " data-slate-type="paragraph" data-slate-object="block" data-key="1740"> 
<span data-slate-object="text" data-key="1741"><span data-slate-leaf="true" data-offset-key="1741:0" 
data-first-offset="true"><span data-slate-string="true">我们依次处理括号序列中的每一位，碰到左括号就入栈；碰到右括号，我们就弹出栈顶的一个左括号，看看是否和当前右括号是匹配的，如果不匹配就说明括号序列非法，如果匹配，就继续处理下一个括号序列中的字符。直到最后，如果栈中为空，就说明原括号序列合法。</span></span></span> 
</div> <div class="se-b9ca32b7 " data-slate-type="paragraph" data-slate-object="block" data-key="1742"> 
<span data-slate-object="text" data-key="1743"><span data-slate-leaf="true" data-offset-key="1743:0" 
data-first-offset="true"><span data-slate-string="true">好了，至此我们就讲完了这道题目的解题思路，接下来就是请你把我说的解题思路，转换成代码了，加油！如果实在想不出来，也可以参考用户 
@胖胖胖 、@Hunter Liu 在留言区中的代码和解题思路。</span></span></span> </div> <h2 class="se-09353af6" data-slate-type="heading" 
data-slate-object="block" data-key="1744"><a data-slate-type="link" data-slate-object="inline" 
data-key="1745" class="se-4be0ddc9 se-76b96135"><span data-slate-object="text" data-key="1746"><span 
data-slate-leaf="true" data-offset-key="1746:0" data-first-offset="true"><span data-slate-string="true">动态规划（下）：动态规划之背包问题与优化</span></span></span></a></h2> 
<div class="se-1ccde8a0 " data-slate-type="paragraph" data-slate-object="block" data-key="1747"> 
<span data-slate-object="text" data-key="1748"><span data-slate-leaf="true" data-offset-key="1748:0" 
data-first-offset="true"><span data-slate-string="true">在这一节课，我们认识了背包类动态规划算法，讲了 0/1 背包问题，以及多重背包问题转 
0/1 背包问题的转换技巧。其中我们提到了用二进制拆分法对多重背包拆分过程进行优化，这样不但可以大大减少拆分出来的物品数量，并且还不影响转换成等价的 0/1 背包问题。</span></span></span> 
</div> <div class="se-7161587c " data-slate-type="paragraph" data-slate-object="block" data-key="1749"> 
<span data-slate-object="text" data-key="1750"><span data-slate-leaf="true" data-offset-key="1750:0" 
data-first-offset="true"><span data-slate-string="true">关于动态规划状态定义的相关理解，这里给用户 @徐洲更 点赞，大家可以在</span></span></span><a 
data-slate-type="link" data-slate-object="inline" data-key="1751" class="se-4be0ddc9 se-76b96135"><span 
data-slate-object="text" data-key="1752"><span data-slate-leaf="true" data-offset-key="1752:0" 
data-first-offset="true"><span data-slate-string="true">《动态规划（上）：只需四步，搞定动态规划算法设计》</span></span></span></a><span 
data-slate-object="text" data-key="1753"><span data-slate-leaf="true" data-offset-key="1753:0" 
data-first-offset="true"><span data-slate-string="true">当中看到他的留言。</span></span></span> </div> 
<div class="se-6b845c94 " data-slate-type="paragraph" data-slate-object="block" data-key="1754"> 
<span data-slate-object="text" data-key="1755"><span data-slate-leaf="true" data-offset-key="1755:0" 
data-first-offset="true"><span data-slate-string="true">下面呢，我就给出多重背包转 0/1 背包的示例代码：</span></span></span> 
</div> <div class="se-8b064b39 se-c2c69d53" data-slate-type="pre" data-slate-object="block" 
data-key="1756" data-code-language="cpp"> <div class="se-0593101e se-07366cc5"> <span></span> 
</div> <div class="se-764b9323"> <div class="se-867b7331 se-17c7b462" data-code-line-number="1"></div> 
<div class="se-867b7331 se-17c7b462" data-code-line-number="2"></div> <div class="se-867b7331 
se-17c7b462" data-code-line-number="3"></div> <div class="se-867b7331 se-17c7b462" data-code-line-number="4"></div> 
<div class="se-867b7331 se-17c7b462" data-code-line-number="5"></div> <div class="se-867b7331 
se-17c7b462" data-code-line-number="6"></div> <div class="se-867b7331 se-17c7b462" data-code-line-number="7"></div> 
<div class="se-867b7331 se-17c7b462" data-code-line-number="8"></div> <div class="se-867b7331 
se-17c7b462" data-code-line-number="9"></div> <div class="se-867b7331 se-17c7b462" data-code-line-number="10"></div> 
<div class="se-867b7331 se-17c7b462" data-code-line-number="11"></div> <div class="se-867b7331 
se-17c7b462" data-code-line-number="12"></div> <div class="se-867b7331 se-17c7b462" data-code-line-number="13"></div> 
<div class="se-867b7331 se-17c7b462" data-code-line-number="14"></div> <div class="se-867b7331 
se-17c7b462" data-code-line-number="15"></div> <div class="se-867b7331 se-17c7b462" data-code-line-number="16"></div> 
<div class="se-867b7331 se-17c7b462" data-code-line-number="17"></div> <div class="se-867b7331 
se-17c7b462" data-code-line-number="18"></div> <div class="se-867b7331 se-17c7b462" data-code-line-number="19"></div> 
<div class="se-867b7331 se-17c7b462" data-code-line-number="20"></div> <div class="se-867b7331 
se-17c7b462" data-code-line-number="21"></div> <div class="se-867b7331 se-17c7b462" data-code-line-number="22"></div> 
<div class="se-867b7331 se-17c7b462" data-code-line-number="23"></div> <div class="se-867b7331 
se-17c7b462" data-code-line-number="24"></div> <div class="se-867b7331 se-17c7b462" data-code-line-number="25"></div> 
<div class="se-867b7331 se-17c7b462" data-code-line-number="26"></div> <div class="se-867b7331 
se-17c7b462" data-code-line-number="27"></div> <div class="se-867b7331 se-17c7b462" data-code-line-number="28"></div> 
<div class="se-867b7331 se-17c7b462" data-code-line-number="29"></div> <div class="se-867b7331 
se-17c7b462" data-code-line-number="30"></div> <div class="se-867b7331 se-17c7b462" data-code-line-number="31"></div> 
<div class="se-867b7331 se-17c7b462" data-code-line-number="32"></div> <div class="se-867b7331 
se-17c7b462" data-code-line-number="33"></div> <div class="se-867b7331 se-17c7b462" data-code-line-number="34"></div> 
<div class="se-867b7331 se-17c7b462" data-code-line-number="35"></div> </div> <div class="se-51fc1602 
ps ps--active-x"> <div class="se-edcd0337 se-376506be" data-slate-type="code-line" data-slate-object="block" 
data-key="1757"> <span data-slate-object="text" data-key="1758"><span data-slate-leaf="true" 
data-offset-key="1758:0" data-first-offset="true"><span class=" gkhl-meta" data-slate-object="annotation" 
data-annotation-key="gkann_3250341053" data-annotation-type="annotation"><span data-slate-string="true">#define 
MAX_N 100</span></span></span></span> </div> <div class="se-edcd0337 se-376506be" data-slate-type="code-line" 
data-slate-object="block" data-key="1759"> <span data-slate-object="text" data-key="1760"><span 
data-slate-leaf="true" data-offset-key="1760:0" data-first-offset="true"><span class=" gkhl-meta" 
data-slate-object="annotation" data-annotation-key="gkann_8016769253" data-annotation-type="annotation"><span 
data-slate-string="true">#define MAX_W 10000</span></span></span></span> </div> <div class="se-edcd0337 
se-376506be" data-slate-type="code-line" data-slate-object="block" data-key="1761"> <span data-slate-object="text" 
data-key="1762"><span data-slate-leaf="true" data-offset-key="1762:0" data-first-offset="true"><span 
class=" gkhl-keyword" data-slate-object="annotation" data-annotation-key="gkann_0783203719" 
data-annotation-type="annotation"><span data-slate-string="true">int</span></span></span><span 
data-slate-leaf="true" data-offset-key="1762:1"><span data-slate-string="true"> v[MAX_N + </span></span><span 
data-slate-leaf="true" data-offset-key="1762:2"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_5188715729" data-annotation-type="annotation"><span data-slate-string="true">5</span></span></span><span 
data-slate-leaf="true" data-offset-key="1762:3"><span data-slate-string="true">], w[MAX_N + 
</span></span><span data-slate-leaf="true" data-offset-key="1762:4"><span class=" gkhl-number" 
data-slate-object="annotation" data-annotation-key="gkann_4588842405" data-annotation-type="annotation"><span 
data-slate-string="true">5</span></span></span><span data-slate-leaf="true" data-offset-key="1762:5"><span 
data-slate-string="true">], c[MAX_N + </span></span><span data-slate-leaf="true" data-offset-key="1762:6"><span 
class=" gkhl-number" data-slate-object="annotation" data-annotation-key="gkann_5266073135" 
data-annotation-type="annotation"><span data-slate-string="true">5</span></span></span><span 
data-slate-leaf="true" data-offset-key="1762:7"><span data-slate-string="true">];</span></span></span> 
</div> <div class="se-edcd0337 se-376506be" data-slate-type="code-line" data-slate-object="block" 
data-key="1763"> <span data-slate-object="text" data-key="1764"><span data-slate-leaf="true" 
data-offset-key="1764:0" data-first-offset="true"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_5171996896" data-annotation-type="annotation"><span data-slate-string="true">int</span></span></span><span 
data-slate-leaf="true" data-offset-key="1764:1"><span data-slate-string="true"> v1[MAX_N + 
</span></span><span data-slate-leaf="true" data-offset-key="1764:2"><span class=" gkhl-number" 
data-slate-object="annotation" data-annotation-key="gkann_1336903449" data-annotation-type="annotation"><span 
data-slate-string="true">5</span></span></span><span data-slate-leaf="true" data-offset-key="1764:3"><span 
data-slate-string="true">], w1[MAX_N + </span></span><span data-slate-leaf="true" data-offset-key="1764:4"><span 
class=" gkhl-number" data-slate-object="annotation" data-annotation-key="gkann_4068534686" 
data-annotation-type="annotation"><span data-slate-string="true">5</span></span></span><span 
data-slate-leaf="true" data-offset-key="1764:5"><span data-slate-string="true">], n2 = </span></span><span 
data-slate-leaf="true" data-offset-key="1764:6"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_1793659809" data-annotation-type="annotation"><span data-slate-string="true">0</span></span></span><span 
data-slate-leaf="true" data-offset-key="1764:7"><span data-slate-string="true">;</span></span></span> 
</div> <div class="se-edcd0337 se-376506be" data-slate-type="code-line" data-slate-object="block" 
data-key="1765"> <span data-slate-object="text" data-key="1766"><span data-slate-leaf="true" 
data-offset-key="1766:0" data-first-offset="true"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_5299753292" data-annotation-type="annotation"><span data-slate-string="true">int</span></span></span><span 
data-slate-leaf="true" data-offset-key="1766:1"><span data-slate-string="true"> dp[MAX_N + 
</span></span><span data-slate-leaf="true" data-offset-key="1766:2"><span class=" gkhl-number" 
data-slate-object="annotation" data-annotation-key="gkann_6115026169" data-annotation-type="annotation"><span 
data-slate-string="true">5</span></span></span><span data-slate-leaf="true" data-offset-key="1766:3"><span 
data-slate-string="true">][MAX_W + </span></span><span data-slate-leaf="true" data-offset-key="1766:4"><span 
class=" gkhl-number" data-slate-object="annotation" data-annotation-key="gkann_8158918344" 
data-annotation-type="annotation"><span data-slate-string="true">5</span></span></span><span 
data-slate-leaf="true" data-offset-key="1766:5"><span data-slate-string="true">];</span></span></span> 
</div> <div class="se-edcd0337 se-376506be" data-slate-type="code-line" data-slate-object="block" 
data-key="1767"> <span data-slate-object="text" data-key="1768"></span> </div> <div class="se-edcd0337 
se-376506be" data-slate-type="code-line" data-slate-object="block" data-key="1769"> <span data-slate-object="text" 
data-key="1770"></span> </div> <div class="se-edcd0337 se-376506be" data-slate-type="code-line" 
data-slate-object="block" data-key="1771"> <span data-slate-object="text" data-key="1772"><span 
data-slate-leaf="true" data-offset-key="1772:0" data-first-offset="true"><span class=" gkhl-comment" 
data-slate-object="annotation" data-annotation-key="gkann_5298490993" data-annotation-type="annotation"><span 
data-slate-string="true">// 添加一个0/1背包中的物品</span></span></span></span> </div> <div class="se-edcd0337 
se-376506be" data-slate-type="code-line" data-slate-object="block" data-key="1773"> <span data-slate-object="text" 
data-key="1774"><span data-slate-leaf="true" data-offset-key="1774:0" data-first-offset="true"><span 
class=" gkhl-keyword" data-slate-object="annotation" data-annotation-key="gkann_6803616210" 
data-annotation-type="annotation"><span class=" gkhl-function" data-slate-object="annotation" 
data-annotation-key="gkann_2833566149" data-annotation-type="annotation"><span data-slate-string="true">void</span></span></span></span><span 
data-slate-leaf="true" data-offset-key="1774:1"><span class=" gkhl-function" data-slate-object="annotation" 
data-annotation-key="gkann_2833566149" data-annotation-type="annotation"><span data-slate-string="true"> 
</span></span></span><span data-slate-leaf="true" data-offset-key="1774:2"><span class=" gkhl-function" 
data-slate-object="annotation" data-annotation-key="gkann_2833566149" data-annotation-type="annotation"><span 
class=" gkhl-title" data-slate-object="annotation" data-annotation-key="gkann_8618553293" data-annotation-type="annotation"><span 
data-slate-string="true">add_item</span></span></span></span><span data-slate-leaf="true" data-offset-key="1774:3"><span 
class=" gkhl-params" data-slate-object="annotation" data-annotation-key="gkann_5305376516" 
data-annotation-type="annotation"><span class=" gkhl-function" data-slate-object="annotation" 
data-annotation-key="gkann_2833566149" data-annotation-type="annotation"><span data-slate-string="true">(int 
v_value, int w_value)</span></span></span></span><span data-slate-leaf="true" data-offset-key="1774:4"><span 
class=" gkhl-function" data-slate-object="annotation" data-annotation-key="gkann_2833566149" 
data-annotation-type="annotation"><span data-slate-string="true"> </span></span></span><span 
data-slate-leaf="true" data-offset-key="1774:5"><span data-slate-string="true">{</span></span></span> 
</div> <div class="se-edcd0337 se-376506be" data-slate-type="code-line" data-slate-object="block" 
data-key="1775"> <span data-slate-object="text" data-key="1776"><span data-slate-leaf="true" 
data-offset-key="1776:0" data-first-offset="true"><span data-slate-string="true"> n2++;</span></span></span> 
</div> <div class="se-edcd0337 se-376506be" data-slate-type="code-line" data-slate-object="block" 
data-key="1777"> <span data-slate-object="text" data-key="1778"><span data-slate-leaf="true" 
data-offset-key="1778:0" data-first-offset="true"><span data-slate-string="true"> v1[n2] = 
v_value;</span></span></span> </div> <div class="se-edcd0337 se-376506be" data-slate-type="code-line" 
data-slate-object="block" data-key="1779"> <span data-slate-object="text" data-key="1780"><span 
data-slate-leaf="true" data-offset-key="1780:0" data-first-offset="true"><span data-slate-string="true"> 
w1[n2] = w_value;</span></span></span> </div> <div class="se-edcd0337 se-376506be" data-slate-type="code-line" 
data-slate-object="block" data-key="1781"> <span data-slate-object="text" data-key="1782"><span 
data-slate-leaf="true" data-offset-key="1782:0" data-first-offset="true"><span data-slate-string="true"> 
</span></span><span data-slate-leaf="true" data-offset-key="1782:1"><span class=" gkhl-keyword" 
data-slate-object="annotation" data-annotation-key="gkann_0249883677" data-annotation-type="annotation"><span 
data-slate-string="true">return</span></span></span><span data-slate-leaf="true" data-offset-key="1782:2"><span 
data-slate-string="true"> ;</span></span></span> </div> <div class="se-edcd0337 se-376506be" 
data-slate-type="code-line" data-slate-object="block" data-key="1783"> <span data-slate-object="text" 
data-key="1784"><span data-slate-leaf="true" data-offset-key="1784:0" data-first-offset="true"><span 
data-slate-string="true">}</span></span></span> </div> <div class="se-edcd0337 se-376506be" 
data-slate-type="code-line" data-slate-object="block" data-key="1785"> <span data-slate-object="text" 
data-key="1786"></span> </div> <div class="se-edcd0337 se-376506be" data-slate-type="code-line" 
data-slate-object="block" data-key="1787"> <span data-slate-object="text" data-key="1788"><span 
data-slate-leaf="true" data-offset-key="1788:0" data-first-offset="true"><span class=" gkhl-keyword" 
data-slate-object="annotation" data-annotation-key="gkann_4318174135" data-annotation-type="annotation"><span 
class=" gkhl-function" data-slate-object="annotation" data-annotation-key="gkann_4598005987" 
data-annotation-type="annotation"><span data-slate-string="true">int</span></span></span></span><span 
data-slate-leaf="true" data-offset-key="1788:1"><span class=" gkhl-function" data-slate-object="annotation" 
data-annotation-key="gkann_4598005987" data-annotation-type="annotation"><span data-slate-string="true"> 
</span></span></span><span data-slate-leaf="true" data-offset-key="1788:2"><span class=" gkhl-function" 
data-slate-object="annotation" data-annotation-key="gkann_4598005987" data-annotation-type="annotation"><span 
class=" gkhl-title" data-slate-object="annotation" data-annotation-key="gkann_9798496972" data-annotation-type="annotation"><span 
data-slate-string="true">get_dp</span></span></span></span><span data-slate-leaf="true" data-offset-key="1788:3"><span 
class=" gkhl-params" data-slate-object="annotation" data-annotation-key="gkann_3109694776" 
data-annotation-type="annotation"><span class=" gkhl-function" data-slate-object="annotation" 
data-annotation-key="gkann_4598005987" data-annotation-type="annotation"><span data-slate-string="true">(int 
n, int W)</span></span></span></span><span data-slate-leaf="true" data-offset-key="1788:4"><span 
class=" gkhl-function" data-slate-object="annotation" data-annotation-key="gkann_4598005987" 
data-annotation-type="annotation"><span data-slate-string="true"> </span></span></span><span 
data-slate-leaf="true" data-offset-key="1788:5"><span data-slate-string="true">{</span></span></span> 
</div> <div class="se-edcd0337 se-376506be" data-slate-type="code-line" data-slate-object="block" 
data-key="1789"> <span data-slate-object="text" data-key="1790"><span data-slate-leaf="true" 
data-offset-key="1790:0" data-first-offset="true"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="1790:1"><span class=" gkhl-comment" data-slate-object="annotation" 
data-annotation-key="gkann_7830392600" data-annotation-type="annotation"><span data-slate-string="true">// 
对多重背包中的每一种物品进行拆分</span></span></span></span> </div> <div class="se-edcd0337 se-376506be" data-slate-type="code-line" 
data-slate-object="block" data-key="1791"> <span data-slate-object="text" data-key="1792"><span 
data-slate-leaf="true" data-offset-key="1792:0" data-first-offset="true"><span data-slate-string="true"> 
</span></span><span data-slate-leaf="true" data-offset-key="1792:1"><span class=" gkhl-keyword" 
data-slate-object="annotation" data-annotation-key="gkann_0168306194" data-annotation-type="annotation"><span 
data-slate-string="true">for</span></span></span><span data-slate-leaf="true" data-offset-key="1792:2"><span 
data-slate-string="true"> (</span></span><span data-slate-leaf="true" data-offset-key="1792:3"><span 
class=" gkhl-keyword" data-slate-object="annotation" data-annotation-key="gkann_6580162749" 
data-annotation-type="annotation"><span data-slate-string="true">int</span></span></span><span 
data-slate-leaf="true" data-offset-key="1792:4"><span data-slate-string="true"> i = </span></span><span 
data-slate-leaf="true" data-offset-key="1792:5"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_7677725166" data-annotation-type="annotation"><span data-slate-string="true">1</span></span></span><span 
data-slate-leaf="true" data-offset-key="1792:6"><span data-slate-string="true">; i &lt;= n; 
i++) {</span></span></span> </div> <div class="se-edcd0337 se-376506be" data-slate-type="code-line" 
data-slate-object="block" data-key="1793"> <span data-slate-object="text" data-key="1794"><span 
data-slate-leaf="true" data-offset-key="1794:0" data-first-offset="true"><span data-slate-string="true"> 
</span></span><span data-slate-leaf="true" data-offset-key="1794:1"><span class=" gkhl-comment" 
data-slate-object="annotation" data-annotation-key="gkann_5548056433" data-annotation-type="annotation"><span 
data-slate-string="true">// 采用二进制拆分法</span></span></span></span> </div> <div class="se-edcd0337 
se-376506be" data-slate-type="code-line" data-slate-object="block" data-key="1795"> <span data-slate-object="text" 
data-key="1796"><span data-slate-leaf="true" data-offset-key="1796:0" data-first-offset="true"><span 
data-slate-string="true"> </span></span><span data-slate-leaf="true" data-offset-key="1796:1"><span 
class=" gkhl-keyword" data-slate-object="annotation" data-annotation-key="gkann_2806373225" 
data-annotation-type="annotation"><span data-slate-string="true">for</span></span></span><span 
data-slate-leaf="true" data-offset-key="1796:2"><span data-slate-string="true"> (</span></span><span 
data-slate-leaf="true" data-offset-key="1796:3"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_5363181592" data-annotation-type="annotation"><span data-slate-string="true">int</span></span></span><span 
data-slate-leaf="true" data-offset-key="1796:4"><span data-slate-string="true"> k = </span></span><span 
data-slate-leaf="true" data-offset-key="1796:5"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_8756670193" data-annotation-type="annotation"><span data-slate-string="true">1</span></span></span><span 
data-slate-leaf="true" data-offset-key="1796:6"><span data-slate-string="true">; k &lt;= c[i]; 
c[i] -= k, k &lt;&lt;= </span></span><span data-slate-leaf="true" data-offset-key="1796:7"><span 
class=" gkhl-number" data-slate-object="annotation" data-annotation-key="gkann_6451653475" 
data-annotation-type="annotation"><span data-slate-string="true">1</span></span></span><span 
data-slate-leaf="true" data-offset-key="1796:8"><span data-slate-string="true">) {</span></span></span> 
</div> <div class="se-edcd0337 se-376506be" data-slate-type="code-line" data-slate-object="block" 
data-key="1797"> <span data-slate-object="text" data-key="1798"><span data-slate-leaf="true" 
data-offset-key="1798:0" data-first-offset="true"><span data-slate-string="true"> add_item(k 
* v[i], k * w[i]);</span></span></span> </div> <div class="se-edcd0337 se-376506be" data-slate-type="code-line" 
data-slate-object="block" data-key="1799"> <span data-slate-object="text" data-key="1800"><span 
data-slate-leaf="true" data-offset-key="1800:0" data-first-offset="true"><span data-slate-string="true"> 
}</span></span></span> </div> <div class="se-edcd0337 se-376506be" data-slate-type="code-line" 
data-slate-object="block" data-key="1801"> <span data-slate-object="text" data-key="1802"><span 
data-slate-leaf="true" data-offset-key="1802:0" data-first-offset="true"><span data-slate-string="true"> 
</span></span><span data-slate-leaf="true" data-offset-key="1802:1"><span class=" gkhl-keyword" 
data-slate-object="annotation" data-annotation-key="gkann_6679053753" data-annotation-type="annotation"><span 
data-slate-string="true">if</span></span></span><span data-slate-leaf="true" data-offset-key="1802:2"><span 
data-slate-string="true"> (c[i]) add_item(c[i] * v[i], c[i] * w[i]);</span></span></span> </div> 
<div class="se-edcd0337 se-376506be" data-slate-type="code-line" data-slate-object="block" 
data-key="1803"> <span data-slate-object="text" data-key="1804"><span data-slate-leaf="true" 
data-offset-key="1804:0" data-first-offset="true"><span data-slate-string="true"> }</span></span></span> 
</div> <div class="se-edcd0337 se-376506be" data-slate-type="code-line" data-slate-object="block" 
data-key="1805"> <span data-slate-object="text" data-key="1806"><span data-slate-leaf="true" 
data-offset-key="1806:0" data-first-offset="true"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="1806:1"><span class=" gkhl-comment" data-slate-object="annotation" 
data-annotation-key="gkann_6452580241" data-annotation-type="annotation"><span data-slate-string="true">// 
按照0/1背包的方式进行求解</span></span></span></span> </div> <div class="se-edcd0337 se-376506be" data-slate-type="code-line" 
data-slate-object="block" data-key="1807"> <span data-slate-object="text" data-key="1808"><span 
data-slate-leaf="true" data-offset-key="1808:0" data-first-offset="true"><span data-slate-string="true"> 
</span></span><span data-slate-leaf="true" data-offset-key="1808:1"><span class=" gkhl-keyword" 
data-slate-object="annotation" data-annotation-key="gkann_5811993384" data-annotation-type="annotation"><span 
data-slate-string="true">for</span></span></span><span data-slate-leaf="true" data-offset-key="1808:2"><span 
data-slate-string="true"> (</span></span><span data-slate-leaf="true" data-offset-key="1808:3"><span 
class=" gkhl-keyword" data-slate-object="annotation" data-annotation-key="gkann_3264156124" 
data-annotation-type="annotation"><span data-slate-string="true">int</span></span></span><span 
data-slate-leaf="true" data-offset-key="1808:4"><span data-slate-string="true"> i = </span></span><span 
data-slate-leaf="true" data-offset-key="1808:5"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_6719352839" data-annotation-type="annotation"><span data-slate-string="true">1</span></span></span><span 
data-slate-leaf="true" data-offset-key="1808:6"><span data-slate-string="true">; i &lt;= n2; 
i++) {</span></span></span> </div> <div class="se-edcd0337 se-376506be" data-slate-type="code-line" 
data-slate-object="block" data-key="1809"> <span data-slate-object="text" data-key="1810"><span 
data-slate-leaf="true" data-offset-key="1810:0" data-first-offset="true"><span data-slate-string="true"> 
</span></span><span data-slate-leaf="true" data-offset-key="1810:1"><span class=" gkhl-keyword" 
data-slate-object="annotation" data-annotation-key="gkann_6969964289" data-annotation-type="annotation"><span 
data-slate-string="true">for</span></span></span><span data-slate-leaf="true" data-offset-key="1810:2"><span 
data-slate-string="true"> (</span></span><span data-slate-leaf="true" data-offset-key="1810:3"><span 
class=" gkhl-keyword" data-slate-object="annotation" data-annotation-key="gkann_6568961888" 
data-annotation-type="annotation"><span data-slate-string="true">int</span></span></span><span 
data-slate-leaf="true" data-offset-key="1810:4"><span data-slate-string="true"> j = </span></span><span 
data-slate-leaf="true" data-offset-key="1810:5"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_3860136291" data-annotation-type="annotation"><span data-slate-string="true">1</span></span></span><span 
data-slate-leaf="true" data-offset-key="1810:6"><span data-slate-string="true">; j &lt;= W; 
j++) {</span></span></span> </div> <div class="se-edcd0337 se-376506be" data-slate-type="code-line" 
data-slate-object="block" data-key="1811"> <span data-slate-object="text" data-key="1812"><span 
data-slate-leaf="true" data-offset-key="1812:0" data-first-offset="true"><span data-slate-string="true"> 
dp[i][j] = dp[i - </span></span><span data-slate-leaf="true" data-offset-key="1812:1"><span 
class=" gkhl-number" data-slate-object="annotation" data-annotation-key="gkann_5755099342" 
data-annotation-type="annotation"><span data-slate-string="true">1</span></span></span><span 
data-slate-leaf="true" data-offset-key="1812:2"><span data-slate-string="true">][j]; </span></span></span> 
</div> <div class="se-edcd0337 se-376506be" data-slate-type="code-line" data-slate-object="block" 
data-key="1813"> <span data-slate-object="text" data-key="1814"><span data-slate-leaf="true" 
data-offset-key="1814:0" data-first-offset="true"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="1814:1"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_3825586642" data-annotation-type="annotation"><span data-slate-string="true">if</span></span></span><span 
data-slate-leaf="true" data-offset-key="1814:2"><span data-slate-string="true"> (j &lt; w1[i]) 
</span></span><span data-slate-leaf="true" data-offset-key="1814:3"><span class=" gkhl-keyword" 
data-slate-object="annotation" data-annotation-key="gkann_5587184712" data-annotation-type="annotation"><span 
data-slate-string="true">continue</span></span></span><span data-slate-leaf="true" data-offset-key="1814:4"><span 
data-slate-string="true">;</span></span></span> </div> <div class="se-edcd0337 se-376506be" 
data-slate-type="code-line" data-slate-object="block" data-key="1815"> <span data-slate-object="text" 
data-key="1816"><span data-slate-leaf="true" data-offset-key="1816:0" data-first-offset="true"><span 
data-slate-string="true"> </span></span><span data-slate-leaf="true" data-offset-key="1816:1"><span 
class=" gkhl-keyword" data-slate-object="annotation" data-annotation-key="gkann_7232888318" 
data-annotation-type="annotation"><span data-slate-string="true">if</span></span></span><span 
data-slate-leaf="true" data-offset-key="1816:2"><span data-slate-string="true"> (dp[i - </span></span><span 
data-slate-leaf="true" data-offset-key="1816:3"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_5401726518" data-annotation-type="annotation"><span data-slate-string="true">1</span></span></span><span 
data-slate-leaf="true" data-offset-key="1816:4"><span data-slate-string="true">][j - w1[i]] 
+ v1[i] &lt; dp[i][j]) </span></span><span data-slate-leaf="true" data-offset-key="1816:5"><span 
class=" gkhl-keyword" data-slate-object="annotation" data-annotation-key="gkann_8206874120" 
data-annotation-type="annotation"><span data-slate-string="true">continue</span></span></span><span 
data-slate-leaf="true" data-offset-key="1816:6"><span data-slate-string="true">;</span></span></span> 
</div> <div class="se-edcd0337 se-376506be" data-slate-type="code-line" data-slate-object="block" 
data-key="1817"> <span data-slate-object="text" data-key="1818"><span data-slate-leaf="true" 
data-offset-key="1818:0" data-first-offset="true"><span data-slate-string="true"> dp[i][j] 
= dp[i - </span></span><span data-slate-leaf="true" data-offset-key="1818:1"><span class=" 
gkhl-number" data-slate-object="annotation" data-annotation-key="gkann_1495465661" data-annotation-type="annotation"><span 
data-slate-string="true">1</span></span></span><span data-slate-leaf="true" data-offset-key="1818:2"><span 
data-slate-string="true">][j - w1[i]] + v1[i];</span></span></span> </div> <div class="se-edcd0337 
se-376506be" data-slate-type="code-line" data-slate-object="block" data-key="1819"> <span data-slate-object="text" 
data-key="1820"><span data-slate-leaf="true" data-offset-key="1820:0" data-first-offset="true"><span 
data-slate-string="true"> }</span></span></span> </div> <div class="se-edcd0337 se-376506be" 
data-slate-type="code-line" data-slate-object="block" data-key="1821"> <span data-slate-object="text" 
data-key="1822"><span data-slate-leaf="true" data-offset-key="1822:0" data-first-offset="true"><span 
data-slate-string="true"> }</span></span></span> </div> <div class="se-edcd0337 se-376506be" 
data-slate-type="code-line" data-slate-object="block" data-key="1823"> <span data-slate-object="text" 
data-key="1824"><span data-slate-leaf="true" data-offset-key="1824:0" data-first-offset="true"><span 
data-slate-string="true"> </span></span><span data-slate-leaf="true" data-offset-key="1824:1"><span 
class=" gkhl-keyword" data-slate-object="annotation" data-annotation-key="gkann_2909785226" 
data-annotation-type="annotation"><span data-slate-string="true">return</span></span></span><span 
data-slate-leaf="true" data-offset-key="1824:2"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="1824:3"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_7699194373" data-annotation-type="annotation"><span data-slate-string="true">0</span></span></span><span 
data-slate-leaf="true" data-offset-key="1824:4"><span data-slate-string="true">;</span></span></span> 
</div> <div class="se-edcd0337 se-376506be" data-slate-type="code-line" data-slate-object="block" 
data-key="1825"> <span data-slate-object="text" data-key="1826"><span data-slate-leaf="true" 
data-offset-key="1826:0" data-first-offset="true"><span data-slate-string="true">} </span></span></span> 
</div> <div class="ps__rail-x" style="width: 365px; left: 0px; bottom: 0px;"> <div class="ps__thumb-x" 
tabindex="0" style="left: 0px; width: 258px;"></div> </div> <div class="ps__rail-y" style="top: 
0px; right: 0px;"> <div class="ps__thumb-y" tabindex="0" style="top: 0px; height: 0px;"></div> 
</div> </div> </div> <div class="se-274acdef " data-slate-type="paragraph" data-slate-object="block" 
data-key="1827"> <span data-slate-object="text" data-key="1828"><span data-slate-leaf="true" 
data-offset-key="1828:0" data-first-offset="true"><span data-slate-string="true">代码中，v、w、c 
数组存储的是多重背包中第 i 种物品的价值、重量和数量，v1、w1 数组用来存储拆分出来的 0/1 背包中的物品价值和重量信息，get_dp 函数就是求解多重背包问题的过程。</span></span></span> 
</div> <div class="se-edbacf6f " data-slate-type="paragraph" data-slate-object="block" data-key="1829"> 
<span data-slate-object="text" data-key="1830"><span data-slate-leaf="true" data-offset-key="1830:0" 
data-first-offset="true"><span data-slate-string="true">其中，分成两步进行求解，首先对多重背包中的每种物品，按照二进制拆分法，打包拆分成 
0/1 背包中的若干个物品。拆分完成后，再按照 0/1 背包的算法流程进行求解，需要注意的是，代码中的循环变量 k，枚举的就是拆分的每一堆的物品数量，从数量 1 开始，每次扩大一倍。</span></span></span> 
</div> <div class="se-486fd73c " data-slate-type="paragraph" data-slate-object="block" data-key="1831"> 
<span data-slate-object="text" data-key="1832"><span data-slate-leaf="true" data-offset-key="1832:0" 
data-first-offset="true"><span data-slate-string="true">对于多重背包中的每种物品，经过二进制拆分以后，最后剩下的几个，要单独算作一个物品，这就是代码第 
22 行的含义。理解了二进制拆分的过程以后，后面的 0/1 背包的求解过程，就不需要我来解释了，都是老生常谈了。</span></span></span> </div> <div class="se-fd17df1d 
" data-slate-type="paragraph" data-slate-object="block" data-key="1833"> <span data-slate-object="text" 
data-key="1834"><span data-slate-leaf="true" data-offset-key="1834:0" data-first-offset="true"><span 
data-slate-string="true">好了，今天的思考题答疑就结束了，如果你还有什么不清楚，或者有更好的想法，欢迎告诉我，我们留言区见！</span></span></span> 
</div> </div>', body_summary='', bundle='book', delta=0, body_format='full_html', langcode='zh-hans', 
revision_id=765 where entity_id=765 
 {executed in 1 msec}
2020-11-24 18:47:44.290 INFO  jdbc.sqltiming Line:373 - select nodefiledd0_.nid as nid1_10_, nodefiledd0_.changed as changed2_10_, nodefiledd0_.created 
as created3_10_, nodefiledd0_.default_langcode as default_4_10_, nodefiledd0_.langcode as langcode5_10_, 
nodefiledd0_.promote as promote6_10_, nodefiledd0_.revision_translation_affected as revision7_10_, 
nodefiledd0_.status as status8_10_, nodefiledd0_.sticky as sticky9_10_, nodefiledd0_.title 
as title10_10_, nodefiledd0_.type as type11_10_, nodefiledd0_.uid as uid12_10_, nodefiledd0_.vid 
as vid13_10_ from node_field_data nodefiledd0_ where nodefiledd0_.nid=765 
 {executed in 0 msec}
2020-11-24 18:47:44.291 INFO  jdbc.resultsettable Line:610 - 
|----|-----------|-----------|-----------------|---------|--------|------------------------------|-------|-------|----------------------|-----|----|----|
|nid |changed    |created    |default_langcode |langcode |promote |revision_translation_affected |status |sticky |title                 |type |uid |vid |
|----|-----------|-----------|-----------------|---------|--------|------------------------------|-------|-------|----------------------|-----|----|----|
|765 |1606117101 |1606117101 |1                |zh-hans  |0       |1                             |1      |0      |做好闭环（四）：二分答案算法的代码统一结构 |book |1   |765 |
|----|-----------|-----------|-----------------|---------|--------|------------------------------|-------|-------|----------------------|-----|----|----|

2020-11-24 18:47:44.291 INFO  jdbc.sqltiming Line:373 - select nodefieldr0_.nid as nid1_11_0_, nodefieldr0_.changed as changed2_11_0_, nodefieldr0_.created 
as created3_11_0_, nodefieldr0_.default_langcode as default_4_11_0_, nodefieldr0_.langcode 
as langcode5_11_0_, nodefieldr0_.promote as promote6_11_0_, nodefieldr0_.revision_translation_affected 
as revision7_11_0_, nodefieldr0_.status as status8_11_0_, nodefieldr0_.sticky as sticky9_11_0_, 
nodefieldr0_.title as title10_11_0_, nodefieldr0_.uid as uid11_11_0_, nodefieldr0_.vid as vid12_11_0_ 
from node_field_revision nodefieldr0_ where nodefieldr0_.nid=765 
 {executed in 0 msec}
2020-11-24 18:47:44.292 INFO  jdbc.resultsettable Line:610 - 
|---------|-----------|-----------|-----------------|---------|--------|------------------------------|-------|-------|----------------------|----|----|
|nid      |changed    |created    |default_langcode |langcode |promote |revision_translation_affected |status |sticky |title                 |uid |vid |
|---------|-----------|-----------|-----------------|---------|--------|------------------------------|-------|-------|----------------------|----|----|
|[unread] |1606117101 |1606117101 |1                |zh-hans  |0       |1                             |1      |0      |做好闭环（四）：二分答案算法的代码统一结构 |1   |765 |
|---------|-----------|-----------|-----------------|---------|--------|------------------------------|-------|-------|----------------------|----|----|

2020-11-24 18:47:44.294 INFO  jdbc.sqltiming Line:373 - update node_field_data set changed=1606214864, created=1606214864, default_langcode=1, langcode='zh-hans', 
promote=0, revision_translation_affected=1, status=1, sticky=0, title='做好闭环（四）：二分答案算法的代码统一结构', 
type='book', uid=1, vid=765 where nid=765 
 {executed in 1 msec}
2020-11-24 18:47:44.294 INFO  jdbc.sqltiming Line:373 - update node_field_revision set changed=1606214864, created=1606214864, default_langcode=1, 
langcode='zh-hans', promote=0, revision_translation_affected=1, status=1, sticky=0, title='做好闭环（四）：二分答案算法的代码统一结构', 
uid=1, vid=765 where nid=765 
 {executed in 0 msec}
2020-11-24 18:47:44.299 INFO  jdbc.sqltiming Line:373 - select bookfieldm0_.entity_id as entity_i1_8_, bookfieldm0_.bundle as bundle2_8_, bookfieldm0_.delta 
as delta3_8_, bookfieldm0_.langcode as langcode4_8_, bookfieldm0_.field_media_value as field_me5_8_, 
bookfieldm0_.revision_id as revision6_8_ from node__field_media bookfieldm0_ where bookfieldm0_.entity_id=765 
 {executed in 0 msec}
2020-11-24 18:47:44.299 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------------|------------|
|entity_id |bundle |delta |langcode |field_media_value |revision_id |
|----------|-------|------|---------|------------------|------------|
|765       |book   |0     |zh-hans  |                  |765         |
|----------|-------|------|---------|------------------|------------|

2020-11-24 18:47:44.301 INFO  jdbc.sqltiming Line:373 - select nodefieldm0_.entity_id as entity_i1_17_0_, nodefieldm0_.bundle as bundle2_17_0_, nodefieldm0_.delta 
as delta3_17_0_, nodefieldm0_.langcode as langcode4_17_0_, nodefieldm0_.field_media_value as 
field_me5_17_0_, nodefieldm0_.revision_id as revision6_17_0_ from node_revision__field_media 
nodefieldm0_ where nodefieldm0_.entity_id=765 
 {executed in 0 msec}
2020-11-24 18:47:44.301 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------------|------------|
|entity_id |bundle |delta |langcode |field_media_value |revision_id |
|----------|-------|------|---------|------------------|------------|
|[unread]  |book   |0     |zh-hans  |                  |765         |
|----------|-------|------|---------|------------------|------------|

2020-11-24 18:47:44.303 INFO  jdbc.sqltiming Line:373 - select bookfieldc0_.entity_id as entity_i1_5_, bookfieldc0_.bundle as bundle2_5_, bookfieldc0_.field_comment_value 
as field_co3_5_, bookfieldc0_.delta as delta4_5_, bookfieldc0_.field_comment_format as field_co5_5_, 
bookfieldc0_.langcode as langcode6_5_, bookfieldc0_.revision_id as revision7_5_ from node__field_comment 
bookfieldc0_ where bookfieldc0_.entity_id=765 
 {executed in 0 msec}
2020-11-24 18:47:44.303 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|--------------------|------|---------------------|---------|------------|
|entity_id |bundle |field_comment_value |delta |field_comment_format |langcode |revision_id |
|----------|-------|--------------------|------|---------------------|---------|------------|
|765       |book   |                    |0     |full_html            |zh-hans  |765         |
|----------|-------|--------------------|------|---------------------|---------|------------|

2020-11-24 18:47:44.305 INFO  jdbc.sqltiming Line:373 - select nodefieldc0_.entity_id as entity_i1_14_0_, nodefieldc0_.bundle as bundle2_14_0_, nodefieldc0_.field_comment_value 
as field_co3_14_0_, nodefieldc0_.delta as delta4_14_0_, nodefieldc0_.field_comment_format as 
field_co5_14_0_, nodefieldc0_.langcode as langcode6_14_0_, nodefieldc0_.revision_id as revision7_14_0_ 
from node_revision__field_comment nodefieldc0_ where nodefieldc0_.entity_id=765 
 {executed in 0 msec}
2020-11-24 18:47:44.306 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|--------------------|------|---------------------|---------|------------|
|entity_id |bundle |field_comment_value |delta |field_comment_format |langcode |revision_id |
|----------|-------|--------------------|------|---------------------|---------|------------|
|[unread]  |book   |                    |0     |full_html            |zh-hans  |765         |
|----------|-------|--------------------|------|---------------------|---------|------------|

2020-11-24 18:47:44.308 INFO  jdbc.sqltiming Line:373 - select bookfieldt0_.entity_id as entity_i1_9_, bookfieldt0_.bundle as bundle2_9_, bookfieldt0_.delta 
as delta3_9_, bookfieldt0_.langcode as langcode4_9_, bookfieldt0_.revision_id as revision5_9_, 
bookfieldt0_.field_thumb_value as field_th6_9_ from node__field_thumb bookfieldt0_ where bookfieldt0_.entity_id=765 
 {executed in 0 msec}
2020-11-24 18:47:44.308 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------|------------------|
|entity_id |bundle |delta |langcode |revision_id |field_thumb_value |
|----------|-------|------|---------|------------|------------------|
|765       |book   |0     |zh-hans  |765         |                  |
|----------|-------|------|---------|------------|------------------|

2020-11-24 18:47:44.310 INFO  jdbc.sqltiming Line:373 - update node__field_thumb set bundle='book', delta=0, langcode='zh-hans', revision_id=765, field_thumb_value='https://static001.geekbang.org/resource/image/f6/cf/f6f11d975bdc331f9a57dc4f70ce5ccf.jpg' 
where entity_id=765 
 {executed in 0 msec}
2020-11-24 18:47:44.314 INFO  jdbc.sqltiming Line:373 - select nodefieldt0_.entity_id as entity_i1_18_0_, nodefieldt0_.bundle as bundle2_18_0_, nodefieldt0_.delta 
as delta3_18_0_, nodefieldt0_.langcode as langcode4_18_0_, nodefieldt0_.revision_id as revision5_18_0_, 
nodefieldt0_.field_thumb_value as field_th6_18_0_ from node_revision__field_thumb nodefieldt0_ 
where nodefieldt0_.entity_id=765 
 {executed in 0 msec}
2020-11-24 18:47:44.315 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------|------------------|
|entity_id |bundle |delta |langcode |revision_id |field_thumb_value |
|----------|-------|------|---------|------------|------------------|
|[unread]  |book   |0     |zh-hans  |765         |                  |
|----------|-------|------|---------|------------|------------------|

2020-11-24 18:47:44.317 INFO  jdbc.sqltiming Line:373 - update node_revision__field_thumb set bundle='book', delta=0, langcode='zh-hans', revision_id=765, 
field_thumb_value='https://static001.geekbang.org/resource/image/f6/cf/f6f11d975bdc331f9a57dc4f70ce5ccf.jpg' 
where entity_id=765 
 {executed in 1 msec}
2020-11-24 18:47:44.320 INFO  jdbc.sqltiming Line:373 - select bookfieldf0_.entity_id as entity_i1_6_0_, bookfieldf0_.bundle as bundle2_6_0_, bookfieldf0_.delta 
as delta3_6_0_, bookfieldf0_.field_fenlei_target_id as field_fe4_6_0_, bookfieldf0_.langcode 
as langcode5_6_0_, bookfieldf0_.revision_id as revision6_6_0_ from node__field_fenlei bookfieldf0_ 
where bookfieldf0_.entity_id=765 
 {executed in 0 msec}
2020-11-24 18:47:44.321 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------------|---------|------------|
|entity_id |bundle |delta |field_fenlei_target_id |langcode |revision_id |
|----------|-------|------|-----------------------|---------|------------|
|[unread]  |book   |0     |1                      |zh-hans  |765         |
|----------|-------|------|-----------------------|---------|------------|

2020-11-24 18:47:44.323 INFO  jdbc.sqltiming Line:373 - select nodefieldf0_.entity_id as entity_i1_15_0_, nodefieldf0_.bundle as bundle2_15_0_, nodefieldf0_.delta 
as delta3_15_0_, nodefieldf0_.field_fenlei_target_id as field_fe4_15_0_, nodefieldf0_.langcode 
as langcode5_15_0_, nodefieldf0_.revision_id as revision6_15_0_ from node_revision__field_fenlei 
nodefieldf0_ where nodefieldf0_.entity_id=765 
 {executed in 0 msec}
2020-11-24 18:47:44.324 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------------|---------|------------|
|entity_id |bundle |delta |field_fenlei_target_id |langcode |revision_id |
|----------|-------|------|-----------------------|---------|------------|
|[unread]  |book   |0     |1                      |zh-hans  |765         |
|----------|-------|------|-----------------------|---------|------------|

2020-11-24 18:47:44.326 INFO  jdbc.sqltiming Line:373 - select bookchecke0_.item_id as item_id1_2_, bookchecke0_.fsid as fsid2_2_, bookchecke0_.got 
as got3_2_, bookchecke0_.name as name4_2_, bookchecke0_.parse_fail as parse_fa5_2_, bookchecke0_.parsed 
as parsed6_2_, bookchecke0_.path as path7_2_, bookchecke0_.title as title8_2_, bookchecke0_.vid 
as vid9_2_ from book_check bookchecke0_ where bookchecke0_.fsid='691686519953889' and bookchecke0_.name='net_content' 
 {executed in 1 msec}
2020-11-24 18:47:44.326 INFO  jdbc.resultsettable Line:610 - 
|--------|---------|---------|---------|-----------|---------|---------|---------|---------|
|item_id |fsid     |got      |name     |parse_fail |parsed   |path     |title    |vid      |
|--------|---------|---------|---------|-----------|---------|---------|---------|---------|
|766     |[unread] |[unread] |[unread] |[unread]   |[unread] |[unread] |[unread] |[unread] |
|--------|---------|---------|---------|-----------|---------|---------|---------|---------|

2020-11-24 18:51:17.701 INFO  jdbc.sqltiming Line:373 - update book_check set fsid='691686519953889', got=1, name='net_content', parse_fail='comment_', 
parsed=0, path='109-人人都能学会的编程入门课/05丨综合项目篇 (5讲)/26丨牛刀小试（上）：实现测试框架前的基础准备.html', title='26丨牛刀小试（上）：实现测试框架前的基础准备', 
vid=766 where item_id=766 
 {executed in 0 msec}
2020-11-24 18:51:17.710 INFO  jdbc.sqltiming Line:373 - select nodebodyen0_.entity_id as entity_i1_4_, nodebodyen0_.body_value as body_val2_4_, nodebodyen0_.body_summary 
as body_sum3_4_, nodebodyen0_.bundle as bundle4_4_, nodebodyen0_.delta as delta5_4_, nodebodyen0_.body_format 
as body_for6_4_, nodebodyen0_.langcode as langcode7_4_, nodebodyen0_.revision_id as revision8_4_ 
from node__body nodebodyen0_ where nodebodyen0_.entity_id=766 
 {executed in 0 msec}
2020-11-24 18:51:17.710 INFO  jdbc.resultsettable Line:610 - 
|----------|-----------|-------------|-------|------|------------|---------|------------|
|entity_id |body_value |body_summary |bundle |delta |body_format |langcode |revision_id |
|----------|-----------|-------------|-------|------|------------|---------|------------|
|766       |           |             |book   |0     |full_html   |zh-hans  |766         |
|----------|-----------|-------------|-------|------|------------|---------|------------|

2020-11-24 18:51:17.711 INFO  jdbc.sqltiming Line:373 - select nodebodyre0_.entity_id as entity_i1_13_0_, nodebodyre0_.body_value as body_val2_13_0_, 
nodebodyre0_.body_summary as body_sum3_13_0_, nodebodyre0_.bundle as bundle4_13_0_, nodebodyre0_.delta 
as delta5_13_0_, nodebodyre0_.body_format as body_for6_13_0_, nodebodyre0_.langcode as langcode7_13_0_, 
nodebodyre0_.revision_id as revision8_13_0_ from node_revision__body nodebodyre0_ where nodebodyre0_.entity_id=766 
 {executed in 0 msec}
2020-11-24 18:51:17.711 INFO  jdbc.resultsettable Line:610 - 
|----------|-----------|-------------|-------|------|------------|---------|------------|
|entity_id |body_value |body_summary |bundle |delta |body_format |langcode |revision_id |
|----------|-----------|-------------|-------|------|------------|---------|------------|
|[unread]  |           |             |book   |0     |full_html   |zh-hans  |766         |
|----------|-----------|-------------|-------|------|------------|---------|------------|

2020-11-24 18:51:17.717 INFO  jdbc.sqltiming Line:373 - update node__body set body_value='<div data-slate-editor="true" data-key="537" autocorrect="off" 
spellcheck="false" data-gramm="false" style="outline: none; white-space: pre-wrap; overflow-wrap: 
break-word;"> <div class="se-59a7fdf5 " data-slate-type="paragraph" data-slate-object="block" 
data-key="538"> <span data-slate-object="text" data-key="539"><span data-slate-leaf="true" 
data-offset-key="539:0" data-first-offset="true"><span data-slate-string="true">你好，我是胡光。经历了千难万险，我们终于来到了这次编程探险旅程的最后一个阶段“综合项目篇”。</span></span></span> 
</div> <div class="se-1e0cdf43 " data-slate-type="paragraph" data-slate-object="block" data-key="540"> 
<span data-slate-object="text" data-key="541"><span data-slate-leaf="true" data-offset-key="541:0" 
data-first-offset="true"><span data-slate-string="true">还记得开篇的时候，我跟你讲过的，要带你看看这片编程森林中最有趣的地方，不知道你感受到这份乐趣了吗？接下来的最后几节课，是我为你精心准备的，作为你编程入门学习之行的完成礼物，同时，也是对整个专栏学习内容的一个总结升华。</span></span></span> 
</div> <div class="se-a51794de " data-slate-type="paragraph" data-slate-object="block" data-key="542"> 
<span data-slate-object="text" data-key="543"><span data-slate-leaf="true" data-offset-key="543:0" 
data-first-offset="true"><span data-slate-string="true">对于本章的学习，你需要综合运用“语言基础篇”“编码能力训练篇”以及“算法数据结构篇”中所学知识，完成两个小项目，一个是“个人测试框架开发”，另一个是“自制简易计算器”。我希望通过这两个项目，打通你编程学习的“任督二脉”，让你在后续的其他编程知识学习中，可以游刃有余，乐在其中。</span></span></span> 
</div> <h2 class="se-3a85dc14" data-slate-type="heading" data-slate-object="block" data-key="544"><span 
data-slate-object="text" data-key="545"><span data-slate-leaf="true" data-offset-key="545:0" 
data-first-offset="true"><span data-slate-string="true">软件开发流程</span></span></span></h2> <div 
class="se-6400f7d2 " data-slate-type="paragraph" data-slate-object="block" data-key="546"> 
<span data-slate-object="text" data-key="547"><span data-slate-leaf="true" data-offset-key="547:0" 
data-first-offset="true"><span data-slate-string="true">在开始做项目之前呢，让我们先来了解下一般的项目开发流程。</span></span></span> 
</div> <div class="se-a790f713 " data-slate-type="paragraph" data-slate-object="block" data-key="548"> 
<span data-slate-object="text" data-key="549"><span data-slate-leaf="true" data-offset-key="549:0" 
data-first-offset="true"><span data-slate-string="true">拿传统的软件工程开发流程来说，一个软件的项目开发流程，包括：需求分析、概要设计、详细设计、编码、测试、软件交付、验收和维护。虽然包括了 
8 个阶段，可总的来说，你可以把它总结为软件开发的前中后三个部分。</span></span></span> </div> <div class="se-26a7a4d5 " data-slate-type="paragraph" 
data-slate-object="block" data-key="550"> <span data-slate-object="text" data-key="551"><span 
data-slate-leaf="true" data-offset-key="551:0" data-first-offset="true"><span data-slate-string="true">软件开发的前期，由产品经理、项目经理跟进需求，做需求分析，然后是概要设计，出一份系统的详细设计。这是项目的头部阶段，主要是从理论上验证需求可行，并且最终产出一份切实可行的软件系统的详细设计。就像我在咱们每节课中，给你留思考题，此时我的角色就是项目经理和产品经理，我首先需要分析给你留的思考题是否可做，以及跟你说明白，大致怎么做。</span></span></span> 
</div> <div class="se-12400772 " data-slate-type="paragraph" data-slate-object="block" data-key="552"> 
<span data-slate-object="text" data-key="553"><span data-slate-leaf="true" data-offset-key="553:0" 
data-first-offset="true"><span data-slate-string="true">软件开发的中期，是由技术人员负责，主要是根据系统的详细设计，进行编码和测试，把图纸上的系统实现出来。你也可以认为这是一个施工的过程。这个过程，类比到咱们的思考题上，就是你根据我的提示，具体完成每一道思考题的程序，并且对完成的程序做简单测试，以保证程序的正确性。</span></span></span> 
</div> <div class="se-e0b8703a " data-slate-type="paragraph" data-slate-object="block" data-key="554"> 
<span data-slate-object="text" data-key="555"><span data-slate-leaf="true" data-offset-key="555:0" 
data-first-offset="true"><span data-slate-string="true">软件开发的后期，由项目经理带领技术支持人员做软件交付、验收及后期维护的相关工作。这一部分，你可以理解为，是你交作业的过程，客户就是老师，你的作业要是不合格，老师就会给你退回去并提出修改建议。</span></span></span> 
</div> <div class="se-75f3aee7 " data-slate-type="paragraph" data-slate-object="block" data-key="556"> 
<span data-slate-object="text" data-key="557"><span data-slate-leaf="true" data-offset-key="557:0" 
data-first-offset="true"><span data-slate-string="true">从这个过程中，你可以看到作为技术人员，与我们相关的，就是软件开发的中期阶段，也就是编码和测试。</span></span></span> 
</div> <div class="se-1f6a8ee0 " data-slate-type="paragraph" data-slate-object="block" data-key="558"> 
<span data-slate-object="text" data-key="559"><span data-slate-leaf="true" data-offset-key="559:0" 
data-first-offset="true"><span data-slate-string="true">在之前的学习中，我们把学习任务主要放在了编码阶段，一直没有提测试阶段的事情，下面我们就来说说测试阶段主要做的事情。</span></span></span> 
</div> <h2 class="se-69caced2" data-slate-type="heading" data-slate-object="block" data-key="560"><span 
data-slate-object="text" data-key="561"><span data-slate-leaf="true" data-offset-key="561:0" 
data-first-offset="true"><span data-slate-string="true">黑盒测试与白盒测试</span></span></span></h2> 
<div class="se-55d72df6 " data-slate-type="paragraph" data-slate-object="block" data-key="562"> 
<span data-slate-object="text" data-key="563"><span data-slate-leaf="true" data-offset-key="563:0" 
data-first-offset="true"><span data-slate-string="true">关于测试阶段的测试方法，可以大致分为五种：白盒测试，黑盒测试，灰盒测试，静态测试与动态测试。</span></span></span> 
</div> <div class="se-c92ac0c1 " data-slate-type="paragraph" data-slate-object="block" data-key="564"> 
<span data-slate-object="text" data-key="565"><span data-slate-leaf="true" data-offset-key="565:0" 
data-first-offset="true"><span data-slate-string="true">看着这些测试方法的名称，你可能有点儿懵，其实你完全没有必要掌握全部的测试方法，只需要了解其中的黑盒测试和白盒测试就行，知道了这两种测试方法，就可以满足你对项目开发流程的概念认知。</span></span></span> 
</div> <div class="se-f5b3ad16 " data-slate-type="paragraph" data-slate-object="block" data-key="566"> 
<span data-slate-object="text" data-key="567"><span data-slate-leaf="true" data-offset-key="567:0" 
data-first-offset="true"><span data-slate-string="true">我们先来说说白盒测试与黑盒测试都是什么意思。首先名字里面的“盒”，其实指的就是项目中的系统，你可以理解成为是我们写的程序，它也是被测试的对象。至于这个白与黑呢，意思就是在测试过程中，是否关注代码实现逻辑。</span></span></span> 
</div> <div class="se-29cea97a " data-slate-type="paragraph" data-slate-object="block" data-key="568"> 
<span data-slate-object="text" data-key="569"><span data-slate-leaf="true" data-offset-key="569:0" 
data-first-offset="true"><span data-slate-string="true">白盒测试，就是关注代码实现逻辑，从而产生的测试行为。这种行为就像你把一个盒子打开，仔细检查其内部有无错误一样。</span></span></span> 
</div> <div class="se-d8e5bbf3 " data-slate-type="paragraph" data-slate-object="block" data-key="570"> 
<span data-slate-object="text" data-key="571"><span data-slate-leaf="true" data-offset-key="571:0" 
data-first-offset="true"><span data-slate-string="true">而不关注代码实现逻辑，而产生的测试行为，就是黑盒测试。在这个测试过程中，我们只关注系统的输出是否满足我们的要求。</span></span></span> 
</div> <div class="se-99787caf " data-slate-type="paragraph" data-slate-object="block" data-key="572"> 
<span data-slate-object="text" data-key="573"><span data-slate-leaf="true" data-offset-key="573:0" 
data-first-offset="true"><span data-slate-string="true">下面我来举几个具体的例子，你来分析一下哪一种是白盒测试，哪一种是黑盒测试。</span></span></span> 
</div> <div class="se-5898d2e6 " data-slate-type="paragraph" data-slate-object="block" data-key="574"> 
<span data-slate-object="text" data-key="575"><span data-slate-leaf="true" data-offset-key="575:0" 
data-first-offset="true"><span data-slate-string="true">场景一：你写完了一个程序，运行以后输入数据，测试程序的输出结果是否符合预期。</span></span></span> 
</div> <div class="se-b61ad761 " data-slate-type="paragraph" data-slate-object="block" data-key="576"> 
<span data-slate-object="text" data-key="577"><span data-slate-leaf="true" data-offset-key="577:0" 
data-first-offset="true"><span data-slate-string="true">场景二：当你发现，程序的结果不符合预期的时候，开始检查你程序的代码逻辑，并且针对于每一个函数功能做测试。</span></span></span> 
</div> <div class="se-aecee017 " data-slate-type="paragraph" data-slate-object="block" data-key="578"> 
<span data-slate-object="text" data-key="579"><span data-slate-leaf="true" data-offset-key="579:0" 
data-first-offset="true"><span data-slate-string="true">在场景一中，虽然程序是你写的，可你在做测试的时候，并没有关心程序内部的代码逻辑，而是关注整体程序的功能是否符合预期，所以这个属于黑盒测试。</span></span></span> 
</div> <div class="se-e01b07ba " data-slate-type="paragraph" data-slate-object="block" data-key="580"> 
<span data-slate-object="text" data-key="581"><span data-slate-leaf="true" data-offset-key="581:0" 
data-first-offset="true"><span data-slate-string="true">而在场景二中，你在测试程序的时候，关注到了程序内部的代码逻辑是否正确，并且针对代码中的函数，开始做针对性测试。由于这个测试过程关注到了代码本身的逻辑，而不单单是程序功能本身，所以，这属于白盒测试。</span></span></span> 
</div> <div class="se-433eb1cb " data-slate-type="paragraph" data-slate-object="block" data-key="582"> 
<span data-slate-object="text" data-key="583"><span data-slate-leaf="true" data-offset-key="583:0" 
data-first-offset="true"><span data-slate-string="true">通过这两个日常写程序的场景，你会发现，其实测试行为对于我们来说并不陌生，测试就是为了保证程序功能的正确性的，而所谓的黑盒测试或者白盒测试，并没有优劣之分。在实际工作中，我们也会经常综合运用这两种测试，来查找程序中存在的潜在问题。</span></span></span> 
</div> <div class="se-5e971ed4 " data-slate-type="paragraph" data-slate-object="block" data-key="584"> 
<span data-slate-object="text" data-key="585"><span data-slate-leaf="true" data-offset-key="585:0" 
data-first-offset="true"><span data-slate-string="true">总的来说，想要保证程序的正确性，必然会涉及到运用相关的测试方法。所以请你记住，测试并不是测试人员的专属，很多时候也是开发人员需要掌握的技能。</span></span></span> 
</div> <div class="se-8eedc42d " data-slate-type="paragraph" data-slate-object="block" data-key="586"> 
<span data-slate-object="text" data-key="587"><span data-slate-leaf="true" data-offset-key="587:0" 
data-first-offset="true"><span data-slate-string="true">对于开发人员来说，最基本的测试方法，就是针对自己程序中的每一个功能模块，编写对应的单元测试，而单元测试中的单元，是程序中最小的测试单位。例如 
C 语言中，一个单元就是一个函数，C++ 中的一个单元，就是一个类。</span></span></span> </div> <div class="se-42515d50 " data-slate-type="paragraph" 
data-slate-object="block" data-key="588"> <span data-slate-object="text" data-key="589"><span 
data-slate-leaf="true" data-offset-key="589:0" data-first-offset="true"><span data-slate-string="true">所以，我们说到 
C 语言的单元测试，指的是对每一个函数，编写一段测试程序。而可以辅助开发人员编写这些单元测试的程序，我们叫做“单元测试框架”，也可以简称为“测试框架”。</span></span></span> 
</div> <h2 class="se-ac6eedde" data-slate-type="heading" data-slate-object="block" data-key="590"><span 
data-slate-object="text" data-key="591"><span data-slate-leaf="true" data-offset-key="591:0" 
data-first-offset="true"><span data-slate-string="true">初识：Google 测试框架</span></span></span></h2> 
<div class="se-1ae9d200 " data-slate-type="paragraph" data-slate-object="block" data-key="592"> 
<span data-slate-object="text" data-key="593"><span data-slate-leaf="true" data-offset-key="593:0" 
data-first-offset="true"><span data-slate-string="true">好了，关于软件开发流程的基本情况呢，我讲完了，下面我们正式说说测试框架。</span></span></span> 
</div> <div class="se-c5b9207b " data-slate-type="paragraph" data-slate-object="block" data-key="594"> 
<span data-slate-object="text" data-key="595"><span data-slate-leaf="true" data-offset-key="595:0" 
data-first-offset="true"><span data-slate-string="true">咱们要完成的第一个项目，就是编写一个简易的 C 语言测试框架。不过在写这个 
C 语言测试框架之前，咱们先看看之前的大厂或大牛们是怎么做的，这样，我们在写自己的测试框架的时候，也能有所借鉴。</span></span></span> </div> <div class="se-32f123fb 
" data-slate-type="paragraph" data-slate-object="block" data-key="596"> <span data-slate-object="text" 
data-key="597"><span data-slate-leaf="true" data-offset-key="597:0" data-first-offset="true"><span 
data-slate-string="true">今天，我要带你认识的是一个由 Google 开发的单元测试框架 Google Test，我们一般称它为 gtest。</span></span></span> 
</div> <div class="se-c5998f27 " data-slate-type="paragraph" data-slate-object="block" data-key="598"> 
<span data-slate-object="text" data-key="599"><span data-slate-leaf="true" data-offset-key="599:0" 
data-first-offset="true"><span data-slate-string="true">关于如何安装 Google 测试框架呢，由于大家的编程环境不同，所以，你可以按照网上其他资料中给出的安装教程，结合自己的编程环境，准备好 
gtest 的相关环境。</span></span></span> </div> <div class="se-af5f13dc " data-slate-type="paragraph" 
data-slate-object="block" data-key="600"> <span data-slate-object="text" data-key="601"><span 
data-slate-leaf="true" data-offset-key="601:0" data-first-offset="true"><span data-slate-string="true">gtest 
是一个 C++ 的单元测试框架，如果你不方便准备 gtest 相关环境，也不碍事儿，你可以看我下面的讲解。我的环境中，已经安装好了 gtest 的相关模块，为了简单说明 gtest 
的使用与运行效果，给你准备了如下代码：</span></span></span> </div> <div class="se-ce9e866c se-063c6cf6" data-slate-type="pre" 
data-slate-object="block" data-key="602" data-code-language="cpp"> <div class="se-b646f87e 
se-b16725ce"> <span></span> </div> <div class="se-4a9d2fcc"> <div class="se-2e222aa2 se-a7425cee" 
data-code-line-number="1"></div> <div class="se-2e222aa2 se-a7425cee" data-code-line-number="2"></div> 
<div class="se-2e222aa2 se-a7425cee" data-code-line-number="3"></div> <div class="se-2e222aa2 
se-a7425cee" data-code-line-number="4"></div> <div class="se-2e222aa2 se-a7425cee" data-code-line-number="5"></div> 
<div class="se-2e222aa2 se-a7425cee" data-code-line-number="6"></div> <div class="se-2e222aa2 
se-a7425cee" data-code-line-number="7"></div> <div class="se-2e222aa2 se-a7425cee" data-code-line-number="8"></div> 
<div class="se-2e222aa2 se-a7425cee" data-code-line-number="9"></div> <div class="se-2e222aa2 
se-a7425cee" data-code-line-number="10"></div> <div class="se-2e222aa2 se-a7425cee" data-code-line-number="11"></div> 
<div class="se-2e222aa2 se-a7425cee" data-code-line-number="12"></div> <div class="se-2e222aa2 
se-a7425cee" data-code-line-number="13"></div> <div class="se-2e222aa2 se-a7425cee" data-code-line-number="14"></div> 
<div class="se-2e222aa2 se-a7425cee" data-code-line-number="15"></div> <div class="se-2e222aa2 
se-a7425cee" data-code-line-number="16"></div> <div class="se-2e222aa2 se-a7425cee" data-code-line-number="17"></div> 
<div class="se-2e222aa2 se-a7425cee" data-code-line-number="18"></div> <div class="se-2e222aa2 
se-a7425cee" data-code-line-number="19"></div> <div class="se-2e222aa2 se-a7425cee" data-code-line-number="20"></div> 
<div class="se-2e222aa2 se-a7425cee" data-code-line-number="21"></div> <div class="se-2e222aa2 
se-a7425cee" data-code-line-number="22"></div> <div class="se-2e222aa2 se-a7425cee" data-code-line-number="23"></div> 
<div class="se-2e222aa2 se-a7425cee" data-code-line-number="24"></div> <div class="se-2e222aa2 
se-a7425cee" data-code-line-number="25"></div> <div class="se-2e222aa2 se-a7425cee" data-code-line-number="26"></div> 
<div class="se-2e222aa2 se-a7425cee" data-code-line-number="27"></div> <div class="se-2e222aa2 
se-a7425cee" data-code-line-number="28"></div> </div> <div class="se-82f7969e ps"> <div class="se-0a5bf258 
se-466ac03c" data-slate-type="code-line" data-slate-object="block" data-key="603"> <span data-slate-object="text" 
data-key="604"><span data-slate-leaf="true" data-offset-key="604:0" data-first-offset="true"><span 
class=" gkhl-meta" data-slate-object="annotation" data-annotation-key="gkann_2888359838" data-annotation-type="annotation"><span 
data-slate-string="true">#include &lt;stdio.h&gt;</span></span></span></span> </div> <div class="se-0a5bf258 
se-466ac03c" data-slate-type="code-line" data-slate-object="block" data-key="605"> <span data-slate-object="text" 
data-key="606"><span data-slate-leaf="true" data-offset-key="606:0" data-first-offset="true"><span 
class=" gkhl-meta" data-slate-object="annotation" data-annotation-key="gkann_9813314209" data-annotation-type="annotation"><span 
data-slate-string="true">#include &lt;gtest/gtest.h&gt;</span></span></span></span> </div> 
<div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="607"> <span data-slate-object="text" data-key="608"></span> </div> <div class="se-0a5bf258 
se-466ac03c" data-slate-type="code-line" data-slate-object="block" data-key="609"> <span data-slate-object="text" 
data-key="610"><span data-slate-leaf="true" data-offset-key="610:0" data-first-offset="true"><span 
class=" gkhl-comment" data-slate-object="annotation" data-annotation-key="gkann_1323319169" 
data-annotation-type="annotation"><span data-slate-string="true">// 判断一个数字 x 是否是素数</span></span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="611"> <span data-slate-object="text" data-key="612"><span data-slate-leaf="true" 
data-offset-key="612:0" data-first-offset="true"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_4978906452" data-annotation-type="annotation"><span class=" gkhl-function" 
data-slate-object="annotation" data-annotation-key="gkann_1905887025" data-annotation-type="annotation"><span 
data-slate-string="true">int</span></span></span></span><span data-slate-leaf="true" data-offset-key="612:1"><span 
class=" gkhl-function" data-slate-object="annotation" data-annotation-key="gkann_1905887025" 
data-annotation-type="annotation"><span data-slate-string="true"> </span></span></span><span 
data-slate-leaf="true" data-offset-key="612:2"><span class=" gkhl-title" data-slate-object="annotation" 
data-annotation-key="gkann_3658859673" data-annotation-type="annotation"><span class=" gkhl-function" 
data-slate-object="annotation" data-annotation-key="gkann_1905887025" data-annotation-type="annotation"><span 
data-slate-string="true">is_prime</span></span></span></span><span data-slate-leaf="true" data-offset-key="612:3"><span 
class=" gkhl-function" data-slate-object="annotation" data-annotation-key="gkann_1905887025" 
data-annotation-type="annotation"><span class=" gkhl-params" data-slate-object="annotation" 
data-annotation-key="gkann_5478039416" data-annotation-type="annotation"><span data-slate-string="true">(int 
x)</span></span></span></span><span data-slate-leaf="true" data-offset-key="612:4"><span class=" 
gkhl-function" data-slate-object="annotation" data-annotation-key="gkann_1905887025" data-annotation-type="annotation"><span 
data-slate-string="true"> </span></span></span><span data-slate-leaf="true" data-offset-key="612:5"><span 
data-slate-string="true">{</span></span></span> </div> <div class="se-0a5bf258 se-466ac03c" 
data-slate-type="code-line" data-slate-object="block" data-key="613"> <span data-slate-object="text" 
data-key="614"><span data-slate-leaf="true" data-offset-key="614:0" data-first-offset="true"><span 
data-slate-string="true"> </span></span><span data-slate-leaf="true" data-offset-key="614:1"><span 
class=" gkhl-keyword" data-slate-object="annotation" data-annotation-key="gkann_5932499634" 
data-annotation-type="annotation"><span data-slate-string="true">for</span></span></span><span 
data-slate-leaf="true" data-offset-key="614:2"><span data-slate-string="true"> (</span></span><span 
data-slate-leaf="true" data-offset-key="614:3"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_8543111314" data-annotation-type="annotation"><span data-slate-string="true">int</span></span></span><span 
data-slate-leaf="true" data-offset-key="614:4"><span data-slate-string="true"> i = </span></span><span 
data-slate-leaf="true" data-offset-key="614:5"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_9910503383" data-annotation-type="annotation"><span data-slate-string="true">2</span></span></span><span 
data-slate-leaf="true" data-offset-key="614:6"><span data-slate-string="true">; i * i &lt; 
x; i++) {</span></span></span> </div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" 
data-slate-object="block" data-key="615"> <span data-slate-object="text" data-key="616"><span 
data-slate-leaf="true" data-offset-key="616:0" data-first-offset="true"><span data-slate-string="true"> 
</span></span><span data-slate-leaf="true" data-offset-key="616:1"><span class=" gkhl-keyword" 
data-slate-object="annotation" data-annotation-key="gkann_3582274643" data-annotation-type="annotation"><span 
data-slate-string="true">if</span></span></span><span data-slate-leaf="true" data-offset-key="616:2"><span 
data-slate-string="true"> (x % i == </span></span><span data-slate-leaf="true" data-offset-key="616:3"><span 
class=" gkhl-number" data-slate-object="annotation" data-annotation-key="gkann_8034142020" 
data-annotation-type="annotation"><span data-slate-string="true">0</span></span></span><span 
data-slate-leaf="true" data-offset-key="616:4"><span data-slate-string="true">) </span></span><span 
data-slate-leaf="true" data-offset-key="616:5"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_8213505282" data-annotation-type="annotation"><span data-slate-string="true">return</span></span></span><span 
data-slate-leaf="true" data-offset-key="616:6"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="616:7"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_1432083065" data-annotation-type="annotation"><span data-slate-string="true">0</span></span></span><span 
data-slate-leaf="true" data-offset-key="616:8"><span data-slate-string="true">;</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="617"> <span data-slate-object="text" data-key="618"><span data-slate-leaf="true" 
data-offset-key="618:0" data-first-offset="true"><span data-slate-string="true"> }</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="619"> <span data-slate-object="text" data-key="620"><span data-slate-leaf="true" 
data-offset-key="620:0" data-first-offset="true"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="620:1"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_0216158094" data-annotation-type="annotation"><span data-slate-string="true">return</span></span></span><span 
data-slate-leaf="true" data-offset-key="620:2"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="620:3"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_2672042395" data-annotation-type="annotation"><span data-slate-string="true">1</span></span></span><span 
data-slate-leaf="true" data-offset-key="620:4"><span data-slate-string="true">;</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="621"> <span data-slate-object="text" data-key="622"><span data-slate-leaf="true" 
data-offset-key="622:0" data-first-offset="true"><span data-slate-string="true">}</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="623"> <span data-slate-object="text" data-key="624"></span> </div> <div class="se-0a5bf258 
se-466ac03c" data-slate-type="code-line" data-slate-object="block" data-key="625"> <span data-slate-object="text" 
data-key="626"><span data-slate-leaf="true" data-offset-key="626:0" data-first-offset="true"><span 
class=" gkhl-comment" data-slate-object="annotation" data-annotation-key="gkann_3250463492" 
data-annotation-type="annotation"><span data-slate-string="true">// 第一个测试用例</span></span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="627"> <span data-slate-object="text" data-key="628"><span data-slate-leaf="true" 
data-offset-key="628:0" data-first-offset="true"><span data-slate-string="true">TEST(test1, 
test_is_prime) {</span></span></span> </div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" 
data-slate-object="block" data-key="629"> <span data-slate-object="text" data-key="630"><span 
data-slate-leaf="true" data-offset-key="630:0" data-first-offset="true"><span data-slate-string="true"> 
EXPECT_EQ(is_prime(</span></span><span data-slate-leaf="true" data-offset-key="630:1"><span 
class=" gkhl-number" data-slate-object="annotation" data-annotation-key="gkann_4636394786" 
data-annotation-type="annotation"><span data-slate-string="true">3</span></span></span><span 
data-slate-leaf="true" data-offset-key="630:2"><span data-slate-string="true">), </span></span><span 
data-slate-leaf="true" data-offset-key="630:3"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_4852241953" data-annotation-type="annotation"><span data-slate-string="true">1</span></span></span><span 
data-slate-leaf="true" data-offset-key="630:4"><span data-slate-string="true">);</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="631"> <span data-slate-object="text" data-key="632"><span data-slate-leaf="true" 
data-offset-key="632:0" data-first-offset="true"><span data-slate-string="true"> EXPECT_EQ(is_prime(</span></span><span 
data-slate-leaf="true" data-offset-key="632:1"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_1044878818" data-annotation-type="annotation"><span data-slate-string="true">5</span></span></span><span 
data-slate-leaf="true" data-offset-key="632:2"><span data-slate-string="true">), </span></span><span 
data-slate-leaf="true" data-offset-key="632:3"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_0438185403" data-annotation-type="annotation"><span data-slate-string="true">1</span></span></span><span 
data-slate-leaf="true" data-offset-key="632:4"><span data-slate-string="true">);</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="633"> <span data-slate-object="text" data-key="634"><span data-slate-leaf="true" 
data-offset-key="634:0" data-first-offset="true"><span data-slate-string="true"> EXPECT_EQ(is_prime(</span></span><span 
data-slate-leaf="true" data-offset-key="634:1"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_8548952285" data-annotation-type="annotation"><span data-slate-string="true">7</span></span></span><span 
data-slate-leaf="true" data-offset-key="634:2"><span data-slate-string="true">), </span></span><span 
data-slate-leaf="true" data-offset-key="634:3"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_0873726294" data-annotation-type="annotation"><span data-slate-string="true">1</span></span></span><span 
data-slate-leaf="true" data-offset-key="634:4"><span data-slate-string="true">);</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="635"> <span data-slate-object="text" data-key="636"><span data-slate-leaf="true" 
data-offset-key="636:0" data-first-offset="true"><span data-slate-string="true">}</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="637"> <span data-slate-object="text" data-key="638"></span> </div> <div class="se-0a5bf258 
se-466ac03c" data-slate-type="code-line" data-slate-object="block" data-key="639"> <span data-slate-object="text" 
data-key="640"><span data-slate-leaf="true" data-offset-key="640:0" data-first-offset="true"><span 
class=" gkhl-comment" data-slate-object="annotation" data-annotation-key="gkann_8126150786" 
data-annotation-type="annotation"><span data-slate-string="true">// 第二个测试用例</span></span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="641"> <span data-slate-object="text" data-key="642"><span data-slate-leaf="true" 
data-offset-key="642:0" data-first-offset="true"><span data-slate-string="true">TEST(test2, 
test_is_prime) {</span></span></span> </div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" 
data-slate-object="block" data-key="643"> <span data-slate-object="text" data-key="644"><span 
data-slate-leaf="true" data-offset-key="644:0" data-first-offset="true"><span data-slate-string="true"> 
EXPECT_EQ(is_prime(</span></span><span data-slate-leaf="true" data-offset-key="644:1"><span 
class=" gkhl-number" data-slate-object="annotation" data-annotation-key="gkann_9624225206" 
data-annotation-type="annotation"><span data-slate-string="true">4</span></span></span><span 
data-slate-leaf="true" data-offset-key="644:2"><span data-slate-string="true">), </span></span><span 
data-slate-leaf="true" data-offset-key="644:3"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_3746635754" data-annotation-type="annotation"><span data-slate-string="true">0</span></span></span><span 
data-slate-leaf="true" data-offset-key="644:4"><span data-slate-string="true">);</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="645"> <span data-slate-object="text" data-key="646"><span data-slate-leaf="true" 
data-offset-key="646:0" data-first-offset="true"><span data-slate-string="true"> EXPECT_EQ(is_prime(</span></span><span 
data-slate-leaf="true" data-offset-key="646:1"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_2163431786" data-annotation-type="annotation"><span data-slate-string="true">0</span></span></span><span 
data-slate-leaf="true" data-offset-key="646:2"><span data-slate-string="true">), </span></span><span 
data-slate-leaf="true" data-offset-key="646:3"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_7267314659" data-annotation-type="annotation"><span data-slate-string="true">0</span></span></span><span 
data-slate-leaf="true" data-offset-key="646:4"><span data-slate-string="true">);</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="647"> <span data-slate-object="text" data-key="648"><span data-slate-leaf="true" 
data-offset-key="648:0" data-first-offset="true"><span data-slate-string="true"> EXPECT_EQ(is_prime(</span></span><span 
data-slate-leaf="true" data-offset-key="648:1"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_3154838933" data-annotation-type="annotation"><span data-slate-string="true">1</span></span></span><span 
data-slate-leaf="true" data-offset-key="648:2"><span data-slate-string="true">), </span></span><span 
data-slate-leaf="true" data-offset-key="648:3"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_1575714748" data-annotation-type="annotation"><span data-slate-string="true">0</span></span></span><span 
data-slate-leaf="true" data-offset-key="648:4"><span data-slate-string="true">);</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="649"> <span data-slate-object="text" data-key="650"><span data-slate-leaf="true" 
data-offset-key="650:0" data-first-offset="true"><span data-slate-string="true">}</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="651"> <span data-slate-object="text" data-key="652"></span> </div> <div class="se-0a5bf258 
se-466ac03c" data-slate-type="code-line" data-slate-object="block" data-key="653"> <span data-slate-object="text" 
data-key="654"><span data-slate-leaf="true" data-offset-key="654:0" data-first-offset="true"><span 
class=" gkhl-function" data-slate-object="annotation" data-annotation-key="gkann_9777611051" 
data-annotation-type="annotation"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_1990876923" data-annotation-type="annotation"><span data-slate-string="true">int</span></span></span></span><span 
data-slate-leaf="true" data-offset-key="654:1"><span class=" gkhl-function" data-slate-object="annotation" 
data-annotation-key="gkann_9777611051" data-annotation-type="annotation"><span data-slate-string="true"> 
</span></span></span><span data-slate-leaf="true" data-offset-key="654:2"><span class=" gkhl-function" 
data-slate-object="annotation" data-annotation-key="gkann_9777611051" data-annotation-type="annotation"><span 
class=" gkhl-title" data-slate-object="annotation" data-annotation-key="gkann_6035193340" data-annotation-type="annotation"><span 
data-slate-string="true">main</span></span></span></span><span data-slate-leaf="true" data-offset-key="654:3"><span 
class=" gkhl-function" data-slate-object="annotation" data-annotation-key="gkann_9777611051" 
data-annotation-type="annotation"><span class=" gkhl-params" data-slate-object="annotation" 
data-annotation-key="gkann_6248266505" data-annotation-type="annotation"><span data-slate-string="true">()</span></span></span></span><span 
data-slate-leaf="true" data-offset-key="654:4"><span class=" gkhl-function" data-slate-object="annotation" 
data-annotation-key="gkann_9777611051" data-annotation-type="annotation"><span data-slate-string="true"> 
</span></span></span><span data-slate-leaf="true" data-offset-key="654:5"><span data-slate-string="true">{</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="655"> <span data-slate-object="text" data-key="656"><span data-slate-leaf="true" 
data-offset-key="656:0" data-first-offset="true"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="656:1"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_1258347206" data-annotation-type="annotation"><span data-slate-string="true">return</span></span></span><span 
data-slate-leaf="true" data-offset-key="656:2"><span data-slate-string="true"> RUN_ALL_TESTS();</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="657"> <span data-slate-object="text" data-key="658"><span data-slate-leaf="true" 
data-offset-key="658:0" data-first-offset="true"><span data-slate-string="true">}</span></span></span> 
</div> <div class="ps__rail-x" style="left: 0px; bottom: 0px;"> <div class="ps__thumb-x" tabindex="0" 
style="left: 0px; width: 0px;"></div> </div> <div class="ps__rail-y" style="top: 0px; right: 
0px;"> <div class="ps__thumb-y" tabindex="0" style="top: 0px; height: 0px;"></div> </div> </div> 
</div> <div class="se-5dcc7685 " data-slate-type="paragraph" data-slate-object="block" data-key="659"> 
<span data-slate-object="text" data-key="660"><span data-slate-leaf="true" data-offset-key="660:0" 
data-first-offset="true"><span data-slate-string="true">就是一份简单的 gtest 的使用代码。代码中，包含了 gtest/gtest.h 
头文件以后，程序就具备了一些魔法效果，下面让我来给你具体讲一讲。</span></span></span> </div> <div class="se-1d05bf00 " data-slate-type="paragraph" 
data-slate-object="block" data-key="661"> <span data-slate-object="text" data-key="662"><span 
data-slate-leaf="true" data-offset-key="662:0" data-first-offset="true"><span data-slate-string="true">从程序的结构上来说，先是一个 
is_prime 函数，接下来是两段以 TEST 作为开头的代码（这两段代码的作用，咱们稍后做介绍），最后是一个主函数。主函数中原本 return 0 的位置，替换成了 return 
RUN_ALL_TESTS()，也就是说，主函数中只执行了一个 RUN_ALL_TESTS 函数，而这个 RUN_ALL_TESTS 函数有什么作用呢？咱们来看一下程序的具体输出：</span></span></span> 
</div> <div class="se-3dcb1fda se-0b416c31" data-slate-type="pre" data-slate-object="block" 
data-key="663" data-code-language="sql"> <div class="se-82931e8d se-0607f66e"> <span></span> 
</div> <div class="se-00671d52"> <div class="se-a47c4033 se-88df8a17" data-code-line-number="1"></div> 
<div class="se-a47c4033 se-88df8a17" data-code-line-number="2"></div> <div class="se-a47c4033 
se-88df8a17" data-code-line-number="3"></div> <div class="se-a47c4033 se-88df8a17" data-code-line-number="4"></div> 
<div class="se-a47c4033 se-88df8a17" data-code-line-number="5"></div> <div class="se-a47c4033 
se-88df8a17" data-code-line-number="6"></div> <div class="se-a47c4033 se-88df8a17" data-code-line-number="7"></div> 
<div class="se-a47c4033 se-88df8a17" data-code-line-number="8"></div> <div class="se-a47c4033 
se-88df8a17" data-code-line-number="9"></div> <div class="se-a47c4033 se-88df8a17" data-code-line-number="10"></div> 
<div class="se-a47c4033 se-88df8a17" data-code-line-number="11"></div> <div class="se-a47c4033 
se-88df8a17" data-code-line-number="12"></div> <div class="se-a47c4033 se-88df8a17" data-code-line-number="13"></div> 
<div class="se-a47c4033 se-88df8a17" data-code-line-number="14"></div> <div class="se-a47c4033 
se-88df8a17" data-code-line-number="15"></div> <div class="se-a47c4033 se-88df8a17" data-code-line-number="16"></div> 
<div class="se-a47c4033 se-88df8a17" data-code-line-number="17"></div> <div class="se-a47c4033 
se-88df8a17" data-code-line-number="18"></div> <div class="se-a47c4033 se-88df8a17" data-code-line-number="19"></div> 
<div class="se-a47c4033 se-88df8a17" data-code-line-number="20"></div> <div class="se-a47c4033 
se-88df8a17" data-code-line-number="21"></div> <div class="se-a47c4033 se-88df8a17" data-code-line-number="22"></div> 
<div class="se-a47c4033 se-88df8a17" data-code-line-number="23"></div> <div class="se-a47c4033 
se-88df8a17" data-code-line-number="24"></div> <div class="se-a47c4033 se-88df8a17" data-code-line-number="25"></div> 
<div class="se-a47c4033 se-88df8a17" data-code-line-number="26"></div> <div class="se-a47c4033 
se-88df8a17" data-code-line-number="27"></div> <div class="se-a47c4033 se-88df8a17" data-code-line-number="28"></div> 
<div class="se-a47c4033 se-88df8a17" data-code-line-number="29"></div> <div class="se-a47c4033 
se-88df8a17" data-code-line-number="30"></div> <div class="se-a47c4033 se-88df8a17" data-code-line-number="31"></div> 
</div> <div class="se-d0513ae0 ps ps--active-x"> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" 
data-slate-object="block" data-key="664"> <span data-slate-object="text" data-key="665"><span 
data-slate-leaf="true" data-offset-key="665:0" data-first-offset="true"><span data-slate-string="true">[==========] 
Running 2 tests from 1 test suite.</span></span></span> </div> <div class="se-0a5bf258 se-466ac03c" 
data-slate-type="code-line" data-slate-object="block" data-key="666"> <span data-slate-object="text" 
data-key="667"><span data-slate-leaf="true" data-offset-key="667:0" data-first-offset="true"><span 
data-slate-string="true">[</span></span><span data-slate-leaf="true" data-offset-key="667:1"><span 
class=" gkhl-comment" data-slate-object="annotation" data-annotation-key="gkann_9338193917" 
data-annotation-type="annotation"><span data-slate-string="true">----------] Global test environment 
set-up.</span></span></span></span> </div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" 
data-slate-object="block" data-key="668"> <span data-slate-object="text" data-key="669"><span 
data-slate-leaf="true" data-offset-key="669:0" data-first-offset="true"><span data-slate-string="true">[</span></span><span 
data-slate-leaf="true" data-offset-key="669:1"><span class=" gkhl-comment" data-slate-object="annotation" 
data-annotation-key="gkann_2445488511" data-annotation-type="annotation"><span data-slate-string="true">----------] 
2 tests from test_is_prime</span></span></span></span> </div> <div class="se-0a5bf258 se-466ac03c" 
data-slate-type="code-line" data-slate-object="block" data-key="670"> <span data-slate-object="text" 
data-key="671"><span data-slate-leaf="true" data-offset-key="671:0" data-first-offset="true"><span 
data-slate-string="true">[ RUN ] test_is_prime.test1</span></span></span> </div> <div class="se-0a5bf258 
se-466ac03c" data-slate-type="code-line" data-slate-object="block" data-key="672"> <span data-slate-object="text" 
data-key="673"><span data-slate-leaf="true" data-offset-key="673:0" data-first-offset="true"><span 
data-slate-string="true">[ OK ] test_is_prime.test1 (1 ms)</span></span></span> </div> <div 
class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" data-key="674"> 
<span data-slate-object="text" data-key="675"><span data-slate-leaf="true" data-offset-key="675:0" 
data-first-offset="true"><span data-slate-string="true">[ RUN ] test_is_prime.test2</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="676"> <span data-slate-object="text" data-key="677"><span data-slate-leaf="true" 
data-offset-key="677:0" data-first-offset="true"><span data-slate-string="true">gtest_test.cpp:25: 
Failure</span></span></span> </div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" 
data-slate-object="block" data-key="678"> <span data-slate-object="text" data-key="679"><span 
data-slate-leaf="true" data-offset-key="679:0" data-first-offset="true"><span data-slate-string="true">Expected 
equality of these </span></span><span data-slate-leaf="true" data-offset-key="679:1"><span 
class=" gkhl-keyword" data-slate-object="annotation" data-annotation-key="gkann_2697446360" 
data-annotation-type="annotation"><span data-slate-string="true">values</span></span></span><span 
data-slate-leaf="true" data-offset-key="679:2"><span data-slate-string="true">:</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="680"> <span data-slate-object="text" data-key="681"><span data-slate-leaf="true" 
data-offset-key="681:0" data-first-offset="true"><span data-slate-string="true"> is_prime(</span></span><span 
data-slate-leaf="true" data-offset-key="681:1"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_7901960921" data-annotation-type="annotation"><span data-slate-string="true">4</span></span></span><span 
data-slate-leaf="true" data-offset-key="681:2"><span data-slate-string="true">)</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="682"> <span data-slate-object="text" data-key="683"><span data-slate-leaf="true" 
data-offset-key="683:0" data-first-offset="true"><span data-slate-string="true"> Which </span></span><span 
data-slate-leaf="true" data-offset-key="683:1"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_4186932980" data-annotation-type="annotation"><span data-slate-string="true">is</span></span></span><span 
data-slate-leaf="true" data-offset-key="683:2"><span data-slate-string="true">: </span></span><span 
data-slate-leaf="true" data-offset-key="683:3"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_7629413258" data-annotation-type="annotation"><span data-slate-string="true">1</span></span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="684"> <span data-slate-object="text" data-key="685"><span data-slate-leaf="true" 
data-offset-key="685:0" data-first-offset="true"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="685:1"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_4700919532" data-annotation-type="annotation"><span data-slate-string="true">0</span></span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="686"> <span data-slate-object="text" data-key="687"><span data-slate-leaf="true" 
data-offset-key="687:0" data-first-offset="true"><span data-slate-string="true">gtest_test.cpp:</span></span><span 
data-slate-leaf="true" data-offset-key="687:1"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_2360638861" data-annotation-type="annotation"><span data-slate-string="true">26</span></span></span><span 
data-slate-leaf="true" data-offset-key="687:2"><span data-slate-string="true">: </span></span><span 
data-slate-leaf="true" data-offset-key="687:3"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_2228442991" data-annotation-type="annotation"><span data-slate-string="true">Failure</span></span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="688"> <span data-slate-object="text" data-key="689"><span data-slate-leaf="true" 
data-offset-key="689:0" data-first-offset="true"><span data-slate-string="true">Expected equality 
</span></span><span data-slate-leaf="true" data-offset-key="689:1"><span class=" gkhl-keyword" 
data-slate-object="annotation" data-annotation-key="gkann_7673918771" data-annotation-type="annotation"><span 
data-slate-string="true">of</span></span></span><span data-slate-leaf="true" data-offset-key="689:2"><span 
data-slate-string="true"> these </span></span><span data-slate-leaf="true" data-offset-key="689:3"><span 
class=" gkhl-keyword" data-slate-object="annotation" data-annotation-key="gkann_9770576268" 
data-annotation-type="annotation"><span data-slate-string="true">values</span></span></span><span 
data-slate-leaf="true" data-offset-key="689:4"><span data-slate-string="true">:</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="690"> <span data-slate-object="text" data-key="691"><span data-slate-leaf="true" 
data-offset-key="691:0" data-first-offset="true"><span data-slate-string="true"> is_prime(</span></span><span 
data-slate-leaf="true" data-offset-key="691:1"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_1692979364" data-annotation-type="annotation"><span data-slate-string="true">0</span></span></span><span 
data-slate-leaf="true" data-offset-key="691:2"><span data-slate-string="true">)</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="692"> <span data-slate-object="text" data-key="693"><span data-slate-leaf="true" 
data-offset-key="693:0" data-first-offset="true"><span data-slate-string="true"> Which </span></span><span 
data-slate-leaf="true" data-offset-key="693:1"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_5522461066" data-annotation-type="annotation"><span data-slate-string="true">is</span></span></span><span 
data-slate-leaf="true" data-offset-key="693:2"><span data-slate-string="true">: </span></span><span 
data-slate-leaf="true" data-offset-key="693:3"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_8379482510" data-annotation-type="annotation"><span data-slate-string="true">1</span></span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="694"> <span data-slate-object="text" data-key="695"><span data-slate-leaf="true" 
data-offset-key="695:0" data-first-offset="true"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="695:1"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_7373689967" data-annotation-type="annotation"><span data-slate-string="true">0</span></span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="696"> <span data-slate-object="text" data-key="697"><span data-slate-leaf="true" 
data-offset-key="697:0" data-first-offset="true"><span data-slate-string="true">gtest_test.cpp:</span></span><span 
data-slate-leaf="true" data-offset-key="697:1"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_2608361373" data-annotation-type="annotation"><span data-slate-string="true">27</span></span></span><span 
data-slate-leaf="true" data-offset-key="697:2"><span data-slate-string="true">: </span></span><span 
data-slate-leaf="true" data-offset-key="697:3"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_8703289128" data-annotation-type="annotation"><span data-slate-string="true">Failure</span></span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="698"> <span data-slate-object="text" data-key="699"><span data-slate-leaf="true" 
data-offset-key="699:0" data-first-offset="true"><span data-slate-string="true">Expected equality 
</span></span><span data-slate-leaf="true" data-offset-key="699:1"><span class=" gkhl-keyword" 
data-slate-object="annotation" data-annotation-key="gkann_2466607811" data-annotation-type="annotation"><span 
data-slate-string="true">of</span></span></span><span data-slate-leaf="true" data-offset-key="699:2"><span 
data-slate-string="true"> these </span></span><span data-slate-leaf="true" data-offset-key="699:3"><span 
class=" gkhl-keyword" data-slate-object="annotation" data-annotation-key="gkann_7608086010" 
data-annotation-type="annotation"><span data-slate-string="true">values</span></span></span><span 
data-slate-leaf="true" data-offset-key="699:4"><span data-slate-string="true">:</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="700"> <span data-slate-object="text" data-key="701"><span data-slate-leaf="true" 
data-offset-key="701:0" data-first-offset="true"><span data-slate-string="true"> is_prime(</span></span><span 
data-slate-leaf="true" data-offset-key="701:1"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_1692616250" data-annotation-type="annotation"><span data-slate-string="true">1</span></span></span><span 
data-slate-leaf="true" data-offset-key="701:2"><span data-slate-string="true">)</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="702"> <span data-slate-object="text" data-key="703"><span data-slate-leaf="true" 
data-offset-key="703:0" data-first-offset="true"><span data-slate-string="true"> Which </span></span><span 
data-slate-leaf="true" data-offset-key="703:1"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_6468536578" data-annotation-type="annotation"><span data-slate-string="true">is</span></span></span><span 
data-slate-leaf="true" data-offset-key="703:2"><span data-slate-string="true">: </span></span><span 
data-slate-leaf="true" data-offset-key="703:3"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_8371689200" data-annotation-type="annotation"><span data-slate-string="true">1</span></span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="704"> <span data-slate-object="text" data-key="705"><span data-slate-leaf="true" 
data-offset-key="705:0" data-first-offset="true"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="705:1"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_4006247795" data-annotation-type="annotation"><span data-slate-string="true">0</span></span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="706"> <span data-slate-object="text" data-key="707"><span data-slate-leaf="true" 
data-offset-key="707:0" data-first-offset="true"><span data-slate-string="true">[ </span></span><span 
data-slate-leaf="true" data-offset-key="707:1"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_0386349658" data-annotation-type="annotation"><span data-slate-string="true">FAILED</span></span></span><span 
data-slate-leaf="true" data-offset-key="707:2"><span data-slate-string="true"> ] test_is_prime.test2 
(</span></span><span data-slate-leaf="true" data-offset-key="707:3"><span class=" gkhl-number" 
data-slate-object="annotation" data-annotation-key="gkann_0525922363" data-annotation-type="annotation"><span 
data-slate-string="true">0</span></span></span><span data-slate-leaf="true" data-offset-key="707:4"><span 
data-slate-string="true"> ms)</span></span></span> </div> <div class="se-0a5bf258 se-466ac03c" 
data-slate-type="code-line" data-slate-object="block" data-key="708"> <span data-slate-object="text" 
data-key="709"><span data-slate-leaf="true" data-offset-key="709:0" data-first-offset="true"><span 
data-slate-string="true">[</span></span><span data-slate-leaf="true" data-offset-key="709:1"><span 
class=" gkhl-comment" data-slate-object="annotation" data-annotation-key="gkann_3250743962" 
data-annotation-type="annotation"><span data-slate-string="true">----------] 2 tests from test_is_prime 
(1 ms total)</span></span></span></span> </div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" 
data-slate-object="block" data-key="710"> <span data-slate-object="text" data-key="711"></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="712"> <span data-slate-object="text" data-key="713"><span data-slate-leaf="true" 
data-offset-key="713:0" data-first-offset="true"><span data-slate-string="true">[</span></span><span 
data-slate-leaf="true" data-offset-key="713:1"><span class=" gkhl-comment" data-slate-object="annotation" 
data-annotation-key="gkann_7091205634" data-annotation-type="annotation"><span data-slate-string="true">----------] 
Global test environment tear-down</span></span></span></span> </div> <div class="se-0a5bf258 
se-466ac03c" data-slate-type="code-line" data-slate-object="block" data-key="714"> <span data-slate-object="text" 
data-key="715"><span data-slate-leaf="true" data-offset-key="715:0" data-first-offset="true"><span 
data-slate-string="true">[==========] </span></span><span data-slate-leaf="true" data-offset-key="715:1"><span 
class=" gkhl-number" data-slate-object="annotation" data-annotation-key="gkann_8579896813" 
data-annotation-type="annotation"><span data-slate-string="true">2</span></span></span><span 
data-slate-leaf="true" data-offset-key="715:2"><span data-slate-string="true"> tests </span></span><span 
data-slate-leaf="true" data-offset-key="715:3"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_5140980944" data-annotation-type="annotation"><span data-slate-string="true">from</span></span></span><span 
data-slate-leaf="true" data-offset-key="715:4"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="715:5"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_7471589875" data-annotation-type="annotation"><span data-slate-string="true">1</span></span></span><span 
data-slate-leaf="true" data-offset-key="715:6"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="715:7"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_8688370411" data-annotation-type="annotation"><span data-slate-string="true">test</span></span></span><span 
data-slate-leaf="true" data-offset-key="715:8"><span data-slate-string="true"> suite ran. (</span></span><span 
data-slate-leaf="true" data-offset-key="715:9"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_0648528398" data-annotation-type="annotation"><span data-slate-string="true">1</span></span></span><span 
data-slate-leaf="true" data-offset-key="715:10"><span data-slate-string="true"> ms total)</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="716"> <span data-slate-object="text" data-key="717"><span data-slate-leaf="true" 
data-offset-key="717:0" data-first-offset="true"><span data-slate-string="true">[ PASSED ] 
</span></span><span data-slate-leaf="true" data-offset-key="717:1"><span class=" gkhl-number" 
data-slate-object="annotation" data-annotation-key="gkann_6976141308" data-annotation-type="annotation"><span 
data-slate-string="true">1</span></span></span><span data-slate-leaf="true" data-offset-key="717:2"><span 
data-slate-string="true"> test.</span></span></span> </div> <div class="se-0a5bf258 se-466ac03c" 
data-slate-type="code-line" data-slate-object="block" data-key="718"> <span data-slate-object="text" 
data-key="719"><span data-slate-leaf="true" data-offset-key="719:0" data-first-offset="true"><span 
data-slate-string="true">[ </span></span><span data-slate-leaf="true" data-offset-key="719:1"><span 
class=" gkhl-keyword" data-slate-object="annotation" data-annotation-key="gkann_8051133357" 
data-annotation-type="annotation"><span data-slate-string="true">FAILED</span></span></span><span 
data-slate-leaf="true" data-offset-key="719:2"><span data-slate-string="true"> ] </span></span><span 
data-slate-leaf="true" data-offset-key="719:3"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_8435362909" data-annotation-type="annotation"><span data-slate-string="true">1</span></span></span><span 
data-slate-leaf="true" data-offset-key="719:4"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="719:5"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_8249582406" data-annotation-type="annotation"><span data-slate-string="true">test</span></span></span><span 
data-slate-leaf="true" data-offset-key="719:6"><span data-slate-string="true">, listed below:</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="720"> <span data-slate-object="text" data-key="721"><span data-slate-leaf="true" 
data-offset-key="721:0" data-first-offset="true"><span data-slate-string="true">[ </span></span><span 
data-slate-leaf="true" data-offset-key="721:1"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_2054758402" data-annotation-type="annotation"><span data-slate-string="true">FAILED</span></span></span><span 
data-slate-leaf="true" data-offset-key="721:2"><span data-slate-string="true"> ] test_is_prime.test2</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="722"> <span data-slate-object="text" data-key="723"></span> </div> <div class="se-0a5bf258 
se-466ac03c" data-slate-type="code-line" data-slate-object="block" data-key="724"> <span data-slate-object="text" 
data-key="725"><span data-slate-leaf="true" data-offset-key="725:0" data-first-offset="true"><span 
data-slate-string="true"> </span></span><span data-slate-leaf="true" data-offset-key="725:1"><span 
class=" gkhl-number" data-slate-object="annotation" data-annotation-key="gkann_8478906756" 
data-annotation-type="annotation"><span data-slate-string="true">1</span></span></span><span 
data-slate-leaf="true" data-offset-key="725:2"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="725:3"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_9510559042" data-annotation-type="annotation"><span data-slate-string="true">FAILED</span></span></span><span 
data-slate-leaf="true" data-offset-key="725:4"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="725:5"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_5106443774" data-annotation-type="annotation"><span data-slate-string="true">TEST</span></span></span></span> 
</div> <div class="ps__rail-x" style="width: 365px; left: 0px; bottom: 0px;"> <div class="ps__thumb-x" 
tabindex="0" style="left: 0px; width: 304px;"></div> </div> <div class="ps__rail-y" style="top: 
0px; right: 0px;"> <div class="ps__thumb-y" tabindex="0" style="top: 0px; height: 0px;"></div> 
</div> </div> </div> <div class="se-69f58b3a " data-slate-type="paragraph" data-slate-object="block" 
data-key="726"> <span data-slate-object="text" data-key="727"><span data-slate-leaf="true" 
data-offset-key="727:0" data-first-offset="true"><span data-slate-string="true">由于咱们的环境有所不同，所以你环境中的输出内容，可能和我这个输出结果略有差别，不过，这不影响我们接下来的讨论。</span></span></span> 
</div> <div class="se-c3bd2b0a " data-slate-type="paragraph" data-slate-object="block" data-key="728"> 
<span data-slate-object="text" data-key="729"><span data-slate-leaf="true" data-offset-key="729:0" 
data-first-offset="true"><span data-slate-string="true">先看输出内容的第 4 行和第 6 行，意思是说，执行测试用例 test_is_prime.test1 
和 test_is_prime.test2，这不就是上面两个以 TEST 开头的两段代码相关的输出内容么？</span></span></span> </div> <div class="se-ed895ea0 
" data-slate-type="paragraph" data-slate-object="block" data-key="730"> <span data-slate-object="text" 
data-key="731"><span data-slate-leaf="true" data-offset-key="731:0" data-first-offset="true"><span 
data-slate-string="true">接下来从第 7 行到第 21 行是一段报错信息，意思就是说 is_prime(4)，is_prime(0) 与 is_prime(1) 
函数返回值错误，也就意味着 is_prime 函数实现有错误，这段错误所涉及的信息，在源代码中的第二个测试用例中有涉及。</span></span></span> </div> <div 
class="se-815ef895 " data-slate-type="paragraph" data-slate-object="block" data-key="732"> 
<span data-slate-object="text" data-key="733"><span data-slate-leaf="true" data-offset-key="733:0" 
data-first-offset="true"><span data-slate-string="true">以上就是我们对 gtest 单元测试框架的一个感性认识，从这些感性认知，我们逐渐走向理性层面，逐步展开属于我们自己的思考。</span></span></span> 
</div> <h2 class="se-6624512b" data-slate-type="heading" data-slate-object="block" data-key="734"><span 
data-slate-object="text" data-key="735"><span data-slate-leaf="true" data-offset-key="735:0" 
data-first-offset="true"><span data-slate-string="true">对于 gtest 的三个思考</span></span></span></h2> 
<div class="se-31b9dd3e " data-slate-type="paragraph" data-slate-object="block" data-key="736"> 
<span data-slate-object="text" data-key="737"><span data-slate-leaf="true" data-offset-key="737:0" 
data-first-offset="true"><span data-slate-string="true">面对刚才的演示代码和输出内容，你可能会产生如下三个问题：</span></span></span> 
</div> <div class="se-6cf1724c" data-slate-type="list" data-slate-object="block" data-key="738"> 
<div class="se-b764529e" data-slate-type="list-line" data-slate-object="block" data-key="739"> 
<div class="se-84ee6be4 se-89fac0e7" data-code-line-number="1"></div> <div class="se-20b6680e"> 
<span data-slate-object="text" data-key="740"><span data-slate-leaf="true" data-offset-key="740:0" 
data-first-offset="true"><span data-slate-string="true">源代码中的 EXPECT_EQ 是做什么的？</span></span></span> 
</div> </div> <div class="se-bbc9527c" data-slate-type="list-line" data-slate-object="block" 
data-key="741"> <div class="se-37e30a98 se-175a2c42" data-code-line-number="2"></div> <div 
class="se-fd62149f"> <span data-slate-object="text" data-key="742"><span data-slate-leaf="true" 
data-offset-key="742:0" data-first-offset="true"><span data-slate-string="true">以 TEST 开头的代码段，和我们学习的函数很不一样，那它究竟是什么？</span></span></span> 
</div> </div> <div class="se-829bdf64" data-slate-type="list-line" data-slate-object="block" 
data-key="743"> <div class="se-48591f44 se-8416ece5" data-code-line-number="3"></div> <div 
class="se-f820632e"> <span data-slate-object="text" data-key="744"><span data-slate-leaf="true" 
data-offset-key="744:0" data-first-offset="true"><span data-slate-string="true">主函数中只调用了 RUN_ALL_TESTS 
函数，为什么好像是执行了程序中所有的 TEST 代码段？这个功能是怎么实现的？</span></span></span> </div> </div> </div> <div class="se-eacab829 
" data-slate-type="paragraph" data-slate-object="block" data-key="745"> <span data-slate-object="text" 
data-key="746"><span data-slate-leaf="true" data-offset-key="746:0" data-first-offset="true"><span 
data-slate-string="true">第一个问题不难，查看相关 gtest 的文档资料，你就可以知道，EXPECT_EQ 是 gtest 里面自带的宏，主要作用是判断传入的两部分的值是否相等。如果不相等，就会产生类似于输出内容中第 
7 行到第 21 行的输出内容。</span></span></span> </div> <div class="se-9f3cfb07 " data-slate-type="paragraph" 
data-slate-object="block" data-key="747"> <span data-slate-object="text" data-key="748"><span 
data-slate-leaf="true" data-offset-key="748:0" data-first-offset="true"><span data-slate-string="true">第二个问题，以 
TEST 开头的这段代码，明显不符合我们对 C 语言的语法认知，我们确实没有见过不用规定返回值类型，也不用规定参数类型的函数定义方式。关于 TEST 究竟是个什么的问题，更加合理的猜测，就是 
TEST 实际上是一个宏。</span></span></span> </div> <div class="se-1b8a46ee " data-slate-type="paragraph" 
data-slate-object="block" data-key="749"> <span data-slate-object="text" data-key="750"><span 
data-slate-leaf="true" data-offset-key="750:0" data-first-offset="true"><span data-slate-string="true">我们来回顾一下宏的作用，宏就是做简单的替换。正是因为 
TEST(test_is_prime, test1) 这段代码实际上是一个宏，所以展开以后，和后面的大括号中的内容一起组成了一段合法的代码内容，这样理解，原本的代码内容也就解释得通了。</span></span></span> 
</div> <div class="se-05ec6191 " data-slate-type="paragraph" data-slate-object="block" data-key="751"> 
<span data-slate-object="text" data-key="752"><span data-slate-leaf="true" data-offset-key="752:0" 
data-first-offset="true"><span data-slate-string="true">而 TEST 宏展开以后会被替换成什么内容呢？关于这个问题，我留下充足的时间请你去思考，同时，包括第三个问题的答案，都留作今天的思考题。我希望你认真想一想，并将你的思考结果写在留言区，我们一起讨论。</span></span></span> 
</div> <div class="se-bbaad825 " data-slate-type="paragraph" data-slate-object="block" data-key="753"> 
<span data-slate-object="text" data-key="754"><span data-slate-leaf="true" data-offset-key="754:0" 
data-first-offset="true"><span data-slate-string="true">下面这段代码，就是作为我们后续的项目测试代码，对于这份源代码，我们不会对它做任何的改动，所以我建议你把代码内容保存下来，以备咱们后面课程练习使用。</span></span></span> 
</div> <div class="se-944ece3f se-d46d0da2" data-slate-type="pre" data-slate-object="block" 
data-key="755" data-code-language="cpp"> <div class="se-f04ae4f2 se-bca9be06"> <span></span> 
</div> <div class="se-670a2fa5"> <div class="se-561851c9 se-a2a144b8" data-code-line-number="1"></div> 
<div class="se-561851c9 se-a2a144b8" data-code-line-number="2"></div> <div class="se-561851c9 
se-a2a144b8" data-code-line-number="3"></div> <div class="se-561851c9 se-a2a144b8" data-code-line-number="4"></div> 
<div class="se-561851c9 se-a2a144b8" data-code-line-number="5"></div> <div class="se-561851c9 
se-a2a144b8" data-code-line-number="6"></div> <div class="se-561851c9 se-a2a144b8" data-code-line-number="7"></div> 
<div class="se-561851c9 se-a2a144b8" data-code-line-number="8"></div> <div class="se-561851c9 
se-a2a144b8" data-code-line-number="9"></div> <div class="se-561851c9 se-a2a144b8" data-code-line-number="10"></div> 
<div class="se-561851c9 se-a2a144b8" data-code-line-number="11"></div> <div class="se-561851c9 
se-a2a144b8" data-code-line-number="12"></div> <div class="se-561851c9 se-a2a144b8" data-code-line-number="13"></div> 
<div class="se-561851c9 se-a2a144b8" data-code-line-number="14"></div> <div class="se-561851c9 
se-a2a144b8" data-code-line-number="15"></div> <div class="se-561851c9 se-a2a144b8" data-code-line-number="16"></div> 
<div class="se-561851c9 se-a2a144b8" data-code-line-number="17"></div> <div class="se-561851c9 
se-a2a144b8" data-code-line-number="18"></div> <div class="se-561851c9 se-a2a144b8" data-code-line-number="19"></div> 
<div class="se-561851c9 se-a2a144b8" data-code-line-number="20"></div> <div class="se-561851c9 
se-a2a144b8" data-code-line-number="21"></div> <div class="se-561851c9 se-a2a144b8" data-code-line-number="22"></div> 
<div class="se-561851c9 se-a2a144b8" data-code-line-number="23"></div> <div class="se-561851c9 
se-a2a144b8" data-code-line-number="24"></div> <div class="se-561851c9 se-a2a144b8" data-code-line-number="25"></div> 
<div class="se-561851c9 se-a2a144b8" data-code-line-number="26"></div> <div class="se-561851c9 
se-a2a144b8" data-code-line-number="27"></div> <div class="se-561851c9 se-a2a144b8" data-code-line-number="28"></div> 
</div> <div class="se-9f645f5e ps ps--active-x"> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" 
data-slate-object="block" data-key="756"> <span data-slate-object="text" data-key="757"><span 
data-slate-leaf="true" data-offset-key="757:0" data-first-offset="true"><span class=" gkhl-meta" 
data-slate-object="annotation" data-annotation-key="gkann_6746946391" data-annotation-type="annotation"><span 
data-slate-string="true">#include &lt;stdio.h&gt;</span></span></span></span> </div> <div class="se-0a5bf258 
se-466ac03c" data-slate-type="code-line" data-slate-object="block" data-key="758"> <span data-slate-object="text" 
data-key="759"><span data-slate-leaf="true" data-offset-key="759:0" data-first-offset="true"><span 
class=" gkhl-meta" data-slate-object="annotation" data-annotation-key="gkann_9868423822" data-annotation-type="annotation"><span 
data-slate-string="true">#include "geek_test.h" // 替换掉原 gtest/gtest.h 头文件</span></span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="760"> <span data-slate-object="text" data-key="761"></span> </div> <div class="se-0a5bf258 
se-466ac03c" data-slate-type="code-line" data-slate-object="block" data-key="762"> <span data-slate-object="text" 
data-key="763"><span data-slate-leaf="true" data-offset-key="763:0" data-first-offset="true"><span 
class=" gkhl-comment" data-slate-object="annotation" data-annotation-key="gkann_7354945621" 
data-annotation-type="annotation"><span data-slate-string="true">// 判断一个数字 x 是否是素数</span></span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="764"> <span data-slate-object="text" data-key="765"><span data-slate-leaf="true" 
data-offset-key="765:0" data-first-offset="true"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_5819399114" data-annotation-type="annotation"><span class=" gkhl-function" 
data-slate-object="annotation" data-annotation-key="gkann_1539179195" data-annotation-type="annotation"><span 
data-slate-string="true">int</span></span></span></span><span data-slate-leaf="true" data-offset-key="765:1"><span 
class=" gkhl-function" data-slate-object="annotation" data-annotation-key="gkann_1539179195" 
data-annotation-type="annotation"><span data-slate-string="true"> </span></span></span><span 
data-slate-leaf="true" data-offset-key="765:2"><span class=" gkhl-function" data-slate-object="annotation" 
data-annotation-key="gkann_1539179195" data-annotation-type="annotation"><span class=" gkhl-title" 
data-slate-object="annotation" data-annotation-key="gkann_2443566720" data-annotation-type="annotation"><span 
data-slate-string="true">is_prime</span></span></span></span><span data-slate-leaf="true" data-offset-key="765:3"><span 
class=" gkhl-params" data-slate-object="annotation" data-annotation-key="gkann_9532915696" 
data-annotation-type="annotation"><span class=" gkhl-function" data-slate-object="annotation" 
data-annotation-key="gkann_1539179195" data-annotation-type="annotation"><span data-slate-string="true">(int 
x)</span></span></span></span><span data-slate-leaf="true" data-offset-key="765:4"><span class=" 
gkhl-function" data-slate-object="annotation" data-annotation-key="gkann_1539179195" data-annotation-type="annotation"><span 
data-slate-string="true"> </span></span></span><span data-slate-leaf="true" data-offset-key="765:5"><span 
data-slate-string="true">{</span></span></span> </div> <div class="se-0a5bf258 se-466ac03c" 
data-slate-type="code-line" data-slate-object="block" data-key="766"> <span data-slate-object="text" 
data-key="767"><span data-slate-leaf="true" data-offset-key="767:0" data-first-offset="true"><span 
data-slate-string="true"> </span></span><span data-slate-leaf="true" data-offset-key="767:1"><span 
class=" gkhl-keyword" data-slate-object="annotation" data-annotation-key="gkann_6622025894" 
data-annotation-type="annotation"><span data-slate-string="true">for</span></span></span><span 
data-slate-leaf="true" data-offset-key="767:2"><span data-slate-string="true"> (</span></span><span 
data-slate-leaf="true" data-offset-key="767:3"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_7346605076" data-annotation-type="annotation"><span data-slate-string="true">int</span></span></span><span 
data-slate-leaf="true" data-offset-key="767:4"><span data-slate-string="true"> i = </span></span><span 
data-slate-leaf="true" data-offset-key="767:5"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_7506889028" data-annotation-type="annotation"><span data-slate-string="true">2</span></span></span><span 
data-slate-leaf="true" data-offset-key="767:6"><span data-slate-string="true">; i * i &lt; 
x; i++) {</span></span></span> </div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" 
data-slate-object="block" data-key="768"> <span data-slate-object="text" data-key="769"><span 
data-slate-leaf="true" data-offset-key="769:0" data-first-offset="true"><span data-slate-string="true"> 
</span></span><span data-slate-leaf="true" data-offset-key="769:1"><span class=" gkhl-keyword" 
data-slate-object="annotation" data-annotation-key="gkann_4062082293" data-annotation-type="annotation"><span 
data-slate-string="true">if</span></span></span><span data-slate-leaf="true" data-offset-key="769:2"><span 
data-slate-string="true"> (x % i == </span></span><span data-slate-leaf="true" data-offset-key="769:3"><span 
class=" gkhl-number" data-slate-object="annotation" data-annotation-key="gkann_8613706458" 
data-annotation-type="annotation"><span data-slate-string="true">0</span></span></span><span 
data-slate-leaf="true" data-offset-key="769:4"><span data-slate-string="true">) </span></span><span 
data-slate-leaf="true" data-offset-key="769:5"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_8386923426" data-annotation-type="annotation"><span data-slate-string="true">return</span></span></span><span 
data-slate-leaf="true" data-offset-key="769:6"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="769:7"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_5428836450" data-annotation-type="annotation"><span data-slate-string="true">0</span></span></span><span 
data-slate-leaf="true" data-offset-key="769:8"><span data-slate-string="true">;</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="770"> <span data-slate-object="text" data-key="771"><span data-slate-leaf="true" 
data-offset-key="771:0" data-first-offset="true"><span data-slate-string="true"> }</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="772"> <span data-slate-object="text" data-key="773"><span data-slate-leaf="true" 
data-offset-key="773:0" data-first-offset="true"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="773:1"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_8643038402" data-annotation-type="annotation"><span data-slate-string="true">return</span></span></span><span 
data-slate-leaf="true" data-offset-key="773:2"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="773:3"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_9256213412" data-annotation-type="annotation"><span data-slate-string="true">1</span></span></span><span 
data-slate-leaf="true" data-offset-key="773:4"><span data-slate-string="true">;</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="774"> <span data-slate-object="text" data-key="775"><span data-slate-leaf="true" 
data-offset-key="775:0" data-first-offset="true"><span data-slate-string="true">}</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="776"> <span data-slate-object="text" data-key="777"></span> </div> <div class="se-0a5bf258 
se-466ac03c" data-slate-type="code-line" data-slate-object="block" data-key="778"> <span data-slate-object="text" 
data-key="779"><span data-slate-leaf="true" data-offset-key="779:0" data-first-offset="true"><span 
class=" gkhl-comment" data-slate-object="annotation" data-annotation-key="gkann_9859960280" 
data-annotation-type="annotation"><span data-slate-string="true">// 第一个测试用例</span></span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="780"> <span data-slate-object="text" data-key="781"><span data-slate-leaf="true" 
data-offset-key="781:0" data-first-offset="true"><span data-slate-string="true">TEST(test1, 
test_is_prime) {</span></span></span> </div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" 
data-slate-object="block" data-key="782"> <span data-slate-object="text" data-key="783"><span 
data-slate-leaf="true" data-offset-key="783:0" data-first-offset="true"><span data-slate-string="true"> 
EXPECT_EQ(is_prime(</span></span><span data-slate-leaf="true" data-offset-key="783:1"><span 
class=" gkhl-number" data-slate-object="annotation" data-annotation-key="gkann_1810412294" 
data-annotation-type="annotation"><span data-slate-string="true">3</span></span></span><span 
data-slate-leaf="true" data-offset-key="783:2"><span data-slate-string="true">), </span></span><span 
data-slate-leaf="true" data-offset-key="783:3"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_1501192993" data-annotation-type="annotation"><span data-slate-string="true">1</span></span></span><span 
data-slate-leaf="true" data-offset-key="783:4"><span data-slate-string="true">);</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="784"> <span data-slate-object="text" data-key="785"><span data-slate-leaf="true" 
data-offset-key="785:0" data-first-offset="true"><span data-slate-string="true"> EXPECT_EQ(is_prime(</span></span><span 
data-slate-leaf="true" data-offset-key="785:1"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_4006418347" data-annotation-type="annotation"><span data-slate-string="true">5</span></span></span><span 
data-slate-leaf="true" data-offset-key="785:2"><span data-slate-string="true">), </span></span><span 
data-slate-leaf="true" data-offset-key="785:3"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_6438101998" data-annotation-type="annotation"><span data-slate-string="true">1</span></span></span><span 
data-slate-leaf="true" data-offset-key="785:4"><span data-slate-string="true">);</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="786"> <span data-slate-object="text" data-key="787"><span data-slate-leaf="true" 
data-offset-key="787:0" data-first-offset="true"><span data-slate-string="true"> EXPECT_EQ(is_prime(</span></span><span 
data-slate-leaf="true" data-offset-key="787:1"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_8999534438" data-annotation-type="annotation"><span data-slate-string="true">7</span></span></span><span 
data-slate-leaf="true" data-offset-key="787:2"><span data-slate-string="true">), </span></span><span 
data-slate-leaf="true" data-offset-key="787:3"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_2976378111" data-annotation-type="annotation"><span data-slate-string="true">1</span></span></span><span 
data-slate-leaf="true" data-offset-key="787:4"><span data-slate-string="true">);</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="788"> <span data-slate-object="text" data-key="789"><span data-slate-leaf="true" 
data-offset-key="789:0" data-first-offset="true"><span data-slate-string="true">}</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="790"> <span data-slate-object="text" data-key="791"></span> </div> <div class="se-0a5bf258 
se-466ac03c" data-slate-type="code-line" data-slate-object="block" data-key="792"> <span data-slate-object="text" 
data-key="793"><span data-slate-leaf="true" data-offset-key="793:0" data-first-offset="true"><span 
class=" gkhl-comment" data-slate-object="annotation" data-annotation-key="gkann_3064165195" 
data-annotation-type="annotation"><span data-slate-string="true">// 第二个测试用例</span></span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="794"> <span data-slate-object="text" data-key="795"><span data-slate-leaf="true" 
data-offset-key="795:0" data-first-offset="true"><span data-slate-string="true">TEST(test2, 
test_is_prime) {</span></span></span> </div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" 
data-slate-object="block" data-key="796"> <span data-slate-object="text" data-key="797"><span 
data-slate-leaf="true" data-offset-key="797:0" data-first-offset="true"><span data-slate-string="true"> 
EXPECT_EQ(is_prime(</span></span><span data-slate-leaf="true" data-offset-key="797:1"><span 
class=" gkhl-number" data-slate-object="annotation" data-annotation-key="gkann_7780009149" 
data-annotation-type="annotation"><span data-slate-string="true">4</span></span></span><span 
data-slate-leaf="true" data-offset-key="797:2"><span data-slate-string="true">), </span></span><span 
data-slate-leaf="true" data-offset-key="797:3"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_0513140376" data-annotation-type="annotation"><span data-slate-string="true">0</span></span></span><span 
data-slate-leaf="true" data-offset-key="797:4"><span data-slate-string="true">);</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="798"> <span data-slate-object="text" data-key="799"><span data-slate-leaf="true" 
data-offset-key="799:0" data-first-offset="true"><span data-slate-string="true"> EXPECT_EQ(is_prime(</span></span><span 
data-slate-leaf="true" data-offset-key="799:1"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_5862872373" data-annotation-type="annotation"><span data-slate-string="true">0</span></span></span><span 
data-slate-leaf="true" data-offset-key="799:2"><span data-slate-string="true">), </span></span><span 
data-slate-leaf="true" data-offset-key="799:3"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_5006718732" data-annotation-type="annotation"><span data-slate-string="true">0</span></span></span><span 
data-slate-leaf="true" data-offset-key="799:4"><span data-slate-string="true">);</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="800"> <span data-slate-object="text" data-key="801"><span data-slate-leaf="true" 
data-offset-key="801:0" data-first-offset="true"><span data-slate-string="true"> EXPECT_EQ(is_prime(</span></span><span 
data-slate-leaf="true" data-offset-key="801:1"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_8987313512" data-annotation-type="annotation"><span data-slate-string="true">1</span></span></span><span 
data-slate-leaf="true" data-offset-key="801:2"><span data-slate-string="true">), </span></span><span 
data-slate-leaf="true" data-offset-key="801:3"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_6527241173" data-annotation-type="annotation"><span data-slate-string="true">0</span></span></span><span 
data-slate-leaf="true" data-offset-key="801:4"><span data-slate-string="true">);</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="802"> <span data-slate-object="text" data-key="803"><span data-slate-leaf="true" 
data-offset-key="803:0" data-first-offset="true"><span data-slate-string="true">}</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="804"> <span data-slate-object="text" data-key="805"></span> </div> <div class="se-0a5bf258 
se-466ac03c" data-slate-type="code-line" data-slate-object="block" data-key="806"> <span data-slate-object="text" 
data-key="807"><span data-slate-leaf="true" data-offset-key="807:0" data-first-offset="true"><span 
class=" gkhl-function" data-slate-object="annotation" data-annotation-key="gkann_8862725647" 
data-annotation-type="annotation"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_8380274905" data-annotation-type="annotation"><span data-slate-string="true">int</span></span></span></span><span 
data-slate-leaf="true" data-offset-key="807:1"><span class=" gkhl-function" data-slate-object="annotation" 
data-annotation-key="gkann_8862725647" data-annotation-type="annotation"><span data-slate-string="true"> 
</span></span></span><span data-slate-leaf="true" data-offset-key="807:2"><span class=" gkhl-function" 
data-slate-object="annotation" data-annotation-key="gkann_8862725647" data-annotation-type="annotation"><span 
class=" gkhl-title" data-slate-object="annotation" data-annotation-key="gkann_1320584594" data-annotation-type="annotation"><span 
data-slate-string="true">main</span></span></span></span><span data-slate-leaf="true" data-offset-key="807:3"><span 
class=" gkhl-params" data-slate-object="annotation" data-annotation-key="gkann_9002348979" 
data-annotation-type="annotation"><span class=" gkhl-function" data-slate-object="annotation" 
data-annotation-key="gkann_8862725647" data-annotation-type="annotation"><span data-slate-string="true">()</span></span></span></span><span 
data-slate-leaf="true" data-offset-key="807:4"><span class=" gkhl-function" data-slate-object="annotation" 
data-annotation-key="gkann_8862725647" data-annotation-type="annotation"><span data-slate-string="true"> 
</span></span></span><span data-slate-leaf="true" data-offset-key="807:5"><span data-slate-string="true">{</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="808"> <span data-slate-object="text" data-key="809"><span data-slate-leaf="true" 
data-offset-key="809:0" data-first-offset="true"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="809:1"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_8222518794" data-annotation-type="annotation"><span data-slate-string="true">return</span></span></span><span 
data-slate-leaf="true" data-offset-key="809:2"><span data-slate-string="true"> RUN_ALL_TESTS();</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="810"> <span data-slate-object="text" data-key="811"><span data-slate-leaf="true" 
data-offset-key="811:0" data-first-offset="true"><span data-slate-string="true">}</span></span></span> 
</div> <div class="ps__rail-x" style="width: 365px; left: 0px; bottom: 0px;"> <div class="ps__thumb-x" 
tabindex="0" style="left: 0px; width: 324px;"></div> </div> <div class="ps__rail-y" style="top: 
0px; right: 0px;"> <div class="ps__thumb-y" tabindex="0" style="top: 0px; height: 0px;"></div> 
</div> </div> </div> <div class="se-6e07012c " data-slate-type="paragraph" data-slate-object="block" 
data-key="812"> <span data-slate-object="text" data-key="813"><span data-slate-leaf="true" 
data-offset-key="813:0" data-first-offset="true"><span data-slate-string="true">我们后续的目标，就是开发一个自己的测试框架，替换掉上述代码中的 
gtest/gtest.h 头文件，使得程序具有和之前类似的功能和输出内容。整个过程，我们不会改动上述代码中的内容，这一点，请你一定要牢记。</span></span></span> 
</div> <div class="se-e01eb0f3 " data-slate-type="paragraph" data-slate-object="block" data-key="814"> 
<span data-slate-object="text" data-key="815"><span data-slate-leaf="true" data-offset-key="815:0" 
data-first-offset="true"><span data-slate-string="true">从这一课开始，我希望你能脱离我的指导和提示，可以独立完成咱们每节课的任务，这也是为了检验你这段时间以来的学习成果。当然，如果你实在想不出答案，也可以回来看看我的做法，以供参考。</span></span></span> 
</div> <h2 class="se-956675e3" data-slate-type="heading" data-slate-object="block" data-key="816"><span 
data-slate-object="text" data-key="817"><span data-slate-leaf="true" data-offset-key="817:0" 
data-first-offset="true"><span data-slate-string="true">课程小结</span></span></span></h2> <div 
class="se-c6d673ab " data-slate-type="paragraph" data-slate-object="block" data-key="818"> 
<span data-slate-object="text" data-key="819"><span data-slate-leaf="true" data-offset-key="819:0" 
data-first-offset="true"><span data-slate-string="true">最后呢，我来给你做一下今天的课程小结：</span></span></span> 
</div> <div class="se-c811fc5a" data-slate-type="list" data-slate-object="block" data-key="820"> 
<div class="se-795e4004" data-slate-type="list-line" data-slate-object="block" data-key="821"> 
<div class="se-575d8a88 se-1bd41011" data-code-line-number="1"></div> <div class="se-23e2d996"> 
<span data-slate-object="text" data-key="822"><span data-slate-leaf="true" data-offset-key="822:0" 
data-first-offset="true"><span data-slate-string="true">测试行为，不是测试工程师的专属，你应该把它作为一个开发工程师的习惯。</span></span></span> 
</div> </div> <div class="se-4b1095c2" data-slate-type="list-line" data-slate-object="block" 
data-key="823"> <div class="se-31020db9 se-a27850a3" data-code-line-number="2"></div> <div 
class="se-1b3b2db9"> <span data-slate-object="text" data-key="824"><span data-slate-leaf="true" 
data-offset-key="824:0" data-first-offset="true"><span data-slate-string="true">单元测试属于白盒测试范畴，Google 
的 gtest 就是一种辅助我们编写单元测试的框架。</span></span></span> </div> </div> <div class="se-ed3be411" data-slate-type="list-line" 
data-slate-object="block" data-key="825"> <div class="se-fbc663f1 se-ff2e5af3" data-code-line-number="3"></div> 
<div class="se-4a605ee8"> <span data-slate-object="text" data-key="826"><span data-slate-leaf="true" 
data-offset-key="826:0" data-first-offset="true"><span data-slate-string="true">gtest 中的 TEST 
本质上是一个宏，而这个宏应该展开成怎样的代码内容，还需要你认真思考，这个思考过程对你来说是很有价值的。</span></span></span> </div> </div> </div> 
<div class="se-d24074b2 " data-slate-type="paragraph" data-slate-object="block" data-key="827"> 
<span data-slate-object="text" data-key="828"><span data-slate-leaf="true" data-offset-key="828:0" 
data-first-offset="true"><span data-slate-string="true">好了，今天就到这里了，我是胡光，我们下期见。</span></span></span> 
</div> </div>', body_summary='', bundle='book', delta=0, body_format='full_html', langcode='zh-hans', 
revision_id=766 where entity_id=766 
 {executed in 2 msec}
2020-11-24 18:51:17.722 INFO  jdbc.sqltiming Line:373 - update node_revision__body set body_value='<div data-slate-editor="true" data-key="537" autocorrect="off" 
spellcheck="false" data-gramm="false" style="outline: none; white-space: pre-wrap; overflow-wrap: 
break-word;"> <div class="se-59a7fdf5 " data-slate-type="paragraph" data-slate-object="block" 
data-key="538"> <span data-slate-object="text" data-key="539"><span data-slate-leaf="true" 
data-offset-key="539:0" data-first-offset="true"><span data-slate-string="true">你好，我是胡光。经历了千难万险，我们终于来到了这次编程探险旅程的最后一个阶段“综合项目篇”。</span></span></span> 
</div> <div class="se-1e0cdf43 " data-slate-type="paragraph" data-slate-object="block" data-key="540"> 
<span data-slate-object="text" data-key="541"><span data-slate-leaf="true" data-offset-key="541:0" 
data-first-offset="true"><span data-slate-string="true">还记得开篇的时候，我跟你讲过的，要带你看看这片编程森林中最有趣的地方，不知道你感受到这份乐趣了吗？接下来的最后几节课，是我为你精心准备的，作为你编程入门学习之行的完成礼物，同时，也是对整个专栏学习内容的一个总结升华。</span></span></span> 
</div> <div class="se-a51794de " data-slate-type="paragraph" data-slate-object="block" data-key="542"> 
<span data-slate-object="text" data-key="543"><span data-slate-leaf="true" data-offset-key="543:0" 
data-first-offset="true"><span data-slate-string="true">对于本章的学习，你需要综合运用“语言基础篇”“编码能力训练篇”以及“算法数据结构篇”中所学知识，完成两个小项目，一个是“个人测试框架开发”，另一个是“自制简易计算器”。我希望通过这两个项目，打通你编程学习的“任督二脉”，让你在后续的其他编程知识学习中，可以游刃有余，乐在其中。</span></span></span> 
</div> <h2 class="se-3a85dc14" data-slate-type="heading" data-slate-object="block" data-key="544"><span 
data-slate-object="text" data-key="545"><span data-slate-leaf="true" data-offset-key="545:0" 
data-first-offset="true"><span data-slate-string="true">软件开发流程</span></span></span></h2> <div 
class="se-6400f7d2 " data-slate-type="paragraph" data-slate-object="block" data-key="546"> 
<span data-slate-object="text" data-key="547"><span data-slate-leaf="true" data-offset-key="547:0" 
data-first-offset="true"><span data-slate-string="true">在开始做项目之前呢，让我们先来了解下一般的项目开发流程。</span></span></span> 
</div> <div class="se-a790f713 " data-slate-type="paragraph" data-slate-object="block" data-key="548"> 
<span data-slate-object="text" data-key="549"><span data-slate-leaf="true" data-offset-key="549:0" 
data-first-offset="true"><span data-slate-string="true">拿传统的软件工程开发流程来说，一个软件的项目开发流程，包括：需求分析、概要设计、详细设计、编码、测试、软件交付、验收和维护。虽然包括了 
8 个阶段，可总的来说，你可以把它总结为软件开发的前中后三个部分。</span></span></span> </div> <div class="se-26a7a4d5 " data-slate-type="paragraph" 
data-slate-object="block" data-key="550"> <span data-slate-object="text" data-key="551"><span 
data-slate-leaf="true" data-offset-key="551:0" data-first-offset="true"><span data-slate-string="true">软件开发的前期，由产品经理、项目经理跟进需求，做需求分析，然后是概要设计，出一份系统的详细设计。这是项目的头部阶段，主要是从理论上验证需求可行，并且最终产出一份切实可行的软件系统的详细设计。就像我在咱们每节课中，给你留思考题，此时我的角色就是项目经理和产品经理，我首先需要分析给你留的思考题是否可做，以及跟你说明白，大致怎么做。</span></span></span> 
</div> <div class="se-12400772 " data-slate-type="paragraph" data-slate-object="block" data-key="552"> 
<span data-slate-object="text" data-key="553"><span data-slate-leaf="true" data-offset-key="553:0" 
data-first-offset="true"><span data-slate-string="true">软件开发的中期，是由技术人员负责，主要是根据系统的详细设计，进行编码和测试，把图纸上的系统实现出来。你也可以认为这是一个施工的过程。这个过程，类比到咱们的思考题上，就是你根据我的提示，具体完成每一道思考题的程序，并且对完成的程序做简单测试，以保证程序的正确性。</span></span></span> 
</div> <div class="se-e0b8703a " data-slate-type="paragraph" data-slate-object="block" data-key="554"> 
<span data-slate-object="text" data-key="555"><span data-slate-leaf="true" data-offset-key="555:0" 
data-first-offset="true"><span data-slate-string="true">软件开发的后期，由项目经理带领技术支持人员做软件交付、验收及后期维护的相关工作。这一部分，你可以理解为，是你交作业的过程，客户就是老师，你的作业要是不合格，老师就会给你退回去并提出修改建议。</span></span></span> 
</div> <div class="se-75f3aee7 " data-slate-type="paragraph" data-slate-object="block" data-key="556"> 
<span data-slate-object="text" data-key="557"><span data-slate-leaf="true" data-offset-key="557:0" 
data-first-offset="true"><span data-slate-string="true">从这个过程中，你可以看到作为技术人员，与我们相关的，就是软件开发的中期阶段，也就是编码和测试。</span></span></span> 
</div> <div class="se-1f6a8ee0 " data-slate-type="paragraph" data-slate-object="block" data-key="558"> 
<span data-slate-object="text" data-key="559"><span data-slate-leaf="true" data-offset-key="559:0" 
data-first-offset="true"><span data-slate-string="true">在之前的学习中，我们把学习任务主要放在了编码阶段，一直没有提测试阶段的事情，下面我们就来说说测试阶段主要做的事情。</span></span></span> 
</div> <h2 class="se-69caced2" data-slate-type="heading" data-slate-object="block" data-key="560"><span 
data-slate-object="text" data-key="561"><span data-slate-leaf="true" data-offset-key="561:0" 
data-first-offset="true"><span data-slate-string="true">黑盒测试与白盒测试</span></span></span></h2> 
<div class="se-55d72df6 " data-slate-type="paragraph" data-slate-object="block" data-key="562"> 
<span data-slate-object="text" data-key="563"><span data-slate-leaf="true" data-offset-key="563:0" 
data-first-offset="true"><span data-slate-string="true">关于测试阶段的测试方法，可以大致分为五种：白盒测试，黑盒测试，灰盒测试，静态测试与动态测试。</span></span></span> 
</div> <div class="se-c92ac0c1 " data-slate-type="paragraph" data-slate-object="block" data-key="564"> 
<span data-slate-object="text" data-key="565"><span data-slate-leaf="true" data-offset-key="565:0" 
data-first-offset="true"><span data-slate-string="true">看着这些测试方法的名称，你可能有点儿懵，其实你完全没有必要掌握全部的测试方法，只需要了解其中的黑盒测试和白盒测试就行，知道了这两种测试方法，就可以满足你对项目开发流程的概念认知。</span></span></span> 
</div> <div class="se-f5b3ad16 " data-slate-type="paragraph" data-slate-object="block" data-key="566"> 
<span data-slate-object="text" data-key="567"><span data-slate-leaf="true" data-offset-key="567:0" 
data-first-offset="true"><span data-slate-string="true">我们先来说说白盒测试与黑盒测试都是什么意思。首先名字里面的“盒”，其实指的就是项目中的系统，你可以理解成为是我们写的程序，它也是被测试的对象。至于这个白与黑呢，意思就是在测试过程中，是否关注代码实现逻辑。</span></span></span> 
</div> <div class="se-29cea97a " data-slate-type="paragraph" data-slate-object="block" data-key="568"> 
<span data-slate-object="text" data-key="569"><span data-slate-leaf="true" data-offset-key="569:0" 
data-first-offset="true"><span data-slate-string="true">白盒测试，就是关注代码实现逻辑，从而产生的测试行为。这种行为就像你把一个盒子打开，仔细检查其内部有无错误一样。</span></span></span> 
</div> <div class="se-d8e5bbf3 " data-slate-type="paragraph" data-slate-object="block" data-key="570"> 
<span data-slate-object="text" data-key="571"><span data-slate-leaf="true" data-offset-key="571:0" 
data-first-offset="true"><span data-slate-string="true">而不关注代码实现逻辑，而产生的测试行为，就是黑盒测试。在这个测试过程中，我们只关注系统的输出是否满足我们的要求。</span></span></span> 
</div> <div class="se-99787caf " data-slate-type="paragraph" data-slate-object="block" data-key="572"> 
<span data-slate-object="text" data-key="573"><span data-slate-leaf="true" data-offset-key="573:0" 
data-first-offset="true"><span data-slate-string="true">下面我来举几个具体的例子，你来分析一下哪一种是白盒测试，哪一种是黑盒测试。</span></span></span> 
</div> <div class="se-5898d2e6 " data-slate-type="paragraph" data-slate-object="block" data-key="574"> 
<span data-slate-object="text" data-key="575"><span data-slate-leaf="true" data-offset-key="575:0" 
data-first-offset="true"><span data-slate-string="true">场景一：你写完了一个程序，运行以后输入数据，测试程序的输出结果是否符合预期。</span></span></span> 
</div> <div class="se-b61ad761 " data-slate-type="paragraph" data-slate-object="block" data-key="576"> 
<span data-slate-object="text" data-key="577"><span data-slate-leaf="true" data-offset-key="577:0" 
data-first-offset="true"><span data-slate-string="true">场景二：当你发现，程序的结果不符合预期的时候，开始检查你程序的代码逻辑，并且针对于每一个函数功能做测试。</span></span></span> 
</div> <div class="se-aecee017 " data-slate-type="paragraph" data-slate-object="block" data-key="578"> 
<span data-slate-object="text" data-key="579"><span data-slate-leaf="true" data-offset-key="579:0" 
data-first-offset="true"><span data-slate-string="true">在场景一中，虽然程序是你写的，可你在做测试的时候，并没有关心程序内部的代码逻辑，而是关注整体程序的功能是否符合预期，所以这个属于黑盒测试。</span></span></span> 
</div> <div class="se-e01b07ba " data-slate-type="paragraph" data-slate-object="block" data-key="580"> 
<span data-slate-object="text" data-key="581"><span data-slate-leaf="true" data-offset-key="581:0" 
data-first-offset="true"><span data-slate-string="true">而在场景二中，你在测试程序的时候，关注到了程序内部的代码逻辑是否正确，并且针对代码中的函数，开始做针对性测试。由于这个测试过程关注到了代码本身的逻辑，而不单单是程序功能本身，所以，这属于白盒测试。</span></span></span> 
</div> <div class="se-433eb1cb " data-slate-type="paragraph" data-slate-object="block" data-key="582"> 
<span data-slate-object="text" data-key="583"><span data-slate-leaf="true" data-offset-key="583:0" 
data-first-offset="true"><span data-slate-string="true">通过这两个日常写程序的场景，你会发现，其实测试行为对于我们来说并不陌生，测试就是为了保证程序功能的正确性的，而所谓的黑盒测试或者白盒测试，并没有优劣之分。在实际工作中，我们也会经常综合运用这两种测试，来查找程序中存在的潜在问题。</span></span></span> 
</div> <div class="se-5e971ed4 " data-slate-type="paragraph" data-slate-object="block" data-key="584"> 
<span data-slate-object="text" data-key="585"><span data-slate-leaf="true" data-offset-key="585:0" 
data-first-offset="true"><span data-slate-string="true">总的来说，想要保证程序的正确性，必然会涉及到运用相关的测试方法。所以请你记住，测试并不是测试人员的专属，很多时候也是开发人员需要掌握的技能。</span></span></span> 
</div> <div class="se-8eedc42d " data-slate-type="paragraph" data-slate-object="block" data-key="586"> 
<span data-slate-object="text" data-key="587"><span data-slate-leaf="true" data-offset-key="587:0" 
data-first-offset="true"><span data-slate-string="true">对于开发人员来说，最基本的测试方法，就是针对自己程序中的每一个功能模块，编写对应的单元测试，而单元测试中的单元，是程序中最小的测试单位。例如 
C 语言中，一个单元就是一个函数，C++ 中的一个单元，就是一个类。</span></span></span> </div> <div class="se-42515d50 " data-slate-type="paragraph" 
data-slate-object="block" data-key="588"> <span data-slate-object="text" data-key="589"><span 
data-slate-leaf="true" data-offset-key="589:0" data-first-offset="true"><span data-slate-string="true">所以，我们说到 
C 语言的单元测试，指的是对每一个函数，编写一段测试程序。而可以辅助开发人员编写这些单元测试的程序，我们叫做“单元测试框架”，也可以简称为“测试框架”。</span></span></span> 
</div> <h2 class="se-ac6eedde" data-slate-type="heading" data-slate-object="block" data-key="590"><span 
data-slate-object="text" data-key="591"><span data-slate-leaf="true" data-offset-key="591:0" 
data-first-offset="true"><span data-slate-string="true">初识：Google 测试框架</span></span></span></h2> 
<div class="se-1ae9d200 " data-slate-type="paragraph" data-slate-object="block" data-key="592"> 
<span data-slate-object="text" data-key="593"><span data-slate-leaf="true" data-offset-key="593:0" 
data-first-offset="true"><span data-slate-string="true">好了，关于软件开发流程的基本情况呢，我讲完了，下面我们正式说说测试框架。</span></span></span> 
</div> <div class="se-c5b9207b " data-slate-type="paragraph" data-slate-object="block" data-key="594"> 
<span data-slate-object="text" data-key="595"><span data-slate-leaf="true" data-offset-key="595:0" 
data-first-offset="true"><span data-slate-string="true">咱们要完成的第一个项目，就是编写一个简易的 C 语言测试框架。不过在写这个 
C 语言测试框架之前，咱们先看看之前的大厂或大牛们是怎么做的，这样，我们在写自己的测试框架的时候，也能有所借鉴。</span></span></span> </div> <div class="se-32f123fb 
" data-slate-type="paragraph" data-slate-object="block" data-key="596"> <span data-slate-object="text" 
data-key="597"><span data-slate-leaf="true" data-offset-key="597:0" data-first-offset="true"><span 
data-slate-string="true">今天，我要带你认识的是一个由 Google 开发的单元测试框架 Google Test，我们一般称它为 gtest。</span></span></span> 
</div> <div class="se-c5998f27 " data-slate-type="paragraph" data-slate-object="block" data-key="598"> 
<span data-slate-object="text" data-key="599"><span data-slate-leaf="true" data-offset-key="599:0" 
data-first-offset="true"><span data-slate-string="true">关于如何安装 Google 测试框架呢，由于大家的编程环境不同，所以，你可以按照网上其他资料中给出的安装教程，结合自己的编程环境，准备好 
gtest 的相关环境。</span></span></span> </div> <div class="se-af5f13dc " data-slate-type="paragraph" 
data-slate-object="block" data-key="600"> <span data-slate-object="text" data-key="601"><span 
data-slate-leaf="true" data-offset-key="601:0" data-first-offset="true"><span data-slate-string="true">gtest 
是一个 C++ 的单元测试框架，如果你不方便准备 gtest 相关环境，也不碍事儿，你可以看我下面的讲解。我的环境中，已经安装好了 gtest 的相关模块，为了简单说明 gtest 
的使用与运行效果，给你准备了如下代码：</span></span></span> </div> <div class="se-ce9e866c se-063c6cf6" data-slate-type="pre" 
data-slate-object="block" data-key="602" data-code-language="cpp"> <div class="se-b646f87e 
se-b16725ce"> <span></span> </div> <div class="se-4a9d2fcc"> <div class="se-2e222aa2 se-a7425cee" 
data-code-line-number="1"></div> <div class="se-2e222aa2 se-a7425cee" data-code-line-number="2"></div> 
<div class="se-2e222aa2 se-a7425cee" data-code-line-number="3"></div> <div class="se-2e222aa2 
se-a7425cee" data-code-line-number="4"></div> <div class="se-2e222aa2 se-a7425cee" data-code-line-number="5"></div> 
<div class="se-2e222aa2 se-a7425cee" data-code-line-number="6"></div> <div class="se-2e222aa2 
se-a7425cee" data-code-line-number="7"></div> <div class="se-2e222aa2 se-a7425cee" data-code-line-number="8"></div> 
<div class="se-2e222aa2 se-a7425cee" data-code-line-number="9"></div> <div class="se-2e222aa2 
se-a7425cee" data-code-line-number="10"></div> <div class="se-2e222aa2 se-a7425cee" data-code-line-number="11"></div> 
<div class="se-2e222aa2 se-a7425cee" data-code-line-number="12"></div> <div class="se-2e222aa2 
se-a7425cee" data-code-line-number="13"></div> <div class="se-2e222aa2 se-a7425cee" data-code-line-number="14"></div> 
<div class="se-2e222aa2 se-a7425cee" data-code-line-number="15"></div> <div class="se-2e222aa2 
se-a7425cee" data-code-line-number="16"></div> <div class="se-2e222aa2 se-a7425cee" data-code-line-number="17"></div> 
<div class="se-2e222aa2 se-a7425cee" data-code-line-number="18"></div> <div class="se-2e222aa2 
se-a7425cee" data-code-line-number="19"></div> <div class="se-2e222aa2 se-a7425cee" data-code-line-number="20"></div> 
<div class="se-2e222aa2 se-a7425cee" data-code-line-number="21"></div> <div class="se-2e222aa2 
se-a7425cee" data-code-line-number="22"></div> <div class="se-2e222aa2 se-a7425cee" data-code-line-number="23"></div> 
<div class="se-2e222aa2 se-a7425cee" data-code-line-number="24"></div> <div class="se-2e222aa2 
se-a7425cee" data-code-line-number="25"></div> <div class="se-2e222aa2 se-a7425cee" data-code-line-number="26"></div> 
<div class="se-2e222aa2 se-a7425cee" data-code-line-number="27"></div> <div class="se-2e222aa2 
se-a7425cee" data-code-line-number="28"></div> </div> <div class="se-82f7969e ps"> <div class="se-0a5bf258 
se-466ac03c" data-slate-type="code-line" data-slate-object="block" data-key="603"> <span data-slate-object="text" 
data-key="604"><span data-slate-leaf="true" data-offset-key="604:0" data-first-offset="true"><span 
class=" gkhl-meta" data-slate-object="annotation" data-annotation-key="gkann_2888359838" data-annotation-type="annotation"><span 
data-slate-string="true">#include &lt;stdio.h&gt;</span></span></span></span> </div> <div class="se-0a5bf258 
se-466ac03c" data-slate-type="code-line" data-slate-object="block" data-key="605"> <span data-slate-object="text" 
data-key="606"><span data-slate-leaf="true" data-offset-key="606:0" data-first-offset="true"><span 
class=" gkhl-meta" data-slate-object="annotation" data-annotation-key="gkann_9813314209" data-annotation-type="annotation"><span 
data-slate-string="true">#include &lt;gtest/gtest.h&gt;</span></span></span></span> </div> 
<div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="607"> <span data-slate-object="text" data-key="608"></span> </div> <div class="se-0a5bf258 
se-466ac03c" data-slate-type="code-line" data-slate-object="block" data-key="609"> <span data-slate-object="text" 
data-key="610"><span data-slate-leaf="true" data-offset-key="610:0" data-first-offset="true"><span 
class=" gkhl-comment" data-slate-object="annotation" data-annotation-key="gkann_1323319169" 
data-annotation-type="annotation"><span data-slate-string="true">// 判断一个数字 x 是否是素数</span></span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="611"> <span data-slate-object="text" data-key="612"><span data-slate-leaf="true" 
data-offset-key="612:0" data-first-offset="true"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_4978906452" data-annotation-type="annotation"><span class=" gkhl-function" 
data-slate-object="annotation" data-annotation-key="gkann_1905887025" data-annotation-type="annotation"><span 
data-slate-string="true">int</span></span></span></span><span data-slate-leaf="true" data-offset-key="612:1"><span 
class=" gkhl-function" data-slate-object="annotation" data-annotation-key="gkann_1905887025" 
data-annotation-type="annotation"><span data-slate-string="true"> </span></span></span><span 
data-slate-leaf="true" data-offset-key="612:2"><span class=" gkhl-title" data-slate-object="annotation" 
data-annotation-key="gkann_3658859673" data-annotation-type="annotation"><span class=" gkhl-function" 
data-slate-object="annotation" data-annotation-key="gkann_1905887025" data-annotation-type="annotation"><span 
data-slate-string="true">is_prime</span></span></span></span><span data-slate-leaf="true" data-offset-key="612:3"><span 
class=" gkhl-function" data-slate-object="annotation" data-annotation-key="gkann_1905887025" 
data-annotation-type="annotation"><span class=" gkhl-params" data-slate-object="annotation" 
data-annotation-key="gkann_5478039416" data-annotation-type="annotation"><span data-slate-string="true">(int 
x)</span></span></span></span><span data-slate-leaf="true" data-offset-key="612:4"><span class=" 
gkhl-function" data-slate-object="annotation" data-annotation-key="gkann_1905887025" data-annotation-type="annotation"><span 
data-slate-string="true"> </span></span></span><span data-slate-leaf="true" data-offset-key="612:5"><span 
data-slate-string="true">{</span></span></span> </div> <div class="se-0a5bf258 se-466ac03c" 
data-slate-type="code-line" data-slate-object="block" data-key="613"> <span data-slate-object="text" 
data-key="614"><span data-slate-leaf="true" data-offset-key="614:0" data-first-offset="true"><span 
data-slate-string="true"> </span></span><span data-slate-leaf="true" data-offset-key="614:1"><span 
class=" gkhl-keyword" data-slate-object="annotation" data-annotation-key="gkann_5932499634" 
data-annotation-type="annotation"><span data-slate-string="true">for</span></span></span><span 
data-slate-leaf="true" data-offset-key="614:2"><span data-slate-string="true"> (</span></span><span 
data-slate-leaf="true" data-offset-key="614:3"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_8543111314" data-annotation-type="annotation"><span data-slate-string="true">int</span></span></span><span 
data-slate-leaf="true" data-offset-key="614:4"><span data-slate-string="true"> i = </span></span><span 
data-slate-leaf="true" data-offset-key="614:5"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_9910503383" data-annotation-type="annotation"><span data-slate-string="true">2</span></span></span><span 
data-slate-leaf="true" data-offset-key="614:6"><span data-slate-string="true">; i * i &lt; 
x; i++) {</span></span></span> </div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" 
data-slate-object="block" data-key="615"> <span data-slate-object="text" data-key="616"><span 
data-slate-leaf="true" data-offset-key="616:0" data-first-offset="true"><span data-slate-string="true"> 
</span></span><span data-slate-leaf="true" data-offset-key="616:1"><span class=" gkhl-keyword" 
data-slate-object="annotation" data-annotation-key="gkann_3582274643" data-annotation-type="annotation"><span 
data-slate-string="true">if</span></span></span><span data-slate-leaf="true" data-offset-key="616:2"><span 
data-slate-string="true"> (x % i == </span></span><span data-slate-leaf="true" data-offset-key="616:3"><span 
class=" gkhl-number" data-slate-object="annotation" data-annotation-key="gkann_8034142020" 
data-annotation-type="annotation"><span data-slate-string="true">0</span></span></span><span 
data-slate-leaf="true" data-offset-key="616:4"><span data-slate-string="true">) </span></span><span 
data-slate-leaf="true" data-offset-key="616:5"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_8213505282" data-annotation-type="annotation"><span data-slate-string="true">return</span></span></span><span 
data-slate-leaf="true" data-offset-key="616:6"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="616:7"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_1432083065" data-annotation-type="annotation"><span data-slate-string="true">0</span></span></span><span 
data-slate-leaf="true" data-offset-key="616:8"><span data-slate-string="true">;</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="617"> <span data-slate-object="text" data-key="618"><span data-slate-leaf="true" 
data-offset-key="618:0" data-first-offset="true"><span data-slate-string="true"> }</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="619"> <span data-slate-object="text" data-key="620"><span data-slate-leaf="true" 
data-offset-key="620:0" data-first-offset="true"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="620:1"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_0216158094" data-annotation-type="annotation"><span data-slate-string="true">return</span></span></span><span 
data-slate-leaf="true" data-offset-key="620:2"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="620:3"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_2672042395" data-annotation-type="annotation"><span data-slate-string="true">1</span></span></span><span 
data-slate-leaf="true" data-offset-key="620:4"><span data-slate-string="true">;</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="621"> <span data-slate-object="text" data-key="622"><span data-slate-leaf="true" 
data-offset-key="622:0" data-first-offset="true"><span data-slate-string="true">}</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="623"> <span data-slate-object="text" data-key="624"></span> </div> <div class="se-0a5bf258 
se-466ac03c" data-slate-type="code-line" data-slate-object="block" data-key="625"> <span data-slate-object="text" 
data-key="626"><span data-slate-leaf="true" data-offset-key="626:0" data-first-offset="true"><span 
class=" gkhl-comment" data-slate-object="annotation" data-annotation-key="gkann_3250463492" 
data-annotation-type="annotation"><span data-slate-string="true">// 第一个测试用例</span></span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="627"> <span data-slate-object="text" data-key="628"><span data-slate-leaf="true" 
data-offset-key="628:0" data-first-offset="true"><span data-slate-string="true">TEST(test1, 
test_is_prime) {</span></span></span> </div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" 
data-slate-object="block" data-key="629"> <span data-slate-object="text" data-key="630"><span 
data-slate-leaf="true" data-offset-key="630:0" data-first-offset="true"><span data-slate-string="true"> 
EXPECT_EQ(is_prime(</span></span><span data-slate-leaf="true" data-offset-key="630:1"><span 
class=" gkhl-number" data-slate-object="annotation" data-annotation-key="gkann_4636394786" 
data-annotation-type="annotation"><span data-slate-string="true">3</span></span></span><span 
data-slate-leaf="true" data-offset-key="630:2"><span data-slate-string="true">), </span></span><span 
data-slate-leaf="true" data-offset-key="630:3"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_4852241953" data-annotation-type="annotation"><span data-slate-string="true">1</span></span></span><span 
data-slate-leaf="true" data-offset-key="630:4"><span data-slate-string="true">);</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="631"> <span data-slate-object="text" data-key="632"><span data-slate-leaf="true" 
data-offset-key="632:0" data-first-offset="true"><span data-slate-string="true"> EXPECT_EQ(is_prime(</span></span><span 
data-slate-leaf="true" data-offset-key="632:1"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_1044878818" data-annotation-type="annotation"><span data-slate-string="true">5</span></span></span><span 
data-slate-leaf="true" data-offset-key="632:2"><span data-slate-string="true">), </span></span><span 
data-slate-leaf="true" data-offset-key="632:3"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_0438185403" data-annotation-type="annotation"><span data-slate-string="true">1</span></span></span><span 
data-slate-leaf="true" data-offset-key="632:4"><span data-slate-string="true">);</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="633"> <span data-slate-object="text" data-key="634"><span data-slate-leaf="true" 
data-offset-key="634:0" data-first-offset="true"><span data-slate-string="true"> EXPECT_EQ(is_prime(</span></span><span 
data-slate-leaf="true" data-offset-key="634:1"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_8548952285" data-annotation-type="annotation"><span data-slate-string="true">7</span></span></span><span 
data-slate-leaf="true" data-offset-key="634:2"><span data-slate-string="true">), </span></span><span 
data-slate-leaf="true" data-offset-key="634:3"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_0873726294" data-annotation-type="annotation"><span data-slate-string="true">1</span></span></span><span 
data-slate-leaf="true" data-offset-key="634:4"><span data-slate-string="true">);</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="635"> <span data-slate-object="text" data-key="636"><span data-slate-leaf="true" 
data-offset-key="636:0" data-first-offset="true"><span data-slate-string="true">}</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="637"> <span data-slate-object="text" data-key="638"></span> </div> <div class="se-0a5bf258 
se-466ac03c" data-slate-type="code-line" data-slate-object="block" data-key="639"> <span data-slate-object="text" 
data-key="640"><span data-slate-leaf="true" data-offset-key="640:0" data-first-offset="true"><span 
class=" gkhl-comment" data-slate-object="annotation" data-annotation-key="gkann_8126150786" 
data-annotation-type="annotation"><span data-slate-string="true">// 第二个测试用例</span></span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="641"> <span data-slate-object="text" data-key="642"><span data-slate-leaf="true" 
data-offset-key="642:0" data-first-offset="true"><span data-slate-string="true">TEST(test2, 
test_is_prime) {</span></span></span> </div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" 
data-slate-object="block" data-key="643"> <span data-slate-object="text" data-key="644"><span 
data-slate-leaf="true" data-offset-key="644:0" data-first-offset="true"><span data-slate-string="true"> 
EXPECT_EQ(is_prime(</span></span><span data-slate-leaf="true" data-offset-key="644:1"><span 
class=" gkhl-number" data-slate-object="annotation" data-annotation-key="gkann_9624225206" 
data-annotation-type="annotation"><span data-slate-string="true">4</span></span></span><span 
data-slate-leaf="true" data-offset-key="644:2"><span data-slate-string="true">), </span></span><span 
data-slate-leaf="true" data-offset-key="644:3"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_3746635754" data-annotation-type="annotation"><span data-slate-string="true">0</span></span></span><span 
data-slate-leaf="true" data-offset-key="644:4"><span data-slate-string="true">);</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="645"> <span data-slate-object="text" data-key="646"><span data-slate-leaf="true" 
data-offset-key="646:0" data-first-offset="true"><span data-slate-string="true"> EXPECT_EQ(is_prime(</span></span><span 
data-slate-leaf="true" data-offset-key="646:1"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_2163431786" data-annotation-type="annotation"><span data-slate-string="true">0</span></span></span><span 
data-slate-leaf="true" data-offset-key="646:2"><span data-slate-string="true">), </span></span><span 
data-slate-leaf="true" data-offset-key="646:3"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_7267314659" data-annotation-type="annotation"><span data-slate-string="true">0</span></span></span><span 
data-slate-leaf="true" data-offset-key="646:4"><span data-slate-string="true">);</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="647"> <span data-slate-object="text" data-key="648"><span data-slate-leaf="true" 
data-offset-key="648:0" data-first-offset="true"><span data-slate-string="true"> EXPECT_EQ(is_prime(</span></span><span 
data-slate-leaf="true" data-offset-key="648:1"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_3154838933" data-annotation-type="annotation"><span data-slate-string="true">1</span></span></span><span 
data-slate-leaf="true" data-offset-key="648:2"><span data-slate-string="true">), </span></span><span 
data-slate-leaf="true" data-offset-key="648:3"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_1575714748" data-annotation-type="annotation"><span data-slate-string="true">0</span></span></span><span 
data-slate-leaf="true" data-offset-key="648:4"><span data-slate-string="true">);</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="649"> <span data-slate-object="text" data-key="650"><span data-slate-leaf="true" 
data-offset-key="650:0" data-first-offset="true"><span data-slate-string="true">}</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="651"> <span data-slate-object="text" data-key="652"></span> </div> <div class="se-0a5bf258 
se-466ac03c" data-slate-type="code-line" data-slate-object="block" data-key="653"> <span data-slate-object="text" 
data-key="654"><span data-slate-leaf="true" data-offset-key="654:0" data-first-offset="true"><span 
class=" gkhl-function" data-slate-object="annotation" data-annotation-key="gkann_9777611051" 
data-annotation-type="annotation"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_1990876923" data-annotation-type="annotation"><span data-slate-string="true">int</span></span></span></span><span 
data-slate-leaf="true" data-offset-key="654:1"><span class=" gkhl-function" data-slate-object="annotation" 
data-annotation-key="gkann_9777611051" data-annotation-type="annotation"><span data-slate-string="true"> 
</span></span></span><span data-slate-leaf="true" data-offset-key="654:2"><span class=" gkhl-function" 
data-slate-object="annotation" data-annotation-key="gkann_9777611051" data-annotation-type="annotation"><span 
class=" gkhl-title" data-slate-object="annotation" data-annotation-key="gkann_6035193340" data-annotation-type="annotation"><span 
data-slate-string="true">main</span></span></span></span><span data-slate-leaf="true" data-offset-key="654:3"><span 
class=" gkhl-function" data-slate-object="annotation" data-annotation-key="gkann_9777611051" 
data-annotation-type="annotation"><span class=" gkhl-params" data-slate-object="annotation" 
data-annotation-key="gkann_6248266505" data-annotation-type="annotation"><span data-slate-string="true">()</span></span></span></span><span 
data-slate-leaf="true" data-offset-key="654:4"><span class=" gkhl-function" data-slate-object="annotation" 
data-annotation-key="gkann_9777611051" data-annotation-type="annotation"><span data-slate-string="true"> 
</span></span></span><span data-slate-leaf="true" data-offset-key="654:5"><span data-slate-string="true">{</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="655"> <span data-slate-object="text" data-key="656"><span data-slate-leaf="true" 
data-offset-key="656:0" data-first-offset="true"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="656:1"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_1258347206" data-annotation-type="annotation"><span data-slate-string="true">return</span></span></span><span 
data-slate-leaf="true" data-offset-key="656:2"><span data-slate-string="true"> RUN_ALL_TESTS();</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="657"> <span data-slate-object="text" data-key="658"><span data-slate-leaf="true" 
data-offset-key="658:0" data-first-offset="true"><span data-slate-string="true">}</span></span></span> 
</div> <div class="ps__rail-x" style="left: 0px; bottom: 0px;"> <div class="ps__thumb-x" tabindex="0" 
style="left: 0px; width: 0px;"></div> </div> <div class="ps__rail-y" style="top: 0px; right: 
0px;"> <div class="ps__thumb-y" tabindex="0" style="top: 0px; height: 0px;"></div> </div> </div> 
</div> <div class="se-5dcc7685 " data-slate-type="paragraph" data-slate-object="block" data-key="659"> 
<span data-slate-object="text" data-key="660"><span data-slate-leaf="true" data-offset-key="660:0" 
data-first-offset="true"><span data-slate-string="true">就是一份简单的 gtest 的使用代码。代码中，包含了 gtest/gtest.h 
头文件以后，程序就具备了一些魔法效果，下面让我来给你具体讲一讲。</span></span></span> </div> <div class="se-1d05bf00 " data-slate-type="paragraph" 
data-slate-object="block" data-key="661"> <span data-slate-object="text" data-key="662"><span 
data-slate-leaf="true" data-offset-key="662:0" data-first-offset="true"><span data-slate-string="true">从程序的结构上来说，先是一个 
is_prime 函数，接下来是两段以 TEST 作为开头的代码（这两段代码的作用，咱们稍后做介绍），最后是一个主函数。主函数中原本 return 0 的位置，替换成了 return 
RUN_ALL_TESTS()，也就是说，主函数中只执行了一个 RUN_ALL_TESTS 函数，而这个 RUN_ALL_TESTS 函数有什么作用呢？咱们来看一下程序的具体输出：</span></span></span> 
</div> <div class="se-3dcb1fda se-0b416c31" data-slate-type="pre" data-slate-object="block" 
data-key="663" data-code-language="sql"> <div class="se-82931e8d se-0607f66e"> <span></span> 
</div> <div class="se-00671d52"> <div class="se-a47c4033 se-88df8a17" data-code-line-number="1"></div> 
<div class="se-a47c4033 se-88df8a17" data-code-line-number="2"></div> <div class="se-a47c4033 
se-88df8a17" data-code-line-number="3"></div> <div class="se-a47c4033 se-88df8a17" data-code-line-number="4"></div> 
<div class="se-a47c4033 se-88df8a17" data-code-line-number="5"></div> <div class="se-a47c4033 
se-88df8a17" data-code-line-number="6"></div> <div class="se-a47c4033 se-88df8a17" data-code-line-number="7"></div> 
<div class="se-a47c4033 se-88df8a17" data-code-line-number="8"></div> <div class="se-a47c4033 
se-88df8a17" data-code-line-number="9"></div> <div class="se-a47c4033 se-88df8a17" data-code-line-number="10"></div> 
<div class="se-a47c4033 se-88df8a17" data-code-line-number="11"></div> <div class="se-a47c4033 
se-88df8a17" data-code-line-number="12"></div> <div class="se-a47c4033 se-88df8a17" data-code-line-number="13"></div> 
<div class="se-a47c4033 se-88df8a17" data-code-line-number="14"></div> <div class="se-a47c4033 
se-88df8a17" data-code-line-number="15"></div> <div class="se-a47c4033 se-88df8a17" data-code-line-number="16"></div> 
<div class="se-a47c4033 se-88df8a17" data-code-line-number="17"></div> <div class="se-a47c4033 
se-88df8a17" data-code-line-number="18"></div> <div class="se-a47c4033 se-88df8a17" data-code-line-number="19"></div> 
<div class="se-a47c4033 se-88df8a17" data-code-line-number="20"></div> <div class="se-a47c4033 
se-88df8a17" data-code-line-number="21"></div> <div class="se-a47c4033 se-88df8a17" data-code-line-number="22"></div> 
<div class="se-a47c4033 se-88df8a17" data-code-line-number="23"></div> <div class="se-a47c4033 
se-88df8a17" data-code-line-number="24"></div> <div class="se-a47c4033 se-88df8a17" data-code-line-number="25"></div> 
<div class="se-a47c4033 se-88df8a17" data-code-line-number="26"></div> <div class="se-a47c4033 
se-88df8a17" data-code-line-number="27"></div> <div class="se-a47c4033 se-88df8a17" data-code-line-number="28"></div> 
<div class="se-a47c4033 se-88df8a17" data-code-line-number="29"></div> <div class="se-a47c4033 
se-88df8a17" data-code-line-number="30"></div> <div class="se-a47c4033 se-88df8a17" data-code-line-number="31"></div> 
</div> <div class="se-d0513ae0 ps ps--active-x"> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" 
data-slate-object="block" data-key="664"> <span data-slate-object="text" data-key="665"><span 
data-slate-leaf="true" data-offset-key="665:0" data-first-offset="true"><span data-slate-string="true">[==========] 
Running 2 tests from 1 test suite.</span></span></span> </div> <div class="se-0a5bf258 se-466ac03c" 
data-slate-type="code-line" data-slate-object="block" data-key="666"> <span data-slate-object="text" 
data-key="667"><span data-slate-leaf="true" data-offset-key="667:0" data-first-offset="true"><span 
data-slate-string="true">[</span></span><span data-slate-leaf="true" data-offset-key="667:1"><span 
class=" gkhl-comment" data-slate-object="annotation" data-annotation-key="gkann_9338193917" 
data-annotation-type="annotation"><span data-slate-string="true">----------] Global test environment 
set-up.</span></span></span></span> </div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" 
data-slate-object="block" data-key="668"> <span data-slate-object="text" data-key="669"><span 
data-slate-leaf="true" data-offset-key="669:0" data-first-offset="true"><span data-slate-string="true">[</span></span><span 
data-slate-leaf="true" data-offset-key="669:1"><span class=" gkhl-comment" data-slate-object="annotation" 
data-annotation-key="gkann_2445488511" data-annotation-type="annotation"><span data-slate-string="true">----------] 
2 tests from test_is_prime</span></span></span></span> </div> <div class="se-0a5bf258 se-466ac03c" 
data-slate-type="code-line" data-slate-object="block" data-key="670"> <span data-slate-object="text" 
data-key="671"><span data-slate-leaf="true" data-offset-key="671:0" data-first-offset="true"><span 
data-slate-string="true">[ RUN ] test_is_prime.test1</span></span></span> </div> <div class="se-0a5bf258 
se-466ac03c" data-slate-type="code-line" data-slate-object="block" data-key="672"> <span data-slate-object="text" 
data-key="673"><span data-slate-leaf="true" data-offset-key="673:0" data-first-offset="true"><span 
data-slate-string="true">[ OK ] test_is_prime.test1 (1 ms)</span></span></span> </div> <div 
class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" data-key="674"> 
<span data-slate-object="text" data-key="675"><span data-slate-leaf="true" data-offset-key="675:0" 
data-first-offset="true"><span data-slate-string="true">[ RUN ] test_is_prime.test2</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="676"> <span data-slate-object="text" data-key="677"><span data-slate-leaf="true" 
data-offset-key="677:0" data-first-offset="true"><span data-slate-string="true">gtest_test.cpp:25: 
Failure</span></span></span> </div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" 
data-slate-object="block" data-key="678"> <span data-slate-object="text" data-key="679"><span 
data-slate-leaf="true" data-offset-key="679:0" data-first-offset="true"><span data-slate-string="true">Expected 
equality of these </span></span><span data-slate-leaf="true" data-offset-key="679:1"><span 
class=" gkhl-keyword" data-slate-object="annotation" data-annotation-key="gkann_2697446360" 
data-annotation-type="annotation"><span data-slate-string="true">values</span></span></span><span 
data-slate-leaf="true" data-offset-key="679:2"><span data-slate-string="true">:</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="680"> <span data-slate-object="text" data-key="681"><span data-slate-leaf="true" 
data-offset-key="681:0" data-first-offset="true"><span data-slate-string="true"> is_prime(</span></span><span 
data-slate-leaf="true" data-offset-key="681:1"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_7901960921" data-annotation-type="annotation"><span data-slate-string="true">4</span></span></span><span 
data-slate-leaf="true" data-offset-key="681:2"><span data-slate-string="true">)</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="682"> <span data-slate-object="text" data-key="683"><span data-slate-leaf="true" 
data-offset-key="683:0" data-first-offset="true"><span data-slate-string="true"> Which </span></span><span 
data-slate-leaf="true" data-offset-key="683:1"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_4186932980" data-annotation-type="annotation"><span data-slate-string="true">is</span></span></span><span 
data-slate-leaf="true" data-offset-key="683:2"><span data-slate-string="true">: </span></span><span 
data-slate-leaf="true" data-offset-key="683:3"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_7629413258" data-annotation-type="annotation"><span data-slate-string="true">1</span></span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="684"> <span data-slate-object="text" data-key="685"><span data-slate-leaf="true" 
data-offset-key="685:0" data-first-offset="true"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="685:1"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_4700919532" data-annotation-type="annotation"><span data-slate-string="true">0</span></span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="686"> <span data-slate-object="text" data-key="687"><span data-slate-leaf="true" 
data-offset-key="687:0" data-first-offset="true"><span data-slate-string="true">gtest_test.cpp:</span></span><span 
data-slate-leaf="true" data-offset-key="687:1"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_2360638861" data-annotation-type="annotation"><span data-slate-string="true">26</span></span></span><span 
data-slate-leaf="true" data-offset-key="687:2"><span data-slate-string="true">: </span></span><span 
data-slate-leaf="true" data-offset-key="687:3"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_2228442991" data-annotation-type="annotation"><span data-slate-string="true">Failure</span></span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="688"> <span data-slate-object="text" data-key="689"><span data-slate-leaf="true" 
data-offset-key="689:0" data-first-offset="true"><span data-slate-string="true">Expected equality 
</span></span><span data-slate-leaf="true" data-offset-key="689:1"><span class=" gkhl-keyword" 
data-slate-object="annotation" data-annotation-key="gkann_7673918771" data-annotation-type="annotation"><span 
data-slate-string="true">of</span></span></span><span data-slate-leaf="true" data-offset-key="689:2"><span 
data-slate-string="true"> these </span></span><span data-slate-leaf="true" data-offset-key="689:3"><span 
class=" gkhl-keyword" data-slate-object="annotation" data-annotation-key="gkann_9770576268" 
data-annotation-type="annotation"><span data-slate-string="true">values</span></span></span><span 
data-slate-leaf="true" data-offset-key="689:4"><span data-slate-string="true">:</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="690"> <span data-slate-object="text" data-key="691"><span data-slate-leaf="true" 
data-offset-key="691:0" data-first-offset="true"><span data-slate-string="true"> is_prime(</span></span><span 
data-slate-leaf="true" data-offset-key="691:1"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_1692979364" data-annotation-type="annotation"><span data-slate-string="true">0</span></span></span><span 
data-slate-leaf="true" data-offset-key="691:2"><span data-slate-string="true">)</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="692"> <span data-slate-object="text" data-key="693"><span data-slate-leaf="true" 
data-offset-key="693:0" data-first-offset="true"><span data-slate-string="true"> Which </span></span><span 
data-slate-leaf="true" data-offset-key="693:1"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_5522461066" data-annotation-type="annotation"><span data-slate-string="true">is</span></span></span><span 
data-slate-leaf="true" data-offset-key="693:2"><span data-slate-string="true">: </span></span><span 
data-slate-leaf="true" data-offset-key="693:3"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_8379482510" data-annotation-type="annotation"><span data-slate-string="true">1</span></span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="694"> <span data-slate-object="text" data-key="695"><span data-slate-leaf="true" 
data-offset-key="695:0" data-first-offset="true"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="695:1"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_7373689967" data-annotation-type="annotation"><span data-slate-string="true">0</span></span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="696"> <span data-slate-object="text" data-key="697"><span data-slate-leaf="true" 
data-offset-key="697:0" data-first-offset="true"><span data-slate-string="true">gtest_test.cpp:</span></span><span 
data-slate-leaf="true" data-offset-key="697:1"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_2608361373" data-annotation-type="annotation"><span data-slate-string="true">27</span></span></span><span 
data-slate-leaf="true" data-offset-key="697:2"><span data-slate-string="true">: </span></span><span 
data-slate-leaf="true" data-offset-key="697:3"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_8703289128" data-annotation-type="annotation"><span data-slate-string="true">Failure</span></span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="698"> <span data-slate-object="text" data-key="699"><span data-slate-leaf="true" 
data-offset-key="699:0" data-first-offset="true"><span data-slate-string="true">Expected equality 
</span></span><span data-slate-leaf="true" data-offset-key="699:1"><span class=" gkhl-keyword" 
data-slate-object="annotation" data-annotation-key="gkann_2466607811" data-annotation-type="annotation"><span 
data-slate-string="true">of</span></span></span><span data-slate-leaf="true" data-offset-key="699:2"><span 
data-slate-string="true"> these </span></span><span data-slate-leaf="true" data-offset-key="699:3"><span 
class=" gkhl-keyword" data-slate-object="annotation" data-annotation-key="gkann_7608086010" 
data-annotation-type="annotation"><span data-slate-string="true">values</span></span></span><span 
data-slate-leaf="true" data-offset-key="699:4"><span data-slate-string="true">:</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="700"> <span data-slate-object="text" data-key="701"><span data-slate-leaf="true" 
data-offset-key="701:0" data-first-offset="true"><span data-slate-string="true"> is_prime(</span></span><span 
data-slate-leaf="true" data-offset-key="701:1"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_1692616250" data-annotation-type="annotation"><span data-slate-string="true">1</span></span></span><span 
data-slate-leaf="true" data-offset-key="701:2"><span data-slate-string="true">)</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="702"> <span data-slate-object="text" data-key="703"><span data-slate-leaf="true" 
data-offset-key="703:0" data-first-offset="true"><span data-slate-string="true"> Which </span></span><span 
data-slate-leaf="true" data-offset-key="703:1"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_6468536578" data-annotation-type="annotation"><span data-slate-string="true">is</span></span></span><span 
data-slate-leaf="true" data-offset-key="703:2"><span data-slate-string="true">: </span></span><span 
data-slate-leaf="true" data-offset-key="703:3"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_8371689200" data-annotation-type="annotation"><span data-slate-string="true">1</span></span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="704"> <span data-slate-object="text" data-key="705"><span data-slate-leaf="true" 
data-offset-key="705:0" data-first-offset="true"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="705:1"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_4006247795" data-annotation-type="annotation"><span data-slate-string="true">0</span></span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="706"> <span data-slate-object="text" data-key="707"><span data-slate-leaf="true" 
data-offset-key="707:0" data-first-offset="true"><span data-slate-string="true">[ </span></span><span 
data-slate-leaf="true" data-offset-key="707:1"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_0386349658" data-annotation-type="annotation"><span data-slate-string="true">FAILED</span></span></span><span 
data-slate-leaf="true" data-offset-key="707:2"><span data-slate-string="true"> ] test_is_prime.test2 
(</span></span><span data-slate-leaf="true" data-offset-key="707:3"><span class=" gkhl-number" 
data-slate-object="annotation" data-annotation-key="gkann_0525922363" data-annotation-type="annotation"><span 
data-slate-string="true">0</span></span></span><span data-slate-leaf="true" data-offset-key="707:4"><span 
data-slate-string="true"> ms)</span></span></span> </div> <div class="se-0a5bf258 se-466ac03c" 
data-slate-type="code-line" data-slate-object="block" data-key="708"> <span data-slate-object="text" 
data-key="709"><span data-slate-leaf="true" data-offset-key="709:0" data-first-offset="true"><span 
data-slate-string="true">[</span></span><span data-slate-leaf="true" data-offset-key="709:1"><span 
class=" gkhl-comment" data-slate-object="annotation" data-annotation-key="gkann_3250743962" 
data-annotation-type="annotation"><span data-slate-string="true">----------] 2 tests from test_is_prime 
(1 ms total)</span></span></span></span> </div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" 
data-slate-object="block" data-key="710"> <span data-slate-object="text" data-key="711"></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="712"> <span data-slate-object="text" data-key="713"><span data-slate-leaf="true" 
data-offset-key="713:0" data-first-offset="true"><span data-slate-string="true">[</span></span><span 
data-slate-leaf="true" data-offset-key="713:1"><span class=" gkhl-comment" data-slate-object="annotation" 
data-annotation-key="gkann_7091205634" data-annotation-type="annotation"><span data-slate-string="true">----------] 
Global test environment tear-down</span></span></span></span> </div> <div class="se-0a5bf258 
se-466ac03c" data-slate-type="code-line" data-slate-object="block" data-key="714"> <span data-slate-object="text" 
data-key="715"><span data-slate-leaf="true" data-offset-key="715:0" data-first-offset="true"><span 
data-slate-string="true">[==========] </span></span><span data-slate-leaf="true" data-offset-key="715:1"><span 
class=" gkhl-number" data-slate-object="annotation" data-annotation-key="gkann_8579896813" 
data-annotation-type="annotation"><span data-slate-string="true">2</span></span></span><span 
data-slate-leaf="true" data-offset-key="715:2"><span data-slate-string="true"> tests </span></span><span 
data-slate-leaf="true" data-offset-key="715:3"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_5140980944" data-annotation-type="annotation"><span data-slate-string="true">from</span></span></span><span 
data-slate-leaf="true" data-offset-key="715:4"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="715:5"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_7471589875" data-annotation-type="annotation"><span data-slate-string="true">1</span></span></span><span 
data-slate-leaf="true" data-offset-key="715:6"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="715:7"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_8688370411" data-annotation-type="annotation"><span data-slate-string="true">test</span></span></span><span 
data-slate-leaf="true" data-offset-key="715:8"><span data-slate-string="true"> suite ran. (</span></span><span 
data-slate-leaf="true" data-offset-key="715:9"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_0648528398" data-annotation-type="annotation"><span data-slate-string="true">1</span></span></span><span 
data-slate-leaf="true" data-offset-key="715:10"><span data-slate-string="true"> ms total)</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="716"> <span data-slate-object="text" data-key="717"><span data-slate-leaf="true" 
data-offset-key="717:0" data-first-offset="true"><span data-slate-string="true">[ PASSED ] 
</span></span><span data-slate-leaf="true" data-offset-key="717:1"><span class=" gkhl-number" 
data-slate-object="annotation" data-annotation-key="gkann_6976141308" data-annotation-type="annotation"><span 
data-slate-string="true">1</span></span></span><span data-slate-leaf="true" data-offset-key="717:2"><span 
data-slate-string="true"> test.</span></span></span> </div> <div class="se-0a5bf258 se-466ac03c" 
data-slate-type="code-line" data-slate-object="block" data-key="718"> <span data-slate-object="text" 
data-key="719"><span data-slate-leaf="true" data-offset-key="719:0" data-first-offset="true"><span 
data-slate-string="true">[ </span></span><span data-slate-leaf="true" data-offset-key="719:1"><span 
class=" gkhl-keyword" data-slate-object="annotation" data-annotation-key="gkann_8051133357" 
data-annotation-type="annotation"><span data-slate-string="true">FAILED</span></span></span><span 
data-slate-leaf="true" data-offset-key="719:2"><span data-slate-string="true"> ] </span></span><span 
data-slate-leaf="true" data-offset-key="719:3"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_8435362909" data-annotation-type="annotation"><span data-slate-string="true">1</span></span></span><span 
data-slate-leaf="true" data-offset-key="719:4"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="719:5"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_8249582406" data-annotation-type="annotation"><span data-slate-string="true">test</span></span></span><span 
data-slate-leaf="true" data-offset-key="719:6"><span data-slate-string="true">, listed below:</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="720"> <span data-slate-object="text" data-key="721"><span data-slate-leaf="true" 
data-offset-key="721:0" data-first-offset="true"><span data-slate-string="true">[ </span></span><span 
data-slate-leaf="true" data-offset-key="721:1"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_2054758402" data-annotation-type="annotation"><span data-slate-string="true">FAILED</span></span></span><span 
data-slate-leaf="true" data-offset-key="721:2"><span data-slate-string="true"> ] test_is_prime.test2</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="722"> <span data-slate-object="text" data-key="723"></span> </div> <div class="se-0a5bf258 
se-466ac03c" data-slate-type="code-line" data-slate-object="block" data-key="724"> <span data-slate-object="text" 
data-key="725"><span data-slate-leaf="true" data-offset-key="725:0" data-first-offset="true"><span 
data-slate-string="true"> </span></span><span data-slate-leaf="true" data-offset-key="725:1"><span 
class=" gkhl-number" data-slate-object="annotation" data-annotation-key="gkann_8478906756" 
data-annotation-type="annotation"><span data-slate-string="true">1</span></span></span><span 
data-slate-leaf="true" data-offset-key="725:2"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="725:3"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_9510559042" data-annotation-type="annotation"><span data-slate-string="true">FAILED</span></span></span><span 
data-slate-leaf="true" data-offset-key="725:4"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="725:5"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_5106443774" data-annotation-type="annotation"><span data-slate-string="true">TEST</span></span></span></span> 
</div> <div class="ps__rail-x" style="width: 365px; left: 0px; bottom: 0px;"> <div class="ps__thumb-x" 
tabindex="0" style="left: 0px; width: 304px;"></div> </div> <div class="ps__rail-y" style="top: 
0px; right: 0px;"> <div class="ps__thumb-y" tabindex="0" style="top: 0px; height: 0px;"></div> 
</div> </div> </div> <div class="se-69f58b3a " data-slate-type="paragraph" data-slate-object="block" 
data-key="726"> <span data-slate-object="text" data-key="727"><span data-slate-leaf="true" 
data-offset-key="727:0" data-first-offset="true"><span data-slate-string="true">由于咱们的环境有所不同，所以你环境中的输出内容，可能和我这个输出结果略有差别，不过，这不影响我们接下来的讨论。</span></span></span> 
</div> <div class="se-c3bd2b0a " data-slate-type="paragraph" data-slate-object="block" data-key="728"> 
<span data-slate-object="text" data-key="729"><span data-slate-leaf="true" data-offset-key="729:0" 
data-first-offset="true"><span data-slate-string="true">先看输出内容的第 4 行和第 6 行，意思是说，执行测试用例 test_is_prime.test1 
和 test_is_prime.test2，这不就是上面两个以 TEST 开头的两段代码相关的输出内容么？</span></span></span> </div> <div class="se-ed895ea0 
" data-slate-type="paragraph" data-slate-object="block" data-key="730"> <span data-slate-object="text" 
data-key="731"><span data-slate-leaf="true" data-offset-key="731:0" data-first-offset="true"><span 
data-slate-string="true">接下来从第 7 行到第 21 行是一段报错信息，意思就是说 is_prime(4)，is_prime(0) 与 is_prime(1) 
函数返回值错误，也就意味着 is_prime 函数实现有错误，这段错误所涉及的信息，在源代码中的第二个测试用例中有涉及。</span></span></span> </div> <div 
class="se-815ef895 " data-slate-type="paragraph" data-slate-object="block" data-key="732"> 
<span data-slate-object="text" data-key="733"><span data-slate-leaf="true" data-offset-key="733:0" 
data-first-offset="true"><span data-slate-string="true">以上就是我们对 gtest 单元测试框架的一个感性认识，从这些感性认知，我们逐渐走向理性层面，逐步展开属于我们自己的思考。</span></span></span> 
</div> <h2 class="se-6624512b" data-slate-type="heading" data-slate-object="block" data-key="734"><span 
data-slate-object="text" data-key="735"><span data-slate-leaf="true" data-offset-key="735:0" 
data-first-offset="true"><span data-slate-string="true">对于 gtest 的三个思考</span></span></span></h2> 
<div class="se-31b9dd3e " data-slate-type="paragraph" data-slate-object="block" data-key="736"> 
<span data-slate-object="text" data-key="737"><span data-slate-leaf="true" data-offset-key="737:0" 
data-first-offset="true"><span data-slate-string="true">面对刚才的演示代码和输出内容，你可能会产生如下三个问题：</span></span></span> 
</div> <div class="se-6cf1724c" data-slate-type="list" data-slate-object="block" data-key="738"> 
<div class="se-b764529e" data-slate-type="list-line" data-slate-object="block" data-key="739"> 
<div class="se-84ee6be4 se-89fac0e7" data-code-line-number="1"></div> <div class="se-20b6680e"> 
<span data-slate-object="text" data-key="740"><span data-slate-leaf="true" data-offset-key="740:0" 
data-first-offset="true"><span data-slate-string="true">源代码中的 EXPECT_EQ 是做什么的？</span></span></span> 
</div> </div> <div class="se-bbc9527c" data-slate-type="list-line" data-slate-object="block" 
data-key="741"> <div class="se-37e30a98 se-175a2c42" data-code-line-number="2"></div> <div 
class="se-fd62149f"> <span data-slate-object="text" data-key="742"><span data-slate-leaf="true" 
data-offset-key="742:0" data-first-offset="true"><span data-slate-string="true">以 TEST 开头的代码段，和我们学习的函数很不一样，那它究竟是什么？</span></span></span> 
</div> </div> <div class="se-829bdf64" data-slate-type="list-line" data-slate-object="block" 
data-key="743"> <div class="se-48591f44 se-8416ece5" data-code-line-number="3"></div> <div 
class="se-f820632e"> <span data-slate-object="text" data-key="744"><span data-slate-leaf="true" 
data-offset-key="744:0" data-first-offset="true"><span data-slate-string="true">主函数中只调用了 RUN_ALL_TESTS 
函数，为什么好像是执行了程序中所有的 TEST 代码段？这个功能是怎么实现的？</span></span></span> </div> </div> </div> <div class="se-eacab829 
" data-slate-type="paragraph" data-slate-object="block" data-key="745"> <span data-slate-object="text" 
data-key="746"><span data-slate-leaf="true" data-offset-key="746:0" data-first-offset="true"><span 
data-slate-string="true">第一个问题不难，查看相关 gtest 的文档资料，你就可以知道，EXPECT_EQ 是 gtest 里面自带的宏，主要作用是判断传入的两部分的值是否相等。如果不相等，就会产生类似于输出内容中第 
7 行到第 21 行的输出内容。</span></span></span> </div> <div class="se-9f3cfb07 " data-slate-type="paragraph" 
data-slate-object="block" data-key="747"> <span data-slate-object="text" data-key="748"><span 
data-slate-leaf="true" data-offset-key="748:0" data-first-offset="true"><span data-slate-string="true">第二个问题，以 
TEST 开头的这段代码，明显不符合我们对 C 语言的语法认知，我们确实没有见过不用规定返回值类型，也不用规定参数类型的函数定义方式。关于 TEST 究竟是个什么的问题，更加合理的猜测，就是 
TEST 实际上是一个宏。</span></span></span> </div> <div class="se-1b8a46ee " data-slate-type="paragraph" 
data-slate-object="block" data-key="749"> <span data-slate-object="text" data-key="750"><span 
data-slate-leaf="true" data-offset-key="750:0" data-first-offset="true"><span data-slate-string="true">我们来回顾一下宏的作用，宏就是做简单的替换。正是因为 
TEST(test_is_prime, test1) 这段代码实际上是一个宏，所以展开以后，和后面的大括号中的内容一起组成了一段合法的代码内容，这样理解，原本的代码内容也就解释得通了。</span></span></span> 
</div> <div class="se-05ec6191 " data-slate-type="paragraph" data-slate-object="block" data-key="751"> 
<span data-slate-object="text" data-key="752"><span data-slate-leaf="true" data-offset-key="752:0" 
data-first-offset="true"><span data-slate-string="true">而 TEST 宏展开以后会被替换成什么内容呢？关于这个问题，我留下充足的时间请你去思考，同时，包括第三个问题的答案，都留作今天的思考题。我希望你认真想一想，并将你的思考结果写在留言区，我们一起讨论。</span></span></span> 
</div> <div class="se-bbaad825 " data-slate-type="paragraph" data-slate-object="block" data-key="753"> 
<span data-slate-object="text" data-key="754"><span data-slate-leaf="true" data-offset-key="754:0" 
data-first-offset="true"><span data-slate-string="true">下面这段代码，就是作为我们后续的项目测试代码，对于这份源代码，我们不会对它做任何的改动，所以我建议你把代码内容保存下来，以备咱们后面课程练习使用。</span></span></span> 
</div> <div class="se-944ece3f se-d46d0da2" data-slate-type="pre" data-slate-object="block" 
data-key="755" data-code-language="cpp"> <div class="se-f04ae4f2 se-bca9be06"> <span></span> 
</div> <div class="se-670a2fa5"> <div class="se-561851c9 se-a2a144b8" data-code-line-number="1"></div> 
<div class="se-561851c9 se-a2a144b8" data-code-line-number="2"></div> <div class="se-561851c9 
se-a2a144b8" data-code-line-number="3"></div> <div class="se-561851c9 se-a2a144b8" data-code-line-number="4"></div> 
<div class="se-561851c9 se-a2a144b8" data-code-line-number="5"></div> <div class="se-561851c9 
se-a2a144b8" data-code-line-number="6"></div> <div class="se-561851c9 se-a2a144b8" data-code-line-number="7"></div> 
<div class="se-561851c9 se-a2a144b8" data-code-line-number="8"></div> <div class="se-561851c9 
se-a2a144b8" data-code-line-number="9"></div> <div class="se-561851c9 se-a2a144b8" data-code-line-number="10"></div> 
<div class="se-561851c9 se-a2a144b8" data-code-line-number="11"></div> <div class="se-561851c9 
se-a2a144b8" data-code-line-number="12"></div> <div class="se-561851c9 se-a2a144b8" data-code-line-number="13"></div> 
<div class="se-561851c9 se-a2a144b8" data-code-line-number="14"></div> <div class="se-561851c9 
se-a2a144b8" data-code-line-number="15"></div> <div class="se-561851c9 se-a2a144b8" data-code-line-number="16"></div> 
<div class="se-561851c9 se-a2a144b8" data-code-line-number="17"></div> <div class="se-561851c9 
se-a2a144b8" data-code-line-number="18"></div> <div class="se-561851c9 se-a2a144b8" data-code-line-number="19"></div> 
<div class="se-561851c9 se-a2a144b8" data-code-line-number="20"></div> <div class="se-561851c9 
se-a2a144b8" data-code-line-number="21"></div> <div class="se-561851c9 se-a2a144b8" data-code-line-number="22"></div> 
<div class="se-561851c9 se-a2a144b8" data-code-line-number="23"></div> <div class="se-561851c9 
se-a2a144b8" data-code-line-number="24"></div> <div class="se-561851c9 se-a2a144b8" data-code-line-number="25"></div> 
<div class="se-561851c9 se-a2a144b8" data-code-line-number="26"></div> <div class="se-561851c9 
se-a2a144b8" data-code-line-number="27"></div> <div class="se-561851c9 se-a2a144b8" data-code-line-number="28"></div> 
</div> <div class="se-9f645f5e ps ps--active-x"> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" 
data-slate-object="block" data-key="756"> <span data-slate-object="text" data-key="757"><span 
data-slate-leaf="true" data-offset-key="757:0" data-first-offset="true"><span class=" gkhl-meta" 
data-slate-object="annotation" data-annotation-key="gkann_6746946391" data-annotation-type="annotation"><span 
data-slate-string="true">#include &lt;stdio.h&gt;</span></span></span></span> </div> <div class="se-0a5bf258 
se-466ac03c" data-slate-type="code-line" data-slate-object="block" data-key="758"> <span data-slate-object="text" 
data-key="759"><span data-slate-leaf="true" data-offset-key="759:0" data-first-offset="true"><span 
class=" gkhl-meta" data-slate-object="annotation" data-annotation-key="gkann_9868423822" data-annotation-type="annotation"><span 
data-slate-string="true">#include "geek_test.h" // 替换掉原 gtest/gtest.h 头文件</span></span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="760"> <span data-slate-object="text" data-key="761"></span> </div> <div class="se-0a5bf258 
se-466ac03c" data-slate-type="code-line" data-slate-object="block" data-key="762"> <span data-slate-object="text" 
data-key="763"><span data-slate-leaf="true" data-offset-key="763:0" data-first-offset="true"><span 
class=" gkhl-comment" data-slate-object="annotation" data-annotation-key="gkann_7354945621" 
data-annotation-type="annotation"><span data-slate-string="true">// 判断一个数字 x 是否是素数</span></span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="764"> <span data-slate-object="text" data-key="765"><span data-slate-leaf="true" 
data-offset-key="765:0" data-first-offset="true"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_5819399114" data-annotation-type="annotation"><span class=" gkhl-function" 
data-slate-object="annotation" data-annotation-key="gkann_1539179195" data-annotation-type="annotation"><span 
data-slate-string="true">int</span></span></span></span><span data-slate-leaf="true" data-offset-key="765:1"><span 
class=" gkhl-function" data-slate-object="annotation" data-annotation-key="gkann_1539179195" 
data-annotation-type="annotation"><span data-slate-string="true"> </span></span></span><span 
data-slate-leaf="true" data-offset-key="765:2"><span class=" gkhl-function" data-slate-object="annotation" 
data-annotation-key="gkann_1539179195" data-annotation-type="annotation"><span class=" gkhl-title" 
data-slate-object="annotation" data-annotation-key="gkann_2443566720" data-annotation-type="annotation"><span 
data-slate-string="true">is_prime</span></span></span></span><span data-slate-leaf="true" data-offset-key="765:3"><span 
class=" gkhl-params" data-slate-object="annotation" data-annotation-key="gkann_9532915696" 
data-annotation-type="annotation"><span class=" gkhl-function" data-slate-object="annotation" 
data-annotation-key="gkann_1539179195" data-annotation-type="annotation"><span data-slate-string="true">(int 
x)</span></span></span></span><span data-slate-leaf="true" data-offset-key="765:4"><span class=" 
gkhl-function" data-slate-object="annotation" data-annotation-key="gkann_1539179195" data-annotation-type="annotation"><span 
data-slate-string="true"> </span></span></span><span data-slate-leaf="true" data-offset-key="765:5"><span 
data-slate-string="true">{</span></span></span> </div> <div class="se-0a5bf258 se-466ac03c" 
data-slate-type="code-line" data-slate-object="block" data-key="766"> <span data-slate-object="text" 
data-key="767"><span data-slate-leaf="true" data-offset-key="767:0" data-first-offset="true"><span 
data-slate-string="true"> </span></span><span data-slate-leaf="true" data-offset-key="767:1"><span 
class=" gkhl-keyword" data-slate-object="annotation" data-annotation-key="gkann_6622025894" 
data-annotation-type="annotation"><span data-slate-string="true">for</span></span></span><span 
data-slate-leaf="true" data-offset-key="767:2"><span data-slate-string="true"> (</span></span><span 
data-slate-leaf="true" data-offset-key="767:3"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_7346605076" data-annotation-type="annotation"><span data-slate-string="true">int</span></span></span><span 
data-slate-leaf="true" data-offset-key="767:4"><span data-slate-string="true"> i = </span></span><span 
data-slate-leaf="true" data-offset-key="767:5"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_7506889028" data-annotation-type="annotation"><span data-slate-string="true">2</span></span></span><span 
data-slate-leaf="true" data-offset-key="767:6"><span data-slate-string="true">; i * i &lt; 
x; i++) {</span></span></span> </div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" 
data-slate-object="block" data-key="768"> <span data-slate-object="text" data-key="769"><span 
data-slate-leaf="true" data-offset-key="769:0" data-first-offset="true"><span data-slate-string="true"> 
</span></span><span data-slate-leaf="true" data-offset-key="769:1"><span class=" gkhl-keyword" 
data-slate-object="annotation" data-annotation-key="gkann_4062082293" data-annotation-type="annotation"><span 
data-slate-string="true">if</span></span></span><span data-slate-leaf="true" data-offset-key="769:2"><span 
data-slate-string="true"> (x % i == </span></span><span data-slate-leaf="true" data-offset-key="769:3"><span 
class=" gkhl-number" data-slate-object="annotation" data-annotation-key="gkann_8613706458" 
data-annotation-type="annotation"><span data-slate-string="true">0</span></span></span><span 
data-slate-leaf="true" data-offset-key="769:4"><span data-slate-string="true">) </span></span><span 
data-slate-leaf="true" data-offset-key="769:5"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_8386923426" data-annotation-type="annotation"><span data-slate-string="true">return</span></span></span><span 
data-slate-leaf="true" data-offset-key="769:6"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="769:7"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_5428836450" data-annotation-type="annotation"><span data-slate-string="true">0</span></span></span><span 
data-slate-leaf="true" data-offset-key="769:8"><span data-slate-string="true">;</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="770"> <span data-slate-object="text" data-key="771"><span data-slate-leaf="true" 
data-offset-key="771:0" data-first-offset="true"><span data-slate-string="true"> }</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="772"> <span data-slate-object="text" data-key="773"><span data-slate-leaf="true" 
data-offset-key="773:0" data-first-offset="true"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="773:1"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_8643038402" data-annotation-type="annotation"><span data-slate-string="true">return</span></span></span><span 
data-slate-leaf="true" data-offset-key="773:2"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="773:3"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_9256213412" data-annotation-type="annotation"><span data-slate-string="true">1</span></span></span><span 
data-slate-leaf="true" data-offset-key="773:4"><span data-slate-string="true">;</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="774"> <span data-slate-object="text" data-key="775"><span data-slate-leaf="true" 
data-offset-key="775:0" data-first-offset="true"><span data-slate-string="true">}</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="776"> <span data-slate-object="text" data-key="777"></span> </div> <div class="se-0a5bf258 
se-466ac03c" data-slate-type="code-line" data-slate-object="block" data-key="778"> <span data-slate-object="text" 
data-key="779"><span data-slate-leaf="true" data-offset-key="779:0" data-first-offset="true"><span 
class=" gkhl-comment" data-slate-object="annotation" data-annotation-key="gkann_9859960280" 
data-annotation-type="annotation"><span data-slate-string="true">// 第一个测试用例</span></span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="780"> <span data-slate-object="text" data-key="781"><span data-slate-leaf="true" 
data-offset-key="781:0" data-first-offset="true"><span data-slate-string="true">TEST(test1, 
test_is_prime) {</span></span></span> </div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" 
data-slate-object="block" data-key="782"> <span data-slate-object="text" data-key="783"><span 
data-slate-leaf="true" data-offset-key="783:0" data-first-offset="true"><span data-slate-string="true"> 
EXPECT_EQ(is_prime(</span></span><span data-slate-leaf="true" data-offset-key="783:1"><span 
class=" gkhl-number" data-slate-object="annotation" data-annotation-key="gkann_1810412294" 
data-annotation-type="annotation"><span data-slate-string="true">3</span></span></span><span 
data-slate-leaf="true" data-offset-key="783:2"><span data-slate-string="true">), </span></span><span 
data-slate-leaf="true" data-offset-key="783:3"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_1501192993" data-annotation-type="annotation"><span data-slate-string="true">1</span></span></span><span 
data-slate-leaf="true" data-offset-key="783:4"><span data-slate-string="true">);</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="784"> <span data-slate-object="text" data-key="785"><span data-slate-leaf="true" 
data-offset-key="785:0" data-first-offset="true"><span data-slate-string="true"> EXPECT_EQ(is_prime(</span></span><span 
data-slate-leaf="true" data-offset-key="785:1"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_4006418347" data-annotation-type="annotation"><span data-slate-string="true">5</span></span></span><span 
data-slate-leaf="true" data-offset-key="785:2"><span data-slate-string="true">), </span></span><span 
data-slate-leaf="true" data-offset-key="785:3"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_6438101998" data-annotation-type="annotation"><span data-slate-string="true">1</span></span></span><span 
data-slate-leaf="true" data-offset-key="785:4"><span data-slate-string="true">);</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="786"> <span data-slate-object="text" data-key="787"><span data-slate-leaf="true" 
data-offset-key="787:0" data-first-offset="true"><span data-slate-string="true"> EXPECT_EQ(is_prime(</span></span><span 
data-slate-leaf="true" data-offset-key="787:1"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_8999534438" data-annotation-type="annotation"><span data-slate-string="true">7</span></span></span><span 
data-slate-leaf="true" data-offset-key="787:2"><span data-slate-string="true">), </span></span><span 
data-slate-leaf="true" data-offset-key="787:3"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_2976378111" data-annotation-type="annotation"><span data-slate-string="true">1</span></span></span><span 
data-slate-leaf="true" data-offset-key="787:4"><span data-slate-string="true">);</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="788"> <span data-slate-object="text" data-key="789"><span data-slate-leaf="true" 
data-offset-key="789:0" data-first-offset="true"><span data-slate-string="true">}</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="790"> <span data-slate-object="text" data-key="791"></span> </div> <div class="se-0a5bf258 
se-466ac03c" data-slate-type="code-line" data-slate-object="block" data-key="792"> <span data-slate-object="text" 
data-key="793"><span data-slate-leaf="true" data-offset-key="793:0" data-first-offset="true"><span 
class=" gkhl-comment" data-slate-object="annotation" data-annotation-key="gkann_3064165195" 
data-annotation-type="annotation"><span data-slate-string="true">// 第二个测试用例</span></span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="794"> <span data-slate-object="text" data-key="795"><span data-slate-leaf="true" 
data-offset-key="795:0" data-first-offset="true"><span data-slate-string="true">TEST(test2, 
test_is_prime) {</span></span></span> </div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" 
data-slate-object="block" data-key="796"> <span data-slate-object="text" data-key="797"><span 
data-slate-leaf="true" data-offset-key="797:0" data-first-offset="true"><span data-slate-string="true"> 
EXPECT_EQ(is_prime(</span></span><span data-slate-leaf="true" data-offset-key="797:1"><span 
class=" gkhl-number" data-slate-object="annotation" data-annotation-key="gkann_7780009149" 
data-annotation-type="annotation"><span data-slate-string="true">4</span></span></span><span 
data-slate-leaf="true" data-offset-key="797:2"><span data-slate-string="true">), </span></span><span 
data-slate-leaf="true" data-offset-key="797:3"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_0513140376" data-annotation-type="annotation"><span data-slate-string="true">0</span></span></span><span 
data-slate-leaf="true" data-offset-key="797:4"><span data-slate-string="true">);</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="798"> <span data-slate-object="text" data-key="799"><span data-slate-leaf="true" 
data-offset-key="799:0" data-first-offset="true"><span data-slate-string="true"> EXPECT_EQ(is_prime(</span></span><span 
data-slate-leaf="true" data-offset-key="799:1"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_5862872373" data-annotation-type="annotation"><span data-slate-string="true">0</span></span></span><span 
data-slate-leaf="true" data-offset-key="799:2"><span data-slate-string="true">), </span></span><span 
data-slate-leaf="true" data-offset-key="799:3"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_5006718732" data-annotation-type="annotation"><span data-slate-string="true">0</span></span></span><span 
data-slate-leaf="true" data-offset-key="799:4"><span data-slate-string="true">);</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="800"> <span data-slate-object="text" data-key="801"><span data-slate-leaf="true" 
data-offset-key="801:0" data-first-offset="true"><span data-slate-string="true"> EXPECT_EQ(is_prime(</span></span><span 
data-slate-leaf="true" data-offset-key="801:1"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_8987313512" data-annotation-type="annotation"><span data-slate-string="true">1</span></span></span><span 
data-slate-leaf="true" data-offset-key="801:2"><span data-slate-string="true">), </span></span><span 
data-slate-leaf="true" data-offset-key="801:3"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_6527241173" data-annotation-type="annotation"><span data-slate-string="true">0</span></span></span><span 
data-slate-leaf="true" data-offset-key="801:4"><span data-slate-string="true">);</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="802"> <span data-slate-object="text" data-key="803"><span data-slate-leaf="true" 
data-offset-key="803:0" data-first-offset="true"><span data-slate-string="true">}</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="804"> <span data-slate-object="text" data-key="805"></span> </div> <div class="se-0a5bf258 
se-466ac03c" data-slate-type="code-line" data-slate-object="block" data-key="806"> <span data-slate-object="text" 
data-key="807"><span data-slate-leaf="true" data-offset-key="807:0" data-first-offset="true"><span 
class=" gkhl-function" data-slate-object="annotation" data-annotation-key="gkann_8862725647" 
data-annotation-type="annotation"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_8380274905" data-annotation-type="annotation"><span data-slate-string="true">int</span></span></span></span><span 
data-slate-leaf="true" data-offset-key="807:1"><span class=" gkhl-function" data-slate-object="annotation" 
data-annotation-key="gkann_8862725647" data-annotation-type="annotation"><span data-slate-string="true"> 
</span></span></span><span data-slate-leaf="true" data-offset-key="807:2"><span class=" gkhl-function" 
data-slate-object="annotation" data-annotation-key="gkann_8862725647" data-annotation-type="annotation"><span 
class=" gkhl-title" data-slate-object="annotation" data-annotation-key="gkann_1320584594" data-annotation-type="annotation"><span 
data-slate-string="true">main</span></span></span></span><span data-slate-leaf="true" data-offset-key="807:3"><span 
class=" gkhl-params" data-slate-object="annotation" data-annotation-key="gkann_9002348979" 
data-annotation-type="annotation"><span class=" gkhl-function" data-slate-object="annotation" 
data-annotation-key="gkann_8862725647" data-annotation-type="annotation"><span data-slate-string="true">()</span></span></span></span><span 
data-slate-leaf="true" data-offset-key="807:4"><span class=" gkhl-function" data-slate-object="annotation" 
data-annotation-key="gkann_8862725647" data-annotation-type="annotation"><span data-slate-string="true"> 
</span></span></span><span data-slate-leaf="true" data-offset-key="807:5"><span data-slate-string="true">{</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="808"> <span data-slate-object="text" data-key="809"><span data-slate-leaf="true" 
data-offset-key="809:0" data-first-offset="true"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="809:1"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_8222518794" data-annotation-type="annotation"><span data-slate-string="true">return</span></span></span><span 
data-slate-leaf="true" data-offset-key="809:2"><span data-slate-string="true"> RUN_ALL_TESTS();</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="810"> <span data-slate-object="text" data-key="811"><span data-slate-leaf="true" 
data-offset-key="811:0" data-first-offset="true"><span data-slate-string="true">}</span></span></span> 
</div> <div class="ps__rail-x" style="width: 365px; left: 0px; bottom: 0px;"> <div class="ps__thumb-x" 
tabindex="0" style="left: 0px; width: 324px;"></div> </div> <div class="ps__rail-y" style="top: 
0px; right: 0px;"> <div class="ps__thumb-y" tabindex="0" style="top: 0px; height: 0px;"></div> 
</div> </div> </div> <div class="se-6e07012c " data-slate-type="paragraph" data-slate-object="block" 
data-key="812"> <span data-slate-object="text" data-key="813"><span data-slate-leaf="true" 
data-offset-key="813:0" data-first-offset="true"><span data-slate-string="true">我们后续的目标，就是开发一个自己的测试框架，替换掉上述代码中的 
gtest/gtest.h 头文件，使得程序具有和之前类似的功能和输出内容。整个过程，我们不会改动上述代码中的内容，这一点，请你一定要牢记。</span></span></span> 
</div> <div class="se-e01eb0f3 " data-slate-type="paragraph" data-slate-object="block" data-key="814"> 
<span data-slate-object="text" data-key="815"><span data-slate-leaf="true" data-offset-key="815:0" 
data-first-offset="true"><span data-slate-string="true">从这一课开始，我希望你能脱离我的指导和提示，可以独立完成咱们每节课的任务，这也是为了检验你这段时间以来的学习成果。当然，如果你实在想不出答案，也可以回来看看我的做法，以供参考。</span></span></span> 
</div> <h2 class="se-956675e3" data-slate-type="heading" data-slate-object="block" data-key="816"><span 
data-slate-object="text" data-key="817"><span data-slate-leaf="true" data-offset-key="817:0" 
data-first-offset="true"><span data-slate-string="true">课程小结</span></span></span></h2> <div 
class="se-c6d673ab " data-slate-type="paragraph" data-slate-object="block" data-key="818"> 
<span data-slate-object="text" data-key="819"><span data-slate-leaf="true" data-offset-key="819:0" 
data-first-offset="true"><span data-slate-string="true">最后呢，我来给你做一下今天的课程小结：</span></span></span> 
</div> <div class="se-c811fc5a" data-slate-type="list" data-slate-object="block" data-key="820"> 
<div class="se-795e4004" data-slate-type="list-line" data-slate-object="block" data-key="821"> 
<div class="se-575d8a88 se-1bd41011" data-code-line-number="1"></div> <div class="se-23e2d996"> 
<span data-slate-object="text" data-key="822"><span data-slate-leaf="true" data-offset-key="822:0" 
data-first-offset="true"><span data-slate-string="true">测试行为，不是测试工程师的专属，你应该把它作为一个开发工程师的习惯。</span></span></span> 
</div> </div> <div class="se-4b1095c2" data-slate-type="list-line" data-slate-object="block" 
data-key="823"> <div class="se-31020db9 se-a27850a3" data-code-line-number="2"></div> <div 
class="se-1b3b2db9"> <span data-slate-object="text" data-key="824"><span data-slate-leaf="true" 
data-offset-key="824:0" data-first-offset="true"><span data-slate-string="true">单元测试属于白盒测试范畴，Google 
的 gtest 就是一种辅助我们编写单元测试的框架。</span></span></span> </div> </div> <div class="se-ed3be411" data-slate-type="list-line" 
data-slate-object="block" data-key="825"> <div class="se-fbc663f1 se-ff2e5af3" data-code-line-number="3"></div> 
<div class="se-4a605ee8"> <span data-slate-object="text" data-key="826"><span data-slate-leaf="true" 
data-offset-key="826:0" data-first-offset="true"><span data-slate-string="true">gtest 中的 TEST 
本质上是一个宏，而这个宏应该展开成怎样的代码内容，还需要你认真思考，这个思考过程对你来说是很有价值的。</span></span></span> </div> </div> </div> 
<div class="se-d24074b2 " data-slate-type="paragraph" data-slate-object="block" data-key="827"> 
<span data-slate-object="text" data-key="828"><span data-slate-leaf="true" data-offset-key="828:0" 
data-first-offset="true"><span data-slate-string="true">好了，今天就到这里了，我是胡光，我们下期见。</span></span></span> 
</div> </div>', body_summary='', bundle='book', delta=0, body_format='full_html', langcode='zh-hans', 
revision_id=766 where entity_id=766 
 {executed in 1 msec}
2020-11-24 18:51:17.729 INFO  jdbc.sqltiming Line:373 - select nodefiledd0_.nid as nid1_10_, nodefiledd0_.changed as changed2_10_, nodefiledd0_.created 
as created3_10_, nodefiledd0_.default_langcode as default_4_10_, nodefiledd0_.langcode as langcode5_10_, 
nodefiledd0_.promote as promote6_10_, nodefiledd0_.revision_translation_affected as revision7_10_, 
nodefiledd0_.status as status8_10_, nodefiledd0_.sticky as sticky9_10_, nodefiledd0_.title 
as title10_10_, nodefiledd0_.type as type11_10_, nodefiledd0_.uid as uid12_10_, nodefiledd0_.vid 
as vid13_10_ from node_field_data nodefiledd0_ where nodefiledd0_.nid=766 
 {executed in 0 msec}
2020-11-24 18:51:17.730 INFO  jdbc.resultsettable Line:610 - 
|----|-----------|-----------|-----------------|---------|--------|------------------------------|-------|-------|------------------------|-----|----|----|
|nid |changed    |created    |default_langcode |langcode |promote |revision_translation_affected |status |sticky |title                   |type |uid |vid |
|----|-----------|-----------|-----------------|---------|--------|------------------------------|-------|-------|------------------------|-----|----|----|
|766 |1606117102 |1606117102 |1                |zh-hans  |0       |1                             |1      |0      |26丨牛刀小试（上）：实现测试框架前的基础准备 |book |1   |766 |
|----|-----------|-----------|-----------------|---------|--------|------------------------------|-------|-------|------------------------|-----|----|----|

2020-11-24 18:51:17.730 INFO  jdbc.sqltiming Line:373 - select nodefieldr0_.nid as nid1_11_0_, nodefieldr0_.changed as changed2_11_0_, nodefieldr0_.created 
as created3_11_0_, nodefieldr0_.default_langcode as default_4_11_0_, nodefieldr0_.langcode 
as langcode5_11_0_, nodefieldr0_.promote as promote6_11_0_, nodefieldr0_.revision_translation_affected 
as revision7_11_0_, nodefieldr0_.status as status8_11_0_, nodefieldr0_.sticky as sticky9_11_0_, 
nodefieldr0_.title as title10_11_0_, nodefieldr0_.uid as uid11_11_0_, nodefieldr0_.vid as vid12_11_0_ 
from node_field_revision nodefieldr0_ where nodefieldr0_.nid=766 
 {executed in 0 msec}
2020-11-24 18:51:17.731 INFO  jdbc.resultsettable Line:610 - 
|---------|-----------|-----------|-----------------|---------|--------|------------------------------|-------|-------|------------------------|----|----|
|nid      |changed    |created    |default_langcode |langcode |promote |revision_translation_affected |status |sticky |title                   |uid |vid |
|---------|-----------|-----------|-----------------|---------|--------|------------------------------|-------|-------|------------------------|----|----|
|[unread] |1606117102 |1606117102 |1                |zh-hans  |0       |1                             |1      |0      |26丨牛刀小试（上）：实现测试框架前的基础准备 |1   |766 |
|---------|-----------|-----------|-----------------|---------|--------|------------------------------|-------|-------|------------------------|----|----|

2020-11-24 18:51:17.732 INFO  jdbc.sqltiming Line:373 - update node_field_data set changed=1606215077, created=1606215077, default_langcode=1, langcode='zh-hans', 
promote=0, revision_translation_affected=1, status=1, sticky=0, title='26丨牛刀小试（上）：实现测试框架前的基础准备', 
type='book', uid=1, vid=766 where nid=766 
 {executed in 0 msec}
2020-11-24 18:51:17.733 INFO  jdbc.sqltiming Line:373 - update node_field_revision set changed=1606215077, created=1606215077, default_langcode=1, 
langcode='zh-hans', promote=0, revision_translation_affected=1, status=1, sticky=0, title='26丨牛刀小试（上）：实现测试框架前的基础准备', 
uid=1, vid=766 where nid=766 
 {executed in 0 msec}
2020-11-24 18:51:17.738 INFO  jdbc.sqltiming Line:373 - select bookfieldm0_.entity_id as entity_i1_8_, bookfieldm0_.bundle as bundle2_8_, bookfieldm0_.delta 
as delta3_8_, bookfieldm0_.langcode as langcode4_8_, bookfieldm0_.field_media_value as field_me5_8_, 
bookfieldm0_.revision_id as revision6_8_ from node__field_media bookfieldm0_ where bookfieldm0_.entity_id=766 
 {executed in 0 msec}
2020-11-24 18:51:17.738 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------------|------------|
|entity_id |bundle |delta |langcode |field_media_value |revision_id |
|----------|-------|------|---------|------------------|------------|
|766       |book   |0     |zh-hans  |                  |766         |
|----------|-------|------|---------|------------------|------------|

2020-11-24 18:51:17.741 INFO  jdbc.sqltiming Line:373 - select nodefieldm0_.entity_id as entity_i1_17_0_, nodefieldm0_.bundle as bundle2_17_0_, nodefieldm0_.delta 
as delta3_17_0_, nodefieldm0_.langcode as langcode4_17_0_, nodefieldm0_.field_media_value as 
field_me5_17_0_, nodefieldm0_.revision_id as revision6_17_0_ from node_revision__field_media 
nodefieldm0_ where nodefieldm0_.entity_id=766 
 {executed in 1 msec}
2020-11-24 18:51:17.741 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------------|------------|
|entity_id |bundle |delta |langcode |field_media_value |revision_id |
|----------|-------|------|---------|------------------|------------|
|[unread]  |book   |0     |zh-hans  |                  |766         |
|----------|-------|------|---------|------------------|------------|

2020-11-24 18:51:17.743 INFO  jdbc.sqltiming Line:373 - select bookfieldc0_.entity_id as entity_i1_5_, bookfieldc0_.bundle as bundle2_5_, bookfieldc0_.field_comment_value 
as field_co3_5_, bookfieldc0_.delta as delta4_5_, bookfieldc0_.field_comment_format as field_co5_5_, 
bookfieldc0_.langcode as langcode6_5_, bookfieldc0_.revision_id as revision7_5_ from node__field_comment 
bookfieldc0_ where bookfieldc0_.entity_id=766 
 {executed in 0 msec}
2020-11-24 18:51:17.744 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|--------------------|------|---------------------|---------|------------|
|entity_id |bundle |field_comment_value |delta |field_comment_format |langcode |revision_id |
|----------|-------|--------------------|------|---------------------|---------|------------|
|766       |book   |                    |0     |full_html            |zh-hans  |766         |
|----------|-------|--------------------|------|---------------------|---------|------------|

2020-11-24 18:51:17.746 INFO  jdbc.sqltiming Line:373 - select nodefieldc0_.entity_id as entity_i1_14_0_, nodefieldc0_.bundle as bundle2_14_0_, nodefieldc0_.field_comment_value 
as field_co3_14_0_, nodefieldc0_.delta as delta4_14_0_, nodefieldc0_.field_comment_format as 
field_co5_14_0_, nodefieldc0_.langcode as langcode6_14_0_, nodefieldc0_.revision_id as revision7_14_0_ 
from node_revision__field_comment nodefieldc0_ where nodefieldc0_.entity_id=766 
 {executed in 0 msec}
2020-11-24 18:51:17.747 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|--------------------|------|---------------------|---------|------------|
|entity_id |bundle |field_comment_value |delta |field_comment_format |langcode |revision_id |
|----------|-------|--------------------|------|---------------------|---------|------------|
|[unread]  |book   |                    |0     |full_html            |zh-hans  |766         |
|----------|-------|--------------------|------|---------------------|---------|------------|

2020-11-24 18:51:17.749 INFO  jdbc.sqltiming Line:373 - select bookfieldt0_.entity_id as entity_i1_9_, bookfieldt0_.bundle as bundle2_9_, bookfieldt0_.delta 
as delta3_9_, bookfieldt0_.langcode as langcode4_9_, bookfieldt0_.revision_id as revision5_9_, 
bookfieldt0_.field_thumb_value as field_th6_9_ from node__field_thumb bookfieldt0_ where bookfieldt0_.entity_id=766 
 {executed in 1 msec}
2020-11-24 18:51:17.749 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------|------------------|
|entity_id |bundle |delta |langcode |revision_id |field_thumb_value |
|----------|-------|------|---------|------------|------------------|
|766       |book   |0     |zh-hans  |766         |                  |
|----------|-------|------|---------|------------|------------------|

2020-11-24 18:51:17.751 INFO  jdbc.sqltiming Line:373 - update node__field_thumb set bundle='book', delta=0, langcode='zh-hans', revision_id=766, field_thumb_value='https://static001.geekbang.org/resource/image/0e/34/0eaa7926e66afce36be488ae8ad26c34.jpg' 
where entity_id=766 
 {executed in 0 msec}
2020-11-24 18:51:17.755 INFO  jdbc.sqltiming Line:373 - select nodefieldt0_.entity_id as entity_i1_18_0_, nodefieldt0_.bundle as bundle2_18_0_, nodefieldt0_.delta 
as delta3_18_0_, nodefieldt0_.langcode as langcode4_18_0_, nodefieldt0_.revision_id as revision5_18_0_, 
nodefieldt0_.field_thumb_value as field_th6_18_0_ from node_revision__field_thumb nodefieldt0_ 
where nodefieldt0_.entity_id=766 
 {executed in 1 msec}
2020-11-24 18:51:17.755 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------|------------------|
|entity_id |bundle |delta |langcode |revision_id |field_thumb_value |
|----------|-------|------|---------|------------|------------------|
|[unread]  |book   |0     |zh-hans  |766         |                  |
|----------|-------|------|---------|------------|------------------|

2020-11-24 18:51:17.757 INFO  jdbc.sqltiming Line:373 - update node_revision__field_thumb set bundle='book', delta=0, langcode='zh-hans', revision_id=766, 
field_thumb_value='https://static001.geekbang.org/resource/image/0e/34/0eaa7926e66afce36be488ae8ad26c34.jpg' 
where entity_id=766 
 {executed in 0 msec}
2020-11-24 18:51:17.761 INFO  jdbc.sqltiming Line:373 - select bookfieldf0_.entity_id as entity_i1_6_0_, bookfieldf0_.bundle as bundle2_6_0_, bookfieldf0_.delta 
as delta3_6_0_, bookfieldf0_.field_fenlei_target_id as field_fe4_6_0_, bookfieldf0_.langcode 
as langcode5_6_0_, bookfieldf0_.revision_id as revision6_6_0_ from node__field_fenlei bookfieldf0_ 
where bookfieldf0_.entity_id=766 
 {executed in 0 msec}
2020-11-24 18:51:17.761 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------------|---------|------------|
|entity_id |bundle |delta |field_fenlei_target_id |langcode |revision_id |
|----------|-------|------|-----------------------|---------|------------|
|[unread]  |book   |0     |1                      |zh-hans  |766         |
|----------|-------|------|-----------------------|---------|------------|

2020-11-24 18:51:17.763 INFO  jdbc.sqltiming Line:373 - select nodefieldf0_.entity_id as entity_i1_15_0_, nodefieldf0_.bundle as bundle2_15_0_, nodefieldf0_.delta 
as delta3_15_0_, nodefieldf0_.field_fenlei_target_id as field_fe4_15_0_, nodefieldf0_.langcode 
as langcode5_15_0_, nodefieldf0_.revision_id as revision6_15_0_ from node_revision__field_fenlei 
nodefieldf0_ where nodefieldf0_.entity_id=766 
 {executed in 0 msec}
2020-11-24 18:51:17.764 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------------|---------|------------|
|entity_id |bundle |delta |field_fenlei_target_id |langcode |revision_id |
|----------|-------|------|-----------------------|---------|------------|
|[unread]  |book   |0     |1                      |zh-hans  |766         |
|----------|-------|------|-----------------------|---------|------------|

2020-11-24 18:51:17.766 INFO  jdbc.sqltiming Line:373 - select bookchecke0_.item_id as item_id1_2_, bookchecke0_.fsid as fsid2_2_, bookchecke0_.got 
as got3_2_, bookchecke0_.name as name4_2_, bookchecke0_.parse_fail as parse_fa5_2_, bookchecke0_.parsed 
as parsed6_2_, bookchecke0_.path as path7_2_, bookchecke0_.title as title8_2_, bookchecke0_.vid 
as vid9_2_ from book_check bookchecke0_ where bookchecke0_.fsid='886941535066797' and bookchecke0_.name='net_content' 
 {executed in 1 msec}
2020-11-24 18:51:17.766 INFO  jdbc.resultsettable Line:610 - 
|--------|---------|---------|---------|-----------|---------|---------|---------|---------|
|item_id |fsid     |got      |name     |parse_fail |parsed   |path     |title    |vid      |
|--------|---------|---------|---------|-----------|---------|---------|---------|---------|
|767     |[unread] |[unread] |[unread] |[unread]   |[unread] |[unread] |[unread] |[unread] |
|--------|---------|---------|---------|-----------|---------|---------|---------|---------|

2020-11-24 18:55:30.634 INFO  jdbc.sqltiming Line:373 - update book_check set fsid='886941535066797', got=1, name='net_content', parse_fail='comment_', 
parsed=0, path='109-人人都能学会的编程入门课/05丨综合项目篇 (5讲)/27丨牛刀小试（下）：实现一个自己的测试框架.html', title='27丨牛刀小试（下）：实现一个自己的测试框架', 
vid=767 where item_id=767 
 {executed in 0 msec}
2020-11-24 18:55:30.639 INFO  jdbc.sqltiming Line:373 - select nodebodyen0_.entity_id as entity_i1_4_, nodebodyen0_.body_value as body_val2_4_, nodebodyen0_.body_summary 
as body_sum3_4_, nodebodyen0_.bundle as bundle4_4_, nodebodyen0_.delta as delta5_4_, nodebodyen0_.body_format 
as body_for6_4_, nodebodyen0_.langcode as langcode7_4_, nodebodyen0_.revision_id as revision8_4_ 
from node__body nodebodyen0_ where nodebodyen0_.entity_id=767 
 {executed in 0 msec}
2020-11-24 18:55:30.640 INFO  jdbc.resultsettable Line:610 - 
|----------|-----------|-------------|-------|------|------------|---------|------------|
|entity_id |body_value |body_summary |bundle |delta |body_format |langcode |revision_id |
|----------|-----------|-------------|-------|------|------------|---------|------------|
|767       |           |             |book   |0     |full_html   |zh-hans  |767         |
|----------|-----------|-------------|-------|------|------------|---------|------------|

2020-11-24 18:55:30.641 INFO  jdbc.sqltiming Line:373 - select nodebodyre0_.entity_id as entity_i1_13_0_, nodebodyre0_.body_value as body_val2_13_0_, 
nodebodyre0_.body_summary as body_sum3_13_0_, nodebodyre0_.bundle as bundle4_13_0_, nodebodyre0_.delta 
as delta5_13_0_, nodebodyre0_.body_format as body_for6_13_0_, nodebodyre0_.langcode as langcode7_13_0_, 
nodebodyre0_.revision_id as revision8_13_0_ from node_revision__body nodebodyre0_ where nodebodyre0_.entity_id=767 
 {executed in 0 msec}
2020-11-24 18:55:30.641 INFO  jdbc.resultsettable Line:610 - 
|----------|-----------|-------------|-------|------|------------|---------|------------|
|entity_id |body_value |body_summary |bundle |delta |body_format |langcode |revision_id |
|----------|-----------|-------------|-------|------|------------|---------|------------|
|[unread]  |           |             |book   |0     |full_html   |zh-hans  |767         |
|----------|-----------|-------------|-------|------|------------|---------|------------|

2020-11-24 18:55:30.646 INFO  jdbc.sqltiming Line:373 - update node__body set body_value='<div data-slate-editor="true" data-key="2402" autocorrect="off" 
spellcheck="false" data-gramm="false" style="outline: none; white-space: pre-wrap; overflow-wrap: 
break-word;"> <div class="se-6441a2c7 " data-slate-type="paragraph" data-slate-object="block" 
data-key="2403"> <span data-slate-object="text" data-key="2404"><span data-slate-leaf="true" 
data-offset-key="2404:0" data-first-offset="true"><span data-slate-string="true">你好，我是胡光，欢迎回来，今天呢，我们继续学习测试框架的相关内容。</span></span></span> 
</div> <div class="se-6171687c " data-slate-type="paragraph" data-slate-object="block" data-key="2405"> 
<span data-slate-object="text" data-key="2406"><span data-slate-leaf="true" data-offset-key="2406:0" 
data-first-offset="true"><span data-slate-string="true">上节课中，我们讲到了软件开发一般分为前中后三个部分，提到作为技术人员的我们，一般主要负责在软件开发中期的编码与测试阶段。还有，我还讲到我们一般会综合运用白盒测试与黑盒测试这两种方法来进行程序测试。</span></span></span> 
</div> <div class="se-16d945b8 " data-slate-type="paragraph" data-slate-object="block" data-key="2407"> 
<span data-slate-object="text" data-key="2408"><span data-slate-leaf="true" data-offset-key="2408:0" 
data-first-offset="true"><span data-slate-string="true">更主要的是，我们还介绍了 Google 的单元测试框架 gtest，并对测试框架代码进行了一番解读。其中提到代码中的 
TEST 是一个宏，那它展开后被替换的内容是什么呢？还有， RUN_ALL_TESTS 函数是如何依次执行程序中所有的测试用例函数的？</span></span></span> </div> 
<div class="se-4e33fb04 " data-slate-type="paragraph" data-slate-object="block" data-key="2409"> 
<span data-slate-object="text" data-key="2410"><span data-slate-leaf="true" data-offset-key="2410:0" 
data-first-offset="true"><span data-slate-string="true">今天呢，我们就一个一个地来解决这些问题，并最终实现一个咱们自己的测试框架。</span></span></span> 
</div> <h2 class="se-44df7191" data-slate-type="heading" data-slate-object="block" data-key="2411"><span 
data-slate-object="text" data-key="2412"><span data-slate-leaf="true" data-offset-key="2412:0" 
data-first-offset="true"><span data-slate-string="true">初步实现 TEST 宏</span></span></span></h2> 
<div class="se-63559857 " data-slate-type="paragraph" data-slate-object="block" data-key="2413"> 
<span data-slate-object="text" data-key="2414"><span data-slate-leaf="true" data-offset-key="2414:0" 
data-first-offset="true"><span data-slate-string="true">今天我们实现的所有代码呢，都会写在一个名字为 geek_test.h 
的头文件中。当然我们也知道，将声明和定义写在一起，在大型工程中是会出现严重的编译错误，在实际的工程开发中，我们并不会这么做。</span></span></span> </div> 
<div class="se-13dda3ec " data-slate-type="paragraph" data-slate-object="block" data-key="2415"> 
<span data-slate-object="text" data-key="2416"><span data-slate-leaf="true" data-offset-key="2416:0" 
data-first-offset="true"><span data-slate-string="true">今天把声明和定义写在一起，只是为了课程内容的讲解需要，而你也完全没有必要担心，这不会影响你对主要内容的学习。</span></span></span> 
</div> <div class="se-0e7bade2 " data-slate-type="paragraph" data-slate-object="block" data-key="2417"> 
<span data-slate-object="text" data-key="2418"><span data-slate-leaf="true" data-offset-key="2418:0" 
data-first-offset="true"><span data-slate-string="true">我们先回到上节课中的源代码：</span></span></span> 
</div> <div class="se-90b1053d se-647ebaa6" data-slate-type="pre" data-slate-object="block" 
data-key="2419" data-code-language="cpp"> <div class="se-61108dc9 se-7957d3e3"> <span></span> 
</div> <div class="se-5c36dee2"> <div class="se-a6545074 se-5c3354b1" data-code-line-number="1"></div> 
<div class="se-a6545074 se-5c3354b1" data-code-line-number="2"></div> <div class="se-a6545074 
se-5c3354b1" data-code-line-number="3"></div> <div class="se-a6545074 se-5c3354b1" data-code-line-number="4"></div> 
<div class="se-a6545074 se-5c3354b1" data-code-line-number="5"></div> <div class="se-a6545074 
se-5c3354b1" data-code-line-number="6"></div> <div class="se-a6545074 se-5c3354b1" data-code-line-number="7"></div> 
<div class="se-a6545074 se-5c3354b1" data-code-line-number="8"></div> <div class="se-a6545074 
se-5c3354b1" data-code-line-number="9"></div> <div class="se-a6545074 se-5c3354b1" data-code-line-number="10"></div> 
<div class="se-a6545074 se-5c3354b1" data-code-line-number="11"></div> <div class="se-a6545074 
se-5c3354b1" data-code-line-number="12"></div> <div class="se-a6545074 se-5c3354b1" data-code-line-number="13"></div> 
<div class="se-a6545074 se-5c3354b1" data-code-line-number="14"></div> <div class="se-a6545074 
se-5c3354b1" data-code-line-number="15"></div> <div class="se-a6545074 se-5c3354b1" data-code-line-number="16"></div> 
<div class="se-a6545074 se-5c3354b1" data-code-line-number="17"></div> <div class="se-a6545074 
se-5c3354b1" data-code-line-number="18"></div> <div class="se-a6545074 se-5c3354b1" data-code-line-number="19"></div> 
<div class="se-a6545074 se-5c3354b1" data-code-line-number="20"></div> <div class="se-a6545074 
se-5c3354b1" data-code-line-number="21"></div> <div class="se-a6545074 se-5c3354b1" data-code-line-number="22"></div> 
<div class="se-a6545074 se-5c3354b1" data-code-line-number="23"></div> <div class="se-a6545074 
se-5c3354b1" data-code-line-number="24"></div> <div class="se-a6545074 se-5c3354b1" data-code-line-number="25"></div> 
<div class="se-a6545074 se-5c3354b1" data-code-line-number="26"></div> <div class="se-a6545074 
se-5c3354b1" data-code-line-number="27"></div> <div class="se-a6545074 se-5c3354b1" data-code-line-number="28"></div> 
</div> <div class="se-2d5e2fe0 ps ps--active-x"> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" 
data-slate-object="block" data-key="2420"> <span data-slate-object="text" data-key="2421"><span 
data-slate-leaf="true" data-offset-key="2421:0" data-first-offset="true"><span class=" gkhl-meta" 
data-slate-object="annotation" data-annotation-key="gkann_7485529598" data-annotation-type="annotation"><span 
data-slate-string="true">#include &lt;stdio.h&gt;</span></span></span></span> </div> <div class="se-0a5bf258 
se-466ac03c" data-slate-type="code-line" data-slate-object="block" data-key="2422"> <span data-slate-object="text" 
data-key="2423"><span data-slate-leaf="true" data-offset-key="2423:0" data-first-offset="true"><span 
class=" gkhl-meta" data-slate-object="annotation" data-annotation-key="gkann_6860304053" data-annotation-type="annotation"><span 
data-slate-string="true">#include "geek_test.h" // 替换掉原 gtest/gtest.h 头文件</span></span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="2424"> <span data-slate-object="text" data-key="2425"></span> </div> <div class="se-0a5bf258 
se-466ac03c" data-slate-type="code-line" data-slate-object="block" data-key="2426"> <span data-slate-object="text" 
data-key="2427"><span data-slate-leaf="true" data-offset-key="2427:0" data-first-offset="true"><span 
class=" gkhl-comment" data-slate-object="annotation" data-annotation-key="gkann_0115672990" 
data-annotation-type="annotation"><span data-slate-string="true">// 判断一个数字 x 是否是素数</span></span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="2428"> <span data-slate-object="text" data-key="2429"><span data-slate-leaf="true" 
data-offset-key="2429:0" data-first-offset="true"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_8294027803" data-annotation-type="annotation"><span class=" gkhl-function" 
data-slate-object="annotation" data-annotation-key="gkann_4033042121" data-annotation-type="annotation"><span 
data-slate-string="true">int</span></span></span></span><span data-slate-leaf="true" data-offset-key="2429:1"><span 
class=" gkhl-function" data-slate-object="annotation" data-annotation-key="gkann_4033042121" 
data-annotation-type="annotation"><span data-slate-string="true"> </span></span></span><span 
data-slate-leaf="true" data-offset-key="2429:2"><span class=" gkhl-title" data-slate-object="annotation" 
data-annotation-key="gkann_0353044108" data-annotation-type="annotation"><span class=" gkhl-function" 
data-slate-object="annotation" data-annotation-key="gkann_4033042121" data-annotation-type="annotation"><span 
data-slate-string="true">is_prime</span></span></span></span><span data-slate-leaf="true" data-offset-key="2429:3"><span 
class=" gkhl-params" data-slate-object="annotation" data-annotation-key="gkann_1409796701" 
data-annotation-type="annotation"><span class=" gkhl-function" data-slate-object="annotation" 
data-annotation-key="gkann_4033042121" data-annotation-type="annotation"><span data-slate-string="true">(int 
x)</span></span></span></span><span data-slate-leaf="true" data-offset-key="2429:4"><span class=" 
gkhl-function" data-slate-object="annotation" data-annotation-key="gkann_4033042121" data-annotation-type="annotation"><span 
data-slate-string="true"> </span></span></span><span data-slate-leaf="true" data-offset-key="2429:5"><span 
data-slate-string="true">{</span></span></span> </div> <div class="se-0a5bf258 se-466ac03c" 
data-slate-type="code-line" data-slate-object="block" data-key="2430"> <span data-slate-object="text" 
data-key="2431"><span data-slate-leaf="true" data-offset-key="2431:0" data-first-offset="true"><span 
data-slate-string="true"> </span></span><span data-slate-leaf="true" data-offset-key="2431:1"><span 
class=" gkhl-keyword" data-slate-object="annotation" data-annotation-key="gkann_3180120228" 
data-annotation-type="annotation"><span data-slate-string="true">for</span></span></span><span 
data-slate-leaf="true" data-offset-key="2431:2"><span data-slate-string="true"> (</span></span><span 
data-slate-leaf="true" data-offset-key="2431:3"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_7405970782" data-annotation-type="annotation"><span data-slate-string="true">int</span></span></span><span 
data-slate-leaf="true" data-offset-key="2431:4"><span data-slate-string="true"> i = </span></span><span 
data-slate-leaf="true" data-offset-key="2431:5"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_0360655961" data-annotation-type="annotation"><span data-slate-string="true">2</span></span></span><span 
data-slate-leaf="true" data-offset-key="2431:6"><span data-slate-string="true">; i * i &lt; 
x; i++) {</span></span></span> </div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" 
data-slate-object="block" data-key="2432"> <span data-slate-object="text" data-key="2433"><span 
data-slate-leaf="true" data-offset-key="2433:0" data-first-offset="true"><span data-slate-string="true"> 
</span></span><span data-slate-leaf="true" data-offset-key="2433:1"><span class=" gkhl-keyword" 
data-slate-object="annotation" data-annotation-key="gkann_5505487656" data-annotation-type="annotation"><span 
data-slate-string="true">if</span></span></span><span data-slate-leaf="true" data-offset-key="2433:2"><span 
data-slate-string="true"> (x % i == </span></span><span data-slate-leaf="true" data-offset-key="2433:3"><span 
class=" gkhl-number" data-slate-object="annotation" data-annotation-key="gkann_0395500065" 
data-annotation-type="annotation"><span data-slate-string="true">0</span></span></span><span 
data-slate-leaf="true" data-offset-key="2433:4"><span data-slate-string="true">) </span></span><span 
data-slate-leaf="true" data-offset-key="2433:5"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_3550453035" data-annotation-type="annotation"><span data-slate-string="true">return</span></span></span><span 
data-slate-leaf="true" data-offset-key="2433:6"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="2433:7"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_7810744603" data-annotation-type="annotation"><span data-slate-string="true">0</span></span></span><span 
data-slate-leaf="true" data-offset-key="2433:8"><span data-slate-string="true">;</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="2434"> <span data-slate-object="text" data-key="2435"><span data-slate-leaf="true" 
data-offset-key="2435:0" data-first-offset="true"><span data-slate-string="true"> }</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="2436"> <span data-slate-object="text" data-key="2437"><span data-slate-leaf="true" 
data-offset-key="2437:0" data-first-offset="true"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="2437:1"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_4597009740" data-annotation-type="annotation"><span data-slate-string="true">return</span></span></span><span 
data-slate-leaf="true" data-offset-key="2437:2"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="2437:3"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_4447499705" data-annotation-type="annotation"><span data-slate-string="true">1</span></span></span><span 
data-slate-leaf="true" data-offset-key="2437:4"><span data-slate-string="true">;</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="2438"> <span data-slate-object="text" data-key="2439"><span data-slate-leaf="true" 
data-offset-key="2439:0" data-first-offset="true"><span data-slate-string="true">}</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="2440"> <span data-slate-object="text" data-key="2441"></span> </div> <div class="se-0a5bf258 
se-466ac03c" data-slate-type="code-line" data-slate-object="block" data-key="2442"> <span data-slate-object="text" 
data-key="2443"><span data-slate-leaf="true" data-offset-key="2443:0" data-first-offset="true"><span 
class=" gkhl-comment" data-slate-object="annotation" data-annotation-key="gkann_0068566698" 
data-annotation-type="annotation"><span data-slate-string="true">// 第一个测试用例</span></span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="2444"> <span data-slate-object="text" data-key="2445"><span data-slate-leaf="true" 
data-offset-key="2445:0" data-first-offset="true"><span data-slate-string="true">TEST(test1, 
test_is_prime) {</span></span></span> </div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" 
data-slate-object="block" data-key="2446"> <span data-slate-object="text" data-key="2447"><span 
data-slate-leaf="true" data-offset-key="2447:0" data-first-offset="true"><span data-slate-string="true"> 
EXPECT_EQ(is_prime(</span></span><span data-slate-leaf="true" data-offset-key="2447:1"><span 
class=" gkhl-number" data-slate-object="annotation" data-annotation-key="gkann_6445044112" 
data-annotation-type="annotation"><span data-slate-string="true">3</span></span></span><span 
data-slate-leaf="true" data-offset-key="2447:2"><span data-slate-string="true">), </span></span><span 
data-slate-leaf="true" data-offset-key="2447:3"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_8754184558" data-annotation-type="annotation"><span data-slate-string="true">1</span></span></span><span 
data-slate-leaf="true" data-offset-key="2447:4"><span data-slate-string="true">);</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="2448"> <span data-slate-object="text" data-key="2449"><span data-slate-leaf="true" 
data-offset-key="2449:0" data-first-offset="true"><span data-slate-string="true"> EXPECT_EQ(is_prime(</span></span><span 
data-slate-leaf="true" data-offset-key="2449:1"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_8870370508" data-annotation-type="annotation"><span data-slate-string="true">5</span></span></span><span 
data-slate-leaf="true" data-offset-key="2449:2"><span data-slate-string="true">), </span></span><span 
data-slate-leaf="true" data-offset-key="2449:3"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_6097390847" data-annotation-type="annotation"><span data-slate-string="true">1</span></span></span><span 
data-slate-leaf="true" data-offset-key="2449:4"><span data-slate-string="true">);</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="2450"> <span data-slate-object="text" data-key="2451"><span data-slate-leaf="true" 
data-offset-key="2451:0" data-first-offset="true"><span data-slate-string="true"> EXPECT_EQ(is_prime(</span></span><span 
data-slate-leaf="true" data-offset-key="2451:1"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_6236716392" data-annotation-type="annotation"><span data-slate-string="true">7</span></span></span><span 
data-slate-leaf="true" data-offset-key="2451:2"><span data-slate-string="true">), </span></span><span 
data-slate-leaf="true" data-offset-key="2451:3"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_2933987614" data-annotation-type="annotation"><span data-slate-string="true">1</span></span></span><span 
data-slate-leaf="true" data-offset-key="2451:4"><span data-slate-string="true">);</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="2452"> <span data-slate-object="text" data-key="2453"><span data-slate-leaf="true" 
data-offset-key="2453:0" data-first-offset="true"><span data-slate-string="true">}</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="2454"> <span data-slate-object="text" data-key="2455"></span> </div> <div class="se-0a5bf258 
se-466ac03c" data-slate-type="code-line" data-slate-object="block" data-key="2456"> <span data-slate-object="text" 
data-key="2457"><span data-slate-leaf="true" data-offset-key="2457:0" data-first-offset="true"><span 
class=" gkhl-comment" data-slate-object="annotation" data-annotation-key="gkann_4790487343" 
data-annotation-type="annotation"><span data-slate-string="true">// 第二个测试用例</span></span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="2458"> <span data-slate-object="text" data-key="2459"><span data-slate-leaf="true" 
data-offset-key="2459:0" data-first-offset="true"><span data-slate-string="true">TEST(test2, 
test_is_prime) {</span></span></span> </div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" 
data-slate-object="block" data-key="2460"> <span data-slate-object="text" data-key="2461"><span 
data-slate-leaf="true" data-offset-key="2461:0" data-first-offset="true"><span data-slate-string="true"> 
EXPECT_EQ(is_prime(</span></span><span data-slate-leaf="true" data-offset-key="2461:1"><span 
class=" gkhl-number" data-slate-object="annotation" data-annotation-key="gkann_5719705317" 
data-annotation-type="annotation"><span data-slate-string="true">4</span></span></span><span 
data-slate-leaf="true" data-offset-key="2461:2"><span data-slate-string="true">), </span></span><span 
data-slate-leaf="true" data-offset-key="2461:3"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_6461667490" data-annotation-type="annotation"><span data-slate-string="true">0</span></span></span><span 
data-slate-leaf="true" data-offset-key="2461:4"><span data-slate-string="true">);</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="2462"> <span data-slate-object="text" data-key="2463"><span data-slate-leaf="true" 
data-offset-key="2463:0" data-first-offset="true"><span data-slate-string="true"> EXPECT_EQ(is_prime(</span></span><span 
data-slate-leaf="true" data-offset-key="2463:1"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_8274709873" data-annotation-type="annotation"><span data-slate-string="true">0</span></span></span><span 
data-slate-leaf="true" data-offset-key="2463:2"><span data-slate-string="true">), </span></span><span 
data-slate-leaf="true" data-offset-key="2463:3"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_0305193786" data-annotation-type="annotation"><span data-slate-string="true">0</span></span></span><span 
data-slate-leaf="true" data-offset-key="2463:4"><span data-slate-string="true">);</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="2464"> <span data-slate-object="text" data-key="2465"><span data-slate-leaf="true" 
data-offset-key="2465:0" data-first-offset="true"><span data-slate-string="true"> EXPECT_EQ(is_prime(</span></span><span 
data-slate-leaf="true" data-offset-key="2465:1"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_9132483572" data-annotation-type="annotation"><span data-slate-string="true">1</span></span></span><span 
data-slate-leaf="true" data-offset-key="2465:2"><span data-slate-string="true">), </span></span><span 
data-slate-leaf="true" data-offset-key="2465:3"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_4658923841" data-annotation-type="annotation"><span data-slate-string="true">0</span></span></span><span 
data-slate-leaf="true" data-offset-key="2465:4"><span data-slate-string="true">);</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="2466"> <span data-slate-object="text" data-key="2467"><span data-slate-leaf="true" 
data-offset-key="2467:0" data-first-offset="true"><span data-slate-string="true">}</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="2468"> <span data-slate-object="text" data-key="2469"></span> </div> <div class="se-0a5bf258 
se-466ac03c" data-slate-type="code-line" data-slate-object="block" data-key="2470"> <span data-slate-object="text" 
data-key="2471"><span data-slate-leaf="true" data-offset-key="2471:0" data-first-offset="true"><span 
class=" gkhl-keyword" data-slate-object="annotation" data-annotation-key="gkann_6298692593" 
data-annotation-type="annotation"><span class=" gkhl-function" data-slate-object="annotation" 
data-annotation-key="gkann_6449393761" data-annotation-type="annotation"><span data-slate-string="true">int</span></span></span></span><span 
data-slate-leaf="true" data-offset-key="2471:1"><span class=" gkhl-function" data-slate-object="annotation" 
data-annotation-key="gkann_6449393761" data-annotation-type="annotation"><span data-slate-string="true"> 
</span></span></span><span data-slate-leaf="true" data-offset-key="2471:2"><span class=" gkhl-title" 
data-slate-object="annotation" data-annotation-key="gkann_6447433968" data-annotation-type="annotation"><span 
class=" gkhl-function" data-slate-object="annotation" data-annotation-key="gkann_6449393761" 
data-annotation-type="annotation"><span data-slate-string="true">main</span></span></span></span><span 
data-slate-leaf="true" data-offset-key="2471:3"><span class=" gkhl-params" data-slate-object="annotation" 
data-annotation-key="gkann_9098085026" data-annotation-type="annotation"><span class=" gkhl-function" 
data-slate-object="annotation" data-annotation-key="gkann_6449393761" data-annotation-type="annotation"><span 
data-slate-string="true">()</span></span></span></span><span data-slate-leaf="true" data-offset-key="2471:4"><span 
class=" gkhl-function" data-slate-object="annotation" data-annotation-key="gkann_6449393761" 
data-annotation-type="annotation"><span data-slate-string="true"> </span></span></span><span 
data-slate-leaf="true" data-offset-key="2471:5"><span data-slate-string="true">{</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="2472"> <span data-slate-object="text" data-key="2473"><span data-slate-leaf="true" 
data-offset-key="2473:0" data-first-offset="true"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="2473:1"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_5234132725" data-annotation-type="annotation"><span data-slate-string="true">return</span></span></span><span 
data-slate-leaf="true" data-offset-key="2473:2"><span data-slate-string="true"> RUN_ALL_TESTS();</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="2474"> <span data-slate-object="text" data-key="2475"><span data-slate-leaf="true" 
data-offset-key="2475:0" data-first-offset="true"><span data-slate-string="true">}</span></span></span> 
</div> <div class="ps__rail-x" style="width: 365px; left: 0px; bottom: 0px;"> <div class="ps__thumb-x" 
tabindex="0" style="left: 0px; width: 324px;"></div> </div> <div class="ps__rail-y" style="top: 
0px; right: 0px;"> <div class="ps__thumb-y" tabindex="0" style="top: 0px; height: 0px;"></div> 
</div> </div> </div> <div class="se-79bfe00b " data-slate-type="paragraph" data-slate-object="block" 
data-key="2476"> <span data-slate-object="text" data-key="2477"><span data-slate-leaf="true" 
data-offset-key="2477:0" data-first-offset="true"><span data-slate-string="true">我们的目的，是在不改变这份源代码的前提下，通过在 
geek_test.h 中添加一些源码，使得这份代码的运行效果，能够类似于 gtest 的运行效果。</span></span></span> </div> <div class="se-adcae584 
" data-slate-type="paragraph" data-slate-object="block" data-key="2478"> <span data-slate-object="text" 
data-key="2479"><span data-slate-leaf="true" data-offset-key="2479:0" data-first-offset="true"><span 
data-slate-string="true">想要完成这个目标，我们就要先来思考 TEST 宏这里的内容，请你仔细观察这段由 TEST 宏定义的测试用例的相关代码：</span></span></span> 
</div> <div class="se-d9349179 se-ba66b08f" data-slate-type="pre" data-slate-object="block" 
data-key="2480"> <div class="se-3181d2e8 se-f95bb467"> <span></span> </div> <div class="se-44ff836c"> 
<div class="se-407dd076 se-775b7de9" data-code-line-number="1"></div> <div class="se-407dd076 
se-775b7de9" data-code-line-number="2"></div> <div class="se-407dd076 se-775b7de9" data-code-line-number="3"></div> 
<div class="se-407dd076 se-775b7de9" data-code-line-number="4"></div> <div class="se-407dd076 
se-775b7de9" data-code-line-number="5"></div> </div> <div class="se-fddea687 ps"> <div class="se-0a5bf258 
se-466ac03c" data-slate-type="code-line" data-slate-object="block" data-key="2481"> <span data-slate-object="text" 
data-key="2482"><span data-slate-leaf="true" data-offset-key="2482:0" data-first-offset="true"><span 
data-slate-string="true">TEST(test1, test_is_prime) {</span></span></span> </div> <div class="se-0a5bf258 
se-466ac03c" data-slate-type="code-line" data-slate-object="block" data-key="2483"> <span data-slate-object="text" 
data-key="2484"><span data-slate-leaf="true" data-offset-key="2484:0" data-first-offset="true"><span 
data-slate-string="true"> EXPECT_EQ(is_prime(3), 1);</span></span></span> </div> <div class="se-0a5bf258 
se-466ac03c" data-slate-type="code-line" data-slate-object="block" data-key="2485"> <span data-slate-object="text" 
data-key="2486"><span data-slate-leaf="true" data-offset-key="2486:0" data-first-offset="true"><span 
data-slate-string="true"> EXPECT_EQ(is_prime(5), 1);</span></span></span> </div> <div class="se-0a5bf258 
se-466ac03c" data-slate-type="code-line" data-slate-object="block" data-key="2487"> <span data-slate-object="text" 
data-key="2488"><span data-slate-leaf="true" data-offset-key="2488:0" data-first-offset="true"><span 
data-slate-string="true"> EXPECT_EQ(is_prime(7), 1);</span></span></span> </div> <div class="se-0a5bf258 
se-466ac03c" data-slate-type="code-line" data-slate-object="block" data-key="2489"> <span data-slate-object="text" 
data-key="2490"><span data-slate-leaf="true" data-offset-key="2490:0" data-first-offset="true"><span 
data-slate-string="true">}</span></span></span> </div> <div class="ps__rail-x" style="left: 
0px; bottom: 0px;"> <div class="ps__thumb-x" tabindex="0" style="left: 0px; width: 0px;"></div> 
</div> <div class="ps__rail-y" style="top: 0px; right: 0px;"> <div class="ps__thumb-y" tabindex="0" 
style="top: 0px; height: 0px;"></div> </div> </div> </div> <div class="se-96d2cd70 " data-slate-type="paragraph" 
data-slate-object="block" data-key="2491"> <span data-slate-object="text" data-key="2492"><span 
data-slate-leaf="true" data-offset-key="2492:0" data-first-offset="true"><span data-slate-string="true">TEST(test1, 
test_is_prime) 这部分应该是在调用 TEST 宏，而这部分被预处理器展开以后的内容，只有和后面大括号里的代码组合在一起，才是一段合法的 C 语言代码，也只有这样，这份代码才能通过编译。</span></span></span> 
</div> <div class="se-384795d8 " data-slate-type="paragraph" data-slate-object="block" data-key="2493"> 
<span data-slate-object="text" data-key="2494"><span data-slate-leaf="true" data-offset-key="2494:0" 
data-first-offset="true"><span data-slate-string="true">既然如此，我们就不难想到，TEST 宏展开以后，它应该是一个函数定义的头部，后面大括号里的代码，就是这个展开以后的函数头部的函数体部分，这样一切就都说得通了。</span></span></span> 
</div> <div class="se-94f41a67 " data-slate-type="paragraph" data-slate-object="block" data-key="2495"> 
<span data-slate-object="text" data-key="2496"><span data-slate-leaf="true" data-offset-key="2496:0" 
data-first-offset="true"><span data-slate-string="true">在实现 TEST 宏之前，我们还需要想清楚一个问题：由于程序中可以定义多个 
TEST 测试用例，如果每一个 TEST 宏展开都是一个函数头部的话，那这个展开的函数的名字是什么呢？如果每一个 TEST 宏展开的函数名字都一样，那程序一定无法通过编译，编译器会报与函数名重复相关的错误，所以， 
TEST 宏是如何确定展开函数的名字呢？</span></span></span> </div> <div class="se-c0c4ef27 " data-slate-type="paragraph" 
data-slate-object="block" data-key="2497"> <span data-slate-object="text" data-key="2498"><span 
data-slate-leaf="true" data-offset-key="2498:0" data-first-offset="true"><span data-slate-string="true">不知道你有没有注意到，TEST 
宏需要传入两个参数，这两个参数在输出信息中与测试用例的名字有关。那我们就该想到，可以使用这两个参数拼接出一个函数名，只要 TEST 传入的这两个参数不一样，那扩展出来的函数名就不同。最后，我们就可以初步得到如下的 
TEST 宏的一个实现：</span></span></span> </div> <div class="se-5892e29c se-1fbf257c" data-slate-type="pre" 
data-slate-object="block" data-key="2499" data-code-language="objectivec"> <div class="se-16a4386d 
se-e73f258f"> <span></span> </div> <div class="se-aa8197a7"> <div class="se-f16a2902 se-3c34314d" 
data-code-line-number="1"></div> <div class="se-f16a2902 se-3c34314d" data-code-line-number="2"></div> 
</div> <div class="se-5d2c1626 ps"> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" 
data-slate-object="block" data-key="2500"> <span data-slate-object="text" data-key="2501"><span 
data-slate-leaf="true" data-offset-key="2501:0" data-first-offset="true"><span class=" gkhl-meta" 
data-slate-object="annotation" data-annotation-key="gkann_2091401483" data-annotation-type="annotation"><span 
data-slate-string="true">#define TEST(test_name, func_name) \</span></span></span></span> </div> 
<div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="2502"> <span data-slate-object="text" data-key="2503"><span data-slate-leaf="true" 
data-offset-key="2503:0" data-first-offset="true"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_3911657421" data-annotation-type="annotation"><span data-slate-string="true">void</span></span></span><span 
data-slate-leaf="true" data-offset-key="2503:1"><span data-slate-string="true"> test_name</span></span><span 
data-slate-leaf="true" data-offset-key="2503:2"><span class=" gkhl-meta" data-slate-object="annotation" 
data-annotation-key="gkann_1929640787" data-annotation-type="annotation"><span data-slate-string="true">##_##func_name()</span></span></span></span> 
</div> <div class="ps__rail-x" style="left: 0px; bottom: 0px;"> <div class="ps__thumb-x" tabindex="0" 
style="left: 0px; width: 0px;"></div> </div> <div class="ps__rail-y" style="top: 0px; right: 
0px;"> <div class="ps__thumb-y" tabindex="0" style="top: 0px; height: 0px;"></div> </div> </div> 
</div> <div class="se-32987312 " data-slate-type="paragraph" data-slate-object="block" data-key="2504"> 
<span data-slate-object="text" data-key="2505"><span data-slate-leaf="true" data-offset-key="2505:0" 
data-first-offset="true"><span data-slate-string="true">如代码所示的 TEST 宏实现，我们将 TEST 宏的两个参数内容使用 
## 连接在一起，中间用一个额外的下划线连接，组成一个函数名字，这个函数的返回值类型是 void，无传入参数。</span></span></span> </div> <div class="se-141be4b6 
" data-slate-type="paragraph" data-slate-object="block" data-key="2506"> <span data-slate-object="text" 
data-key="2507"><span data-slate-leaf="true" data-offset-key="2507:0" data-first-offset="true"><span 
data-slate-string="true">根据这个实现，预处理器会将源代码中两处 TEST 宏的内容，替换成如下代码所示内容：</span></span></span> </div> 
<div class="se-efb44033 se-acb4c980" data-slate-type="pre" data-slate-object="block" data-key="2508" 
data-code-language="cpp"> <div class="se-68d7a6fd se-14b04eac"> <span></span> </div> <div class="se-8d88ecb3"> 
<div class="se-d40ac694 se-0b5cbe5f" data-code-line-number="1"></div> <div class="se-d40ac694 
se-0b5cbe5f" data-code-line-number="2"></div> <div class="se-d40ac694 se-0b5cbe5f" data-code-line-number="3"></div> 
<div class="se-d40ac694 se-0b5cbe5f" data-code-line-number="4"></div> <div class="se-d40ac694 
se-0b5cbe5f" data-code-line-number="5"></div> <div class="se-d40ac694 se-0b5cbe5f" data-code-line-number="6"></div> 
<div class="se-d40ac694 se-0b5cbe5f" data-code-line-number="7"></div> <div class="se-d40ac694 
se-0b5cbe5f" data-code-line-number="8"></div> <div class="se-d40ac694 se-0b5cbe5f" data-code-line-number="9"></div> 
<div class="se-d40ac694 se-0b5cbe5f" data-code-line-number="10"></div> <div class="se-d40ac694 
se-0b5cbe5f" data-code-line-number="11"></div> </div> <div class="se-6db6dd95 ps"> <div class="se-0a5bf258 
se-466ac03c" data-slate-type="code-line" data-slate-object="block" data-key="2509"> <span data-slate-object="text" 
data-key="2510"><span data-slate-leaf="true" data-offset-key="2510:0" data-first-offset="true"><span 
class=" gkhl-keyword" data-slate-object="annotation" data-annotation-key="gkann_0464426055" 
data-annotation-type="annotation"><span class=" gkhl-function" data-slate-object="annotation" 
data-annotation-key="gkann_9092825832" data-annotation-type="annotation"><span data-slate-string="true">void</span></span></span></span><span 
data-slate-leaf="true" data-offset-key="2510:1"><span class=" gkhl-function" data-slate-object="annotation" 
data-annotation-key="gkann_9092825832" data-annotation-type="annotation"><span data-slate-string="true"> 
</span></span></span><span data-slate-leaf="true" data-offset-key="2510:2"><span class=" gkhl-title" 
data-slate-object="annotation" data-annotation-key="gkann_4521809620" data-annotation-type="annotation"><span 
class=" gkhl-function" data-slate-object="annotation" data-annotation-key="gkann_9092825832" 
data-annotation-type="annotation"><span data-slate-string="true">test1_test_is_prime</span></span></span></span><span 
data-slate-leaf="true" data-offset-key="2510:3"><span class=" gkhl-function" data-slate-object="annotation" 
data-annotation-key="gkann_9092825832" data-annotation-type="annotation"><span class=" gkhl-params" 
data-slate-object="annotation" data-annotation-key="gkann_2098552985" data-annotation-type="annotation"><span 
data-slate-string="true">()</span></span></span></span><span data-slate-leaf="true" data-offset-key="2510:4"><span 
class=" gkhl-function" data-slate-object="annotation" data-annotation-key="gkann_9092825832" 
data-annotation-type="annotation"><span data-slate-string="true"> </span></span></span><span 
data-slate-leaf="true" data-offset-key="2510:5"><span data-slate-string="true">{</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="2511"> <span data-slate-object="text" data-key="2512"><span data-slate-leaf="true" 
data-offset-key="2512:0" data-first-offset="true"><span data-slate-string="true"> EXPECT_EQ(is_prime(</span></span><span 
data-slate-leaf="true" data-offset-key="2512:1"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_4864893233" data-annotation-type="annotation"><span data-slate-string="true">3</span></span></span><span 
data-slate-leaf="true" data-offset-key="2512:2"><span data-slate-string="true">), </span></span><span 
data-slate-leaf="true" data-offset-key="2512:3"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_6275772627" data-annotation-type="annotation"><span data-slate-string="true">1</span></span></span><span 
data-slate-leaf="true" data-offset-key="2512:4"><span data-slate-string="true">);</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="2513"> <span data-slate-object="text" data-key="2514"><span data-slate-leaf="true" 
data-offset-key="2514:0" data-first-offset="true"><span data-slate-string="true"> EXPECT_EQ(is_prime(</span></span><span 
data-slate-leaf="true" data-offset-key="2514:1"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_6764771301" data-annotation-type="annotation"><span data-slate-string="true">5</span></span></span><span 
data-slate-leaf="true" data-offset-key="2514:2"><span data-slate-string="true">), </span></span><span 
data-slate-leaf="true" data-offset-key="2514:3"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_1889988532" data-annotation-type="annotation"><span data-slate-string="true">1</span></span></span><span 
data-slate-leaf="true" data-offset-key="2514:4"><span data-slate-string="true">);</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="2515"> <span data-slate-object="text" data-key="2516"><span data-slate-leaf="true" 
data-offset-key="2516:0" data-first-offset="true"><span data-slate-string="true"> EXPECT_EQ(is_prime(</span></span><span 
data-slate-leaf="true" data-offset-key="2516:1"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_5683916874" data-annotation-type="annotation"><span data-slate-string="true">7</span></span></span><span 
data-slate-leaf="true" data-offset-key="2516:2"><span data-slate-string="true">), </span></span><span 
data-slate-leaf="true" data-offset-key="2516:3"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_9216778907" data-annotation-type="annotation"><span data-slate-string="true">1</span></span></span><span 
data-slate-leaf="true" data-offset-key="2516:4"><span data-slate-string="true">);</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="2517"> <span data-slate-object="text" data-key="2518"><span data-slate-leaf="true" 
data-offset-key="2518:0" data-first-offset="true"><span data-slate-string="true">}</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="2519"> <span data-slate-object="text" data-key="2520"></span> </div> <div class="se-0a5bf258 
se-466ac03c" data-slate-type="code-line" data-slate-object="block" data-key="2521"> <span data-slate-object="text" 
data-key="2522"><span data-slate-leaf="true" data-offset-key="2522:0" data-first-offset="true"><span 
class=" gkhl-keyword" data-slate-object="annotation" data-annotation-key="gkann_8377731340" 
data-annotation-type="annotation"><span class=" gkhl-function" data-slate-object="annotation" 
data-annotation-key="gkann_4405845616" data-annotation-type="annotation"><span data-slate-string="true">void</span></span></span></span><span 
data-slate-leaf="true" data-offset-key="2522:1"><span class=" gkhl-function" data-slate-object="annotation" 
data-annotation-key="gkann_4405845616" data-annotation-type="annotation"><span data-slate-string="true"> 
</span></span></span><span data-slate-leaf="true" data-offset-key="2522:2"><span class=" gkhl-title" 
data-slate-object="annotation" data-annotation-key="gkann_9368837019" data-annotation-type="annotation"><span 
class=" gkhl-function" data-slate-object="annotation" data-annotation-key="gkann_4405845616" 
data-annotation-type="annotation"><span data-slate-string="true">test2_test_is_prime</span></span></span></span><span 
data-slate-leaf="true" data-offset-key="2522:3"><span class=" gkhl-params" data-slate-object="annotation" 
data-annotation-key="gkann_9465074927" data-annotation-type="annotation"><span class=" gkhl-function" 
data-slate-object="annotation" data-annotation-key="gkann_4405845616" data-annotation-type="annotation"><span 
data-slate-string="true">()</span></span></span></span><span data-slate-leaf="true" data-offset-key="2522:4"><span 
class=" gkhl-function" data-slate-object="annotation" data-annotation-key="gkann_4405845616" 
data-annotation-type="annotation"><span data-slate-string="true"> </span></span></span><span 
data-slate-leaf="true" data-offset-key="2522:5"><span data-slate-string="true">{</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="2523"> <span data-slate-object="text" data-key="2524"><span data-slate-leaf="true" 
data-offset-key="2524:0" data-first-offset="true"><span data-slate-string="true"> EXPECT_EQ(is_prime(</span></span><span 
data-slate-leaf="true" data-offset-key="2524:1"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_0712651958" data-annotation-type="annotation"><span data-slate-string="true">4</span></span></span><span 
data-slate-leaf="true" data-offset-key="2524:2"><span data-slate-string="true">), </span></span><span 
data-slate-leaf="true" data-offset-key="2524:3"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_5438755086" data-annotation-type="annotation"><span data-slate-string="true">0</span></span></span><span 
data-slate-leaf="true" data-offset-key="2524:4"><span data-slate-string="true">);</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="2525"> <span data-slate-object="text" data-key="2526"><span data-slate-leaf="true" 
data-offset-key="2526:0" data-first-offset="true"><span data-slate-string="true"> EXPECT_EQ(is_prime(</span></span><span 
data-slate-leaf="true" data-offset-key="2526:1"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_6369376347" data-annotation-type="annotation"><span data-slate-string="true">0</span></span></span><span 
data-slate-leaf="true" data-offset-key="2526:2"><span data-slate-string="true">), </span></span><span 
data-slate-leaf="true" data-offset-key="2526:3"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_6558729046" data-annotation-type="annotation"><span data-slate-string="true">0</span></span></span><span 
data-slate-leaf="true" data-offset-key="2526:4"><span data-slate-string="true">);</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="2527"> <span data-slate-object="text" data-key="2528"><span data-slate-leaf="true" 
data-offset-key="2528:0" data-first-offset="true"><span data-slate-string="true"> EXPECT_EQ(is_prime(</span></span><span 
data-slate-leaf="true" data-offset-key="2528:1"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_8349556865" data-annotation-type="annotation"><span data-slate-string="true">1</span></span></span><span 
data-slate-leaf="true" data-offset-key="2528:2"><span data-slate-string="true">), </span></span><span 
data-slate-leaf="true" data-offset-key="2528:3"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_9918860555" data-annotation-type="annotation"><span data-slate-string="true">0</span></span></span><span 
data-slate-leaf="true" data-offset-key="2528:4"><span data-slate-string="true">);</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="2529"> <span data-slate-object="text" data-key="2530"><span data-slate-leaf="true" 
data-offset-key="2530:0" data-first-offset="true"><span data-slate-string="true">}</span></span></span> 
</div> <div class="ps__rail-x" style="left: 0px; bottom: 0px;"> <div class="ps__thumb-x" tabindex="0" 
style="left: 0px; width: 0px;"></div> </div> <div class="ps__rail-y" style="top: 0px; right: 
0px;"> <div class="ps__thumb-y" tabindex="0" style="top: 0px; height: 0px;"></div> </div> </div> 
</div> <div class="se-80d142a3 " data-slate-type="paragraph" data-slate-object="block" data-key="2531"> 
<span data-slate-object="text" data-key="2532"><span data-slate-leaf="true" data-offset-key="2532:0" 
data-first-offset="true"><span data-slate-string="true">这样，也就把原来看似不合理的 TEST 宏，转换成了合法的 C 语言代码了。</span></span></span> 
</div> <h2 class="se-5e544797" data-slate-type="heading" data-slate-object="block" data-key="2533"><span 
data-slate-type="code" data-slate-object="inline" data-key="2534" class="se-1fdea742"><span 
data-slate-object="text" data-key="2535"><span data-slate-leaf="true" data-offset-key="2535:0" 
data-first-offset="true"><span data-slate-string="true">__attribute__</span></span></span></span><span 
data-slate-object="text" data-key="2536"><span data-slate-leaf="true" data-offset-key="2536:0" 
data-first-offset="true"><span data-slate-string="true">：让其它函数先于主函数执行</span></span></span></h2> 
<div class="se-20477375 " data-slate-type="paragraph" data-slate-object="block" data-key="2537"> 
<span data-slate-object="text" data-key="2538"><span data-slate-leaf="true" data-offset-key="2538:0" 
data-first-offset="true"><span data-slate-string="true">在继续讲测试框架的设计之前，我们来补充一个知识点。</span></span></span> 
</div> <div class="se-c5a142f6 " data-slate-type="paragraph" data-slate-object="block" data-key="2539"> 
<span data-slate-object="text" data-key="2540"><span data-slate-leaf="true" data-offset-key="2540:0" 
data-first-offset="true"><span data-slate-string="true">之前，我们所学习到的程序执行过程，既是从主函数开始，也是从主函数结束。也就是说，在常规的程序执行过程中，其它函数都是在主函数执行之后，才被直接或者间接调用执行。接下来，我就要给你讲一种能够让函数在主函数执行之前就执行的编程技巧。</span></span></span> 
</div> <div class="se-a1d12731 " data-slate-type="paragraph" data-slate-object="block" data-key="2541"> 
<span data-slate-object="text" data-key="2542"><span data-slate-leaf="true" data-offset-key="2542:0" 
data-first-offset="true"><span data-slate-string="true">首先，我们先来看如下代码：</span></span></span> 
</div> <div class="se-45a82220 se-6bc59551" data-slate-type="pre" data-slate-object="block" 
data-key="2543" data-code-language="cpp"> <div class="se-37119098 se-484d0fd5"> <span></span> 
</div> <div class="se-449a9445"> <div class="se-ad8e8cad se-0b392d20" data-code-line-number="1"></div> 
<div class="se-ad8e8cad se-0b392d20" data-code-line-number="2"></div> <div class="se-ad8e8cad 
se-0b392d20" data-code-line-number="3"></div> <div class="se-ad8e8cad se-0b392d20" data-code-line-number="4"></div> 
<div class="se-ad8e8cad se-0b392d20" data-code-line-number="5"></div> <div class="se-ad8e8cad 
se-0b392d20" data-code-line-number="6"></div> <div class="se-ad8e8cad se-0b392d20" data-code-line-number="7"></div> 
<div class="se-ad8e8cad se-0b392d20" data-code-line-number="8"></div> <div class="se-ad8e8cad 
se-0b392d20" data-code-line-number="9"></div> <div class="se-ad8e8cad se-0b392d20" data-code-line-number="10"></div> 
<div class="se-ad8e8cad se-0b392d20" data-code-line-number="11"></div> </div> <div class="se-7a00e5a2 
ps"> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="2544"> <span data-slate-object="text" data-key="2545"><span data-slate-leaf="true" 
data-offset-key="2545:0" data-first-offset="true"><span class=" gkhl-meta" data-slate-object="annotation" 
data-annotation-key="gkann_9336643832" data-annotation-type="annotation"><span data-slate-string="true">#include 
&lt;stdio.h&gt;</span></span></span></span> </div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" 
data-slate-object="block" data-key="2546"> <span data-slate-object="text" data-key="2547"></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="2548"> <span data-slate-object="text" data-key="2549"><span data-slate-leaf="true" 
data-offset-key="2549:0" data-first-offset="true"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_8743984933" data-annotation-type="annotation"><span class=" gkhl-function" 
data-slate-object="annotation" data-annotation-key="gkann_0201449974" data-annotation-type="annotation"><span 
data-slate-string="true">void</span></span></span></span><span data-slate-leaf="true" data-offset-key="2549:1"><span 
class=" gkhl-function" data-slate-object="annotation" data-annotation-key="gkann_0201449974" 
data-annotation-type="annotation"><span data-slate-string="true"> </span></span></span><span 
data-slate-leaf="true" data-offset-key="2549:2"><span class=" gkhl-title" data-slate-object="annotation" 
data-annotation-key="gkann_7579704351" data-annotation-type="annotation"><span class=" gkhl-function" 
data-slate-object="annotation" data-annotation-key="gkann_0201449974" data-annotation-type="annotation"><span 
data-slate-string="true">pre_output</span></span></span></span><span data-slate-leaf="true" 
data-offset-key="2549:3"><span class=" gkhl-params" data-slate-object="annotation" data-annotation-key="gkann_1314797655" 
data-annotation-type="annotation"><span class=" gkhl-function" data-slate-object="annotation" 
data-annotation-key="gkann_0201449974" data-annotation-type="annotation"><span data-slate-string="true">()</span></span></span></span><span 
data-slate-leaf="true" data-offset-key="2549:4"><span class=" gkhl-function" data-slate-object="annotation" 
data-annotation-key="gkann_0201449974" data-annotation-type="annotation"><span data-slate-string="true"> 
</span></span></span><span data-slate-leaf="true" data-offset-key="2549:5"><span data-slate-string="true">{</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="2550"> <span data-slate-object="text" data-key="2551"><span data-slate-leaf="true" 
data-offset-key="2551:0" data-first-offset="true"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="2551:1"><span class=" gkhl-built_in" data-slate-object="annotation" 
data-annotation-key="gkann_3052494293" data-annotation-type="annotation"><span data-slate-string="true">printf</span></span></span><span 
data-slate-leaf="true" data-offset-key="2551:2"><span data-slate-string="true">(</span></span><span 
data-slate-leaf="true" data-offset-key="2551:3"><span class=" gkhl-string" data-slate-object="annotation" 
data-annotation-key="gkann_7594643643" data-annotation-type="annotation"><span data-slate-string="true">"hello 
geek!\n"</span></span></span><span data-slate-leaf="true" data-offset-key="2551:4"><span data-slate-string="true">);</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="2552"> <span data-slate-object="text" data-key="2553"><span data-slate-leaf="true" 
data-offset-key="2553:0" data-first-offset="true"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="2553:1"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_1817055675" data-annotation-type="annotation"><span data-slate-string="true">return</span></span></span><span 
data-slate-leaf="true" data-offset-key="2553:2"><span data-slate-string="true"> ;</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="2554"> <span data-slate-object="text" data-key="2555"><span data-slate-leaf="true" 
data-offset-key="2555:0" data-first-offset="true"><span data-slate-string="true">}</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="2556"> <span data-slate-object="text" data-key="2557"></span> </div> <div class="se-0a5bf258 
se-466ac03c" data-slate-type="code-line" data-slate-object="block" data-key="2558"> <span data-slate-object="text" 
data-key="2559"><span data-slate-leaf="true" data-offset-key="2559:0" data-first-offset="true"><span 
class=" gkhl-function" data-slate-object="annotation" data-annotation-key="gkann_7868016098" 
data-annotation-type="annotation"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_6776335749" data-annotation-type="annotation"><span data-slate-string="true">int</span></span></span></span><span 
data-slate-leaf="true" data-offset-key="2559:1"><span class=" gkhl-function" data-slate-object="annotation" 
data-annotation-key="gkann_7868016098" data-annotation-type="annotation"><span data-slate-string="true"> 
</span></span></span><span data-slate-leaf="true" data-offset-key="2559:2"><span class=" gkhl-function" 
data-slate-object="annotation" data-annotation-key="gkann_7868016098" data-annotation-type="annotation"><span 
class=" gkhl-title" data-slate-object="annotation" data-annotation-key="gkann_8006497477" data-annotation-type="annotation"><span 
data-slate-string="true">main</span></span></span></span><span data-slate-leaf="true" data-offset-key="2559:3"><span 
class=" gkhl-function" data-slate-object="annotation" data-annotation-key="gkann_7868016098" 
data-annotation-type="annotation"><span class=" gkhl-params" data-slate-object="annotation" 
data-annotation-key="gkann_0505373640" data-annotation-type="annotation"><span data-slate-string="true">()</span></span></span></span><span 
data-slate-leaf="true" data-offset-key="2559:4"><span class=" gkhl-function" data-slate-object="annotation" 
data-annotation-key="gkann_7868016098" data-annotation-type="annotation"><span data-slate-string="true"> 
</span></span></span><span data-slate-leaf="true" data-offset-key="2559:5"><span data-slate-string="true">{</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="2560"> <span data-slate-object="text" data-key="2561"><span data-slate-leaf="true" 
data-offset-key="2561:0" data-first-offset="true"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="2561:1"><span class=" gkhl-built_in" data-slate-object="annotation" 
data-annotation-key="gkann_5859794254" data-annotation-type="annotation"><span data-slate-string="true">printf</span></span></span><span 
data-slate-leaf="true" data-offset-key="2561:2"><span data-slate-string="true">(</span></span><span 
data-slate-leaf="true" data-offset-key="2561:3"><span class=" gkhl-string" data-slate-object="annotation" 
data-annotation-key="gkann_1614558260" data-annotation-type="annotation"><span data-slate-string="true">"hello 
main!"</span></span></span><span data-slate-leaf="true" data-offset-key="2561:4"><span data-slate-string="true">);</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="2562"> <span data-slate-object="text" data-key="2563"><span data-slate-leaf="true" 
data-offset-key="2563:0" data-first-offset="true"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="2563:1"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_9525712279" data-annotation-type="annotation"><span data-slate-string="true">return</span></span></span><span 
data-slate-leaf="true" data-offset-key="2563:2"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="2563:3"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_0834555228" data-annotation-type="annotation"><span data-slate-string="true">0</span></span></span><span 
data-slate-leaf="true" data-offset-key="2563:4"><span data-slate-string="true">;</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="2564"> <span data-slate-object="text" data-key="2565"><span data-slate-leaf="true" 
data-offset-key="2565:0" data-first-offset="true"><span data-slate-string="true">}</span></span></span> 
</div> <div class="ps__rail-x" style="left: 0px; bottom: 0px;"> <div class="ps__thumb-x" tabindex="0" 
style="left: 0px; width: 0px;"></div> </div> <div class="ps__rail-y" style="top: 0px; right: 
0px;"> <div class="ps__thumb-y" tabindex="0" style="top: 0px; height: 0px;"></div> </div> </div> 
</div> <div class="se-1dd650a1 " data-slate-type="paragraph" data-slate-object="block" data-key="2566"> 
<span data-slate-object="text" data-key="2567"><span data-slate-leaf="true" data-offset-key="2567:0" 
data-first-offset="true"><span data-slate-string="true">代码运行以后，会输出一行字符串 “hello main!”。</span></span></span> 
</div> <div class="se-09f3d416 " data-slate-type="paragraph" data-slate-object="block" data-key="2568"> 
<span data-slate-object="text" data-key="2569"><span data-slate-leaf="true" data-offset-key="2569:0" 
data-first-offset="true"><span data-slate-string="true">接下来呢，我们对上述代码稍微修改，在 pre_output 函数前面加上</span></span></span><span 
data-slate-type="code" data-slate-object="inline" data-key="2570" class="se-1fdea742"><span 
data-slate-object="text" data-key="2571"><span data-slate-leaf="true" data-offset-key="2571:0" 
data-first-offset="true"><span data-slate-string="true">__attribute__</span></span></span></span><span 
data-slate-object="text" data-key="2572"><span data-slate-leaf="true" data-offset-key="2572:0" 
data-first-offset="true"><span data-slate-string="true">((constructor)) 。这样，pre_output 函数就会先于主函数执行，代码如下：</span></span></span> 
</div> <div class="se-e056b8d3 se-d7581654" data-slate-type="pre" data-slate-object="block" 
data-key="2573" data-code-language="cpp"> <div class="se-10d7fcf1 se-9ef5af5a"> <span></span> 
</div> <div class="se-f2927106"> <div class="se-98be3b11 se-e9c483f5" data-code-line-number="1"></div> 
<div class="se-98be3b11 se-e9c483f5" data-code-line-number="2"></div> <div class="se-98be3b11 
se-e9c483f5" data-code-line-number="3"></div> <div class="se-98be3b11 se-e9c483f5" data-code-line-number="4"></div> 
<div class="se-98be3b11 se-e9c483f5" data-code-line-number="5"></div> <div class="se-98be3b11 
se-e9c483f5" data-code-line-number="6"></div> <div class="se-98be3b11 se-e9c483f5" data-code-line-number="7"></div> 
<div class="se-98be3b11 se-e9c483f5" data-code-line-number="8"></div> <div class="se-98be3b11 
se-e9c483f5" data-code-line-number="9"></div> <div class="se-98be3b11 se-e9c483f5" data-code-line-number="10"></div> 
<div class="se-98be3b11 se-e9c483f5" data-code-line-number="11"></div> <div class="se-98be3b11 
se-e9c483f5" data-code-line-number="12"></div> </div> <div class="se-a93830c6 ps"> <div class="se-0a5bf258 
se-466ac03c" data-slate-type="code-line" data-slate-object="block" data-key="2574"> <span data-slate-object="text" 
data-key="2575"><span data-slate-leaf="true" data-offset-key="2575:0" data-first-offset="true"><span 
class=" gkhl-meta" data-slate-object="annotation" data-annotation-key="gkann_2668048936" data-annotation-type="annotation"><span 
data-slate-string="true">#include &lt;stdio.h&gt;</span></span></span></span> </div> <div class="se-0a5bf258 
se-466ac03c" data-slate-type="code-line" data-slate-object="block" data-key="2576"> <span data-slate-object="text" 
data-key="2577"></span> </div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" 
data-slate-object="block" data-key="2578"> <span data-slate-object="text" data-key="2579"><span 
data-slate-leaf="true" data-offset-key="2579:0" data-first-offset="true"><span data-slate-string="true">__attribute__((constructor))</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="2580"> <span data-slate-object="text" data-key="2581"><span data-slate-leaf="true" 
data-offset-key="2581:0" data-first-offset="true"><span class=" gkhl-function" data-slate-object="annotation" 
data-annotation-key="gkann_3971821936" data-annotation-type="annotation"><span class=" gkhl-keyword" 
data-slate-object="annotation" data-annotation-key="gkann_9333582411" data-annotation-type="annotation"><span 
data-slate-string="true">void</span></span></span></span><span data-slate-leaf="true" data-offset-key="2581:1"><span 
class=" gkhl-function" data-slate-object="annotation" data-annotation-key="gkann_3971821936" 
data-annotation-type="annotation"><span data-slate-string="true"> </span></span></span><span 
data-slate-leaf="true" data-offset-key="2581:2"><span class=" gkhl-title" data-slate-object="annotation" 
data-annotation-key="gkann_9981519769" data-annotation-type="annotation"><span class=" gkhl-function" 
data-slate-object="annotation" data-annotation-key="gkann_3971821936" data-annotation-type="annotation"><span 
data-slate-string="true">pre_output</span></span></span></span><span data-slate-leaf="true" 
data-offset-key="2581:3"><span class=" gkhl-params" data-slate-object="annotation" data-annotation-key="gkann_1902578898" 
data-annotation-type="annotation"><span class=" gkhl-function" data-slate-object="annotation" 
data-annotation-key="gkann_3971821936" data-annotation-type="annotation"><span data-slate-string="true">()</span></span></span></span><span 
data-slate-leaf="true" data-offset-key="2581:4"><span class=" gkhl-function" data-slate-object="annotation" 
data-annotation-key="gkann_3971821936" data-annotation-type="annotation"><span data-slate-string="true"> 
</span></span></span><span data-slate-leaf="true" data-offset-key="2581:5"><span data-slate-string="true">{</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="2582"> <span data-slate-object="text" data-key="2583"><span data-slate-leaf="true" 
data-offset-key="2583:0" data-first-offset="true"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="2583:1"><span class=" gkhl-built_in" data-slate-object="annotation" 
data-annotation-key="gkann_7527176814" data-annotation-type="annotation"><span data-slate-string="true">printf</span></span></span><span 
data-slate-leaf="true" data-offset-key="2583:2"><span data-slate-string="true">(</span></span><span 
data-slate-leaf="true" data-offset-key="2583:3"><span class=" gkhl-string" data-slate-object="annotation" 
data-annotation-key="gkann_2237934861" data-annotation-type="annotation"><span data-slate-string="true">"hello 
geek!\n"</span></span></span><span data-slate-leaf="true" data-offset-key="2583:4"><span data-slate-string="true">);</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="2584"> <span data-slate-object="text" data-key="2585"><span data-slate-leaf="true" 
data-offset-key="2585:0" data-first-offset="true"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="2585:1"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_4608744938" data-annotation-type="annotation"><span data-slate-string="true">return</span></span></span><span 
data-slate-leaf="true" data-offset-key="2585:2"><span data-slate-string="true"> ;</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="2586"> <span data-slate-object="text" data-key="2587"><span data-slate-leaf="true" 
data-offset-key="2587:0" data-first-offset="true"><span data-slate-string="true">}</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="2588"> <span data-slate-object="text" data-key="2589"></span> </div> <div class="se-0a5bf258 
se-466ac03c" data-slate-type="code-line" data-slate-object="block" data-key="2590"> <span data-slate-object="text" 
data-key="2591"><span data-slate-leaf="true" data-offset-key="2591:0" data-first-offset="true"><span 
class=" gkhl-function" data-slate-object="annotation" data-annotation-key="gkann_3831401361" 
data-annotation-type="annotation"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_3413101832" data-annotation-type="annotation"><span data-slate-string="true">int</span></span></span></span><span 
data-slate-leaf="true" data-offset-key="2591:1"><span class=" gkhl-function" data-slate-object="annotation" 
data-annotation-key="gkann_3831401361" data-annotation-type="annotation"><span data-slate-string="true"> 
</span></span></span><span data-slate-leaf="true" data-offset-key="2591:2"><span class=" gkhl-function" 
data-slate-object="annotation" data-annotation-key="gkann_3831401361" data-annotation-type="annotation"><span 
class=" gkhl-title" data-slate-object="annotation" data-annotation-key="gkann_0217241144" data-annotation-type="annotation"><span 
data-slate-string="true">main</span></span></span></span><span data-slate-leaf="true" data-offset-key="2591:3"><span 
class=" gkhl-function" data-slate-object="annotation" data-annotation-key="gkann_3831401361" 
data-annotation-type="annotation"><span class=" gkhl-params" data-slate-object="annotation" 
data-annotation-key="gkann_4003847073" data-annotation-type="annotation"><span data-slate-string="true">()</span></span></span></span><span 
data-slate-leaf="true" data-offset-key="2591:4"><span class=" gkhl-function" data-slate-object="annotation" 
data-annotation-key="gkann_3831401361" data-annotation-type="annotation"><span data-slate-string="true"> 
</span></span></span><span data-slate-leaf="true" data-offset-key="2591:5"><span data-slate-string="true">{</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="2592"> <span data-slate-object="text" data-key="2593"><span data-slate-leaf="true" 
data-offset-key="2593:0" data-first-offset="true"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="2593:1"><span class=" gkhl-built_in" data-slate-object="annotation" 
data-annotation-key="gkann_4152890475" data-annotation-type="annotation"><span data-slate-string="true">printf</span></span></span><span 
data-slate-leaf="true" data-offset-key="2593:2"><span data-slate-string="true">(</span></span><span 
data-slate-leaf="true" data-offset-key="2593:3"><span class=" gkhl-string" data-slate-object="annotation" 
data-annotation-key="gkann_0985262340" data-annotation-type="annotation"><span data-slate-string="true">"hello 
main!\n"</span></span></span><span data-slate-leaf="true" data-offset-key="2593:4"><span data-slate-string="true">);</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="2594"> <span data-slate-object="text" data-key="2595"><span data-slate-leaf="true" 
data-offset-key="2595:0" data-first-offset="true"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="2595:1"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_3746451352" data-annotation-type="annotation"><span data-slate-string="true">return</span></span></span><span 
data-slate-leaf="true" data-offset-key="2595:2"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="2595:3"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_0291412780" data-annotation-type="annotation"><span data-slate-string="true">0</span></span></span><span 
data-slate-leaf="true" data-offset-key="2595:4"><span data-slate-string="true">;</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="2596"> <span data-slate-object="text" data-key="2597"><span data-slate-leaf="true" 
data-offset-key="2597:0" data-first-offset="true"><span data-slate-string="true">}</span></span></span> 
</div> <div class="ps__rail-x" style="left: 0px; bottom: 0px;"> <div class="ps__thumb-x" tabindex="0" 
style="left: 0px; width: 0px;"></div> </div> <div class="ps__rail-y" style="top: 0px; right: 
0px;"> <div class="ps__thumb-y" tabindex="0" style="top: 0px; height: 0px;"></div> </div> </div> 
</div> <div class="se-2977d833 " data-slate-type="paragraph" data-slate-object="block" data-key="2598"> 
<span data-slate-object="text" data-key="2599"><span data-slate-leaf="true" data-offset-key="2599:0" 
data-first-offset="true"><span data-slate-string="true">如上代码执行以后，程序会输出两行内容，第 1 行是 pre_output 
函数输出的内容 “hello geek!”，第 2 行才是主函数的执行输出内容 “hello main!”。</span></span></span> </div> <div class="se-45daa677 
" data-slate-type="paragraph" data-slate-object="block" data-key="2600"> <span data-slate-object="text" 
data-key="2601"><span data-slate-leaf="true" data-offset-key="2601:0" data-first-offset="true"><span 
data-slate-string="true">从输出内容可以看出，加了</span></span></span><span data-slate-type="code" data-slate-object="inline" 
data-key="2602" class="se-1fdea742"><span data-slate-object="text" data-key="2603"><span data-slate-leaf="true" 
data-offset-key="2603:0" data-first-offset="true"><span data-slate-string="true">__attribute__</span></span></span></span><span 
data-slate-object="text" data-key="2604"><span data-slate-leaf="true" data-offset-key="2604:0" 
data-first-offset="true"><span data-slate-string="true">((constructor)) 以后，pre_output 函数会先于 
main 主函数执行，这种有趣的特性，在接下来的操作中我们还会用得上，你要理解并记住。</span></span></span> </div> <div class="se-85dd0e7a 
" data-slate-type="paragraph" data-slate-object="block" data-key="2605"> <span data-slate-object="text" 
data-key="2606"><span data-slate-leaf="true" data-offset-key="2606:0" data-first-offset="true"><span 
data-slate-string="true">其实 </span></span></span><span data-slate-type="code" data-slate-object="inline" 
data-key="2607" class="se-1fdea742"><span data-slate-object="text" data-key="2608"><span data-slate-leaf="true" 
data-offset-key="2608:0" data-first-offset="true"><span data-slate-string="true">__attribute__</span></span></span></span><span 
data-slate-object="text" data-key="2609"><span data-slate-leaf="true" data-offset-key="2609:0" 
data-first-offset="true"><span data-slate-string="true"> 的作用还很多，你可以上网搜搜，会让你的程序性质变得特别有意思。</span></span></span> 
</div> <h2 class="se-1e3200ae" data-slate-type="heading" data-slate-object="block" data-key="2610"><span 
data-slate-object="text" data-key="2611"><span data-slate-leaf="true" data-offset-key="2611:0" 
data-first-offset="true"><span data-slate-string="true">RUN_ALL_TESTS 函数设计</span></span></span></h2> 
<div class="se-4983afcf " data-slate-type="paragraph" data-slate-object="block" data-key="2612"> 
<span data-slate-object="text" data-key="2613"><span data-slate-leaf="true" data-offset-key="2613:0" 
data-first-offset="true"><span data-slate-string="true">好了，准备工作都做完了，接下来让我们来思考一下 RUN_ALL_TESTS 
函数要完成的事情，以及完成这些事情所需要的条件。</span></span></span> </div> <div class="se-4f15b99a " data-slate-type="paragraph" 
data-slate-object="block" data-key="2614"> <span data-slate-object="text" data-key="2615"><span 
data-slate-leaf="true" data-offset-key="2615:0" data-first-offset="true"><span data-slate-string="true">从主函数中调用 
RUN_ALL_TESTS 函数的方式来看，RUN_ALL_TESTS 函数应该是一个返回值为整型的函数。这样，我们可以得到这样的函数声明形式：</span></span></span> 
</div> <div class="se-793e92aa se-a80ec6d7" data-slate-type="pre" data-slate-object="block" 
data-key="2616" data-code-language="cpp"> <div class="se-75102dda se-b91492c5"> <span></span> 
</div> <div class="se-410b15fb"> <div class="se-856995be se-a28dc184" data-code-line-number="1"></div> 
</div> <div class="se-b0a69b7e ps"> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" 
data-slate-object="block" data-key="2617"> <span data-slate-object="text" data-key="2618"><span 
data-slate-leaf="true" data-offset-key="2618:0" data-first-offset="true"><span class=" gkhl-function" 
data-slate-object="annotation" data-annotation-key="gkann_8570344447" data-annotation-type="annotation"><span 
class=" gkhl-keyword" data-slate-object="annotation" data-annotation-key="gkann_1708962993" 
data-annotation-type="annotation"><span data-slate-string="true">int</span></span></span></span><span 
data-slate-leaf="true" data-offset-key="2618:1"><span class=" gkhl-function" data-slate-object="annotation" 
data-annotation-key="gkann_8570344447" data-annotation-type="annotation"><span data-slate-string="true"> 
</span></span></span><span data-slate-leaf="true" data-offset-key="2618:2"><span class=" gkhl-function" 
data-slate-object="annotation" data-annotation-key="gkann_8570344447" data-annotation-type="annotation"><span 
class=" gkhl-title" data-slate-object="annotation" data-annotation-key="gkann_6613481021" data-annotation-type="annotation"><span 
data-slate-string="true">RUN_ALL_TESTS</span></span></span></span><span data-slate-leaf="true" 
data-offset-key="2618:3"><span class=" gkhl-function" data-slate-object="annotation" data-annotation-key="gkann_8570344447" 
data-annotation-type="annotation"><span class=" gkhl-params" data-slate-object="annotation" 
data-annotation-key="gkann_9227816552" data-annotation-type="annotation"><span data-slate-string="true">()</span></span></span></span><span 
data-slate-leaf="true" data-offset-key="2618:4"><span data-slate-string="true">;</span></span></span> 
</div> <div class="ps__rail-x" style="left: 0px; bottom: 0px;"> <div class="ps__thumb-x" tabindex="0" 
style="left: 0px; width: 0px;"></div> </div> <div class="ps__rail-y" style="top: 0px; right: 
0px;"> <div class="ps__thumb-y" tabindex="0" style="top: 0px; height: 0px;"></div> </div> </div> 
</div> <div class="se-86716dbf " data-slate-type="paragraph" data-slate-object="block" data-key="2619"> 
<span data-slate-object="text" data-key="2620"><span data-slate-leaf="true" data-offset-key="2620:0" 
data-first-offset="true"><span data-slate-string="true">从测试框架的执行输出结果中看，RUN_ALL_TESTS 函数可以依次性地执行每一个 
TEST 宏扩展出来的测试用例函数，这是怎么做到的呢？</span></span></span> </div> <div class="se-72a52dc5 " data-slate-type="paragraph" 
data-slate-object="block" data-key="2621"> <span data-slate-object="text" data-key="2622"><span 
data-slate-leaf="true" data-offset-key="2622:0" data-first-offset="true"><span data-slate-string="true">我们可以这样认为：在主函数执行 
RUN_ALL_TESTS 函数之前，有一些函数过程，就已经把测试用例函数的相关信息，记录在了一个 RUN_ALL_TESTS 函数可以访问到的地方，等到 RUN_ALL_TESTS 
函数执行的时候，就可以根据这些记录的信息，依次性地执行这些测试用例函数。整个过程，如下图所示：</span></span></span> </div> <div class="se-ede78953" 
data-slate-type="image" data-slate-object="block" data-key="2623"></div> </div>', body_summary='', 
bundle='book', delta=0, body_format='full_html', langcode='zh-hans', revision_id=767 where 
entity_id=767 
 {executed in 1 msec}
2020-11-24 18:55:30.651 INFO  jdbc.sqltiming Line:373 - update node_revision__body set body_value='<div data-slate-editor="true" data-key="2402" autocorrect="off" 
spellcheck="false" data-gramm="false" style="outline: none; white-space: pre-wrap; overflow-wrap: 
break-word;"> <div class="se-6441a2c7 " data-slate-type="paragraph" data-slate-object="block" 
data-key="2403"> <span data-slate-object="text" data-key="2404"><span data-slate-leaf="true" 
data-offset-key="2404:0" data-first-offset="true"><span data-slate-string="true">你好，我是胡光，欢迎回来，今天呢，我们继续学习测试框架的相关内容。</span></span></span> 
</div> <div class="se-6171687c " data-slate-type="paragraph" data-slate-object="block" data-key="2405"> 
<span data-slate-object="text" data-key="2406"><span data-slate-leaf="true" data-offset-key="2406:0" 
data-first-offset="true"><span data-slate-string="true">上节课中，我们讲到了软件开发一般分为前中后三个部分，提到作为技术人员的我们，一般主要负责在软件开发中期的编码与测试阶段。还有，我还讲到我们一般会综合运用白盒测试与黑盒测试这两种方法来进行程序测试。</span></span></span> 
</div> <div class="se-16d945b8 " data-slate-type="paragraph" data-slate-object="block" data-key="2407"> 
<span data-slate-object="text" data-key="2408"><span data-slate-leaf="true" data-offset-key="2408:0" 
data-first-offset="true"><span data-slate-string="true">更主要的是，我们还介绍了 Google 的单元测试框架 gtest，并对测试框架代码进行了一番解读。其中提到代码中的 
TEST 是一个宏，那它展开后被替换的内容是什么呢？还有， RUN_ALL_TESTS 函数是如何依次执行程序中所有的测试用例函数的？</span></span></span> </div> 
<div class="se-4e33fb04 " data-slate-type="paragraph" data-slate-object="block" data-key="2409"> 
<span data-slate-object="text" data-key="2410"><span data-slate-leaf="true" data-offset-key="2410:0" 
data-first-offset="true"><span data-slate-string="true">今天呢，我们就一个一个地来解决这些问题，并最终实现一个咱们自己的测试框架。</span></span></span> 
</div> <h2 class="se-44df7191" data-slate-type="heading" data-slate-object="block" data-key="2411"><span 
data-slate-object="text" data-key="2412"><span data-slate-leaf="true" data-offset-key="2412:0" 
data-first-offset="true"><span data-slate-string="true">初步实现 TEST 宏</span></span></span></h2> 
<div class="se-63559857 " data-slate-type="paragraph" data-slate-object="block" data-key="2413"> 
<span data-slate-object="text" data-key="2414"><span data-slate-leaf="true" data-offset-key="2414:0" 
data-first-offset="true"><span data-slate-string="true">今天我们实现的所有代码呢，都会写在一个名字为 geek_test.h 
的头文件中。当然我们也知道，将声明和定义写在一起，在大型工程中是会出现严重的编译错误，在实际的工程开发中，我们并不会这么做。</span></span></span> </div> 
<div class="se-13dda3ec " data-slate-type="paragraph" data-slate-object="block" data-key="2415"> 
<span data-slate-object="text" data-key="2416"><span data-slate-leaf="true" data-offset-key="2416:0" 
data-first-offset="true"><span data-slate-string="true">今天把声明和定义写在一起，只是为了课程内容的讲解需要，而你也完全没有必要担心，这不会影响你对主要内容的学习。</span></span></span> 
</div> <div class="se-0e7bade2 " data-slate-type="paragraph" data-slate-object="block" data-key="2417"> 
<span data-slate-object="text" data-key="2418"><span data-slate-leaf="true" data-offset-key="2418:0" 
data-first-offset="true"><span data-slate-string="true">我们先回到上节课中的源代码：</span></span></span> 
</div> <div class="se-90b1053d se-647ebaa6" data-slate-type="pre" data-slate-object="block" 
data-key="2419" data-code-language="cpp"> <div class="se-61108dc9 se-7957d3e3"> <span></span> 
</div> <div class="se-5c36dee2"> <div class="se-a6545074 se-5c3354b1" data-code-line-number="1"></div> 
<div class="se-a6545074 se-5c3354b1" data-code-line-number="2"></div> <div class="se-a6545074 
se-5c3354b1" data-code-line-number="3"></div> <div class="se-a6545074 se-5c3354b1" data-code-line-number="4"></div> 
<div class="se-a6545074 se-5c3354b1" data-code-line-number="5"></div> <div class="se-a6545074 
se-5c3354b1" data-code-line-number="6"></div> <div class="se-a6545074 se-5c3354b1" data-code-line-number="7"></div> 
<div class="se-a6545074 se-5c3354b1" data-code-line-number="8"></div> <div class="se-a6545074 
se-5c3354b1" data-code-line-number="9"></div> <div class="se-a6545074 se-5c3354b1" data-code-line-number="10"></div> 
<div class="se-a6545074 se-5c3354b1" data-code-line-number="11"></div> <div class="se-a6545074 
se-5c3354b1" data-code-line-number="12"></div> <div class="se-a6545074 se-5c3354b1" data-code-line-number="13"></div> 
<div class="se-a6545074 se-5c3354b1" data-code-line-number="14"></div> <div class="se-a6545074 
se-5c3354b1" data-code-line-number="15"></div> <div class="se-a6545074 se-5c3354b1" data-code-line-number="16"></div> 
<div class="se-a6545074 se-5c3354b1" data-code-line-number="17"></div> <div class="se-a6545074 
se-5c3354b1" data-code-line-number="18"></div> <div class="se-a6545074 se-5c3354b1" data-code-line-number="19"></div> 
<div class="se-a6545074 se-5c3354b1" data-code-line-number="20"></div> <div class="se-a6545074 
se-5c3354b1" data-code-line-number="21"></div> <div class="se-a6545074 se-5c3354b1" data-code-line-number="22"></div> 
<div class="se-a6545074 se-5c3354b1" data-code-line-number="23"></div> <div class="se-a6545074 
se-5c3354b1" data-code-line-number="24"></div> <div class="se-a6545074 se-5c3354b1" data-code-line-number="25"></div> 
<div class="se-a6545074 se-5c3354b1" data-code-line-number="26"></div> <div class="se-a6545074 
se-5c3354b1" data-code-line-number="27"></div> <div class="se-a6545074 se-5c3354b1" data-code-line-number="28"></div> 
</div> <div class="se-2d5e2fe0 ps ps--active-x"> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" 
data-slate-object="block" data-key="2420"> <span data-slate-object="text" data-key="2421"><span 
data-slate-leaf="true" data-offset-key="2421:0" data-first-offset="true"><span class=" gkhl-meta" 
data-slate-object="annotation" data-annotation-key="gkann_7485529598" data-annotation-type="annotation"><span 
data-slate-string="true">#include &lt;stdio.h&gt;</span></span></span></span> </div> <div class="se-0a5bf258 
se-466ac03c" data-slate-type="code-line" data-slate-object="block" data-key="2422"> <span data-slate-object="text" 
data-key="2423"><span data-slate-leaf="true" data-offset-key="2423:0" data-first-offset="true"><span 
class=" gkhl-meta" data-slate-object="annotation" data-annotation-key="gkann_6860304053" data-annotation-type="annotation"><span 
data-slate-string="true">#include "geek_test.h" // 替换掉原 gtest/gtest.h 头文件</span></span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="2424"> <span data-slate-object="text" data-key="2425"></span> </div> <div class="se-0a5bf258 
se-466ac03c" data-slate-type="code-line" data-slate-object="block" data-key="2426"> <span data-slate-object="text" 
data-key="2427"><span data-slate-leaf="true" data-offset-key="2427:0" data-first-offset="true"><span 
class=" gkhl-comment" data-slate-object="annotation" data-annotation-key="gkann_0115672990" 
data-annotation-type="annotation"><span data-slate-string="true">// 判断一个数字 x 是否是素数</span></span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="2428"> <span data-slate-object="text" data-key="2429"><span data-slate-leaf="true" 
data-offset-key="2429:0" data-first-offset="true"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_8294027803" data-annotation-type="annotation"><span class=" gkhl-function" 
data-slate-object="annotation" data-annotation-key="gkann_4033042121" data-annotation-type="annotation"><span 
data-slate-string="true">int</span></span></span></span><span data-slate-leaf="true" data-offset-key="2429:1"><span 
class=" gkhl-function" data-slate-object="annotation" data-annotation-key="gkann_4033042121" 
data-annotation-type="annotation"><span data-slate-string="true"> </span></span></span><span 
data-slate-leaf="true" data-offset-key="2429:2"><span class=" gkhl-title" data-slate-object="annotation" 
data-annotation-key="gkann_0353044108" data-annotation-type="annotation"><span class=" gkhl-function" 
data-slate-object="annotation" data-annotation-key="gkann_4033042121" data-annotation-type="annotation"><span 
data-slate-string="true">is_prime</span></span></span></span><span data-slate-leaf="true" data-offset-key="2429:3"><span 
class=" gkhl-params" data-slate-object="annotation" data-annotation-key="gkann_1409796701" 
data-annotation-type="annotation"><span class=" gkhl-function" data-slate-object="annotation" 
data-annotation-key="gkann_4033042121" data-annotation-type="annotation"><span data-slate-string="true">(int 
x)</span></span></span></span><span data-slate-leaf="true" data-offset-key="2429:4"><span class=" 
gkhl-function" data-slate-object="annotation" data-annotation-key="gkann_4033042121" data-annotation-type="annotation"><span 
data-slate-string="true"> </span></span></span><span data-slate-leaf="true" data-offset-key="2429:5"><span 
data-slate-string="true">{</span></span></span> </div> <div class="se-0a5bf258 se-466ac03c" 
data-slate-type="code-line" data-slate-object="block" data-key="2430"> <span data-slate-object="text" 
data-key="2431"><span data-slate-leaf="true" data-offset-key="2431:0" data-first-offset="true"><span 
data-slate-string="true"> </span></span><span data-slate-leaf="true" data-offset-key="2431:1"><span 
class=" gkhl-keyword" data-slate-object="annotation" data-annotation-key="gkann_3180120228" 
data-annotation-type="annotation"><span data-slate-string="true">for</span></span></span><span 
data-slate-leaf="true" data-offset-key="2431:2"><span data-slate-string="true"> (</span></span><span 
data-slate-leaf="true" data-offset-key="2431:3"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_7405970782" data-annotation-type="annotation"><span data-slate-string="true">int</span></span></span><span 
data-slate-leaf="true" data-offset-key="2431:4"><span data-slate-string="true"> i = </span></span><span 
data-slate-leaf="true" data-offset-key="2431:5"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_0360655961" data-annotation-type="annotation"><span data-slate-string="true">2</span></span></span><span 
data-slate-leaf="true" data-offset-key="2431:6"><span data-slate-string="true">; i * i &lt; 
x; i++) {</span></span></span> </div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" 
data-slate-object="block" data-key="2432"> <span data-slate-object="text" data-key="2433"><span 
data-slate-leaf="true" data-offset-key="2433:0" data-first-offset="true"><span data-slate-string="true"> 
</span></span><span data-slate-leaf="true" data-offset-key="2433:1"><span class=" gkhl-keyword" 
data-slate-object="annotation" data-annotation-key="gkann_5505487656" data-annotation-type="annotation"><span 
data-slate-string="true">if</span></span></span><span data-slate-leaf="true" data-offset-key="2433:2"><span 
data-slate-string="true"> (x % i == </span></span><span data-slate-leaf="true" data-offset-key="2433:3"><span 
class=" gkhl-number" data-slate-object="annotation" data-annotation-key="gkann_0395500065" 
data-annotation-type="annotation"><span data-slate-string="true">0</span></span></span><span 
data-slate-leaf="true" data-offset-key="2433:4"><span data-slate-string="true">) </span></span><span 
data-slate-leaf="true" data-offset-key="2433:5"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_3550453035" data-annotation-type="annotation"><span data-slate-string="true">return</span></span></span><span 
data-slate-leaf="true" data-offset-key="2433:6"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="2433:7"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_7810744603" data-annotation-type="annotation"><span data-slate-string="true">0</span></span></span><span 
data-slate-leaf="true" data-offset-key="2433:8"><span data-slate-string="true">;</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="2434"> <span data-slate-object="text" data-key="2435"><span data-slate-leaf="true" 
data-offset-key="2435:0" data-first-offset="true"><span data-slate-string="true"> }</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="2436"> <span data-slate-object="text" data-key="2437"><span data-slate-leaf="true" 
data-offset-key="2437:0" data-first-offset="true"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="2437:1"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_4597009740" data-annotation-type="annotation"><span data-slate-string="true">return</span></span></span><span 
data-slate-leaf="true" data-offset-key="2437:2"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="2437:3"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_4447499705" data-annotation-type="annotation"><span data-slate-string="true">1</span></span></span><span 
data-slate-leaf="true" data-offset-key="2437:4"><span data-slate-string="true">;</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="2438"> <span data-slate-object="text" data-key="2439"><span data-slate-leaf="true" 
data-offset-key="2439:0" data-first-offset="true"><span data-slate-string="true">}</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="2440"> <span data-slate-object="text" data-key="2441"></span> </div> <div class="se-0a5bf258 
se-466ac03c" data-slate-type="code-line" data-slate-object="block" data-key="2442"> <span data-slate-object="text" 
data-key="2443"><span data-slate-leaf="true" data-offset-key="2443:0" data-first-offset="true"><span 
class=" gkhl-comment" data-slate-object="annotation" data-annotation-key="gkann_0068566698" 
data-annotation-type="annotation"><span data-slate-string="true">// 第一个测试用例</span></span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="2444"> <span data-slate-object="text" data-key="2445"><span data-slate-leaf="true" 
data-offset-key="2445:0" data-first-offset="true"><span data-slate-string="true">TEST(test1, 
test_is_prime) {</span></span></span> </div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" 
data-slate-object="block" data-key="2446"> <span data-slate-object="text" data-key="2447"><span 
data-slate-leaf="true" data-offset-key="2447:0" data-first-offset="true"><span data-slate-string="true"> 
EXPECT_EQ(is_prime(</span></span><span data-slate-leaf="true" data-offset-key="2447:1"><span 
class=" gkhl-number" data-slate-object="annotation" data-annotation-key="gkann_6445044112" 
data-annotation-type="annotation"><span data-slate-string="true">3</span></span></span><span 
data-slate-leaf="true" data-offset-key="2447:2"><span data-slate-string="true">), </span></span><span 
data-slate-leaf="true" data-offset-key="2447:3"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_8754184558" data-annotation-type="annotation"><span data-slate-string="true">1</span></span></span><span 
data-slate-leaf="true" data-offset-key="2447:4"><span data-slate-string="true">);</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="2448"> <span data-slate-object="text" data-key="2449"><span data-slate-leaf="true" 
data-offset-key="2449:0" data-first-offset="true"><span data-slate-string="true"> EXPECT_EQ(is_prime(</span></span><span 
data-slate-leaf="true" data-offset-key="2449:1"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_8870370508" data-annotation-type="annotation"><span data-slate-string="true">5</span></span></span><span 
data-slate-leaf="true" data-offset-key="2449:2"><span data-slate-string="true">), </span></span><span 
data-slate-leaf="true" data-offset-key="2449:3"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_6097390847" data-annotation-type="annotation"><span data-slate-string="true">1</span></span></span><span 
data-slate-leaf="true" data-offset-key="2449:4"><span data-slate-string="true">);</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="2450"> <span data-slate-object="text" data-key="2451"><span data-slate-leaf="true" 
data-offset-key="2451:0" data-first-offset="true"><span data-slate-string="true"> EXPECT_EQ(is_prime(</span></span><span 
data-slate-leaf="true" data-offset-key="2451:1"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_6236716392" data-annotation-type="annotation"><span data-slate-string="true">7</span></span></span><span 
data-slate-leaf="true" data-offset-key="2451:2"><span data-slate-string="true">), </span></span><span 
data-slate-leaf="true" data-offset-key="2451:3"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_2933987614" data-annotation-type="annotation"><span data-slate-string="true">1</span></span></span><span 
data-slate-leaf="true" data-offset-key="2451:4"><span data-slate-string="true">);</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="2452"> <span data-slate-object="text" data-key="2453"><span data-slate-leaf="true" 
data-offset-key="2453:0" data-first-offset="true"><span data-slate-string="true">}</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="2454"> <span data-slate-object="text" data-key="2455"></span> </div> <div class="se-0a5bf258 
se-466ac03c" data-slate-type="code-line" data-slate-object="block" data-key="2456"> <span data-slate-object="text" 
data-key="2457"><span data-slate-leaf="true" data-offset-key="2457:0" data-first-offset="true"><span 
class=" gkhl-comment" data-slate-object="annotation" data-annotation-key="gkann_4790487343" 
data-annotation-type="annotation"><span data-slate-string="true">// 第二个测试用例</span></span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="2458"> <span data-slate-object="text" data-key="2459"><span data-slate-leaf="true" 
data-offset-key="2459:0" data-first-offset="true"><span data-slate-string="true">TEST(test2, 
test_is_prime) {</span></span></span> </div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" 
data-slate-object="block" data-key="2460"> <span data-slate-object="text" data-key="2461"><span 
data-slate-leaf="true" data-offset-key="2461:0" data-first-offset="true"><span data-slate-string="true"> 
EXPECT_EQ(is_prime(</span></span><span data-slate-leaf="true" data-offset-key="2461:1"><span 
class=" gkhl-number" data-slate-object="annotation" data-annotation-key="gkann_5719705317" 
data-annotation-type="annotation"><span data-slate-string="true">4</span></span></span><span 
data-slate-leaf="true" data-offset-key="2461:2"><span data-slate-string="true">), </span></span><span 
data-slate-leaf="true" data-offset-key="2461:3"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_6461667490" data-annotation-type="annotation"><span data-slate-string="true">0</span></span></span><span 
data-slate-leaf="true" data-offset-key="2461:4"><span data-slate-string="true">);</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="2462"> <span data-slate-object="text" data-key="2463"><span data-slate-leaf="true" 
data-offset-key="2463:0" data-first-offset="true"><span data-slate-string="true"> EXPECT_EQ(is_prime(</span></span><span 
data-slate-leaf="true" data-offset-key="2463:1"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_8274709873" data-annotation-type="annotation"><span data-slate-string="true">0</span></span></span><span 
data-slate-leaf="true" data-offset-key="2463:2"><span data-slate-string="true">), </span></span><span 
data-slate-leaf="true" data-offset-key="2463:3"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_0305193786" data-annotation-type="annotation"><span data-slate-string="true">0</span></span></span><span 
data-slate-leaf="true" data-offset-key="2463:4"><span data-slate-string="true">);</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="2464"> <span data-slate-object="text" data-key="2465"><span data-slate-leaf="true" 
data-offset-key="2465:0" data-first-offset="true"><span data-slate-string="true"> EXPECT_EQ(is_prime(</span></span><span 
data-slate-leaf="true" data-offset-key="2465:1"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_9132483572" data-annotation-type="annotation"><span data-slate-string="true">1</span></span></span><span 
data-slate-leaf="true" data-offset-key="2465:2"><span data-slate-string="true">), </span></span><span 
data-slate-leaf="true" data-offset-key="2465:3"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_4658923841" data-annotation-type="annotation"><span data-slate-string="true">0</span></span></span><span 
data-slate-leaf="true" data-offset-key="2465:4"><span data-slate-string="true">);</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="2466"> <span data-slate-object="text" data-key="2467"><span data-slate-leaf="true" 
data-offset-key="2467:0" data-first-offset="true"><span data-slate-string="true">}</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="2468"> <span data-slate-object="text" data-key="2469"></span> </div> <div class="se-0a5bf258 
se-466ac03c" data-slate-type="code-line" data-slate-object="block" data-key="2470"> <span data-slate-object="text" 
data-key="2471"><span data-slate-leaf="true" data-offset-key="2471:0" data-first-offset="true"><span 
class=" gkhl-keyword" data-slate-object="annotation" data-annotation-key="gkann_6298692593" 
data-annotation-type="annotation"><span class=" gkhl-function" data-slate-object="annotation" 
data-annotation-key="gkann_6449393761" data-annotation-type="annotation"><span data-slate-string="true">int</span></span></span></span><span 
data-slate-leaf="true" data-offset-key="2471:1"><span class=" gkhl-function" data-slate-object="annotation" 
data-annotation-key="gkann_6449393761" data-annotation-type="annotation"><span data-slate-string="true"> 
</span></span></span><span data-slate-leaf="true" data-offset-key="2471:2"><span class=" gkhl-title" 
data-slate-object="annotation" data-annotation-key="gkann_6447433968" data-annotation-type="annotation"><span 
class=" gkhl-function" data-slate-object="annotation" data-annotation-key="gkann_6449393761" 
data-annotation-type="annotation"><span data-slate-string="true">main</span></span></span></span><span 
data-slate-leaf="true" data-offset-key="2471:3"><span class=" gkhl-params" data-slate-object="annotation" 
data-annotation-key="gkann_9098085026" data-annotation-type="annotation"><span class=" gkhl-function" 
data-slate-object="annotation" data-annotation-key="gkann_6449393761" data-annotation-type="annotation"><span 
data-slate-string="true">()</span></span></span></span><span data-slate-leaf="true" data-offset-key="2471:4"><span 
class=" gkhl-function" data-slate-object="annotation" data-annotation-key="gkann_6449393761" 
data-annotation-type="annotation"><span data-slate-string="true"> </span></span></span><span 
data-slate-leaf="true" data-offset-key="2471:5"><span data-slate-string="true">{</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="2472"> <span data-slate-object="text" data-key="2473"><span data-slate-leaf="true" 
data-offset-key="2473:0" data-first-offset="true"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="2473:1"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_5234132725" data-annotation-type="annotation"><span data-slate-string="true">return</span></span></span><span 
data-slate-leaf="true" data-offset-key="2473:2"><span data-slate-string="true"> RUN_ALL_TESTS();</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="2474"> <span data-slate-object="text" data-key="2475"><span data-slate-leaf="true" 
data-offset-key="2475:0" data-first-offset="true"><span data-slate-string="true">}</span></span></span> 
</div> <div class="ps__rail-x" style="width: 365px; left: 0px; bottom: 0px;"> <div class="ps__thumb-x" 
tabindex="0" style="left: 0px; width: 324px;"></div> </div> <div class="ps__rail-y" style="top: 
0px; right: 0px;"> <div class="ps__thumb-y" tabindex="0" style="top: 0px; height: 0px;"></div> 
</div> </div> </div> <div class="se-79bfe00b " data-slate-type="paragraph" data-slate-object="block" 
data-key="2476"> <span data-slate-object="text" data-key="2477"><span data-slate-leaf="true" 
data-offset-key="2477:0" data-first-offset="true"><span data-slate-string="true">我们的目的，是在不改变这份源代码的前提下，通过在 
geek_test.h 中添加一些源码，使得这份代码的运行效果，能够类似于 gtest 的运行效果。</span></span></span> </div> <div class="se-adcae584 
" data-slate-type="paragraph" data-slate-object="block" data-key="2478"> <span data-slate-object="text" 
data-key="2479"><span data-slate-leaf="true" data-offset-key="2479:0" data-first-offset="true"><span 
data-slate-string="true">想要完成这个目标，我们就要先来思考 TEST 宏这里的内容，请你仔细观察这段由 TEST 宏定义的测试用例的相关代码：</span></span></span> 
</div> <div class="se-d9349179 se-ba66b08f" data-slate-type="pre" data-slate-object="block" 
data-key="2480"> <div class="se-3181d2e8 se-f95bb467"> <span></span> </div> <div class="se-44ff836c"> 
<div class="se-407dd076 se-775b7de9" data-code-line-number="1"></div> <div class="se-407dd076 
se-775b7de9" data-code-line-number="2"></div> <div class="se-407dd076 se-775b7de9" data-code-line-number="3"></div> 
<div class="se-407dd076 se-775b7de9" data-code-line-number="4"></div> <div class="se-407dd076 
se-775b7de9" data-code-line-number="5"></div> </div> <div class="se-fddea687 ps"> <div class="se-0a5bf258 
se-466ac03c" data-slate-type="code-line" data-slate-object="block" data-key="2481"> <span data-slate-object="text" 
data-key="2482"><span data-slate-leaf="true" data-offset-key="2482:0" data-first-offset="true"><span 
data-slate-string="true">TEST(test1, test_is_prime) {</span></span></span> </div> <div class="se-0a5bf258 
se-466ac03c" data-slate-type="code-line" data-slate-object="block" data-key="2483"> <span data-slate-object="text" 
data-key="2484"><span data-slate-leaf="true" data-offset-key="2484:0" data-first-offset="true"><span 
data-slate-string="true"> EXPECT_EQ(is_prime(3), 1);</span></span></span> </div> <div class="se-0a5bf258 
se-466ac03c" data-slate-type="code-line" data-slate-object="block" data-key="2485"> <span data-slate-object="text" 
data-key="2486"><span data-slate-leaf="true" data-offset-key="2486:0" data-first-offset="true"><span 
data-slate-string="true"> EXPECT_EQ(is_prime(5), 1);</span></span></span> </div> <div class="se-0a5bf258 
se-466ac03c" data-slate-type="code-line" data-slate-object="block" data-key="2487"> <span data-slate-object="text" 
data-key="2488"><span data-slate-leaf="true" data-offset-key="2488:0" data-first-offset="true"><span 
data-slate-string="true"> EXPECT_EQ(is_prime(7), 1);</span></span></span> </div> <div class="se-0a5bf258 
se-466ac03c" data-slate-type="code-line" data-slate-object="block" data-key="2489"> <span data-slate-object="text" 
data-key="2490"><span data-slate-leaf="true" data-offset-key="2490:0" data-first-offset="true"><span 
data-slate-string="true">}</span></span></span> </div> <div class="ps__rail-x" style="left: 
0px; bottom: 0px;"> <div class="ps__thumb-x" tabindex="0" style="left: 0px; width: 0px;"></div> 
</div> <div class="ps__rail-y" style="top: 0px; right: 0px;"> <div class="ps__thumb-y" tabindex="0" 
style="top: 0px; height: 0px;"></div> </div> </div> </div> <div class="se-96d2cd70 " data-slate-type="paragraph" 
data-slate-object="block" data-key="2491"> <span data-slate-object="text" data-key="2492"><span 
data-slate-leaf="true" data-offset-key="2492:0" data-first-offset="true"><span data-slate-string="true">TEST(test1, 
test_is_prime) 这部分应该是在调用 TEST 宏，而这部分被预处理器展开以后的内容，只有和后面大括号里的代码组合在一起，才是一段合法的 C 语言代码，也只有这样，这份代码才能通过编译。</span></span></span> 
</div> <div class="se-384795d8 " data-slate-type="paragraph" data-slate-object="block" data-key="2493"> 
<span data-slate-object="text" data-key="2494"><span data-slate-leaf="true" data-offset-key="2494:0" 
data-first-offset="true"><span data-slate-string="true">既然如此，我们就不难想到，TEST 宏展开以后，它应该是一个函数定义的头部，后面大括号里的代码，就是这个展开以后的函数头部的函数体部分，这样一切就都说得通了。</span></span></span> 
</div> <div class="se-94f41a67 " data-slate-type="paragraph" data-slate-object="block" data-key="2495"> 
<span data-slate-object="text" data-key="2496"><span data-slate-leaf="true" data-offset-key="2496:0" 
data-first-offset="true"><span data-slate-string="true">在实现 TEST 宏之前，我们还需要想清楚一个问题：由于程序中可以定义多个 
TEST 测试用例，如果每一个 TEST 宏展开都是一个函数头部的话，那这个展开的函数的名字是什么呢？如果每一个 TEST 宏展开的函数名字都一样，那程序一定无法通过编译，编译器会报与函数名重复相关的错误，所以， 
TEST 宏是如何确定展开函数的名字呢？</span></span></span> </div> <div class="se-c0c4ef27 " data-slate-type="paragraph" 
data-slate-object="block" data-key="2497"> <span data-slate-object="text" data-key="2498"><span 
data-slate-leaf="true" data-offset-key="2498:0" data-first-offset="true"><span data-slate-string="true">不知道你有没有注意到，TEST 
宏需要传入两个参数，这两个参数在输出信息中与测试用例的名字有关。那我们就该想到，可以使用这两个参数拼接出一个函数名，只要 TEST 传入的这两个参数不一样，那扩展出来的函数名就不同。最后，我们就可以初步得到如下的 
TEST 宏的一个实现：</span></span></span> </div> <div class="se-5892e29c se-1fbf257c" data-slate-type="pre" 
data-slate-object="block" data-key="2499" data-code-language="objectivec"> <div class="se-16a4386d 
se-e73f258f"> <span></span> </div> <div class="se-aa8197a7"> <div class="se-f16a2902 se-3c34314d" 
data-code-line-number="1"></div> <div class="se-f16a2902 se-3c34314d" data-code-line-number="2"></div> 
</div> <div class="se-5d2c1626 ps"> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" 
data-slate-object="block" data-key="2500"> <span data-slate-object="text" data-key="2501"><span 
data-slate-leaf="true" data-offset-key="2501:0" data-first-offset="true"><span class=" gkhl-meta" 
data-slate-object="annotation" data-annotation-key="gkann_2091401483" data-annotation-type="annotation"><span 
data-slate-string="true">#define TEST(test_name, func_name) \</span></span></span></span> </div> 
<div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="2502"> <span data-slate-object="text" data-key="2503"><span data-slate-leaf="true" 
data-offset-key="2503:0" data-first-offset="true"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_3911657421" data-annotation-type="annotation"><span data-slate-string="true">void</span></span></span><span 
data-slate-leaf="true" data-offset-key="2503:1"><span data-slate-string="true"> test_name</span></span><span 
data-slate-leaf="true" data-offset-key="2503:2"><span class=" gkhl-meta" data-slate-object="annotation" 
data-annotation-key="gkann_1929640787" data-annotation-type="annotation"><span data-slate-string="true">##_##func_name()</span></span></span></span> 
</div> <div class="ps__rail-x" style="left: 0px; bottom: 0px;"> <div class="ps__thumb-x" tabindex="0" 
style="left: 0px; width: 0px;"></div> </div> <div class="ps__rail-y" style="top: 0px; right: 
0px;"> <div class="ps__thumb-y" tabindex="0" style="top: 0px; height: 0px;"></div> </div> </div> 
</div> <div class="se-32987312 " data-slate-type="paragraph" data-slate-object="block" data-key="2504"> 
<span data-slate-object="text" data-key="2505"><span data-slate-leaf="true" data-offset-key="2505:0" 
data-first-offset="true"><span data-slate-string="true">如代码所示的 TEST 宏实现，我们将 TEST 宏的两个参数内容使用 
## 连接在一起，中间用一个额外的下划线连接，组成一个函数名字，这个函数的返回值类型是 void，无传入参数。</span></span></span> </div> <div class="se-141be4b6 
" data-slate-type="paragraph" data-slate-object="block" data-key="2506"> <span data-slate-object="text" 
data-key="2507"><span data-slate-leaf="true" data-offset-key="2507:0" data-first-offset="true"><span 
data-slate-string="true">根据这个实现，预处理器会将源代码中两处 TEST 宏的内容，替换成如下代码所示内容：</span></span></span> </div> 
<div class="se-efb44033 se-acb4c980" data-slate-type="pre" data-slate-object="block" data-key="2508" 
data-code-language="cpp"> <div class="se-68d7a6fd se-14b04eac"> <span></span> </div> <div class="se-8d88ecb3"> 
<div class="se-d40ac694 se-0b5cbe5f" data-code-line-number="1"></div> <div class="se-d40ac694 
se-0b5cbe5f" data-code-line-number="2"></div> <div class="se-d40ac694 se-0b5cbe5f" data-code-line-number="3"></div> 
<div class="se-d40ac694 se-0b5cbe5f" data-code-line-number="4"></div> <div class="se-d40ac694 
se-0b5cbe5f" data-code-line-number="5"></div> <div class="se-d40ac694 se-0b5cbe5f" data-code-line-number="6"></div> 
<div class="se-d40ac694 se-0b5cbe5f" data-code-line-number="7"></div> <div class="se-d40ac694 
se-0b5cbe5f" data-code-line-number="8"></div> <div class="se-d40ac694 se-0b5cbe5f" data-code-line-number="9"></div> 
<div class="se-d40ac694 se-0b5cbe5f" data-code-line-number="10"></div> <div class="se-d40ac694 
se-0b5cbe5f" data-code-line-number="11"></div> </div> <div class="se-6db6dd95 ps"> <div class="se-0a5bf258 
se-466ac03c" data-slate-type="code-line" data-slate-object="block" data-key="2509"> <span data-slate-object="text" 
data-key="2510"><span data-slate-leaf="true" data-offset-key="2510:0" data-first-offset="true"><span 
class=" gkhl-keyword" data-slate-object="annotation" data-annotation-key="gkann_0464426055" 
data-annotation-type="annotation"><span class=" gkhl-function" data-slate-object="annotation" 
data-annotation-key="gkann_9092825832" data-annotation-type="annotation"><span data-slate-string="true">void</span></span></span></span><span 
data-slate-leaf="true" data-offset-key="2510:1"><span class=" gkhl-function" data-slate-object="annotation" 
data-annotation-key="gkann_9092825832" data-annotation-type="annotation"><span data-slate-string="true"> 
</span></span></span><span data-slate-leaf="true" data-offset-key="2510:2"><span class=" gkhl-title" 
data-slate-object="annotation" data-annotation-key="gkann_4521809620" data-annotation-type="annotation"><span 
class=" gkhl-function" data-slate-object="annotation" data-annotation-key="gkann_9092825832" 
data-annotation-type="annotation"><span data-slate-string="true">test1_test_is_prime</span></span></span></span><span 
data-slate-leaf="true" data-offset-key="2510:3"><span class=" gkhl-function" data-slate-object="annotation" 
data-annotation-key="gkann_9092825832" data-annotation-type="annotation"><span class=" gkhl-params" 
data-slate-object="annotation" data-annotation-key="gkann_2098552985" data-annotation-type="annotation"><span 
data-slate-string="true">()</span></span></span></span><span data-slate-leaf="true" data-offset-key="2510:4"><span 
class=" gkhl-function" data-slate-object="annotation" data-annotation-key="gkann_9092825832" 
data-annotation-type="annotation"><span data-slate-string="true"> </span></span></span><span 
data-slate-leaf="true" data-offset-key="2510:5"><span data-slate-string="true">{</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="2511"> <span data-slate-object="text" data-key="2512"><span data-slate-leaf="true" 
data-offset-key="2512:0" data-first-offset="true"><span data-slate-string="true"> EXPECT_EQ(is_prime(</span></span><span 
data-slate-leaf="true" data-offset-key="2512:1"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_4864893233" data-annotation-type="annotation"><span data-slate-string="true">3</span></span></span><span 
data-slate-leaf="true" data-offset-key="2512:2"><span data-slate-string="true">), </span></span><span 
data-slate-leaf="true" data-offset-key="2512:3"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_6275772627" data-annotation-type="annotation"><span data-slate-string="true">1</span></span></span><span 
data-slate-leaf="true" data-offset-key="2512:4"><span data-slate-string="true">);</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="2513"> <span data-slate-object="text" data-key="2514"><span data-slate-leaf="true" 
data-offset-key="2514:0" data-first-offset="true"><span data-slate-string="true"> EXPECT_EQ(is_prime(</span></span><span 
data-slate-leaf="true" data-offset-key="2514:1"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_6764771301" data-annotation-type="annotation"><span data-slate-string="true">5</span></span></span><span 
data-slate-leaf="true" data-offset-key="2514:2"><span data-slate-string="true">), </span></span><span 
data-slate-leaf="true" data-offset-key="2514:3"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_1889988532" data-annotation-type="annotation"><span data-slate-string="true">1</span></span></span><span 
data-slate-leaf="true" data-offset-key="2514:4"><span data-slate-string="true">);</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="2515"> <span data-slate-object="text" data-key="2516"><span data-slate-leaf="true" 
data-offset-key="2516:0" data-first-offset="true"><span data-slate-string="true"> EXPECT_EQ(is_prime(</span></span><span 
data-slate-leaf="true" data-offset-key="2516:1"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_5683916874" data-annotation-type="annotation"><span data-slate-string="true">7</span></span></span><span 
data-slate-leaf="true" data-offset-key="2516:2"><span data-slate-string="true">), </span></span><span 
data-slate-leaf="true" data-offset-key="2516:3"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_9216778907" data-annotation-type="annotation"><span data-slate-string="true">1</span></span></span><span 
data-slate-leaf="true" data-offset-key="2516:4"><span data-slate-string="true">);</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="2517"> <span data-slate-object="text" data-key="2518"><span data-slate-leaf="true" 
data-offset-key="2518:0" data-first-offset="true"><span data-slate-string="true">}</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="2519"> <span data-slate-object="text" data-key="2520"></span> </div> <div class="se-0a5bf258 
se-466ac03c" data-slate-type="code-line" data-slate-object="block" data-key="2521"> <span data-slate-object="text" 
data-key="2522"><span data-slate-leaf="true" data-offset-key="2522:0" data-first-offset="true"><span 
class=" gkhl-keyword" data-slate-object="annotation" data-annotation-key="gkann_8377731340" 
data-annotation-type="annotation"><span class=" gkhl-function" data-slate-object="annotation" 
data-annotation-key="gkann_4405845616" data-annotation-type="annotation"><span data-slate-string="true">void</span></span></span></span><span 
data-slate-leaf="true" data-offset-key="2522:1"><span class=" gkhl-function" data-slate-object="annotation" 
data-annotation-key="gkann_4405845616" data-annotation-type="annotation"><span data-slate-string="true"> 
</span></span></span><span data-slate-leaf="true" data-offset-key="2522:2"><span class=" gkhl-title" 
data-slate-object="annotation" data-annotation-key="gkann_9368837019" data-annotation-type="annotation"><span 
class=" gkhl-function" data-slate-object="annotation" data-annotation-key="gkann_4405845616" 
data-annotation-type="annotation"><span data-slate-string="true">test2_test_is_prime</span></span></span></span><span 
data-slate-leaf="true" data-offset-key="2522:3"><span class=" gkhl-params" data-slate-object="annotation" 
data-annotation-key="gkann_9465074927" data-annotation-type="annotation"><span class=" gkhl-function" 
data-slate-object="annotation" data-annotation-key="gkann_4405845616" data-annotation-type="annotation"><span 
data-slate-string="true">()</span></span></span></span><span data-slate-leaf="true" data-offset-key="2522:4"><span 
class=" gkhl-function" data-slate-object="annotation" data-annotation-key="gkann_4405845616" 
data-annotation-type="annotation"><span data-slate-string="true"> </span></span></span><span 
data-slate-leaf="true" data-offset-key="2522:5"><span data-slate-string="true">{</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="2523"> <span data-slate-object="text" data-key="2524"><span data-slate-leaf="true" 
data-offset-key="2524:0" data-first-offset="true"><span data-slate-string="true"> EXPECT_EQ(is_prime(</span></span><span 
data-slate-leaf="true" data-offset-key="2524:1"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_0712651958" data-annotation-type="annotation"><span data-slate-string="true">4</span></span></span><span 
data-slate-leaf="true" data-offset-key="2524:2"><span data-slate-string="true">), </span></span><span 
data-slate-leaf="true" data-offset-key="2524:3"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_5438755086" data-annotation-type="annotation"><span data-slate-string="true">0</span></span></span><span 
data-slate-leaf="true" data-offset-key="2524:4"><span data-slate-string="true">);</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="2525"> <span data-slate-object="text" data-key="2526"><span data-slate-leaf="true" 
data-offset-key="2526:0" data-first-offset="true"><span data-slate-string="true"> EXPECT_EQ(is_prime(</span></span><span 
data-slate-leaf="true" data-offset-key="2526:1"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_6369376347" data-annotation-type="annotation"><span data-slate-string="true">0</span></span></span><span 
data-slate-leaf="true" data-offset-key="2526:2"><span data-slate-string="true">), </span></span><span 
data-slate-leaf="true" data-offset-key="2526:3"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_6558729046" data-annotation-type="annotation"><span data-slate-string="true">0</span></span></span><span 
data-slate-leaf="true" data-offset-key="2526:4"><span data-slate-string="true">);</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="2527"> <span data-slate-object="text" data-key="2528"><span data-slate-leaf="true" 
data-offset-key="2528:0" data-first-offset="true"><span data-slate-string="true"> EXPECT_EQ(is_prime(</span></span><span 
data-slate-leaf="true" data-offset-key="2528:1"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_8349556865" data-annotation-type="annotation"><span data-slate-string="true">1</span></span></span><span 
data-slate-leaf="true" data-offset-key="2528:2"><span data-slate-string="true">), </span></span><span 
data-slate-leaf="true" data-offset-key="2528:3"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_9918860555" data-annotation-type="annotation"><span data-slate-string="true">0</span></span></span><span 
data-slate-leaf="true" data-offset-key="2528:4"><span data-slate-string="true">);</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="2529"> <span data-slate-object="text" data-key="2530"><span data-slate-leaf="true" 
data-offset-key="2530:0" data-first-offset="true"><span data-slate-string="true">}</span></span></span> 
</div> <div class="ps__rail-x" style="left: 0px; bottom: 0px;"> <div class="ps__thumb-x" tabindex="0" 
style="left: 0px; width: 0px;"></div> </div> <div class="ps__rail-y" style="top: 0px; right: 
0px;"> <div class="ps__thumb-y" tabindex="0" style="top: 0px; height: 0px;"></div> </div> </div> 
</div> <div class="se-80d142a3 " data-slate-type="paragraph" data-slate-object="block" data-key="2531"> 
<span data-slate-object="text" data-key="2532"><span data-slate-leaf="true" data-offset-key="2532:0" 
data-first-offset="true"><span data-slate-string="true">这样，也就把原来看似不合理的 TEST 宏，转换成了合法的 C 语言代码了。</span></span></span> 
</div> <h2 class="se-5e544797" data-slate-type="heading" data-slate-object="block" data-key="2533"><span 
data-slate-type="code" data-slate-object="inline" data-key="2534" class="se-1fdea742"><span 
data-slate-object="text" data-key="2535"><span data-slate-leaf="true" data-offset-key="2535:0" 
data-first-offset="true"><span data-slate-string="true">__attribute__</span></span></span></span><span 
data-slate-object="text" data-key="2536"><span data-slate-leaf="true" data-offset-key="2536:0" 
data-first-offset="true"><span data-slate-string="true">：让其它函数先于主函数执行</span></span></span></h2> 
<div class="se-20477375 " data-slate-type="paragraph" data-slate-object="block" data-key="2537"> 
<span data-slate-object="text" data-key="2538"><span data-slate-leaf="true" data-offset-key="2538:0" 
data-first-offset="true"><span data-slate-string="true">在继续讲测试框架的设计之前，我们来补充一个知识点。</span></span></span> 
</div> <div class="se-c5a142f6 " data-slate-type="paragraph" data-slate-object="block" data-key="2539"> 
<span data-slate-object="text" data-key="2540"><span data-slate-leaf="true" data-offset-key="2540:0" 
data-first-offset="true"><span data-slate-string="true">之前，我们所学习到的程序执行过程，既是从主函数开始，也是从主函数结束。也就是说，在常规的程序执行过程中，其它函数都是在主函数执行之后，才被直接或者间接调用执行。接下来，我就要给你讲一种能够让函数在主函数执行之前就执行的编程技巧。</span></span></span> 
</div> <div class="se-a1d12731 " data-slate-type="paragraph" data-slate-object="block" data-key="2541"> 
<span data-slate-object="text" data-key="2542"><span data-slate-leaf="true" data-offset-key="2542:0" 
data-first-offset="true"><span data-slate-string="true">首先，我们先来看如下代码：</span></span></span> 
</div> <div class="se-45a82220 se-6bc59551" data-slate-type="pre" data-slate-object="block" 
data-key="2543" data-code-language="cpp"> <div class="se-37119098 se-484d0fd5"> <span></span> 
</div> <div class="se-449a9445"> <div class="se-ad8e8cad se-0b392d20" data-code-line-number="1"></div> 
<div class="se-ad8e8cad se-0b392d20" data-code-line-number="2"></div> <div class="se-ad8e8cad 
se-0b392d20" data-code-line-number="3"></div> <div class="se-ad8e8cad se-0b392d20" data-code-line-number="4"></div> 
<div class="se-ad8e8cad se-0b392d20" data-code-line-number="5"></div> <div class="se-ad8e8cad 
se-0b392d20" data-code-line-number="6"></div> <div class="se-ad8e8cad se-0b392d20" data-code-line-number="7"></div> 
<div class="se-ad8e8cad se-0b392d20" data-code-line-number="8"></div> <div class="se-ad8e8cad 
se-0b392d20" data-code-line-number="9"></div> <div class="se-ad8e8cad se-0b392d20" data-code-line-number="10"></div> 
<div class="se-ad8e8cad se-0b392d20" data-code-line-number="11"></div> </div> <div class="se-7a00e5a2 
ps"> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="2544"> <span data-slate-object="text" data-key="2545"><span data-slate-leaf="true" 
data-offset-key="2545:0" data-first-offset="true"><span class=" gkhl-meta" data-slate-object="annotation" 
data-annotation-key="gkann_9336643832" data-annotation-type="annotation"><span data-slate-string="true">#include 
&lt;stdio.h&gt;</span></span></span></span> </div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" 
data-slate-object="block" data-key="2546"> <span data-slate-object="text" data-key="2547"></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="2548"> <span data-slate-object="text" data-key="2549"><span data-slate-leaf="true" 
data-offset-key="2549:0" data-first-offset="true"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_8743984933" data-annotation-type="annotation"><span class=" gkhl-function" 
data-slate-object="annotation" data-annotation-key="gkann_0201449974" data-annotation-type="annotation"><span 
data-slate-string="true">void</span></span></span></span><span data-slate-leaf="true" data-offset-key="2549:1"><span 
class=" gkhl-function" data-slate-object="annotation" data-annotation-key="gkann_0201449974" 
data-annotation-type="annotation"><span data-slate-string="true"> </span></span></span><span 
data-slate-leaf="true" data-offset-key="2549:2"><span class=" gkhl-title" data-slate-object="annotation" 
data-annotation-key="gkann_7579704351" data-annotation-type="annotation"><span class=" gkhl-function" 
data-slate-object="annotation" data-annotation-key="gkann_0201449974" data-annotation-type="annotation"><span 
data-slate-string="true">pre_output</span></span></span></span><span data-slate-leaf="true" 
data-offset-key="2549:3"><span class=" gkhl-params" data-slate-object="annotation" data-annotation-key="gkann_1314797655" 
data-annotation-type="annotation"><span class=" gkhl-function" data-slate-object="annotation" 
data-annotation-key="gkann_0201449974" data-annotation-type="annotation"><span data-slate-string="true">()</span></span></span></span><span 
data-slate-leaf="true" data-offset-key="2549:4"><span class=" gkhl-function" data-slate-object="annotation" 
data-annotation-key="gkann_0201449974" data-annotation-type="annotation"><span data-slate-string="true"> 
</span></span></span><span data-slate-leaf="true" data-offset-key="2549:5"><span data-slate-string="true">{</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="2550"> <span data-slate-object="text" data-key="2551"><span data-slate-leaf="true" 
data-offset-key="2551:0" data-first-offset="true"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="2551:1"><span class=" gkhl-built_in" data-slate-object="annotation" 
data-annotation-key="gkann_3052494293" data-annotation-type="annotation"><span data-slate-string="true">printf</span></span></span><span 
data-slate-leaf="true" data-offset-key="2551:2"><span data-slate-string="true">(</span></span><span 
data-slate-leaf="true" data-offset-key="2551:3"><span class=" gkhl-string" data-slate-object="annotation" 
data-annotation-key="gkann_7594643643" data-annotation-type="annotation"><span data-slate-string="true">"hello 
geek!\n"</span></span></span><span data-slate-leaf="true" data-offset-key="2551:4"><span data-slate-string="true">);</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="2552"> <span data-slate-object="text" data-key="2553"><span data-slate-leaf="true" 
data-offset-key="2553:0" data-first-offset="true"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="2553:1"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_1817055675" data-annotation-type="annotation"><span data-slate-string="true">return</span></span></span><span 
data-slate-leaf="true" data-offset-key="2553:2"><span data-slate-string="true"> ;</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="2554"> <span data-slate-object="text" data-key="2555"><span data-slate-leaf="true" 
data-offset-key="2555:0" data-first-offset="true"><span data-slate-string="true">}</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="2556"> <span data-slate-object="text" data-key="2557"></span> </div> <div class="se-0a5bf258 
se-466ac03c" data-slate-type="code-line" data-slate-object="block" data-key="2558"> <span data-slate-object="text" 
data-key="2559"><span data-slate-leaf="true" data-offset-key="2559:0" data-first-offset="true"><span 
class=" gkhl-function" data-slate-object="annotation" data-annotation-key="gkann_7868016098" 
data-annotation-type="annotation"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_6776335749" data-annotation-type="annotation"><span data-slate-string="true">int</span></span></span></span><span 
data-slate-leaf="true" data-offset-key="2559:1"><span class=" gkhl-function" data-slate-object="annotation" 
data-annotation-key="gkann_7868016098" data-annotation-type="annotation"><span data-slate-string="true"> 
</span></span></span><span data-slate-leaf="true" data-offset-key="2559:2"><span class=" gkhl-function" 
data-slate-object="annotation" data-annotation-key="gkann_7868016098" data-annotation-type="annotation"><span 
class=" gkhl-title" data-slate-object="annotation" data-annotation-key="gkann_8006497477" data-annotation-type="annotation"><span 
data-slate-string="true">main</span></span></span></span><span data-slate-leaf="true" data-offset-key="2559:3"><span 
class=" gkhl-function" data-slate-object="annotation" data-annotation-key="gkann_7868016098" 
data-annotation-type="annotation"><span class=" gkhl-params" data-slate-object="annotation" 
data-annotation-key="gkann_0505373640" data-annotation-type="annotation"><span data-slate-string="true">()</span></span></span></span><span 
data-slate-leaf="true" data-offset-key="2559:4"><span class=" gkhl-function" data-slate-object="annotation" 
data-annotation-key="gkann_7868016098" data-annotation-type="annotation"><span data-slate-string="true"> 
</span></span></span><span data-slate-leaf="true" data-offset-key="2559:5"><span data-slate-string="true">{</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="2560"> <span data-slate-object="text" data-key="2561"><span data-slate-leaf="true" 
data-offset-key="2561:0" data-first-offset="true"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="2561:1"><span class=" gkhl-built_in" data-slate-object="annotation" 
data-annotation-key="gkann_5859794254" data-annotation-type="annotation"><span data-slate-string="true">printf</span></span></span><span 
data-slate-leaf="true" data-offset-key="2561:2"><span data-slate-string="true">(</span></span><span 
data-slate-leaf="true" data-offset-key="2561:3"><span class=" gkhl-string" data-slate-object="annotation" 
data-annotation-key="gkann_1614558260" data-annotation-type="annotation"><span data-slate-string="true">"hello 
main!"</span></span></span><span data-slate-leaf="true" data-offset-key="2561:4"><span data-slate-string="true">);</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="2562"> <span data-slate-object="text" data-key="2563"><span data-slate-leaf="true" 
data-offset-key="2563:0" data-first-offset="true"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="2563:1"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_9525712279" data-annotation-type="annotation"><span data-slate-string="true">return</span></span></span><span 
data-slate-leaf="true" data-offset-key="2563:2"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="2563:3"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_0834555228" data-annotation-type="annotation"><span data-slate-string="true">0</span></span></span><span 
data-slate-leaf="true" data-offset-key="2563:4"><span data-slate-string="true">;</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="2564"> <span data-slate-object="text" data-key="2565"><span data-slate-leaf="true" 
data-offset-key="2565:0" data-first-offset="true"><span data-slate-string="true">}</span></span></span> 
</div> <div class="ps__rail-x" style="left: 0px; bottom: 0px;"> <div class="ps__thumb-x" tabindex="0" 
style="left: 0px; width: 0px;"></div> </div> <div class="ps__rail-y" style="top: 0px; right: 
0px;"> <div class="ps__thumb-y" tabindex="0" style="top: 0px; height: 0px;"></div> </div> </div> 
</div> <div class="se-1dd650a1 " data-slate-type="paragraph" data-slate-object="block" data-key="2566"> 
<span data-slate-object="text" data-key="2567"><span data-slate-leaf="true" data-offset-key="2567:0" 
data-first-offset="true"><span data-slate-string="true">代码运行以后，会输出一行字符串 “hello main!”。</span></span></span> 
</div> <div class="se-09f3d416 " data-slate-type="paragraph" data-slate-object="block" data-key="2568"> 
<span data-slate-object="text" data-key="2569"><span data-slate-leaf="true" data-offset-key="2569:0" 
data-first-offset="true"><span data-slate-string="true">接下来呢，我们对上述代码稍微修改，在 pre_output 函数前面加上</span></span></span><span 
data-slate-type="code" data-slate-object="inline" data-key="2570" class="se-1fdea742"><span 
data-slate-object="text" data-key="2571"><span data-slate-leaf="true" data-offset-key="2571:0" 
data-first-offset="true"><span data-slate-string="true">__attribute__</span></span></span></span><span 
data-slate-object="text" data-key="2572"><span data-slate-leaf="true" data-offset-key="2572:0" 
data-first-offset="true"><span data-slate-string="true">((constructor)) 。这样，pre_output 函数就会先于主函数执行，代码如下：</span></span></span> 
</div> <div class="se-e056b8d3 se-d7581654" data-slate-type="pre" data-slate-object="block" 
data-key="2573" data-code-language="cpp"> <div class="se-10d7fcf1 se-9ef5af5a"> <span></span> 
</div> <div class="se-f2927106"> <div class="se-98be3b11 se-e9c483f5" data-code-line-number="1"></div> 
<div class="se-98be3b11 se-e9c483f5" data-code-line-number="2"></div> <div class="se-98be3b11 
se-e9c483f5" data-code-line-number="3"></div> <div class="se-98be3b11 se-e9c483f5" data-code-line-number="4"></div> 
<div class="se-98be3b11 se-e9c483f5" data-code-line-number="5"></div> <div class="se-98be3b11 
se-e9c483f5" data-code-line-number="6"></div> <div class="se-98be3b11 se-e9c483f5" data-code-line-number="7"></div> 
<div class="se-98be3b11 se-e9c483f5" data-code-line-number="8"></div> <div class="se-98be3b11 
se-e9c483f5" data-code-line-number="9"></div> <div class="se-98be3b11 se-e9c483f5" data-code-line-number="10"></div> 
<div class="se-98be3b11 se-e9c483f5" data-code-line-number="11"></div> <div class="se-98be3b11 
se-e9c483f5" data-code-line-number="12"></div> </div> <div class="se-a93830c6 ps"> <div class="se-0a5bf258 
se-466ac03c" data-slate-type="code-line" data-slate-object="block" data-key="2574"> <span data-slate-object="text" 
data-key="2575"><span data-slate-leaf="true" data-offset-key="2575:0" data-first-offset="true"><span 
class=" gkhl-meta" data-slate-object="annotation" data-annotation-key="gkann_2668048936" data-annotation-type="annotation"><span 
data-slate-string="true">#include &lt;stdio.h&gt;</span></span></span></span> </div> <div class="se-0a5bf258 
se-466ac03c" data-slate-type="code-line" data-slate-object="block" data-key="2576"> <span data-slate-object="text" 
data-key="2577"></span> </div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" 
data-slate-object="block" data-key="2578"> <span data-slate-object="text" data-key="2579"><span 
data-slate-leaf="true" data-offset-key="2579:0" data-first-offset="true"><span data-slate-string="true">__attribute__((constructor))</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="2580"> <span data-slate-object="text" data-key="2581"><span data-slate-leaf="true" 
data-offset-key="2581:0" data-first-offset="true"><span class=" gkhl-function" data-slate-object="annotation" 
data-annotation-key="gkann_3971821936" data-annotation-type="annotation"><span class=" gkhl-keyword" 
data-slate-object="annotation" data-annotation-key="gkann_9333582411" data-annotation-type="annotation"><span 
data-slate-string="true">void</span></span></span></span><span data-slate-leaf="true" data-offset-key="2581:1"><span 
class=" gkhl-function" data-slate-object="annotation" data-annotation-key="gkann_3971821936" 
data-annotation-type="annotation"><span data-slate-string="true"> </span></span></span><span 
data-slate-leaf="true" data-offset-key="2581:2"><span class=" gkhl-title" data-slate-object="annotation" 
data-annotation-key="gkann_9981519769" data-annotation-type="annotation"><span class=" gkhl-function" 
data-slate-object="annotation" data-annotation-key="gkann_3971821936" data-annotation-type="annotation"><span 
data-slate-string="true">pre_output</span></span></span></span><span data-slate-leaf="true" 
data-offset-key="2581:3"><span class=" gkhl-params" data-slate-object="annotation" data-annotation-key="gkann_1902578898" 
data-annotation-type="annotation"><span class=" gkhl-function" data-slate-object="annotation" 
data-annotation-key="gkann_3971821936" data-annotation-type="annotation"><span data-slate-string="true">()</span></span></span></span><span 
data-slate-leaf="true" data-offset-key="2581:4"><span class=" gkhl-function" data-slate-object="annotation" 
data-annotation-key="gkann_3971821936" data-annotation-type="annotation"><span data-slate-string="true"> 
</span></span></span><span data-slate-leaf="true" data-offset-key="2581:5"><span data-slate-string="true">{</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="2582"> <span data-slate-object="text" data-key="2583"><span data-slate-leaf="true" 
data-offset-key="2583:0" data-first-offset="true"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="2583:1"><span class=" gkhl-built_in" data-slate-object="annotation" 
data-annotation-key="gkann_7527176814" data-annotation-type="annotation"><span data-slate-string="true">printf</span></span></span><span 
data-slate-leaf="true" data-offset-key="2583:2"><span data-slate-string="true">(</span></span><span 
data-slate-leaf="true" data-offset-key="2583:3"><span class=" gkhl-string" data-slate-object="annotation" 
data-annotation-key="gkann_2237934861" data-annotation-type="annotation"><span data-slate-string="true">"hello 
geek!\n"</span></span></span><span data-slate-leaf="true" data-offset-key="2583:4"><span data-slate-string="true">);</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="2584"> <span data-slate-object="text" data-key="2585"><span data-slate-leaf="true" 
data-offset-key="2585:0" data-first-offset="true"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="2585:1"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_4608744938" data-annotation-type="annotation"><span data-slate-string="true">return</span></span></span><span 
data-slate-leaf="true" data-offset-key="2585:2"><span data-slate-string="true"> ;</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="2586"> <span data-slate-object="text" data-key="2587"><span data-slate-leaf="true" 
data-offset-key="2587:0" data-first-offset="true"><span data-slate-string="true">}</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="2588"> <span data-slate-object="text" data-key="2589"></span> </div> <div class="se-0a5bf258 
se-466ac03c" data-slate-type="code-line" data-slate-object="block" data-key="2590"> <span data-slate-object="text" 
data-key="2591"><span data-slate-leaf="true" data-offset-key="2591:0" data-first-offset="true"><span 
class=" gkhl-function" data-slate-object="annotation" data-annotation-key="gkann_3831401361" 
data-annotation-type="annotation"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_3413101832" data-annotation-type="annotation"><span data-slate-string="true">int</span></span></span></span><span 
data-slate-leaf="true" data-offset-key="2591:1"><span class=" gkhl-function" data-slate-object="annotation" 
data-annotation-key="gkann_3831401361" data-annotation-type="annotation"><span data-slate-string="true"> 
</span></span></span><span data-slate-leaf="true" data-offset-key="2591:2"><span class=" gkhl-function" 
data-slate-object="annotation" data-annotation-key="gkann_3831401361" data-annotation-type="annotation"><span 
class=" gkhl-title" data-slate-object="annotation" data-annotation-key="gkann_0217241144" data-annotation-type="annotation"><span 
data-slate-string="true">main</span></span></span></span><span data-slate-leaf="true" data-offset-key="2591:3"><span 
class=" gkhl-function" data-slate-object="annotation" data-annotation-key="gkann_3831401361" 
data-annotation-type="annotation"><span class=" gkhl-params" data-slate-object="annotation" 
data-annotation-key="gkann_4003847073" data-annotation-type="annotation"><span data-slate-string="true">()</span></span></span></span><span 
data-slate-leaf="true" data-offset-key="2591:4"><span class=" gkhl-function" data-slate-object="annotation" 
data-annotation-key="gkann_3831401361" data-annotation-type="annotation"><span data-slate-string="true"> 
</span></span></span><span data-slate-leaf="true" data-offset-key="2591:5"><span data-slate-string="true">{</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="2592"> <span data-slate-object="text" data-key="2593"><span data-slate-leaf="true" 
data-offset-key="2593:0" data-first-offset="true"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="2593:1"><span class=" gkhl-built_in" data-slate-object="annotation" 
data-annotation-key="gkann_4152890475" data-annotation-type="annotation"><span data-slate-string="true">printf</span></span></span><span 
data-slate-leaf="true" data-offset-key="2593:2"><span data-slate-string="true">(</span></span><span 
data-slate-leaf="true" data-offset-key="2593:3"><span class=" gkhl-string" data-slate-object="annotation" 
data-annotation-key="gkann_0985262340" data-annotation-type="annotation"><span data-slate-string="true">"hello 
main!\n"</span></span></span><span data-slate-leaf="true" data-offset-key="2593:4"><span data-slate-string="true">);</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="2594"> <span data-slate-object="text" data-key="2595"><span data-slate-leaf="true" 
data-offset-key="2595:0" data-first-offset="true"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="2595:1"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_3746451352" data-annotation-type="annotation"><span data-slate-string="true">return</span></span></span><span 
data-slate-leaf="true" data-offset-key="2595:2"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="2595:3"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_0291412780" data-annotation-type="annotation"><span data-slate-string="true">0</span></span></span><span 
data-slate-leaf="true" data-offset-key="2595:4"><span data-slate-string="true">;</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="2596"> <span data-slate-object="text" data-key="2597"><span data-slate-leaf="true" 
data-offset-key="2597:0" data-first-offset="true"><span data-slate-string="true">}</span></span></span> 
</div> <div class="ps__rail-x" style="left: 0px; bottom: 0px;"> <div class="ps__thumb-x" tabindex="0" 
style="left: 0px; width: 0px;"></div> </div> <div class="ps__rail-y" style="top: 0px; right: 
0px;"> <div class="ps__thumb-y" tabindex="0" style="top: 0px; height: 0px;"></div> </div> </div> 
</div> <div class="se-2977d833 " data-slate-type="paragraph" data-slate-object="block" data-key="2598"> 
<span data-slate-object="text" data-key="2599"><span data-slate-leaf="true" data-offset-key="2599:0" 
data-first-offset="true"><span data-slate-string="true">如上代码执行以后，程序会输出两行内容，第 1 行是 pre_output 
函数输出的内容 “hello geek!”，第 2 行才是主函数的执行输出内容 “hello main!”。</span></span></span> </div> <div class="se-45daa677 
" data-slate-type="paragraph" data-slate-object="block" data-key="2600"> <span data-slate-object="text" 
data-key="2601"><span data-slate-leaf="true" data-offset-key="2601:0" data-first-offset="true"><span 
data-slate-string="true">从输出内容可以看出，加了</span></span></span><span data-slate-type="code" data-slate-object="inline" 
data-key="2602" class="se-1fdea742"><span data-slate-object="text" data-key="2603"><span data-slate-leaf="true" 
data-offset-key="2603:0" data-first-offset="true"><span data-slate-string="true">__attribute__</span></span></span></span><span 
data-slate-object="text" data-key="2604"><span data-slate-leaf="true" data-offset-key="2604:0" 
data-first-offset="true"><span data-slate-string="true">((constructor)) 以后，pre_output 函数会先于 
main 主函数执行，这种有趣的特性，在接下来的操作中我们还会用得上，你要理解并记住。</span></span></span> </div> <div class="se-85dd0e7a 
" data-slate-type="paragraph" data-slate-object="block" data-key="2605"> <span data-slate-object="text" 
data-key="2606"><span data-slate-leaf="true" data-offset-key="2606:0" data-first-offset="true"><span 
data-slate-string="true">其实 </span></span></span><span data-slate-type="code" data-slate-object="inline" 
data-key="2607" class="se-1fdea742"><span data-slate-object="text" data-key="2608"><span data-slate-leaf="true" 
data-offset-key="2608:0" data-first-offset="true"><span data-slate-string="true">__attribute__</span></span></span></span><span 
data-slate-object="text" data-key="2609"><span data-slate-leaf="true" data-offset-key="2609:0" 
data-first-offset="true"><span data-slate-string="true"> 的作用还很多，你可以上网搜搜，会让你的程序性质变得特别有意思。</span></span></span> 
</div> <h2 class="se-1e3200ae" data-slate-type="heading" data-slate-object="block" data-key="2610"><span 
data-slate-object="text" data-key="2611"><span data-slate-leaf="true" data-offset-key="2611:0" 
data-first-offset="true"><span data-slate-string="true">RUN_ALL_TESTS 函数设计</span></span></span></h2> 
<div class="se-4983afcf " data-slate-type="paragraph" data-slate-object="block" data-key="2612"> 
<span data-slate-object="text" data-key="2613"><span data-slate-leaf="true" data-offset-key="2613:0" 
data-first-offset="true"><span data-slate-string="true">好了，准备工作都做完了，接下来让我们来思考一下 RUN_ALL_TESTS 
函数要完成的事情，以及完成这些事情所需要的条件。</span></span></span> </div> <div class="se-4f15b99a " data-slate-type="paragraph" 
data-slate-object="block" data-key="2614"> <span data-slate-object="text" data-key="2615"><span 
data-slate-leaf="true" data-offset-key="2615:0" data-first-offset="true"><span data-slate-string="true">从主函数中调用 
RUN_ALL_TESTS 函数的方式来看，RUN_ALL_TESTS 函数应该是一个返回值为整型的函数。这样，我们可以得到这样的函数声明形式：</span></span></span> 
</div> <div class="se-793e92aa se-a80ec6d7" data-slate-type="pre" data-slate-object="block" 
data-key="2616" data-code-language="cpp"> <div class="se-75102dda se-b91492c5"> <span></span> 
</div> <div class="se-410b15fb"> <div class="se-856995be se-a28dc184" data-code-line-number="1"></div> 
</div> <div class="se-b0a69b7e ps"> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" 
data-slate-object="block" data-key="2617"> <span data-slate-object="text" data-key="2618"><span 
data-slate-leaf="true" data-offset-key="2618:0" data-first-offset="true"><span class=" gkhl-function" 
data-slate-object="annotation" data-annotation-key="gkann_8570344447" data-annotation-type="annotation"><span 
class=" gkhl-keyword" data-slate-object="annotation" data-annotation-key="gkann_1708962993" 
data-annotation-type="annotation"><span data-slate-string="true">int</span></span></span></span><span 
data-slate-leaf="true" data-offset-key="2618:1"><span class=" gkhl-function" data-slate-object="annotation" 
data-annotation-key="gkann_8570344447" data-annotation-type="annotation"><span data-slate-string="true"> 
</span></span></span><span data-slate-leaf="true" data-offset-key="2618:2"><span class=" gkhl-function" 
data-slate-object="annotation" data-annotation-key="gkann_8570344447" data-annotation-type="annotation"><span 
class=" gkhl-title" data-slate-object="annotation" data-annotation-key="gkann_6613481021" data-annotation-type="annotation"><span 
data-slate-string="true">RUN_ALL_TESTS</span></span></span></span><span data-slate-leaf="true" 
data-offset-key="2618:3"><span class=" gkhl-function" data-slate-object="annotation" data-annotation-key="gkann_8570344447" 
data-annotation-type="annotation"><span class=" gkhl-params" data-slate-object="annotation" 
data-annotation-key="gkann_9227816552" data-annotation-type="annotation"><span data-slate-string="true">()</span></span></span></span><span 
data-slate-leaf="true" data-offset-key="2618:4"><span data-slate-string="true">;</span></span></span> 
</div> <div class="ps__rail-x" style="left: 0px; bottom: 0px;"> <div class="ps__thumb-x" tabindex="0" 
style="left: 0px; width: 0px;"></div> </div> <div class="ps__rail-y" style="top: 0px; right: 
0px;"> <div class="ps__thumb-y" tabindex="0" style="top: 0px; height: 0px;"></div> </div> </div> 
</div> <div class="se-86716dbf " data-slate-type="paragraph" data-slate-object="block" data-key="2619"> 
<span data-slate-object="text" data-key="2620"><span data-slate-leaf="true" data-offset-key="2620:0" 
data-first-offset="true"><span data-slate-string="true">从测试框架的执行输出结果中看，RUN_ALL_TESTS 函数可以依次性地执行每一个 
TEST 宏扩展出来的测试用例函数，这是怎么做到的呢？</span></span></span> </div> <div class="se-72a52dc5 " data-slate-type="paragraph" 
data-slate-object="block" data-key="2621"> <span data-slate-object="text" data-key="2622"><span 
data-slate-leaf="true" data-offset-key="2622:0" data-first-offset="true"><span data-slate-string="true">我们可以这样认为：在主函数执行 
RUN_ALL_TESTS 函数之前，有一些函数过程，就已经把测试用例函数的相关信息，记录在了一个 RUN_ALL_TESTS 函数可以访问到的地方，等到 RUN_ALL_TESTS 
函数执行的时候，就可以根据这些记录的信息，依次性地执行这些测试用例函数。整个过程，如下图所示：</span></span></span> </div> <div class="se-ede78953" 
data-slate-type="image" data-slate-object="block" data-key="2623"></div> </div>', body_summary='', 
bundle='book', delta=0, body_format='full_html', langcode='zh-hans', revision_id=767 where 
entity_id=767 
 {executed in 1 msec}
2020-11-24 18:55:30.658 INFO  jdbc.sqltiming Line:373 - select nodefiledd0_.nid as nid1_10_, nodefiledd0_.changed as changed2_10_, nodefiledd0_.created 
as created3_10_, nodefiledd0_.default_langcode as default_4_10_, nodefiledd0_.langcode as langcode5_10_, 
nodefiledd0_.promote as promote6_10_, nodefiledd0_.revision_translation_affected as revision7_10_, 
nodefiledd0_.status as status8_10_, nodefiledd0_.sticky as sticky9_10_, nodefiledd0_.title 
as title10_10_, nodefiledd0_.type as type11_10_, nodefiledd0_.uid as uid12_10_, nodefiledd0_.vid 
as vid13_10_ from node_field_data nodefiledd0_ where nodefiledd0_.nid=767 
 {executed in 0 msec}
2020-11-24 18:55:30.658 INFO  jdbc.resultsettable Line:610 - 
|----|-----------|-----------|-----------------|---------|--------|------------------------------|-------|-------|-----------------------|-----|----|----|
|nid |changed    |created    |default_langcode |langcode |promote |revision_translation_affected |status |sticky |title                  |type |uid |vid |
|----|-----------|-----------|-----------------|---------|--------|------------------------------|-------|-------|-----------------------|-----|----|----|
|767 |1606117102 |1606117102 |1                |zh-hans  |0       |1                             |1      |0      |27丨牛刀小试（下）：实现一个自己的测试框架 |book |1   |767 |
|----|-----------|-----------|-----------------|---------|--------|------------------------------|-------|-------|-----------------------|-----|----|----|

2020-11-24 18:55:30.659 INFO  jdbc.sqltiming Line:373 - select nodefieldr0_.nid as nid1_11_0_, nodefieldr0_.changed as changed2_11_0_, nodefieldr0_.created 
as created3_11_0_, nodefieldr0_.default_langcode as default_4_11_0_, nodefieldr0_.langcode 
as langcode5_11_0_, nodefieldr0_.promote as promote6_11_0_, nodefieldr0_.revision_translation_affected 
as revision7_11_0_, nodefieldr0_.status as status8_11_0_, nodefieldr0_.sticky as sticky9_11_0_, 
nodefieldr0_.title as title10_11_0_, nodefieldr0_.uid as uid11_11_0_, nodefieldr0_.vid as vid12_11_0_ 
from node_field_revision nodefieldr0_ where nodefieldr0_.nid=767 
 {executed in 0 msec}
2020-11-24 18:55:30.660 INFO  jdbc.resultsettable Line:610 - 
|---------|-----------|-----------|-----------------|---------|--------|------------------------------|-------|-------|-----------------------|----|----|
|nid      |changed    |created    |default_langcode |langcode |promote |revision_translation_affected |status |sticky |title                  |uid |vid |
|---------|-----------|-----------|-----------------|---------|--------|------------------------------|-------|-------|-----------------------|----|----|
|[unread] |1606117102 |1606117102 |1                |zh-hans  |0       |1                             |1      |0      |27丨牛刀小试（下）：实现一个自己的测试框架 |1   |767 |
|---------|-----------|-----------|-----------------|---------|--------|------------------------------|-------|-------|-----------------------|----|----|

2020-11-24 18:55:30.661 INFO  jdbc.sqltiming Line:373 - update node_field_data set changed=1606215330, created=1606215330, default_langcode=1, langcode='zh-hans', 
promote=0, revision_translation_affected=1, status=1, sticky=0, title='27丨牛刀小试（下）：实现一个自己的测试框架', 
type='book', uid=1, vid=767 where nid=767 
 {executed in 0 msec}
2020-11-24 18:55:30.662 INFO  jdbc.sqltiming Line:373 - update node_field_revision set changed=1606215330, created=1606215330, default_langcode=1, 
langcode='zh-hans', promote=0, revision_translation_affected=1, status=1, sticky=0, title='27丨牛刀小试（下）：实现一个自己的测试框架', 
uid=1, vid=767 where nid=767 
 {executed in 0 msec}
2020-11-24 18:55:30.667 INFO  jdbc.sqltiming Line:373 - select bookfieldm0_.entity_id as entity_i1_8_, bookfieldm0_.bundle as bundle2_8_, bookfieldm0_.delta 
as delta3_8_, bookfieldm0_.langcode as langcode4_8_, bookfieldm0_.field_media_value as field_me5_8_, 
bookfieldm0_.revision_id as revision6_8_ from node__field_media bookfieldm0_ where bookfieldm0_.entity_id=767 
 {executed in 0 msec}
2020-11-24 18:55:30.667 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------------|------------|
|entity_id |bundle |delta |langcode |field_media_value |revision_id |
|----------|-------|------|---------|------------------|------------|
|767       |book   |0     |zh-hans  |                  |767         |
|----------|-------|------|---------|------------------|------------|

2020-11-24 18:55:30.670 INFO  jdbc.sqltiming Line:373 - select nodefieldm0_.entity_id as entity_i1_17_0_, nodefieldm0_.bundle as bundle2_17_0_, nodefieldm0_.delta 
as delta3_17_0_, nodefieldm0_.langcode as langcode4_17_0_, nodefieldm0_.field_media_value as 
field_me5_17_0_, nodefieldm0_.revision_id as revision6_17_0_ from node_revision__field_media 
nodefieldm0_ where nodefieldm0_.entity_id=767 
 {executed in 0 msec}
2020-11-24 18:55:30.670 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------------|------------|
|entity_id |bundle |delta |langcode |field_media_value |revision_id |
|----------|-------|------|---------|------------------|------------|
|[unread]  |book   |0     |zh-hans  |                  |767         |
|----------|-------|------|---------|------------------|------------|

2020-11-24 18:55:30.672 INFO  jdbc.sqltiming Line:373 - select bookfieldc0_.entity_id as entity_i1_5_, bookfieldc0_.bundle as bundle2_5_, bookfieldc0_.field_comment_value 
as field_co3_5_, bookfieldc0_.delta as delta4_5_, bookfieldc0_.field_comment_format as field_co5_5_, 
bookfieldc0_.langcode as langcode6_5_, bookfieldc0_.revision_id as revision7_5_ from node__field_comment 
bookfieldc0_ where bookfieldc0_.entity_id=767 
 {executed in 0 msec}
2020-11-24 18:55:30.673 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|--------------------|------|---------------------|---------|------------|
|entity_id |bundle |field_comment_value |delta |field_comment_format |langcode |revision_id |
|----------|-------|--------------------|------|---------------------|---------|------------|
|767       |book   |                    |0     |full_html            |zh-hans  |767         |
|----------|-------|--------------------|------|---------------------|---------|------------|

2020-11-24 18:55:30.675 INFO  jdbc.sqltiming Line:373 - select nodefieldc0_.entity_id as entity_i1_14_0_, nodefieldc0_.bundle as bundle2_14_0_, nodefieldc0_.field_comment_value 
as field_co3_14_0_, nodefieldc0_.delta as delta4_14_0_, nodefieldc0_.field_comment_format as 
field_co5_14_0_, nodefieldc0_.langcode as langcode6_14_0_, nodefieldc0_.revision_id as revision7_14_0_ 
from node_revision__field_comment nodefieldc0_ where nodefieldc0_.entity_id=767 
 {executed in 0 msec}
2020-11-24 18:55:30.676 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|--------------------|------|---------------------|---------|------------|
|entity_id |bundle |field_comment_value |delta |field_comment_format |langcode |revision_id |
|----------|-------|--------------------|------|---------------------|---------|------------|
|[unread]  |book   |                    |0     |full_html            |zh-hans  |767         |
|----------|-------|--------------------|------|---------------------|---------|------------|

2020-11-24 18:55:30.678 INFO  jdbc.sqltiming Line:373 - select bookfieldt0_.entity_id as entity_i1_9_, bookfieldt0_.bundle as bundle2_9_, bookfieldt0_.delta 
as delta3_9_, bookfieldt0_.langcode as langcode4_9_, bookfieldt0_.revision_id as revision5_9_, 
bookfieldt0_.field_thumb_value as field_th6_9_ from node__field_thumb bookfieldt0_ where bookfieldt0_.entity_id=767 
 {executed in 0 msec}
2020-11-24 18:55:30.678 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------|------------------|
|entity_id |bundle |delta |langcode |revision_id |field_thumb_value |
|----------|-------|------|---------|------------|------------------|
|767       |book   |0     |zh-hans  |767         |                  |
|----------|-------|------|---------|------------|------------------|

2020-11-24 18:55:30.680 INFO  jdbc.sqltiming Line:373 - update node__field_thumb set bundle='book', delta=0, langcode='zh-hans', revision_id=767, field_thumb_value='https://static001.geekbang.org/resource/image/71/5a/712abb9fc160aca48147b0a2989aa85a.jpg' 
where entity_id=767 
 {executed in 0 msec}
2020-11-24 18:55:30.685 INFO  jdbc.sqltiming Line:373 - select nodefieldt0_.entity_id as entity_i1_18_0_, nodefieldt0_.bundle as bundle2_18_0_, nodefieldt0_.delta 
as delta3_18_0_, nodefieldt0_.langcode as langcode4_18_0_, nodefieldt0_.revision_id as revision5_18_0_, 
nodefieldt0_.field_thumb_value as field_th6_18_0_ from node_revision__field_thumb nodefieldt0_ 
where nodefieldt0_.entity_id=767 
 {executed in 0 msec}
2020-11-24 18:55:30.685 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------|------------------|
|entity_id |bundle |delta |langcode |revision_id |field_thumb_value |
|----------|-------|------|---------|------------|------------------|
|[unread]  |book   |0     |zh-hans  |767         |                  |
|----------|-------|------|---------|------------|------------------|

2020-11-24 18:55:30.687 INFO  jdbc.sqltiming Line:373 - update node_revision__field_thumb set bundle='book', delta=0, langcode='zh-hans', revision_id=767, 
field_thumb_value='https://static001.geekbang.org/resource/image/71/5a/712abb9fc160aca48147b0a2989aa85a.jpg' 
where entity_id=767 
 {executed in 0 msec}
2020-11-24 18:55:30.690 INFO  jdbc.sqltiming Line:373 - select bookfieldf0_.entity_id as entity_i1_6_0_, bookfieldf0_.bundle as bundle2_6_0_, bookfieldf0_.delta 
as delta3_6_0_, bookfieldf0_.field_fenlei_target_id as field_fe4_6_0_, bookfieldf0_.langcode 
as langcode5_6_0_, bookfieldf0_.revision_id as revision6_6_0_ from node__field_fenlei bookfieldf0_ 
where bookfieldf0_.entity_id=767 
 {executed in 0 msec}
2020-11-24 18:55:30.691 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------------|---------|------------|
|entity_id |bundle |delta |field_fenlei_target_id |langcode |revision_id |
|----------|-------|------|-----------------------|---------|------------|
|[unread]  |book   |0     |1                      |zh-hans  |767         |
|----------|-------|------|-----------------------|---------|------------|

2020-11-24 18:55:30.693 INFO  jdbc.sqltiming Line:373 - select nodefieldf0_.entity_id as entity_i1_15_0_, nodefieldf0_.bundle as bundle2_15_0_, nodefieldf0_.delta 
as delta3_15_0_, nodefieldf0_.field_fenlei_target_id as field_fe4_15_0_, nodefieldf0_.langcode 
as langcode5_15_0_, nodefieldf0_.revision_id as revision6_15_0_ from node_revision__field_fenlei 
nodefieldf0_ where nodefieldf0_.entity_id=767 
 {executed in 0 msec}
2020-11-24 18:55:30.693 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------------|---------|------------|
|entity_id |bundle |delta |field_fenlei_target_id |langcode |revision_id |
|----------|-------|------|-----------------------|---------|------------|
|[unread]  |book   |0     |1                      |zh-hans  |767         |
|----------|-------|------|-----------------------|---------|------------|

2020-11-24 18:55:30.695 INFO  jdbc.sqltiming Line:373 - select bookchecke0_.item_id as item_id1_2_, bookchecke0_.fsid as fsid2_2_, bookchecke0_.got 
as got3_2_, bookchecke0_.name as name4_2_, bookchecke0_.parse_fail as parse_fa5_2_, bookchecke0_.parsed 
as parsed6_2_, bookchecke0_.path as path7_2_, bookchecke0_.title as title8_2_, bookchecke0_.vid 
as vid9_2_ from book_check bookchecke0_ where bookchecke0_.fsid='603446430949939' and bookchecke0_.name='net_content' 
 {executed in 0 msec}
2020-11-24 18:55:30.696 INFO  jdbc.resultsettable Line:610 - 
|--------|---------|---------|---------|-----------|---------|---------|---------|---------|
|item_id |fsid     |got      |name     |parse_fail |parsed   |path     |title    |vid      |
|--------|---------|---------|---------|-----------|---------|---------|---------|---------|
|768     |[unread] |[unread] |[unread] |[unread]   |[unread] |[unread] |[unread] |[unread] |
|--------|---------|---------|---------|-----------|---------|---------|---------|---------|

2020-11-24 18:59:33.521 INFO  jdbc.sqltiming Line:373 - update book_check set fsid='603446430949939', got=1, name='net_content', parse_fail='comment_', 
parsed=0, path='109-人人都能学会的编程入门课/05丨综合项目篇 (5讲)/28丨尝试升级（上）：完善测试框架的功能与提示.html', title='28丨尝试升级（上）：完善测试框架的功能与提示', 
vid=768 where item_id=768 
 {executed in 0 msec}
2020-11-24 18:59:33.530 INFO  jdbc.sqltiming Line:373 - select nodebodyen0_.entity_id as entity_i1_4_, nodebodyen0_.body_value as body_val2_4_, nodebodyen0_.body_summary 
as body_sum3_4_, nodebodyen0_.bundle as bundle4_4_, nodebodyen0_.delta as delta5_4_, nodebodyen0_.body_format 
as body_for6_4_, nodebodyen0_.langcode as langcode7_4_, nodebodyen0_.revision_id as revision8_4_ 
from node__body nodebodyen0_ where nodebodyen0_.entity_id=768 
 {executed in 0 msec}
2020-11-24 18:59:33.531 INFO  jdbc.resultsettable Line:610 - 
|----------|-----------|-------------|-------|------|------------|---------|------------|
|entity_id |body_value |body_summary |bundle |delta |body_format |langcode |revision_id |
|----------|-----------|-------------|-------|------|------------|---------|------------|
|768       |           |             |book   |0     |full_html   |zh-hans  |768         |
|----------|-----------|-------------|-------|------|------------|---------|------------|

2020-11-24 18:59:33.531 INFO  jdbc.sqltiming Line:373 - select nodebodyre0_.entity_id as entity_i1_13_0_, nodebodyre0_.body_value as body_val2_13_0_, 
nodebodyre0_.body_summary as body_sum3_13_0_, nodebodyre0_.bundle as bundle4_13_0_, nodebodyre0_.delta 
as delta5_13_0_, nodebodyre0_.body_format as body_for6_13_0_, nodebodyre0_.langcode as langcode7_13_0_, 
nodebodyre0_.revision_id as revision8_13_0_ from node_revision__body nodebodyre0_ where nodebodyre0_.entity_id=768 
 {executed in 0 msec}
2020-11-24 18:59:33.532 INFO  jdbc.resultsettable Line:610 - 
|----------|-----------|-------------|-------|------|------------|---------|------------|
|entity_id |body_value |body_summary |bundle |delta |body_format |langcode |revision_id |
|----------|-----------|-------------|-------|------|------------|---------|------------|
|[unread]  |           |             |book   |0     |full_html   |zh-hans  |768         |
|----------|-----------|-------------|-------|------|------------|---------|------------|

2020-11-24 18:59:33.537 INFO  jdbc.sqltiming Line:373 - update node__body set body_value='<div data-slate-editor="true" data-key="1430" autocorrect="off" 
spellcheck="false" data-gramm="false" style="outline: none; white-space: pre-wrap; overflow-wrap: 
break-word;"> <div class="se-8f7efb8f " data-slate-type="paragraph" data-slate-object="block" 
data-key="1431"> <span data-slate-object="text" data-key="1432"><span data-slate-leaf="true" 
data-offset-key="1432:0" data-first-offset="true"><span data-slate-string="true">你好，我是胡光，欢迎回来。</span></span></span> 
</div> <div class="se-a4ffdfea " data-slate-type="paragraph" data-slate-object="block" data-key="1433"> 
<span data-slate-object="text" data-key="1434"><span data-slate-leaf="true" data-offset-key="1434:0" 
data-first-offset="true"><span data-slate-string="true">在上一节课中呢，我们学习了测试框架的主要功能流程，完成了最重要的 RUN_ALL_TESTS 
函数的功能逻辑。并且在这个学习期间，我们还使用了注册函数的技巧，就是让一些函数先于主函数执行，将测试用例函数信息记录在一个函数指针数组中，为后续的 RUN_ALL_TESTS 函数功能的执行作铺垫。</span></span></span> 
</div> <div class="se-a345ceba " data-slate-type="paragraph" data-slate-object="block" data-key="1435"> 
<span data-slate-object="text" data-key="1436"><span data-slate-leaf="true" data-offset-key="1436:0" 
data-first-offset="true"><span data-slate-string="true">可你有没有发现，我们上节课程所完成的代码，只能让我们的测试框架在整体流程功能上跑通，然而程序的输出内容却不如 
gtest 丰富。</span></span></span> </div> <div class="se-13be8792 " data-slate-type="paragraph" 
data-slate-object="block" data-key="1437"> <span data-slate-object="text" data-key="1438"><span 
data-slate-leaf="true" data-offset-key="1438:0" data-first-offset="true"><span data-slate-string="true">今天，我们的主要任务，就是参考 
gtest 的输出，逐步完善我们自己测试框架的相关信息输出方面的细节，从而让输出内容更加符合我们想要的信息。来，让我们一起开始吧。</span></span></span> </div> 
<h2 class="se-4366eba0" data-slate-type="heading" data-slate-object="block" data-key="1439"><span 
data-slate-object="text" data-key="1440"><span data-slate-leaf="true" data-offset-key="1440:0" 
data-first-offset="true"><span data-slate-string="true">温故知新，gtest 的输出结果</span></span></span></h2> 
<div class="se-0025b934 " data-slate-type="paragraph" data-slate-object="block" data-key="1441"> 
<span data-slate-object="text" data-key="1442"><span data-slate-leaf="true" data-offset-key="1442:0" 
data-first-offset="true"><span data-slate-string="true">我们先来回顾一下 gtest 的输出结果，gtest 的输出内容大体可以分成三个部分。</span></span></span> 
</div> <div class="se-3f8a7300 " data-slate-type="paragraph" data-slate-object="block" data-key="1443"> 
<span data-slate-object="text" data-key="1444"><span data-slate-leaf="true" data-offset-key="1444:0" 
data-first-offset="true"><span data-slate-string="true">第一部分，一套单元测试的相关信息：</span></span></span> 
</div> <div class="se-0f1bbafd se-d2801112" data-slate-type="pre" data-slate-object="block" 
data-key="1445" data-code-language="typescript"> <div class="se-000be2a8 se-b9c59c55"> <span></span> 
</div> <div class="se-90c4e415"> <div class="se-059459bb se-33fc84d5" data-code-line-number="1"></div> 
<div class="se-059459bb se-33fc84d5" data-code-line-number="2"></div> <div class="se-059459bb 
se-33fc84d5" data-code-line-number="3"></div> </div> <div class="se-15ec5012 ps ps--active-x"> 
<div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="1446"> <span data-slate-object="text" data-key="1447"><span data-slate-leaf="true" 
data-offset-key="1447:0" data-first-offset="true"><span data-slate-string="true">[==========] 
Running </span></span><span data-slate-leaf="true" data-offset-key="1447:1"><span class=" gkhl-number" 
data-slate-object="annotation" data-annotation-key="gkann_4247180832" data-annotation-type="annotation"><span 
data-slate-string="true">2</span></span></span><span data-slate-leaf="true" data-offset-key="1447:2"><span 
data-slate-string="true"> tests </span></span><span data-slate-leaf="true" data-offset-key="1447:3"><span 
class=" gkhl-keyword" data-slate-object="annotation" data-annotation-key="gkann_6897511305" 
data-annotation-type="annotation"><span data-slate-string="true">from</span></span></span><span 
data-slate-leaf="true" data-offset-key="1447:4"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="1447:5"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_9796311015" data-annotation-type="annotation"><span data-slate-string="true">1</span></span></span><span 
data-slate-leaf="true" data-offset-key="1447:6"><span data-slate-string="true"> test suite.</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="1448"> <span data-slate-object="text" data-key="1449"><span data-slate-leaf="true" 
data-offset-key="1449:0" data-first-offset="true"><span data-slate-string="true">[----------] 
Global test environment </span></span><span data-slate-leaf="true" data-offset-key="1449:1"><span 
class=" gkhl-keyword" data-slate-object="annotation" data-annotation-key="gkann_2919244780" 
data-annotation-type="annotation"><span data-slate-string="true">set</span></span></span><span 
data-slate-leaf="true" data-offset-key="1449:2"><span data-slate-string="true">-up.</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="1450"> <span data-slate-object="text" data-key="1451"><span data-slate-leaf="true" 
data-offset-key="1451:0" data-first-offset="true"><span data-slate-string="true">[----------] 
</span></span><span data-slate-leaf="true" data-offset-key="1451:1"><span class=" gkhl-number" 
data-slate-object="annotation" data-annotation-key="gkann_6331333908" data-annotation-type="annotation"><span 
data-slate-string="true">2</span></span></span><span data-slate-leaf="true" data-offset-key="1451:2"><span 
data-slate-string="true"> tests </span></span><span data-slate-leaf="true" data-offset-key="1451:3"><span 
class=" gkhl-keyword" data-slate-object="annotation" data-annotation-key="gkann_8191099801" 
data-annotation-type="annotation"><span data-slate-string="true">from</span></span></span><span 
data-slate-leaf="true" data-offset-key="1451:4"><span data-slate-string="true"> test_is_prime</span></span></span> 
</div> <div class="ps__rail-x" style="width: 365px; left: 0px; bottom: 0px;"> <div class="ps__thumb-x" 
tabindex="0" style="left: 0px; width: 364px;"></div> </div> <div class="ps__rail-y" style="top: 
0px; right: 0px;"> <div class="ps__thumb-y" tabindex="0" style="top: 0px; height: 0px;"></div> 
</div> </div> </div> <div class="se-184ae8c7 " data-slate-type="paragraph" data-slate-object="block" 
data-key="1452"> <span data-slate-object="text" data-key="1453"><span data-slate-leaf="true" 
data-offset-key="1453:0" data-first-offset="true"><span data-slate-string="true">这段信息说明这套单元测试中，包含了 
2 个测试用例。</span></span></span> </div> <div class="se-98cbe829 " data-slate-type="paragraph" 
data-slate-object="block" data-key="1454"> <span data-slate-object="text" data-key="1455"><span 
data-slate-leaf="true" data-offset-key="1455:0" data-first-offset="true"><span data-slate-string="true">第二部分，是每个单元测试运行信息的输出：</span></span></span> 
</div> <div class="se-f7ef180f se-ee05d42b" data-slate-type="pre" data-slate-object="block" 
data-key="1456" data-code-language="sql"> <div class="se-25d038c6 se-27ba64f1"> <span></span> 
</div> <div class="se-ed27c08d"> <div class="se-ebb5ed75 se-e81d81e5" data-code-line-number="1"></div> 
<div class="se-ebb5ed75 se-e81d81e5" data-code-line-number="2"></div> <div class="se-ebb5ed75 
se-e81d81e5" data-code-line-number="3"></div> <div class="se-ebb5ed75 se-e81d81e5" data-code-line-number="4"></div> 
<div class="se-ebb5ed75 se-e81d81e5" data-code-line-number="5"></div> <div class="se-ebb5ed75 
se-e81d81e5" data-code-line-number="6"></div> <div class="se-ebb5ed75 se-e81d81e5" data-code-line-number="7"></div> 
<div class="se-ebb5ed75 se-e81d81e5" data-code-line-number="8"></div> <div class="se-ebb5ed75 
se-e81d81e5" data-code-line-number="9"></div> <div class="se-ebb5ed75 se-e81d81e5" data-code-line-number="10"></div> 
<div class="se-ebb5ed75 se-e81d81e5" data-code-line-number="11"></div> <div class="se-ebb5ed75 
se-e81d81e5" data-code-line-number="12"></div> <div class="se-ebb5ed75 se-e81d81e5" data-code-line-number="13"></div> 
<div class="se-ebb5ed75 se-e81d81e5" data-code-line-number="14"></div> <div class="se-ebb5ed75 
se-e81d81e5" data-code-line-number="15"></div> <div class="se-ebb5ed75 se-e81d81e5" data-code-line-number="16"></div> 
<div class="se-ebb5ed75 se-e81d81e5" data-code-line-number="17"></div> <div class="se-ebb5ed75 
se-e81d81e5" data-code-line-number="18"></div> <div class="se-ebb5ed75 se-e81d81e5" data-code-line-number="19"></div> 
</div> <div class="se-684df29d ps"> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" 
data-slate-object="block" data-key="1457"> <span data-slate-object="text" data-key="1458"><span 
data-slate-leaf="true" data-offset-key="1458:0" data-first-offset="true"><span data-slate-string="true">[ 
RUN ] test_is_prime.test1</span></span></span> </div> <div class="se-0a5bf258 se-466ac03c" 
data-slate-type="code-line" data-slate-object="block" data-key="1459"> <span data-slate-object="text" 
data-key="1460"><span data-slate-leaf="true" data-offset-key="1460:0" data-first-offset="true"><span 
data-slate-string="true">[ OK ] test_is_prime.test1 (1 ms)</span></span></span> </div> <div 
class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" data-key="1461"> 
<span data-slate-object="text" data-key="1462"><span data-slate-leaf="true" data-offset-key="1462:0" 
data-first-offset="true"><span data-slate-string="true">[ RUN ] test_is_prime.test2</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="1463"> <span data-slate-object="text" data-key="1464"><span data-slate-leaf="true" 
data-offset-key="1464:0" data-first-offset="true"><span data-slate-string="true">gtest_test.cpp:25: 
Failure</span></span></span> </div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" 
data-slate-object="block" data-key="1465"> <span data-slate-object="text" data-key="1466"><span 
data-slate-leaf="true" data-offset-key="1466:0" data-first-offset="true"><span data-slate-string="true">Expected 
equality of these </span></span><span data-slate-leaf="true" data-offset-key="1466:1"><span 
class=" gkhl-keyword" data-slate-object="annotation" data-annotation-key="gkann_3716685991" 
data-annotation-type="annotation"><span data-slate-string="true">values</span></span></span><span 
data-slate-leaf="true" data-offset-key="1466:2"><span data-slate-string="true">:</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="1467"> <span data-slate-object="text" data-key="1468"><span data-slate-leaf="true" 
data-offset-key="1468:0" data-first-offset="true"><span data-slate-string="true"> is_prime(</span></span><span 
data-slate-leaf="true" data-offset-key="1468:1"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_5011629847" data-annotation-type="annotation"><span data-slate-string="true">4</span></span></span><span 
data-slate-leaf="true" data-offset-key="1468:2"><span data-slate-string="true">)</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="1469"> <span data-slate-object="text" data-key="1470"><span data-slate-leaf="true" 
data-offset-key="1470:0" data-first-offset="true"><span data-slate-string="true"> Which </span></span><span 
data-slate-leaf="true" data-offset-key="1470:1"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_6354135874" data-annotation-type="annotation"><span data-slate-string="true">is</span></span></span><span 
data-slate-leaf="true" data-offset-key="1470:2"><span data-slate-string="true">: </span></span><span 
data-slate-leaf="true" data-offset-key="1470:3"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_6422241323" data-annotation-type="annotation"><span data-slate-string="true">1</span></span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="1471"> <span data-slate-object="text" data-key="1472"><span data-slate-leaf="true" 
data-offset-key="1472:0" data-first-offset="true"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="1472:1"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_8426933194" data-annotation-type="annotation"><span data-slate-string="true">0</span></span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="1473"> <span data-slate-object="text" data-key="1474"><span data-slate-leaf="true" 
data-offset-key="1474:0" data-first-offset="true"><span data-slate-string="true">gtest_test.cpp:</span></span><span 
data-slate-leaf="true" data-offset-key="1474:1"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_5329367478" data-annotation-type="annotation"><span data-slate-string="true">26</span></span></span><span 
data-slate-leaf="true" data-offset-key="1474:2"><span data-slate-string="true">: </span></span><span 
data-slate-leaf="true" data-offset-key="1474:3"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_8504450540" data-annotation-type="annotation"><span data-slate-string="true">Failure</span></span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="1475"> <span data-slate-object="text" data-key="1476"><span data-slate-leaf="true" 
data-offset-key="1476:0" data-first-offset="true"><span data-slate-string="true">Expected equality 
</span></span><span data-slate-leaf="true" data-offset-key="1476:1"><span class=" gkhl-keyword" 
data-slate-object="annotation" data-annotation-key="gkann_3006699111" data-annotation-type="annotation"><span 
data-slate-string="true">of</span></span></span><span data-slate-leaf="true" data-offset-key="1476:2"><span 
data-slate-string="true"> these </span></span><span data-slate-leaf="true" data-offset-key="1476:3"><span 
class=" gkhl-keyword" data-slate-object="annotation" data-annotation-key="gkann_7311579714" 
data-annotation-type="annotation"><span data-slate-string="true">values</span></span></span><span 
data-slate-leaf="true" data-offset-key="1476:4"><span data-slate-string="true">:</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="1477"> <span data-slate-object="text" data-key="1478"><span data-slate-leaf="true" 
data-offset-key="1478:0" data-first-offset="true"><span data-slate-string="true"> is_prime(</span></span><span 
data-slate-leaf="true" data-offset-key="1478:1"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_0614013514" data-annotation-type="annotation"><span data-slate-string="true">0</span></span></span><span 
data-slate-leaf="true" data-offset-key="1478:2"><span data-slate-string="true">)</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="1479"> <span data-slate-object="text" data-key="1480"><span data-slate-leaf="true" 
data-offset-key="1480:0" data-first-offset="true"><span data-slate-string="true"> Which </span></span><span 
data-slate-leaf="true" data-offset-key="1480:1"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_2251227890" data-annotation-type="annotation"><span data-slate-string="true">is</span></span></span><span 
data-slate-leaf="true" data-offset-key="1480:2"><span data-slate-string="true">: </span></span><span 
data-slate-leaf="true" data-offset-key="1480:3"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_8411113848" data-annotation-type="annotation"><span data-slate-string="true">1</span></span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="1481"> <span data-slate-object="text" data-key="1482"><span data-slate-leaf="true" 
data-offset-key="1482:0" data-first-offset="true"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="1482:1"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_2064589921" data-annotation-type="annotation"><span data-slate-string="true">0</span></span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="1483"> <span data-slate-object="text" data-key="1484"><span data-slate-leaf="true" 
data-offset-key="1484:0" data-first-offset="true"><span data-slate-string="true">gtest_test.cpp:</span></span><span 
data-slate-leaf="true" data-offset-key="1484:1"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_5526862365" data-annotation-type="annotation"><span data-slate-string="true">27</span></span></span><span 
data-slate-leaf="true" data-offset-key="1484:2"><span data-slate-string="true">: </span></span><span 
data-slate-leaf="true" data-offset-key="1484:3"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_8150249103" data-annotation-type="annotation"><span data-slate-string="true">Failure</span></span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="1485"> <span data-slate-object="text" data-key="1486"><span data-slate-leaf="true" 
data-offset-key="1486:0" data-first-offset="true"><span data-slate-string="true">Expected equality 
</span></span><span data-slate-leaf="true" data-offset-key="1486:1"><span class=" gkhl-keyword" 
data-slate-object="annotation" data-annotation-key="gkann_8827489796" data-annotation-type="annotation"><span 
data-slate-string="true">of</span></span></span><span data-slate-leaf="true" data-offset-key="1486:2"><span 
data-slate-string="true"> these </span></span><span data-slate-leaf="true" data-offset-key="1486:3"><span 
class=" gkhl-keyword" data-slate-object="annotation" data-annotation-key="gkann_5064294991" 
data-annotation-type="annotation"><span data-slate-string="true">values</span></span></span><span 
data-slate-leaf="true" data-offset-key="1486:4"><span data-slate-string="true">:</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="1487"> <span data-slate-object="text" data-key="1488"><span data-slate-leaf="true" 
data-offset-key="1488:0" data-first-offset="true"><span data-slate-string="true"> is_prime(</span></span><span 
data-slate-leaf="true" data-offset-key="1488:1"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_2642096687" data-annotation-type="annotation"><span data-slate-string="true">1</span></span></span><span 
data-slate-leaf="true" data-offset-key="1488:2"><span data-slate-string="true">)</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="1489"> <span data-slate-object="text" data-key="1490"><span data-slate-leaf="true" 
data-offset-key="1490:0" data-first-offset="true"><span data-slate-string="true"> Which </span></span><span 
data-slate-leaf="true" data-offset-key="1490:1"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_7539838540" data-annotation-type="annotation"><span data-slate-string="true">is</span></span></span><span 
data-slate-leaf="true" data-offset-key="1490:2"><span data-slate-string="true">: </span></span><span 
data-slate-leaf="true" data-offset-key="1490:3"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_8912842404" data-annotation-type="annotation"><span data-slate-string="true">1</span></span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="1491"> <span data-slate-object="text" data-key="1492"><span data-slate-leaf="true" 
data-offset-key="1492:0" data-first-offset="true"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="1492:1"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_7933607802" data-annotation-type="annotation"><span data-slate-string="true">0</span></span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="1493"> <span data-slate-object="text" data-key="1494"><span data-slate-leaf="true" 
data-offset-key="1494:0" data-first-offset="true"><span data-slate-string="true">[ </span></span><span 
data-slate-leaf="true" data-offset-key="1494:1"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_6378364210" data-annotation-type="annotation"><span data-slate-string="true">FAILED</span></span></span><span 
data-slate-leaf="true" data-offset-key="1494:2"><span data-slate-string="true"> ] test_is_prime.test2 
(</span></span><span data-slate-leaf="true" data-offset-key="1494:3"><span class=" gkhl-number" 
data-slate-object="annotation" data-annotation-key="gkann_0839318341" data-annotation-type="annotation"><span 
data-slate-string="true">0</span></span></span><span data-slate-leaf="true" data-offset-key="1494:4"><span 
data-slate-string="true"> ms)</span></span></span> </div> <div class="ps__rail-x" style="left: 
0px; bottom: 0px;"> <div class="ps__thumb-x" tabindex="0" style="left: 0px; width: 0px;"></div> 
</div> <div class="ps__rail-y" style="top: 0px; right: 0px;"> <div class="ps__thumb-y" tabindex="0" 
style="top: 0px; height: 0px;"></div> </div> </div> </div> <div class="se-36e70a3f " data-slate-type="paragraph" 
data-slate-object="block" data-key="1495"> <span data-slate-object="text" data-key="1496"><span 
data-slate-leaf="true" data-offset-key="1496:0" data-first-offset="true"><span data-slate-string="true">如上所示，第一个单元测试 
test_is_prime.test1 运行结果正确，所用时间是 1ms；第二个单元测试 test_is_prime.test2 中，有三个判等 EXPECT 断言的结果是错误的，也就是 
is_prime 函数的返回值，和测试用例中期望的返回值不符，这说明 is_prime 函数存在 Bug。</span></span></span> </div> <div class="se-8c25e729 
" data-slate-type="paragraph" data-slate-object="block" data-key="1497"> <span data-slate-object="text" 
data-key="1498"><span data-slate-leaf="true" data-offset-key="1498:0" data-first-offset="true"><span 
data-slate-string="true">第三部分，就是这套单元测试的总结信息，以及整个程序单元测试结果的汇总信息。这段信息，有兴趣的小伙伴可以自己理解着看一下，由于不是咱们今天课程的重点，就不展开介绍了。</span></span></span> 
</div> <div class="se-b426fcdf se-2a821723" data-slate-type="pre" data-slate-object="block" 
data-key="1499" data-code-language="javascript"> <div class="se-a87d2166 se-6d6f0b60"> <span></span> 
</div> <div class="se-8e0a009a"> <div class="se-b9b2722a se-edce0ab4" data-code-line-number="1"></div> 
<div class="se-b9b2722a se-edce0ab4" data-code-line-number="2"></div> <div class="se-b9b2722a 
se-edce0ab4" data-code-line-number="3"></div> <div class="se-b9b2722a se-edce0ab4" data-code-line-number="4"></div> 
<div class="se-b9b2722a se-edce0ab4" data-code-line-number="5"></div> <div class="se-b9b2722a 
se-edce0ab4" data-code-line-number="6"></div> <div class="se-b9b2722a se-edce0ab4" data-code-line-number="7"></div> 
<div class="se-b9b2722a se-edce0ab4" data-code-line-number="8"></div> <div class="se-b9b2722a 
se-edce0ab4" data-code-line-number="9"></div> </div> <div class="se-900411b0 ps ps--active-x"> 
<div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="1500"> <span data-slate-object="text" data-key="1501"><span data-slate-leaf="true" 
data-offset-key="1501:0" data-first-offset="true"><span data-slate-string="true">[----------] 
</span></span><span data-slate-leaf="true" data-offset-key="1501:1"><span class=" gkhl-number" 
data-slate-object="annotation" data-annotation-key="gkann_1649765813" data-annotation-type="annotation"><span 
data-slate-string="true">2</span></span></span><span data-slate-leaf="true" data-offset-key="1501:2"><span 
data-slate-string="true"> tests </span></span><span data-slate-leaf="true" data-offset-key="1501:3"><span 
class=" gkhl-keyword" data-slate-object="annotation" data-annotation-key="gkann_5127311605" 
data-annotation-type="annotation"><span data-slate-string="true">from</span></span></span><span 
data-slate-leaf="true" data-offset-key="1501:4"><span data-slate-string="true"> test_is_prime 
(</span></span><span data-slate-leaf="true" data-offset-key="1501:5"><span class=" gkhl-number" 
data-slate-object="annotation" data-annotation-key="gkann_0866995184" data-annotation-type="annotation"><span 
data-slate-string="true">1</span></span></span><span data-slate-leaf="true" data-offset-key="1501:6"><span 
data-slate-string="true"> ms total)</span></span></span> </div> <div class="se-0a5bf258 se-466ac03c" 
data-slate-type="code-line" data-slate-object="block" data-key="1502"> <span data-slate-object="text" 
data-key="1503"></span> </div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" 
data-slate-object="block" data-key="1504"> <span data-slate-object="text" data-key="1505"><span 
data-slate-leaf="true" data-offset-key="1505:0" data-first-offset="true"><span data-slate-string="true">[----------] 
Global test environment tear-down</span></span></span> </div> <div class="se-0a5bf258 se-466ac03c" 
data-slate-type="code-line" data-slate-object="block" data-key="1506"> <span data-slate-object="text" 
data-key="1507"><span data-slate-leaf="true" data-offset-key="1507:0" data-first-offset="true"><span 
data-slate-string="true">[==========] </span></span><span data-slate-leaf="true" data-offset-key="1507:1"><span 
class=" gkhl-number" data-slate-object="annotation" data-annotation-key="gkann_7071192160" 
data-annotation-type="annotation"><span data-slate-string="true">2</span></span></span><span 
data-slate-leaf="true" data-offset-key="1507:2"><span data-slate-string="true"> tests </span></span><span 
data-slate-leaf="true" data-offset-key="1507:3"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_8545313790" data-annotation-type="annotation"><span data-slate-string="true">from</span></span></span><span 
data-slate-leaf="true" data-offset-key="1507:4"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="1507:5"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_7689377814" data-annotation-type="annotation"><span data-slate-string="true">1</span></span></span><span 
data-slate-leaf="true" data-offset-key="1507:6"><span data-slate-string="true"> test suite 
ran. (</span></span><span data-slate-leaf="true" data-offset-key="1507:7"><span class=" gkhl-number" 
data-slate-object="annotation" data-annotation-key="gkann_9491298252" data-annotation-type="annotation"><span 
data-slate-string="true">1</span></span></span><span data-slate-leaf="true" data-offset-key="1507:8"><span 
data-slate-string="true"> ms total)</span></span></span> </div> <div class="se-0a5bf258 se-466ac03c" 
data-slate-type="code-line" data-slate-object="block" data-key="1508"> <span data-slate-object="text" 
data-key="1509"><span data-slate-leaf="true" data-offset-key="1509:0" data-first-offset="true"><span 
data-slate-string="true">[ PASSED ] </span></span><span data-slate-leaf="true" data-offset-key="1509:1"><span 
class=" gkhl-number" data-slate-object="annotation" data-annotation-key="gkann_2058653723" 
data-annotation-type="annotation"><span data-slate-string="true">1</span></span></span><span 
data-slate-leaf="true" data-offset-key="1509:2"><span data-slate-string="true"> test.</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="1510"> <span data-slate-object="text" data-key="1511"><span data-slate-leaf="true" 
data-offset-key="1511:0" data-first-offset="true"><span data-slate-string="true">[ FAILED ] 
</span></span><span data-slate-leaf="true" data-offset-key="1511:1"><span class=" gkhl-number" 
data-slate-object="annotation" data-annotation-key="gkann_8839593368" data-annotation-type="annotation"><span 
data-slate-string="true">1</span></span></span><span data-slate-leaf="true" data-offset-key="1511:2"><span 
data-slate-string="true"> test, listed below:</span></span></span> </div> <div class="se-0a5bf258 
se-466ac03c" data-slate-type="code-line" data-slate-object="block" data-key="1512"> <span data-slate-object="text" 
data-key="1513"><span data-slate-leaf="true" data-offset-key="1513:0" data-first-offset="true"><span 
data-slate-string="true">[ FAILED ] test_is_prime.test2</span></span></span> </div> <div class="se-0a5bf258 
se-466ac03c" data-slate-type="code-line" data-slate-object="block" data-key="1514"> <span data-slate-object="text" 
data-key="1515"></span> </div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" 
data-slate-object="block" data-key="1516"> <span data-slate-object="text" data-key="1517"><span 
data-slate-leaf="true" data-offset-key="1517:0" data-first-offset="true"><span data-slate-string="true"> 
</span></span><span data-slate-leaf="true" data-offset-key="1517:1"><span class=" gkhl-number" 
data-slate-object="annotation" data-annotation-key="gkann_2785647633" data-annotation-type="annotation"><span 
data-slate-string="true">1</span></span></span><span data-slate-leaf="true" data-offset-key="1517:2"><span 
data-slate-string="true"> FAILED</span></span></span> </div> <div class="ps__rail-x" style="width: 
365px; left: 0px; bottom: 0px;"> <div class="ps__thumb-x" tabindex="0" style="left: 0px; width: 
304px;"></div> </div> <div class="ps__rail-y" style="top: 0px; right: 0px;"> <div class="ps__thumb-y" 
tabindex="0" style="top: 0px; height: 0px;"></div> </div> </div> </div> <div class="se-384d32d8 
" data-slate-type="paragraph" data-slate-object="block" data-key="1518"> <span data-slate-object="text" 
data-key="1519"><span data-slate-leaf="true" data-offset-key="1519:0" data-first-offset="true"><span 
data-slate-string="true">好了，关于 gtest 的输出内容，我大致说清楚了。</span></span></span> </div> <div class="se-7081fdaf 
" data-slate-type="paragraph" data-slate-object="block" data-key="1520"> <span data-slate-object="text" 
data-key="1521"><span data-slate-leaf="true" data-offset-key="1521:0" data-first-offset="true"><span 
data-slate-string="true">今天呢，我们先忽略 gtest 输出内容的第一部分和第三部分，主要关注 gtest 输出内容的第二部分，也就是每个单元测试运行信息的输出部分。通过第二部分的输出内容，你能想出我们应该从哪些方面来完善测试框架？</span></span></span> 
</div> <div class="se-95660ffe " data-slate-type="paragraph" data-slate-object="block" data-key="1522"> 
<span data-slate-object="text" data-key="1523"><span data-slate-leaf="true" data-offset-key="1523:0" 
data-first-offset="true"><span data-slate-string="true">这里呢，我给出我的想法：通过观察第二部分的输出，我们基本要从三个方面完善测试框架的输出信息。</span></span></span> 
</div> <div class="se-be2ea379" data-slate-type="list" data-slate-object="block" data-key="1524"> 
<div class="se-a84559e0" data-slate-type="list-line" data-slate-object="block" data-key="1525"> 
<div class="se-7adf4452 se-98d0b459" data-code-line-number="1"></div> <div class="se-bbcfb420"> 
<span data-slate-object="text" data-key="1526"><span data-slate-leaf="true" data-offset-key="1526:0" 
data-first-offset="true"><span data-slate-string="true">在每个测试用例运行之前，要先行输出相关测试用例的名字；</span></span></span> 
</div> </div> <div class="se-cb0f7cec" data-slate-type="list-line" data-slate-object="block" 
data-key="1527"> <div class="se-026a0810 se-8d48f342" data-code-line-number="2"></div> <div 
class="se-82e04409"> <span data-slate-object="text" data-key="1528"><span data-slate-leaf="true" 
data-offset-key="1528:0" data-first-offset="true"><span data-slate-string="true">每个测试用例运行结束以后，要输出测试用例的运行时间与运行结果（OK 
或者 FAILED）；</span></span></span> </div> </div> <div class="se-65dbe0cc" data-slate-type="list-line" 
data-slate-object="block" data-key="1529"> <div class="se-51b2fce5 se-9b24d4d9" data-code-line-number="3"></div> 
<div class="se-310a8701"> <span data-slate-object="text" data-key="1530"><span data-slate-leaf="true" 
data-offset-key="1530:0" data-first-offset="true"><span data-slate-string="true">若测试用例中的 EXPECT 
断言出错，需要输出错误提示信息。</span></span></span> </div> </div> </div> <div class="se-ba551423 " data-slate-type="paragraph" 
data-slate-object="block" data-key="1531"> <span data-slate-object="text" data-key="1532"><span 
data-slate-leaf="true" data-offset-key="1532:0" data-first-offset="true"><span data-slate-string="true">好了，优化的方向找到了，那么接下来，我们就开始测试框架改装行动吧！</span></span></span> 
</div> <h2 class="se-306af1ad" data-slate-type="heading" data-slate-object="block" data-key="1533"><span 
data-slate-object="text" data-key="1534"><span data-slate-leaf="true" data-offset-key="1534:0" 
data-first-offset="true"><span data-slate-string="true">测试用例的名字输出</span></span></span></h2> 
<div class="se-ae75539e " data-slate-type="paragraph" data-slate-object="block" data-key="1535"> 
<span data-slate-object="text" data-key="1536"><span data-slate-leaf="true" data-offset-key="1536:0" 
data-first-offset="true"><span data-slate-string="true">首先是如何输出测试用例的名字。我们先回忆一下上节课设计的注册函数，如下所示：</span></span></span> 
</div> <div class="se-7bf4e0f5 se-a6f0b707" data-slate-type="pre" data-slate-object="block" 
data-key="1537" data-code-language="objectivec"> <div class="se-784dc0f3 se-63f70169"> <span></span> 
</div> <div class="se-86258d7b"> <div class="se-6d281120 se-88a18ae1" data-code-line-number="1"></div> 
<div class="se-6d281120 se-88a18ae1" data-code-line-number="2"></div> <div class="se-6d281120 
se-88a18ae1" data-code-line-number="3"></div> <div class="se-6d281120 se-88a18ae1" data-code-line-number="4"></div> 
<div class="se-6d281120 se-88a18ae1" data-code-line-number="5"></div> <div class="se-6d281120 
se-88a18ae1" data-code-line-number="6"></div> <div class="se-6d281120 se-88a18ae1" data-code-line-number="7"></div> 
<div class="se-6d281120 se-88a18ae1" data-code-line-number="8"></div> </div> <div class="se-9a62f35b 
ps ps--active-x"> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="1538"> <span data-slate-object="text" data-key="1539"><span data-slate-leaf="true" 
data-offset-key="1539:0" data-first-offset="true"><span class=" gkhl-meta" data-slate-object="annotation" 
data-annotation-key="gkann_5673495856" data-annotation-type="annotation"><span data-slate-string="true">#define 
TEST(test_name, func_name) \</span></span></span></span> </div> <div class="se-0a5bf258 se-466ac03c" 
data-slate-type="code-line" data-slate-object="block" data-key="1540"> <span data-slate-object="text" 
data-key="1541"><span data-slate-leaf="true" data-offset-key="1541:0" data-first-offset="true"><span 
class=" gkhl-keyword" data-slate-object="annotation" data-annotation-key="gkann_4912967907" 
data-annotation-type="annotation"><span data-slate-string="true">void</span></span></span><span 
data-slate-leaf="true" data-offset-key="1541:1"><span data-slate-string="true"> test_name</span></span><span 
data-slate-leaf="true" data-offset-key="1541:2"><span class=" gkhl-meta" data-slate-object="annotation" 
data-annotation-key="gkann_2343029591" data-annotation-type="annotation"><span data-slate-string="true">##_##func_name(); 
\</span></span></span></span> </div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" 
data-slate-object="block" data-key="1542"> <span data-slate-object="text" data-key="1543"><span 
data-slate-leaf="true" data-offset-key="1543:0" data-first-offset="true"><span data-slate-string="true">__attribute__((constructor)) 
\</span></span></span> </div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" 
data-slate-object="block" data-key="1544"> <span data-slate-object="text" data-key="1545"><span 
data-slate-leaf="true" data-offset-key="1545:0" data-first-offset="true"><span class=" gkhl-keyword" 
data-slate-object="annotation" data-annotation-key="gkann_2495551694" data-annotation-type="annotation"><span 
data-slate-string="true">void</span></span></span><span data-slate-leaf="true" data-offset-key="1545:1"><span 
data-slate-string="true"> register_</span></span><span data-slate-leaf="true" data-offset-key="1545:2"><span 
class=" gkhl-meta" data-slate-object="annotation" data-annotation-key="gkann_2948091276" data-annotation-type="annotation"><span 
data-slate-string="true">##test_name##_##func_name() { \</span></span></span></span> </div> 
<div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="1546"> <span data-slate-object="text" data-key="1547"><span data-slate-leaf="true" 
data-offset-key="1547:0" data-first-offset="true"><span data-slate-string="true"> test_function_arr[test_function_cnt] 
= test_name</span></span><span data-slate-leaf="true" data-offset-key="1547:1"><span class=" 
gkhl-meta" data-slate-object="annotation" data-annotation-key="gkann_3453024140" data-annotation-type="annotation"><span 
data-slate-string="true">##_##func_name; \</span></span></span></span> </div> <div class="se-0a5bf258 
se-466ac03c" data-slate-type="code-line" data-slate-object="block" data-key="1548"> <span data-slate-object="text" 
data-key="1549"><span data-slate-leaf="true" data-offset-key="1549:0" data-first-offset="true"><span 
data-slate-string="true"> test_function_cnt++; \</span></span></span> </div> <div class="se-0a5bf258 
se-466ac03c" data-slate-type="code-line" data-slate-object="block" data-key="1550"> <span data-slate-object="text" 
data-key="1551"><span data-slate-leaf="true" data-offset-key="1551:0" data-first-offset="true"><span 
data-slate-string="true">} \</span></span></span> </div> <div class="se-0a5bf258 se-466ac03c" 
data-slate-type="code-line" data-slate-object="block" data-key="1552"> <span data-slate-object="text" 
data-key="1553"><span data-slate-leaf="true" data-offset-key="1553:0" data-first-offset="true"><span 
class=" gkhl-keyword" data-slate-object="annotation" data-annotation-key="gkann_2607519763" 
data-annotation-type="annotation"><span data-slate-string="true">void</span></span></span><span 
data-slate-leaf="true" data-offset-key="1553:1"><span data-slate-string="true"> test_name</span></span><span 
data-slate-leaf="true" data-offset-key="1553:2"><span class=" gkhl-meta" data-slate-object="annotation" 
data-annotation-key="gkann_3317170820" data-annotation-type="annotation"><span data-slate-string="true">##_##func_name()</span></span></span></span> 
</div> <div class="ps__rail-x" style="width: 365px; left: 0px; bottom: 0px;"> <div class="ps__thumb-x" 
tabindex="0" style="left: 0px; width: 247px;"></div> </div> <div class="ps__rail-y" style="top: 
0px; right: 0px;"> <div class="ps__thumb-y" tabindex="0" style="top: 0px; height: 0px;"></div> 
</div> </div> </div> <div class="se-b997d2f8 " data-slate-type="paragraph" data-slate-object="block" 
data-key="1554"> <span data-slate-object="text" data-key="1555"><span data-slate-leaf="true" 
data-offset-key="1555:0" data-first-offset="true"><span data-slate-string="true">注册函数是随着 TEST 
展开的，从展开的代码逻辑中可以看到，它只是将测试用例的函数地址记录在了函数指针数组中。要想 RUN_ALL_TESTS 函数后续能够输出测试用例的函数名称的话，我们只需要修改注册函数的功能逻辑即可，也就是让注册函数在记录函数信息的时候，增加记录对应测试用例的名称。</span></span></span> 
</div> <div class="se-494261e2 " data-slate-type="paragraph" data-slate-object="block" data-key="1556"> 
<span data-slate-object="text" data-key="1557"><span data-slate-leaf="true" data-offset-key="1557:0" 
data-first-offset="true"><span data-slate-string="true">而这个名称信息，应该记录在哪里呢？有两种代码实现方式：</span></span></span> 
</div> <div class="se-5f0650da" data-slate-type="list" data-slate-object="block" data-key="1558"> 
<div class="se-c58d43cf" data-slate-type="list-line" data-slate-object="block" data-key="1559"> 
<div class="se-2afa5ce8 se-f6d762d7" data-code-line-number="1"></div> <div class="se-711a9799"> 
<span data-slate-object="text" data-key="1560"><span data-slate-leaf="true" data-offset-key="1560:0" 
data-first-offset="true"><span data-slate-string="true">另外开辟一个记录测试用例名称的字符串数组；</span></span></span> 
</div> </div> <div class="se-d018798f" data-slate-type="list-line" data-slate-object="block" 
data-key="1561"> <div class="se-b1e4fbe8 se-19e00daf" data-code-line-number="2"></div> <div 
class="se-faf6ef5b"> <span data-slate-object="text" data-key="1562"><span data-slate-leaf="true" 
data-offset-key="1562:0" data-first-offset="true"><span data-slate-string="true">修改 test_function_arr 
数组中的元素类型，将新增的测试用例名称以及函数地址信息打包成一个数据元素。</span></span></span> </div> </div> </div> <div class="se-868c11e5 
" data-slate-type="paragraph" data-slate-object="block" data-key="1563"> <span data-slate-object="text" 
data-key="1564"><span data-slate-leaf="true" data-offset-key="1564:0" data-first-offset="true"><span 
data-slate-string="true">显然，相较于第一种实现方式，第二种代码实现方式会使程序具有更好的封装特性。我们采用之前在“语言基础篇“中学习的结构体相关知识，就可以完成这种多种数据类型打包成一种新的数据类型的功能需求。</span></span></span> 
</div> <div class="se-197f6f5d " data-slate-type="paragraph" data-slate-object="block" data-key="1565"> 
<span data-slate-object="text" data-key="1566"><span data-slate-leaf="true" data-offset-key="1566:0" 
data-first-offset="true"><span data-slate-string="true">下面就是我们将函数指针信息和测试用例名称信息，封装成的一个新的结构体类型：</span></span></span> 
</div> <div class="se-b1614633 se-0dead9e3" data-slate-type="pre" data-slate-object="block" 
data-key="1567" data-code-language="cpp"> <div class="se-d0272853 se-dacfc91c"> <span></span> 
</div> <div class="se-74c92c1a"> <div class="se-070eb407 se-dc2dde98" data-code-line-number="1"></div> 
<div class="se-070eb407 se-dc2dde98" data-code-line-number="2"></div> <div class="se-070eb407 
se-dc2dde98" data-code-line-number="3"></div> <div class="se-070eb407 se-dc2dde98" data-code-line-number="4"></div> 
<div class="se-070eb407 se-dc2dde98" data-code-line-number="5"></div> </div> <div class="se-c4f87d7d 
ps ps--active-x"> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="1568"> <span data-slate-object="text" data-key="1569"><span data-slate-leaf="true" 
data-offset-key="1569:0" data-first-offset="true"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_7016206663" data-annotation-type="annotation"><span class=" gkhl-class" 
data-slate-object="annotation" data-annotation-key="gkann_5706951034" data-annotation-type="annotation"><span 
data-slate-string="true">struct</span></span></span></span><span data-slate-leaf="true" data-offset-key="1569:1"><span 
class=" gkhl-class" data-slate-object="annotation" data-annotation-key="gkann_5706951034" data-annotation-type="annotation"><span 
data-slate-string="true"> </span></span></span><span data-slate-leaf="true" data-offset-key="1569:2"><span 
class=" gkhl-title" data-slate-object="annotation" data-annotation-key="gkann_8925481188" data-annotation-type="annotation"><span 
class=" gkhl-class" data-slate-object="annotation" data-annotation-key="gkann_5706951034" data-annotation-type="annotation"><span 
data-slate-string="true">test_function_info_t</span></span></span></span><span data-slate-leaf="true" 
data-offset-key="1569:3"><span class=" gkhl-class" data-slate-object="annotation" data-annotation-key="gkann_5706951034" 
data-annotation-type="annotation"><span data-slate-string="true"> {</span></span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="1570"> <span data-slate-object="text" data-key="1571"><span data-slate-leaf="true" 
data-offset-key="1571:0" data-first-offset="true"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="1571:1"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_8561064694" data-annotation-type="annotation"><span data-slate-string="true">test_function_t</span></span></span><span 
data-slate-leaf="true" data-offset-key="1571:2"><span data-slate-string="true"> func; </span></span><span 
data-slate-leaf="true" data-offset-key="1571:3"><span class=" gkhl-comment" data-slate-object="annotation" 
data-annotation-key="gkann_6669686480" data-annotation-type="annotation"><span data-slate-string="true">// 
测试用例函数指针，指向测试用例函数</span></span></span></span> </div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" 
data-slate-object="block" data-key="1572"> <span data-slate-object="text" data-key="1573"><span 
data-slate-leaf="true" data-offset-key="1573:0" data-first-offset="true"><span data-slate-string="true"> 
</span></span><span data-slate-leaf="true" data-offset-key="1573:1"><span class=" gkhl-keyword" 
data-slate-object="annotation" data-annotation-key="gkann_1267297049" data-annotation-type="annotation"><span 
data-slate-string="true">const</span></span></span><span data-slate-leaf="true" data-offset-key="1573:2"><span 
data-slate-string="true"> </span></span><span data-slate-leaf="true" data-offset-key="1573:3"><span 
class=" gkhl-keyword" data-slate-object="annotation" data-annotation-key="gkann_2164227059" 
data-annotation-type="annotation"><span data-slate-string="true">char</span></span></span><span 
data-slate-leaf="true" data-offset-key="1573:4"><span data-slate-string="true"> *name; </span></span><span 
data-slate-leaf="true" data-offset-key="1573:5"><span class=" gkhl-comment" data-slate-object="annotation" 
data-annotation-key="gkann_2210411942" data-annotation-type="annotation"><span data-slate-string="true">// 
指向测试用例名称</span></span></span></span> </div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" 
data-slate-object="block" data-key="1574"> <span data-slate-object="text" data-key="1575"><span 
data-slate-leaf="true" data-offset-key="1575:0" data-first-offset="true"><span data-slate-string="true">} 
test_function_arr[</span></span><span data-slate-leaf="true" data-offset-key="1575:1"><span 
class=" gkhl-number" data-slate-object="annotation" data-annotation-key="gkann_0691693962" 
data-annotation-type="annotation"><span data-slate-string="true">100</span></span></span><span 
data-slate-leaf="true" data-offset-key="1575:2"><span data-slate-string="true">];</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="1576"> <span data-slate-object="text" data-key="1577"><span data-slate-leaf="true" 
data-offset-key="1577:0" data-first-offset="true"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_7772661381" data-annotation-type="annotation"><span data-slate-string="true">int</span></span></span><span 
data-slate-leaf="true" data-offset-key="1577:1"><span data-slate-string="true"> test_function_cnt 
= </span></span><span data-slate-leaf="true" data-offset-key="1577:2"><span class=" gkhl-number" 
data-slate-object="annotation" data-annotation-key="gkann_5378594061" data-annotation-type="annotation"><span 
data-slate-string="true">0</span></span></span><span data-slate-leaf="true" data-offset-key="1577:3"><span 
data-slate-string="true">;</span></span></span> </div> <div class="ps__rail-x" style="width: 
365px; left: 0px; bottom: 0px;"> <div class="ps__thumb-x" tabindex="0" style="left: 0px; width: 
292px;"></div> </div> <div class="ps__rail-y" style="top: 0px; right: 0px;"> <div class="ps__thumb-y" 
tabindex="0" style="top: 0px; height: 0px;"></div> </div> </div> </div> <div class="se-ff5c993a 
" data-slate-type="paragraph" data-slate-object="block" data-key="1578"> <span data-slate-object="text" 
data-key="1579"><span data-slate-leaf="true" data-offset-key="1579:0" data-first-offset="true"><span 
data-slate-string="true">如代码所示，我们定义了一种新的数据类型，叫做 test_function_info_t。这种结构体类型包含了指向测试用例的函数指针 
func 字段， 与指向测试用例名称的字符串指针 name 字段，并且我们将这种结构体类型，作为 test_function_arr 数组新的元素类型。</span></span></span> 
</div> <div class="se-167d76cc " data-slate-type="paragraph" data-slate-object="block" data-key="1580"> 
<span data-slate-object="text" data-key="1581"><span data-slate-leaf="true" data-offset-key="1581:0" 
data-first-offset="true"><span data-slate-string="true">既然测试用例信息的存储区 test_function_arr 的数据类型发生了改变，那么负责存储信息的注册函数，与使用信息的 
RUN_ALL_TESTS 函数的相关逻辑都需要作出改变。</span></span></span> </div> <div class="se-534643b4 " data-slate-type="paragraph" 
data-slate-object="block" data-key="1582"> <span data-slate-object="text" data-key="1583"><span 
data-slate-leaf="true" data-offset-key="1583:0" data-first-offset="true"><span data-slate-string="true">首先，我们来看注册函数的改变。想要修改注册函数的逻辑，就是修改 
TEST 宏，从功能上来说，注册函数中需要额外记录一个测试用例名称信息，示例代码如下：</span></span></span> </div> <div class="se-91d25cb3 
se-707cd103" data-slate-type="pre" data-slate-object="block" data-key="1584" data-code-language="objectivec"> 
<div class="se-651f4083 se-ecc13b20"> <span></span> </div> <div class="se-080cf8c3"> <div class="se-717176c4 
se-736f777c" data-code-line-number="1"></div> <div class="se-717176c4 se-736f777c" data-code-line-number="2"></div> 
<div class="se-717176c4 se-736f777c" data-code-line-number="3"></div> <div class="se-717176c4 
se-736f777c" data-code-line-number="4"></div> <div class="se-717176c4 se-736f777c" data-code-line-number="5"></div> 
<div class="se-717176c4 se-736f777c" data-code-line-number="6"></div> <div class="se-717176c4 
se-736f777c" data-code-line-number="7"></div> <div class="se-717176c4 se-736f777c" data-code-line-number="8"></div> 
<div class="se-717176c4 se-736f777c" data-code-line-number="9"></div> </div> <div class="se-4e3a4d2e 
ps ps--active-x"> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="1585"> <span data-slate-object="text" data-key="1586"><span data-slate-leaf="true" 
data-offset-key="1586:0" data-first-offset="true"><span class=" gkhl-meta" data-slate-object="annotation" 
data-annotation-key="gkann_4739468505" data-annotation-type="annotation"><span data-slate-string="true">#define 
TEST(test_name, func_name) \</span></span></span></span> </div> <div class="se-0a5bf258 se-466ac03c" 
data-slate-type="code-line" data-slate-object="block" data-key="1587"> <span data-slate-object="text" 
data-key="1588"><span data-slate-leaf="true" data-offset-key="1588:0" data-first-offset="true"><span 
class=" gkhl-keyword" data-slate-object="annotation" data-annotation-key="gkann_5898368832" 
data-annotation-type="annotation"><span data-slate-string="true">void</span></span></span><span 
data-slate-leaf="true" data-offset-key="1588:1"><span data-slate-string="true"> test_name</span></span><span 
data-slate-leaf="true" data-offset-key="1588:2"><span class=" gkhl-meta" data-slate-object="annotation" 
data-annotation-key="gkann_5631018196" data-annotation-type="annotation"><span data-slate-string="true">##_##func_name(); 
\</span></span></span></span> </div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" 
data-slate-object="block" data-key="1589"> <span data-slate-object="text" data-key="1590"><span 
data-slate-leaf="true" data-offset-key="1590:0" data-first-offset="true"><span data-slate-string="true">__attribute__((constructor)) 
\</span></span></span> </div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" 
data-slate-object="block" data-key="1591"> <span data-slate-object="text" data-key="1592"><span 
data-slate-leaf="true" data-offset-key="1592:0" data-first-offset="true"><span class=" gkhl-keyword" 
data-slate-object="annotation" data-annotation-key="gkann_9828257567" data-annotation-type="annotation"><span 
data-slate-string="true">void</span></span></span><span data-slate-leaf="true" data-offset-key="1592:1"><span 
data-slate-string="true"> register_</span></span><span data-slate-leaf="true" data-offset-key="1592:2"><span 
class=" gkhl-meta" data-slate-object="annotation" data-annotation-key="gkann_6467235726" data-annotation-type="annotation"><span 
data-slate-string="true">##test_name##_##func_name() { \</span></span></span></span> </div> 
<div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="1593"> <span data-slate-object="text" data-key="1594"><span data-slate-leaf="true" 
data-offset-key="1594:0" data-first-offset="true"><span data-slate-string="true"> test_function_arr[test_function_cnt].func 
= test_name</span></span><span data-slate-leaf="true" data-offset-key="1594:1"><span class=" 
gkhl-meta" data-slate-object="annotation" data-annotation-key="gkann_1432669953" data-annotation-type="annotation"><span 
data-slate-string="true">##_##func_name; \</span></span></span></span> </div> <div class="se-0a5bf258 
se-466ac03c" data-slate-type="code-line" data-slate-object="block" data-key="1595"> <span data-slate-object="text" 
data-key="1596"><span data-slate-leaf="true" data-offset-key="1596:0" data-first-offset="true"><span 
data-slate-string="true"> test_function_arr[test_function_cnt].name = </span></span><span data-slate-leaf="true" 
data-offset-key="1596:1"><span class=" gkhl-meta" data-slate-object="annotation" data-annotation-key="gkann_1529800489" 
data-annotation-type="annotation"><span data-slate-string="true">#func_name "." #test_name; 
\</span></span></span></span> </div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" 
data-slate-object="block" data-key="1597"> <span data-slate-object="text" data-key="1598"><span 
data-slate-leaf="true" data-offset-key="1598:0" data-first-offset="true"><span data-slate-string="true"> 
test_function_cnt++; \</span></span></span> </div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" 
data-slate-object="block" data-key="1599"> <span data-slate-object="text" data-key="1600"><span 
data-slate-leaf="true" data-offset-key="1600:0" data-first-offset="true"><span data-slate-string="true">} 
\</span></span></span> </div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" 
data-slate-object="block" data-key="1601"> <span data-slate-object="text" data-key="1602"><span 
data-slate-leaf="true" data-offset-key="1602:0" data-first-offset="true"><span class=" gkhl-keyword" 
data-slate-object="annotation" data-annotation-key="gkann_0097039946" data-annotation-type="annotation"><span 
data-slate-string="true">void</span></span></span><span data-slate-leaf="true" data-offset-key="1602:1"><span 
data-slate-string="true"> test_name</span></span><span data-slate-leaf="true" data-offset-key="1602:2"><span 
class=" gkhl-meta" data-slate-object="annotation" data-annotation-key="gkann_2366169213" data-annotation-type="annotation"><span 
data-slate-string="true">##_##func_name()</span></span></span></span> </div> <div class="ps__rail-x" 
style="width: 365px; left: 0px; bottom: 0px;"> <div class="ps__thumb-x" tabindex="0" style="left: 
0px; width: 224px;"></div> </div> <div class="ps__rail-y" style="top: 0px; right: 0px;"> <div 
class="ps__thumb-y" tabindex="0" style="top: 0px; height: 0px;"></div> </div> </div> </div> 
<div class="se-5212e756 " data-slate-type="paragraph" data-slate-object="block" data-key="1603"> 
<span data-slate-object="text" data-key="1604"><span data-slate-leaf="true" data-offset-key="1604:0" 
data-first-offset="true"><span data-slate-string="true">代码中主要是增加了第 6 行的逻辑，这一行的代码将 TEST 宏参数的两部分，拼成一个字符串，中间用点 
(.) 连接，例如 TEST(test1, test_is_prime) 宏调用中，拼凑的字符串就是 test_is_prime.test1，和 gtest 中的输出的测试用例名称信息格式是一致的。</span></span></span> 
</div> <div class="se-41ac7f4f " data-slate-type="paragraph" data-slate-object="block" data-key="1605"> 
<span data-slate-object="text" data-key="1606"><span data-slate-leaf="true" data-offset-key="1606:0" 
data-first-offset="true"><span data-slate-string="true">改完了注册函数的逻辑以后，最后调整一下 RUN_ALL_TESTS 中使用 
test_function_arr 数组的逻辑代码即可：</span></span></span> </div> <div class="se-2eb07825 se-3dd376f3" 
data-slate-type="pre" data-slate-object="block" data-key="1607" data-code-language="cpp"> <div 
class="se-377711a6 se-d2579791"> <span></span> </div> <div class="se-151ee456"> <div class="se-16601a97 
se-ef7c1be5" data-code-line-number="1"></div> <div class="se-16601a97 se-ef7c1be5" data-code-line-number="2"></div> 
<div class="se-16601a97 se-ef7c1be5" data-code-line-number="3"></div> <div class="se-16601a97 
se-ef7c1be5" data-code-line-number="4"></div> <div class="se-16601a97 se-ef7c1be5" data-code-line-number="5"></div> 
<div class="se-16601a97 se-ef7c1be5" data-code-line-number="6"></div> <div class="se-16601a97 
se-ef7c1be5" data-code-line-number="7"></div> <div class="se-16601a97 se-ef7c1be5" data-code-line-number="8"></div> 
</div> <div class="se-30bc209f ps ps--active-x"> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" 
data-slate-object="block" data-key="1608"> <span data-slate-object="text" data-key="1609"><span 
data-slate-leaf="true" data-offset-key="1609:0" data-first-offset="true"><span class=" gkhl-function" 
data-slate-object="annotation" data-annotation-key="gkann_1424212569" data-annotation-type="annotation"><span 
class=" gkhl-keyword" data-slate-object="annotation" data-annotation-key="gkann_5628383062" 
data-annotation-type="annotation"><span data-slate-string="true">int</span></span></span></span><span 
data-slate-leaf="true" data-offset-key="1609:1"><span class=" gkhl-function" data-slate-object="annotation" 
data-annotation-key="gkann_1424212569" data-annotation-type="annotation"><span data-slate-string="true"> 
</span></span></span><span data-slate-leaf="true" data-offset-key="1609:2"><span class=" gkhl-title" 
data-slate-object="annotation" data-annotation-key="gkann_5947838056" data-annotation-type="annotation"><span 
class=" gkhl-function" data-slate-object="annotation" data-annotation-key="gkann_1424212569" 
data-annotation-type="annotation"><span data-slate-string="true">RUN_ALL_TESTS</span></span></span></span><span 
data-slate-leaf="true" data-offset-key="1609:3"><span class=" gkhl-params" data-slate-object="annotation" 
data-annotation-key="gkann_7322494608" data-annotation-type="annotation"><span class=" gkhl-function" 
data-slate-object="annotation" data-annotation-key="gkann_1424212569" data-annotation-type="annotation"><span 
data-slate-string="true">()</span></span></span></span><span data-slate-leaf="true" data-offset-key="1609:4"><span 
class=" gkhl-function" data-slate-object="annotation" data-annotation-key="gkann_1424212569" 
data-annotation-type="annotation"><span data-slate-string="true"> </span></span></span><span 
data-slate-leaf="true" data-offset-key="1609:5"><span data-slate-string="true">{</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="1610"> <span data-slate-object="text" data-key="1611"><span data-slate-leaf="true" 
data-offset-key="1611:0" data-first-offset="true"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="1611:1"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_8680563831" data-annotation-type="annotation"><span data-slate-string="true">for</span></span></span><span 
data-slate-leaf="true" data-offset-key="1611:2"><span data-slate-string="true"> (</span></span><span 
data-slate-leaf="true" data-offset-key="1611:3"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_3540851132" data-annotation-type="annotation"><span data-slate-string="true">int</span></span></span><span 
data-slate-leaf="true" data-offset-key="1611:4"><span data-slate-string="true"> i = </span></span><span 
data-slate-leaf="true" data-offset-key="1611:5"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_3841045921" data-annotation-type="annotation"><span data-slate-string="true">0</span></span></span><span 
data-slate-leaf="true" data-offset-key="1611:6"><span data-slate-string="true">; i &lt; test_function_cnt; 
i++) {</span></span></span> </div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" 
data-slate-object="block" data-key="1612"> <span data-slate-object="text" data-key="1613"><span 
data-slate-leaf="true" data-offset-key="1613:0" data-first-offset="true"><span data-slate-string="true"> 
</span></span><span data-slate-leaf="true" data-offset-key="1613:1"><span class=" gkhl-built_in" 
data-slate-object="annotation" data-annotation-key="gkann_3670580855" data-annotation-type="annotation"><span 
data-slate-string="true">printf</span></span></span><span data-slate-leaf="true" data-offset-key="1613:2"><span 
data-slate-string="true">(</span></span><span data-slate-leaf="true" data-offset-key="1613:3"><span 
class=" gkhl-string" data-slate-object="annotation" data-annotation-key="gkann_9260193185" 
data-annotation-type="annotation"><span data-slate-string="true">"[ RUN ] %s\n"</span></span></span><span 
data-slate-leaf="true" data-offset-key="1613:4"><span data-slate-string="true">, test_function_arr[i].name);</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="1614"> <span data-slate-object="text" data-key="1615"><span data-slate-leaf="true" 
data-offset-key="1615:0" data-first-offset="true"><span data-slate-string="true"> test_function_arr[i].func();</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="1616"> <span data-slate-object="text" data-key="1617"><span data-slate-leaf="true" 
data-offset-key="1617:0" data-first-offset="true"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="1617:1"><span class=" gkhl-built_in" data-slate-object="annotation" 
data-annotation-key="gkann_0368182104" data-annotation-type="annotation"><span data-slate-string="true">printf</span></span></span><span 
data-slate-leaf="true" data-offset-key="1617:2"><span data-slate-string="true">(</span></span><span 
data-slate-leaf="true" data-offset-key="1617:3"><span class=" gkhl-string" data-slate-object="annotation" 
data-annotation-key="gkann_5322942047" data-annotation-type="annotation"><span data-slate-string="true">"RUN 
TEST DONE\n\n"</span></span></span><span data-slate-leaf="true" data-offset-key="1617:4"><span 
data-slate-string="true">);</span></span></span> </div> <div class="se-0a5bf258 se-466ac03c" 
data-slate-type="code-line" data-slate-object="block" data-key="1618"> <span data-slate-object="text" 
data-key="1619"><span data-slate-leaf="true" data-offset-key="1619:0" data-first-offset="true"><span 
data-slate-string="true"> }</span></span></span> </div> <div class="se-0a5bf258 se-466ac03c" 
data-slate-type="code-line" data-slate-object="block" data-key="1620"> <span data-slate-object="text" 
data-key="1621"><span data-slate-leaf="true" data-offset-key="1621:0" data-first-offset="true"><span 
data-slate-string="true"> </span></span><span data-slate-leaf="true" data-offset-key="1621:1"><span 
class=" gkhl-keyword" data-slate-object="annotation" data-annotation-key="gkann_4811701708" 
data-annotation-type="annotation"><span data-slate-string="true">return</span></span></span><span 
data-slate-leaf="true" data-offset-key="1621:2"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="1621:3"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_8414514108" data-annotation-type="annotation"><span data-slate-string="true">0</span></span></span><span 
data-slate-leaf="true" data-offset-key="1621:4"><span data-slate-string="true">;</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="1622"> <span data-slate-object="text" data-key="1623"><span data-slate-leaf="true" 
data-offset-key="1623:0" data-first-offset="true"><span data-slate-string="true">}</span></span></span> 
</div> <div class="ps__rail-x" style="width: 365px; left: 0px; bottom: 0px;"> <div class="ps__thumb-x" 
tabindex="0" style="left: 0px; width: 271px;"></div> </div> <div class="ps__rail-y" style="top: 
0px; right: 0px;"> <div class="ps__thumb-y" tabindex="0" style="top: 0px; height: 0px;"></div> 
</div> </div> </div> <div class="se-465914a9 " data-slate-type="paragraph" data-slate-object="block" 
data-key="1624"> <span data-slate-object="text" data-key="1625"><span data-slate-leaf="true" 
data-offset-key="1625:0" data-first-offset="true"><span data-slate-string="true">代码中的第 3 行，是仿照 
gtest 的输出格式进行调整的，在输出测试用例名称之前，先输出一段包含 RUN 英文的标志信息。</span></span></span> </div> <div class="se-79804b02 
" data-slate-type="paragraph" data-slate-object="block" data-key="1626"> <span data-slate-object="text" 
data-key="1627"><span data-slate-leaf="true" data-offset-key="1627:0" data-first-offset="true"><span 
data-slate-string="true">至此，我们就完成了输出测试用例名字的框架功能改造。</span></span></span> </div> <h2 class="se-085f5175" 
data-slate-type="heading" data-slate-object="block" data-key="1628"><span data-slate-object="text" 
data-key="1629"><span data-slate-leaf="true" data-offset-key="1629:0" data-first-offset="true"><span 
data-slate-string="true">输出测试用例的运行结果信息</span></span></span></h2> <div class="se-eab4cd84 " 
data-slate-type="paragraph" data-slate-object="block" data-key="1630"> <span data-slate-object="text" 
data-key="1631"><span data-slate-leaf="true" data-offset-key="1631:0" data-first-offset="true"><span 
data-slate-string="true">接下来，就让我们进行第二个功能改造：输出测试用例的运行结果信息。</span></span></span> </div> <div 
class="se-f91ee128 " data-slate-type="paragraph" data-slate-object="block" data-key="1632"> 
<span data-slate-object="text" data-key="1633"><span data-slate-leaf="true" data-offset-key="1633:0" 
data-first-offset="true"><span data-slate-string="true">以下是我们示例代码中的 2 个测试用例，在 gtest 框架下的运行结果信息输出：</span></span></span> 
</div> <div class="se-1f3f6c28 se-55f98606" data-slate-type="pre" data-slate-object="block" 
data-key="1634"> <div class="se-42154eb9 se-e1ccd183"> <span></span> </div> <div class="se-0463a389"> 
<div class="se-56f6e307 se-92d1780c" data-code-line-number="1"></div> <div class="se-56f6e307 
se-92d1780c" data-code-line-number="2"></div> </div> <div class="se-51858450 ps"> <div class="se-0a5bf258 
se-466ac03c" data-slate-type="code-line" data-slate-object="block" data-key="1635"> <span data-slate-object="text" 
data-key="1636"><span data-slate-leaf="true" data-offset-key="1636:0" data-first-offset="true"><span 
data-slate-string="true">[ OK ] test_is_prime.test1 (1 ms)</span></span></span> </div> <div 
class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" data-key="1637"> 
<span data-slate-object="text" data-key="1638"><span data-slate-leaf="true" data-offset-key="1638:0" 
data-first-offset="true"><span data-slate-string="true">[ FAILED ] test_is_prime.test2 (0 ms)</span></span></span> 
</div> <div class="ps__rail-x" style="left: 0px; bottom: 0px;"> <div class="ps__thumb-x" tabindex="0" 
style="left: 0px; width: 0px;"></div> </div> <div class="ps__rail-y" style="top: 0px; right: 
0px;"> <div class="ps__thumb-y" tabindex="0" style="top: 0px; height: 0px;"></div> </div> </div> 
</div> <div class="se-16533efc " data-slate-type="paragraph" data-slate-object="block" data-key="1639"> 
<span data-slate-object="text" data-key="1640"><span data-slate-leaf="true" data-offset-key="1640:0" 
data-first-offset="true"><span data-slate-string="true">根据输出的信息，我们可知 gtest 会统计每个测试用例运行的时间，并以毫秒为计量单位，输出此时间信息。不仅如此，gtest 
还会输出与测试用例是否正确相关的信息，如果测试用例运行正确，就会输出一行包含 OK 的标志信息，否则就输出一行包含 FAILED 的标志信息。</span></span></span> 
</div> <div class="se-ceba4a6d " data-slate-type="paragraph" data-slate-object="block" data-key="1641"> 
<span data-slate-object="text" data-key="1642"><span data-slate-leaf="true" data-offset-key="1642:0" 
data-first-offset="true"><span data-slate-string="true">根据我们自己测试框架的设计，这行信息只有可能是在 RUN_ALL_TESTS 
函数的 for 循环中，执行完每一个测试用例函数以后输出的信息。</span></span></span> </div> <div class="se-bfe2788c " data-slate-type="paragraph" 
data-slate-object="block" data-key="1643"> <span data-slate-object="text" data-key="1644"><span 
data-slate-leaf="true" data-offset-key="1644:0" data-first-offset="true"><span data-slate-string="true">由此，我们面临的是两个需要解决的问题：</span></span></span> 
</div> <div class="se-649a860d" data-slate-type="list" data-slate-object="block" data-key="1645"> 
<div class="se-c30061c1" data-slate-type="list-line" data-slate-object="block" data-key="1646"> 
<div class="se-655c6c25 se-6202853f" data-code-line-number="1"></div> <div class="se-2151cd5a"> 
<span data-slate-object="text" data-key="1647"><span data-slate-leaf="true" data-offset-key="1647:0" 
data-first-offset="true"><span data-slate-string="true">如何统计函数过程的运行时间？</span></span></span> 
</div> </div> <div class="se-ab5b1bd4" data-slate-type="list-line" data-slate-object="block" 
data-key="1648"> <div class="se-e0e276d3 se-cd10bc25" data-code-line-number="2"></div> <div 
class="se-64e0c53b"> <span data-slate-object="text" data-key="1649"><span data-slate-leaf="true" 
data-offset-key="1649:0" data-first-offset="true"><span data-slate-string="true">如何确定获得每一个测试用例函数的测试结果是否正确？</span></span></span> 
</div> </div> </div> <div class="se-b3ed8ccf " data-slate-type="paragraph" data-slate-object="block" 
data-key="1650"> <span data-slate-object="text" data-key="1651"><span data-slate-leaf="true" 
data-offset-key="1651:0" data-first-offset="true"><span data-slate-string="true">说到如何统计函数过程的运行时间，我这里就需要介绍两个新的知识点，一个是函数 
clock() ，另 一个是宏 CLOCKS_PER_SEC。下面我会对它们详细讲解。</span></span></span> </div> <div class="se-a008a2e5 
" data-slate-type="paragraph" data-slate-object="block" data-key="1652"> <span data-slate-object="text" 
data-key="1653"><span data-slate-leaf="true" data-offset-key="1653:0" data-first-offset="true"><span 
data-slate-string="true">我们先说函数 clock() 。它的返回值代表了：从运行程序开始，到调用 clock() 函数时，经过的 CPU 时钟计时单元。并且，这个 
clock() 函数的返回值，实际上反映的是我们程序的运行时间。那这个 CPU 时钟计时单元究竟是什么呢？你可以把 1 个 CPU 时钟计时单元，简单的理解成是一个单位时间长度，只不过这个单位时间长度，不是我们常说的 
1 秒钟。</span></span></span> </div> <div class="se-b2ff8137 " data-slate-type="paragraph" data-slate-object="block" 
data-key="1654"> <span data-slate-object="text" data-key="1655"><span data-slate-leaf="true" 
data-offset-key="1655:0" data-first-offset="true"><span data-slate-string="true">接下来，我们再说说宏 
CLOCKS_PER_SEC 。它实际上是一个整型值，代表多少个 CPU 时钟计时单元是 1 秒。这个值在不同环境中会有所不同，在早年我的 Windows 电脑上，这个值是 1000，也就是 
1000 个 CPU 时钟计时单位等于 1 秒。而现在我的 Mac 电脑上，这个值是 1000000，也就是 1000000 个 CPU 时钟计时单位等于 1 秒钟。显然，这个数字越大，统计粒度就越精细。</span></span></span> 
</div> <div class="se-2e5805c9 " data-slate-type="paragraph" data-slate-object="block" data-key="1656"> 
<span data-slate-object="text" data-key="1657"><span data-slate-leaf="true" data-offset-key="1657:0" 
data-first-offset="true"><span data-slate-string="true">有了上面这两个工具，我们就可以轻松地统计一个函数的运行时间。在函数运行之前，记录一个 
clock() 值，函数运行结束以后，再记录一个 clock() 值，用两个记录值的差值除以 CLOCKS_PER_SEC ，得到的就是以秒为单位的函数运行时间，再乘以 1000，即为毫秒单位。</span></span></span> 
</div> <div class="se-681135ee " data-slate-type="paragraph" data-slate-object="block" data-key="1658"> 
<span data-slate-object="text" data-key="1659"><span data-slate-leaf="true" data-offset-key="1659:0" 
data-first-offset="true"><span data-slate-string="true">这样呢，我们就解决了刚刚提的第一个问题：统计函数过程的运行时间。</span></span></span> 
</div> <div class="se-88673268 " data-slate-type="paragraph" data-slate-object="block" data-key="1660"> 
<span data-slate-object="text" data-key="1661"><span data-slate-leaf="true" data-offset-key="1661:0" 
data-first-offset="true"><span data-slate-string="true">至于如何获得每一个测试用例的测试结果，我们可以采用一个简单的解决办法，那就是记录一个全局变量，代表测试用例结果正确与否。当测试用例中的 
EXPECT_EQ 断言发生错误时，就修改这个全局变量的值，这样我们的 RUN_ALL_TESTS 函数，就可以在测试用例函数执行结束以后，得知执行过程是否有错。</span></span></span> 
</div> <div class="se-21700908 " data-slate-type="paragraph" data-slate-object="block" data-key="1662"> 
<span data-slate-object="text" data-key="1663"><span data-slate-leaf="true" data-offset-key="1663:0" 
data-first-offset="true"><span data-slate-string="true">综合以上所有信息，我们可以重新设计 RUN_ALL_TESTS 函数如下：</span></span></span> 
</div> <div class="se-f5a9efda se-6a04f118" data-slate-type="pre" data-slate-object="block" 
data-key="1664" data-code-language="cpp"> <div class="se-c72e5d6f se-79ffabf0"> <span></span> 
</div> <div class="se-ab31d724"> <div class="se-06f88aba se-d7a5bff9" data-code-line-number="1"></div> 
<div class="se-06f88aba se-d7a5bff9" data-code-line-number="2"></div> <div class="se-06f88aba 
se-d7a5bff9" data-code-line-number="3"></div> <div class="se-06f88aba se-d7a5bff9" data-code-line-number="4"></div> 
<div class="se-06f88aba se-d7a5bff9" data-code-line-number="5"></div> <div class="se-06f88aba 
se-d7a5bff9" data-code-line-number="6"></div> <div class="se-06f88aba se-d7a5bff9" data-code-line-number="7"></div> 
<div class="se-06f88aba se-d7a5bff9" data-code-line-number="8"></div> <div class="se-06f88aba 
se-d7a5bff9" data-code-line-number="9"></div> <div class="se-06f88aba se-d7a5bff9" data-code-line-number="10"></div> 
<div class="se-06f88aba se-d7a5bff9" data-code-line-number="11"></div> <div class="se-06f88aba 
se-d7a5bff9" data-code-line-number="12"></div> <div class="se-06f88aba se-d7a5bff9" data-code-line-number="13"></div> 
<div class="se-06f88aba se-d7a5bff9" data-code-line-number="14"></div> <div class="se-06f88aba 
se-d7a5bff9" data-code-line-number="15"></div> <div class="se-06f88aba se-d7a5bff9" data-code-line-number="16"></div> 
<div class="se-06f88aba se-d7a5bff9" data-code-line-number="17"></div> <div class="se-06f88aba 
se-d7a5bff9" data-code-line-number="18"></div> <div class="se-06f88aba se-d7a5bff9" data-code-line-number="19"></div> 
<div class="se-06f88aba se-d7a5bff9" data-code-line-number="20"></div> </div> <div class="se-0958b1a0 
ps ps--active-x"> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="1665"> <span data-slate-object="text" data-key="1666"><span data-slate-leaf="true" 
data-offset-key="1666:0" data-first-offset="true"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_2248493309" data-annotation-type="annotation"><span data-slate-string="true">int</span></span></span><span 
data-slate-leaf="true" data-offset-key="1666:1"><span data-slate-string="true"> test_run_flag;</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="1667"> <span data-slate-object="text" data-key="1668"><span data-slate-leaf="true" 
data-offset-key="1668:0" data-first-offset="true"><span class=" gkhl-meta" data-slate-object="annotation" 
data-annotation-key="gkann_7293172073" data-annotation-type="annotation"><span data-slate-string="true">#define 
EXPECT_EQ(a, b) test_run_flag &amp;= ((a) == (b))</span></span></span></span> </div> <div class="se-0a5bf258 
se-466ac03c" data-slate-type="code-line" data-slate-object="block" data-key="1669"> <span data-slate-object="text" 
data-key="1670"></span> </div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" 
data-slate-object="block" data-key="1671"> <span data-slate-object="text" data-key="1672"><span 
data-slate-leaf="true" data-offset-key="1672:0" data-first-offset="true"><span class=" gkhl-function" 
data-slate-object="annotation" data-annotation-key="gkann_5486438191" data-annotation-type="annotation"><span 
class=" gkhl-keyword" data-slate-object="annotation" data-annotation-key="gkann_2345123791" 
data-annotation-type="annotation"><span data-slate-string="true">int</span></span></span></span><span 
data-slate-leaf="true" data-offset-key="1672:1"><span class=" gkhl-function" data-slate-object="annotation" 
data-annotation-key="gkann_5486438191" data-annotation-type="annotation"><span data-slate-string="true"> 
</span></span></span><span data-slate-leaf="true" data-offset-key="1672:2"><span class=" gkhl-title" 
data-slate-object="annotation" data-annotation-key="gkann_9182989897" data-annotation-type="annotation"><span 
class=" gkhl-function" data-slate-object="annotation" data-annotation-key="gkann_5486438191" 
data-annotation-type="annotation"><span data-slate-string="true">RUN_ALL_TESTS</span></span></span></span><span 
data-slate-leaf="true" data-offset-key="1672:3"><span class=" gkhl-function" data-slate-object="annotation" 
data-annotation-key="gkann_5486438191" data-annotation-type="annotation"><span class=" gkhl-params" 
data-slate-object="annotation" data-annotation-key="gkann_8914453601" data-annotation-type="annotation"><span 
data-slate-string="true">()</span></span></span></span><span data-slate-leaf="true" data-offset-key="1672:4"><span 
class=" gkhl-function" data-slate-object="annotation" data-annotation-key="gkann_5486438191" 
data-annotation-type="annotation"><span data-slate-string="true"> </span></span></span><span 
data-slate-leaf="true" data-offset-key="1672:5"><span data-slate-string="true">{</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="1673"> <span data-slate-object="text" data-key="1674"><span data-slate-leaf="true" 
data-offset-key="1674:0" data-first-offset="true"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="1674:1"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_8311235761" data-annotation-type="annotation"><span data-slate-string="true">for</span></span></span><span 
data-slate-leaf="true" data-offset-key="1674:2"><span data-slate-string="true"> (</span></span><span 
data-slate-leaf="true" data-offset-key="1674:3"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_0372741330" data-annotation-type="annotation"><span data-slate-string="true">int</span></span></span><span 
data-slate-leaf="true" data-offset-key="1674:4"><span data-slate-string="true"> i = </span></span><span 
data-slate-leaf="true" data-offset-key="1674:5"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_9508906892" data-annotation-type="annotation"><span data-slate-string="true">0</span></span></span><span 
data-slate-leaf="true" data-offset-key="1674:6"><span data-slate-string="true">; i &lt; test_function_cnt; 
i++) {</span></span></span> </div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" 
data-slate-object="block" data-key="1675"> <span data-slate-object="text" data-key="1676"><span 
data-slate-leaf="true" data-offset-key="1676:0" data-first-offset="true"><span data-slate-string="true"> 
</span></span><span data-slate-leaf="true" data-offset-key="1676:1"><span class=" gkhl-built_in" 
data-slate-object="annotation" data-annotation-key="gkann_5369429148" data-annotation-type="annotation"><span 
data-slate-string="true">printf</span></span></span><span data-slate-leaf="true" data-offset-key="1676:2"><span 
data-slate-string="true">(</span></span><span data-slate-leaf="true" data-offset-key="1676:3"><span 
class=" gkhl-string" data-slate-object="annotation" data-annotation-key="gkann_1584339811" 
data-annotation-type="annotation"><span data-slate-string="true">"[ RUN ] %s\n"</span></span></span><span 
data-slate-leaf="true" data-offset-key="1676:4"><span data-slate-string="true">, test_function_arr[i].name);</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="1677"> <span data-slate-object="text" data-key="1678"><span data-slate-leaf="true" 
data-offset-key="1678:0" data-first-offset="true"><span data-slate-string="true"> test_run_flag 
= </span></span><span data-slate-leaf="true" data-offset-key="1678:1"><span class=" gkhl-number" 
data-slate-object="annotation" data-annotation-key="gkann_4972970322" data-annotation-type="annotation"><span 
data-slate-string="true">1</span></span></span><span data-slate-leaf="true" data-offset-key="1678:2"><span 
data-slate-string="true">;</span></span></span> </div> <div class="se-0a5bf258 se-466ac03c" 
data-slate-type="code-line" data-slate-object="block" data-key="1679"> <span data-slate-object="text" 
data-key="1680"><span data-slate-leaf="true" data-offset-key="1680:0" data-first-offset="true"><span 
data-slate-string="true"> </span></span><span data-slate-leaf="true" data-offset-key="1680:1"><span 
class=" gkhl-keyword" data-slate-object="annotation" data-annotation-key="gkann_4933571630" 
data-annotation-type="annotation"><span data-slate-string="true">long</span></span></span><span 
data-slate-leaf="true" data-offset-key="1680:2"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="1680:3"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_4940657006" data-annotation-type="annotation"><span data-slate-string="true">long</span></span></span><span 
data-slate-leaf="true" data-offset-key="1680:4"><span data-slate-string="true"> t1 = clock();</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="1681"> <span data-slate-object="text" data-key="1682"><span data-slate-leaf="true" 
data-offset-key="1682:0" data-first-offset="true"><span data-slate-string="true"> test_function_arr[i].func();</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="1683"> <span data-slate-object="text" data-key="1684"><span data-slate-leaf="true" 
data-offset-key="1684:0" data-first-offset="true"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="1684:1"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_0483041920" data-annotation-type="annotation"><span data-slate-string="true">long</span></span></span><span 
data-slate-leaf="true" data-offset-key="1684:2"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="1684:3"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_1728993793" data-annotation-type="annotation"><span data-slate-string="true">long</span></span></span><span 
data-slate-leaf="true" data-offset-key="1684:4"><span data-slate-string="true"> t2 = clock();</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="1685"> <span data-slate-object="text" data-key="1686"><span data-slate-leaf="true" 
data-offset-key="1686:0" data-first-offset="true"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="1686:1"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_8165688128" data-annotation-type="annotation"><span data-slate-string="true">if</span></span></span><span 
data-slate-leaf="true" data-offset-key="1686:2"><span data-slate-string="true"> (test_run_flag) 
{</span></span></span> </div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" 
data-slate-object="block" data-key="1687"> <span data-slate-object="text" data-key="1688"><span 
data-slate-leaf="true" data-offset-key="1688:0" data-first-offset="true"><span data-slate-string="true"> 
</span></span><span data-slate-leaf="true" data-offset-key="1688:1"><span class=" gkhl-built_in" 
data-slate-object="annotation" data-annotation-key="gkann_6194306598" data-annotation-type="annotation"><span 
data-slate-string="true">printf</span></span></span><span data-slate-leaf="true" data-offset-key="1688:2"><span 
data-slate-string="true">(</span></span><span data-slate-leaf="true" data-offset-key="1688:3"><span 
class=" gkhl-string" data-slate-object="annotation" data-annotation-key="gkann_5295775854" 
data-annotation-type="annotation"><span data-slate-string="true">"[ OK ] "</span></span></span><span 
data-slate-leaf="true" data-offset-key="1688:4"><span data-slate-string="true">);</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="1689"> <span data-slate-object="text" data-key="1690"><span data-slate-leaf="true" 
data-offset-key="1690:0" data-first-offset="true"><span data-slate-string="true"> } </span></span><span 
data-slate-leaf="true" data-offset-key="1690:1"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_9279146190" data-annotation-type="annotation"><span data-slate-string="true">else</span></span></span><span 
data-slate-leaf="true" data-offset-key="1690:2"><span data-slate-string="true"> {</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="1691"> <span data-slate-object="text" data-key="1692"><span data-slate-leaf="true" 
data-offset-key="1692:0" data-first-offset="true"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="1692:1"><span class=" gkhl-built_in" data-slate-object="annotation" 
data-annotation-key="gkann_2553031297" data-annotation-type="annotation"><span data-slate-string="true">printf</span></span></span><span 
data-slate-leaf="true" data-offset-key="1692:2"><span data-slate-string="true">(</span></span><span 
data-slate-leaf="true" data-offset-key="1692:3"><span class=" gkhl-string" data-slate-object="annotation" 
data-annotation-key="gkann_9241921211" data-annotation-type="annotation"><span data-slate-string="true">"[ 
FAILED ] "</span></span></span><span data-slate-leaf="true" data-offset-key="1692:4"><span 
data-slate-string="true">);</span></span></span> </div> <div class="se-0a5bf258 se-466ac03c" 
data-slate-type="code-line" data-slate-object="block" data-key="1693"> <span data-slate-object="text" 
data-key="1694"><span data-slate-leaf="true" data-offset-key="1694:0" data-first-offset="true"><span 
data-slate-string="true"> }</span></span></span> </div> <div class="se-0a5bf258 se-466ac03c" 
data-slate-type="code-line" data-slate-object="block" data-key="1695"> <span data-slate-object="text" 
data-key="1696"><span data-slate-leaf="true" data-offset-key="1696:0" data-first-offset="true"><span 
data-slate-string="true"> </span></span><span data-slate-leaf="true" data-offset-key="1696:1"><span 
class=" gkhl-built_in" data-slate-object="annotation" data-annotation-key="gkann_7672791545" 
data-annotation-type="annotation"><span data-slate-string="true">printf</span></span></span><span 
data-slate-leaf="true" data-offset-key="1696:2"><span data-slate-string="true">(</span></span><span 
data-slate-leaf="true" data-offset-key="1696:3"><span class=" gkhl-string" data-slate-object="annotation" 
data-annotation-key="gkann_3559236429" data-annotation-type="annotation"><span data-slate-string="true">"%s"</span></span></span><span 
data-slate-leaf="true" data-offset-key="1696:4"><span data-slate-string="true">, test_function_arr[i].name);</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="1697"> <span data-slate-object="text" data-key="1698"><span data-slate-leaf="true" 
data-offset-key="1698:0" data-first-offset="true"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="1698:1"><span class=" gkhl-built_in" data-slate-object="annotation" 
data-annotation-key="gkann_6125199770" data-annotation-type="annotation"><span data-slate-string="true">printf</span></span></span><span 
data-slate-leaf="true" data-offset-key="1698:2"><span data-slate-string="true">(</span></span><span 
data-slate-leaf="true" data-offset-key="1698:3"><span class=" gkhl-string" data-slate-object="annotation" 
data-annotation-key="gkann_0048528643" data-annotation-type="annotation"><span data-slate-string="true">" 
(%.0lf ms)\n\n"</span></span></span><span data-slate-leaf="true" data-offset-key="1698:4"><span 
data-slate-string="true">, </span></span><span data-slate-leaf="true" data-offset-key="1698:5"><span 
class=" gkhl-number" data-slate-object="annotation" data-annotation-key="gkann_6824755294" 
data-annotation-type="annotation"><span data-slate-string="true">1.0</span></span></span><span 
data-slate-leaf="true" data-offset-key="1698:6"><span data-slate-string="true"> * (t2 - t1) 
/ CLOCKS_PER_SEC * </span></span><span data-slate-leaf="true" data-offset-key="1698:7"><span 
class=" gkhl-number" data-slate-object="annotation" data-annotation-key="gkann_3024198858" 
data-annotation-type="annotation"><span data-slate-string="true">1000</span></span></span><span 
data-slate-leaf="true" data-offset-key="1698:8"><span data-slate-string="true">);</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="1699"> <span data-slate-object="text" data-key="1700"><span data-slate-leaf="true" 
data-offset-key="1700:0" data-first-offset="true"><span data-slate-string="true"> }</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="1701"> <span data-slate-object="text" data-key="1702"><span data-slate-leaf="true" 
data-offset-key="1702:0" data-first-offset="true"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="1702:1"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_4362171085" data-annotation-type="annotation"><span data-slate-string="true">return</span></span></span><span 
data-slate-leaf="true" data-offset-key="1702:2"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="1702:3"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_6852790489" data-annotation-type="annotation"><span data-slate-string="true">0</span></span></span><span 
data-slate-leaf="true" data-offset-key="1702:4"><span data-slate-string="true">;</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="1703"> <span data-slate-object="text" data-key="1704"><span data-slate-leaf="true" 
data-offset-key="1704:0" data-first-offset="true"><span data-slate-string="true">}</span></span></span> 
</div> <div class="ps__rail-x" style="width: 365px; left: 0px; bottom: 0px;"> <div class="ps__thumb-x" 
tabindex="0" style="left: 0px; width: 227px;"></div> </div> <div class="ps__rail-y" style="top: 
0px; right: 0px;"> <div class="ps__thumb-y" tabindex="0" style="top: 0px; height: 0px;"></div> 
</div> </div> </div> <div class="se-192f32bc " data-slate-type="paragraph" data-slate-object="block" 
data-key="1705"> <span data-slate-object="text" data-key="1706"><span data-slate-leaf="true" 
data-offset-key="1706:0" data-first-offset="true"><span data-slate-string="true">代码中的第 8 行是在测试用例运行之前，记录一个开始时间值 
t1；代码中的第 10 行是在测试用例函数执行完后，记录一个结束时间值 t2；在代码的第 17 行，根据 t1 、t2 以及 CLOCKS_PER_SEC 的值，计算得到测试用例函数实际运行的时间，并输出得到的结果。</span></span></span> 
</div> <div class="se-4ccdb3a2 " data-slate-type="paragraph" data-slate-object="block" data-key="1707"> 
<span data-slate-object="text" data-key="1708"><span data-slate-leaf="true" data-offset-key="1708:0" 
data-first-offset="true"><span data-slate-string="true">这段代码中增加了一个全局变量“test_run_flag”，这个变量每次在测试用例执行之前，都会被初始化为 
1，当测试用例结束执行以后，RUN_ALL_TESTS 函数中，根据 test_run_flag 变量的值，选择输出 OK 或者 FAILED 的标志信息。同时，我们可以看到，test_run_flag 
变量的值只有在 EXPECT_EQ 断言中，才可能被修改。</span></span></span> </div> <h2 class="se-07d15044" data-slate-type="heading" 
data-slate-object="block" data-key="1709"><span data-slate-object="text" data-key="1710"><span 
data-slate-leaf="true" data-offset-key="1710:0" data-first-offset="true"><span data-slate-string="true">EXPECT_EQ 
断言的实现</span></span></span></h2> <div class="se-83a02af7 " data-slate-type="paragraph" data-slate-object="block" 
data-key="1711"> <span data-slate-object="text" data-key="1712"><span data-slate-leaf="true" 
data-offset-key="1712:0" data-first-offset="true"><span data-slate-string="true">最后呢，我们还剩下一个 
EXPECT_EQ 断言的实现，这个就给你留作思考题，请你基于我上述所讲的内容，试试自己实现这个带错误提示输出的 EXPECT_EQ 断言吧。也欢迎你把你的答案写在留言区，我们一起讨论。</span></span></span> 
</div> <h2 class="se-ed30a033" data-slate-type="heading" data-slate-object="block" data-key="1713"><span 
data-slate-object="text" data-key="1714"><span data-slate-leaf="true" data-offset-key="1714:0" 
data-first-offset="true"><span data-slate-string="true">课程小结</span></span></span></h2> <div 
class="se-bdfb9a2d " data-slate-type="paragraph" data-slate-object="block" data-key="1715"> 
<span data-slate-object="text" data-key="1716"><span data-slate-leaf="true" data-offset-key="1716:0" 
data-first-offset="true"><span data-slate-string="true">通过今天的课程呢，我希望你认识到</span></span></span><span 
data-slate-object="text" data-key="1717"><span data-slate-leaf="true" data-offset-key="1717:0" 
data-first-offset="true"><span class="se-9d694988" data-slate-type="bold" data-slate-object="mark"><span 
data-slate-string="true">工程开发中的一个基本原则：功能迭代，数据先行。也就是说，无论我们做什么样的功能开发，首先要考虑的是与数据相关的部分。</span></span></span></span><span 
data-slate-object="text" data-key="1718"><span data-slate-leaf="true" data-offset-key="1718:0" 
data-first-offset="true"><span data-slate-string="true">更细致的解释，就是你考虑某种功能的实现，要明白这个功能都依赖于哪些数据信息，这些信息在哪里存储，在哪里修改，在哪里读取使用。把数据相关部分设计明白了，你的功能开发也就基本实现了一半了。</span></span></span> 
</div> <div class="se-f216fbe3 " data-slate-type="paragraph" data-slate-object="block" data-key="1719"> 
<span data-slate-object="text" data-key="1720"><span data-slate-leaf="true" data-offset-key="1720:0" 
data-first-offset="true"><span data-slate-string="true">就像我们今天改造的第一个功能，输出测试用例的名字。</span></span></span> 
</div> <div class="se-ec436e40 " data-slate-type="paragraph" data-slate-object="block" data-key="1721"> 
<span data-slate-object="text" data-key="1722"><span data-slate-leaf="true" data-offset-key="1722:0" 
data-first-offset="true"><span data-slate-string="true">首先，我们考虑如何存储名字信息，最先被修改的就是 test_function_arr 
数组的数据类型，我们改造了数据存储的结构。然后，我们修改了注册函数的相关功能逻辑，也就是解决了数据的写入与修改过程。最后，我们修改 RUN_ALL_TESTS 中的输出逻辑，也就是解决了数据在哪里读取和使用的事情。</span></span></span> 
</div> <div class="se-17896408 " data-slate-type="paragraph" data-slate-object="block" data-key="1723"> 
<span data-slate-object="text" data-key="1724"><span data-slate-leaf="true" data-offset-key="1724:0" 
data-first-offset="true"><span data-slate-string="true">至此，我已经向你演示了基本的功能迭代开发过程。接下来你可以自己试着，给输出的内容加上点儿颜色，以便更清晰地展示测试过程中的测试信息。除此之外呢，你也可以开动你的创造力，给测试框架加些令人惊喜的功能。</span></span></span> 
</div> <div class="se-72232eac " data-slate-type="paragraph" data-slate-object="block" data-key="1725"> 
<span data-slate-object="text" data-key="1726"><span data-slate-leaf="true" data-offset-key="1726:0" 
data-first-offset="true"><span data-slate-string="true">好了，今天就到这里了，我是胡光，我们下节课见。</span></span></span> 
</div> </div>', body_summary='', bundle='book', delta=0, body_format='full_html', langcode='zh-hans', 
revision_id=768 where entity_id=768 
 {executed in 1 msec}
2020-11-24 18:59:33.543 INFO  jdbc.sqltiming Line:373 - update node_revision__body set body_value='<div data-slate-editor="true" data-key="1430" autocorrect="off" 
spellcheck="false" data-gramm="false" style="outline: none; white-space: pre-wrap; overflow-wrap: 
break-word;"> <div class="se-8f7efb8f " data-slate-type="paragraph" data-slate-object="block" 
data-key="1431"> <span data-slate-object="text" data-key="1432"><span data-slate-leaf="true" 
data-offset-key="1432:0" data-first-offset="true"><span data-slate-string="true">你好，我是胡光，欢迎回来。</span></span></span> 
</div> <div class="se-a4ffdfea " data-slate-type="paragraph" data-slate-object="block" data-key="1433"> 
<span data-slate-object="text" data-key="1434"><span data-slate-leaf="true" data-offset-key="1434:0" 
data-first-offset="true"><span data-slate-string="true">在上一节课中呢，我们学习了测试框架的主要功能流程，完成了最重要的 RUN_ALL_TESTS 
函数的功能逻辑。并且在这个学习期间，我们还使用了注册函数的技巧，就是让一些函数先于主函数执行，将测试用例函数信息记录在一个函数指针数组中，为后续的 RUN_ALL_TESTS 函数功能的执行作铺垫。</span></span></span> 
</div> <div class="se-a345ceba " data-slate-type="paragraph" data-slate-object="block" data-key="1435"> 
<span data-slate-object="text" data-key="1436"><span data-slate-leaf="true" data-offset-key="1436:0" 
data-first-offset="true"><span data-slate-string="true">可你有没有发现，我们上节课程所完成的代码，只能让我们的测试框架在整体流程功能上跑通，然而程序的输出内容却不如 
gtest 丰富。</span></span></span> </div> <div class="se-13be8792 " data-slate-type="paragraph" 
data-slate-object="block" data-key="1437"> <span data-slate-object="text" data-key="1438"><span 
data-slate-leaf="true" data-offset-key="1438:0" data-first-offset="true"><span data-slate-string="true">今天，我们的主要任务，就是参考 
gtest 的输出，逐步完善我们自己测试框架的相关信息输出方面的细节，从而让输出内容更加符合我们想要的信息。来，让我们一起开始吧。</span></span></span> </div> 
<h2 class="se-4366eba0" data-slate-type="heading" data-slate-object="block" data-key="1439"><span 
data-slate-object="text" data-key="1440"><span data-slate-leaf="true" data-offset-key="1440:0" 
data-first-offset="true"><span data-slate-string="true">温故知新，gtest 的输出结果</span></span></span></h2> 
<div class="se-0025b934 " data-slate-type="paragraph" data-slate-object="block" data-key="1441"> 
<span data-slate-object="text" data-key="1442"><span data-slate-leaf="true" data-offset-key="1442:0" 
data-first-offset="true"><span data-slate-string="true">我们先来回顾一下 gtest 的输出结果，gtest 的输出内容大体可以分成三个部分。</span></span></span> 
</div> <div class="se-3f8a7300 " data-slate-type="paragraph" data-slate-object="block" data-key="1443"> 
<span data-slate-object="text" data-key="1444"><span data-slate-leaf="true" data-offset-key="1444:0" 
data-first-offset="true"><span data-slate-string="true">第一部分，一套单元测试的相关信息：</span></span></span> 
</div> <div class="se-0f1bbafd se-d2801112" data-slate-type="pre" data-slate-object="block" 
data-key="1445" data-code-language="typescript"> <div class="se-000be2a8 se-b9c59c55"> <span></span> 
</div> <div class="se-90c4e415"> <div class="se-059459bb se-33fc84d5" data-code-line-number="1"></div> 
<div class="se-059459bb se-33fc84d5" data-code-line-number="2"></div> <div class="se-059459bb 
se-33fc84d5" data-code-line-number="3"></div> </div> <div class="se-15ec5012 ps ps--active-x"> 
<div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="1446"> <span data-slate-object="text" data-key="1447"><span data-slate-leaf="true" 
data-offset-key="1447:0" data-first-offset="true"><span data-slate-string="true">[==========] 
Running </span></span><span data-slate-leaf="true" data-offset-key="1447:1"><span class=" gkhl-number" 
data-slate-object="annotation" data-annotation-key="gkann_4247180832" data-annotation-type="annotation"><span 
data-slate-string="true">2</span></span></span><span data-slate-leaf="true" data-offset-key="1447:2"><span 
data-slate-string="true"> tests </span></span><span data-slate-leaf="true" data-offset-key="1447:3"><span 
class=" gkhl-keyword" data-slate-object="annotation" data-annotation-key="gkann_6897511305" 
data-annotation-type="annotation"><span data-slate-string="true">from</span></span></span><span 
data-slate-leaf="true" data-offset-key="1447:4"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="1447:5"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_9796311015" data-annotation-type="annotation"><span data-slate-string="true">1</span></span></span><span 
data-slate-leaf="true" data-offset-key="1447:6"><span data-slate-string="true"> test suite.</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="1448"> <span data-slate-object="text" data-key="1449"><span data-slate-leaf="true" 
data-offset-key="1449:0" data-first-offset="true"><span data-slate-string="true">[----------] 
Global test environment </span></span><span data-slate-leaf="true" data-offset-key="1449:1"><span 
class=" gkhl-keyword" data-slate-object="annotation" data-annotation-key="gkann_2919244780" 
data-annotation-type="annotation"><span data-slate-string="true">set</span></span></span><span 
data-slate-leaf="true" data-offset-key="1449:2"><span data-slate-string="true">-up.</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="1450"> <span data-slate-object="text" data-key="1451"><span data-slate-leaf="true" 
data-offset-key="1451:0" data-first-offset="true"><span data-slate-string="true">[----------] 
</span></span><span data-slate-leaf="true" data-offset-key="1451:1"><span class=" gkhl-number" 
data-slate-object="annotation" data-annotation-key="gkann_6331333908" data-annotation-type="annotation"><span 
data-slate-string="true">2</span></span></span><span data-slate-leaf="true" data-offset-key="1451:2"><span 
data-slate-string="true"> tests </span></span><span data-slate-leaf="true" data-offset-key="1451:3"><span 
class=" gkhl-keyword" data-slate-object="annotation" data-annotation-key="gkann_8191099801" 
data-annotation-type="annotation"><span data-slate-string="true">from</span></span></span><span 
data-slate-leaf="true" data-offset-key="1451:4"><span data-slate-string="true"> test_is_prime</span></span></span> 
</div> <div class="ps__rail-x" style="width: 365px; left: 0px; bottom: 0px;"> <div class="ps__thumb-x" 
tabindex="0" style="left: 0px; width: 364px;"></div> </div> <div class="ps__rail-y" style="top: 
0px; right: 0px;"> <div class="ps__thumb-y" tabindex="0" style="top: 0px; height: 0px;"></div> 
</div> </div> </div> <div class="se-184ae8c7 " data-slate-type="paragraph" data-slate-object="block" 
data-key="1452"> <span data-slate-object="text" data-key="1453"><span data-slate-leaf="true" 
data-offset-key="1453:0" data-first-offset="true"><span data-slate-string="true">这段信息说明这套单元测试中，包含了 
2 个测试用例。</span></span></span> </div> <div class="se-98cbe829 " data-slate-type="paragraph" 
data-slate-object="block" data-key="1454"> <span data-slate-object="text" data-key="1455"><span 
data-slate-leaf="true" data-offset-key="1455:0" data-first-offset="true"><span data-slate-string="true">第二部分，是每个单元测试运行信息的输出：</span></span></span> 
</div> <div class="se-f7ef180f se-ee05d42b" data-slate-type="pre" data-slate-object="block" 
data-key="1456" data-code-language="sql"> <div class="se-25d038c6 se-27ba64f1"> <span></span> 
</div> <div class="se-ed27c08d"> <div class="se-ebb5ed75 se-e81d81e5" data-code-line-number="1"></div> 
<div class="se-ebb5ed75 se-e81d81e5" data-code-line-number="2"></div> <div class="se-ebb5ed75 
se-e81d81e5" data-code-line-number="3"></div> <div class="se-ebb5ed75 se-e81d81e5" data-code-line-number="4"></div> 
<div class="se-ebb5ed75 se-e81d81e5" data-code-line-number="5"></div> <div class="se-ebb5ed75 
se-e81d81e5" data-code-line-number="6"></div> <div class="se-ebb5ed75 se-e81d81e5" data-code-line-number="7"></div> 
<div class="se-ebb5ed75 se-e81d81e5" data-code-line-number="8"></div> <div class="se-ebb5ed75 
se-e81d81e5" data-code-line-number="9"></div> <div class="se-ebb5ed75 se-e81d81e5" data-code-line-number="10"></div> 
<div class="se-ebb5ed75 se-e81d81e5" data-code-line-number="11"></div> <div class="se-ebb5ed75 
se-e81d81e5" data-code-line-number="12"></div> <div class="se-ebb5ed75 se-e81d81e5" data-code-line-number="13"></div> 
<div class="se-ebb5ed75 se-e81d81e5" data-code-line-number="14"></div> <div class="se-ebb5ed75 
se-e81d81e5" data-code-line-number="15"></div> <div class="se-ebb5ed75 se-e81d81e5" data-code-line-number="16"></div> 
<div class="se-ebb5ed75 se-e81d81e5" data-code-line-number="17"></div> <div class="se-ebb5ed75 
se-e81d81e5" data-code-line-number="18"></div> <div class="se-ebb5ed75 se-e81d81e5" data-code-line-number="19"></div> 
</div> <div class="se-684df29d ps"> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" 
data-slate-object="block" data-key="1457"> <span data-slate-object="text" data-key="1458"><span 
data-slate-leaf="true" data-offset-key="1458:0" data-first-offset="true"><span data-slate-string="true">[ 
RUN ] test_is_prime.test1</span></span></span> </div> <div class="se-0a5bf258 se-466ac03c" 
data-slate-type="code-line" data-slate-object="block" data-key="1459"> <span data-slate-object="text" 
data-key="1460"><span data-slate-leaf="true" data-offset-key="1460:0" data-first-offset="true"><span 
data-slate-string="true">[ OK ] test_is_prime.test1 (1 ms)</span></span></span> </div> <div 
class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" data-key="1461"> 
<span data-slate-object="text" data-key="1462"><span data-slate-leaf="true" data-offset-key="1462:0" 
data-first-offset="true"><span data-slate-string="true">[ RUN ] test_is_prime.test2</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="1463"> <span data-slate-object="text" data-key="1464"><span data-slate-leaf="true" 
data-offset-key="1464:0" data-first-offset="true"><span data-slate-string="true">gtest_test.cpp:25: 
Failure</span></span></span> </div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" 
data-slate-object="block" data-key="1465"> <span data-slate-object="text" data-key="1466"><span 
data-slate-leaf="true" data-offset-key="1466:0" data-first-offset="true"><span data-slate-string="true">Expected 
equality of these </span></span><span data-slate-leaf="true" data-offset-key="1466:1"><span 
class=" gkhl-keyword" data-slate-object="annotation" data-annotation-key="gkann_3716685991" 
data-annotation-type="annotation"><span data-slate-string="true">values</span></span></span><span 
data-slate-leaf="true" data-offset-key="1466:2"><span data-slate-string="true">:</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="1467"> <span data-slate-object="text" data-key="1468"><span data-slate-leaf="true" 
data-offset-key="1468:0" data-first-offset="true"><span data-slate-string="true"> is_prime(</span></span><span 
data-slate-leaf="true" data-offset-key="1468:1"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_5011629847" data-annotation-type="annotation"><span data-slate-string="true">4</span></span></span><span 
data-slate-leaf="true" data-offset-key="1468:2"><span data-slate-string="true">)</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="1469"> <span data-slate-object="text" data-key="1470"><span data-slate-leaf="true" 
data-offset-key="1470:0" data-first-offset="true"><span data-slate-string="true"> Which </span></span><span 
data-slate-leaf="true" data-offset-key="1470:1"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_6354135874" data-annotation-type="annotation"><span data-slate-string="true">is</span></span></span><span 
data-slate-leaf="true" data-offset-key="1470:2"><span data-slate-string="true">: </span></span><span 
data-slate-leaf="true" data-offset-key="1470:3"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_6422241323" data-annotation-type="annotation"><span data-slate-string="true">1</span></span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="1471"> <span data-slate-object="text" data-key="1472"><span data-slate-leaf="true" 
data-offset-key="1472:0" data-first-offset="true"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="1472:1"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_8426933194" data-annotation-type="annotation"><span data-slate-string="true">0</span></span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="1473"> <span data-slate-object="text" data-key="1474"><span data-slate-leaf="true" 
data-offset-key="1474:0" data-first-offset="true"><span data-slate-string="true">gtest_test.cpp:</span></span><span 
data-slate-leaf="true" data-offset-key="1474:1"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_5329367478" data-annotation-type="annotation"><span data-slate-string="true">26</span></span></span><span 
data-slate-leaf="true" data-offset-key="1474:2"><span data-slate-string="true">: </span></span><span 
data-slate-leaf="true" data-offset-key="1474:3"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_8504450540" data-annotation-type="annotation"><span data-slate-string="true">Failure</span></span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="1475"> <span data-slate-object="text" data-key="1476"><span data-slate-leaf="true" 
data-offset-key="1476:0" data-first-offset="true"><span data-slate-string="true">Expected equality 
</span></span><span data-slate-leaf="true" data-offset-key="1476:1"><span class=" gkhl-keyword" 
data-slate-object="annotation" data-annotation-key="gkann_3006699111" data-annotation-type="annotation"><span 
data-slate-string="true">of</span></span></span><span data-slate-leaf="true" data-offset-key="1476:2"><span 
data-slate-string="true"> these </span></span><span data-slate-leaf="true" data-offset-key="1476:3"><span 
class=" gkhl-keyword" data-slate-object="annotation" data-annotation-key="gkann_7311579714" 
data-annotation-type="annotation"><span data-slate-string="true">values</span></span></span><span 
data-slate-leaf="true" data-offset-key="1476:4"><span data-slate-string="true">:</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="1477"> <span data-slate-object="text" data-key="1478"><span data-slate-leaf="true" 
data-offset-key="1478:0" data-first-offset="true"><span data-slate-string="true"> is_prime(</span></span><span 
data-slate-leaf="true" data-offset-key="1478:1"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_0614013514" data-annotation-type="annotation"><span data-slate-string="true">0</span></span></span><span 
data-slate-leaf="true" data-offset-key="1478:2"><span data-slate-string="true">)</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="1479"> <span data-slate-object="text" data-key="1480"><span data-slate-leaf="true" 
data-offset-key="1480:0" data-first-offset="true"><span data-slate-string="true"> Which </span></span><span 
data-slate-leaf="true" data-offset-key="1480:1"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_2251227890" data-annotation-type="annotation"><span data-slate-string="true">is</span></span></span><span 
data-slate-leaf="true" data-offset-key="1480:2"><span data-slate-string="true">: </span></span><span 
data-slate-leaf="true" data-offset-key="1480:3"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_8411113848" data-annotation-type="annotation"><span data-slate-string="true">1</span></span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="1481"> <span data-slate-object="text" data-key="1482"><span data-slate-leaf="true" 
data-offset-key="1482:0" data-first-offset="true"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="1482:1"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_2064589921" data-annotation-type="annotation"><span data-slate-string="true">0</span></span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="1483"> <span data-slate-object="text" data-key="1484"><span data-slate-leaf="true" 
data-offset-key="1484:0" data-first-offset="true"><span data-slate-string="true">gtest_test.cpp:</span></span><span 
data-slate-leaf="true" data-offset-key="1484:1"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_5526862365" data-annotation-type="annotation"><span data-slate-string="true">27</span></span></span><span 
data-slate-leaf="true" data-offset-key="1484:2"><span data-slate-string="true">: </span></span><span 
data-slate-leaf="true" data-offset-key="1484:3"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_8150249103" data-annotation-type="annotation"><span data-slate-string="true">Failure</span></span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="1485"> <span data-slate-object="text" data-key="1486"><span data-slate-leaf="true" 
data-offset-key="1486:0" data-first-offset="true"><span data-slate-string="true">Expected equality 
</span></span><span data-slate-leaf="true" data-offset-key="1486:1"><span class=" gkhl-keyword" 
data-slate-object="annotation" data-annotation-key="gkann_8827489796" data-annotation-type="annotation"><span 
data-slate-string="true">of</span></span></span><span data-slate-leaf="true" data-offset-key="1486:2"><span 
data-slate-string="true"> these </span></span><span data-slate-leaf="true" data-offset-key="1486:3"><span 
class=" gkhl-keyword" data-slate-object="annotation" data-annotation-key="gkann_5064294991" 
data-annotation-type="annotation"><span data-slate-string="true">values</span></span></span><span 
data-slate-leaf="true" data-offset-key="1486:4"><span data-slate-string="true">:</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="1487"> <span data-slate-object="text" data-key="1488"><span data-slate-leaf="true" 
data-offset-key="1488:0" data-first-offset="true"><span data-slate-string="true"> is_prime(</span></span><span 
data-slate-leaf="true" data-offset-key="1488:1"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_2642096687" data-annotation-type="annotation"><span data-slate-string="true">1</span></span></span><span 
data-slate-leaf="true" data-offset-key="1488:2"><span data-slate-string="true">)</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="1489"> <span data-slate-object="text" data-key="1490"><span data-slate-leaf="true" 
data-offset-key="1490:0" data-first-offset="true"><span data-slate-string="true"> Which </span></span><span 
data-slate-leaf="true" data-offset-key="1490:1"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_7539838540" data-annotation-type="annotation"><span data-slate-string="true">is</span></span></span><span 
data-slate-leaf="true" data-offset-key="1490:2"><span data-slate-string="true">: </span></span><span 
data-slate-leaf="true" data-offset-key="1490:3"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_8912842404" data-annotation-type="annotation"><span data-slate-string="true">1</span></span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="1491"> <span data-slate-object="text" data-key="1492"><span data-slate-leaf="true" 
data-offset-key="1492:0" data-first-offset="true"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="1492:1"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_7933607802" data-annotation-type="annotation"><span data-slate-string="true">0</span></span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="1493"> <span data-slate-object="text" data-key="1494"><span data-slate-leaf="true" 
data-offset-key="1494:0" data-first-offset="true"><span data-slate-string="true">[ </span></span><span 
data-slate-leaf="true" data-offset-key="1494:1"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_6378364210" data-annotation-type="annotation"><span data-slate-string="true">FAILED</span></span></span><span 
data-slate-leaf="true" data-offset-key="1494:2"><span data-slate-string="true"> ] test_is_prime.test2 
(</span></span><span data-slate-leaf="true" data-offset-key="1494:3"><span class=" gkhl-number" 
data-slate-object="annotation" data-annotation-key="gkann_0839318341" data-annotation-type="annotation"><span 
data-slate-string="true">0</span></span></span><span data-slate-leaf="true" data-offset-key="1494:4"><span 
data-slate-string="true"> ms)</span></span></span> </div> <div class="ps__rail-x" style="left: 
0px; bottom: 0px;"> <div class="ps__thumb-x" tabindex="0" style="left: 0px; width: 0px;"></div> 
</div> <div class="ps__rail-y" style="top: 0px; right: 0px;"> <div class="ps__thumb-y" tabindex="0" 
style="top: 0px; height: 0px;"></div> </div> </div> </div> <div class="se-36e70a3f " data-slate-type="paragraph" 
data-slate-object="block" data-key="1495"> <span data-slate-object="text" data-key="1496"><span 
data-slate-leaf="true" data-offset-key="1496:0" data-first-offset="true"><span data-slate-string="true">如上所示，第一个单元测试 
test_is_prime.test1 运行结果正确，所用时间是 1ms；第二个单元测试 test_is_prime.test2 中，有三个判等 EXPECT 断言的结果是错误的，也就是 
is_prime 函数的返回值，和测试用例中期望的返回值不符，这说明 is_prime 函数存在 Bug。</span></span></span> </div> <div class="se-8c25e729 
" data-slate-type="paragraph" data-slate-object="block" data-key="1497"> <span data-slate-object="text" 
data-key="1498"><span data-slate-leaf="true" data-offset-key="1498:0" data-first-offset="true"><span 
data-slate-string="true">第三部分，就是这套单元测试的总结信息，以及整个程序单元测试结果的汇总信息。这段信息，有兴趣的小伙伴可以自己理解着看一下，由于不是咱们今天课程的重点，就不展开介绍了。</span></span></span> 
</div> <div class="se-b426fcdf se-2a821723" data-slate-type="pre" data-slate-object="block" 
data-key="1499" data-code-language="javascript"> <div class="se-a87d2166 se-6d6f0b60"> <span></span> 
</div> <div class="se-8e0a009a"> <div class="se-b9b2722a se-edce0ab4" data-code-line-number="1"></div> 
<div class="se-b9b2722a se-edce0ab4" data-code-line-number="2"></div> <div class="se-b9b2722a 
se-edce0ab4" data-code-line-number="3"></div> <div class="se-b9b2722a se-edce0ab4" data-code-line-number="4"></div> 
<div class="se-b9b2722a se-edce0ab4" data-code-line-number="5"></div> <div class="se-b9b2722a 
se-edce0ab4" data-code-line-number="6"></div> <div class="se-b9b2722a se-edce0ab4" data-code-line-number="7"></div> 
<div class="se-b9b2722a se-edce0ab4" data-code-line-number="8"></div> <div class="se-b9b2722a 
se-edce0ab4" data-code-line-number="9"></div> </div> <div class="se-900411b0 ps ps--active-x"> 
<div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="1500"> <span data-slate-object="text" data-key="1501"><span data-slate-leaf="true" 
data-offset-key="1501:0" data-first-offset="true"><span data-slate-string="true">[----------] 
</span></span><span data-slate-leaf="true" data-offset-key="1501:1"><span class=" gkhl-number" 
data-slate-object="annotation" data-annotation-key="gkann_1649765813" data-annotation-type="annotation"><span 
data-slate-string="true">2</span></span></span><span data-slate-leaf="true" data-offset-key="1501:2"><span 
data-slate-string="true"> tests </span></span><span data-slate-leaf="true" data-offset-key="1501:3"><span 
class=" gkhl-keyword" data-slate-object="annotation" data-annotation-key="gkann_5127311605" 
data-annotation-type="annotation"><span data-slate-string="true">from</span></span></span><span 
data-slate-leaf="true" data-offset-key="1501:4"><span data-slate-string="true"> test_is_prime 
(</span></span><span data-slate-leaf="true" data-offset-key="1501:5"><span class=" gkhl-number" 
data-slate-object="annotation" data-annotation-key="gkann_0866995184" data-annotation-type="annotation"><span 
data-slate-string="true">1</span></span></span><span data-slate-leaf="true" data-offset-key="1501:6"><span 
data-slate-string="true"> ms total)</span></span></span> </div> <div class="se-0a5bf258 se-466ac03c" 
data-slate-type="code-line" data-slate-object="block" data-key="1502"> <span data-slate-object="text" 
data-key="1503"></span> </div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" 
data-slate-object="block" data-key="1504"> <span data-slate-object="text" data-key="1505"><span 
data-slate-leaf="true" data-offset-key="1505:0" data-first-offset="true"><span data-slate-string="true">[----------] 
Global test environment tear-down</span></span></span> </div> <div class="se-0a5bf258 se-466ac03c" 
data-slate-type="code-line" data-slate-object="block" data-key="1506"> <span data-slate-object="text" 
data-key="1507"><span data-slate-leaf="true" data-offset-key="1507:0" data-first-offset="true"><span 
data-slate-string="true">[==========] </span></span><span data-slate-leaf="true" data-offset-key="1507:1"><span 
class=" gkhl-number" data-slate-object="annotation" data-annotation-key="gkann_7071192160" 
data-annotation-type="annotation"><span data-slate-string="true">2</span></span></span><span 
data-slate-leaf="true" data-offset-key="1507:2"><span data-slate-string="true"> tests </span></span><span 
data-slate-leaf="true" data-offset-key="1507:3"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_8545313790" data-annotation-type="annotation"><span data-slate-string="true">from</span></span></span><span 
data-slate-leaf="true" data-offset-key="1507:4"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="1507:5"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_7689377814" data-annotation-type="annotation"><span data-slate-string="true">1</span></span></span><span 
data-slate-leaf="true" data-offset-key="1507:6"><span data-slate-string="true"> test suite 
ran. (</span></span><span data-slate-leaf="true" data-offset-key="1507:7"><span class=" gkhl-number" 
data-slate-object="annotation" data-annotation-key="gkann_9491298252" data-annotation-type="annotation"><span 
data-slate-string="true">1</span></span></span><span data-slate-leaf="true" data-offset-key="1507:8"><span 
data-slate-string="true"> ms total)</span></span></span> </div> <div class="se-0a5bf258 se-466ac03c" 
data-slate-type="code-line" data-slate-object="block" data-key="1508"> <span data-slate-object="text" 
data-key="1509"><span data-slate-leaf="true" data-offset-key="1509:0" data-first-offset="true"><span 
data-slate-string="true">[ PASSED ] </span></span><span data-slate-leaf="true" data-offset-key="1509:1"><span 
class=" gkhl-number" data-slate-object="annotation" data-annotation-key="gkann_2058653723" 
data-annotation-type="annotation"><span data-slate-string="true">1</span></span></span><span 
data-slate-leaf="true" data-offset-key="1509:2"><span data-slate-string="true"> test.</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="1510"> <span data-slate-object="text" data-key="1511"><span data-slate-leaf="true" 
data-offset-key="1511:0" data-first-offset="true"><span data-slate-string="true">[ FAILED ] 
</span></span><span data-slate-leaf="true" data-offset-key="1511:1"><span class=" gkhl-number" 
data-slate-object="annotation" data-annotation-key="gkann_8839593368" data-annotation-type="annotation"><span 
data-slate-string="true">1</span></span></span><span data-slate-leaf="true" data-offset-key="1511:2"><span 
data-slate-string="true"> test, listed below:</span></span></span> </div> <div class="se-0a5bf258 
se-466ac03c" data-slate-type="code-line" data-slate-object="block" data-key="1512"> <span data-slate-object="text" 
data-key="1513"><span data-slate-leaf="true" data-offset-key="1513:0" data-first-offset="true"><span 
data-slate-string="true">[ FAILED ] test_is_prime.test2</span></span></span> </div> <div class="se-0a5bf258 
se-466ac03c" data-slate-type="code-line" data-slate-object="block" data-key="1514"> <span data-slate-object="text" 
data-key="1515"></span> </div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" 
data-slate-object="block" data-key="1516"> <span data-slate-object="text" data-key="1517"><span 
data-slate-leaf="true" data-offset-key="1517:0" data-first-offset="true"><span data-slate-string="true"> 
</span></span><span data-slate-leaf="true" data-offset-key="1517:1"><span class=" gkhl-number" 
data-slate-object="annotation" data-annotation-key="gkann_2785647633" data-annotation-type="annotation"><span 
data-slate-string="true">1</span></span></span><span data-slate-leaf="true" data-offset-key="1517:2"><span 
data-slate-string="true"> FAILED</span></span></span> </div> <div class="ps__rail-x" style="width: 
365px; left: 0px; bottom: 0px;"> <div class="ps__thumb-x" tabindex="0" style="left: 0px; width: 
304px;"></div> </div> <div class="ps__rail-y" style="top: 0px; right: 0px;"> <div class="ps__thumb-y" 
tabindex="0" style="top: 0px; height: 0px;"></div> </div> </div> </div> <div class="se-384d32d8 
" data-slate-type="paragraph" data-slate-object="block" data-key="1518"> <span data-slate-object="text" 
data-key="1519"><span data-slate-leaf="true" data-offset-key="1519:0" data-first-offset="true"><span 
data-slate-string="true">好了，关于 gtest 的输出内容，我大致说清楚了。</span></span></span> </div> <div class="se-7081fdaf 
" data-slate-type="paragraph" data-slate-object="block" data-key="1520"> <span data-slate-object="text" 
data-key="1521"><span data-slate-leaf="true" data-offset-key="1521:0" data-first-offset="true"><span 
data-slate-string="true">今天呢，我们先忽略 gtest 输出内容的第一部分和第三部分，主要关注 gtest 输出内容的第二部分，也就是每个单元测试运行信息的输出部分。通过第二部分的输出内容，你能想出我们应该从哪些方面来完善测试框架？</span></span></span> 
</div> <div class="se-95660ffe " data-slate-type="paragraph" data-slate-object="block" data-key="1522"> 
<span data-slate-object="text" data-key="1523"><span data-slate-leaf="true" data-offset-key="1523:0" 
data-first-offset="true"><span data-slate-string="true">这里呢，我给出我的想法：通过观察第二部分的输出，我们基本要从三个方面完善测试框架的输出信息。</span></span></span> 
</div> <div class="se-be2ea379" data-slate-type="list" data-slate-object="block" data-key="1524"> 
<div class="se-a84559e0" data-slate-type="list-line" data-slate-object="block" data-key="1525"> 
<div class="se-7adf4452 se-98d0b459" data-code-line-number="1"></div> <div class="se-bbcfb420"> 
<span data-slate-object="text" data-key="1526"><span data-slate-leaf="true" data-offset-key="1526:0" 
data-first-offset="true"><span data-slate-string="true">在每个测试用例运行之前，要先行输出相关测试用例的名字；</span></span></span> 
</div> </div> <div class="se-cb0f7cec" data-slate-type="list-line" data-slate-object="block" 
data-key="1527"> <div class="se-026a0810 se-8d48f342" data-code-line-number="2"></div> <div 
class="se-82e04409"> <span data-slate-object="text" data-key="1528"><span data-slate-leaf="true" 
data-offset-key="1528:0" data-first-offset="true"><span data-slate-string="true">每个测试用例运行结束以后，要输出测试用例的运行时间与运行结果（OK 
或者 FAILED）；</span></span></span> </div> </div> <div class="se-65dbe0cc" data-slate-type="list-line" 
data-slate-object="block" data-key="1529"> <div class="se-51b2fce5 se-9b24d4d9" data-code-line-number="3"></div> 
<div class="se-310a8701"> <span data-slate-object="text" data-key="1530"><span data-slate-leaf="true" 
data-offset-key="1530:0" data-first-offset="true"><span data-slate-string="true">若测试用例中的 EXPECT 
断言出错，需要输出错误提示信息。</span></span></span> </div> </div> </div> <div class="se-ba551423 " data-slate-type="paragraph" 
data-slate-object="block" data-key="1531"> <span data-slate-object="text" data-key="1532"><span 
data-slate-leaf="true" data-offset-key="1532:0" data-first-offset="true"><span data-slate-string="true">好了，优化的方向找到了，那么接下来，我们就开始测试框架改装行动吧！</span></span></span> 
</div> <h2 class="se-306af1ad" data-slate-type="heading" data-slate-object="block" data-key="1533"><span 
data-slate-object="text" data-key="1534"><span data-slate-leaf="true" data-offset-key="1534:0" 
data-first-offset="true"><span data-slate-string="true">测试用例的名字输出</span></span></span></h2> 
<div class="se-ae75539e " data-slate-type="paragraph" data-slate-object="block" data-key="1535"> 
<span data-slate-object="text" data-key="1536"><span data-slate-leaf="true" data-offset-key="1536:0" 
data-first-offset="true"><span data-slate-string="true">首先是如何输出测试用例的名字。我们先回忆一下上节课设计的注册函数，如下所示：</span></span></span> 
</div> <div class="se-7bf4e0f5 se-a6f0b707" data-slate-type="pre" data-slate-object="block" 
data-key="1537" data-code-language="objectivec"> <div class="se-784dc0f3 se-63f70169"> <span></span> 
</div> <div class="se-86258d7b"> <div class="se-6d281120 se-88a18ae1" data-code-line-number="1"></div> 
<div class="se-6d281120 se-88a18ae1" data-code-line-number="2"></div> <div class="se-6d281120 
se-88a18ae1" data-code-line-number="3"></div> <div class="se-6d281120 se-88a18ae1" data-code-line-number="4"></div> 
<div class="se-6d281120 se-88a18ae1" data-code-line-number="5"></div> <div class="se-6d281120 
se-88a18ae1" data-code-line-number="6"></div> <div class="se-6d281120 se-88a18ae1" data-code-line-number="7"></div> 
<div class="se-6d281120 se-88a18ae1" data-code-line-number="8"></div> </div> <div class="se-9a62f35b 
ps ps--active-x"> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="1538"> <span data-slate-object="text" data-key="1539"><span data-slate-leaf="true" 
data-offset-key="1539:0" data-first-offset="true"><span class=" gkhl-meta" data-slate-object="annotation" 
data-annotation-key="gkann_5673495856" data-annotation-type="annotation"><span data-slate-string="true">#define 
TEST(test_name, func_name) \</span></span></span></span> </div> <div class="se-0a5bf258 se-466ac03c" 
data-slate-type="code-line" data-slate-object="block" data-key="1540"> <span data-slate-object="text" 
data-key="1541"><span data-slate-leaf="true" data-offset-key="1541:0" data-first-offset="true"><span 
class=" gkhl-keyword" data-slate-object="annotation" data-annotation-key="gkann_4912967907" 
data-annotation-type="annotation"><span data-slate-string="true">void</span></span></span><span 
data-slate-leaf="true" data-offset-key="1541:1"><span data-slate-string="true"> test_name</span></span><span 
data-slate-leaf="true" data-offset-key="1541:2"><span class=" gkhl-meta" data-slate-object="annotation" 
data-annotation-key="gkann_2343029591" data-annotation-type="annotation"><span data-slate-string="true">##_##func_name(); 
\</span></span></span></span> </div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" 
data-slate-object="block" data-key="1542"> <span data-slate-object="text" data-key="1543"><span 
data-slate-leaf="true" data-offset-key="1543:0" data-first-offset="true"><span data-slate-string="true">__attribute__((constructor)) 
\</span></span></span> </div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" 
data-slate-object="block" data-key="1544"> <span data-slate-object="text" data-key="1545"><span 
data-slate-leaf="true" data-offset-key="1545:0" data-first-offset="true"><span class=" gkhl-keyword" 
data-slate-object="annotation" data-annotation-key="gkann_2495551694" data-annotation-type="annotation"><span 
data-slate-string="true">void</span></span></span><span data-slate-leaf="true" data-offset-key="1545:1"><span 
data-slate-string="true"> register_</span></span><span data-slate-leaf="true" data-offset-key="1545:2"><span 
class=" gkhl-meta" data-slate-object="annotation" data-annotation-key="gkann_2948091276" data-annotation-type="annotation"><span 
data-slate-string="true">##test_name##_##func_name() { \</span></span></span></span> </div> 
<div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="1546"> <span data-slate-object="text" data-key="1547"><span data-slate-leaf="true" 
data-offset-key="1547:0" data-first-offset="true"><span data-slate-string="true"> test_function_arr[test_function_cnt] 
= test_name</span></span><span data-slate-leaf="true" data-offset-key="1547:1"><span class=" 
gkhl-meta" data-slate-object="annotation" data-annotation-key="gkann_3453024140" data-annotation-type="annotation"><span 
data-slate-string="true">##_##func_name; \</span></span></span></span> </div> <div class="se-0a5bf258 
se-466ac03c" data-slate-type="code-line" data-slate-object="block" data-key="1548"> <span data-slate-object="text" 
data-key="1549"><span data-slate-leaf="true" data-offset-key="1549:0" data-first-offset="true"><span 
data-slate-string="true"> test_function_cnt++; \</span></span></span> </div> <div class="se-0a5bf258 
se-466ac03c" data-slate-type="code-line" data-slate-object="block" data-key="1550"> <span data-slate-object="text" 
data-key="1551"><span data-slate-leaf="true" data-offset-key="1551:0" data-first-offset="true"><span 
data-slate-string="true">} \</span></span></span> </div> <div class="se-0a5bf258 se-466ac03c" 
data-slate-type="code-line" data-slate-object="block" data-key="1552"> <span data-slate-object="text" 
data-key="1553"><span data-slate-leaf="true" data-offset-key="1553:0" data-first-offset="true"><span 
class=" gkhl-keyword" data-slate-object="annotation" data-annotation-key="gkann_2607519763" 
data-annotation-type="annotation"><span data-slate-string="true">void</span></span></span><span 
data-slate-leaf="true" data-offset-key="1553:1"><span data-slate-string="true"> test_name</span></span><span 
data-slate-leaf="true" data-offset-key="1553:2"><span class=" gkhl-meta" data-slate-object="annotation" 
data-annotation-key="gkann_3317170820" data-annotation-type="annotation"><span data-slate-string="true">##_##func_name()</span></span></span></span> 
</div> <div class="ps__rail-x" style="width: 365px; left: 0px; bottom: 0px;"> <div class="ps__thumb-x" 
tabindex="0" style="left: 0px; width: 247px;"></div> </div> <div class="ps__rail-y" style="top: 
0px; right: 0px;"> <div class="ps__thumb-y" tabindex="0" style="top: 0px; height: 0px;"></div> 
</div> </div> </div> <div class="se-b997d2f8 " data-slate-type="paragraph" data-slate-object="block" 
data-key="1554"> <span data-slate-object="text" data-key="1555"><span data-slate-leaf="true" 
data-offset-key="1555:0" data-first-offset="true"><span data-slate-string="true">注册函数是随着 TEST 
展开的，从展开的代码逻辑中可以看到，它只是将测试用例的函数地址记录在了函数指针数组中。要想 RUN_ALL_TESTS 函数后续能够输出测试用例的函数名称的话，我们只需要修改注册函数的功能逻辑即可，也就是让注册函数在记录函数信息的时候，增加记录对应测试用例的名称。</span></span></span> 
</div> <div class="se-494261e2 " data-slate-type="paragraph" data-slate-object="block" data-key="1556"> 
<span data-slate-object="text" data-key="1557"><span data-slate-leaf="true" data-offset-key="1557:0" 
data-first-offset="true"><span data-slate-string="true">而这个名称信息，应该记录在哪里呢？有两种代码实现方式：</span></span></span> 
</div> <div class="se-5f0650da" data-slate-type="list" data-slate-object="block" data-key="1558"> 
<div class="se-c58d43cf" data-slate-type="list-line" data-slate-object="block" data-key="1559"> 
<div class="se-2afa5ce8 se-f6d762d7" data-code-line-number="1"></div> <div class="se-711a9799"> 
<span data-slate-object="text" data-key="1560"><span data-slate-leaf="true" data-offset-key="1560:0" 
data-first-offset="true"><span data-slate-string="true">另外开辟一个记录测试用例名称的字符串数组；</span></span></span> 
</div> </div> <div class="se-d018798f" data-slate-type="list-line" data-slate-object="block" 
data-key="1561"> <div class="se-b1e4fbe8 se-19e00daf" data-code-line-number="2"></div> <div 
class="se-faf6ef5b"> <span data-slate-object="text" data-key="1562"><span data-slate-leaf="true" 
data-offset-key="1562:0" data-first-offset="true"><span data-slate-string="true">修改 test_function_arr 
数组中的元素类型，将新增的测试用例名称以及函数地址信息打包成一个数据元素。</span></span></span> </div> </div> </div> <div class="se-868c11e5 
" data-slate-type="paragraph" data-slate-object="block" data-key="1563"> <span data-slate-object="text" 
data-key="1564"><span data-slate-leaf="true" data-offset-key="1564:0" data-first-offset="true"><span 
data-slate-string="true">显然，相较于第一种实现方式，第二种代码实现方式会使程序具有更好的封装特性。我们采用之前在“语言基础篇“中学习的结构体相关知识，就可以完成这种多种数据类型打包成一种新的数据类型的功能需求。</span></span></span> 
</div> <div class="se-197f6f5d " data-slate-type="paragraph" data-slate-object="block" data-key="1565"> 
<span data-slate-object="text" data-key="1566"><span data-slate-leaf="true" data-offset-key="1566:0" 
data-first-offset="true"><span data-slate-string="true">下面就是我们将函数指针信息和测试用例名称信息，封装成的一个新的结构体类型：</span></span></span> 
</div> <div class="se-b1614633 se-0dead9e3" data-slate-type="pre" data-slate-object="block" 
data-key="1567" data-code-language="cpp"> <div class="se-d0272853 se-dacfc91c"> <span></span> 
</div> <div class="se-74c92c1a"> <div class="se-070eb407 se-dc2dde98" data-code-line-number="1"></div> 
<div class="se-070eb407 se-dc2dde98" data-code-line-number="2"></div> <div class="se-070eb407 
se-dc2dde98" data-code-line-number="3"></div> <div class="se-070eb407 se-dc2dde98" data-code-line-number="4"></div> 
<div class="se-070eb407 se-dc2dde98" data-code-line-number="5"></div> </div> <div class="se-c4f87d7d 
ps ps--active-x"> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="1568"> <span data-slate-object="text" data-key="1569"><span data-slate-leaf="true" 
data-offset-key="1569:0" data-first-offset="true"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_7016206663" data-annotation-type="annotation"><span class=" gkhl-class" 
data-slate-object="annotation" data-annotation-key="gkann_5706951034" data-annotation-type="annotation"><span 
data-slate-string="true">struct</span></span></span></span><span data-slate-leaf="true" data-offset-key="1569:1"><span 
class=" gkhl-class" data-slate-object="annotation" data-annotation-key="gkann_5706951034" data-annotation-type="annotation"><span 
data-slate-string="true"> </span></span></span><span data-slate-leaf="true" data-offset-key="1569:2"><span 
class=" gkhl-title" data-slate-object="annotation" data-annotation-key="gkann_8925481188" data-annotation-type="annotation"><span 
class=" gkhl-class" data-slate-object="annotation" data-annotation-key="gkann_5706951034" data-annotation-type="annotation"><span 
data-slate-string="true">test_function_info_t</span></span></span></span><span data-slate-leaf="true" 
data-offset-key="1569:3"><span class=" gkhl-class" data-slate-object="annotation" data-annotation-key="gkann_5706951034" 
data-annotation-type="annotation"><span data-slate-string="true"> {</span></span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="1570"> <span data-slate-object="text" data-key="1571"><span data-slate-leaf="true" 
data-offset-key="1571:0" data-first-offset="true"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="1571:1"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_8561064694" data-annotation-type="annotation"><span data-slate-string="true">test_function_t</span></span></span><span 
data-slate-leaf="true" data-offset-key="1571:2"><span data-slate-string="true"> func; </span></span><span 
data-slate-leaf="true" data-offset-key="1571:3"><span class=" gkhl-comment" data-slate-object="annotation" 
data-annotation-key="gkann_6669686480" data-annotation-type="annotation"><span data-slate-string="true">// 
测试用例函数指针，指向测试用例函数</span></span></span></span> </div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" 
data-slate-object="block" data-key="1572"> <span data-slate-object="text" data-key="1573"><span 
data-slate-leaf="true" data-offset-key="1573:0" data-first-offset="true"><span data-slate-string="true"> 
</span></span><span data-slate-leaf="true" data-offset-key="1573:1"><span class=" gkhl-keyword" 
data-slate-object="annotation" data-annotation-key="gkann_1267297049" data-annotation-type="annotation"><span 
data-slate-string="true">const</span></span></span><span data-slate-leaf="true" data-offset-key="1573:2"><span 
data-slate-string="true"> </span></span><span data-slate-leaf="true" data-offset-key="1573:3"><span 
class=" gkhl-keyword" data-slate-object="annotation" data-annotation-key="gkann_2164227059" 
data-annotation-type="annotation"><span data-slate-string="true">char</span></span></span><span 
data-slate-leaf="true" data-offset-key="1573:4"><span data-slate-string="true"> *name; </span></span><span 
data-slate-leaf="true" data-offset-key="1573:5"><span class=" gkhl-comment" data-slate-object="annotation" 
data-annotation-key="gkann_2210411942" data-annotation-type="annotation"><span data-slate-string="true">// 
指向测试用例名称</span></span></span></span> </div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" 
data-slate-object="block" data-key="1574"> <span data-slate-object="text" data-key="1575"><span 
data-slate-leaf="true" data-offset-key="1575:0" data-first-offset="true"><span data-slate-string="true">} 
test_function_arr[</span></span><span data-slate-leaf="true" data-offset-key="1575:1"><span 
class=" gkhl-number" data-slate-object="annotation" data-annotation-key="gkann_0691693962" 
data-annotation-type="annotation"><span data-slate-string="true">100</span></span></span><span 
data-slate-leaf="true" data-offset-key="1575:2"><span data-slate-string="true">];</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="1576"> <span data-slate-object="text" data-key="1577"><span data-slate-leaf="true" 
data-offset-key="1577:0" data-first-offset="true"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_7772661381" data-annotation-type="annotation"><span data-slate-string="true">int</span></span></span><span 
data-slate-leaf="true" data-offset-key="1577:1"><span data-slate-string="true"> test_function_cnt 
= </span></span><span data-slate-leaf="true" data-offset-key="1577:2"><span class=" gkhl-number" 
data-slate-object="annotation" data-annotation-key="gkann_5378594061" data-annotation-type="annotation"><span 
data-slate-string="true">0</span></span></span><span data-slate-leaf="true" data-offset-key="1577:3"><span 
data-slate-string="true">;</span></span></span> </div> <div class="ps__rail-x" style="width: 
365px; left: 0px; bottom: 0px;"> <div class="ps__thumb-x" tabindex="0" style="left: 0px; width: 
292px;"></div> </div> <div class="ps__rail-y" style="top: 0px; right: 0px;"> <div class="ps__thumb-y" 
tabindex="0" style="top: 0px; height: 0px;"></div> </div> </div> </div> <div class="se-ff5c993a 
" data-slate-type="paragraph" data-slate-object="block" data-key="1578"> <span data-slate-object="text" 
data-key="1579"><span data-slate-leaf="true" data-offset-key="1579:0" data-first-offset="true"><span 
data-slate-string="true">如代码所示，我们定义了一种新的数据类型，叫做 test_function_info_t。这种结构体类型包含了指向测试用例的函数指针 
func 字段， 与指向测试用例名称的字符串指针 name 字段，并且我们将这种结构体类型，作为 test_function_arr 数组新的元素类型。</span></span></span> 
</div> <div class="se-167d76cc " data-slate-type="paragraph" data-slate-object="block" data-key="1580"> 
<span data-slate-object="text" data-key="1581"><span data-slate-leaf="true" data-offset-key="1581:0" 
data-first-offset="true"><span data-slate-string="true">既然测试用例信息的存储区 test_function_arr 的数据类型发生了改变，那么负责存储信息的注册函数，与使用信息的 
RUN_ALL_TESTS 函数的相关逻辑都需要作出改变。</span></span></span> </div> <div class="se-534643b4 " data-slate-type="paragraph" 
data-slate-object="block" data-key="1582"> <span data-slate-object="text" data-key="1583"><span 
data-slate-leaf="true" data-offset-key="1583:0" data-first-offset="true"><span data-slate-string="true">首先，我们来看注册函数的改变。想要修改注册函数的逻辑，就是修改 
TEST 宏，从功能上来说，注册函数中需要额外记录一个测试用例名称信息，示例代码如下：</span></span></span> </div> <div class="se-91d25cb3 
se-707cd103" data-slate-type="pre" data-slate-object="block" data-key="1584" data-code-language="objectivec"> 
<div class="se-651f4083 se-ecc13b20"> <span></span> </div> <div class="se-080cf8c3"> <div class="se-717176c4 
se-736f777c" data-code-line-number="1"></div> <div class="se-717176c4 se-736f777c" data-code-line-number="2"></div> 
<div class="se-717176c4 se-736f777c" data-code-line-number="3"></div> <div class="se-717176c4 
se-736f777c" data-code-line-number="4"></div> <div class="se-717176c4 se-736f777c" data-code-line-number="5"></div> 
<div class="se-717176c4 se-736f777c" data-code-line-number="6"></div> <div class="se-717176c4 
se-736f777c" data-code-line-number="7"></div> <div class="se-717176c4 se-736f777c" data-code-line-number="8"></div> 
<div class="se-717176c4 se-736f777c" data-code-line-number="9"></div> </div> <div class="se-4e3a4d2e 
ps ps--active-x"> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="1585"> <span data-slate-object="text" data-key="1586"><span data-slate-leaf="true" 
data-offset-key="1586:0" data-first-offset="true"><span class=" gkhl-meta" data-slate-object="annotation" 
data-annotation-key="gkann_4739468505" data-annotation-type="annotation"><span data-slate-string="true">#define 
TEST(test_name, func_name) \</span></span></span></span> </div> <div class="se-0a5bf258 se-466ac03c" 
data-slate-type="code-line" data-slate-object="block" data-key="1587"> <span data-slate-object="text" 
data-key="1588"><span data-slate-leaf="true" data-offset-key="1588:0" data-first-offset="true"><span 
class=" gkhl-keyword" data-slate-object="annotation" data-annotation-key="gkann_5898368832" 
data-annotation-type="annotation"><span data-slate-string="true">void</span></span></span><span 
data-slate-leaf="true" data-offset-key="1588:1"><span data-slate-string="true"> test_name</span></span><span 
data-slate-leaf="true" data-offset-key="1588:2"><span class=" gkhl-meta" data-slate-object="annotation" 
data-annotation-key="gkann_5631018196" data-annotation-type="annotation"><span data-slate-string="true">##_##func_name(); 
\</span></span></span></span> </div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" 
data-slate-object="block" data-key="1589"> <span data-slate-object="text" data-key="1590"><span 
data-slate-leaf="true" data-offset-key="1590:0" data-first-offset="true"><span data-slate-string="true">__attribute__((constructor)) 
\</span></span></span> </div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" 
data-slate-object="block" data-key="1591"> <span data-slate-object="text" data-key="1592"><span 
data-slate-leaf="true" data-offset-key="1592:0" data-first-offset="true"><span class=" gkhl-keyword" 
data-slate-object="annotation" data-annotation-key="gkann_9828257567" data-annotation-type="annotation"><span 
data-slate-string="true">void</span></span></span><span data-slate-leaf="true" data-offset-key="1592:1"><span 
data-slate-string="true"> register_</span></span><span data-slate-leaf="true" data-offset-key="1592:2"><span 
class=" gkhl-meta" data-slate-object="annotation" data-annotation-key="gkann_6467235726" data-annotation-type="annotation"><span 
data-slate-string="true">##test_name##_##func_name() { \</span></span></span></span> </div> 
<div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="1593"> <span data-slate-object="text" data-key="1594"><span data-slate-leaf="true" 
data-offset-key="1594:0" data-first-offset="true"><span data-slate-string="true"> test_function_arr[test_function_cnt].func 
= test_name</span></span><span data-slate-leaf="true" data-offset-key="1594:1"><span class=" 
gkhl-meta" data-slate-object="annotation" data-annotation-key="gkann_1432669953" data-annotation-type="annotation"><span 
data-slate-string="true">##_##func_name; \</span></span></span></span> </div> <div class="se-0a5bf258 
se-466ac03c" data-slate-type="code-line" data-slate-object="block" data-key="1595"> <span data-slate-object="text" 
data-key="1596"><span data-slate-leaf="true" data-offset-key="1596:0" data-first-offset="true"><span 
data-slate-string="true"> test_function_arr[test_function_cnt].name = </span></span><span data-slate-leaf="true" 
data-offset-key="1596:1"><span class=" gkhl-meta" data-slate-object="annotation" data-annotation-key="gkann_1529800489" 
data-annotation-type="annotation"><span data-slate-string="true">#func_name "." #test_name; 
\</span></span></span></span> </div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" 
data-slate-object="block" data-key="1597"> <span data-slate-object="text" data-key="1598"><span 
data-slate-leaf="true" data-offset-key="1598:0" data-first-offset="true"><span data-slate-string="true"> 
test_function_cnt++; \</span></span></span> </div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" 
data-slate-object="block" data-key="1599"> <span data-slate-object="text" data-key="1600"><span 
data-slate-leaf="true" data-offset-key="1600:0" data-first-offset="true"><span data-slate-string="true">} 
\</span></span></span> </div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" 
data-slate-object="block" data-key="1601"> <span data-slate-object="text" data-key="1602"><span 
data-slate-leaf="true" data-offset-key="1602:0" data-first-offset="true"><span class=" gkhl-keyword" 
data-slate-object="annotation" data-annotation-key="gkann_0097039946" data-annotation-type="annotation"><span 
data-slate-string="true">void</span></span></span><span data-slate-leaf="true" data-offset-key="1602:1"><span 
data-slate-string="true"> test_name</span></span><span data-slate-leaf="true" data-offset-key="1602:2"><span 
class=" gkhl-meta" data-slate-object="annotation" data-annotation-key="gkann_2366169213" data-annotation-type="annotation"><span 
data-slate-string="true">##_##func_name()</span></span></span></span> </div> <div class="ps__rail-x" 
style="width: 365px; left: 0px; bottom: 0px;"> <div class="ps__thumb-x" tabindex="0" style="left: 
0px; width: 224px;"></div> </div> <div class="ps__rail-y" style="top: 0px; right: 0px;"> <div 
class="ps__thumb-y" tabindex="0" style="top: 0px; height: 0px;"></div> </div> </div> </div> 
<div class="se-5212e756 " data-slate-type="paragraph" data-slate-object="block" data-key="1603"> 
<span data-slate-object="text" data-key="1604"><span data-slate-leaf="true" data-offset-key="1604:0" 
data-first-offset="true"><span data-slate-string="true">代码中主要是增加了第 6 行的逻辑，这一行的代码将 TEST 宏参数的两部分，拼成一个字符串，中间用点 
(.) 连接，例如 TEST(test1, test_is_prime) 宏调用中，拼凑的字符串就是 test_is_prime.test1，和 gtest 中的输出的测试用例名称信息格式是一致的。</span></span></span> 
</div> <div class="se-41ac7f4f " data-slate-type="paragraph" data-slate-object="block" data-key="1605"> 
<span data-slate-object="text" data-key="1606"><span data-slate-leaf="true" data-offset-key="1606:0" 
data-first-offset="true"><span data-slate-string="true">改完了注册函数的逻辑以后，最后调整一下 RUN_ALL_TESTS 中使用 
test_function_arr 数组的逻辑代码即可：</span></span></span> </div> <div class="se-2eb07825 se-3dd376f3" 
data-slate-type="pre" data-slate-object="block" data-key="1607" data-code-language="cpp"> <div 
class="se-377711a6 se-d2579791"> <span></span> </div> <div class="se-151ee456"> <div class="se-16601a97 
se-ef7c1be5" data-code-line-number="1"></div> <div class="se-16601a97 se-ef7c1be5" data-code-line-number="2"></div> 
<div class="se-16601a97 se-ef7c1be5" data-code-line-number="3"></div> <div class="se-16601a97 
se-ef7c1be5" data-code-line-number="4"></div> <div class="se-16601a97 se-ef7c1be5" data-code-line-number="5"></div> 
<div class="se-16601a97 se-ef7c1be5" data-code-line-number="6"></div> <div class="se-16601a97 
se-ef7c1be5" data-code-line-number="7"></div> <div class="se-16601a97 se-ef7c1be5" data-code-line-number="8"></div> 
</div> <div class="se-30bc209f ps ps--active-x"> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" 
data-slate-object="block" data-key="1608"> <span data-slate-object="text" data-key="1609"><span 
data-slate-leaf="true" data-offset-key="1609:0" data-first-offset="true"><span class=" gkhl-function" 
data-slate-object="annotation" data-annotation-key="gkann_1424212569" data-annotation-type="annotation"><span 
class=" gkhl-keyword" data-slate-object="annotation" data-annotation-key="gkann_5628383062" 
data-annotation-type="annotation"><span data-slate-string="true">int</span></span></span></span><span 
data-slate-leaf="true" data-offset-key="1609:1"><span class=" gkhl-function" data-slate-object="annotation" 
data-annotation-key="gkann_1424212569" data-annotation-type="annotation"><span data-slate-string="true"> 
</span></span></span><span data-slate-leaf="true" data-offset-key="1609:2"><span class=" gkhl-title" 
data-slate-object="annotation" data-annotation-key="gkann_5947838056" data-annotation-type="annotation"><span 
class=" gkhl-function" data-slate-object="annotation" data-annotation-key="gkann_1424212569" 
data-annotation-type="annotation"><span data-slate-string="true">RUN_ALL_TESTS</span></span></span></span><span 
data-slate-leaf="true" data-offset-key="1609:3"><span class=" gkhl-params" data-slate-object="annotation" 
data-annotation-key="gkann_7322494608" data-annotation-type="annotation"><span class=" gkhl-function" 
data-slate-object="annotation" data-annotation-key="gkann_1424212569" data-annotation-type="annotation"><span 
data-slate-string="true">()</span></span></span></span><span data-slate-leaf="true" data-offset-key="1609:4"><span 
class=" gkhl-function" data-slate-object="annotation" data-annotation-key="gkann_1424212569" 
data-annotation-type="annotation"><span data-slate-string="true"> </span></span></span><span 
data-slate-leaf="true" data-offset-key="1609:5"><span data-slate-string="true">{</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="1610"> <span data-slate-object="text" data-key="1611"><span data-slate-leaf="true" 
data-offset-key="1611:0" data-first-offset="true"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="1611:1"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_8680563831" data-annotation-type="annotation"><span data-slate-string="true">for</span></span></span><span 
data-slate-leaf="true" data-offset-key="1611:2"><span data-slate-string="true"> (</span></span><span 
data-slate-leaf="true" data-offset-key="1611:3"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_3540851132" data-annotation-type="annotation"><span data-slate-string="true">int</span></span></span><span 
data-slate-leaf="true" data-offset-key="1611:4"><span data-slate-string="true"> i = </span></span><span 
data-slate-leaf="true" data-offset-key="1611:5"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_3841045921" data-annotation-type="annotation"><span data-slate-string="true">0</span></span></span><span 
data-slate-leaf="true" data-offset-key="1611:6"><span data-slate-string="true">; i &lt; test_function_cnt; 
i++) {</span></span></span> </div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" 
data-slate-object="block" data-key="1612"> <span data-slate-object="text" data-key="1613"><span 
data-slate-leaf="true" data-offset-key="1613:0" data-first-offset="true"><span data-slate-string="true"> 
</span></span><span data-slate-leaf="true" data-offset-key="1613:1"><span class=" gkhl-built_in" 
data-slate-object="annotation" data-annotation-key="gkann_3670580855" data-annotation-type="annotation"><span 
data-slate-string="true">printf</span></span></span><span data-slate-leaf="true" data-offset-key="1613:2"><span 
data-slate-string="true">(</span></span><span data-slate-leaf="true" data-offset-key="1613:3"><span 
class=" gkhl-string" data-slate-object="annotation" data-annotation-key="gkann_9260193185" 
data-annotation-type="annotation"><span data-slate-string="true">"[ RUN ] %s\n"</span></span></span><span 
data-slate-leaf="true" data-offset-key="1613:4"><span data-slate-string="true">, test_function_arr[i].name);</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="1614"> <span data-slate-object="text" data-key="1615"><span data-slate-leaf="true" 
data-offset-key="1615:0" data-first-offset="true"><span data-slate-string="true"> test_function_arr[i].func();</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="1616"> <span data-slate-object="text" data-key="1617"><span data-slate-leaf="true" 
data-offset-key="1617:0" data-first-offset="true"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="1617:1"><span class=" gkhl-built_in" data-slate-object="annotation" 
data-annotation-key="gkann_0368182104" data-annotation-type="annotation"><span data-slate-string="true">printf</span></span></span><span 
data-slate-leaf="true" data-offset-key="1617:2"><span data-slate-string="true">(</span></span><span 
data-slate-leaf="true" data-offset-key="1617:3"><span class=" gkhl-string" data-slate-object="annotation" 
data-annotation-key="gkann_5322942047" data-annotation-type="annotation"><span data-slate-string="true">"RUN 
TEST DONE\n\n"</span></span></span><span data-slate-leaf="true" data-offset-key="1617:4"><span 
data-slate-string="true">);</span></span></span> </div> <div class="se-0a5bf258 se-466ac03c" 
data-slate-type="code-line" data-slate-object="block" data-key="1618"> <span data-slate-object="text" 
data-key="1619"><span data-slate-leaf="true" data-offset-key="1619:0" data-first-offset="true"><span 
data-slate-string="true"> }</span></span></span> </div> <div class="se-0a5bf258 se-466ac03c" 
data-slate-type="code-line" data-slate-object="block" data-key="1620"> <span data-slate-object="text" 
data-key="1621"><span data-slate-leaf="true" data-offset-key="1621:0" data-first-offset="true"><span 
data-slate-string="true"> </span></span><span data-slate-leaf="true" data-offset-key="1621:1"><span 
class=" gkhl-keyword" data-slate-object="annotation" data-annotation-key="gkann_4811701708" 
data-annotation-type="annotation"><span data-slate-string="true">return</span></span></span><span 
data-slate-leaf="true" data-offset-key="1621:2"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="1621:3"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_8414514108" data-annotation-type="annotation"><span data-slate-string="true">0</span></span></span><span 
data-slate-leaf="true" data-offset-key="1621:4"><span data-slate-string="true">;</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="1622"> <span data-slate-object="text" data-key="1623"><span data-slate-leaf="true" 
data-offset-key="1623:0" data-first-offset="true"><span data-slate-string="true">}</span></span></span> 
</div> <div class="ps__rail-x" style="width: 365px; left: 0px; bottom: 0px;"> <div class="ps__thumb-x" 
tabindex="0" style="left: 0px; width: 271px;"></div> </div> <div class="ps__rail-y" style="top: 
0px; right: 0px;"> <div class="ps__thumb-y" tabindex="0" style="top: 0px; height: 0px;"></div> 
</div> </div> </div> <div class="se-465914a9 " data-slate-type="paragraph" data-slate-object="block" 
data-key="1624"> <span data-slate-object="text" data-key="1625"><span data-slate-leaf="true" 
data-offset-key="1625:0" data-first-offset="true"><span data-slate-string="true">代码中的第 3 行，是仿照 
gtest 的输出格式进行调整的，在输出测试用例名称之前，先输出一段包含 RUN 英文的标志信息。</span></span></span> </div> <div class="se-79804b02 
" data-slate-type="paragraph" data-slate-object="block" data-key="1626"> <span data-slate-object="text" 
data-key="1627"><span data-slate-leaf="true" data-offset-key="1627:0" data-first-offset="true"><span 
data-slate-string="true">至此，我们就完成了输出测试用例名字的框架功能改造。</span></span></span> </div> <h2 class="se-085f5175" 
data-slate-type="heading" data-slate-object="block" data-key="1628"><span data-slate-object="text" 
data-key="1629"><span data-slate-leaf="true" data-offset-key="1629:0" data-first-offset="true"><span 
data-slate-string="true">输出测试用例的运行结果信息</span></span></span></h2> <div class="se-eab4cd84 " 
data-slate-type="paragraph" data-slate-object="block" data-key="1630"> <span data-slate-object="text" 
data-key="1631"><span data-slate-leaf="true" data-offset-key="1631:0" data-first-offset="true"><span 
data-slate-string="true">接下来，就让我们进行第二个功能改造：输出测试用例的运行结果信息。</span></span></span> </div> <div 
class="se-f91ee128 " data-slate-type="paragraph" data-slate-object="block" data-key="1632"> 
<span data-slate-object="text" data-key="1633"><span data-slate-leaf="true" data-offset-key="1633:0" 
data-first-offset="true"><span data-slate-string="true">以下是我们示例代码中的 2 个测试用例，在 gtest 框架下的运行结果信息输出：</span></span></span> 
</div> <div class="se-1f3f6c28 se-55f98606" data-slate-type="pre" data-slate-object="block" 
data-key="1634"> <div class="se-42154eb9 se-e1ccd183"> <span></span> </div> <div class="se-0463a389"> 
<div class="se-56f6e307 se-92d1780c" data-code-line-number="1"></div> <div class="se-56f6e307 
se-92d1780c" data-code-line-number="2"></div> </div> <div class="se-51858450 ps"> <div class="se-0a5bf258 
se-466ac03c" data-slate-type="code-line" data-slate-object="block" data-key="1635"> <span data-slate-object="text" 
data-key="1636"><span data-slate-leaf="true" data-offset-key="1636:0" data-first-offset="true"><span 
data-slate-string="true">[ OK ] test_is_prime.test1 (1 ms)</span></span></span> </div> <div 
class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" data-key="1637"> 
<span data-slate-object="text" data-key="1638"><span data-slate-leaf="true" data-offset-key="1638:0" 
data-first-offset="true"><span data-slate-string="true">[ FAILED ] test_is_prime.test2 (0 ms)</span></span></span> 
</div> <div class="ps__rail-x" style="left: 0px; bottom: 0px;"> <div class="ps__thumb-x" tabindex="0" 
style="left: 0px; width: 0px;"></div> </div> <div class="ps__rail-y" style="top: 0px; right: 
0px;"> <div class="ps__thumb-y" tabindex="0" style="top: 0px; height: 0px;"></div> </div> </div> 
</div> <div class="se-16533efc " data-slate-type="paragraph" data-slate-object="block" data-key="1639"> 
<span data-slate-object="text" data-key="1640"><span data-slate-leaf="true" data-offset-key="1640:0" 
data-first-offset="true"><span data-slate-string="true">根据输出的信息，我们可知 gtest 会统计每个测试用例运行的时间，并以毫秒为计量单位，输出此时间信息。不仅如此，gtest 
还会输出与测试用例是否正确相关的信息，如果测试用例运行正确，就会输出一行包含 OK 的标志信息，否则就输出一行包含 FAILED 的标志信息。</span></span></span> 
</div> <div class="se-ceba4a6d " data-slate-type="paragraph" data-slate-object="block" data-key="1641"> 
<span data-slate-object="text" data-key="1642"><span data-slate-leaf="true" data-offset-key="1642:0" 
data-first-offset="true"><span data-slate-string="true">根据我们自己测试框架的设计，这行信息只有可能是在 RUN_ALL_TESTS 
函数的 for 循环中，执行完每一个测试用例函数以后输出的信息。</span></span></span> </div> <div class="se-bfe2788c " data-slate-type="paragraph" 
data-slate-object="block" data-key="1643"> <span data-slate-object="text" data-key="1644"><span 
data-slate-leaf="true" data-offset-key="1644:0" data-first-offset="true"><span data-slate-string="true">由此，我们面临的是两个需要解决的问题：</span></span></span> 
</div> <div class="se-649a860d" data-slate-type="list" data-slate-object="block" data-key="1645"> 
<div class="se-c30061c1" data-slate-type="list-line" data-slate-object="block" data-key="1646"> 
<div class="se-655c6c25 se-6202853f" data-code-line-number="1"></div> <div class="se-2151cd5a"> 
<span data-slate-object="text" data-key="1647"><span data-slate-leaf="true" data-offset-key="1647:0" 
data-first-offset="true"><span data-slate-string="true">如何统计函数过程的运行时间？</span></span></span> 
</div> </div> <div class="se-ab5b1bd4" data-slate-type="list-line" data-slate-object="block" 
data-key="1648"> <div class="se-e0e276d3 se-cd10bc25" data-code-line-number="2"></div> <div 
class="se-64e0c53b"> <span data-slate-object="text" data-key="1649"><span data-slate-leaf="true" 
data-offset-key="1649:0" data-first-offset="true"><span data-slate-string="true">如何确定获得每一个测试用例函数的测试结果是否正确？</span></span></span> 
</div> </div> </div> <div class="se-b3ed8ccf " data-slate-type="paragraph" data-slate-object="block" 
data-key="1650"> <span data-slate-object="text" data-key="1651"><span data-slate-leaf="true" 
data-offset-key="1651:0" data-first-offset="true"><span data-slate-string="true">说到如何统计函数过程的运行时间，我这里就需要介绍两个新的知识点，一个是函数 
clock() ，另 一个是宏 CLOCKS_PER_SEC。下面我会对它们详细讲解。</span></span></span> </div> <div class="se-a008a2e5 
" data-slate-type="paragraph" data-slate-object="block" data-key="1652"> <span data-slate-object="text" 
data-key="1653"><span data-slate-leaf="true" data-offset-key="1653:0" data-first-offset="true"><span 
data-slate-string="true">我们先说函数 clock() 。它的返回值代表了：从运行程序开始，到调用 clock() 函数时，经过的 CPU 时钟计时单元。并且，这个 
clock() 函数的返回值，实际上反映的是我们程序的运行时间。那这个 CPU 时钟计时单元究竟是什么呢？你可以把 1 个 CPU 时钟计时单元，简单的理解成是一个单位时间长度，只不过这个单位时间长度，不是我们常说的 
1 秒钟。</span></span></span> </div> <div class="se-b2ff8137 " data-slate-type="paragraph" data-slate-object="block" 
data-key="1654"> <span data-slate-object="text" data-key="1655"><span data-slate-leaf="true" 
data-offset-key="1655:0" data-first-offset="true"><span data-slate-string="true">接下来，我们再说说宏 
CLOCKS_PER_SEC 。它实际上是一个整型值，代表多少个 CPU 时钟计时单元是 1 秒。这个值在不同环境中会有所不同，在早年我的 Windows 电脑上，这个值是 1000，也就是 
1000 个 CPU 时钟计时单位等于 1 秒。而现在我的 Mac 电脑上，这个值是 1000000，也就是 1000000 个 CPU 时钟计时单位等于 1 秒钟。显然，这个数字越大，统计粒度就越精细。</span></span></span> 
</div> <div class="se-2e5805c9 " data-slate-type="paragraph" data-slate-object="block" data-key="1656"> 
<span data-slate-object="text" data-key="1657"><span data-slate-leaf="true" data-offset-key="1657:0" 
data-first-offset="true"><span data-slate-string="true">有了上面这两个工具，我们就可以轻松地统计一个函数的运行时间。在函数运行之前，记录一个 
clock() 值，函数运行结束以后，再记录一个 clock() 值，用两个记录值的差值除以 CLOCKS_PER_SEC ，得到的就是以秒为单位的函数运行时间，再乘以 1000，即为毫秒单位。</span></span></span> 
</div> <div class="se-681135ee " data-slate-type="paragraph" data-slate-object="block" data-key="1658"> 
<span data-slate-object="text" data-key="1659"><span data-slate-leaf="true" data-offset-key="1659:0" 
data-first-offset="true"><span data-slate-string="true">这样呢，我们就解决了刚刚提的第一个问题：统计函数过程的运行时间。</span></span></span> 
</div> <div class="se-88673268 " data-slate-type="paragraph" data-slate-object="block" data-key="1660"> 
<span data-slate-object="text" data-key="1661"><span data-slate-leaf="true" data-offset-key="1661:0" 
data-first-offset="true"><span data-slate-string="true">至于如何获得每一个测试用例的测试结果，我们可以采用一个简单的解决办法，那就是记录一个全局变量，代表测试用例结果正确与否。当测试用例中的 
EXPECT_EQ 断言发生错误时，就修改这个全局变量的值，这样我们的 RUN_ALL_TESTS 函数，就可以在测试用例函数执行结束以后，得知执行过程是否有错。</span></span></span> 
</div> <div class="se-21700908 " data-slate-type="paragraph" data-slate-object="block" data-key="1662"> 
<span data-slate-object="text" data-key="1663"><span data-slate-leaf="true" data-offset-key="1663:0" 
data-first-offset="true"><span data-slate-string="true">综合以上所有信息，我们可以重新设计 RUN_ALL_TESTS 函数如下：</span></span></span> 
</div> <div class="se-f5a9efda se-6a04f118" data-slate-type="pre" data-slate-object="block" 
data-key="1664" data-code-language="cpp"> <div class="se-c72e5d6f se-79ffabf0"> <span></span> 
</div> <div class="se-ab31d724"> <div class="se-06f88aba se-d7a5bff9" data-code-line-number="1"></div> 
<div class="se-06f88aba se-d7a5bff9" data-code-line-number="2"></div> <div class="se-06f88aba 
se-d7a5bff9" data-code-line-number="3"></div> <div class="se-06f88aba se-d7a5bff9" data-code-line-number="4"></div> 
<div class="se-06f88aba se-d7a5bff9" data-code-line-number="5"></div> <div class="se-06f88aba 
se-d7a5bff9" data-code-line-number="6"></div> <div class="se-06f88aba se-d7a5bff9" data-code-line-number="7"></div> 
<div class="se-06f88aba se-d7a5bff9" data-code-line-number="8"></div> <div class="se-06f88aba 
se-d7a5bff9" data-code-line-number="9"></div> <div class="se-06f88aba se-d7a5bff9" data-code-line-number="10"></div> 
<div class="se-06f88aba se-d7a5bff9" data-code-line-number="11"></div> <div class="se-06f88aba 
se-d7a5bff9" data-code-line-number="12"></div> <div class="se-06f88aba se-d7a5bff9" data-code-line-number="13"></div> 
<div class="se-06f88aba se-d7a5bff9" data-code-line-number="14"></div> <div class="se-06f88aba 
se-d7a5bff9" data-code-line-number="15"></div> <div class="se-06f88aba se-d7a5bff9" data-code-line-number="16"></div> 
<div class="se-06f88aba se-d7a5bff9" data-code-line-number="17"></div> <div class="se-06f88aba 
se-d7a5bff9" data-code-line-number="18"></div> <div class="se-06f88aba se-d7a5bff9" data-code-line-number="19"></div> 
<div class="se-06f88aba se-d7a5bff9" data-code-line-number="20"></div> </div> <div class="se-0958b1a0 
ps ps--active-x"> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="1665"> <span data-slate-object="text" data-key="1666"><span data-slate-leaf="true" 
data-offset-key="1666:0" data-first-offset="true"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_2248493309" data-annotation-type="annotation"><span data-slate-string="true">int</span></span></span><span 
data-slate-leaf="true" data-offset-key="1666:1"><span data-slate-string="true"> test_run_flag;</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="1667"> <span data-slate-object="text" data-key="1668"><span data-slate-leaf="true" 
data-offset-key="1668:0" data-first-offset="true"><span class=" gkhl-meta" data-slate-object="annotation" 
data-annotation-key="gkann_7293172073" data-annotation-type="annotation"><span data-slate-string="true">#define 
EXPECT_EQ(a, b) test_run_flag &amp;= ((a) == (b))</span></span></span></span> </div> <div class="se-0a5bf258 
se-466ac03c" data-slate-type="code-line" data-slate-object="block" data-key="1669"> <span data-slate-object="text" 
data-key="1670"></span> </div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" 
data-slate-object="block" data-key="1671"> <span data-slate-object="text" data-key="1672"><span 
data-slate-leaf="true" data-offset-key="1672:0" data-first-offset="true"><span class=" gkhl-function" 
data-slate-object="annotation" data-annotation-key="gkann_5486438191" data-annotation-type="annotation"><span 
class=" gkhl-keyword" data-slate-object="annotation" data-annotation-key="gkann_2345123791" 
data-annotation-type="annotation"><span data-slate-string="true">int</span></span></span></span><span 
data-slate-leaf="true" data-offset-key="1672:1"><span class=" gkhl-function" data-slate-object="annotation" 
data-annotation-key="gkann_5486438191" data-annotation-type="annotation"><span data-slate-string="true"> 
</span></span></span><span data-slate-leaf="true" data-offset-key="1672:2"><span class=" gkhl-title" 
data-slate-object="annotation" data-annotation-key="gkann_9182989897" data-annotation-type="annotation"><span 
class=" gkhl-function" data-slate-object="annotation" data-annotation-key="gkann_5486438191" 
data-annotation-type="annotation"><span data-slate-string="true">RUN_ALL_TESTS</span></span></span></span><span 
data-slate-leaf="true" data-offset-key="1672:3"><span class=" gkhl-function" data-slate-object="annotation" 
data-annotation-key="gkann_5486438191" data-annotation-type="annotation"><span class=" gkhl-params" 
data-slate-object="annotation" data-annotation-key="gkann_8914453601" data-annotation-type="annotation"><span 
data-slate-string="true">()</span></span></span></span><span data-slate-leaf="true" data-offset-key="1672:4"><span 
class=" gkhl-function" data-slate-object="annotation" data-annotation-key="gkann_5486438191" 
data-annotation-type="annotation"><span data-slate-string="true"> </span></span></span><span 
data-slate-leaf="true" data-offset-key="1672:5"><span data-slate-string="true">{</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="1673"> <span data-slate-object="text" data-key="1674"><span data-slate-leaf="true" 
data-offset-key="1674:0" data-first-offset="true"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="1674:1"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_8311235761" data-annotation-type="annotation"><span data-slate-string="true">for</span></span></span><span 
data-slate-leaf="true" data-offset-key="1674:2"><span data-slate-string="true"> (</span></span><span 
data-slate-leaf="true" data-offset-key="1674:3"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_0372741330" data-annotation-type="annotation"><span data-slate-string="true">int</span></span></span><span 
data-slate-leaf="true" data-offset-key="1674:4"><span data-slate-string="true"> i = </span></span><span 
data-slate-leaf="true" data-offset-key="1674:5"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_9508906892" data-annotation-type="annotation"><span data-slate-string="true">0</span></span></span><span 
data-slate-leaf="true" data-offset-key="1674:6"><span data-slate-string="true">; i &lt; test_function_cnt; 
i++) {</span></span></span> </div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" 
data-slate-object="block" data-key="1675"> <span data-slate-object="text" data-key="1676"><span 
data-slate-leaf="true" data-offset-key="1676:0" data-first-offset="true"><span data-slate-string="true"> 
</span></span><span data-slate-leaf="true" data-offset-key="1676:1"><span class=" gkhl-built_in" 
data-slate-object="annotation" data-annotation-key="gkann_5369429148" data-annotation-type="annotation"><span 
data-slate-string="true">printf</span></span></span><span data-slate-leaf="true" data-offset-key="1676:2"><span 
data-slate-string="true">(</span></span><span data-slate-leaf="true" data-offset-key="1676:3"><span 
class=" gkhl-string" data-slate-object="annotation" data-annotation-key="gkann_1584339811" 
data-annotation-type="annotation"><span data-slate-string="true">"[ RUN ] %s\n"</span></span></span><span 
data-slate-leaf="true" data-offset-key="1676:4"><span data-slate-string="true">, test_function_arr[i].name);</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="1677"> <span data-slate-object="text" data-key="1678"><span data-slate-leaf="true" 
data-offset-key="1678:0" data-first-offset="true"><span data-slate-string="true"> test_run_flag 
= </span></span><span data-slate-leaf="true" data-offset-key="1678:1"><span class=" gkhl-number" 
data-slate-object="annotation" data-annotation-key="gkann_4972970322" data-annotation-type="annotation"><span 
data-slate-string="true">1</span></span></span><span data-slate-leaf="true" data-offset-key="1678:2"><span 
data-slate-string="true">;</span></span></span> </div> <div class="se-0a5bf258 se-466ac03c" 
data-slate-type="code-line" data-slate-object="block" data-key="1679"> <span data-slate-object="text" 
data-key="1680"><span data-slate-leaf="true" data-offset-key="1680:0" data-first-offset="true"><span 
data-slate-string="true"> </span></span><span data-slate-leaf="true" data-offset-key="1680:1"><span 
class=" gkhl-keyword" data-slate-object="annotation" data-annotation-key="gkann_4933571630" 
data-annotation-type="annotation"><span data-slate-string="true">long</span></span></span><span 
data-slate-leaf="true" data-offset-key="1680:2"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="1680:3"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_4940657006" data-annotation-type="annotation"><span data-slate-string="true">long</span></span></span><span 
data-slate-leaf="true" data-offset-key="1680:4"><span data-slate-string="true"> t1 = clock();</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="1681"> <span data-slate-object="text" data-key="1682"><span data-slate-leaf="true" 
data-offset-key="1682:0" data-first-offset="true"><span data-slate-string="true"> test_function_arr[i].func();</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="1683"> <span data-slate-object="text" data-key="1684"><span data-slate-leaf="true" 
data-offset-key="1684:0" data-first-offset="true"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="1684:1"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_0483041920" data-annotation-type="annotation"><span data-slate-string="true">long</span></span></span><span 
data-slate-leaf="true" data-offset-key="1684:2"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="1684:3"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_1728993793" data-annotation-type="annotation"><span data-slate-string="true">long</span></span></span><span 
data-slate-leaf="true" data-offset-key="1684:4"><span data-slate-string="true"> t2 = clock();</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="1685"> <span data-slate-object="text" data-key="1686"><span data-slate-leaf="true" 
data-offset-key="1686:0" data-first-offset="true"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="1686:1"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_8165688128" data-annotation-type="annotation"><span data-slate-string="true">if</span></span></span><span 
data-slate-leaf="true" data-offset-key="1686:2"><span data-slate-string="true"> (test_run_flag) 
{</span></span></span> </div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" 
data-slate-object="block" data-key="1687"> <span data-slate-object="text" data-key="1688"><span 
data-slate-leaf="true" data-offset-key="1688:0" data-first-offset="true"><span data-slate-string="true"> 
</span></span><span data-slate-leaf="true" data-offset-key="1688:1"><span class=" gkhl-built_in" 
data-slate-object="annotation" data-annotation-key="gkann_6194306598" data-annotation-type="annotation"><span 
data-slate-string="true">printf</span></span></span><span data-slate-leaf="true" data-offset-key="1688:2"><span 
data-slate-string="true">(</span></span><span data-slate-leaf="true" data-offset-key="1688:3"><span 
class=" gkhl-string" data-slate-object="annotation" data-annotation-key="gkann_5295775854" 
data-annotation-type="annotation"><span data-slate-string="true">"[ OK ] "</span></span></span><span 
data-slate-leaf="true" data-offset-key="1688:4"><span data-slate-string="true">);</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="1689"> <span data-slate-object="text" data-key="1690"><span data-slate-leaf="true" 
data-offset-key="1690:0" data-first-offset="true"><span data-slate-string="true"> } </span></span><span 
data-slate-leaf="true" data-offset-key="1690:1"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_9279146190" data-annotation-type="annotation"><span data-slate-string="true">else</span></span></span><span 
data-slate-leaf="true" data-offset-key="1690:2"><span data-slate-string="true"> {</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="1691"> <span data-slate-object="text" data-key="1692"><span data-slate-leaf="true" 
data-offset-key="1692:0" data-first-offset="true"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="1692:1"><span class=" gkhl-built_in" data-slate-object="annotation" 
data-annotation-key="gkann_2553031297" data-annotation-type="annotation"><span data-slate-string="true">printf</span></span></span><span 
data-slate-leaf="true" data-offset-key="1692:2"><span data-slate-string="true">(</span></span><span 
data-slate-leaf="true" data-offset-key="1692:3"><span class=" gkhl-string" data-slate-object="annotation" 
data-annotation-key="gkann_9241921211" data-annotation-type="annotation"><span data-slate-string="true">"[ 
FAILED ] "</span></span></span><span data-slate-leaf="true" data-offset-key="1692:4"><span 
data-slate-string="true">);</span></span></span> </div> <div class="se-0a5bf258 se-466ac03c" 
data-slate-type="code-line" data-slate-object="block" data-key="1693"> <span data-slate-object="text" 
data-key="1694"><span data-slate-leaf="true" data-offset-key="1694:0" data-first-offset="true"><span 
data-slate-string="true"> }</span></span></span> </div> <div class="se-0a5bf258 se-466ac03c" 
data-slate-type="code-line" data-slate-object="block" data-key="1695"> <span data-slate-object="text" 
data-key="1696"><span data-slate-leaf="true" data-offset-key="1696:0" data-first-offset="true"><span 
data-slate-string="true"> </span></span><span data-slate-leaf="true" data-offset-key="1696:1"><span 
class=" gkhl-built_in" data-slate-object="annotation" data-annotation-key="gkann_7672791545" 
data-annotation-type="annotation"><span data-slate-string="true">printf</span></span></span><span 
data-slate-leaf="true" data-offset-key="1696:2"><span data-slate-string="true">(</span></span><span 
data-slate-leaf="true" data-offset-key="1696:3"><span class=" gkhl-string" data-slate-object="annotation" 
data-annotation-key="gkann_3559236429" data-annotation-type="annotation"><span data-slate-string="true">"%s"</span></span></span><span 
data-slate-leaf="true" data-offset-key="1696:4"><span data-slate-string="true">, test_function_arr[i].name);</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="1697"> <span data-slate-object="text" data-key="1698"><span data-slate-leaf="true" 
data-offset-key="1698:0" data-first-offset="true"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="1698:1"><span class=" gkhl-built_in" data-slate-object="annotation" 
data-annotation-key="gkann_6125199770" data-annotation-type="annotation"><span data-slate-string="true">printf</span></span></span><span 
data-slate-leaf="true" data-offset-key="1698:2"><span data-slate-string="true">(</span></span><span 
data-slate-leaf="true" data-offset-key="1698:3"><span class=" gkhl-string" data-slate-object="annotation" 
data-annotation-key="gkann_0048528643" data-annotation-type="annotation"><span data-slate-string="true">" 
(%.0lf ms)\n\n"</span></span></span><span data-slate-leaf="true" data-offset-key="1698:4"><span 
data-slate-string="true">, </span></span><span data-slate-leaf="true" data-offset-key="1698:5"><span 
class=" gkhl-number" data-slate-object="annotation" data-annotation-key="gkann_6824755294" 
data-annotation-type="annotation"><span data-slate-string="true">1.0</span></span></span><span 
data-slate-leaf="true" data-offset-key="1698:6"><span data-slate-string="true"> * (t2 - t1) 
/ CLOCKS_PER_SEC * </span></span><span data-slate-leaf="true" data-offset-key="1698:7"><span 
class=" gkhl-number" data-slate-object="annotation" data-annotation-key="gkann_3024198858" 
data-annotation-type="annotation"><span data-slate-string="true">1000</span></span></span><span 
data-slate-leaf="true" data-offset-key="1698:8"><span data-slate-string="true">);</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="1699"> <span data-slate-object="text" data-key="1700"><span data-slate-leaf="true" 
data-offset-key="1700:0" data-first-offset="true"><span data-slate-string="true"> }</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="1701"> <span data-slate-object="text" data-key="1702"><span data-slate-leaf="true" 
data-offset-key="1702:0" data-first-offset="true"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="1702:1"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_4362171085" data-annotation-type="annotation"><span data-slate-string="true">return</span></span></span><span 
data-slate-leaf="true" data-offset-key="1702:2"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="1702:3"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_6852790489" data-annotation-type="annotation"><span data-slate-string="true">0</span></span></span><span 
data-slate-leaf="true" data-offset-key="1702:4"><span data-slate-string="true">;</span></span></span> 
</div> <div class="se-0a5bf258 se-466ac03c" data-slate-type="code-line" data-slate-object="block" 
data-key="1703"> <span data-slate-object="text" data-key="1704"><span data-slate-leaf="true" 
data-offset-key="1704:0" data-first-offset="true"><span data-slate-string="true">}</span></span></span> 
</div> <div class="ps__rail-x" style="width: 365px; left: 0px; bottom: 0px;"> <div class="ps__thumb-x" 
tabindex="0" style="left: 0px; width: 227px;"></div> </div> <div class="ps__rail-y" style="top: 
0px; right: 0px;"> <div class="ps__thumb-y" tabindex="0" style="top: 0px; height: 0px;"></div> 
</div> </div> </div> <div class="se-192f32bc " data-slate-type="paragraph" data-slate-object="block" 
data-key="1705"> <span data-slate-object="text" data-key="1706"><span data-slate-leaf="true" 
data-offset-key="1706:0" data-first-offset="true"><span data-slate-string="true">代码中的第 8 行是在测试用例运行之前，记录一个开始时间值 
t1；代码中的第 10 行是在测试用例函数执行完后，记录一个结束时间值 t2；在代码的第 17 行，根据 t1 、t2 以及 CLOCKS_PER_SEC 的值，计算得到测试用例函数实际运行的时间，并输出得到的结果。</span></span></span> 
</div> <div class="se-4ccdb3a2 " data-slate-type="paragraph" data-slate-object="block" data-key="1707"> 
<span data-slate-object="text" data-key="1708"><span data-slate-leaf="true" data-offset-key="1708:0" 
data-first-offset="true"><span data-slate-string="true">这段代码中增加了一个全局变量“test_run_flag”，这个变量每次在测试用例执行之前，都会被初始化为 
1，当测试用例结束执行以后，RUN_ALL_TESTS 函数中，根据 test_run_flag 变量的值，选择输出 OK 或者 FAILED 的标志信息。同时，我们可以看到，test_run_flag 
变量的值只有在 EXPECT_EQ 断言中，才可能被修改。</span></span></span> </div> <h2 class="se-07d15044" data-slate-type="heading" 
data-slate-object="block" data-key="1709"><span data-slate-object="text" data-key="1710"><span 
data-slate-leaf="true" data-offset-key="1710:0" data-first-offset="true"><span data-slate-string="true">EXPECT_EQ 
断言的实现</span></span></span></h2> <div class="se-83a02af7 " data-slate-type="paragraph" data-slate-object="block" 
data-key="1711"> <span data-slate-object="text" data-key="1712"><span data-slate-leaf="true" 
data-offset-key="1712:0" data-first-offset="true"><span data-slate-string="true">最后呢，我们还剩下一个 
EXPECT_EQ 断言的实现，这个就给你留作思考题，请你基于我上述所讲的内容，试试自己实现这个带错误提示输出的 EXPECT_EQ 断言吧。也欢迎你把你的答案写在留言区，我们一起讨论。</span></span></span> 
</div> <h2 class="se-ed30a033" data-slate-type="heading" data-slate-object="block" data-key="1713"><span 
data-slate-object="text" data-key="1714"><span data-slate-leaf="true" data-offset-key="1714:0" 
data-first-offset="true"><span data-slate-string="true">课程小结</span></span></span></h2> <div 
class="se-bdfb9a2d " data-slate-type="paragraph" data-slate-object="block" data-key="1715"> 
<span data-slate-object="text" data-key="1716"><span data-slate-leaf="true" data-offset-key="1716:0" 
data-first-offset="true"><span data-slate-string="true">通过今天的课程呢，我希望你认识到</span></span></span><span 
data-slate-object="text" data-key="1717"><span data-slate-leaf="true" data-offset-key="1717:0" 
data-first-offset="true"><span class="se-9d694988" data-slate-type="bold" data-slate-object="mark"><span 
data-slate-string="true">工程开发中的一个基本原则：功能迭代，数据先行。也就是说，无论我们做什么样的功能开发，首先要考虑的是与数据相关的部分。</span></span></span></span><span 
data-slate-object="text" data-key="1718"><span data-slate-leaf="true" data-offset-key="1718:0" 
data-first-offset="true"><span data-slate-string="true">更细致的解释，就是你考虑某种功能的实现，要明白这个功能都依赖于哪些数据信息，这些信息在哪里存储，在哪里修改，在哪里读取使用。把数据相关部分设计明白了，你的功能开发也就基本实现了一半了。</span></span></span> 
</div> <div class="se-f216fbe3 " data-slate-type="paragraph" data-slate-object="block" data-key="1719"> 
<span data-slate-object="text" data-key="1720"><span data-slate-leaf="true" data-offset-key="1720:0" 
data-first-offset="true"><span data-slate-string="true">就像我们今天改造的第一个功能，输出测试用例的名字。</span></span></span> 
</div> <div class="se-ec436e40 " data-slate-type="paragraph" data-slate-object="block" data-key="1721"> 
<span data-slate-object="text" data-key="1722"><span data-slate-leaf="true" data-offset-key="1722:0" 
data-first-offset="true"><span data-slate-string="true">首先，我们考虑如何存储名字信息，最先被修改的就是 test_function_arr 
数组的数据类型，我们改造了数据存储的结构。然后，我们修改了注册函数的相关功能逻辑，也就是解决了数据的写入与修改过程。最后，我们修改 RUN_ALL_TESTS 中的输出逻辑，也就是解决了数据在哪里读取和使用的事情。</span></span></span> 
</div> <div class="se-17896408 " data-slate-type="paragraph" data-slate-object="block" data-key="1723"> 
<span data-slate-object="text" data-key="1724"><span data-slate-leaf="true" data-offset-key="1724:0" 
data-first-offset="true"><span data-slate-string="true">至此，我已经向你演示了基本的功能迭代开发过程。接下来你可以自己试着，给输出的内容加上点儿颜色，以便更清晰地展示测试过程中的测试信息。除此之外呢，你也可以开动你的创造力，给测试框架加些令人惊喜的功能。</span></span></span> 
</div> <div class="se-72232eac " data-slate-type="paragraph" data-slate-object="block" data-key="1725"> 
<span data-slate-object="text" data-key="1726"><span data-slate-leaf="true" data-offset-key="1726:0" 
data-first-offset="true"><span data-slate-string="true">好了，今天就到这里了，我是胡光，我们下节课见。</span></span></span> 
</div> </div>', body_summary='', bundle='book', delta=0, body_format='full_html', langcode='zh-hans', 
revision_id=768 where entity_id=768 
 {executed in 1 msec}
2020-11-24 18:59:33.550 INFO  jdbc.sqltiming Line:373 - select nodefiledd0_.nid as nid1_10_, nodefiledd0_.changed as changed2_10_, nodefiledd0_.created 
as created3_10_, nodefiledd0_.default_langcode as default_4_10_, nodefiledd0_.langcode as langcode5_10_, 
nodefiledd0_.promote as promote6_10_, nodefiledd0_.revision_translation_affected as revision7_10_, 
nodefiledd0_.status as status8_10_, nodefiledd0_.sticky as sticky9_10_, nodefiledd0_.title 
as title10_10_, nodefiledd0_.type as type11_10_, nodefiledd0_.uid as uid12_10_, nodefiledd0_.vid 
as vid13_10_ from node_field_data nodefiledd0_ where nodefiledd0_.nid=768 
 {executed in 0 msec}
2020-11-24 18:59:33.551 INFO  jdbc.resultsettable Line:610 - 
|----|-----------|-----------|-----------------|---------|--------|------------------------------|-------|-------|------------------------|-----|----|----|
|nid |changed    |created    |default_langcode |langcode |promote |revision_translation_affected |status |sticky |title                   |type |uid |vid |
|----|-----------|-----------|-----------------|---------|--------|------------------------------|-------|-------|------------------------|-----|----|----|
|768 |1606117103 |1606117103 |1                |zh-hans  |0       |1                             |1      |0      |28丨尝试升级（上）：完善测试框架的功能与提示 |book |1   |768 |
|----|-----------|-----------|-----------------|---------|--------|------------------------------|-------|-------|------------------------|-----|----|----|

2020-11-24 18:59:33.552 INFO  jdbc.sqltiming Line:373 - select nodefieldr0_.nid as nid1_11_0_, nodefieldr0_.changed as changed2_11_0_, nodefieldr0_.created 
as created3_11_0_, nodefieldr0_.default_langcode as default_4_11_0_, nodefieldr0_.langcode 
as langcode5_11_0_, nodefieldr0_.promote as promote6_11_0_, nodefieldr0_.revision_translation_affected 
as revision7_11_0_, nodefieldr0_.status as status8_11_0_, nodefieldr0_.sticky as sticky9_11_0_, 
nodefieldr0_.title as title10_11_0_, nodefieldr0_.uid as uid11_11_0_, nodefieldr0_.vid as vid12_11_0_ 
from node_field_revision nodefieldr0_ where nodefieldr0_.nid=768 
 {executed in 1 msec}
2020-11-24 18:59:33.552 INFO  jdbc.resultsettable Line:610 - 
|---------|-----------|-----------|-----------------|---------|--------|------------------------------|-------|-------|------------------------|----|----|
|nid      |changed    |created    |default_langcode |langcode |promote |revision_translation_affected |status |sticky |title                   |uid |vid |
|---------|-----------|-----------|-----------------|---------|--------|------------------------------|-------|-------|------------------------|----|----|
|[unread] |1606117103 |1606117103 |1                |zh-hans  |0       |1                             |1      |0      |28丨尝试升级（上）：完善测试框架的功能与提示 |1   |768 |
|---------|-----------|-----------|-----------------|---------|--------|------------------------------|-------|-------|------------------------|----|----|

2020-11-24 18:59:33.554 INFO  jdbc.sqltiming Line:373 - update node_field_data set changed=1606215573, created=1606215573, default_langcode=1, langcode='zh-hans', 
promote=0, revision_translation_affected=1, status=1, sticky=0, title='28丨尝试升级（上）：完善测试框架的功能与提示', 
type='book', uid=1, vid=768 where nid=768 
 {executed in 0 msec}
2020-11-24 18:59:33.554 INFO  jdbc.sqltiming Line:373 - update node_field_revision set changed=1606215573, created=1606215573, default_langcode=1, 
langcode='zh-hans', promote=0, revision_translation_affected=1, status=1, sticky=0, title='28丨尝试升级（上）：完善测试框架的功能与提示', 
uid=1, vid=768 where nid=768 
 {executed in 0 msec}
2020-11-24 18:59:33.559 INFO  jdbc.sqltiming Line:373 - select bookfieldm0_.entity_id as entity_i1_8_, bookfieldm0_.bundle as bundle2_8_, bookfieldm0_.delta 
as delta3_8_, bookfieldm0_.langcode as langcode4_8_, bookfieldm0_.field_media_value as field_me5_8_, 
bookfieldm0_.revision_id as revision6_8_ from node__field_media bookfieldm0_ where bookfieldm0_.entity_id=768 
 {executed in 0 msec}
2020-11-24 18:59:33.560 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------------|------------|
|entity_id |bundle |delta |langcode |field_media_value |revision_id |
|----------|-------|------|---------|------------------|------------|
|768       |book   |0     |zh-hans  |                  |768         |
|----------|-------|------|---------|------------------|------------|

2020-11-24 18:59:33.562 INFO  jdbc.sqltiming Line:373 - select nodefieldm0_.entity_id as entity_i1_17_0_, nodefieldm0_.bundle as bundle2_17_0_, nodefieldm0_.delta 
as delta3_17_0_, nodefieldm0_.langcode as langcode4_17_0_, nodefieldm0_.field_media_value as 
field_me5_17_0_, nodefieldm0_.revision_id as revision6_17_0_ from node_revision__field_media 
nodefieldm0_ where nodefieldm0_.entity_id=768 
 {executed in 0 msec}
2020-11-24 18:59:33.562 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------------|------------|
|entity_id |bundle |delta |langcode |field_media_value |revision_id |
|----------|-------|------|---------|------------------|------------|
|[unread]  |book   |0     |zh-hans  |                  |768         |
|----------|-------|------|---------|------------------|------------|

2020-11-24 18:59:33.564 INFO  jdbc.sqltiming Line:373 - select bookfieldc0_.entity_id as entity_i1_5_, bookfieldc0_.bundle as bundle2_5_, bookfieldc0_.field_comment_value 
as field_co3_5_, bookfieldc0_.delta as delta4_5_, bookfieldc0_.field_comment_format as field_co5_5_, 
bookfieldc0_.langcode as langcode6_5_, bookfieldc0_.revision_id as revision7_5_ from node__field_comment 
bookfieldc0_ where bookfieldc0_.entity_id=768 
 {executed in 0 msec}
2020-11-24 18:59:33.564 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|--------------------|------|---------------------|---------|------------|
|entity_id |bundle |field_comment_value |delta |field_comment_format |langcode |revision_id |
|----------|-------|--------------------|------|---------------------|---------|------------|
|768       |book   |                    |0     |full_html            |zh-hans  |768         |
|----------|-------|--------------------|------|---------------------|---------|------------|

2020-11-24 18:59:33.566 INFO  jdbc.sqltiming Line:373 - select nodefieldc0_.entity_id as entity_i1_14_0_, nodefieldc0_.bundle as bundle2_14_0_, nodefieldc0_.field_comment_value 
as field_co3_14_0_, nodefieldc0_.delta as delta4_14_0_, nodefieldc0_.field_comment_format as 
field_co5_14_0_, nodefieldc0_.langcode as langcode6_14_0_, nodefieldc0_.revision_id as revision7_14_0_ 
from node_revision__field_comment nodefieldc0_ where nodefieldc0_.entity_id=768 
 {executed in 0 msec}
2020-11-24 18:59:33.567 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|--------------------|------|---------------------|---------|------------|
|entity_id |bundle |field_comment_value |delta |field_comment_format |langcode |revision_id |
|----------|-------|--------------------|------|---------------------|---------|------------|
|[unread]  |book   |                    |0     |full_html            |zh-hans  |768         |
|----------|-------|--------------------|------|---------------------|---------|------------|

2020-11-24 18:59:33.569 INFO  jdbc.sqltiming Line:373 - select bookfieldt0_.entity_id as entity_i1_9_, bookfieldt0_.bundle as bundle2_9_, bookfieldt0_.delta 
as delta3_9_, bookfieldt0_.langcode as langcode4_9_, bookfieldt0_.revision_id as revision5_9_, 
bookfieldt0_.field_thumb_value as field_th6_9_ from node__field_thumb bookfieldt0_ where bookfieldt0_.entity_id=768 
 {executed in 0 msec}
2020-11-24 18:59:33.569 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------|------------------|
|entity_id |bundle |delta |langcode |revision_id |field_thumb_value |
|----------|-------|------|---------|------------|------------------|
|768       |book   |0     |zh-hans  |768         |                  |
|----------|-------|------|---------|------------|------------------|

2020-11-24 18:59:33.571 INFO  jdbc.sqltiming Line:373 - update node__field_thumb set bundle='book', delta=0, langcode='zh-hans', revision_id=768, field_thumb_value='https://static001.geekbang.org/resource/image/72/b0/7293db2a3b12d322fba71d56985041b0.jpg' 
where entity_id=768 
 {executed in 0 msec}
2020-11-24 18:59:33.575 INFO  jdbc.sqltiming Line:373 - select nodefieldt0_.entity_id as entity_i1_18_0_, nodefieldt0_.bundle as bundle2_18_0_, nodefieldt0_.delta 
as delta3_18_0_, nodefieldt0_.langcode as langcode4_18_0_, nodefieldt0_.revision_id as revision5_18_0_, 
nodefieldt0_.field_thumb_value as field_th6_18_0_ from node_revision__field_thumb nodefieldt0_ 
where nodefieldt0_.entity_id=768 
 {executed in 1 msec}
2020-11-24 18:59:33.575 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------|------------------|
|entity_id |bundle |delta |langcode |revision_id |field_thumb_value |
|----------|-------|------|---------|------------|------------------|
|[unread]  |book   |0     |zh-hans  |768         |                  |
|----------|-------|------|---------|------------|------------------|

2020-11-24 18:59:33.577 INFO  jdbc.sqltiming Line:373 - update node_revision__field_thumb set bundle='book', delta=0, langcode='zh-hans', revision_id=768, 
field_thumb_value='https://static001.geekbang.org/resource/image/72/b0/7293db2a3b12d322fba71d56985041b0.jpg' 
where entity_id=768 
 {executed in 0 msec}
2020-11-24 18:59:33.580 INFO  jdbc.sqltiming Line:373 - select bookfieldf0_.entity_id as entity_i1_6_0_, bookfieldf0_.bundle as bundle2_6_0_, bookfieldf0_.delta 
as delta3_6_0_, bookfieldf0_.field_fenlei_target_id as field_fe4_6_0_, bookfieldf0_.langcode 
as langcode5_6_0_, bookfieldf0_.revision_id as revision6_6_0_ from node__field_fenlei bookfieldf0_ 
where bookfieldf0_.entity_id=768 
 {executed in 0 msec}
2020-11-24 18:59:33.581 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------------|---------|------------|
|entity_id |bundle |delta |field_fenlei_target_id |langcode |revision_id |
|----------|-------|------|-----------------------|---------|------------|
|[unread]  |book   |0     |1                      |zh-hans  |768         |
|----------|-------|------|-----------------------|---------|------------|

2020-11-24 18:59:33.583 INFO  jdbc.sqltiming Line:373 - select nodefieldf0_.entity_id as entity_i1_15_0_, nodefieldf0_.bundle as bundle2_15_0_, nodefieldf0_.delta 
as delta3_15_0_, nodefieldf0_.field_fenlei_target_id as field_fe4_15_0_, nodefieldf0_.langcode 
as langcode5_15_0_, nodefieldf0_.revision_id as revision6_15_0_ from node_revision__field_fenlei 
nodefieldf0_ where nodefieldf0_.entity_id=768 
 {executed in 0 msec}
2020-11-24 18:59:33.583 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------------|---------|------------|
|entity_id |bundle |delta |field_fenlei_target_id |langcode |revision_id |
|----------|-------|------|-----------------------|---------|------------|
|[unread]  |book   |0     |1                      |zh-hans  |768         |
|----------|-------|------|-----------------------|---------|------------|

2020-11-24 18:59:33.585 INFO  jdbc.sqltiming Line:373 - select bookchecke0_.item_id as item_id1_2_, bookchecke0_.fsid as fsid2_2_, bookchecke0_.got 
as got3_2_, bookchecke0_.name as name4_2_, bookchecke0_.parse_fail as parse_fa5_2_, bookchecke0_.parsed 
as parsed6_2_, bookchecke0_.path as path7_2_, bookchecke0_.title as title8_2_, bookchecke0_.vid 
as vid9_2_ from book_check bookchecke0_ where bookchecke0_.fsid='908222471288273' and bookchecke0_.name='net_content' 
 {executed in 0 msec}
2020-11-24 18:59:33.585 INFO  jdbc.resultsettable Line:610 - 
|--------|---------|---------|---------|-----------|---------|---------|---------|---------|
|item_id |fsid     |got      |name     |parse_fail |parsed   |path     |title    |vid      |
|--------|---------|---------|---------|-----------|---------|---------|---------|---------|
|769     |[unread] |[unread] |[unread] |[unread]   |[unread] |[unread] |[unread] |[unread] |
|--------|---------|---------|---------|-----------|---------|---------|---------|---------|

2020-11-24 19:04:10.174 INFO  jdbc.sqltiming Line:373 - update book_check set fsid='908222471288273', got=1, name='net_content', parse_fail='', parsed=1, 
path='109-人人都能学会的编程入门课/05丨综合项目篇 (5讲)/29丨尝试升级（下）：“链表”知识在测试框架中的应用.html', title='29丨尝试升级（下）：“链表”知识在测试框架中的应用', 
vid=769 where item_id=769 
 {executed in 0 msec}
2020-11-24 19:04:10.183 INFO  jdbc.sqltiming Line:373 - select nodebodyen0_.entity_id as entity_i1_4_, nodebodyen0_.body_value as body_val2_4_, nodebodyen0_.body_summary 
as body_sum3_4_, nodebodyen0_.bundle as bundle4_4_, nodebodyen0_.delta as delta5_4_, nodebodyen0_.body_format 
as body_for6_4_, nodebodyen0_.langcode as langcode7_4_, nodebodyen0_.revision_id as revision8_4_ 
from node__body nodebodyen0_ where nodebodyen0_.entity_id=769 
 {executed in 0 msec}
2020-11-24 19:04:10.183 INFO  jdbc.resultsettable Line:610 - 
|----------|-----------|-------------|-------|------|------------|---------|------------|
|entity_id |body_value |body_summary |bundle |delta |body_format |langcode |revision_id |
|----------|-----------|-------------|-------|------|------------|---------|------------|
|769       |           |             |book   |0     |full_html   |zh-hans  |769         |
|----------|-----------|-------------|-------|------|------------|---------|------------|

2020-11-24 19:04:10.184 INFO  jdbc.sqltiming Line:373 - select nodebodyre0_.entity_id as entity_i1_13_0_, nodebodyre0_.body_value as body_val2_13_0_, 
nodebodyre0_.body_summary as body_sum3_13_0_, nodebodyre0_.bundle as bundle4_13_0_, nodebodyre0_.delta 
as delta5_13_0_, nodebodyre0_.body_format as body_for6_13_0_, nodebodyre0_.langcode as langcode7_13_0_, 
nodebodyre0_.revision_id as revision8_13_0_ from node_revision__body nodebodyre0_ where nodebodyre0_.entity_id=769 
 {executed in 0 msec}
2020-11-24 19:04:10.184 INFO  jdbc.resultsettable Line:610 - 
|----------|-----------|-------------|-------|------|------------|---------|------------|
|entity_id |body_value |body_summary |bundle |delta |body_format |langcode |revision_id |
|----------|-----------|-------------|-------|------|------------|---------|------------|
|[unread]  |           |             |book   |0     |full_html   |zh-hans  |769         |
|----------|-----------|-------------|-------|------|------------|---------|------------|

2020-11-24 19:04:10.190 INFO  jdbc.sqltiming Line:373 - update node__body set body_value='<div data-slate-editor="true" data-key="611" autocorrect="off" 
spellcheck="false" data-gramm="false" style="outline: none; white-space: pre-wrap; overflow-wrap: 
break-word;"> <div class="se-f6da8f95 " data-slate-type="paragraph" data-slate-object="block" 
data-key="612"> <span data-slate-object="text" data-key="613"><span data-slate-leaf="true" 
data-offset-key="613:0" data-first-offset="true"><span data-slate-string="true">你好，我是胡光，欢迎回来。</span></span></span> 
</div> <div class="se-b44db160 " data-slate-type="paragraph" data-slate-object="block" data-key="614"> 
<span data-slate-object="text" data-key="615"><span data-slate-leaf="true" data-offset-key="615:0" 
data-first-offset="true"><span data-slate-string="true">上节课中，我们通过参考 gtest 的输出，完善了我们自己的测试框架的输出信息，也就是添加了测试用例的名称、运行结果以及运行时间。并且，我提到了在一般情况下，项目中的功能开发原则：</span></span></span><span 
data-slate-object="text" data-key="616"><span data-slate-leaf="true" data-offset-key="616:0" 
data-first-offset="true"><span class="se-b24d5161" data-slate-type="bold" data-slate-object="mark"><span 
data-slate-string="true">功能迭代，数据先行</span></span></span></span><span data-slate-object="text" 
data-key="617"><span data-slate-leaf="true" data-offset-key="617:0" data-first-offset="true"><span 
data-slate-string="true">。就是要开发新的功能之前，我们应该先考虑清楚实现这部分功能相关的数据，在系统中的存储与使用的情况，只有这样，才能更好地完成功能的实现与迭代优化。</span></span></span> 
</div> <div class="se-6d8c877e " data-slate-type="paragraph" data-slate-object="block" data-key="618"> 
<span data-slate-object="text" data-key="619"><span data-slate-leaf="true" data-offset-key="619:0" 
data-first-offset="true"><span data-slate-string="true">今天迎来我们整个测试框架项目的最后一节课。这节课的目的，一是对前几节课内容进行一个总结，二是向你说明我们现在开发的测试框架代码，其实还有很多优化的空间。至于这个优化空间是什么呢？这次我将带着你结合之前学习的“链表”知识，对测试框架进行一个具体的优化改进。</span></span></span> 
</div> <div class="se-cd5aec3c " data-slate-type="paragraph" data-slate-object="block" data-key="620"> 
<span data-slate-object="text" data-key="621"><span data-slate-leaf="true" data-offset-key="621:0" 
data-first-offset="true"><span data-slate-string="true">关于测试框架的优化，是一个不断学习的过程。在这个过程中，你深刻体会到“知不足，然后能自反也”这句话的含义。就是在优化代码的过程中，你会发现自己的不足，然后努力提高自己的能力去弥补不足；当你提升了自己之后，你又会看到自己在其他方面的不足，进而继续提高自己。</span></span></span> 
</div> <div class="se-df197c27 " data-slate-type="paragraph" data-slate-object="block" data-key="622"> 
<span data-slate-object="text" data-key="623"><span data-slate-leaf="true" data-offset-key="623:0" 
data-first-offset="true"><span data-slate-string="true">好了，废话不多说，我们正式开始今天的学习。</span></span></span> 
</div> <h2 class="se-9c12ef98" data-slate-type="heading" data-slate-object="block" data-key="624"><span 
data-slate-object="text" data-key="625"><span data-slate-leaf="true" data-offset-key="625:0" 
data-first-offset="true"><span data-slate-string="true">揭晓答案：EXPECT_EQ 宏究竟是如何实现的</span></span></span></h2> 
<div class="se-09d88e48 " data-slate-type="paragraph" data-slate-object="block" data-key="626"> 
<span data-slate-object="text" data-key="627"><span data-slate-leaf="true" data-offset-key="627:0" 
data-first-offset="true"><span data-slate-string="true">在对测试框架进行优化之前呢，我先来回答一下，可能困扰了你两节课的一个问题：就是 
EXPECT_EQ 宏究竟是如何实现的？这个问题的答案呢，我给出一个可行的实现，仅供参考。</span></span></span> </div> <div class="se-bed68031 
" data-slate-type="paragraph" data-slate-object="block" data-key="628"> <span data-slate-object="text" 
data-key="629"><span data-slate-leaf="true" data-offset-key="629:0" data-first-offset="true"><span 
data-slate-string="true">首先，EXPECT_EQ(a, b) 在 a，b 两部分值相等的时候，不会产生额外的输出信息，而当 a，b 两部分不相等的时候，就会输出相应的提示信息。如下所示：</span></span></span> 
</div> <div class="se-e83d291b se-0c340023" data-slate-type="pre" data-slate-object="block" 
data-key="630" data-code-language="sql"> <div class="se-e8d85f28 se-04bd23c8"> <span></span> 
</div> <div class="se-b60837b4"> <div class="se-3ef0f7be se-6f6dbc4c" data-code-line-number="1"></div> 
<div class="se-3ef0f7be se-6f6dbc4c" data-code-line-number="2"></div> <div class="se-3ef0f7be 
se-6f6dbc4c" data-code-line-number="3"></div> <div class="se-3ef0f7be se-6f6dbc4c" data-code-line-number="4"></div> 
<div class="se-3ef0f7be se-6f6dbc4c" data-code-line-number="5"></div> </div> <div class="se-f6f06147 
ps"> <div class="se-115fc16c se-06d99b0c" data-slate-type="code-line" data-slate-object="block" 
data-key="631"> <span data-slate-object="text" data-key="632"><span data-slate-leaf="true" 
data-offset-key="632:0" data-first-offset="true"><span data-slate-string="true">gtest_test.cpp:25: 
Failure</span></span></span> </div> <div class="se-115fc16c se-06d99b0c" data-slate-type="code-line" 
data-slate-object="block" data-key="633"> <span data-slate-object="text" data-key="634"><span 
data-slate-leaf="true" data-offset-key="634:0" data-first-offset="true"><span data-slate-string="true">Expected 
equality of these </span></span><span data-slate-leaf="true" data-offset-key="634:1"><span 
class=" gkhl-keyword" data-slate-object="annotation" data-annotation-key="gkann_5315305890" 
data-annotation-type="annotation"><span data-slate-string="true">values</span></span></span><span 
data-slate-leaf="true" data-offset-key="634:2"><span data-slate-string="true">:</span></span></span> 
</div> <div class="se-115fc16c se-06d99b0c" data-slate-type="code-line" data-slate-object="block" 
data-key="635"> <span data-slate-object="text" data-key="636"><span data-slate-leaf="true" 
data-offset-key="636:0" data-first-offset="true"><span data-slate-string="true"> is_prime(</span></span><span 
data-slate-leaf="true" data-offset-key="636:1"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_3806038567" data-annotation-type="annotation"><span data-slate-string="true">4</span></span></span><span 
data-slate-leaf="true" data-offset-key="636:2"><span data-slate-string="true">)</span></span></span> 
</div> <div class="se-115fc16c se-06d99b0c" data-slate-type="code-line" data-slate-object="block" 
data-key="637"> <span data-slate-object="text" data-key="638"><span data-slate-leaf="true" 
data-offset-key="638:0" data-first-offset="true"><span data-slate-string="true"> Which </span></span><span 
data-slate-leaf="true" data-offset-key="638:1"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_1536362423" data-annotation-type="annotation"><span data-slate-string="true">is</span></span></span><span 
data-slate-leaf="true" data-offset-key="638:2"><span data-slate-string="true">: </span></span><span 
data-slate-leaf="true" data-offset-key="638:3"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_9693169303" data-annotation-type="annotation"><span data-slate-string="true">1</span></span></span></span> 
</div> <div class="se-115fc16c se-06d99b0c" data-slate-type="code-line" data-slate-object="block" 
data-key="639"> <span data-slate-object="text" data-key="640"><span data-slate-leaf="true" 
data-offset-key="640:0" data-first-offset="true"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="640:1"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_7305529292" data-annotation-type="annotation"><span data-slate-string="true">0</span></span></span></span> 
</div> <div class="ps__rail-x" style="left: 0px; bottom: 0px;"> <div class="ps__thumb-x" tabindex="0" 
style="left: 0px; width: 0px;"></div> </div> <div class="ps__rail-y" style="top: 0px; right: 
0px;"> <div class="ps__thumb-y" tabindex="0" style="top: 0px; height: 0px;"></div> </div> </div> 
</div> <div class="se-2dacdf9e " data-slate-type="paragraph" data-slate-object="block" data-key="641"> 
<span data-slate-object="text" data-key="642"><span data-slate-leaf="true" data-offset-key="642:0" 
data-first-offset="true"><span data-slate-string="true">这段输出信息，对应的是源代码中的 “EXPECT_EQ(is_prime(4), 
0); ”的输出。如你所见，第 1 行的输出内容包含了源文件名（gtest_test.cpp），EXPECT_EQ 宏所在的代码位置（25），以及一个提示结果（Failure）。</span></span></span> 
</div> <div class="se-f35660c1 " data-slate-type="paragraph" data-slate-object="block" data-key="643"> 
<span data-slate-object="text" data-key="644"><span data-slate-leaf="true" data-offset-key="644:0" 
data-first-offset="true"><span data-slate-string="true">接下来的信息，你自己就可以看懂了，就是关于 EXPECT_EQ 传入两部分的值。对于函数调用部分，EXPECE_EQ 
会输出这个函数的调用形式及返回值信息，也就是输出中的 “is_prime(4)”“Which is: 1” 这段内容。而对于数值信息，只会输出数值信息本身，也就是输出信息中第 5 行的那个 
0。</span></span></span> </div> <div class="se-a0008509 " data-slate-type="paragraph" data-slate-object="block" 
data-key="645"> <span data-slate-object="text" data-key="646"><span data-slate-leaf="true" 
data-offset-key="646:0" data-first-offset="true"><span data-slate-string="true">实际上，要想在宏中实现类似于这种根据传入参数类型，选择输出形式的功能，对于现在的你来说可能有点困难。所以，我们可以重新设计一种输出形式，只要能够清晰地展示错误信息就可以。</span></span></span> 
</div> <div class="se-d03110b7 " data-slate-type="paragraph" data-slate-object="block" data-key="647"> 
<span data-slate-object="text" data-key="648"><span data-slate-leaf="true" data-offset-key="648:0" 
data-first-offset="true"><span data-slate-string="true">重新设计的输出提示，如下所示：</span></span></span> 
</div> <div class="se-b215b78e se-ac883f7b" data-slate-type="pre" data-slate-object="block" 
data-key="649" data-code-language="python"> <div class="se-f31f1980 se-e20a55bd"> <span></span> 
</div> <div class="se-b8d3e017"> <div class="se-6b5c807a se-0331fb2c" data-code-line-number="1"></div> 
<div class="se-6b5c807a se-0331fb2c" data-code-line-number="2"></div> <div class="se-6b5c807a 
se-0331fb2c" data-code-line-number="3"></div> </div> <div class="se-154f7c50 ps"> <div class="se-115fc16c 
se-06d99b0c" data-slate-type="code-line" data-slate-object="block" data-key="650"> <span data-slate-object="text" 
data-key="651"><span data-slate-leaf="true" data-offset-key="651:0" data-first-offset="true"><span 
data-slate-string="true">gtest_test.cpp:</span></span><span data-slate-leaf="true" data-offset-key="651:1"><span 
class=" gkhl-number" data-slate-object="annotation" data-annotation-key="gkann_2524007011" 
data-annotation-type="annotation"><span data-slate-string="true">25</span></span></span><span 
data-slate-leaf="true" data-offset-key="651:2"><span data-slate-string="true">: Failure</span></span></span> 
</div> <div class="se-115fc16c se-06d99b0c" data-slate-type="code-line" data-slate-object="block" 
data-key="652"> <span data-slate-object="text" data-key="653"><span data-slate-leaf="true" 
data-offset-key="653:0" data-first-offset="true"><span data-slate-string="true">Expected (is_prime(</span></span><span 
data-slate-leaf="true" data-offset-key="653:1"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_0850861014" data-annotation-type="annotation"><span data-slate-string="true">4</span></span></span><span 
data-slate-leaf="true" data-offset-key="653:2"><span data-slate-string="true">) == </span></span><span 
data-slate-leaf="true" data-offset-key="653:3"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_8945297097" data-annotation-type="annotation"><span data-slate-string="true">0</span></span></span><span 
data-slate-leaf="true" data-offset-key="653:4"><span data-slate-string="true">):</span></span></span> 
</div> <div class="se-115fc16c se-06d99b0c" data-slate-type="code-line" data-slate-object="block" 
data-key="654"> <span data-slate-object="text" data-key="655"><span data-slate-leaf="true" 
data-offset-key="655:0" data-first-offset="true"><span data-slate-string="true"> Which </span></span><span 
data-slate-leaf="true" data-offset-key="655:1"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_6405389263" data-annotation-type="annotation"><span data-slate-string="true">is</span></span></span><span 
data-slate-leaf="true" data-offset-key="655:2"><span data-slate-string="true">: (</span></span><span 
data-slate-leaf="true" data-offset-key="655:3"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_4387718237" data-annotation-type="annotation"><span data-slate-string="true">1</span></span></span><span 
data-slate-leaf="true" data-offset-key="655:4"><span data-slate-string="true"> == </span></span><span 
data-slate-leaf="true" data-offset-key="655:5"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_5539789486" data-annotation-type="annotation"><span data-slate-string="true">0</span></span></span><span 
data-slate-leaf="true" data-offset-key="655:6"><span data-slate-string="true">)</span></span></span> 
</div> <div class="ps__rail-x" style="left: 0px; bottom: 0px;"> <div class="ps__thumb-x" tabindex="0" 
style="left: 0px; width: 0px;"></div> </div> <div class="ps__rail-y" style="top: 0px; right: 
0px;"> <div class="ps__thumb-y" tabindex="0" style="top: 0px; height: 0px;"></div> </div> </div> 
</div> <div class="se-4c617fdf " data-slate-type="paragraph" data-slate-object="block" data-key="656"> 
<span data-slate-object="text" data-key="657"><span data-slate-leaf="true" data-offset-key="657:0" 
data-first-offset="true"><span data-slate-string="true">修改完以后的输出信息，你可以看到，第 2 行就是传入 EXPECT_EQ 
宏两部分的比较，第 3 行是这两部分实际输出值的比较。</span></span></span> </div> <div class="se-82ea2b13 " data-slate-type="paragraph" 
data-slate-object="block" data-key="658"> <span data-slate-object="text" data-key="659"><span 
data-slate-leaf="true" data-offset-key="659:0" data-first-offset="true"><span data-slate-string="true">重新设计了输出信息以后，就可以来看看 
EXPECT_EQ 宏的实现了：</span></span></span> </div> <div class="se-7d2ce0cf se-56bb6f20" data-slate-type="pre" 
data-slate-object="block" data-key="660" data-code-language="python"> <div class="se-59cd8977 
se-1cb87b86"> <span></span> </div> <div class="se-97022ab6"> <div class="se-f31bf68e se-8bd48ce0" 
data-code-line-number="1"></div> <div class="se-f31bf68e se-8bd48ce0" data-code-line-number="2"></div> 
<div class="se-f31bf68e se-8bd48ce0" data-code-line-number="3"></div> <div class="se-f31bf68e 
se-8bd48ce0" data-code-line-number="4"></div> <div class="se-f31bf68e se-8bd48ce0" data-code-line-number="5"></div> 
<div class="se-f31bf68e se-8bd48ce0" data-code-line-number="6"></div> <div class="se-f31bf68e 
se-8bd48ce0" data-code-line-number="7"></div> <div class="se-f31bf68e se-8bd48ce0" data-code-line-number="8"></div> 
<div class="se-f31bf68e se-8bd48ce0" data-code-line-number="9"></div> <div class="se-f31bf68e 
se-8bd48ce0" data-code-line-number="10"></div> <div class="se-f31bf68e se-8bd48ce0" data-code-line-number="11"></div> 
<div class="se-f31bf68e se-8bd48ce0" data-code-line-number="12"></div> <div class="se-f31bf68e 
se-8bd48ce0" data-code-line-number="13"></div> </div> <div class="se-1cb88b6e ps ps--active-x"> 
<div class="se-115fc16c se-06d99b0c" data-slate-type="code-line" data-slate-object="block" 
data-key="661"> <span data-slate-object="text" data-key="662"><span data-slate-leaf="true" 
data-offset-key="662:0" data-first-offset="true"><span class=" gkhl-comment" data-slate-object="annotation" 
data-annotation-key="gkann_0930514344" data-annotation-type="annotation"><span data-slate-string="true">#define 
EXPECT(a, b, comp) { \</span></span></span></span> </div> <div class="se-115fc16c se-06d99b0c" 
data-slate-type="code-line" data-slate-object="block" data-key="663"> <span data-slate-object="text" 
data-key="664"><span data-slate-leaf="true" data-offset-key="664:0" data-first-offset="true"><span 
data-slate-string="true"> __typeof(a) val_a = (a), val_b = (b); \</span></span></span> </div> 
<div class="se-115fc16c se-06d99b0c" data-slate-type="code-line" data-slate-object="block" 
data-key="665"> <span data-slate-object="text" data-key="666"><span data-slate-leaf="true" 
data-offset-key="666:0" data-first-offset="true"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="666:1"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_9992613298" data-annotation-type="annotation"><span data-slate-string="true">if</span></span></span><span 
data-slate-leaf="true" data-offset-key="666:2"><span data-slate-string="true"> (!(val_a comp 
val_b)) { \</span></span></span> </div> <div class="se-115fc16c se-06d99b0c" data-slate-type="code-line" 
data-slate-object="block" data-key="667"> <span data-slate-object="text" data-key="668"><span 
data-slate-leaf="true" data-offset-key="668:0" data-first-offset="true"><span data-slate-string="true"> 
printf(</span></span><span data-slate-leaf="true" data-offset-key="668:1"><span class=" gkhl-string" 
data-slate-object="annotation" data-annotation-key="gkann_7760876582" data-annotation-type="annotation"><span 
data-slate-string="true">"%s:%d: Failure\n"</span></span></span><span data-slate-leaf="true" 
data-offset-key="668:2"><span data-slate-string="true">, __FILE__, __LINE__); \</span></span></span> 
</div> <div class="se-115fc16c se-06d99b0c" data-slate-type="code-line" data-slate-object="block" 
data-key="669"> <span data-slate-object="text" data-key="670"><span data-slate-leaf="true" 
data-offset-key="670:0" data-first-offset="true"><span data-slate-string="true"> printf(</span></span><span 
data-slate-leaf="true" data-offset-key="670:1"><span class=" gkhl-string" data-slate-object="annotation" 
data-annotation-key="gkann_9105787157" data-annotation-type="annotation"><span data-slate-string="true">"Expected 
(%s %s %s):\n"</span></span></span><span data-slate-leaf="true" data-offset-key="670:2"><span 
data-slate-string="true">, </span></span><span data-slate-leaf="true" data-offset-key="670:3"><span 
class=" gkhl-comment" data-slate-object="annotation" data-annotation-key="gkann_0881726880" 
data-annotation-type="annotation"><span data-slate-string="true">#a, #comp, #b); \</span></span></span></span> 
</div> <div class="se-115fc16c se-06d99b0c" data-slate-type="code-line" data-slate-object="block" 
data-key="671"> <span data-slate-object="text" data-key="672"><span data-slate-leaf="true" 
data-offset-key="672:0" data-first-offset="true"><span data-slate-string="true"> printf(</span></span><span 
data-slate-leaf="true" data-offset-key="672:1"><span class=" gkhl-string" data-slate-object="annotation" 
data-annotation-key="gkann_8825261279" data-annotation-type="annotation"><span data-slate-string="true">" 
Which is: (%d %s %d)\n"</span></span></span><span data-slate-leaf="true" data-offset-key="672:2"><span 
data-slate-string="true">, val_a, </span></span><span data-slate-leaf="true" data-offset-key="672:3"><span 
class=" gkhl-comment" data-slate-object="annotation" data-annotation-key="gkann_5389160832" 
data-annotation-type="annotation"><span data-slate-string="true">#comp, val_b); \</span></span></span></span> 
</div> <div class="se-115fc16c se-06d99b0c" data-slate-type="code-line" data-slate-object="block" 
data-key="673"> <span data-slate-object="text" data-key="674"><span data-slate-leaf="true" 
data-offset-key="674:0" data-first-offset="true"><span data-slate-string="true"> test_run_flag 
= </span></span><span data-slate-leaf="true" data-offset-key="674:1"><span class=" gkhl-number" 
data-slate-object="annotation" data-annotation-key="gkann_5491699096" data-annotation-type="annotation"><span 
data-slate-string="true">0</span></span></span><span data-slate-leaf="true" data-offset-key="674:2"><span 
data-slate-string="true">; \</span></span></span> </div> <div class="se-115fc16c se-06d99b0c" 
data-slate-type="code-line" data-slate-object="block" data-key="675"> <span data-slate-object="text" 
data-key="676"><span data-slate-leaf="true" data-offset-key="676:0" data-first-offset="true"><span 
data-slate-string="true"> } \</span></span></span> </div> <div class="se-115fc16c se-06d99b0c" 
data-slate-type="code-line" data-slate-object="block" data-key="677"> <span data-slate-object="text" 
data-key="678"><span data-slate-leaf="true" data-offset-key="678:0" data-first-offset="true"><span 
data-slate-string="true">}</span></span></span> </div> <div class="se-115fc16c se-06d99b0c" 
data-slate-type="code-line" data-slate-object="block" data-key="679"> <span data-slate-object="text" 
data-key="680"><span data-slate-leaf="true" data-offset-key="680:0" data-first-offset="true"><span 
class=" gkhl-comment" data-slate-object="annotation" data-annotation-key="gkann_3252151973" 
data-annotation-type="annotation"><span data-slate-string="true">#define EXPECT_EQ(a, b) EXPECT(a, 
b, ==)</span></span></span></span> </div> <div class="se-115fc16c se-06d99b0c" data-slate-type="code-line" 
data-slate-object="block" data-key="681"> <span data-slate-object="text" data-key="682"><span 
data-slate-leaf="true" data-offset-key="682:0" data-first-offset="true"><span class=" gkhl-comment" 
data-slate-object="annotation" data-annotation-key="gkann_8398138757" data-annotation-type="annotation"><span 
data-slate-string="true">#define EXPECT_LT(a, b) EXPECT(a, b, &lt;)</span></span></span></span> 
</div> <div class="se-115fc16c se-06d99b0c" data-slate-type="code-line" data-slate-object="block" 
data-key="683"> <span data-slate-object="text" data-key="684"><span data-slate-leaf="true" 
data-offset-key="684:0" data-first-offset="true"><span class=" gkhl-comment" data-slate-object="annotation" 
data-annotation-key="gkann_6705504829" data-annotation-type="annotation"><span data-slate-string="true">#define 
EXPECT_GT(a, b) EXPECT(a, b, &gt;)</span></span></span></span> </div> <div class="se-115fc16c 
se-06d99b0c" data-slate-type="code-line" data-slate-object="block" data-key="685"> <span data-slate-object="text" 
data-key="686"><span data-slate-leaf="true" data-offset-key="686:0" data-first-offset="true"><span 
class=" gkhl-comment" data-slate-object="annotation" data-annotation-key="gkann_4165050475" 
data-annotation-type="annotation"><span data-slate-string="true">#define EXPECT_NE(a, b) EXPECT(a, 
b, !=)</span></span></span></span> </div> <div class="ps__rail-x" style="width: 365px; left: 
0px; bottom: 0px;"> <div class="ps__thumb-x" tabindex="0" style="left: 0px; width: 251px;"></div> 
</div> <div class="ps__rail-y" style="top: 0px; right: 0px;"> <div class="ps__thumb-y" tabindex="0" 
style="top: 0px; height: 0px;"></div> </div> </div> </div> <div class="se-6daffbd1 " data-slate-type="paragraph" 
data-slate-object="block" data-key="687"> <span data-slate-object="text" data-key="688"><span 
data-slate-leaf="true" data-offset-key="688:0" data-first-offset="true"><span data-slate-string="true">在这段实现中，你会发现，我们不仅实现了 
EXPECT_EQ，还额外实现了 EXPECT_LT、EXPECT_GT、EXPECT_NE 等用于比较的宏。其中，LT 是英文 little 的缩写，是判断小于关系的；GT 是 great 
的缩写，是判断大于关系的；NE 是 not equal 的缩写，是判断不等于关系的。而这些所有的宏，都是基于 EXPECT 宏实现的。</span></span></span> </div> 
<div class="se-875d6e96 " data-slate-type="paragraph" data-slate-object="block" data-key="689"> 
<span data-slate-object="text" data-key="690"><span data-slate-leaf="true" data-offset-key="690:0" 
data-first-offset="true"><span data-slate-string="true">我们将用于比较的运算符，当作参数传递给 EXPECT 宏。有了 EXPECT 
宏以后，你就可以参考代码中的第 10～13 行的内容，轻松地扩展出用于小于等于或者大于等于的宏了。由于 EXPECT 宏的实现，全都是我们之前学习过的知识点，所以在这里我就不再赘述了，你可以自行阅读文稿中的代码。</span></span></span> 
</div> <h2 class="se-16e22c06" data-slate-type="heading" data-slate-object="block" data-key="691"><span 
data-slate-object="text" data-key="692"><span data-slate-leaf="true" data-offset-key="692:0" 
data-first-offset="true"><span data-slate-string="true">用链表存储测试用例</span></span></span></h2> 
<div class="se-3d53efa0 " data-slate-type="paragraph" data-slate-object="block" data-key="693"> 
<span data-slate-object="text" data-key="694"><span data-slate-leaf="true" data-offset-key="694:0" 
data-first-offset="true"><span data-slate-string="true">看完了 EXPECT 宏的参考实现以后，整个测试框架的基础功能，就算是彻底搭建完成了。</span></span></span> 
</div> <div class="se-bc458f80 " data-slate-type="paragraph" data-slate-object="block" data-key="695"> 
<span data-slate-object="text" data-key="696"><span data-slate-leaf="true" data-offset-key="696:0" 
data-first-offset="true"><span data-slate-string="true">接下来，我们再重新审视下面这段函数指针数组 test_function_arr 
的代码设计，来思考一下这个测试框架中还有没有可以优化的地方。</span></span></span> </div> <div class="se-eadc7655 se-5472005d" 
data-slate-type="pre" data-slate-object="block" data-key="697" data-code-language="cpp"> <div 
class="se-1be81d49 se-ba6ce65c"> <span></span> </div> <div class="se-8a520ab4"> <div class="se-4a509eb1 
se-43924b0c" data-code-line-number="1"></div> <div class="se-4a509eb1 se-43924b0c" data-code-line-number="2"></div> 
<div class="se-4a509eb1 se-43924b0c" data-code-line-number="3"></div> <div class="se-4a509eb1 
se-43924b0c" data-code-line-number="4"></div> <div class="se-4a509eb1 se-43924b0c" data-code-line-number="5"></div> 
</div> <div class="se-b9367190 ps ps--active-x"> <div class="se-115fc16c se-06d99b0c" data-slate-type="code-line" 
data-slate-object="block" data-key="698"> <span data-slate-object="text" data-key="699"><span 
data-slate-leaf="true" data-offset-key="699:0" data-first-offset="true"><span class=" gkhl-class" 
data-slate-object="annotation" data-annotation-key="gkann_1028904193" data-annotation-type="annotation"><span 
class=" gkhl-keyword" data-slate-object="annotation" data-annotation-key="gkann_0919315412" 
data-annotation-type="annotation"><span data-slate-string="true">struct</span></span></span></span><span 
data-slate-leaf="true" data-offset-key="699:1"><span class=" gkhl-class" data-slate-object="annotation" 
data-annotation-key="gkann_1028904193" data-annotation-type="annotation"><span data-slate-string="true"> 
</span></span></span><span data-slate-leaf="true" data-offset-key="699:2"><span class=" gkhl-class" 
data-slate-object="annotation" data-annotation-key="gkann_1028904193" data-annotation-type="annotation"><span 
class=" gkhl-title" data-slate-object="annotation" data-annotation-key="gkann_0509130069" data-annotation-type="annotation"><span 
data-slate-string="true">test_function_info_t</span></span></span></span><span data-slate-leaf="true" 
data-offset-key="699:3"><span class=" gkhl-class" data-slate-object="annotation" data-annotation-key="gkann_1028904193" 
data-annotation-type="annotation"><span data-slate-string="true"> {</span></span></span></span> 
</div> <div class="se-115fc16c se-06d99b0c" data-slate-type="code-line" data-slate-object="block" 
data-key="700"> <span data-slate-object="text" data-key="701"><span data-slate-leaf="true" 
data-offset-key="701:0" data-first-offset="true"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="701:1"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_4756963001" data-annotation-type="annotation"><span data-slate-string="true">test_function_t</span></span></span><span 
data-slate-leaf="true" data-offset-key="701:2"><span data-slate-string="true"> func; </span></span><span 
data-slate-leaf="true" data-offset-key="701:3"><span class=" gkhl-comment" data-slate-object="annotation" 
data-annotation-key="gkann_1162170555" data-annotation-type="annotation"><span data-slate-string="true">// 
测试用例函数指针，指向测试用例函数</span></span></span></span> </div> <div class="se-115fc16c se-06d99b0c" data-slate-type="code-line" 
data-slate-object="block" data-key="702"> <span data-slate-object="text" data-key="703"><span 
data-slate-leaf="true" data-offset-key="703:0" data-first-offset="true"><span data-slate-string="true"> 
</span></span><span data-slate-leaf="true" data-offset-key="703:1"><span class=" gkhl-keyword" 
data-slate-object="annotation" data-annotation-key="gkann_6577029244" data-annotation-type="annotation"><span 
data-slate-string="true">const</span></span></span><span data-slate-leaf="true" data-offset-key="703:2"><span 
data-slate-string="true"> </span></span><span data-slate-leaf="true" data-offset-key="703:3"><span 
class=" gkhl-keyword" data-slate-object="annotation" data-annotation-key="gkann_7748940888" 
data-annotation-type="annotation"><span data-slate-string="true">char</span></span></span><span 
data-slate-leaf="true" data-offset-key="703:4"><span data-slate-string="true"> *name; </span></span><span 
data-slate-leaf="true" data-offset-key="703:5"><span class=" gkhl-comment" data-slate-object="annotation" 
data-annotation-key="gkann_5676941389" data-annotation-type="annotation"><span data-slate-string="true">// 
指向测试用例名称</span></span></span></span> </div> <div class="se-115fc16c se-06d99b0c" data-slate-type="code-line" 
data-slate-object="block" data-key="704"> <span data-slate-object="text" data-key="705"><span 
data-slate-leaf="true" data-offset-key="705:0" data-first-offset="true"><span data-slate-string="true">} 
test_function_arr[</span></span><span data-slate-leaf="true" data-offset-key="705:1"><span 
class=" gkhl-number" data-slate-object="annotation" data-annotation-key="gkann_7946641458" 
data-annotation-type="annotation"><span data-slate-string="true">100</span></span></span><span 
data-slate-leaf="true" data-offset-key="705:2"><span data-slate-string="true">];</span></span></span> 
</div> <div class="se-115fc16c se-06d99b0c" data-slate-type="code-line" data-slate-object="block" 
data-key="706"> <span data-slate-object="text" data-key="707"><span data-slate-leaf="true" 
data-offset-key="707:0" data-first-offset="true"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_7897580932" data-annotation-type="annotation"><span data-slate-string="true">int</span></span></span><span 
data-slate-leaf="true" data-offset-key="707:1"><span data-slate-string="true"> test_function_cnt 
= </span></span><span data-slate-leaf="true" data-offset-key="707:2"><span class=" gkhl-number" 
data-slate-object="annotation" data-annotation-key="gkann_2775453714" data-annotation-type="annotation"><span 
data-slate-string="true">0</span></span></span><span data-slate-leaf="true" data-offset-key="707:3"><span 
data-slate-string="true">;</span></span></span> </div> <div class="ps__rail-x" style="width: 
365px; left: 0px; bottom: 0px;"> <div class="ps__thumb-x" tabindex="0" style="left: 0px; width: 
292px;"></div> </div> <div class="ps__rail-y" style="top: 0px; right: 0px;"> <div class="ps__thumb-y" 
tabindex="0" style="top: 0px; height: 0px;"></div> </div> </div> </div> <div class="se-937da880 
" data-slate-type="paragraph" data-slate-object="block" data-key="708"> <span data-slate-object="text" 
data-key="709"><span data-slate-leaf="true" data-offset-key="709:0" data-first-offset="true"><span 
data-slate-string="true">这段代码中，我们使用了数组来定义存储测试函数信息的存储区，这个数组的大小有 100 位，也就是说，最多可以存储 100 个测试用例函数信息。</span></span></span> 
</div> <div class="se-1ab625ba " data-slate-type="paragraph" data-slate-object="block" data-key="710"> 
<span data-slate-object="text" data-key="711"><span data-slate-leaf="true" data-offset-key="711:0" 
data-first-offset="true"><span data-slate-string="true">那我们来思考一个问题：要是有程序中定义了 1000 个测试用例，怎么办呢？毕竟，对于中型项目开发来说，定义 
1000 个测试用例，可不是什么难事儿。这个时候，你可能会说，那简单啊，数组大小设置成 10000 不就行了。</span></span></span> </div> <div class="se-3e98d9b1 
" data-slate-type="paragraph" data-slate-object="block" data-key="712"> <span data-slate-object="text" 
data-key="713"><span data-slate-leaf="true" data-offset-key="713:0" data-first-offset="true"><span 
data-slate-string="true">但是你要明白，这种设计尽管简单粗暴且有效，可它一点儿程序设计的美感都没有。什么意思呢？就是当我们为测试用例准备了 10000 个数组空间的时候，可能在真正的开发过程中，只定义了 
2 个测试用例，这就会浪费掉 9998 个数组空间。</span></span></span> </div> <div class="se-400cef4e " data-slate-type="paragraph" 
data-slate-object="block" data-key="714"> <span data-slate-object="text" data-key="715"><span 
data-slate-leaf="true" data-offset-key="715:0" data-first-offset="true"><span data-slate-string="true">更形象地描述这种行为的话，这种设计方式很像计划经济，计划多少用多少。同时，它的弊端也很明显，一旦计划不好，要不是造成空间浪费，要不就是资源紧张。</span></span></span> 
</div> <div class="se-01196491 " data-slate-type="paragraph" data-slate-object="block" data-key="716"> 
<span data-slate-object="text" data-key="717"><span data-slate-leaf="true" data-offset-key="717:0" 
data-first-offset="true"><span data-slate-string="true">所以，我们应该尝试着从“计划经济”向“市场经济”转变一下，可不可以转变成想用多少就生产多少。那应该怎么做呢？</span></span></span> 
</div> <div class="se-eb56f956 " data-slate-type="paragraph" data-slate-object="block" data-key="718"> 
<span data-slate-object="text" data-key="719"><span data-slate-leaf="true" data-offset-key="719:0" 
data-first-offset="true"><span data-slate-string="true">我们知道，在程序中数组的空间大小，是需要提前计划出来的。但是有一种结构的空间，是可以动态增加或减少的，那就是我们之前讲过的“</span></span></span><span 
data-slate-object="text" data-key="720"><span data-slate-leaf="true" data-offset-key="720:0" 
data-first-offset="true"><span class="se-22441a44" data-slate-type="bold" data-slate-object="mark"><span 
data-slate-string="true">链表</span></span></span></span><span data-slate-object="text" data-key="721"><span 
data-slate-leaf="true" data-offset-key="721:0" data-first-offset="true"><span data-slate-string="true">”结构。你想一下，如果我们把一个一个的测试函数信息，封装成一个一个的链表节点，每当增加一个测试用例的时候，就相当于向整个链表中插入一个新的节点。此时，用链表实现的存储测试函数信息的结构，它所占空间大小就和实际测试用例的数量成正比了。这就是我说的用多少，就生产多少。</span></span></span> 
</div> <div class="se-d075384f " data-slate-type="paragraph" data-slate-object="block" data-key="722"> 
<span data-slate-object="text" data-key="723"><span data-slate-leaf="true" data-offset-key="723:0" 
data-first-offset="true"><span data-slate-string="true">下面，我们就来说说具体怎么做。</span></span></span> 
</div> <div class="se-1e30d1e2 " data-slate-type="paragraph" data-slate-object="block" data-key="724"> 
<span data-slate-object="text" data-key="725"><span data-slate-leaf="true" data-offset-key="725:0" 
data-first-offset="true"><span data-slate-string="true">第一步，我们需要改变 test_function_info_t 的结构定义，也就是把原先存储测试用例函数信息的结构体类型，改装成链表结构。最简单的方法，就是在结构体的定义中，增加一个指针字段，指向下一个 
test_function_info_t 类型的数据，代码如下所示：</span></span></span> </div> <div class="se-e2499608 se-7080a54d" 
data-slate-type="pre" data-slate-object="block" data-key="726" data-code-language="cpp"> <div 
class="se-16714291 se-a119c414"> <span></span> </div> <div class="se-f1b77882"> <div class="se-5173c2fd 
se-f2e4ad85" data-code-line-number="1"></div> <div class="se-5173c2fd se-f2e4ad85" data-code-line-number="2"></div> 
<div class="se-5173c2fd se-f2e4ad85" data-code-line-number="3"></div> <div class="se-5173c2fd 
se-f2e4ad85" data-code-line-number="4"></div> <div class="se-5173c2fd se-f2e4ad85" data-code-line-number="5"></div> 
<div class="se-5173c2fd se-f2e4ad85" data-code-line-number="6"></div> </div> <div class="se-ade8bf3a 
ps ps--active-x"> <div class="se-115fc16c se-06d99b0c" data-slate-type="code-line" data-slate-object="block" 
data-key="727"> <span data-slate-object="text" data-key="728"><span data-slate-leaf="true" 
data-offset-key="728:0" data-first-offset="true"><span class=" gkhl-class" data-slate-object="annotation" 
data-annotation-key="gkann_9415764174" data-annotation-type="annotation"><span class=" gkhl-keyword" 
data-slate-object="annotation" data-annotation-key="gkann_0647422790" data-annotation-type="annotation"><span 
data-slate-string="true">struct</span></span></span></span><span data-slate-leaf="true" data-offset-key="728:1"><span 
class=" gkhl-class" data-slate-object="annotation" data-annotation-key="gkann_9415764174" data-annotation-type="annotation"><span 
data-slate-string="true"> </span></span></span><span data-slate-leaf="true" data-offset-key="728:2"><span 
class=" gkhl-class" data-slate-object="annotation" data-annotation-key="gkann_9415764174" data-annotation-type="annotation"><span 
class=" gkhl-title" data-slate-object="annotation" data-annotation-key="gkann_4312191675" data-annotation-type="annotation"><span 
data-slate-string="true">test_function_info_t</span></span></span></span><span data-slate-leaf="true" 
data-offset-key="728:3"><span class=" gkhl-class" data-slate-object="annotation" data-annotation-key="gkann_9415764174" 
data-annotation-type="annotation"><span data-slate-string="true"> {</span></span></span></span> 
</div> <div class="se-115fc16c se-06d99b0c" data-slate-type="code-line" data-slate-object="block" 
data-key="729"> <span data-slate-object="text" data-key="730"><span data-slate-leaf="true" 
data-offset-key="730:0" data-first-offset="true"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="730:1"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_4269134940" data-annotation-type="annotation"><span data-slate-string="true">test_function_t</span></span></span><span 
data-slate-leaf="true" data-offset-key="730:2"><span data-slate-string="true"> func; </span></span><span 
data-slate-leaf="true" data-offset-key="730:3"><span class=" gkhl-comment" data-slate-object="annotation" 
data-annotation-key="gkann_9479381820" data-annotation-type="annotation"><span data-slate-string="true">// 
测试用例函数指针，指向测试用例函数</span></span></span></span> </div> <div class="se-115fc16c se-06d99b0c" data-slate-type="code-line" 
data-slate-object="block" data-key="731"> <span data-slate-object="text" data-key="732"><span 
data-slate-leaf="true" data-offset-key="732:0" data-first-offset="true"><span data-slate-string="true"> 
</span></span><span data-slate-leaf="true" data-offset-key="732:1"><span class=" gkhl-keyword" 
data-slate-object="annotation" data-annotation-key="gkann_1839130040" data-annotation-type="annotation"><span 
data-slate-string="true">const</span></span></span><span data-slate-leaf="true" data-offset-key="732:2"><span 
data-slate-string="true"> </span></span><span data-slate-leaf="true" data-offset-key="732:3"><span 
class=" gkhl-keyword" data-slate-object="annotation" data-annotation-key="gkann_4210913421" 
data-annotation-type="annotation"><span data-slate-string="true">char</span></span></span><span 
data-slate-leaf="true" data-offset-key="732:4"><span data-slate-string="true"> *name; </span></span><span 
data-slate-leaf="true" data-offset-key="732:5"><span class=" gkhl-comment" data-slate-object="annotation" 
data-annotation-key="gkann_5966834326" data-annotation-type="annotation"><span data-slate-string="true">// 
指向测试用例名称</span></span></span></span> </div> <div class="se-115fc16c se-06d99b0c" data-slate-type="code-line" 
data-slate-object="block" data-key="733"> <span data-slate-object="text" data-key="734"><span 
data-slate-leaf="true" data-offset-key="734:0" data-first-offset="true"><span data-slate-string="true"> 
</span></span><span data-slate-leaf="true" data-offset-key="734:1"><span class=" gkhl-keyword" 
data-slate-object="annotation" data-annotation-key="gkann_4479028957" data-annotation-type="annotation"><span 
class=" gkhl-class" data-slate-object="annotation" data-annotation-key="gkann_1245426921" data-annotation-type="annotation"><span 
data-slate-string="true">struct</span></span></span></span><span data-slate-leaf="true" data-offset-key="734:2"><span 
class=" gkhl-class" data-slate-object="annotation" data-annotation-key="gkann_1245426921" data-annotation-type="annotation"><span 
data-slate-string="true"> </span></span></span><span data-slate-leaf="true" data-offset-key="734:3"><span 
class=" gkhl-class" data-slate-object="annotation" data-annotation-key="gkann_1245426921" data-annotation-type="annotation"><span 
class=" gkhl-title" data-slate-object="annotation" data-annotation-key="gkann_3450747717" data-annotation-type="annotation"><span 
data-slate-string="true">test_function_info_t</span></span></span></span><span data-slate-leaf="true" 
data-offset-key="734:4"><span class=" gkhl-class" data-slate-object="annotation" data-annotation-key="gkann_1245426921" 
data-annotation-type="annotation"><span data-slate-string="true"> *</span></span></span><span 
data-slate-leaf="true" data-offset-key="734:5"><span class=" gkhl-title" data-slate-object="annotation" 
data-annotation-key="gkann_0380932525" data-annotation-type="annotation"><span class=" gkhl-class" 
data-slate-object="annotation" data-annotation-key="gkann_1245426921" data-annotation-type="annotation"><span 
data-slate-string="true">next</span></span></span></span><span data-slate-leaf="true" data-offset-key="734:6"><span 
class=" gkhl-class" data-slate-object="annotation" data-annotation-key="gkann_1245426921" data-annotation-type="annotation"><span 
data-slate-string="true">;</span></span></span></span> </div> <div class="se-115fc16c se-06d99b0c" 
data-slate-type="code-line" data-slate-object="block" data-key="735"> <span data-slate-object="text" 
data-key="736"><span data-slate-leaf="true" data-offset-key="736:0" data-first-offset="true"><span 
data-slate-string="true">};</span></span></span> </div> <div class="se-115fc16c se-06d99b0c" 
data-slate-type="code-line" data-slate-object="block" data-key="737"> <span data-slate-object="text" 
data-key="738"><span data-slate-leaf="true" data-offset-key="738:0" data-first-offset="true"><span 
class=" gkhl-keyword" data-slate-object="annotation" data-annotation-key="gkann_8250502741" 
data-annotation-type="annotation"><span class=" gkhl-class" data-slate-object="annotation" 
data-annotation-key="gkann_1914998868" data-annotation-type="annotation"><span data-slate-string="true">struct</span></span></span></span><span 
data-slate-leaf="true" data-offset-key="738:1"><span class=" gkhl-class" data-slate-object="annotation" 
data-annotation-key="gkann_1914998868" data-annotation-type="annotation"><span data-slate-string="true"> 
</span></span></span><span data-slate-leaf="true" data-offset-key="738:2"><span class=" gkhl-title" 
data-slate-object="annotation" data-annotation-key="gkann_0583625355" data-annotation-type="annotation"><span 
class=" gkhl-class" data-slate-object="annotation" data-annotation-key="gkann_1914998868" data-annotation-type="annotation"><span 
data-slate-string="true">test_function_info_t</span></span></span></span><span data-slate-leaf="true" 
data-offset-key="738:3"><span class=" gkhl-class" data-slate-object="annotation" data-annotation-key="gkann_1914998868" 
data-annotation-type="annotation"><span data-slate-string="true"> </span></span></span><span 
data-slate-leaf="true" data-offset-key="738:4"><span class=" gkhl-class" data-slate-object="annotation" 
data-annotation-key="gkann_1914998868" data-annotation-type="annotation"><span class=" gkhl-title" 
data-slate-object="annotation" data-annotation-key="gkann_3640095140" data-annotation-type="annotation"><span 
data-slate-string="true">head</span></span></span></span><span data-slate-leaf="true" data-offset-key="738:5"><span 
class=" gkhl-class" data-slate-object="annotation" data-annotation-key="gkann_1914998868" data-annotation-type="annotation"><span 
data-slate-string="true">, *</span></span></span><span data-slate-leaf="true" data-offset-key="738:6"><span 
class=" gkhl-title" data-slate-object="annotation" data-annotation-key="gkann_4474202542" data-annotation-type="annotation"><span 
class=" gkhl-class" data-slate-object="annotation" data-annotation-key="gkann_1914998868" data-annotation-type="annotation"><span 
data-slate-string="true">tail</span></span></span></span><span data-slate-leaf="true" data-offset-key="738:7"><span 
class=" gkhl-class" data-slate-object="annotation" data-annotation-key="gkann_1914998868" data-annotation-type="annotation"><span 
data-slate-string="true"> = &amp;</span></span></span><span data-slate-leaf="true" data-offset-key="738:8"><span 
class=" gkhl-class" data-slate-object="annotation" data-annotation-key="gkann_1914998868" data-annotation-type="annotation"><span 
class=" gkhl-title" data-slate-object="annotation" data-annotation-key="gkann_0310772701" data-annotation-type="annotation"><span 
data-slate-string="true">head</span></span></span></span><span data-slate-leaf="true" data-offset-key="738:9"><span 
class=" gkhl-class" data-slate-object="annotation" data-annotation-key="gkann_1914998868" data-annotation-type="annotation"><span 
data-slate-string="true">;</span></span></span></span> </div> <div class="ps__rail-x" style="width: 
365px; left: 0px; bottom: 0px;"> <div class="ps__thumb-x" tabindex="0" style="left: 0px; width: 
292px;"></div> </div> <div class="ps__rail-y" style="top: 0px; right: 0px;"> <div class="ps__thumb-y" 
tabindex="0" style="top: 0px; height: 0px;"></div> </div> </div> </div> <div class="se-7faffc1a 
" data-slate-type="paragraph" data-slate-object="block" data-key="739"> <span data-slate-object="text" 
data-key="740"><span data-slate-leaf="true" data-offset-key="740:0" data-first-offset="true"><span 
data-slate-string="true">可以看到，我们给 test_function_info_t 结构体类型增加了一个链表中的 next 字段，除此之外，我们还定义了一个虚拟头节点 
head 和一个指针变量 tail。这里你需要注意，head 是虚拟头节点，后续我们会向 head 所指向链表中插入链表节点，tail 指针则指向了整个链表的最后一个节点的地址。</span></span></span> 
</div> <div class="se-c07189d9 " data-slate-type="paragraph" data-slate-object="block" data-key="741"> 
<span data-slate-object="text" data-key="742"><span data-slate-leaf="true" data-offset-key="742:0" 
data-first-offset="true"><span data-slate-string="true">第二步，在准备好了数据存储结构以后，需要改写的就是函数注册的逻辑了。在改写 
TEST 宏中的注册函数逻辑之前呢，我们先准备一个工具函数 add_test_function，这个工具函数的作用，就是根据传入的参数，新建一个链表节点，并且插入到整个链表的末尾：</span></span></span> 
</div> <div class="se-f24b3963 se-429ff030" data-slate-type="pre" data-slate-object="block" 
data-key="743" data-code-language="cpp"> <div class="se-f22ba910 se-a85aa1a5"> <span></span> 
</div> <div class="se-4f072637"> <div class="se-12d76384 se-690f81c6" data-code-line-number="1"></div> 
<div class="se-12d76384 se-690f81c6" data-code-line-number="2"></div> <div class="se-12d76384 
se-690f81c6" data-code-line-number="3"></div> <div class="se-12d76384 se-690f81c6" data-code-line-number="4"></div> 
<div class="se-12d76384 se-690f81c6" data-code-line-number="5"></div> <div class="se-12d76384 
se-690f81c6" data-code-line-number="6"></div> <div class="se-12d76384 se-690f81c6" data-code-line-number="7"></div> 
<div class="se-12d76384 se-690f81c6" data-code-line-number="8"></div> <div class="se-12d76384 
se-690f81c6" data-code-line-number="9"></div> <div class="se-12d76384 se-690f81c6" data-code-line-number="10"></div> 
</div> <div class="se-12b48615 ps ps--active-x"> <div class="se-115fc16c se-06d99b0c" data-slate-type="code-line" 
data-slate-object="block" data-key="744"> <span data-slate-object="text" data-key="745"><span 
data-slate-leaf="true" data-offset-key="745:0" data-first-offset="true"><span class=" gkhl-function" 
data-slate-object="annotation" data-annotation-key="gkann_8602206453" data-annotation-type="annotation"><span 
class=" gkhl-keyword" data-slate-object="annotation" data-annotation-key="gkann_1267584228" 
data-annotation-type="annotation"><span data-slate-string="true">void</span></span></span></span><span 
data-slate-leaf="true" data-offset-key="745:1"><span class=" gkhl-function" data-slate-object="annotation" 
data-annotation-key="gkann_8602206453" data-annotation-type="annotation"><span data-slate-string="true"> 
</span></span></span><span data-slate-leaf="true" data-offset-key="745:2"><span class=" gkhl-function" 
data-slate-object="annotation" data-annotation-key="gkann_8602206453" data-annotation-type="annotation"><span 
class=" gkhl-title" data-slate-object="annotation" data-annotation-key="gkann_8892914800" data-annotation-type="annotation"><span 
data-slate-string="true">add_test_function</span></span></span></span><span data-slate-leaf="true" 
data-offset-key="745:3"><span class=" gkhl-function" data-slate-object="annotation" data-annotation-key="gkann_8602206453" 
data-annotation-type="annotation"><span class=" gkhl-params" data-slate-object="annotation" 
data-annotation-key="gkann_5753428847" data-annotation-type="annotation"><span data-slate-string="true">(const 
char *name, test_function_t func)</span></span></span></span><span data-slate-leaf="true" data-offset-key="745:4"><span 
class=" gkhl-function" data-slate-object="annotation" data-annotation-key="gkann_8602206453" 
data-annotation-type="annotation"><span data-slate-string="true"> </span></span></span><span 
data-slate-leaf="true" data-offset-key="745:5"><span data-slate-string="true">{</span></span></span> 
</div> <div class="se-115fc16c se-06d99b0c" data-slate-type="code-line" data-slate-object="block" 
data-key="746"> <span data-slate-object="text" data-key="747"><span data-slate-leaf="true" 
data-offset-key="747:0" data-first-offset="true"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="747:1"><span class=" gkhl-class" data-slate-object="annotation" 
data-annotation-key="gkann_7351391396" data-annotation-type="annotation"><span class=" gkhl-keyword" 
data-slate-object="annotation" data-annotation-key="gkann_0234258438" data-annotation-type="annotation"><span 
data-slate-string="true">struct</span></span></span></span><span data-slate-leaf="true" data-offset-key="747:2"><span 
class=" gkhl-class" data-slate-object="annotation" data-annotation-key="gkann_7351391396" data-annotation-type="annotation"><span 
data-slate-string="true"> </span></span></span><span data-slate-leaf="true" data-offset-key="747:3"><span 
class=" gkhl-class" data-slate-object="annotation" data-annotation-key="gkann_7351391396" data-annotation-type="annotation"><span 
class=" gkhl-title" data-slate-object="annotation" data-annotation-key="gkann_6958969356" data-annotation-type="annotation"><span 
data-slate-string="true">test_function_info_t</span></span></span></span><span data-slate-leaf="true" 
data-offset-key="747:4"><span class=" gkhl-class" data-slate-object="annotation" data-annotation-key="gkann_7351391396" 
data-annotation-type="annotation"><span data-slate-string="true"> *</span></span></span><span 
data-slate-leaf="true" data-offset-key="747:5"><span class=" gkhl-class" data-slate-object="annotation" 
data-annotation-key="gkann_7351391396" data-annotation-type="annotation"><span class=" gkhl-title" 
data-slate-object="annotation" data-annotation-key="gkann_4714195550" data-annotation-type="annotation"><span 
data-slate-string="true">node</span></span></span></span><span data-slate-leaf="true" data-offset-key="747:6"><span 
class=" gkhl-class" data-slate-object="annotation" data-annotation-key="gkann_7351391396" data-annotation-type="annotation"><span 
data-slate-string="true">;</span></span></span></span> </div> <div class="se-115fc16c se-06d99b0c" 
data-slate-type="code-line" data-slate-object="block" data-key="748"> <span data-slate-object="text" 
data-key="749"><span data-slate-leaf="true" data-offset-key="749:0" data-first-offset="true"><span 
data-slate-string="true"> node = (struct </span></span><span data-slate-leaf="true" data-offset-key="749:1"><span 
class=" gkhl-keyword" data-slate-object="annotation" data-annotation-key="gkann_8305685576" 
data-annotation-type="annotation"><span data-slate-string="true">test_function_info_t</span></span></span><span 
data-slate-leaf="true" data-offset-key="749:2"><span data-slate-string="true"> *)</span></span><span 
data-slate-leaf="true" data-offset-key="749:3"><span class=" gkhl-built_in" data-slate-object="annotation" 
data-annotation-key="gkann_5528947333" data-annotation-type="annotation"><span data-slate-string="true">malloc</span></span></span><span 
data-slate-leaf="true" data-offset-key="749:4"><span data-slate-string="true">(</span></span><span 
data-slate-leaf="true" data-offset-key="749:5"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_4161897075" data-annotation-type="annotation"><span data-slate-string="true">sizeof</span></span></span><span 
data-slate-leaf="true" data-offset-key="749:6"><span data-slate-string="true">(struct </span></span><span 
data-slate-leaf="true" data-offset-key="749:7"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_9566142528" data-annotation-type="annotation"><span data-slate-string="true">test_function_info_t</span></span></span><span 
data-slate-leaf="true" data-offset-key="749:8"><span data-slate-string="true">));</span></span></span> 
</div> <div class="se-115fc16c se-06d99b0c" data-slate-type="code-line" data-slate-object="block" 
data-key="750"> <span data-slate-object="text" data-key="751"><span data-slate-leaf="true" 
data-offset-key="751:0" data-first-offset="true"><span data-slate-string="true"> node-&gt;func 
= func;</span></span></span> </div> <div class="se-115fc16c se-06d99b0c" data-slate-type="code-line" 
data-slate-object="block" data-key="752"> <span data-slate-object="text" data-key="753"><span 
data-slate-leaf="true" data-offset-key="753:0" data-first-offset="true"><span data-slate-string="true"> 
node-&gt;name = name;</span></span></span> </div> <div class="se-115fc16c se-06d99b0c" data-slate-type="code-line" 
data-slate-object="block" data-key="754"> <span data-slate-object="text" data-key="755"><span 
data-slate-leaf="true" data-offset-key="755:0" data-first-offset="true"><span data-slate-string="true"> 
node-&gt;next = </span></span><span data-slate-leaf="true" data-offset-key="755:1"><span class=" 
gkhl-literal" data-slate-object="annotation" data-annotation-key="gkann_4729199300" data-annotation-type="annotation"><span 
data-slate-string="true">NULL</span></span></span><span data-slate-leaf="true" data-offset-key="755:2"><span 
data-slate-string="true">;</span></span></span> </div> <div class="se-115fc16c se-06d99b0c" 
data-slate-type="code-line" data-slate-object="block" data-key="756"> <span data-slate-object="text" 
data-key="757"><span data-slate-leaf="true" data-offset-key="757:0" data-first-offset="true"><span 
data-slate-string="true"> tail-&gt;next = node;</span></span></span> </div> <div class="se-115fc16c 
se-06d99b0c" data-slate-type="code-line" data-slate-object="block" data-key="758"> <span data-slate-object="text" 
data-key="759"><span data-slate-leaf="true" data-offset-key="759:0" data-first-offset="true"><span 
data-slate-string="true"> tail = node;</span></span></span> </div> <div class="se-115fc16c 
se-06d99b0c" data-slate-type="code-line" data-slate-object="block" data-key="760"> <span data-slate-object="text" 
data-key="761"><span data-slate-leaf="true" data-offset-key="761:0" data-first-offset="true"><span 
data-slate-string="true"> </span></span><span data-slate-leaf="true" data-offset-key="761:1"><span 
class=" gkhl-keyword" data-slate-object="annotation" data-annotation-key="gkann_0006919502" 
data-annotation-type="annotation"><span data-slate-string="true">return</span></span></span><span 
data-slate-leaf="true" data-offset-key="761:2"><span data-slate-string="true"> ;</span></span></span> 
</div> <div class="se-115fc16c se-06d99b0c" data-slate-type="code-line" data-slate-object="block" 
data-key="762"> <span data-slate-object="text" data-key="763"><span data-slate-leaf="true" 
data-offset-key="763:0" data-first-offset="true"><span data-slate-string="true">}</span></span></span> 
</div> <div class="ps__rail-x" style="width: 365px; left: 0px; bottom: 0px;"> <div class="ps__thumb-x" 
tabindex="0" style="left: 0px; width: 198px;"></div> </div> <div class="ps__rail-y" style="top: 
0px; right: 0px;"> <div class="ps__thumb-y" tabindex="0" style="top: 0px; height: 0px;"></div> 
</div> </div> </div> <div class="se-fa7970cd " data-slate-type="paragraph" data-slate-object="block" 
data-key="764"> <span data-slate-object="text" data-key="765"><span data-slate-leaf="true" 
data-offset-key="765:0" data-first-offset="true"><span data-slate-string="true">好了， add_test_function 
工具函数准备好之后，我们正式来改写 TEST 宏中注册函数的逻辑。其实难度也不大，也就是要求注册函数调用 add_test_function 函数，并且传入相关的测试用例的函数信息即可：</span></span></span> 
</div> <div class="se-856c350a se-4109140c" data-slate-type="pre" data-slate-object="block" 
data-key="766" data-code-language="objectivec"> <div class="se-0cb13833 se-cc2f6fe0"> <span></span> 
</div> <div class="se-8ed3c45a"> <div class="se-b9078d84 se-8b90c149" data-code-line-number="1"></div> 
<div class="se-b9078d84 se-8b90c149" data-code-line-number="2"></div> <div class="se-b9078d84 
se-8b90c149" data-code-line-number="3"></div> <div class="se-b9078d84 se-8b90c149" data-code-line-number="4"></div> 
<div class="se-b9078d84 se-8b90c149" data-code-line-number="5"></div> <div class="se-b9078d84 
se-8b90c149" data-code-line-number="6"></div> <div class="se-b9078d84 se-8b90c149" data-code-line-number="7"></div> 
<div class="se-b9078d84 se-8b90c149" data-code-line-number="8"></div> </div> <div class="se-bae4a6a4 
ps ps--active-x"> <div class="se-115fc16c se-06d99b0c" data-slate-type="code-line" data-slate-object="block" 
data-key="767"> <span data-slate-object="text" data-key="768"><span data-slate-leaf="true" 
data-offset-key="768:0" data-first-offset="true"><span class=" gkhl-meta" data-slate-object="annotation" 
data-annotation-key="gkann_5356537081" data-annotation-type="annotation"><span data-slate-string="true">#define 
TEST(test_name, func_name) \</span></span></span></span> </div> <div class="se-115fc16c se-06d99b0c" 
data-slate-type="code-line" data-slate-object="block" data-key="769"> <span data-slate-object="text" 
data-key="770"><span data-slate-leaf="true" data-offset-key="770:0" data-first-offset="true"><span 
class=" gkhl-keyword" data-slate-object="annotation" data-annotation-key="gkann_6635107564" 
data-annotation-type="annotation"><span data-slate-string="true">void</span></span></span><span 
data-slate-leaf="true" data-offset-key="770:1"><span data-slate-string="true"> test_name</span></span><span 
data-slate-leaf="true" data-offset-key="770:2"><span class=" gkhl-meta" data-slate-object="annotation" 
data-annotation-key="gkann_5603678752" data-annotation-type="annotation"><span data-slate-string="true">##_##func_name(); 
\</span></span></span></span> </div> <div class="se-115fc16c se-06d99b0c" data-slate-type="code-line" 
data-slate-object="block" data-key="771"> <span data-slate-object="text" data-key="772"><span 
data-slate-leaf="true" data-offset-key="772:0" data-first-offset="true"><span data-slate-string="true">__attribute__((constructor)) 
\</span></span></span> </div> <div class="se-115fc16c se-06d99b0c" data-slate-type="code-line" 
data-slate-object="block" data-key="773"> <span data-slate-object="text" data-key="774"><span 
data-slate-leaf="true" data-offset-key="774:0" data-first-offset="true"><span class=" gkhl-keyword" 
data-slate-object="annotation" data-annotation-key="gkann_3962191954" data-annotation-type="annotation"><span 
data-slate-string="true">void</span></span></span><span data-slate-leaf="true" data-offset-key="774:1"><span 
data-slate-string="true"> register_</span></span><span data-slate-leaf="true" data-offset-key="774:2"><span 
class=" gkhl-meta" data-slate-object="annotation" data-annotation-key="gkann_3561649596" data-annotation-type="annotation"><span 
data-slate-string="true">##test_name##_##func_name() { \</span></span></span></span> </div> 
<div class="se-115fc16c se-06d99b0c" data-slate-type="code-line" data-slate-object="block" 
data-key="775"> <span data-slate-object="text" data-key="776"><span data-slate-leaf="true" 
data-offset-key="776:0" data-first-offset="true"><span data-slate-string="true"> add_test_function(</span></span><span 
data-slate-leaf="true" data-offset-key="776:1"><span class=" gkhl-meta" data-slate-object="annotation" 
data-annotation-key="gkann_1219856345" data-annotation-type="annotation"><span data-slate-string="true">#func_name 
"." #test_name, \</span></span></span></span> </div> <div class="se-115fc16c se-06d99b0c" data-slate-type="code-line" 
data-slate-object="block" data-key="777"> <span data-slate-object="text" data-key="778"><span 
data-slate-leaf="true" data-offset-key="778:0" data-first-offset="true"><span data-slate-string="true"> 
test_name</span></span><span data-slate-leaf="true" data-offset-key="778:1"><span class=" gkhl-meta" 
data-slate-object="annotation" data-annotation-key="gkann_1693411298" data-annotation-type="annotation"><span 
data-slate-string="true">##_##func_name); \</span></span></span></span> </div> <div class="se-115fc16c 
se-06d99b0c" data-slate-type="code-line" data-slate-object="block" data-key="779"> <span data-slate-object="text" 
data-key="780"><span data-slate-leaf="true" data-offset-key="780:0" data-first-offset="true"><span 
data-slate-string="true">} \</span></span></span> </div> <div class="se-115fc16c se-06d99b0c" 
data-slate-type="code-line" data-slate-object="block" data-key="781"> <span data-slate-object="text" 
data-key="782"><span data-slate-leaf="true" data-offset-key="782:0" data-first-offset="true"><span 
class=" gkhl-keyword" data-slate-object="annotation" data-annotation-key="gkann_2389732808" 
data-annotation-type="annotation"><span data-slate-string="true">void</span></span></span><span 
data-slate-leaf="true" data-offset-key="782:1"><span data-slate-string="true"> test_name</span></span><span 
data-slate-leaf="true" data-offset-key="782:2"><span class=" gkhl-meta" data-slate-object="annotation" 
data-annotation-key="gkann_7457115400" data-annotation-type="annotation"><span data-slate-string="true">##_##func_name()</span></span></span></span> 
</div> <div class="ps__rail-x" style="width: 365px; left: 0px; bottom: 0px;"> <div class="ps__thumb-x" 
tabindex="0" style="left: 0px; width: 341px;"></div> </div> <div class="ps__rail-y" style="top: 
0px; right: 0px;"> <div class="ps__thumb-y" tabindex="0" style="top: 0px; height: 0px;"></div> 
</div> </div> </div> <div class="se-e0171c90 " data-slate-type="paragraph" data-slate-object="block" 
data-key="783"> <span data-slate-object="text" data-key="784"><span data-slate-leaf="true" 
data-offset-key="784:0" data-first-offset="true"><span data-slate-string="true">最后一步，处理完了数据写入的过程以后，来让我们修改一下使用这份数据的代码逻辑，那就是 
RUN_ALL_TESTS 函数中的相关逻辑。之前，RUN_ALL_TESTS 函数中，循环遍历数组中的每一个测试用例，并且执行相关的测试用例函数，对这一部分，修改成针对于链表结构的遍历方式即可，代码如下所示：</span></span></span> 
</div> <div class="se-ad15a04b se-eeb5cb8b" data-slate-type="pre" data-slate-object="block" 
data-key="785" data-code-language="cpp"> <div class="se-11e919fb se-d6e5119b"> <span></span> 
</div> <div class="se-867fc982"> <div class="se-43a88397 se-06fd981e" data-code-line-number="1"></div> 
<div class="se-43a88397 se-06fd981e" data-code-line-number="2"></div> <div class="se-43a88397 
se-06fd981e" data-code-line-number="3"></div> <div class="se-43a88397 se-06fd981e" data-code-line-number="4"></div> 
<div class="se-43a88397 se-06fd981e" data-code-line-number="5"></div> <div class="se-43a88397 
se-06fd981e" data-code-line-number="6"></div> <div class="se-43a88397 se-06fd981e" data-code-line-number="7"></div> 
<div class="se-43a88397 se-06fd981e" data-code-line-number="8"></div> <div class="se-43a88397 
se-06fd981e" data-code-line-number="9"></div> <div class="se-43a88397 se-06fd981e" data-code-line-number="10"></div> 
<div class="se-43a88397 se-06fd981e" data-code-line-number="11"></div> <div class="se-43a88397 
se-06fd981e" data-code-line-number="12"></div> <div class="se-43a88397 se-06fd981e" data-code-line-number="13"></div> 
<div class="se-43a88397 se-06fd981e" data-code-line-number="14"></div> <div class="se-43a88397 
se-06fd981e" data-code-line-number="15"></div> <div class="se-43a88397 se-06fd981e" data-code-line-number="16"></div> 
<div class="se-43a88397 se-06fd981e" data-code-line-number="17"></div> <div class="se-43a88397 
se-06fd981e" data-code-line-number="18"></div> </div> <div class="se-3818d9d6 ps ps--active-x"> 
<div class="se-115fc16c se-06d99b0c" data-slate-type="code-line" data-slate-object="block" 
data-key="786"> <span data-slate-object="text" data-key="787"><span data-slate-leaf="true" 
data-offset-key="787:0" data-first-offset="true"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_4051787725" data-annotation-type="annotation"><span class=" gkhl-function" 
data-slate-object="annotation" data-annotation-key="gkann_1799210065" data-annotation-type="annotation"><span 
data-slate-string="true">int</span></span></span></span><span data-slate-leaf="true" data-offset-key="787:1"><span 
class=" gkhl-function" data-slate-object="annotation" data-annotation-key="gkann_1799210065" 
data-annotation-type="annotation"><span data-slate-string="true"> </span></span></span><span 
data-slate-leaf="true" data-offset-key="787:2"><span class=" gkhl-function" data-slate-object="annotation" 
data-annotation-key="gkann_1799210065" data-annotation-type="annotation"><span class=" gkhl-title" 
data-slate-object="annotation" data-annotation-key="gkann_2624477045" data-annotation-type="annotation"><span 
data-slate-string="true">RUN_ALL_TESTS</span></span></span></span><span data-slate-leaf="true" 
data-offset-key="787:3"><span class=" gkhl-params" data-slate-object="annotation" data-annotation-key="gkann_0949166136" 
data-annotation-type="annotation"><span class=" gkhl-function" data-slate-object="annotation" 
data-annotation-key="gkann_1799210065" data-annotation-type="annotation"><span data-slate-string="true">()</span></span></span></span><span 
data-slate-leaf="true" data-offset-key="787:4"><span class=" gkhl-function" data-slate-object="annotation" 
data-annotation-key="gkann_1799210065" data-annotation-type="annotation"><span data-slate-string="true"> 
</span></span></span><span data-slate-leaf="true" data-offset-key="787:5"><span data-slate-string="true">{</span></span></span> 
</div> <div class="se-115fc16c se-06d99b0c" data-slate-type="code-line" data-slate-object="block" 
data-key="788"> <span data-slate-object="text" data-key="789"><span data-slate-leaf="true" 
data-offset-key="789:0" data-first-offset="true"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="789:1"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_2592043126" data-annotation-type="annotation"><span class=" gkhl-class" 
data-slate-object="annotation" data-annotation-key="gkann_7199470852" data-annotation-type="annotation"><span 
data-slate-string="true">struct</span></span></span></span><span data-slate-leaf="true" data-offset-key="789:2"><span 
class=" gkhl-class" data-slate-object="annotation" data-annotation-key="gkann_7199470852" data-annotation-type="annotation"><span 
data-slate-string="true"> </span></span></span><span data-slate-leaf="true" data-offset-key="789:3"><span 
class=" gkhl-title" data-slate-object="annotation" data-annotation-key="gkann_5781515750" data-annotation-type="annotation"><span 
class=" gkhl-class" data-slate-object="annotation" data-annotation-key="gkann_7199470852" data-annotation-type="annotation"><span 
data-slate-string="true">test_function_info_t</span></span></span></span><span data-slate-leaf="true" 
data-offset-key="789:4"><span class=" gkhl-class" data-slate-object="annotation" data-annotation-key="gkann_7199470852" 
data-annotation-type="annotation"><span data-slate-string="true"> *</span></span></span><span 
data-slate-leaf="true" data-offset-key="789:5"><span class=" gkhl-class" data-slate-object="annotation" 
data-annotation-key="gkann_7199470852" data-annotation-type="annotation"><span class=" gkhl-title" 
data-slate-object="annotation" data-annotation-key="gkann_1276328887" data-annotation-type="annotation"><span 
data-slate-string="true">p</span></span></span></span><span data-slate-leaf="true" data-offset-key="789:6"><span 
class=" gkhl-class" data-slate-object="annotation" data-annotation-key="gkann_7199470852" data-annotation-type="annotation"><span 
data-slate-string="true"> = </span></span></span><span data-slate-leaf="true" data-offset-key="789:7"><span 
class=" gkhl-title" data-slate-object="annotation" data-annotation-key="gkann_8025943932" data-annotation-type="annotation"><span 
class=" gkhl-class" data-slate-object="annotation" data-annotation-key="gkann_7199470852" data-annotation-type="annotation"><span 
data-slate-string="true">head</span></span></span></span><span data-slate-leaf="true" data-offset-key="789:8"><span 
class=" gkhl-class" data-slate-object="annotation" data-annotation-key="gkann_7199470852" data-annotation-type="annotation"><span 
data-slate-string="true">.</span></span></span><span data-slate-leaf="true" data-offset-key="789:9"><span 
class=" gkhl-title" data-slate-object="annotation" data-annotation-key="gkann_6469550118" data-annotation-type="annotation"><span 
class=" gkhl-class" data-slate-object="annotation" data-annotation-key="gkann_7199470852" data-annotation-type="annotation"><span 
data-slate-string="true">next</span></span></span></span><span data-slate-leaf="true" data-offset-key="789:10"><span 
class=" gkhl-class" data-slate-object="annotation" data-annotation-key="gkann_7199470852" data-annotation-type="annotation"><span 
data-slate-string="true">;</span></span></span></span> </div> <div class="se-115fc16c se-06d99b0c" 
data-slate-type="code-line" data-slate-object="block" data-key="790"> <span data-slate-object="text" 
data-key="791"><span data-slate-leaf="true" data-offset-key="791:0" data-first-offset="true"><span 
data-slate-string="true"> </span></span><span data-slate-leaf="true" data-offset-key="791:1"><span 
class=" gkhl-keyword" data-slate-object="annotation" data-annotation-key="gkann_8356602260" 
data-annotation-type="annotation"><span data-slate-string="true">for</span></span></span><span 
data-slate-leaf="true" data-offset-key="791:2"><span data-slate-string="true"> (; p; p = p-&gt;next) 
{</span></span></span> </div> <div class="se-115fc16c se-06d99b0c" data-slate-type="code-line" 
data-slate-object="block" data-key="792"> <span data-slate-object="text" data-key="793"><span 
data-slate-leaf="true" data-offset-key="793:0" data-first-offset="true"><span data-slate-string="true"> 
</span></span><span data-slate-leaf="true" data-offset-key="793:1"><span class=" gkhl-built_in" 
data-slate-object="annotation" data-annotation-key="gkann_2080856586" data-annotation-type="annotation"><span 
data-slate-string="true">printf</span></span></span><span data-slate-leaf="true" data-offset-key="793:2"><span 
data-slate-string="true">(</span></span><span data-slate-leaf="true" data-offset-key="793:3"><span 
class=" gkhl-string" data-slate-object="annotation" data-annotation-key="gkann_8399537112" 
data-annotation-type="annotation"><span data-slate-string="true">"[ RUN ] %s\n"</span></span></span><span 
data-slate-leaf="true" data-offset-key="793:4"><span data-slate-string="true">, p-&gt;name);</span></span></span> 
</div> <div class="se-115fc16c se-06d99b0c" data-slate-type="code-line" data-slate-object="block" 
data-key="794"> <span data-slate-object="text" data-key="795"><span data-slate-leaf="true" 
data-offset-key="795:0" data-first-offset="true"><span data-slate-string="true"> test_run_flag 
= </span></span><span data-slate-leaf="true" data-offset-key="795:1"><span class=" gkhl-number" 
data-slate-object="annotation" data-annotation-key="gkann_7841293841" data-annotation-type="annotation"><span 
data-slate-string="true">1</span></span></span><span data-slate-leaf="true" data-offset-key="795:2"><span 
data-slate-string="true">;</span></span></span> </div> <div class="se-115fc16c se-06d99b0c" 
data-slate-type="code-line" data-slate-object="block" data-key="796"> <span data-slate-object="text" 
data-key="797"><span data-slate-leaf="true" data-offset-key="797:0" data-first-offset="true"><span 
data-slate-string="true"> </span></span><span data-slate-leaf="true" data-offset-key="797:1"><span 
class=" gkhl-keyword" data-slate-object="annotation" data-annotation-key="gkann_2870412125" 
data-annotation-type="annotation"><span data-slate-string="true">long</span></span></span><span 
data-slate-leaf="true" data-offset-key="797:2"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="797:3"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_1749847401" data-annotation-type="annotation"><span data-slate-string="true">long</span></span></span><span 
data-slate-leaf="true" data-offset-key="797:4"><span data-slate-string="true"> t1 = clock();</span></span></span> 
</div> <div class="se-115fc16c se-06d99b0c" data-slate-type="code-line" data-slate-object="block" 
data-key="798"> <span data-slate-object="text" data-key="799"><span data-slate-leaf="true" 
data-offset-key="799:0" data-first-offset="true"><span data-slate-string="true"> p-&gt;func();</span></span></span> 
</div> <div class="se-115fc16c se-06d99b0c" data-slate-type="code-line" data-slate-object="block" 
data-key="800"> <span data-slate-object="text" data-key="801"><span data-slate-leaf="true" 
data-offset-key="801:0" data-first-offset="true"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="801:1"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_3965006474" data-annotation-type="annotation"><span data-slate-string="true">long</span></span></span><span 
data-slate-leaf="true" data-offset-key="801:2"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="801:3"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_3335333948" data-annotation-type="annotation"><span data-slate-string="true">long</span></span></span><span 
data-slate-leaf="true" data-offset-key="801:4"><span data-slate-string="true"> t2 = clock();</span></span></span> 
</div> <div class="se-115fc16c se-06d99b0c" data-slate-type="code-line" data-slate-object="block" 
data-key="802"> <span data-slate-object="text" data-key="803"><span data-slate-leaf="true" 
data-offset-key="803:0" data-first-offset="true"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="803:1"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_7316166993" data-annotation-type="annotation"><span data-slate-string="true">if</span></span></span><span 
data-slate-leaf="true" data-offset-key="803:2"><span data-slate-string="true"> (test_run_flag) 
{</span></span></span> </div> <div class="se-115fc16c se-06d99b0c" data-slate-type="code-line" 
data-slate-object="block" data-key="804"> <span data-slate-object="text" data-key="805"><span 
data-slate-leaf="true" data-offset-key="805:0" data-first-offset="true"><span data-slate-string="true"> 
</span></span><span data-slate-leaf="true" data-offset-key="805:1"><span class=" gkhl-built_in" 
data-slate-object="annotation" data-annotation-key="gkann_8683534205" data-annotation-type="annotation"><span 
data-slate-string="true">printf</span></span></span><span data-slate-leaf="true" data-offset-key="805:2"><span 
data-slate-string="true">(</span></span><span data-slate-leaf="true" data-offset-key="805:3"><span 
class=" gkhl-string" data-slate-object="annotation" data-annotation-key="gkann_4538075526" 
data-annotation-type="annotation"><span data-slate-string="true">"[ OK ] "</span></span></span><span 
data-slate-leaf="true" data-offset-key="805:4"><span data-slate-string="true">);</span></span></span> 
</div> <div class="se-115fc16c se-06d99b0c" data-slate-type="code-line" data-slate-object="block" 
data-key="806"> <span data-slate-object="text" data-key="807"><span data-slate-leaf="true" 
data-offset-key="807:0" data-first-offset="true"><span data-slate-string="true"> } </span></span><span 
data-slate-leaf="true" data-offset-key="807:1"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_3749801228" data-annotation-type="annotation"><span data-slate-string="true">else</span></span></span><span 
data-slate-leaf="true" data-offset-key="807:2"><span data-slate-string="true"> {</span></span></span> 
</div> <div class="se-115fc16c se-06d99b0c" data-slate-type="code-line" data-slate-object="block" 
data-key="808"> <span data-slate-object="text" data-key="809"><span data-slate-leaf="true" 
data-offset-key="809:0" data-first-offset="true"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="809:1"><span class=" gkhl-built_in" data-slate-object="annotation" 
data-annotation-key="gkann_5176885898" data-annotation-type="annotation"><span data-slate-string="true">printf</span></span></span><span 
data-slate-leaf="true" data-offset-key="809:2"><span data-slate-string="true">(</span></span><span 
data-slate-leaf="true" data-offset-key="809:3"><span class=" gkhl-string" data-slate-object="annotation" 
data-annotation-key="gkann_2710668905" data-annotation-type="annotation"><span data-slate-string="true">"[ 
FAILED ] "</span></span></span><span data-slate-leaf="true" data-offset-key="809:4"><span data-slate-string="true">);</span></span></span> 
</div> <div class="se-115fc16c se-06d99b0c" data-slate-type="code-line" data-slate-object="block" 
data-key="810"> <span data-slate-object="text" data-key="811"><span data-slate-leaf="true" 
data-offset-key="811:0" data-first-offset="true"><span data-slate-string="true"> }</span></span></span> 
</div> <div class="se-115fc16c se-06d99b0c" data-slate-type="code-line" data-slate-object="block" 
data-key="812"> <span data-slate-object="text" data-key="813"><span data-slate-leaf="true" 
data-offset-key="813:0" data-first-offset="true"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="813:1"><span class=" gkhl-built_in" data-slate-object="annotation" 
data-annotation-key="gkann_8947584489" data-annotation-type="annotation"><span data-slate-string="true">printf</span></span></span><span 
data-slate-leaf="true" data-offset-key="813:2"><span data-slate-string="true">(</span></span><span 
data-slate-leaf="true" data-offset-key="813:3"><span class=" gkhl-string" data-slate-object="annotation" 
data-annotation-key="gkann_3872081925" data-annotation-type="annotation"><span data-slate-string="true">"%s"</span></span></span><span 
data-slate-leaf="true" data-offset-key="813:4"><span data-slate-string="true">, p-&gt;name);</span></span></span> 
</div> <div class="se-115fc16c se-06d99b0c" data-slate-type="code-line" data-slate-object="block" 
data-key="814"> <span data-slate-object="text" data-key="815"><span data-slate-leaf="true" 
data-offset-key="815:0" data-first-offset="true"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="815:1"><span class=" gkhl-built_in" data-slate-object="annotation" 
data-annotation-key="gkann_9997223018" data-annotation-type="annotation"><span data-slate-string="true">printf</span></span></span><span 
data-slate-leaf="true" data-offset-key="815:2"><span data-slate-string="true">(</span></span><span 
data-slate-leaf="true" data-offset-key="815:3"><span class=" gkhl-string" data-slate-object="annotation" 
data-annotation-key="gkann_3371702779" data-annotation-type="annotation"><span data-slate-string="true">" 
(%.0lf ms)\n\n"</span></span></span><span data-slate-leaf="true" data-offset-key="815:4"><span 
data-slate-string="true">, </span></span><span data-slate-leaf="true" data-offset-key="815:5"><span 
class=" gkhl-number" data-slate-object="annotation" data-annotation-key="gkann_1215453492" 
data-annotation-type="annotation"><span data-slate-string="true">1.0</span></span></span><span 
data-slate-leaf="true" data-offset-key="815:6"><span data-slate-string="true"> * (t2 - t1) 
/ CLOCKS_PER_SEC * </span></span><span data-slate-leaf="true" data-offset-key="815:7"><span 
class=" gkhl-number" data-slate-object="annotation" data-annotation-key="gkann_8155281524" 
data-annotation-type="annotation"><span data-slate-string="true">1000</span></span></span><span 
data-slate-leaf="true" data-offset-key="815:8"><span data-slate-string="true">);</span></span></span> 
</div> <div class="se-115fc16c se-06d99b0c" data-slate-type="code-line" data-slate-object="block" 
data-key="816"> <span data-slate-object="text" data-key="817"><span data-slate-leaf="true" 
data-offset-key="817:0" data-first-offset="true"><span data-slate-string="true"> }</span></span></span> 
</div> <div class="se-115fc16c se-06d99b0c" data-slate-type="code-line" data-slate-object="block" 
data-key="818"> <span data-slate-object="text" data-key="819"><span data-slate-leaf="true" 
data-offset-key="819:0" data-first-offset="true"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="819:1"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_1064395282" data-annotation-type="annotation"><span data-slate-string="true">return</span></span></span><span 
data-slate-leaf="true" data-offset-key="819:2"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="819:3"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_0396312761" data-annotation-type="annotation"><span data-slate-string="true">0</span></span></span><span 
data-slate-leaf="true" data-offset-key="819:4"><span data-slate-string="true">;</span></span></span> 
</div> <div class="se-115fc16c se-06d99b0c" data-slate-type="code-line" data-slate-object="block" 
data-key="820"> <span data-slate-object="text" data-key="821"><span data-slate-leaf="true" 
data-offset-key="821:0" data-first-offset="true"><span data-slate-string="true">}</span></span></span> 
</div> <div class="ps__rail-x" style="width: 365px; left: 0px; bottom: 0px;"> <div class="ps__thumb-x" 
tabindex="0" style="left: 0px; width: 227px;"></div> </div> <div class="ps__rail-y" style="top: 
0px; right: 0px;"> <div class="ps__thumb-y" tabindex="0" style="top: 0px; height: 0px;"></div> 
</div> </div> </div> <div class="se-367c8c14 " data-slate-type="paragraph" data-slate-object="block" 
data-key="822"> <span data-slate-object="text" data-key="823"><span data-slate-leaf="true" 
data-offset-key="823:0" data-first-offset="true"><span data-slate-string="true">这样，我们就彻底完成了测试用例函数信息存储部分的“</span></span></span><span 
data-slate-object="text" data-key="824"><span data-slate-leaf="true" data-offset-key="824:0" 
data-first-offset="true"><span class="se-b2b71d80" data-slate-type="bold" data-slate-object="mark"><span 
data-slate-string="true">链表</span></span></span></span><span data-slate-object="text" data-key="825"><span 
data-slate-leaf="true" data-offset-key="825:0" data-first-offset="true"><span data-slate-string="true">”改造过程。</span></span></span> 
</div> <div class="se-0540db04 " data-slate-type="paragraph" data-slate-object="block" data-key="826"> 
<span data-slate-object="text" data-key="827"><span data-slate-leaf="true" data-offset-key="827:0" 
data-first-offset="true"><span data-slate-string="true">对于上面的这份代码实现，你会发现，链表节点空间是通过 malloc 函数动态申请出来的，可在我们的程序中，并没有对这些空间使用 
free 进行释放，如果你想让这个程序对空间的申请与回收做到有始有终，变得更加干净，那应该怎么办呢？</span></span></span> </div> <div class="se-e8eee643 
" data-slate-type="paragraph" data-slate-object="block" data-key="828"> <span data-slate-object="text" 
data-key="829"><span data-slate-leaf="true" data-offset-key="829:0" data-first-offset="true"><span 
data-slate-string="true">这里你可以借助 </span></span></span><span data-slate-type="code" data-slate-object="inline" 
data-key="830" class="se-86625de3"><span data-slate-object="text" data-key="831"><span data-slate-leaf="true" 
data-offset-key="831:0" data-first-offset="true"><span data-slate-string="true">__attribute__</span></span></span></span><span 
data-slate-object="text" data-key="832"><span data-slate-leaf="true" data-offset-key="832:0" 
data-first-offset="true"><span data-slate-string="true">((destructor)) 的功能，之前我们介绍了一个</span></span></span><span 
data-slate-type="code" data-slate-object="inline" data-key="833" class="se-86625de3"><span 
data-slate-object="text" data-key="834"><span data-slate-leaf="true" data-offset-key="834:0" 
data-first-offset="true"><span data-slate-string="true">__attribute__</span></span></span></span><span 
data-slate-object="text" data-key="835"><span data-slate-leaf="true" data-offset-key="835:0" 
data-first-offset="true"><span data-slate-string="true">((constructor)) 的作用是让函数先于主函数执行，而 destructor 
就是使函数在主函数结束以后才执行的函数特性设置。有了这个特性设置，你可以实现一个函数，专门用来销毁测试函数链表所占存储空间，这样在逻辑上，你的程序会变得更完美。当然，你即使不这么做，也不会影响到原有的程序功能的正确性。</span></span></span> 
</div> <h2 class="se-c9b43564" data-slate-type="heading" data-slate-object="block" data-key="836"><span 
data-slate-object="text" data-key="837"><span data-slate-leaf="true" data-offset-key="837:0" 
data-first-offset="true"><span data-slate-string="true">项目小结</span></span></span></h2> <div 
class="se-389723c2 " data-slate-type="paragraph" data-slate-object="block" data-key="838"> 
<span data-slate-object="text" data-key="839"><span data-slate-leaf="true" data-offset-key="839:0" 
data-first-offset="true"><span data-slate-string="true">至此，我们关于测试框架开发的内容，就算是告一段落了。</span></span></span> 
</div> <div class="se-60463835 " data-slate-type="paragraph" data-slate-object="block" data-key="840"> 
<span data-slate-object="text" data-key="841"><span data-slate-leaf="true" data-offset-key="841:0" 
data-first-offset="true"><span data-slate-string="true">从 26 讲到 29 讲，我们经历了一个项目从 0 到 1 的过程，继而又完成了项目从 
1 到 1.5 的升级。所谓从 0 到 1 就是项目从最初的想法变成代码的过程，从 1 到 1.5 就是我们对于代码的优化过程。这是一个追求极致、不断优化项目的过程。</span></span></span> 
</div> <div class="se-bad35d6a " data-slate-type="paragraph" data-slate-object="block" data-key="842"> 
<span data-slate-object="text" data-key="843"><span data-slate-leaf="true" data-offset-key="843:0" 
data-first-offset="true"><span data-slate-string="true">关于测试框架开发的讲解内容虽然结束了，但我希望这几节课可以成为你优化这份代码的一个起点。日后，你可以选择增加额外的功能，修改实现的架构，甚至是使用不同的语言重新进行实现，哪怕是一个小小的改动，都是值得称赞的。</span></span></span> 
</div> <div class="se-8454c6b7 " data-slate-type="paragraph" data-slate-object="block" data-key="844"> 
<span data-slate-object="text" data-key="845"><span data-slate-leaf="true" data-offset-key="845:0" 
data-first-offset="true"><span data-slate-string="true">在下节课，我将指导你完成一个简易的计算器程序，也算是给我们这个课程一个圆满的结束。</span></span></span> 
</div> <div class="se-99ffff7a " data-slate-type="paragraph" data-slate-object="block" data-key="846"> 
<span data-slate-object="text" data-key="847"><span data-slate-leaf="true" data-offset-key="847:0" 
data-first-offset="true"><span data-slate-string="true">好了，今天就到这里了，我是胡光，我们下一节课见。</span></span></span> 
</div> </div>', body_summary='', bundle='book', delta=0, body_format='full_html', langcode='zh-hans', 
revision_id=769 where entity_id=769 
 {executed in 2 msec}
2020-11-24 19:04:10.195 INFO  jdbc.sqltiming Line:373 - update node_revision__body set body_value='<div data-slate-editor="true" data-key="611" autocorrect="off" 
spellcheck="false" data-gramm="false" style="outline: none; white-space: pre-wrap; overflow-wrap: 
break-word;"> <div class="se-f6da8f95 " data-slate-type="paragraph" data-slate-object="block" 
data-key="612"> <span data-slate-object="text" data-key="613"><span data-slate-leaf="true" 
data-offset-key="613:0" data-first-offset="true"><span data-slate-string="true">你好，我是胡光，欢迎回来。</span></span></span> 
</div> <div class="se-b44db160 " data-slate-type="paragraph" data-slate-object="block" data-key="614"> 
<span data-slate-object="text" data-key="615"><span data-slate-leaf="true" data-offset-key="615:0" 
data-first-offset="true"><span data-slate-string="true">上节课中，我们通过参考 gtest 的输出，完善了我们自己的测试框架的输出信息，也就是添加了测试用例的名称、运行结果以及运行时间。并且，我提到了在一般情况下，项目中的功能开发原则：</span></span></span><span 
data-slate-object="text" data-key="616"><span data-slate-leaf="true" data-offset-key="616:0" 
data-first-offset="true"><span class="se-b24d5161" data-slate-type="bold" data-slate-object="mark"><span 
data-slate-string="true">功能迭代，数据先行</span></span></span></span><span data-slate-object="text" 
data-key="617"><span data-slate-leaf="true" data-offset-key="617:0" data-first-offset="true"><span 
data-slate-string="true">。就是要开发新的功能之前，我们应该先考虑清楚实现这部分功能相关的数据，在系统中的存储与使用的情况，只有这样，才能更好地完成功能的实现与迭代优化。</span></span></span> 
</div> <div class="se-6d8c877e " data-slate-type="paragraph" data-slate-object="block" data-key="618"> 
<span data-slate-object="text" data-key="619"><span data-slate-leaf="true" data-offset-key="619:0" 
data-first-offset="true"><span data-slate-string="true">今天迎来我们整个测试框架项目的最后一节课。这节课的目的，一是对前几节课内容进行一个总结，二是向你说明我们现在开发的测试框架代码，其实还有很多优化的空间。至于这个优化空间是什么呢？这次我将带着你结合之前学习的“链表”知识，对测试框架进行一个具体的优化改进。</span></span></span> 
</div> <div class="se-cd5aec3c " data-slate-type="paragraph" data-slate-object="block" data-key="620"> 
<span data-slate-object="text" data-key="621"><span data-slate-leaf="true" data-offset-key="621:0" 
data-first-offset="true"><span data-slate-string="true">关于测试框架的优化，是一个不断学习的过程。在这个过程中，你深刻体会到“知不足，然后能自反也”这句话的含义。就是在优化代码的过程中，你会发现自己的不足，然后努力提高自己的能力去弥补不足；当你提升了自己之后，你又会看到自己在其他方面的不足，进而继续提高自己。</span></span></span> 
</div> <div class="se-df197c27 " data-slate-type="paragraph" data-slate-object="block" data-key="622"> 
<span data-slate-object="text" data-key="623"><span data-slate-leaf="true" data-offset-key="623:0" 
data-first-offset="true"><span data-slate-string="true">好了，废话不多说，我们正式开始今天的学习。</span></span></span> 
</div> <h2 class="se-9c12ef98" data-slate-type="heading" data-slate-object="block" data-key="624"><span 
data-slate-object="text" data-key="625"><span data-slate-leaf="true" data-offset-key="625:0" 
data-first-offset="true"><span data-slate-string="true">揭晓答案：EXPECT_EQ 宏究竟是如何实现的</span></span></span></h2> 
<div class="se-09d88e48 " data-slate-type="paragraph" data-slate-object="block" data-key="626"> 
<span data-slate-object="text" data-key="627"><span data-slate-leaf="true" data-offset-key="627:0" 
data-first-offset="true"><span data-slate-string="true">在对测试框架进行优化之前呢，我先来回答一下，可能困扰了你两节课的一个问题：就是 
EXPECT_EQ 宏究竟是如何实现的？这个问题的答案呢，我给出一个可行的实现，仅供参考。</span></span></span> </div> <div class="se-bed68031 
" data-slate-type="paragraph" data-slate-object="block" data-key="628"> <span data-slate-object="text" 
data-key="629"><span data-slate-leaf="true" data-offset-key="629:0" data-first-offset="true"><span 
data-slate-string="true">首先，EXPECT_EQ(a, b) 在 a，b 两部分值相等的时候，不会产生额外的输出信息，而当 a，b 两部分不相等的时候，就会输出相应的提示信息。如下所示：</span></span></span> 
</div> <div class="se-e83d291b se-0c340023" data-slate-type="pre" data-slate-object="block" 
data-key="630" data-code-language="sql"> <div class="se-e8d85f28 se-04bd23c8"> <span></span> 
</div> <div class="se-b60837b4"> <div class="se-3ef0f7be se-6f6dbc4c" data-code-line-number="1"></div> 
<div class="se-3ef0f7be se-6f6dbc4c" data-code-line-number="2"></div> <div class="se-3ef0f7be 
se-6f6dbc4c" data-code-line-number="3"></div> <div class="se-3ef0f7be se-6f6dbc4c" data-code-line-number="4"></div> 
<div class="se-3ef0f7be se-6f6dbc4c" data-code-line-number="5"></div> </div> <div class="se-f6f06147 
ps"> <div class="se-115fc16c se-06d99b0c" data-slate-type="code-line" data-slate-object="block" 
data-key="631"> <span data-slate-object="text" data-key="632"><span data-slate-leaf="true" 
data-offset-key="632:0" data-first-offset="true"><span data-slate-string="true">gtest_test.cpp:25: 
Failure</span></span></span> </div> <div class="se-115fc16c se-06d99b0c" data-slate-type="code-line" 
data-slate-object="block" data-key="633"> <span data-slate-object="text" data-key="634"><span 
data-slate-leaf="true" data-offset-key="634:0" data-first-offset="true"><span data-slate-string="true">Expected 
equality of these </span></span><span data-slate-leaf="true" data-offset-key="634:1"><span 
class=" gkhl-keyword" data-slate-object="annotation" data-annotation-key="gkann_5315305890" 
data-annotation-type="annotation"><span data-slate-string="true">values</span></span></span><span 
data-slate-leaf="true" data-offset-key="634:2"><span data-slate-string="true">:</span></span></span> 
</div> <div class="se-115fc16c se-06d99b0c" data-slate-type="code-line" data-slate-object="block" 
data-key="635"> <span data-slate-object="text" data-key="636"><span data-slate-leaf="true" 
data-offset-key="636:0" data-first-offset="true"><span data-slate-string="true"> is_prime(</span></span><span 
data-slate-leaf="true" data-offset-key="636:1"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_3806038567" data-annotation-type="annotation"><span data-slate-string="true">4</span></span></span><span 
data-slate-leaf="true" data-offset-key="636:2"><span data-slate-string="true">)</span></span></span> 
</div> <div class="se-115fc16c se-06d99b0c" data-slate-type="code-line" data-slate-object="block" 
data-key="637"> <span data-slate-object="text" data-key="638"><span data-slate-leaf="true" 
data-offset-key="638:0" data-first-offset="true"><span data-slate-string="true"> Which </span></span><span 
data-slate-leaf="true" data-offset-key="638:1"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_1536362423" data-annotation-type="annotation"><span data-slate-string="true">is</span></span></span><span 
data-slate-leaf="true" data-offset-key="638:2"><span data-slate-string="true">: </span></span><span 
data-slate-leaf="true" data-offset-key="638:3"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_9693169303" data-annotation-type="annotation"><span data-slate-string="true">1</span></span></span></span> 
</div> <div class="se-115fc16c se-06d99b0c" data-slate-type="code-line" data-slate-object="block" 
data-key="639"> <span data-slate-object="text" data-key="640"><span data-slate-leaf="true" 
data-offset-key="640:0" data-first-offset="true"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="640:1"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_7305529292" data-annotation-type="annotation"><span data-slate-string="true">0</span></span></span></span> 
</div> <div class="ps__rail-x" style="left: 0px; bottom: 0px;"> <div class="ps__thumb-x" tabindex="0" 
style="left: 0px; width: 0px;"></div> </div> <div class="ps__rail-y" style="top: 0px; right: 
0px;"> <div class="ps__thumb-y" tabindex="0" style="top: 0px; height: 0px;"></div> </div> </div> 
</div> <div class="se-2dacdf9e " data-slate-type="paragraph" data-slate-object="block" data-key="641"> 
<span data-slate-object="text" data-key="642"><span data-slate-leaf="true" data-offset-key="642:0" 
data-first-offset="true"><span data-slate-string="true">这段输出信息，对应的是源代码中的 “EXPECT_EQ(is_prime(4), 
0); ”的输出。如你所见，第 1 行的输出内容包含了源文件名（gtest_test.cpp），EXPECT_EQ 宏所在的代码位置（25），以及一个提示结果（Failure）。</span></span></span> 
</div> <div class="se-f35660c1 " data-slate-type="paragraph" data-slate-object="block" data-key="643"> 
<span data-slate-object="text" data-key="644"><span data-slate-leaf="true" data-offset-key="644:0" 
data-first-offset="true"><span data-slate-string="true">接下来的信息，你自己就可以看懂了，就是关于 EXPECT_EQ 传入两部分的值。对于函数调用部分，EXPECE_EQ 
会输出这个函数的调用形式及返回值信息，也就是输出中的 “is_prime(4)”“Which is: 1” 这段内容。而对于数值信息，只会输出数值信息本身，也就是输出信息中第 5 行的那个 
0。</span></span></span> </div> <div class="se-a0008509 " data-slate-type="paragraph" data-slate-object="block" 
data-key="645"> <span data-slate-object="text" data-key="646"><span data-slate-leaf="true" 
data-offset-key="646:0" data-first-offset="true"><span data-slate-string="true">实际上，要想在宏中实现类似于这种根据传入参数类型，选择输出形式的功能，对于现在的你来说可能有点困难。所以，我们可以重新设计一种输出形式，只要能够清晰地展示错误信息就可以。</span></span></span> 
</div> <div class="se-d03110b7 " data-slate-type="paragraph" data-slate-object="block" data-key="647"> 
<span data-slate-object="text" data-key="648"><span data-slate-leaf="true" data-offset-key="648:0" 
data-first-offset="true"><span data-slate-string="true">重新设计的输出提示，如下所示：</span></span></span> 
</div> <div class="se-b215b78e se-ac883f7b" data-slate-type="pre" data-slate-object="block" 
data-key="649" data-code-language="python"> <div class="se-f31f1980 se-e20a55bd"> <span></span> 
</div> <div class="se-b8d3e017"> <div class="se-6b5c807a se-0331fb2c" data-code-line-number="1"></div> 
<div class="se-6b5c807a se-0331fb2c" data-code-line-number="2"></div> <div class="se-6b5c807a 
se-0331fb2c" data-code-line-number="3"></div> </div> <div class="se-154f7c50 ps"> <div class="se-115fc16c 
se-06d99b0c" data-slate-type="code-line" data-slate-object="block" data-key="650"> <span data-slate-object="text" 
data-key="651"><span data-slate-leaf="true" data-offset-key="651:0" data-first-offset="true"><span 
data-slate-string="true">gtest_test.cpp:</span></span><span data-slate-leaf="true" data-offset-key="651:1"><span 
class=" gkhl-number" data-slate-object="annotation" data-annotation-key="gkann_2524007011" 
data-annotation-type="annotation"><span data-slate-string="true">25</span></span></span><span 
data-slate-leaf="true" data-offset-key="651:2"><span data-slate-string="true">: Failure</span></span></span> 
</div> <div class="se-115fc16c se-06d99b0c" data-slate-type="code-line" data-slate-object="block" 
data-key="652"> <span data-slate-object="text" data-key="653"><span data-slate-leaf="true" 
data-offset-key="653:0" data-first-offset="true"><span data-slate-string="true">Expected (is_prime(</span></span><span 
data-slate-leaf="true" data-offset-key="653:1"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_0850861014" data-annotation-type="annotation"><span data-slate-string="true">4</span></span></span><span 
data-slate-leaf="true" data-offset-key="653:2"><span data-slate-string="true">) == </span></span><span 
data-slate-leaf="true" data-offset-key="653:3"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_8945297097" data-annotation-type="annotation"><span data-slate-string="true">0</span></span></span><span 
data-slate-leaf="true" data-offset-key="653:4"><span data-slate-string="true">):</span></span></span> 
</div> <div class="se-115fc16c se-06d99b0c" data-slate-type="code-line" data-slate-object="block" 
data-key="654"> <span data-slate-object="text" data-key="655"><span data-slate-leaf="true" 
data-offset-key="655:0" data-first-offset="true"><span data-slate-string="true"> Which </span></span><span 
data-slate-leaf="true" data-offset-key="655:1"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_6405389263" data-annotation-type="annotation"><span data-slate-string="true">is</span></span></span><span 
data-slate-leaf="true" data-offset-key="655:2"><span data-slate-string="true">: (</span></span><span 
data-slate-leaf="true" data-offset-key="655:3"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_4387718237" data-annotation-type="annotation"><span data-slate-string="true">1</span></span></span><span 
data-slate-leaf="true" data-offset-key="655:4"><span data-slate-string="true"> == </span></span><span 
data-slate-leaf="true" data-offset-key="655:5"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_5539789486" data-annotation-type="annotation"><span data-slate-string="true">0</span></span></span><span 
data-slate-leaf="true" data-offset-key="655:6"><span data-slate-string="true">)</span></span></span> 
</div> <div class="ps__rail-x" style="left: 0px; bottom: 0px;"> <div class="ps__thumb-x" tabindex="0" 
style="left: 0px; width: 0px;"></div> </div> <div class="ps__rail-y" style="top: 0px; right: 
0px;"> <div class="ps__thumb-y" tabindex="0" style="top: 0px; height: 0px;"></div> </div> </div> 
</div> <div class="se-4c617fdf " data-slate-type="paragraph" data-slate-object="block" data-key="656"> 
<span data-slate-object="text" data-key="657"><span data-slate-leaf="true" data-offset-key="657:0" 
data-first-offset="true"><span data-slate-string="true">修改完以后的输出信息，你可以看到，第 2 行就是传入 EXPECT_EQ 
宏两部分的比较，第 3 行是这两部分实际输出值的比较。</span></span></span> </div> <div class="se-82ea2b13 " data-slate-type="paragraph" 
data-slate-object="block" data-key="658"> <span data-slate-object="text" data-key="659"><span 
data-slate-leaf="true" data-offset-key="659:0" data-first-offset="true"><span data-slate-string="true">重新设计了输出信息以后，就可以来看看 
EXPECT_EQ 宏的实现了：</span></span></span> </div> <div class="se-7d2ce0cf se-56bb6f20" data-slate-type="pre" 
data-slate-object="block" data-key="660" data-code-language="python"> <div class="se-59cd8977 
se-1cb87b86"> <span></span> </div> <div class="se-97022ab6"> <div class="se-f31bf68e se-8bd48ce0" 
data-code-line-number="1"></div> <div class="se-f31bf68e se-8bd48ce0" data-code-line-number="2"></div> 
<div class="se-f31bf68e se-8bd48ce0" data-code-line-number="3"></div> <div class="se-f31bf68e 
se-8bd48ce0" data-code-line-number="4"></div> <div class="se-f31bf68e se-8bd48ce0" data-code-line-number="5"></div> 
<div class="se-f31bf68e se-8bd48ce0" data-code-line-number="6"></div> <div class="se-f31bf68e 
se-8bd48ce0" data-code-line-number="7"></div> <div class="se-f31bf68e se-8bd48ce0" data-code-line-number="8"></div> 
<div class="se-f31bf68e se-8bd48ce0" data-code-line-number="9"></div> <div class="se-f31bf68e 
se-8bd48ce0" data-code-line-number="10"></div> <div class="se-f31bf68e se-8bd48ce0" data-code-line-number="11"></div> 
<div class="se-f31bf68e se-8bd48ce0" data-code-line-number="12"></div> <div class="se-f31bf68e 
se-8bd48ce0" data-code-line-number="13"></div> </div> <div class="se-1cb88b6e ps ps--active-x"> 
<div class="se-115fc16c se-06d99b0c" data-slate-type="code-line" data-slate-object="block" 
data-key="661"> <span data-slate-object="text" data-key="662"><span data-slate-leaf="true" 
data-offset-key="662:0" data-first-offset="true"><span class=" gkhl-comment" data-slate-object="annotation" 
data-annotation-key="gkann_0930514344" data-annotation-type="annotation"><span data-slate-string="true">#define 
EXPECT(a, b, comp) { \</span></span></span></span> </div> <div class="se-115fc16c se-06d99b0c" 
data-slate-type="code-line" data-slate-object="block" data-key="663"> <span data-slate-object="text" 
data-key="664"><span data-slate-leaf="true" data-offset-key="664:0" data-first-offset="true"><span 
data-slate-string="true"> __typeof(a) val_a = (a), val_b = (b); \</span></span></span> </div> 
<div class="se-115fc16c se-06d99b0c" data-slate-type="code-line" data-slate-object="block" 
data-key="665"> <span data-slate-object="text" data-key="666"><span data-slate-leaf="true" 
data-offset-key="666:0" data-first-offset="true"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="666:1"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_9992613298" data-annotation-type="annotation"><span data-slate-string="true">if</span></span></span><span 
data-slate-leaf="true" data-offset-key="666:2"><span data-slate-string="true"> (!(val_a comp 
val_b)) { \</span></span></span> </div> <div class="se-115fc16c se-06d99b0c" data-slate-type="code-line" 
data-slate-object="block" data-key="667"> <span data-slate-object="text" data-key="668"><span 
data-slate-leaf="true" data-offset-key="668:0" data-first-offset="true"><span data-slate-string="true"> 
printf(</span></span><span data-slate-leaf="true" data-offset-key="668:1"><span class=" gkhl-string" 
data-slate-object="annotation" data-annotation-key="gkann_7760876582" data-annotation-type="annotation"><span 
data-slate-string="true">"%s:%d: Failure\n"</span></span></span><span data-slate-leaf="true" 
data-offset-key="668:2"><span data-slate-string="true">, __FILE__, __LINE__); \</span></span></span> 
</div> <div class="se-115fc16c se-06d99b0c" data-slate-type="code-line" data-slate-object="block" 
data-key="669"> <span data-slate-object="text" data-key="670"><span data-slate-leaf="true" 
data-offset-key="670:0" data-first-offset="true"><span data-slate-string="true"> printf(</span></span><span 
data-slate-leaf="true" data-offset-key="670:1"><span class=" gkhl-string" data-slate-object="annotation" 
data-annotation-key="gkann_9105787157" data-annotation-type="annotation"><span data-slate-string="true">"Expected 
(%s %s %s):\n"</span></span></span><span data-slate-leaf="true" data-offset-key="670:2"><span 
data-slate-string="true">, </span></span><span data-slate-leaf="true" data-offset-key="670:3"><span 
class=" gkhl-comment" data-slate-object="annotation" data-annotation-key="gkann_0881726880" 
data-annotation-type="annotation"><span data-slate-string="true">#a, #comp, #b); \</span></span></span></span> 
</div> <div class="se-115fc16c se-06d99b0c" data-slate-type="code-line" data-slate-object="block" 
data-key="671"> <span data-slate-object="text" data-key="672"><span data-slate-leaf="true" 
data-offset-key="672:0" data-first-offset="true"><span data-slate-string="true"> printf(</span></span><span 
data-slate-leaf="true" data-offset-key="672:1"><span class=" gkhl-string" data-slate-object="annotation" 
data-annotation-key="gkann_8825261279" data-annotation-type="annotation"><span data-slate-string="true">" 
Which is: (%d %s %d)\n"</span></span></span><span data-slate-leaf="true" data-offset-key="672:2"><span 
data-slate-string="true">, val_a, </span></span><span data-slate-leaf="true" data-offset-key="672:3"><span 
class=" gkhl-comment" data-slate-object="annotation" data-annotation-key="gkann_5389160832" 
data-annotation-type="annotation"><span data-slate-string="true">#comp, val_b); \</span></span></span></span> 
</div> <div class="se-115fc16c se-06d99b0c" data-slate-type="code-line" data-slate-object="block" 
data-key="673"> <span data-slate-object="text" data-key="674"><span data-slate-leaf="true" 
data-offset-key="674:0" data-first-offset="true"><span data-slate-string="true"> test_run_flag 
= </span></span><span data-slate-leaf="true" data-offset-key="674:1"><span class=" gkhl-number" 
data-slate-object="annotation" data-annotation-key="gkann_5491699096" data-annotation-type="annotation"><span 
data-slate-string="true">0</span></span></span><span data-slate-leaf="true" data-offset-key="674:2"><span 
data-slate-string="true">; \</span></span></span> </div> <div class="se-115fc16c se-06d99b0c" 
data-slate-type="code-line" data-slate-object="block" data-key="675"> <span data-slate-object="text" 
data-key="676"><span data-slate-leaf="true" data-offset-key="676:0" data-first-offset="true"><span 
data-slate-string="true"> } \</span></span></span> </div> <div class="se-115fc16c se-06d99b0c" 
data-slate-type="code-line" data-slate-object="block" data-key="677"> <span data-slate-object="text" 
data-key="678"><span data-slate-leaf="true" data-offset-key="678:0" data-first-offset="true"><span 
data-slate-string="true">}</span></span></span> </div> <div class="se-115fc16c se-06d99b0c" 
data-slate-type="code-line" data-slate-object="block" data-key="679"> <span data-slate-object="text" 
data-key="680"><span data-slate-leaf="true" data-offset-key="680:0" data-first-offset="true"><span 
class=" gkhl-comment" data-slate-object="annotation" data-annotation-key="gkann_3252151973" 
data-annotation-type="annotation"><span data-slate-string="true">#define EXPECT_EQ(a, b) EXPECT(a, 
b, ==)</span></span></span></span> </div> <div class="se-115fc16c se-06d99b0c" data-slate-type="code-line" 
data-slate-object="block" data-key="681"> <span data-slate-object="text" data-key="682"><span 
data-slate-leaf="true" data-offset-key="682:0" data-first-offset="true"><span class=" gkhl-comment" 
data-slate-object="annotation" data-annotation-key="gkann_8398138757" data-annotation-type="annotation"><span 
data-slate-string="true">#define EXPECT_LT(a, b) EXPECT(a, b, &lt;)</span></span></span></span> 
</div> <div class="se-115fc16c se-06d99b0c" data-slate-type="code-line" data-slate-object="block" 
data-key="683"> <span data-slate-object="text" data-key="684"><span data-slate-leaf="true" 
data-offset-key="684:0" data-first-offset="true"><span class=" gkhl-comment" data-slate-object="annotation" 
data-annotation-key="gkann_6705504829" data-annotation-type="annotation"><span data-slate-string="true">#define 
EXPECT_GT(a, b) EXPECT(a, b, &gt;)</span></span></span></span> </div> <div class="se-115fc16c 
se-06d99b0c" data-slate-type="code-line" data-slate-object="block" data-key="685"> <span data-slate-object="text" 
data-key="686"><span data-slate-leaf="true" data-offset-key="686:0" data-first-offset="true"><span 
class=" gkhl-comment" data-slate-object="annotation" data-annotation-key="gkann_4165050475" 
data-annotation-type="annotation"><span data-slate-string="true">#define EXPECT_NE(a, b) EXPECT(a, 
b, !=)</span></span></span></span> </div> <div class="ps__rail-x" style="width: 365px; left: 
0px; bottom: 0px;"> <div class="ps__thumb-x" tabindex="0" style="left: 0px; width: 251px;"></div> 
</div> <div class="ps__rail-y" style="top: 0px; right: 0px;"> <div class="ps__thumb-y" tabindex="0" 
style="top: 0px; height: 0px;"></div> </div> </div> </div> <div class="se-6daffbd1 " data-slate-type="paragraph" 
data-slate-object="block" data-key="687"> <span data-slate-object="text" data-key="688"><span 
data-slate-leaf="true" data-offset-key="688:0" data-first-offset="true"><span data-slate-string="true">在这段实现中，你会发现，我们不仅实现了 
EXPECT_EQ，还额外实现了 EXPECT_LT、EXPECT_GT、EXPECT_NE 等用于比较的宏。其中，LT 是英文 little 的缩写，是判断小于关系的；GT 是 great 
的缩写，是判断大于关系的；NE 是 not equal 的缩写，是判断不等于关系的。而这些所有的宏，都是基于 EXPECT 宏实现的。</span></span></span> </div> 
<div class="se-875d6e96 " data-slate-type="paragraph" data-slate-object="block" data-key="689"> 
<span data-slate-object="text" data-key="690"><span data-slate-leaf="true" data-offset-key="690:0" 
data-first-offset="true"><span data-slate-string="true">我们将用于比较的运算符，当作参数传递给 EXPECT 宏。有了 EXPECT 
宏以后，你就可以参考代码中的第 10～13 行的内容，轻松地扩展出用于小于等于或者大于等于的宏了。由于 EXPECT 宏的实现，全都是我们之前学习过的知识点，所以在这里我就不再赘述了，你可以自行阅读文稿中的代码。</span></span></span> 
</div> <h2 class="se-16e22c06" data-slate-type="heading" data-slate-object="block" data-key="691"><span 
data-slate-object="text" data-key="692"><span data-slate-leaf="true" data-offset-key="692:0" 
data-first-offset="true"><span data-slate-string="true">用链表存储测试用例</span></span></span></h2> 
<div class="se-3d53efa0 " data-slate-type="paragraph" data-slate-object="block" data-key="693"> 
<span data-slate-object="text" data-key="694"><span data-slate-leaf="true" data-offset-key="694:0" 
data-first-offset="true"><span data-slate-string="true">看完了 EXPECT 宏的参考实现以后，整个测试框架的基础功能，就算是彻底搭建完成了。</span></span></span> 
</div> <div class="se-bc458f80 " data-slate-type="paragraph" data-slate-object="block" data-key="695"> 
<span data-slate-object="text" data-key="696"><span data-slate-leaf="true" data-offset-key="696:0" 
data-first-offset="true"><span data-slate-string="true">接下来，我们再重新审视下面这段函数指针数组 test_function_arr 
的代码设计，来思考一下这个测试框架中还有没有可以优化的地方。</span></span></span> </div> <div class="se-eadc7655 se-5472005d" 
data-slate-type="pre" data-slate-object="block" data-key="697" data-code-language="cpp"> <div 
class="se-1be81d49 se-ba6ce65c"> <span></span> </div> <div class="se-8a520ab4"> <div class="se-4a509eb1 
se-43924b0c" data-code-line-number="1"></div> <div class="se-4a509eb1 se-43924b0c" data-code-line-number="2"></div> 
<div class="se-4a509eb1 se-43924b0c" data-code-line-number="3"></div> <div class="se-4a509eb1 
se-43924b0c" data-code-line-number="4"></div> <div class="se-4a509eb1 se-43924b0c" data-code-line-number="5"></div> 
</div> <div class="se-b9367190 ps ps--active-x"> <div class="se-115fc16c se-06d99b0c" data-slate-type="code-line" 
data-slate-object="block" data-key="698"> <span data-slate-object="text" data-key="699"><span 
data-slate-leaf="true" data-offset-key="699:0" data-first-offset="true"><span class=" gkhl-class" 
data-slate-object="annotation" data-annotation-key="gkann_1028904193" data-annotation-type="annotation"><span 
class=" gkhl-keyword" data-slate-object="annotation" data-annotation-key="gkann_0919315412" 
data-annotation-type="annotation"><span data-slate-string="true">struct</span></span></span></span><span 
data-slate-leaf="true" data-offset-key="699:1"><span class=" gkhl-class" data-slate-object="annotation" 
data-annotation-key="gkann_1028904193" data-annotation-type="annotation"><span data-slate-string="true"> 
</span></span></span><span data-slate-leaf="true" data-offset-key="699:2"><span class=" gkhl-class" 
data-slate-object="annotation" data-annotation-key="gkann_1028904193" data-annotation-type="annotation"><span 
class=" gkhl-title" data-slate-object="annotation" data-annotation-key="gkann_0509130069" data-annotation-type="annotation"><span 
data-slate-string="true">test_function_info_t</span></span></span></span><span data-slate-leaf="true" 
data-offset-key="699:3"><span class=" gkhl-class" data-slate-object="annotation" data-annotation-key="gkann_1028904193" 
data-annotation-type="annotation"><span data-slate-string="true"> {</span></span></span></span> 
</div> <div class="se-115fc16c se-06d99b0c" data-slate-type="code-line" data-slate-object="block" 
data-key="700"> <span data-slate-object="text" data-key="701"><span data-slate-leaf="true" 
data-offset-key="701:0" data-first-offset="true"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="701:1"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_4756963001" data-annotation-type="annotation"><span data-slate-string="true">test_function_t</span></span></span><span 
data-slate-leaf="true" data-offset-key="701:2"><span data-slate-string="true"> func; </span></span><span 
data-slate-leaf="true" data-offset-key="701:3"><span class=" gkhl-comment" data-slate-object="annotation" 
data-annotation-key="gkann_1162170555" data-annotation-type="annotation"><span data-slate-string="true">// 
测试用例函数指针，指向测试用例函数</span></span></span></span> </div> <div class="se-115fc16c se-06d99b0c" data-slate-type="code-line" 
data-slate-object="block" data-key="702"> <span data-slate-object="text" data-key="703"><span 
data-slate-leaf="true" data-offset-key="703:0" data-first-offset="true"><span data-slate-string="true"> 
</span></span><span data-slate-leaf="true" data-offset-key="703:1"><span class=" gkhl-keyword" 
data-slate-object="annotation" data-annotation-key="gkann_6577029244" data-annotation-type="annotation"><span 
data-slate-string="true">const</span></span></span><span data-slate-leaf="true" data-offset-key="703:2"><span 
data-slate-string="true"> </span></span><span data-slate-leaf="true" data-offset-key="703:3"><span 
class=" gkhl-keyword" data-slate-object="annotation" data-annotation-key="gkann_7748940888" 
data-annotation-type="annotation"><span data-slate-string="true">char</span></span></span><span 
data-slate-leaf="true" data-offset-key="703:4"><span data-slate-string="true"> *name; </span></span><span 
data-slate-leaf="true" data-offset-key="703:5"><span class=" gkhl-comment" data-slate-object="annotation" 
data-annotation-key="gkann_5676941389" data-annotation-type="annotation"><span data-slate-string="true">// 
指向测试用例名称</span></span></span></span> </div> <div class="se-115fc16c se-06d99b0c" data-slate-type="code-line" 
data-slate-object="block" data-key="704"> <span data-slate-object="text" data-key="705"><span 
data-slate-leaf="true" data-offset-key="705:0" data-first-offset="true"><span data-slate-string="true">} 
test_function_arr[</span></span><span data-slate-leaf="true" data-offset-key="705:1"><span 
class=" gkhl-number" data-slate-object="annotation" data-annotation-key="gkann_7946641458" 
data-annotation-type="annotation"><span data-slate-string="true">100</span></span></span><span 
data-slate-leaf="true" data-offset-key="705:2"><span data-slate-string="true">];</span></span></span> 
</div> <div class="se-115fc16c se-06d99b0c" data-slate-type="code-line" data-slate-object="block" 
data-key="706"> <span data-slate-object="text" data-key="707"><span data-slate-leaf="true" 
data-offset-key="707:0" data-first-offset="true"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_7897580932" data-annotation-type="annotation"><span data-slate-string="true">int</span></span></span><span 
data-slate-leaf="true" data-offset-key="707:1"><span data-slate-string="true"> test_function_cnt 
= </span></span><span data-slate-leaf="true" data-offset-key="707:2"><span class=" gkhl-number" 
data-slate-object="annotation" data-annotation-key="gkann_2775453714" data-annotation-type="annotation"><span 
data-slate-string="true">0</span></span></span><span data-slate-leaf="true" data-offset-key="707:3"><span 
data-slate-string="true">;</span></span></span> </div> <div class="ps__rail-x" style="width: 
365px; left: 0px; bottom: 0px;"> <div class="ps__thumb-x" tabindex="0" style="left: 0px; width: 
292px;"></div> </div> <div class="ps__rail-y" style="top: 0px; right: 0px;"> <div class="ps__thumb-y" 
tabindex="0" style="top: 0px; height: 0px;"></div> </div> </div> </div> <div class="se-937da880 
" data-slate-type="paragraph" data-slate-object="block" data-key="708"> <span data-slate-object="text" 
data-key="709"><span data-slate-leaf="true" data-offset-key="709:0" data-first-offset="true"><span 
data-slate-string="true">这段代码中，我们使用了数组来定义存储测试函数信息的存储区，这个数组的大小有 100 位，也就是说，最多可以存储 100 个测试用例函数信息。</span></span></span> 
</div> <div class="se-1ab625ba " data-slate-type="paragraph" data-slate-object="block" data-key="710"> 
<span data-slate-object="text" data-key="711"><span data-slate-leaf="true" data-offset-key="711:0" 
data-first-offset="true"><span data-slate-string="true">那我们来思考一个问题：要是有程序中定义了 1000 个测试用例，怎么办呢？毕竟，对于中型项目开发来说，定义 
1000 个测试用例，可不是什么难事儿。这个时候，你可能会说，那简单啊，数组大小设置成 10000 不就行了。</span></span></span> </div> <div class="se-3e98d9b1 
" data-slate-type="paragraph" data-slate-object="block" data-key="712"> <span data-slate-object="text" 
data-key="713"><span data-slate-leaf="true" data-offset-key="713:0" data-first-offset="true"><span 
data-slate-string="true">但是你要明白，这种设计尽管简单粗暴且有效，可它一点儿程序设计的美感都没有。什么意思呢？就是当我们为测试用例准备了 10000 个数组空间的时候，可能在真正的开发过程中，只定义了 
2 个测试用例，这就会浪费掉 9998 个数组空间。</span></span></span> </div> <div class="se-400cef4e " data-slate-type="paragraph" 
data-slate-object="block" data-key="714"> <span data-slate-object="text" data-key="715"><span 
data-slate-leaf="true" data-offset-key="715:0" data-first-offset="true"><span data-slate-string="true">更形象地描述这种行为的话，这种设计方式很像计划经济，计划多少用多少。同时，它的弊端也很明显，一旦计划不好，要不是造成空间浪费，要不就是资源紧张。</span></span></span> 
</div> <div class="se-01196491 " data-slate-type="paragraph" data-slate-object="block" data-key="716"> 
<span data-slate-object="text" data-key="717"><span data-slate-leaf="true" data-offset-key="717:0" 
data-first-offset="true"><span data-slate-string="true">所以，我们应该尝试着从“计划经济”向“市场经济”转变一下，可不可以转变成想用多少就生产多少。那应该怎么做呢？</span></span></span> 
</div> <div class="se-eb56f956 " data-slate-type="paragraph" data-slate-object="block" data-key="718"> 
<span data-slate-object="text" data-key="719"><span data-slate-leaf="true" data-offset-key="719:0" 
data-first-offset="true"><span data-slate-string="true">我们知道，在程序中数组的空间大小，是需要提前计划出来的。但是有一种结构的空间，是可以动态增加或减少的，那就是我们之前讲过的“</span></span></span><span 
data-slate-object="text" data-key="720"><span data-slate-leaf="true" data-offset-key="720:0" 
data-first-offset="true"><span class="se-22441a44" data-slate-type="bold" data-slate-object="mark"><span 
data-slate-string="true">链表</span></span></span></span><span data-slate-object="text" data-key="721"><span 
data-slate-leaf="true" data-offset-key="721:0" data-first-offset="true"><span data-slate-string="true">”结构。你想一下，如果我们把一个一个的测试函数信息，封装成一个一个的链表节点，每当增加一个测试用例的时候，就相当于向整个链表中插入一个新的节点。此时，用链表实现的存储测试函数信息的结构，它所占空间大小就和实际测试用例的数量成正比了。这就是我说的用多少，就生产多少。</span></span></span> 
</div> <div class="se-d075384f " data-slate-type="paragraph" data-slate-object="block" data-key="722"> 
<span data-slate-object="text" data-key="723"><span data-slate-leaf="true" data-offset-key="723:0" 
data-first-offset="true"><span data-slate-string="true">下面，我们就来说说具体怎么做。</span></span></span> 
</div> <div class="se-1e30d1e2 " data-slate-type="paragraph" data-slate-object="block" data-key="724"> 
<span data-slate-object="text" data-key="725"><span data-slate-leaf="true" data-offset-key="725:0" 
data-first-offset="true"><span data-slate-string="true">第一步，我们需要改变 test_function_info_t 的结构定义，也就是把原先存储测试用例函数信息的结构体类型，改装成链表结构。最简单的方法，就是在结构体的定义中，增加一个指针字段，指向下一个 
test_function_info_t 类型的数据，代码如下所示：</span></span></span> </div> <div class="se-e2499608 se-7080a54d" 
data-slate-type="pre" data-slate-object="block" data-key="726" data-code-language="cpp"> <div 
class="se-16714291 se-a119c414"> <span></span> </div> <div class="se-f1b77882"> <div class="se-5173c2fd 
se-f2e4ad85" data-code-line-number="1"></div> <div class="se-5173c2fd se-f2e4ad85" data-code-line-number="2"></div> 
<div class="se-5173c2fd se-f2e4ad85" data-code-line-number="3"></div> <div class="se-5173c2fd 
se-f2e4ad85" data-code-line-number="4"></div> <div class="se-5173c2fd se-f2e4ad85" data-code-line-number="5"></div> 
<div class="se-5173c2fd se-f2e4ad85" data-code-line-number="6"></div> </div> <div class="se-ade8bf3a 
ps ps--active-x"> <div class="se-115fc16c se-06d99b0c" data-slate-type="code-line" data-slate-object="block" 
data-key="727"> <span data-slate-object="text" data-key="728"><span data-slate-leaf="true" 
data-offset-key="728:0" data-first-offset="true"><span class=" gkhl-class" data-slate-object="annotation" 
data-annotation-key="gkann_9415764174" data-annotation-type="annotation"><span class=" gkhl-keyword" 
data-slate-object="annotation" data-annotation-key="gkann_0647422790" data-annotation-type="annotation"><span 
data-slate-string="true">struct</span></span></span></span><span data-slate-leaf="true" data-offset-key="728:1"><span 
class=" gkhl-class" data-slate-object="annotation" data-annotation-key="gkann_9415764174" data-annotation-type="annotation"><span 
data-slate-string="true"> </span></span></span><span data-slate-leaf="true" data-offset-key="728:2"><span 
class=" gkhl-class" data-slate-object="annotation" data-annotation-key="gkann_9415764174" data-annotation-type="annotation"><span 
class=" gkhl-title" data-slate-object="annotation" data-annotation-key="gkann_4312191675" data-annotation-type="annotation"><span 
data-slate-string="true">test_function_info_t</span></span></span></span><span data-slate-leaf="true" 
data-offset-key="728:3"><span class=" gkhl-class" data-slate-object="annotation" data-annotation-key="gkann_9415764174" 
data-annotation-type="annotation"><span data-slate-string="true"> {</span></span></span></span> 
</div> <div class="se-115fc16c se-06d99b0c" data-slate-type="code-line" data-slate-object="block" 
data-key="729"> <span data-slate-object="text" data-key="730"><span data-slate-leaf="true" 
data-offset-key="730:0" data-first-offset="true"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="730:1"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_4269134940" data-annotation-type="annotation"><span data-slate-string="true">test_function_t</span></span></span><span 
data-slate-leaf="true" data-offset-key="730:2"><span data-slate-string="true"> func; </span></span><span 
data-slate-leaf="true" data-offset-key="730:3"><span class=" gkhl-comment" data-slate-object="annotation" 
data-annotation-key="gkann_9479381820" data-annotation-type="annotation"><span data-slate-string="true">// 
测试用例函数指针，指向测试用例函数</span></span></span></span> </div> <div class="se-115fc16c se-06d99b0c" data-slate-type="code-line" 
data-slate-object="block" data-key="731"> <span data-slate-object="text" data-key="732"><span 
data-slate-leaf="true" data-offset-key="732:0" data-first-offset="true"><span data-slate-string="true"> 
</span></span><span data-slate-leaf="true" data-offset-key="732:1"><span class=" gkhl-keyword" 
data-slate-object="annotation" data-annotation-key="gkann_1839130040" data-annotation-type="annotation"><span 
data-slate-string="true">const</span></span></span><span data-slate-leaf="true" data-offset-key="732:2"><span 
data-slate-string="true"> </span></span><span data-slate-leaf="true" data-offset-key="732:3"><span 
class=" gkhl-keyword" data-slate-object="annotation" data-annotation-key="gkann_4210913421" 
data-annotation-type="annotation"><span data-slate-string="true">char</span></span></span><span 
data-slate-leaf="true" data-offset-key="732:4"><span data-slate-string="true"> *name; </span></span><span 
data-slate-leaf="true" data-offset-key="732:5"><span class=" gkhl-comment" data-slate-object="annotation" 
data-annotation-key="gkann_5966834326" data-annotation-type="annotation"><span data-slate-string="true">// 
指向测试用例名称</span></span></span></span> </div> <div class="se-115fc16c se-06d99b0c" data-slate-type="code-line" 
data-slate-object="block" data-key="733"> <span data-slate-object="text" data-key="734"><span 
data-slate-leaf="true" data-offset-key="734:0" data-first-offset="true"><span data-slate-string="true"> 
</span></span><span data-slate-leaf="true" data-offset-key="734:1"><span class=" gkhl-keyword" 
data-slate-object="annotation" data-annotation-key="gkann_4479028957" data-annotation-type="annotation"><span 
class=" gkhl-class" data-slate-object="annotation" data-annotation-key="gkann_1245426921" data-annotation-type="annotation"><span 
data-slate-string="true">struct</span></span></span></span><span data-slate-leaf="true" data-offset-key="734:2"><span 
class=" gkhl-class" data-slate-object="annotation" data-annotation-key="gkann_1245426921" data-annotation-type="annotation"><span 
data-slate-string="true"> </span></span></span><span data-slate-leaf="true" data-offset-key="734:3"><span 
class=" gkhl-class" data-slate-object="annotation" data-annotation-key="gkann_1245426921" data-annotation-type="annotation"><span 
class=" gkhl-title" data-slate-object="annotation" data-annotation-key="gkann_3450747717" data-annotation-type="annotation"><span 
data-slate-string="true">test_function_info_t</span></span></span></span><span data-slate-leaf="true" 
data-offset-key="734:4"><span class=" gkhl-class" data-slate-object="annotation" data-annotation-key="gkann_1245426921" 
data-annotation-type="annotation"><span data-slate-string="true"> *</span></span></span><span 
data-slate-leaf="true" data-offset-key="734:5"><span class=" gkhl-title" data-slate-object="annotation" 
data-annotation-key="gkann_0380932525" data-annotation-type="annotation"><span class=" gkhl-class" 
data-slate-object="annotation" data-annotation-key="gkann_1245426921" data-annotation-type="annotation"><span 
data-slate-string="true">next</span></span></span></span><span data-slate-leaf="true" data-offset-key="734:6"><span 
class=" gkhl-class" data-slate-object="annotation" data-annotation-key="gkann_1245426921" data-annotation-type="annotation"><span 
data-slate-string="true">;</span></span></span></span> </div> <div class="se-115fc16c se-06d99b0c" 
data-slate-type="code-line" data-slate-object="block" data-key="735"> <span data-slate-object="text" 
data-key="736"><span data-slate-leaf="true" data-offset-key="736:0" data-first-offset="true"><span 
data-slate-string="true">};</span></span></span> </div> <div class="se-115fc16c se-06d99b0c" 
data-slate-type="code-line" data-slate-object="block" data-key="737"> <span data-slate-object="text" 
data-key="738"><span data-slate-leaf="true" data-offset-key="738:0" data-first-offset="true"><span 
class=" gkhl-keyword" data-slate-object="annotation" data-annotation-key="gkann_8250502741" 
data-annotation-type="annotation"><span class=" gkhl-class" data-slate-object="annotation" 
data-annotation-key="gkann_1914998868" data-annotation-type="annotation"><span data-slate-string="true">struct</span></span></span></span><span 
data-slate-leaf="true" data-offset-key="738:1"><span class=" gkhl-class" data-slate-object="annotation" 
data-annotation-key="gkann_1914998868" data-annotation-type="annotation"><span data-slate-string="true"> 
</span></span></span><span data-slate-leaf="true" data-offset-key="738:2"><span class=" gkhl-title" 
data-slate-object="annotation" data-annotation-key="gkann_0583625355" data-annotation-type="annotation"><span 
class=" gkhl-class" data-slate-object="annotation" data-annotation-key="gkann_1914998868" data-annotation-type="annotation"><span 
data-slate-string="true">test_function_info_t</span></span></span></span><span data-slate-leaf="true" 
data-offset-key="738:3"><span class=" gkhl-class" data-slate-object="annotation" data-annotation-key="gkann_1914998868" 
data-annotation-type="annotation"><span data-slate-string="true"> </span></span></span><span 
data-slate-leaf="true" data-offset-key="738:4"><span class=" gkhl-class" data-slate-object="annotation" 
data-annotation-key="gkann_1914998868" data-annotation-type="annotation"><span class=" gkhl-title" 
data-slate-object="annotation" data-annotation-key="gkann_3640095140" data-annotation-type="annotation"><span 
data-slate-string="true">head</span></span></span></span><span data-slate-leaf="true" data-offset-key="738:5"><span 
class=" gkhl-class" data-slate-object="annotation" data-annotation-key="gkann_1914998868" data-annotation-type="annotation"><span 
data-slate-string="true">, *</span></span></span><span data-slate-leaf="true" data-offset-key="738:6"><span 
class=" gkhl-title" data-slate-object="annotation" data-annotation-key="gkann_4474202542" data-annotation-type="annotation"><span 
class=" gkhl-class" data-slate-object="annotation" data-annotation-key="gkann_1914998868" data-annotation-type="annotation"><span 
data-slate-string="true">tail</span></span></span></span><span data-slate-leaf="true" data-offset-key="738:7"><span 
class=" gkhl-class" data-slate-object="annotation" data-annotation-key="gkann_1914998868" data-annotation-type="annotation"><span 
data-slate-string="true"> = &amp;</span></span></span><span data-slate-leaf="true" data-offset-key="738:8"><span 
class=" gkhl-class" data-slate-object="annotation" data-annotation-key="gkann_1914998868" data-annotation-type="annotation"><span 
class=" gkhl-title" data-slate-object="annotation" data-annotation-key="gkann_0310772701" data-annotation-type="annotation"><span 
data-slate-string="true">head</span></span></span></span><span data-slate-leaf="true" data-offset-key="738:9"><span 
class=" gkhl-class" data-slate-object="annotation" data-annotation-key="gkann_1914998868" data-annotation-type="annotation"><span 
data-slate-string="true">;</span></span></span></span> </div> <div class="ps__rail-x" style="width: 
365px; left: 0px; bottom: 0px;"> <div class="ps__thumb-x" tabindex="0" style="left: 0px; width: 
292px;"></div> </div> <div class="ps__rail-y" style="top: 0px; right: 0px;"> <div class="ps__thumb-y" 
tabindex="0" style="top: 0px; height: 0px;"></div> </div> </div> </div> <div class="se-7faffc1a 
" data-slate-type="paragraph" data-slate-object="block" data-key="739"> <span data-slate-object="text" 
data-key="740"><span data-slate-leaf="true" data-offset-key="740:0" data-first-offset="true"><span 
data-slate-string="true">可以看到，我们给 test_function_info_t 结构体类型增加了一个链表中的 next 字段，除此之外，我们还定义了一个虚拟头节点 
head 和一个指针变量 tail。这里你需要注意，head 是虚拟头节点，后续我们会向 head 所指向链表中插入链表节点，tail 指针则指向了整个链表的最后一个节点的地址。</span></span></span> 
</div> <div class="se-c07189d9 " data-slate-type="paragraph" data-slate-object="block" data-key="741"> 
<span data-slate-object="text" data-key="742"><span data-slate-leaf="true" data-offset-key="742:0" 
data-first-offset="true"><span data-slate-string="true">第二步，在准备好了数据存储结构以后，需要改写的就是函数注册的逻辑了。在改写 
TEST 宏中的注册函数逻辑之前呢，我们先准备一个工具函数 add_test_function，这个工具函数的作用，就是根据传入的参数，新建一个链表节点，并且插入到整个链表的末尾：</span></span></span> 
</div> <div class="se-f24b3963 se-429ff030" data-slate-type="pre" data-slate-object="block" 
data-key="743" data-code-language="cpp"> <div class="se-f22ba910 se-a85aa1a5"> <span></span> 
</div> <div class="se-4f072637"> <div class="se-12d76384 se-690f81c6" data-code-line-number="1"></div> 
<div class="se-12d76384 se-690f81c6" data-code-line-number="2"></div> <div class="se-12d76384 
se-690f81c6" data-code-line-number="3"></div> <div class="se-12d76384 se-690f81c6" data-code-line-number="4"></div> 
<div class="se-12d76384 se-690f81c6" data-code-line-number="5"></div> <div class="se-12d76384 
se-690f81c6" data-code-line-number="6"></div> <div class="se-12d76384 se-690f81c6" data-code-line-number="7"></div> 
<div class="se-12d76384 se-690f81c6" data-code-line-number="8"></div> <div class="se-12d76384 
se-690f81c6" data-code-line-number="9"></div> <div class="se-12d76384 se-690f81c6" data-code-line-number="10"></div> 
</div> <div class="se-12b48615 ps ps--active-x"> <div class="se-115fc16c se-06d99b0c" data-slate-type="code-line" 
data-slate-object="block" data-key="744"> <span data-slate-object="text" data-key="745"><span 
data-slate-leaf="true" data-offset-key="745:0" data-first-offset="true"><span class=" gkhl-function" 
data-slate-object="annotation" data-annotation-key="gkann_8602206453" data-annotation-type="annotation"><span 
class=" gkhl-keyword" data-slate-object="annotation" data-annotation-key="gkann_1267584228" 
data-annotation-type="annotation"><span data-slate-string="true">void</span></span></span></span><span 
data-slate-leaf="true" data-offset-key="745:1"><span class=" gkhl-function" data-slate-object="annotation" 
data-annotation-key="gkann_8602206453" data-annotation-type="annotation"><span data-slate-string="true"> 
</span></span></span><span data-slate-leaf="true" data-offset-key="745:2"><span class=" gkhl-function" 
data-slate-object="annotation" data-annotation-key="gkann_8602206453" data-annotation-type="annotation"><span 
class=" gkhl-title" data-slate-object="annotation" data-annotation-key="gkann_8892914800" data-annotation-type="annotation"><span 
data-slate-string="true">add_test_function</span></span></span></span><span data-slate-leaf="true" 
data-offset-key="745:3"><span class=" gkhl-function" data-slate-object="annotation" data-annotation-key="gkann_8602206453" 
data-annotation-type="annotation"><span class=" gkhl-params" data-slate-object="annotation" 
data-annotation-key="gkann_5753428847" data-annotation-type="annotation"><span data-slate-string="true">(const 
char *name, test_function_t func)</span></span></span></span><span data-slate-leaf="true" data-offset-key="745:4"><span 
class=" gkhl-function" data-slate-object="annotation" data-annotation-key="gkann_8602206453" 
data-annotation-type="annotation"><span data-slate-string="true"> </span></span></span><span 
data-slate-leaf="true" data-offset-key="745:5"><span data-slate-string="true">{</span></span></span> 
</div> <div class="se-115fc16c se-06d99b0c" data-slate-type="code-line" data-slate-object="block" 
data-key="746"> <span data-slate-object="text" data-key="747"><span data-slate-leaf="true" 
data-offset-key="747:0" data-first-offset="true"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="747:1"><span class=" gkhl-class" data-slate-object="annotation" 
data-annotation-key="gkann_7351391396" data-annotation-type="annotation"><span class=" gkhl-keyword" 
data-slate-object="annotation" data-annotation-key="gkann_0234258438" data-annotation-type="annotation"><span 
data-slate-string="true">struct</span></span></span></span><span data-slate-leaf="true" data-offset-key="747:2"><span 
class=" gkhl-class" data-slate-object="annotation" data-annotation-key="gkann_7351391396" data-annotation-type="annotation"><span 
data-slate-string="true"> </span></span></span><span data-slate-leaf="true" data-offset-key="747:3"><span 
class=" gkhl-class" data-slate-object="annotation" data-annotation-key="gkann_7351391396" data-annotation-type="annotation"><span 
class=" gkhl-title" data-slate-object="annotation" data-annotation-key="gkann_6958969356" data-annotation-type="annotation"><span 
data-slate-string="true">test_function_info_t</span></span></span></span><span data-slate-leaf="true" 
data-offset-key="747:4"><span class=" gkhl-class" data-slate-object="annotation" data-annotation-key="gkann_7351391396" 
data-annotation-type="annotation"><span data-slate-string="true"> *</span></span></span><span 
data-slate-leaf="true" data-offset-key="747:5"><span class=" gkhl-class" data-slate-object="annotation" 
data-annotation-key="gkann_7351391396" data-annotation-type="annotation"><span class=" gkhl-title" 
data-slate-object="annotation" data-annotation-key="gkann_4714195550" data-annotation-type="annotation"><span 
data-slate-string="true">node</span></span></span></span><span data-slate-leaf="true" data-offset-key="747:6"><span 
class=" gkhl-class" data-slate-object="annotation" data-annotation-key="gkann_7351391396" data-annotation-type="annotation"><span 
data-slate-string="true">;</span></span></span></span> </div> <div class="se-115fc16c se-06d99b0c" 
data-slate-type="code-line" data-slate-object="block" data-key="748"> <span data-slate-object="text" 
data-key="749"><span data-slate-leaf="true" data-offset-key="749:0" data-first-offset="true"><span 
data-slate-string="true"> node = (struct </span></span><span data-slate-leaf="true" data-offset-key="749:1"><span 
class=" gkhl-keyword" data-slate-object="annotation" data-annotation-key="gkann_8305685576" 
data-annotation-type="annotation"><span data-slate-string="true">test_function_info_t</span></span></span><span 
data-slate-leaf="true" data-offset-key="749:2"><span data-slate-string="true"> *)</span></span><span 
data-slate-leaf="true" data-offset-key="749:3"><span class=" gkhl-built_in" data-slate-object="annotation" 
data-annotation-key="gkann_5528947333" data-annotation-type="annotation"><span data-slate-string="true">malloc</span></span></span><span 
data-slate-leaf="true" data-offset-key="749:4"><span data-slate-string="true">(</span></span><span 
data-slate-leaf="true" data-offset-key="749:5"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_4161897075" data-annotation-type="annotation"><span data-slate-string="true">sizeof</span></span></span><span 
data-slate-leaf="true" data-offset-key="749:6"><span data-slate-string="true">(struct </span></span><span 
data-slate-leaf="true" data-offset-key="749:7"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_9566142528" data-annotation-type="annotation"><span data-slate-string="true">test_function_info_t</span></span></span><span 
data-slate-leaf="true" data-offset-key="749:8"><span data-slate-string="true">));</span></span></span> 
</div> <div class="se-115fc16c se-06d99b0c" data-slate-type="code-line" data-slate-object="block" 
data-key="750"> <span data-slate-object="text" data-key="751"><span data-slate-leaf="true" 
data-offset-key="751:0" data-first-offset="true"><span data-slate-string="true"> node-&gt;func 
= func;</span></span></span> </div> <div class="se-115fc16c se-06d99b0c" data-slate-type="code-line" 
data-slate-object="block" data-key="752"> <span data-slate-object="text" data-key="753"><span 
data-slate-leaf="true" data-offset-key="753:0" data-first-offset="true"><span data-slate-string="true"> 
node-&gt;name = name;</span></span></span> </div> <div class="se-115fc16c se-06d99b0c" data-slate-type="code-line" 
data-slate-object="block" data-key="754"> <span data-slate-object="text" data-key="755"><span 
data-slate-leaf="true" data-offset-key="755:0" data-first-offset="true"><span data-slate-string="true"> 
node-&gt;next = </span></span><span data-slate-leaf="true" data-offset-key="755:1"><span class=" 
gkhl-literal" data-slate-object="annotation" data-annotation-key="gkann_4729199300" data-annotation-type="annotation"><span 
data-slate-string="true">NULL</span></span></span><span data-slate-leaf="true" data-offset-key="755:2"><span 
data-slate-string="true">;</span></span></span> </div> <div class="se-115fc16c se-06d99b0c" 
data-slate-type="code-line" data-slate-object="block" data-key="756"> <span data-slate-object="text" 
data-key="757"><span data-slate-leaf="true" data-offset-key="757:0" data-first-offset="true"><span 
data-slate-string="true"> tail-&gt;next = node;</span></span></span> </div> <div class="se-115fc16c 
se-06d99b0c" data-slate-type="code-line" data-slate-object="block" data-key="758"> <span data-slate-object="text" 
data-key="759"><span data-slate-leaf="true" data-offset-key="759:0" data-first-offset="true"><span 
data-slate-string="true"> tail = node;</span></span></span> </div> <div class="se-115fc16c 
se-06d99b0c" data-slate-type="code-line" data-slate-object="block" data-key="760"> <span data-slate-object="text" 
data-key="761"><span data-slate-leaf="true" data-offset-key="761:0" data-first-offset="true"><span 
data-slate-string="true"> </span></span><span data-slate-leaf="true" data-offset-key="761:1"><span 
class=" gkhl-keyword" data-slate-object="annotation" data-annotation-key="gkann_0006919502" 
data-annotation-type="annotation"><span data-slate-string="true">return</span></span></span><span 
data-slate-leaf="true" data-offset-key="761:2"><span data-slate-string="true"> ;</span></span></span> 
</div> <div class="se-115fc16c se-06d99b0c" data-slate-type="code-line" data-slate-object="block" 
data-key="762"> <span data-slate-object="text" data-key="763"><span data-slate-leaf="true" 
data-offset-key="763:0" data-first-offset="true"><span data-slate-string="true">}</span></span></span> 
</div> <div class="ps__rail-x" style="width: 365px; left: 0px; bottom: 0px;"> <div class="ps__thumb-x" 
tabindex="0" style="left: 0px; width: 198px;"></div> </div> <div class="ps__rail-y" style="top: 
0px; right: 0px;"> <div class="ps__thumb-y" tabindex="0" style="top: 0px; height: 0px;"></div> 
</div> </div> </div> <div class="se-fa7970cd " data-slate-type="paragraph" data-slate-object="block" 
data-key="764"> <span data-slate-object="text" data-key="765"><span data-slate-leaf="true" 
data-offset-key="765:0" data-first-offset="true"><span data-slate-string="true">好了， add_test_function 
工具函数准备好之后，我们正式来改写 TEST 宏中注册函数的逻辑。其实难度也不大，也就是要求注册函数调用 add_test_function 函数，并且传入相关的测试用例的函数信息即可：</span></span></span> 
</div> <div class="se-856c350a se-4109140c" data-slate-type="pre" data-slate-object="block" 
data-key="766" data-code-language="objectivec"> <div class="se-0cb13833 se-cc2f6fe0"> <span></span> 
</div> <div class="se-8ed3c45a"> <div class="se-b9078d84 se-8b90c149" data-code-line-number="1"></div> 
<div class="se-b9078d84 se-8b90c149" data-code-line-number="2"></div> <div class="se-b9078d84 
se-8b90c149" data-code-line-number="3"></div> <div class="se-b9078d84 se-8b90c149" data-code-line-number="4"></div> 
<div class="se-b9078d84 se-8b90c149" data-code-line-number="5"></div> <div class="se-b9078d84 
se-8b90c149" data-code-line-number="6"></div> <div class="se-b9078d84 se-8b90c149" data-code-line-number="7"></div> 
<div class="se-b9078d84 se-8b90c149" data-code-line-number="8"></div> </div> <div class="se-bae4a6a4 
ps ps--active-x"> <div class="se-115fc16c se-06d99b0c" data-slate-type="code-line" data-slate-object="block" 
data-key="767"> <span data-slate-object="text" data-key="768"><span data-slate-leaf="true" 
data-offset-key="768:0" data-first-offset="true"><span class=" gkhl-meta" data-slate-object="annotation" 
data-annotation-key="gkann_5356537081" data-annotation-type="annotation"><span data-slate-string="true">#define 
TEST(test_name, func_name) \</span></span></span></span> </div> <div class="se-115fc16c se-06d99b0c" 
data-slate-type="code-line" data-slate-object="block" data-key="769"> <span data-slate-object="text" 
data-key="770"><span data-slate-leaf="true" data-offset-key="770:0" data-first-offset="true"><span 
class=" gkhl-keyword" data-slate-object="annotation" data-annotation-key="gkann_6635107564" 
data-annotation-type="annotation"><span data-slate-string="true">void</span></span></span><span 
data-slate-leaf="true" data-offset-key="770:1"><span data-slate-string="true"> test_name</span></span><span 
data-slate-leaf="true" data-offset-key="770:2"><span class=" gkhl-meta" data-slate-object="annotation" 
data-annotation-key="gkann_5603678752" data-annotation-type="annotation"><span data-slate-string="true">##_##func_name(); 
\</span></span></span></span> </div> <div class="se-115fc16c se-06d99b0c" data-slate-type="code-line" 
data-slate-object="block" data-key="771"> <span data-slate-object="text" data-key="772"><span 
data-slate-leaf="true" data-offset-key="772:0" data-first-offset="true"><span data-slate-string="true">__attribute__((constructor)) 
\</span></span></span> </div> <div class="se-115fc16c se-06d99b0c" data-slate-type="code-line" 
data-slate-object="block" data-key="773"> <span data-slate-object="text" data-key="774"><span 
data-slate-leaf="true" data-offset-key="774:0" data-first-offset="true"><span class=" gkhl-keyword" 
data-slate-object="annotation" data-annotation-key="gkann_3962191954" data-annotation-type="annotation"><span 
data-slate-string="true">void</span></span></span><span data-slate-leaf="true" data-offset-key="774:1"><span 
data-slate-string="true"> register_</span></span><span data-slate-leaf="true" data-offset-key="774:2"><span 
class=" gkhl-meta" data-slate-object="annotation" data-annotation-key="gkann_3561649596" data-annotation-type="annotation"><span 
data-slate-string="true">##test_name##_##func_name() { \</span></span></span></span> </div> 
<div class="se-115fc16c se-06d99b0c" data-slate-type="code-line" data-slate-object="block" 
data-key="775"> <span data-slate-object="text" data-key="776"><span data-slate-leaf="true" 
data-offset-key="776:0" data-first-offset="true"><span data-slate-string="true"> add_test_function(</span></span><span 
data-slate-leaf="true" data-offset-key="776:1"><span class=" gkhl-meta" data-slate-object="annotation" 
data-annotation-key="gkann_1219856345" data-annotation-type="annotation"><span data-slate-string="true">#func_name 
"." #test_name, \</span></span></span></span> </div> <div class="se-115fc16c se-06d99b0c" data-slate-type="code-line" 
data-slate-object="block" data-key="777"> <span data-slate-object="text" data-key="778"><span 
data-slate-leaf="true" data-offset-key="778:0" data-first-offset="true"><span data-slate-string="true"> 
test_name</span></span><span data-slate-leaf="true" data-offset-key="778:1"><span class=" gkhl-meta" 
data-slate-object="annotation" data-annotation-key="gkann_1693411298" data-annotation-type="annotation"><span 
data-slate-string="true">##_##func_name); \</span></span></span></span> </div> <div class="se-115fc16c 
se-06d99b0c" data-slate-type="code-line" data-slate-object="block" data-key="779"> <span data-slate-object="text" 
data-key="780"><span data-slate-leaf="true" data-offset-key="780:0" data-first-offset="true"><span 
data-slate-string="true">} \</span></span></span> </div> <div class="se-115fc16c se-06d99b0c" 
data-slate-type="code-line" data-slate-object="block" data-key="781"> <span data-slate-object="text" 
data-key="782"><span data-slate-leaf="true" data-offset-key="782:0" data-first-offset="true"><span 
class=" gkhl-keyword" data-slate-object="annotation" data-annotation-key="gkann_2389732808" 
data-annotation-type="annotation"><span data-slate-string="true">void</span></span></span><span 
data-slate-leaf="true" data-offset-key="782:1"><span data-slate-string="true"> test_name</span></span><span 
data-slate-leaf="true" data-offset-key="782:2"><span class=" gkhl-meta" data-slate-object="annotation" 
data-annotation-key="gkann_7457115400" data-annotation-type="annotation"><span data-slate-string="true">##_##func_name()</span></span></span></span> 
</div> <div class="ps__rail-x" style="width: 365px; left: 0px; bottom: 0px;"> <div class="ps__thumb-x" 
tabindex="0" style="left: 0px; width: 341px;"></div> </div> <div class="ps__rail-y" style="top: 
0px; right: 0px;"> <div class="ps__thumb-y" tabindex="0" style="top: 0px; height: 0px;"></div> 
</div> </div> </div> <div class="se-e0171c90 " data-slate-type="paragraph" data-slate-object="block" 
data-key="783"> <span data-slate-object="text" data-key="784"><span data-slate-leaf="true" 
data-offset-key="784:0" data-first-offset="true"><span data-slate-string="true">最后一步，处理完了数据写入的过程以后，来让我们修改一下使用这份数据的代码逻辑，那就是 
RUN_ALL_TESTS 函数中的相关逻辑。之前，RUN_ALL_TESTS 函数中，循环遍历数组中的每一个测试用例，并且执行相关的测试用例函数，对这一部分，修改成针对于链表结构的遍历方式即可，代码如下所示：</span></span></span> 
</div> <div class="se-ad15a04b se-eeb5cb8b" data-slate-type="pre" data-slate-object="block" 
data-key="785" data-code-language="cpp"> <div class="se-11e919fb se-d6e5119b"> <span></span> 
</div> <div class="se-867fc982"> <div class="se-43a88397 se-06fd981e" data-code-line-number="1"></div> 
<div class="se-43a88397 se-06fd981e" data-code-line-number="2"></div> <div class="se-43a88397 
se-06fd981e" data-code-line-number="3"></div> <div class="se-43a88397 se-06fd981e" data-code-line-number="4"></div> 
<div class="se-43a88397 se-06fd981e" data-code-line-number="5"></div> <div class="se-43a88397 
se-06fd981e" data-code-line-number="6"></div> <div class="se-43a88397 se-06fd981e" data-code-line-number="7"></div> 
<div class="se-43a88397 se-06fd981e" data-code-line-number="8"></div> <div class="se-43a88397 
se-06fd981e" data-code-line-number="9"></div> <div class="se-43a88397 se-06fd981e" data-code-line-number="10"></div> 
<div class="se-43a88397 se-06fd981e" data-code-line-number="11"></div> <div class="se-43a88397 
se-06fd981e" data-code-line-number="12"></div> <div class="se-43a88397 se-06fd981e" data-code-line-number="13"></div> 
<div class="se-43a88397 se-06fd981e" data-code-line-number="14"></div> <div class="se-43a88397 
se-06fd981e" data-code-line-number="15"></div> <div class="se-43a88397 se-06fd981e" data-code-line-number="16"></div> 
<div class="se-43a88397 se-06fd981e" data-code-line-number="17"></div> <div class="se-43a88397 
se-06fd981e" data-code-line-number="18"></div> </div> <div class="se-3818d9d6 ps ps--active-x"> 
<div class="se-115fc16c se-06d99b0c" data-slate-type="code-line" data-slate-object="block" 
data-key="786"> <span data-slate-object="text" data-key="787"><span data-slate-leaf="true" 
data-offset-key="787:0" data-first-offset="true"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_4051787725" data-annotation-type="annotation"><span class=" gkhl-function" 
data-slate-object="annotation" data-annotation-key="gkann_1799210065" data-annotation-type="annotation"><span 
data-slate-string="true">int</span></span></span></span><span data-slate-leaf="true" data-offset-key="787:1"><span 
class=" gkhl-function" data-slate-object="annotation" data-annotation-key="gkann_1799210065" 
data-annotation-type="annotation"><span data-slate-string="true"> </span></span></span><span 
data-slate-leaf="true" data-offset-key="787:2"><span class=" gkhl-function" data-slate-object="annotation" 
data-annotation-key="gkann_1799210065" data-annotation-type="annotation"><span class=" gkhl-title" 
data-slate-object="annotation" data-annotation-key="gkann_2624477045" data-annotation-type="annotation"><span 
data-slate-string="true">RUN_ALL_TESTS</span></span></span></span><span data-slate-leaf="true" 
data-offset-key="787:3"><span class=" gkhl-params" data-slate-object="annotation" data-annotation-key="gkann_0949166136" 
data-annotation-type="annotation"><span class=" gkhl-function" data-slate-object="annotation" 
data-annotation-key="gkann_1799210065" data-annotation-type="annotation"><span data-slate-string="true">()</span></span></span></span><span 
data-slate-leaf="true" data-offset-key="787:4"><span class=" gkhl-function" data-slate-object="annotation" 
data-annotation-key="gkann_1799210065" data-annotation-type="annotation"><span data-slate-string="true"> 
</span></span></span><span data-slate-leaf="true" data-offset-key="787:5"><span data-slate-string="true">{</span></span></span> 
</div> <div class="se-115fc16c se-06d99b0c" data-slate-type="code-line" data-slate-object="block" 
data-key="788"> <span data-slate-object="text" data-key="789"><span data-slate-leaf="true" 
data-offset-key="789:0" data-first-offset="true"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="789:1"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_2592043126" data-annotation-type="annotation"><span class=" gkhl-class" 
data-slate-object="annotation" data-annotation-key="gkann_7199470852" data-annotation-type="annotation"><span 
data-slate-string="true">struct</span></span></span></span><span data-slate-leaf="true" data-offset-key="789:2"><span 
class=" gkhl-class" data-slate-object="annotation" data-annotation-key="gkann_7199470852" data-annotation-type="annotation"><span 
data-slate-string="true"> </span></span></span><span data-slate-leaf="true" data-offset-key="789:3"><span 
class=" gkhl-title" data-slate-object="annotation" data-annotation-key="gkann_5781515750" data-annotation-type="annotation"><span 
class=" gkhl-class" data-slate-object="annotation" data-annotation-key="gkann_7199470852" data-annotation-type="annotation"><span 
data-slate-string="true">test_function_info_t</span></span></span></span><span data-slate-leaf="true" 
data-offset-key="789:4"><span class=" gkhl-class" data-slate-object="annotation" data-annotation-key="gkann_7199470852" 
data-annotation-type="annotation"><span data-slate-string="true"> *</span></span></span><span 
data-slate-leaf="true" data-offset-key="789:5"><span class=" gkhl-class" data-slate-object="annotation" 
data-annotation-key="gkann_7199470852" data-annotation-type="annotation"><span class=" gkhl-title" 
data-slate-object="annotation" data-annotation-key="gkann_1276328887" data-annotation-type="annotation"><span 
data-slate-string="true">p</span></span></span></span><span data-slate-leaf="true" data-offset-key="789:6"><span 
class=" gkhl-class" data-slate-object="annotation" data-annotation-key="gkann_7199470852" data-annotation-type="annotation"><span 
data-slate-string="true"> = </span></span></span><span data-slate-leaf="true" data-offset-key="789:7"><span 
class=" gkhl-title" data-slate-object="annotation" data-annotation-key="gkann_8025943932" data-annotation-type="annotation"><span 
class=" gkhl-class" data-slate-object="annotation" data-annotation-key="gkann_7199470852" data-annotation-type="annotation"><span 
data-slate-string="true">head</span></span></span></span><span data-slate-leaf="true" data-offset-key="789:8"><span 
class=" gkhl-class" data-slate-object="annotation" data-annotation-key="gkann_7199470852" data-annotation-type="annotation"><span 
data-slate-string="true">.</span></span></span><span data-slate-leaf="true" data-offset-key="789:9"><span 
class=" gkhl-title" data-slate-object="annotation" data-annotation-key="gkann_6469550118" data-annotation-type="annotation"><span 
class=" gkhl-class" data-slate-object="annotation" data-annotation-key="gkann_7199470852" data-annotation-type="annotation"><span 
data-slate-string="true">next</span></span></span></span><span data-slate-leaf="true" data-offset-key="789:10"><span 
class=" gkhl-class" data-slate-object="annotation" data-annotation-key="gkann_7199470852" data-annotation-type="annotation"><span 
data-slate-string="true">;</span></span></span></span> </div> <div class="se-115fc16c se-06d99b0c" 
data-slate-type="code-line" data-slate-object="block" data-key="790"> <span data-slate-object="text" 
data-key="791"><span data-slate-leaf="true" data-offset-key="791:0" data-first-offset="true"><span 
data-slate-string="true"> </span></span><span data-slate-leaf="true" data-offset-key="791:1"><span 
class=" gkhl-keyword" data-slate-object="annotation" data-annotation-key="gkann_8356602260" 
data-annotation-type="annotation"><span data-slate-string="true">for</span></span></span><span 
data-slate-leaf="true" data-offset-key="791:2"><span data-slate-string="true"> (; p; p = p-&gt;next) 
{</span></span></span> </div> <div class="se-115fc16c se-06d99b0c" data-slate-type="code-line" 
data-slate-object="block" data-key="792"> <span data-slate-object="text" data-key="793"><span 
data-slate-leaf="true" data-offset-key="793:0" data-first-offset="true"><span data-slate-string="true"> 
</span></span><span data-slate-leaf="true" data-offset-key="793:1"><span class=" gkhl-built_in" 
data-slate-object="annotation" data-annotation-key="gkann_2080856586" data-annotation-type="annotation"><span 
data-slate-string="true">printf</span></span></span><span data-slate-leaf="true" data-offset-key="793:2"><span 
data-slate-string="true">(</span></span><span data-slate-leaf="true" data-offset-key="793:3"><span 
class=" gkhl-string" data-slate-object="annotation" data-annotation-key="gkann_8399537112" 
data-annotation-type="annotation"><span data-slate-string="true">"[ RUN ] %s\n"</span></span></span><span 
data-slate-leaf="true" data-offset-key="793:4"><span data-slate-string="true">, p-&gt;name);</span></span></span> 
</div> <div class="se-115fc16c se-06d99b0c" data-slate-type="code-line" data-slate-object="block" 
data-key="794"> <span data-slate-object="text" data-key="795"><span data-slate-leaf="true" 
data-offset-key="795:0" data-first-offset="true"><span data-slate-string="true"> test_run_flag 
= </span></span><span data-slate-leaf="true" data-offset-key="795:1"><span class=" gkhl-number" 
data-slate-object="annotation" data-annotation-key="gkann_7841293841" data-annotation-type="annotation"><span 
data-slate-string="true">1</span></span></span><span data-slate-leaf="true" data-offset-key="795:2"><span 
data-slate-string="true">;</span></span></span> </div> <div class="se-115fc16c se-06d99b0c" 
data-slate-type="code-line" data-slate-object="block" data-key="796"> <span data-slate-object="text" 
data-key="797"><span data-slate-leaf="true" data-offset-key="797:0" data-first-offset="true"><span 
data-slate-string="true"> </span></span><span data-slate-leaf="true" data-offset-key="797:1"><span 
class=" gkhl-keyword" data-slate-object="annotation" data-annotation-key="gkann_2870412125" 
data-annotation-type="annotation"><span data-slate-string="true">long</span></span></span><span 
data-slate-leaf="true" data-offset-key="797:2"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="797:3"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_1749847401" data-annotation-type="annotation"><span data-slate-string="true">long</span></span></span><span 
data-slate-leaf="true" data-offset-key="797:4"><span data-slate-string="true"> t1 = clock();</span></span></span> 
</div> <div class="se-115fc16c se-06d99b0c" data-slate-type="code-line" data-slate-object="block" 
data-key="798"> <span data-slate-object="text" data-key="799"><span data-slate-leaf="true" 
data-offset-key="799:0" data-first-offset="true"><span data-slate-string="true"> p-&gt;func();</span></span></span> 
</div> <div class="se-115fc16c se-06d99b0c" data-slate-type="code-line" data-slate-object="block" 
data-key="800"> <span data-slate-object="text" data-key="801"><span data-slate-leaf="true" 
data-offset-key="801:0" data-first-offset="true"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="801:1"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_3965006474" data-annotation-type="annotation"><span data-slate-string="true">long</span></span></span><span 
data-slate-leaf="true" data-offset-key="801:2"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="801:3"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_3335333948" data-annotation-type="annotation"><span data-slate-string="true">long</span></span></span><span 
data-slate-leaf="true" data-offset-key="801:4"><span data-slate-string="true"> t2 = clock();</span></span></span> 
</div> <div class="se-115fc16c se-06d99b0c" data-slate-type="code-line" data-slate-object="block" 
data-key="802"> <span data-slate-object="text" data-key="803"><span data-slate-leaf="true" 
data-offset-key="803:0" data-first-offset="true"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="803:1"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_7316166993" data-annotation-type="annotation"><span data-slate-string="true">if</span></span></span><span 
data-slate-leaf="true" data-offset-key="803:2"><span data-slate-string="true"> (test_run_flag) 
{</span></span></span> </div> <div class="se-115fc16c se-06d99b0c" data-slate-type="code-line" 
data-slate-object="block" data-key="804"> <span data-slate-object="text" data-key="805"><span 
data-slate-leaf="true" data-offset-key="805:0" data-first-offset="true"><span data-slate-string="true"> 
</span></span><span data-slate-leaf="true" data-offset-key="805:1"><span class=" gkhl-built_in" 
data-slate-object="annotation" data-annotation-key="gkann_8683534205" data-annotation-type="annotation"><span 
data-slate-string="true">printf</span></span></span><span data-slate-leaf="true" data-offset-key="805:2"><span 
data-slate-string="true">(</span></span><span data-slate-leaf="true" data-offset-key="805:3"><span 
class=" gkhl-string" data-slate-object="annotation" data-annotation-key="gkann_4538075526" 
data-annotation-type="annotation"><span data-slate-string="true">"[ OK ] "</span></span></span><span 
data-slate-leaf="true" data-offset-key="805:4"><span data-slate-string="true">);</span></span></span> 
</div> <div class="se-115fc16c se-06d99b0c" data-slate-type="code-line" data-slate-object="block" 
data-key="806"> <span data-slate-object="text" data-key="807"><span data-slate-leaf="true" 
data-offset-key="807:0" data-first-offset="true"><span data-slate-string="true"> } </span></span><span 
data-slate-leaf="true" data-offset-key="807:1"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_3749801228" data-annotation-type="annotation"><span data-slate-string="true">else</span></span></span><span 
data-slate-leaf="true" data-offset-key="807:2"><span data-slate-string="true"> {</span></span></span> 
</div> <div class="se-115fc16c se-06d99b0c" data-slate-type="code-line" data-slate-object="block" 
data-key="808"> <span data-slate-object="text" data-key="809"><span data-slate-leaf="true" 
data-offset-key="809:0" data-first-offset="true"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="809:1"><span class=" gkhl-built_in" data-slate-object="annotation" 
data-annotation-key="gkann_5176885898" data-annotation-type="annotation"><span data-slate-string="true">printf</span></span></span><span 
data-slate-leaf="true" data-offset-key="809:2"><span data-slate-string="true">(</span></span><span 
data-slate-leaf="true" data-offset-key="809:3"><span class=" gkhl-string" data-slate-object="annotation" 
data-annotation-key="gkann_2710668905" data-annotation-type="annotation"><span data-slate-string="true">"[ 
FAILED ] "</span></span></span><span data-slate-leaf="true" data-offset-key="809:4"><span data-slate-string="true">);</span></span></span> 
</div> <div class="se-115fc16c se-06d99b0c" data-slate-type="code-line" data-slate-object="block" 
data-key="810"> <span data-slate-object="text" data-key="811"><span data-slate-leaf="true" 
data-offset-key="811:0" data-first-offset="true"><span data-slate-string="true"> }</span></span></span> 
</div> <div class="se-115fc16c se-06d99b0c" data-slate-type="code-line" data-slate-object="block" 
data-key="812"> <span data-slate-object="text" data-key="813"><span data-slate-leaf="true" 
data-offset-key="813:0" data-first-offset="true"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="813:1"><span class=" gkhl-built_in" data-slate-object="annotation" 
data-annotation-key="gkann_8947584489" data-annotation-type="annotation"><span data-slate-string="true">printf</span></span></span><span 
data-slate-leaf="true" data-offset-key="813:2"><span data-slate-string="true">(</span></span><span 
data-slate-leaf="true" data-offset-key="813:3"><span class=" gkhl-string" data-slate-object="annotation" 
data-annotation-key="gkann_3872081925" data-annotation-type="annotation"><span data-slate-string="true">"%s"</span></span></span><span 
data-slate-leaf="true" data-offset-key="813:4"><span data-slate-string="true">, p-&gt;name);</span></span></span> 
</div> <div class="se-115fc16c se-06d99b0c" data-slate-type="code-line" data-slate-object="block" 
data-key="814"> <span data-slate-object="text" data-key="815"><span data-slate-leaf="true" 
data-offset-key="815:0" data-first-offset="true"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="815:1"><span class=" gkhl-built_in" data-slate-object="annotation" 
data-annotation-key="gkann_9997223018" data-annotation-type="annotation"><span data-slate-string="true">printf</span></span></span><span 
data-slate-leaf="true" data-offset-key="815:2"><span data-slate-string="true">(</span></span><span 
data-slate-leaf="true" data-offset-key="815:3"><span class=" gkhl-string" data-slate-object="annotation" 
data-annotation-key="gkann_3371702779" data-annotation-type="annotation"><span data-slate-string="true">" 
(%.0lf ms)\n\n"</span></span></span><span data-slate-leaf="true" data-offset-key="815:4"><span 
data-slate-string="true">, </span></span><span data-slate-leaf="true" data-offset-key="815:5"><span 
class=" gkhl-number" data-slate-object="annotation" data-annotation-key="gkann_1215453492" 
data-annotation-type="annotation"><span data-slate-string="true">1.0</span></span></span><span 
data-slate-leaf="true" data-offset-key="815:6"><span data-slate-string="true"> * (t2 - t1) 
/ CLOCKS_PER_SEC * </span></span><span data-slate-leaf="true" data-offset-key="815:7"><span 
class=" gkhl-number" data-slate-object="annotation" data-annotation-key="gkann_8155281524" 
data-annotation-type="annotation"><span data-slate-string="true">1000</span></span></span><span 
data-slate-leaf="true" data-offset-key="815:8"><span data-slate-string="true">);</span></span></span> 
</div> <div class="se-115fc16c se-06d99b0c" data-slate-type="code-line" data-slate-object="block" 
data-key="816"> <span data-slate-object="text" data-key="817"><span data-slate-leaf="true" 
data-offset-key="817:0" data-first-offset="true"><span data-slate-string="true"> }</span></span></span> 
</div> <div class="se-115fc16c se-06d99b0c" data-slate-type="code-line" data-slate-object="block" 
data-key="818"> <span data-slate-object="text" data-key="819"><span data-slate-leaf="true" 
data-offset-key="819:0" data-first-offset="true"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="819:1"><span class=" gkhl-keyword" data-slate-object="annotation" 
data-annotation-key="gkann_1064395282" data-annotation-type="annotation"><span data-slate-string="true">return</span></span></span><span 
data-slate-leaf="true" data-offset-key="819:2"><span data-slate-string="true"> </span></span><span 
data-slate-leaf="true" data-offset-key="819:3"><span class=" gkhl-number" data-slate-object="annotation" 
data-annotation-key="gkann_0396312761" data-annotation-type="annotation"><span data-slate-string="true">0</span></span></span><span 
data-slate-leaf="true" data-offset-key="819:4"><span data-slate-string="true">;</span></span></span> 
</div> <div class="se-115fc16c se-06d99b0c" data-slate-type="code-line" data-slate-object="block" 
data-key="820"> <span data-slate-object="text" data-key="821"><span data-slate-leaf="true" 
data-offset-key="821:0" data-first-offset="true"><span data-slate-string="true">}</span></span></span> 
</div> <div class="ps__rail-x" style="width: 365px; left: 0px; bottom: 0px;"> <div class="ps__thumb-x" 
tabindex="0" style="left: 0px; width: 227px;"></div> </div> <div class="ps__rail-y" style="top: 
0px; right: 0px;"> <div class="ps__thumb-y" tabindex="0" style="top: 0px; height: 0px;"></div> 
</div> </div> </div> <div class="se-367c8c14 " data-slate-type="paragraph" data-slate-object="block" 
data-key="822"> <span data-slate-object="text" data-key="823"><span data-slate-leaf="true" 
data-offset-key="823:0" data-first-offset="true"><span data-slate-string="true">这样，我们就彻底完成了测试用例函数信息存储部分的“</span></span></span><span 
data-slate-object="text" data-key="824"><span data-slate-leaf="true" data-offset-key="824:0" 
data-first-offset="true"><span class="se-b2b71d80" data-slate-type="bold" data-slate-object="mark"><span 
data-slate-string="true">链表</span></span></span></span><span data-slate-object="text" data-key="825"><span 
data-slate-leaf="true" data-offset-key="825:0" data-first-offset="true"><span data-slate-string="true">”改造过程。</span></span></span> 
</div> <div class="se-0540db04 " data-slate-type="paragraph" data-slate-object="block" data-key="826"> 
<span data-slate-object="text" data-key="827"><span data-slate-leaf="true" data-offset-key="827:0" 
data-first-offset="true"><span data-slate-string="true">对于上面的这份代码实现，你会发现，链表节点空间是通过 malloc 函数动态申请出来的，可在我们的程序中，并没有对这些空间使用 
free 进行释放，如果你想让这个程序对空间的申请与回收做到有始有终，变得更加干净，那应该怎么办呢？</span></span></span> </div> <div class="se-e8eee643 
" data-slate-type="paragraph" data-slate-object="block" data-key="828"> <span data-slate-object="text" 
data-key="829"><span data-slate-leaf="true" data-offset-key="829:0" data-first-offset="true"><span 
data-slate-string="true">这里你可以借助 </span></span></span><span data-slate-type="code" data-slate-object="inline" 
data-key="830" class="se-86625de3"><span data-slate-object="text" data-key="831"><span data-slate-leaf="true" 
data-offset-key="831:0" data-first-offset="true"><span data-slate-string="true">__attribute__</span></span></span></span><span 
data-slate-object="text" data-key="832"><span data-slate-leaf="true" data-offset-key="832:0" 
data-first-offset="true"><span data-slate-string="true">((destructor)) 的功能，之前我们介绍了一个</span></span></span><span 
data-slate-type="code" data-slate-object="inline" data-key="833" class="se-86625de3"><span 
data-slate-object="text" data-key="834"><span data-slate-leaf="true" data-offset-key="834:0" 
data-first-offset="true"><span data-slate-string="true">__attribute__</span></span></span></span><span 
data-slate-object="text" data-key="835"><span data-slate-leaf="true" data-offset-key="835:0" 
data-first-offset="true"><span data-slate-string="true">((constructor)) 的作用是让函数先于主函数执行，而 destructor 
就是使函数在主函数结束以后才执行的函数特性设置。有了这个特性设置，你可以实现一个函数，专门用来销毁测试函数链表所占存储空间，这样在逻辑上，你的程序会变得更完美。当然，你即使不这么做，也不会影响到原有的程序功能的正确性。</span></span></span> 
</div> <h2 class="se-c9b43564" data-slate-type="heading" data-slate-object="block" data-key="836"><span 
data-slate-object="text" data-key="837"><span data-slate-leaf="true" data-offset-key="837:0" 
data-first-offset="true"><span data-slate-string="true">项目小结</span></span></span></h2> <div 
class="se-389723c2 " data-slate-type="paragraph" data-slate-object="block" data-key="838"> 
<span data-slate-object="text" data-key="839"><span data-slate-leaf="true" data-offset-key="839:0" 
data-first-offset="true"><span data-slate-string="true">至此，我们关于测试框架开发的内容，就算是告一段落了。</span></span></span> 
</div> <div class="se-60463835 " data-slate-type="paragraph" data-slate-object="block" data-key="840"> 
<span data-slate-object="text" data-key="841"><span data-slate-leaf="true" data-offset-key="841:0" 
data-first-offset="true"><span data-slate-string="true">从 26 讲到 29 讲，我们经历了一个项目从 0 到 1 的过程，继而又完成了项目从 
1 到 1.5 的升级。所谓从 0 到 1 就是项目从最初的想法变成代码的过程，从 1 到 1.5 就是我们对于代码的优化过程。这是一个追求极致、不断优化项目的过程。</span></span></span> 
</div> <div class="se-bad35d6a " data-slate-type="paragraph" data-slate-object="block" data-key="842"> 
<span data-slate-object="text" data-key="843"><span data-slate-leaf="true" data-offset-key="843:0" 
data-first-offset="true"><span data-slate-string="true">关于测试框架开发的讲解内容虽然结束了，但我希望这几节课可以成为你优化这份代码的一个起点。日后，你可以选择增加额外的功能，修改实现的架构，甚至是使用不同的语言重新进行实现，哪怕是一个小小的改动，都是值得称赞的。</span></span></span> 
</div> <div class="se-8454c6b7 " data-slate-type="paragraph" data-slate-object="block" data-key="844"> 
<span data-slate-object="text" data-key="845"><span data-slate-leaf="true" data-offset-key="845:0" 
data-first-offset="true"><span data-slate-string="true">在下节课，我将指导你完成一个简易的计算器程序，也算是给我们这个课程一个圆满的结束。</span></span></span> 
</div> <div class="se-99ffff7a " data-slate-type="paragraph" data-slate-object="block" data-key="846"> 
<span data-slate-object="text" data-key="847"><span data-slate-leaf="true" data-offset-key="847:0" 
data-first-offset="true"><span data-slate-string="true">好了，今天就到这里了，我是胡光，我们下一节课见。</span></span></span> 
</div> </div>', body_summary='', bundle='book', delta=0, body_format='full_html', langcode='zh-hans', 
revision_id=769 where entity_id=769 
 {executed in 1 msec}
2020-11-24 19:04:10.203 INFO  jdbc.sqltiming Line:373 - select nodefiledd0_.nid as nid1_10_, nodefiledd0_.changed as changed2_10_, nodefiledd0_.created 
as created3_10_, nodefiledd0_.default_langcode as default_4_10_, nodefiledd0_.langcode as langcode5_10_, 
nodefiledd0_.promote as promote6_10_, nodefiledd0_.revision_translation_affected as revision7_10_, 
nodefiledd0_.status as status8_10_, nodefiledd0_.sticky as sticky9_10_, nodefiledd0_.title 
as title10_10_, nodefiledd0_.type as type11_10_, nodefiledd0_.uid as uid12_10_, nodefiledd0_.vid 
as vid13_10_ from node_field_data nodefiledd0_ where nodefiledd0_.nid=769 
 {executed in 0 msec}
2020-11-24 19:04:10.204 INFO  jdbc.resultsettable Line:610 - 
|----|-----------|-----------|-----------------|---------|--------|------------------------------|-------|-------|---------------------------|-----|----|----|
|nid |changed    |created    |default_langcode |langcode |promote |revision_translation_affected |status |sticky |title                      |type |uid |vid |
|----|-----------|-----------|-----------------|---------|--------|------------------------------|-------|-------|---------------------------|-----|----|----|
|769 |1606117103 |1606117103 |1                |zh-hans  |0       |1                             |1      |0      |29丨尝试升级（下）：“链表”知识在测试框架中的应用 |book |1   |769 |
|----|-----------|-----------|-----------------|---------|--------|------------------------------|-------|-------|---------------------------|-----|----|----|

2020-11-24 19:04:10.204 INFO  jdbc.sqltiming Line:373 - select nodefieldr0_.nid as nid1_11_0_, nodefieldr0_.changed as changed2_11_0_, nodefieldr0_.created 
as created3_11_0_, nodefieldr0_.default_langcode as default_4_11_0_, nodefieldr0_.langcode 
as langcode5_11_0_, nodefieldr0_.promote as promote6_11_0_, nodefieldr0_.revision_translation_affected 
as revision7_11_0_, nodefieldr0_.status as status8_11_0_, nodefieldr0_.sticky as sticky9_11_0_, 
nodefieldr0_.title as title10_11_0_, nodefieldr0_.uid as uid11_11_0_, nodefieldr0_.vid as vid12_11_0_ 
from node_field_revision nodefieldr0_ where nodefieldr0_.nid=769 
 {executed in 0 msec}
2020-11-24 19:04:10.205 INFO  jdbc.resultsettable Line:610 - 
|---------|-----------|-----------|-----------------|---------|--------|------------------------------|-------|-------|---------------------------|----|----|
|nid      |changed    |created    |default_langcode |langcode |promote |revision_translation_affected |status |sticky |title                      |uid |vid |
|---------|-----------|-----------|-----------------|---------|--------|------------------------------|-------|-------|---------------------------|----|----|
|[unread] |1606117103 |1606117103 |1                |zh-hans  |0       |1                             |1      |0      |29丨尝试升级（下）：“链表”知识在测试框架中的应用 |1   |769 |
|---------|-----------|-----------|-----------------|---------|--------|------------------------------|-------|-------|---------------------------|----|----|

2020-11-24 19:04:10.207 INFO  jdbc.sqltiming Line:373 - update node_field_data set changed=1606215850, created=1606215850, default_langcode=1, langcode='zh-hans', 
promote=0, revision_translation_affected=1, status=1, sticky=0, title='29丨尝试升级（下）：“链表”知识在测试框架中的应用', 
type='book', uid=1, vid=769 where nid=769 
 {executed in 1 msec}
2020-11-24 19:04:10.207 INFO  jdbc.sqltiming Line:373 - update node_field_revision set changed=1606215850, created=1606215850, default_langcode=1, 
langcode='zh-hans', promote=0, revision_translation_affected=1, status=1, sticky=0, title='29丨尝试升级（下）：“链表”知识在测试框架中的应用', 
uid=1, vid=769 where nid=769 
 {executed in 0 msec}
2020-11-24 19:04:10.211 INFO  jdbc.sqltiming Line:373 - select bookfieldm0_.entity_id as entity_i1_8_, bookfieldm0_.bundle as bundle2_8_, bookfieldm0_.delta 
as delta3_8_, bookfieldm0_.langcode as langcode4_8_, bookfieldm0_.field_media_value as field_me5_8_, 
bookfieldm0_.revision_id as revision6_8_ from node__field_media bookfieldm0_ where bookfieldm0_.entity_id=769 
 {executed in 0 msec}
2020-11-24 19:04:10.211 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------------|------------|
|entity_id |bundle |delta |langcode |field_media_value |revision_id |
|----------|-------|------|---------|------------------|------------|
|769       |book   |0     |zh-hans  |                  |769         |
|----------|-------|------|---------|------------------|------------|

2020-11-24 19:04:10.213 INFO  jdbc.sqltiming Line:373 - select nodefieldm0_.entity_id as entity_i1_17_0_, nodefieldm0_.bundle as bundle2_17_0_, nodefieldm0_.delta 
as delta3_17_0_, nodefieldm0_.langcode as langcode4_17_0_, nodefieldm0_.field_media_value as 
field_me5_17_0_, nodefieldm0_.revision_id as revision6_17_0_ from node_revision__field_media 
nodefieldm0_ where nodefieldm0_.entity_id=769 
 {executed in 0 msec}
2020-11-24 19:04:10.214 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------------|------------|
|entity_id |bundle |delta |langcode |field_media_value |revision_id |
|----------|-------|------|---------|------------------|------------|
|[unread]  |book   |0     |zh-hans  |                  |769         |
|----------|-------|------|---------|------------------|------------|

2020-11-24 19:04:10.216 INFO  jdbc.sqltiming Line:373 - select bookfieldc0_.entity_id as entity_i1_5_, bookfieldc0_.bundle as bundle2_5_, bookfieldc0_.field_comment_value 
as field_co3_5_, bookfieldc0_.delta as delta4_5_, bookfieldc0_.field_comment_format as field_co5_5_, 
bookfieldc0_.langcode as langcode6_5_, bookfieldc0_.revision_id as revision7_5_ from node__field_comment 
bookfieldc0_ where bookfieldc0_.entity_id=769 
 {executed in 0 msec}
2020-11-24 19:04:10.216 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|--------------------|------|---------------------|---------|------------|
|entity_id |bundle |field_comment_value |delta |field_comment_format |langcode |revision_id |
|----------|-------|--------------------|------|---------------------|---------|------------|
|769       |book   |                    |0     |full_html            |zh-hans  |769         |
|----------|-------|--------------------|------|---------------------|---------|------------|

2020-11-24 19:04:10.218 INFO  jdbc.sqltiming Line:373 - update node__field_comment set bundle='book', field_comment_value='<li class="reJj6Thl_0"><img 
src="https://static001.geekbang.org/account/avatar/00/0f/57/4f/6fb51ff1.jpg" class="_2273kGdT_0"> 
<div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> <a>一步</a> 
<!----> </div> <div class="_1H1Z49Dr_0"> 2020-03-26 </div> </div> <!----> </div> <div> <div 
class="_3M6kV3zb_0"> 有关 C 语言的知识还有待提高 </div> <div class="_2r3UB1GX_0"> <span>展开</span><i class="iconfont"></i> 
</div> <!----> <div class="_1w8H0ktn_0 _2A421P4G_0"> <div class="_2jsFl-X0_0"> <i class="iconfont"></i> 
<span></span> </div> <div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class=""></span> 
</div> <!----> </div> </div> </div></li>', delta=0, field_comment_format='full_html', langcode='zh-hans', 
revision_id=769 where entity_id=769 
 {executed in 0 msec}
2020-11-24 19:04:10.221 INFO  jdbc.sqltiming Line:373 - select nodefieldc0_.entity_id as entity_i1_14_0_, nodefieldc0_.bundle as bundle2_14_0_, nodefieldc0_.field_comment_value 
as field_co3_14_0_, nodefieldc0_.delta as delta4_14_0_, nodefieldc0_.field_comment_format as 
field_co5_14_0_, nodefieldc0_.langcode as langcode6_14_0_, nodefieldc0_.revision_id as revision7_14_0_ 
from node_revision__field_comment nodefieldc0_ where nodefieldc0_.entity_id=769 
 {executed in 0 msec}
2020-11-24 19:04:10.222 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|--------------------|------|---------------------|---------|------------|
|entity_id |bundle |field_comment_value |delta |field_comment_format |langcode |revision_id |
|----------|-------|--------------------|------|---------------------|---------|------------|
|[unread]  |book   |                    |0     |full_html            |zh-hans  |769         |
|----------|-------|--------------------|------|---------------------|---------|------------|

2020-11-24 19:04:10.223 INFO  jdbc.sqltiming Line:373 - update node_revision__field_comment set bundle='book', field_comment_value='<li class="reJj6Thl_0"><img 
src="https://static001.geekbang.org/account/avatar/00/0f/57/4f/6fb51ff1.jpg" class="_2273kGdT_0"> 
<div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> <a>一步</a> 
<!----> </div> <div class="_1H1Z49Dr_0"> 2020-03-26 </div> </div> <!----> </div> <div> <div 
class="_3M6kV3zb_0"> 有关 C 语言的知识还有待提高 </div> <div class="_2r3UB1GX_0"> <span>展开</span><i class="iconfont"></i> 
</div> <!----> <div class="_1w8H0ktn_0 _2A421P4G_0"> <div class="_2jsFl-X0_0"> <i class="iconfont"></i> 
<span></span> </div> <div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class=""></span> 
</div> <!----> </div> </div> </div></li>', delta=0, field_comment_format='full_html', langcode='zh-hans', 
revision_id=769 where entity_id=769 
 {executed in 0 msec}
2020-11-24 19:04:10.226 INFO  jdbc.sqltiming Line:373 - select bookfieldt0_.entity_id as entity_i1_9_, bookfieldt0_.bundle as bundle2_9_, bookfieldt0_.delta 
as delta3_9_, bookfieldt0_.langcode as langcode4_9_, bookfieldt0_.revision_id as revision5_9_, 
bookfieldt0_.field_thumb_value as field_th6_9_ from node__field_thumb bookfieldt0_ where bookfieldt0_.entity_id=769 
 {executed in 0 msec}
2020-11-24 19:04:10.226 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------|------------------|
|entity_id |bundle |delta |langcode |revision_id |field_thumb_value |
|----------|-------|------|---------|------------|------------------|
|769       |book   |0     |zh-hans  |769         |                  |
|----------|-------|------|---------|------------|------------------|

2020-11-24 19:04:10.228 INFO  jdbc.sqltiming Line:373 - update node__field_thumb set bundle='book', delta=0, langcode='zh-hans', revision_id=769, field_thumb_value='https://static001.geekbang.org/resource/image/fd/99/fdfabf2f116db414c3035da4af2fe199.jpg' 
where entity_id=769 
 {executed in 0 msec}
2020-11-24 19:04:10.231 INFO  jdbc.sqltiming Line:373 - select nodefieldt0_.entity_id as entity_i1_18_0_, nodefieldt0_.bundle as bundle2_18_0_, nodefieldt0_.delta 
as delta3_18_0_, nodefieldt0_.langcode as langcode4_18_0_, nodefieldt0_.revision_id as revision5_18_0_, 
nodefieldt0_.field_thumb_value as field_th6_18_0_ from node_revision__field_thumb nodefieldt0_ 
where nodefieldt0_.entity_id=769 
 {executed in 0 msec}
2020-11-24 19:04:10.231 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------|------------------|
|entity_id |bundle |delta |langcode |revision_id |field_thumb_value |
|----------|-------|------|---------|------------|------------------|
|[unread]  |book   |0     |zh-hans  |769         |                  |
|----------|-------|------|---------|------------|------------------|

2020-11-24 19:04:10.233 INFO  jdbc.sqltiming Line:373 - update node_revision__field_thumb set bundle='book', delta=0, langcode='zh-hans', revision_id=769, 
field_thumb_value='https://static001.geekbang.org/resource/image/fd/99/fdfabf2f116db414c3035da4af2fe199.jpg' 
where entity_id=769 
 {executed in 0 msec}
2020-11-24 19:04:10.235 INFO  jdbc.sqltiming Line:373 - select bookfieldf0_.entity_id as entity_i1_6_0_, bookfieldf0_.bundle as bundle2_6_0_, bookfieldf0_.delta 
as delta3_6_0_, bookfieldf0_.field_fenlei_target_id as field_fe4_6_0_, bookfieldf0_.langcode 
as langcode5_6_0_, bookfieldf0_.revision_id as revision6_6_0_ from node__field_fenlei bookfieldf0_ 
where bookfieldf0_.entity_id=769 
 {executed in 0 msec}
2020-11-24 19:04:10.236 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------------|---------|------------|
|entity_id |bundle |delta |field_fenlei_target_id |langcode |revision_id |
|----------|-------|------|-----------------------|---------|------------|
|[unread]  |book   |0     |1                      |zh-hans  |769         |
|----------|-------|------|-----------------------|---------|------------|

2020-11-24 19:04:10.238 INFO  jdbc.sqltiming Line:373 - select nodefieldf0_.entity_id as entity_i1_15_0_, nodefieldf0_.bundle as bundle2_15_0_, nodefieldf0_.delta 
as delta3_15_0_, nodefieldf0_.field_fenlei_target_id as field_fe4_15_0_, nodefieldf0_.langcode 
as langcode5_15_0_, nodefieldf0_.revision_id as revision6_15_0_ from node_revision__field_fenlei 
nodefieldf0_ where nodefieldf0_.entity_id=769 
 {executed in 0 msec}
2020-11-24 19:04:10.238 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------------|---------|------------|
|entity_id |bundle |delta |field_fenlei_target_id |langcode |revision_id |
|----------|-------|------|-----------------------|---------|------------|
|[unread]  |book   |0     |1                      |zh-hans  |769         |
|----------|-------|------|-----------------------|---------|------------|

2020-11-24 19:04:10.240 INFO  jdbc.sqltiming Line:373 - select bookchecke0_.item_id as item_id1_2_, bookchecke0_.fsid as fsid2_2_, bookchecke0_.got 
as got3_2_, bookchecke0_.name as name4_2_, bookchecke0_.parse_fail as parse_fa5_2_, bookchecke0_.parsed 
as parsed6_2_, bookchecke0_.path as path7_2_, bookchecke0_.title as title8_2_, bookchecke0_.vid 
as vid9_2_ from book_check bookchecke0_ where bookchecke0_.fsid='802437764186387' and bookchecke0_.name='net_content' 
 {executed in 0 msec}
2020-11-24 19:04:10.241 INFO  jdbc.resultsettable Line:610 - 
|--------|---------|---------|---------|-----------|---------|---------|---------|---------|
|item_id |fsid     |got      |name     |parse_fail |parsed   |path     |title    |vid      |
|--------|---------|---------|---------|-----------|---------|---------|---------|---------|
|770     |[unread] |[unread] |[unread] |[unread]   |[unread] |[unread] |[unread] |[unread] |
|--------|---------|---------|---------|-----------|---------|---------|---------|---------|

2020-11-24 19:05:00.404 INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean Line:598 - Closing JPA EntityManagerFactory for persistence unit 'default'
2020-11-24 19:05:00.407 INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Line:218 - Shutting down ExecutorService 'applicationTaskExecutor'
2020-11-24 19:05:00.407 INFO  com.zaxxer.hikari.HikariDataSource Line:350 - HikariPool-1 - Shutdown initiated...
2020-11-24 19:05:00.413 INFO  com.zaxxer.hikari.HikariDataSource Line:352 - HikariPool-1 - Shutdown completed.
