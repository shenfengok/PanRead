2020-11-23 19:31:53.445 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------------|------------|
|entity_id |bundle |delta |langcode |field_media_value |revision_id |
|----------|-------|------|---------|------------------|------------|
|724       |book   |0     |zh-hans  |                  |724         |
|----------|-------|------|---------|------------------|------------|

2020-11-23 19:31:53.470 INFO  jdbc.sqltiming Line:373 - select nodefieldm0_.entity_id as entity_i1_17_0_, nodefieldm0_.bundle as bundle2_17_0_, nodefieldm0_.delta 
as delta3_17_0_, nodefieldm0_.langcode as langcode4_17_0_, nodefieldm0_.field_media_value as 
field_me5_17_0_, nodefieldm0_.revision_id as revision6_17_0_ from node_revision__field_media 
nodefieldm0_ where nodefieldm0_.entity_id=724 
 {executed in 1 msec}
2020-11-23 19:31:53.472 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------------|------------|
|entity_id |bundle |delta |langcode |field_media_value |revision_id |
|----------|-------|------|---------|------------------|------------|
|[unread]  |book   |0     |zh-hans  |                  |724         |
|----------|-------|------|---------|------------------|------------|

2020-11-23 19:31:53.488 INFO  jdbc.sqltiming Line:373 - select bookfieldc0_.entity_id as entity_i1_5_, bookfieldc0_.bundle as bundle2_5_, bookfieldc0_.field_comment_value 
as field_co3_5_, bookfieldc0_.delta as delta4_5_, bookfieldc0_.field_comment_format as field_co5_5_, 
bookfieldc0_.langcode as langcode6_5_, bookfieldc0_.revision_id as revision7_5_ from node__field_comment 
bookfieldc0_ where bookfieldc0_.entity_id=724 
 {executed in 1 msec}
2020-11-23 19:31:53.490 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|--------------------|------|---------------------|---------|------------|
|entity_id |bundle |field_comment_value |delta |field_comment_format |langcode |revision_id |
|----------|-------|--------------------|------|---------------------|---------|------------|
|724       |book   |                    |0     |full_html            |zh-hans  |724         |
|----------|-------|--------------------|------|---------------------|---------|------------|

2020-11-23 19:31:53.506 INFO  jdbc.sqltiming Line:373 - update node__field_comment set bundle='book', field_comment_value='<li class="reJj6Thl_0"><img 
src="https://static001.geekbang.org/account/avatar/00/0f/92/6d/becd841a.jpg" class="_2273kGdT_0"> 
<div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> <a>escray</a> 
<!----> </div> <div class="_1H1Z49Dr_0"> 2020-02-02 </div> </div> <!----> </div> <div> <div 
class="_3M6kV3zb_0"> 以前看过一点关于 VSCO 的教程，业余水平，现在也还没有到需要充值会员的程度。 <br> <br>用过手机自带的一些滤镜，自我感觉还挺好，看了这篇文章，发现自己以前可能比较业余，用滤镜掩饰拍摄问题。 
<br> <br>另外，如果直接套滤镜，其实是没有什么目标的，仅仅是套上滤镜，以观后效。看了 VSCO 里面那么多的工具选项，才算是对于曝光、对比度、二次构图……等等后期调整有了直观的认识，也许之后可以有的放矢的做一些修正。 
<br> <br>在我的设想中，是每天随手拍一些照片，然后挑出一两张来发朋友圈，作为日常生活的记录，暂时可能还用不到 VSCO 这么专业的后期工具，不过也可以试一下。 <br> <br>小练习中的要求，看上去简单，实际上挺难的。找出一张照片，然后用 
VSCO 做后期，关键是要解释为什么那么做，大部分时候，我只能说，“我觉得这样更好看”。 </div> <div class="_2r3UB1GX_0"> <span>展开</span><i 
class="iconfont"></i> </div> <!----> <div class="_1w8H0ktn_0 _2A421P4G_0"> <div class="_2jsFl-X0_0"> 
<i class="iconfont"></i> <span></span> </div> <div class="_2P4B1Hdm_0"> <i class="iconfont"></i> 
<span class=""></span> </div> <!----> </div> </div> </div></li>', delta=0, field_comment_format='full_html', 
langcode='zh-hans', revision_id=724 where entity_id=724 
 {executed in 1 msec}
2020-11-23 19:31:53.512 INFO  jdbc.sqltiming Line:373 - select nodefieldc0_.entity_id as entity_i1_14_0_, nodefieldc0_.bundle as bundle2_14_0_, nodefieldc0_.field_comment_value 
as field_co3_14_0_, nodefieldc0_.delta as delta4_14_0_, nodefieldc0_.field_comment_format as 
field_co5_14_0_, nodefieldc0_.langcode as langcode6_14_0_, nodefieldc0_.revision_id as revision7_14_0_ 
from node_revision__field_comment nodefieldc0_ where nodefieldc0_.entity_id=724 
 {executed in 1 msec}
2020-11-23 19:31:53.514 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|--------------------|------|---------------------|---------|------------|
|entity_id |bundle |field_comment_value |delta |field_comment_format |langcode |revision_id |
|----------|-------|--------------------|------|---------------------|---------|------------|
|[unread]  |book   |                    |0     |full_html            |zh-hans  |724         |
|----------|-------|--------------------|------|---------------------|---------|------------|

2020-11-23 19:31:53.530 INFO  jdbc.sqltiming Line:373 - update node_revision__field_comment set bundle='book', field_comment_value='<li class="reJj6Thl_0"><img 
src="https://static001.geekbang.org/account/avatar/00/0f/92/6d/becd841a.jpg" class="_2273kGdT_0"> 
<div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> <a>escray</a> 
<!----> </div> <div class="_1H1Z49Dr_0"> 2020-02-02 </div> </div> <!----> </div> <div> <div 
class="_3M6kV3zb_0"> 以前看过一点关于 VSCO 的教程，业余水平，现在也还没有到需要充值会员的程度。 <br> <br>用过手机自带的一些滤镜，自我感觉还挺好，看了这篇文章，发现自己以前可能比较业余，用滤镜掩饰拍摄问题。 
<br> <br>另外，如果直接套滤镜，其实是没有什么目标的，仅仅是套上滤镜，以观后效。看了 VSCO 里面那么多的工具选项，才算是对于曝光、对比度、二次构图……等等后期调整有了直观的认识，也许之后可以有的放矢的做一些修正。 
<br> <br>在我的设想中，是每天随手拍一些照片，然后挑出一两张来发朋友圈，作为日常生活的记录，暂时可能还用不到 VSCO 这么专业的后期工具，不过也可以试一下。 <br> <br>小练习中的要求，看上去简单，实际上挺难的。找出一张照片，然后用 
VSCO 做后期，关键是要解释为什么那么做，大部分时候，我只能说，“我觉得这样更好看”。 </div> <div class="_2r3UB1GX_0"> <span>展开</span><i 
class="iconfont"></i> </div> <!----> <div class="_1w8H0ktn_0 _2A421P4G_0"> <div class="_2jsFl-X0_0"> 
<i class="iconfont"></i> <span></span> </div> <div class="_2P4B1Hdm_0"> <i class="iconfont"></i> 
<span class=""></span> </div> <!----> </div> </div> </div></li>', delta=0, field_comment_format='full_html', 
langcode='zh-hans', revision_id=724 where entity_id=724 
 {executed in 1 msec}
2020-11-23 19:31:53.536 INFO  jdbc.sqltiming Line:373 - select bookfieldt0_.entity_id as entity_i1_9_, bookfieldt0_.bundle as bundle2_9_, bookfieldt0_.delta 
as delta3_9_, bookfieldt0_.langcode as langcode4_9_, bookfieldt0_.revision_id as revision5_9_, 
bookfieldt0_.field_thumb_value as field_th6_9_ from node__field_thumb bookfieldt0_ where bookfieldt0_.entity_id=724 
 {executed in 1 msec}
2020-11-23 19:31:53.538 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------|------------------|
|entity_id |bundle |delta |langcode |revision_id |field_thumb_value |
|----------|-------|------|---------|------------|------------------|
|724       |book   |0     |zh-hans  |724         |                  |
|----------|-------|------|---------|------------|------------------|

2020-11-23 19:31:53.554 INFO  jdbc.sqltiming Line:373 - update node__field_thumb set bundle='book', delta=0, langcode='zh-hans', revision_id=724, field_thumb_value='https://static001.geekbang.org/resource/image/8b/76/8b14cd5457d825f1753165ee6e553276.jpeg' 
where entity_id=724 
 {executed in 1 msec}
2020-11-23 19:31:53.560 INFO  jdbc.sqltiming Line:373 - select nodefieldt0_.entity_id as entity_i1_18_0_, nodefieldt0_.bundle as bundle2_18_0_, nodefieldt0_.delta 
as delta3_18_0_, nodefieldt0_.langcode as langcode4_18_0_, nodefieldt0_.revision_id as revision5_18_0_, 
nodefieldt0_.field_thumb_value as field_th6_18_0_ from node_revision__field_thumb nodefieldt0_ 
where nodefieldt0_.entity_id=724 
 {executed in 1 msec}
2020-11-23 19:31:53.562 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------|------------------|
|entity_id |bundle |delta |langcode |revision_id |field_thumb_value |
|----------|-------|------|---------|------------|------------------|
|[unread]  |book   |0     |zh-hans  |724         |                  |
|----------|-------|------|---------|------------|------------------|

2020-11-23 19:31:53.577 INFO  jdbc.sqltiming Line:373 - update node_revision__field_thumb set bundle='book', delta=0, langcode='zh-hans', revision_id=724, 
field_thumb_value='https://static001.geekbang.org/resource/image/8b/76/8b14cd5457d825f1753165ee6e553276.jpeg' 
where entity_id=724 
 {executed in 1 msec}
2020-11-23 19:31:53.583 INFO  jdbc.sqltiming Line:373 - select bookfieldf0_.entity_id as entity_i1_6_0_, bookfieldf0_.bundle as bundle2_6_0_, bookfieldf0_.delta 
as delta3_6_0_, bookfieldf0_.field_fenlei_target_id as field_fe4_6_0_, bookfieldf0_.langcode 
as langcode5_6_0_, bookfieldf0_.revision_id as revision6_6_0_ from node__field_fenlei bookfieldf0_ 
where bookfieldf0_.entity_id=724 
 {executed in 1 msec}
2020-11-23 19:31:53.585 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------------|---------|------------|
|entity_id |bundle |delta |field_fenlei_target_id |langcode |revision_id |
|----------|-------|------|-----------------------|---------|------------|
|[unread]  |book   |0     |1                      |zh-hans  |724         |
|----------|-------|------|-----------------------|---------|------------|

2020-11-23 19:31:53.602 INFO  jdbc.sqltiming Line:373 - select nodefieldf0_.entity_id as entity_i1_15_0_, nodefieldf0_.bundle as bundle2_15_0_, nodefieldf0_.delta 
as delta3_15_0_, nodefieldf0_.field_fenlei_target_id as field_fe4_15_0_, nodefieldf0_.langcode 
as langcode5_15_0_, nodefieldf0_.revision_id as revision6_15_0_ from node_revision__field_fenlei 
nodefieldf0_ where nodefieldf0_.entity_id=724 
 {executed in 1 msec}
2020-11-23 19:31:53.604 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------------|---------|------------|
|entity_id |bundle |delta |field_fenlei_target_id |langcode |revision_id |
|----------|-------|------|-----------------------|---------|------------|
|[unread]  |book   |0     |1                      |zh-hans  |724         |
|----------|-------|------|-----------------------|---------|------------|

2020-11-23 19:31:53.620 INFO  jdbc.sqltiming Line:373 - select bookchecke0_.item_id as item_id1_2_, bookchecke0_.fsid as fsid2_2_, bookchecke0_.got 
as got3_2_, bookchecke0_.name as name4_2_, bookchecke0_.parse_fail as parse_fa5_2_, bookchecke0_.parsed 
as parsed6_2_, bookchecke0_.path as path7_2_, bookchecke0_.title as title8_2_, bookchecke0_.vid 
as vid9_2_ from book_check bookchecke0_ where bookchecke0_.fsid='385286249177325' and bookchecke0_.name='net_content' 
 {executed in 1 msec}
2020-11-23 19:31:53.622 INFO  jdbc.resultsettable Line:610 - 
|--------|---------|---------|---------|-----------|---------|---------|---------|---------|
|item_id |fsid     |got      |name     |parse_fail |parsed   |path     |title    |vid      |
|--------|---------|---------|---------|-----------|---------|---------|---------|---------|
|725     |[unread] |[unread] |[unread] |[unread]   |[unread] |[unread] |[unread] |[unread] |
|--------|---------|---------|---------|-----------|---------|---------|---------|---------|

2020-11-23 19:32:06.264 INFO  jdbc.sqltiming Line:373 - update book_check set fsid='385286249177325', got=1, name='net_content', parse_fail='', parsed=1, 
path='108-摄影入门课/03丨实战篇 (10讲)/19丨基础手机后期（下）：Snapseed使用攻略（@随你们去）.html', title='19丨基础手机后期（下）：Snapseed使用攻略（@随你们去）', 
vid=725 where item_id=725 
 {executed in 1 msec}
2020-11-23 19:32:06.283 INFO  jdbc.sqltiming Line:373 - select nodebodyen0_.entity_id as entity_i1_4_, nodebodyen0_.body_value as body_val2_4_, nodebodyen0_.body_summary 
as body_sum3_4_, nodebodyen0_.bundle as bundle4_4_, nodebodyen0_.delta as delta5_4_, nodebodyen0_.body_format 
as body_for6_4_, nodebodyen0_.langcode as langcode7_4_, nodebodyen0_.revision_id as revision8_4_ 
from node__body nodebodyen0_ where nodebodyen0_.entity_id=725 
 {executed in 1 msec}
2020-11-23 19:32:06.285 INFO  jdbc.resultsettable Line:610 - 
|----------|-----------|-------------|-------|------|------------|---------|------------|
|entity_id |body_value |body_summary |bundle |delta |body_format |langcode |revision_id |
|----------|-----------|-------------|-------|------|------------|---------|------------|
|725       |           |             |book   |0     |full_html   |zh-hans  |725         |
|----------|-----------|-------------|-------|------|------------|---------|------------|

2020-11-23 19:32:06.288 INFO  jdbc.sqltiming Line:373 - select nodebodyre0_.entity_id as entity_i1_13_0_, nodebodyre0_.body_value as body_val2_13_0_, 
nodebodyre0_.body_summary as body_sum3_13_0_, nodebodyre0_.bundle as bundle4_13_0_, nodebodyre0_.delta 
as delta5_13_0_, nodebodyre0_.body_format as body_for6_13_0_, nodebodyre0_.langcode as langcode7_13_0_, 
nodebodyre0_.revision_id as revision8_13_0_ from node_revision__body nodebodyre0_ where nodebodyre0_.entity_id=725 
 {executed in 1 msec}
2020-11-23 19:32:06.291 INFO  jdbc.resultsettable Line:610 - 
|----------|-----------|-------------|-------|------|------------|---------|------------|
|entity_id |body_value |body_summary |bundle |delta |body_format |langcode |revision_id |
|----------|-----------|-------------|-------|------|------------|---------|------------|
|[unread]  |           |             |book   |0     |full_html   |zh-hans  |725         |
|----------|-----------|-------------|-------|------|------------|---------|------------|

2020-11-23 19:32:06.332 INFO  jdbc.sqltiming Line:373 - update node__body set body_value='<div data-slate-editor="true" data-key="407" autocorrect="off" 
spellcheck="false" data-gramm="false" style="outline: none; white-space: pre-wrap; overflow-wrap: 
break-word;"> <div class="se-c67c33ec " data-slate-type="paragraph" data-slate-object="block" 
data-key="408"> <span data-slate-object="text" data-key="409"><span data-slate-leaf="true" 
data-offset-key="409:0" data-first-offset="true"><span data-slate-string="true">你好，我是 @随你们去，这次还是我代课，今天咱们聊一聊 
Snapseed 这个软件的用法。</span></span></span> </div> <div class="se-4ddfdcef" data-slate-type="image" 
data-slate-object="block" data-key="410"> <img class="se-89a07431" src="https://static001.geekbang.org/resource/image/0e/f3/0e302dd77d13fd0a77c6b1e3cbfec6f3.png"> 
</div> <div class="se-4ea0884c " data-slate-type="paragraph" data-slate-object="block" data-key="411"> 
<span data-slate-object="text" data-key="412"><span data-slate-leaf="true" data-offset-key="412:0" 
data-first-offset="true"><span data-slate-string="true">与 VSCO 一样，Snapseed 也是一款历史悠久的移动端图片后期工具。在 
2012 年，Google 收购了 Snapseed 的开发商 Nik Software，得益于此次收购，这款曾经的 iOS 付费应用现在可以在 iOS 以及 Android 平台上完全免费使用。</span></span></span> 
</div> <div class="se-3a3dc67a " data-slate-type="paragraph" data-slate-object="block" data-key="413"> 
<span data-slate-object="text" data-key="414"><span data-slate-leaf="true" data-offset-key="414:0" 
data-first-offset="true"><span data-slate-string="true">跟 VSCO 不同的是，Snapseed 是一款全能的后期工具，对照片有着更加自由的调整空间，但因为它默认提供的滤镜相对鸡肋，所以最好让它和 
VSCO 形成互补来搭配使用。我自己习惯用 VSCO 调色，用 Snapseed 处理一些特殊需求。</span></span></span> </div> <div class="se-0f4f2704 
" data-slate-type="paragraph" data-slate-object="block" data-key="415"> <span data-slate-object="text" 
data-key="416"><span data-slate-leaf="true" data-offset-key="416:0" data-first-offset="true"><span 
class="se-67224522" data-slate-type="bold" data-slate-object="mark"><span data-slate-string="true">注：</span></span></span></span> 
</div> <div class="se-8b8c4dec" data-slate-type="list" data-slate-object="block" data-key="417"> 
<div class="se-5c6ee8c4" data-slate-type="list-line" data-slate-object="block" data-key="418"> 
<div class="se-fd18feb0 se-5e6fe520" data-code-line-number="1"></div> <div class="se-ea1b84d3"> 
<span data-slate-object="text" data-key="419"><span data-slate-leaf="true" data-offset-key="419:0" 
data-first-offset="true"><span data-slate-string="true">为了避免重复，有关 Snapseed 与 VSCO 重复功能的部分本节课会略过；</span></span></span> 
</div> </div> <div class="se-c5d276a8" data-slate-type="list-line" data-slate-object="block" 
data-key="420"> <div class="se-93cc7588 se-cc6a285a" data-code-line-number="2"></div> <div 
class="se-ffcefba1"> <span data-slate-object="text" data-key="421"><span data-slate-leaf="true" 
data-offset-key="421:0" data-first-offset="true"><span data-slate-string="true">考虑到实用性，滤镜部分本节课也不涉及；</span></span></span> 
</div> </div> <div class="se-7bb9e792" data-slate-type="list-line" data-slate-object="block" 
data-key="422"> <div class="se-90ec913f se-12a7dd85" data-code-line-number="3"></div> <div 
class="se-bab62029"> <span data-slate-object="text" data-key="423"><span data-slate-leaf="true" 
data-offset-key="423:0" data-first-offset="true"><span data-slate-string="true">上这节课前，建议你再翻回上一节课看一看里面的“调整工具”部分。</span></span></span> 
</div> </div> </div> <div class="se-1be79a35 " data-slate-type="paragraph" data-slate-object="block" 
data-key="424"></div> <div class="se-fb4f4857 se-757602ca" data-slate-type="paragraph" data-slate-object="block" 
data-key="425"> <span data-slate-object="text" data-key="426"><span data-slate-leaf="true" 
data-offset-key="426:0" data-first-offset="true"><span class="se-5ad61768" data-slate-type="bold" 
data-slate-object="mark"><span data-slate-string="true">目录一览</span></span></span></span> </div> 
<div class="se-3a8bbc83" data-slate-type="image" data-slate-object="block" data-key="427"> 
<img class="se-f3afd9bb" src="https://static001.geekbang.org/resource/image/d6/07/d681b90d99374fa56f0ade11203c7d07.jpeg"> 
</div> <div class="se-89faf0c4 " data-slate-type="paragraph" data-slate-object="block" data-key="428"></div> 
<div class="se-db9220ea se-80b01c6b" data-slate-type="paragraph" data-slate-object="block" 
data-key="429"> <span data-slate-object="text" data-key="430"><span data-slate-leaf="true" 
data-offset-key="430:0" data-first-offset="true"><span class="se-c2260962" data-slate-type="bold" 
data-slate-object="mark"><span data-slate-string="true">框架熟悉：认识 Snapseed</span></span></span></span> 
</div> <div class="se-81f38668" data-slate-type="image" data-slate-object="block" data-key="431"> 
<img class="se-66e2200c" src="https://static001.geekbang.org/resource/image/b1/4c/b1235334f04b0bfebcca5c5a999d7f4c.png"> 
</div> <div class="se-d6cca09a " data-slate-type="paragraph" data-slate-object="block" data-key="432"> 
<span data-slate-object="text" data-key="433"><span data-slate-leaf="true" data-offset-key="433:0" 
data-first-offset="true"><span data-slate-string="true">用 Snapseed 打开一张照片后，我们可以看到它整体的界面布局：底部栏分别为</span></span></span><span 
data-slate-object="text" data-key="434"><span data-slate-leaf="true" data-offset-key="434:0" 
data-first-offset="true"><span class="se-cf137bc1" data-slate-type="bold" data-slate-object="mark"><span 
data-slate-string="true">样式</span></span></span></span><span data-slate-object="text" data-key="435"><span 
data-slate-leaf="true" data-offset-key="435:0" data-first-offset="true"><span data-slate-string="true">、</span></span></span><span 
data-slate-object="text" data-key="436"><span data-slate-leaf="true" data-offset-key="436:0" 
data-first-offset="true"><span class="se-1f6c870b" data-slate-type="bold" data-slate-object="mark"><span 
data-slate-string="true">工具</span></span></span></span><span data-slate-object="text" data-key="437"><span 
data-slate-leaf="true" data-offset-key="437:0" data-first-offset="true"><span data-slate-string="true">和</span></span></span><span 
data-slate-object="text" data-key="438"><span data-slate-leaf="true" data-offset-key="438:0" 
data-first-offset="true"><span class="se-e21466d8" data-slate-type="bold" data-slate-object="mark"><span 
data-slate-string="true">导出</span></span></span></span><span data-slate-object="text" data-key="439"><span 
data-slate-leaf="true" data-offset-key="439:0" data-first-offset="true"><span data-slate-string="true">功能，顶部栏分别为</span></span></span><span 
data-slate-object="text" data-key="440"><span data-slate-leaf="true" data-offset-key="440:0" 
data-first-offset="true"><span class="se-8fba82a7" data-slate-type="bold" data-slate-object="mark"><span 
data-slate-string="true">打开新照片</span></span></span></span><span data-slate-object="text" data-key="441"><span 
data-slate-leaf="true" data-offset-key="441:0" data-first-offset="true"><span data-slate-string="true">、</span></span></span><span 
data-slate-object="text" data-key="442"><span data-slate-leaf="true" data-offset-key="442:0" 
data-first-offset="true"><span class="se-99c8f554" data-slate-type="bold" data-slate-object="mark"><span 
data-slate-string="true">操作记录</span></span></span></span><span data-slate-object="text" data-key="443"><span 
data-slate-leaf="true" data-offset-key="443:0" data-first-offset="true"><span data-slate-string="true">、</span></span></span><span 
data-slate-object="text" data-key="444"><span data-slate-leaf="true" data-offset-key="444:0" 
data-first-offset="true"><span class="se-e3769a9b" data-slate-type="bold" data-slate-object="mark"><span 
data-slate-string="true">图片信息</span></span></span></span><span data-slate-object="text" data-key="445"><span 
data-slate-leaf="true" data-offset-key="445:0" data-first-offset="true"><span data-slate-string="true">以及</span></span></span><span 
data-slate-object="text" data-key="446"><span data-slate-leaf="true" data-offset-key="446:0" 
data-first-offset="true"><span class="se-c28943ed" data-slate-type="bold" data-slate-object="mark"><span 
data-slate-string="true">更多</span></span></span></span><span data-slate-object="text" data-key="447"><span 
data-slate-leaf="true" data-offset-key="447:0" data-first-offset="true"><span data-slate-string="true">（设置、教程、帮助和反馈）功能。</span></span></span> 
</div> <div class="se-00a4453b" data-slate-type="image" data-slate-object="block" data-key="448"> 
<img class="se-9602f4a4" src="https://static001.geekbang.org/resource/image/d3/b5/d32872a9a84a15f2ae80a52a8c0227b5.png"> 
</div> <div class="se-8b5a08f0 " data-slate-type="paragraph" data-slate-object="block" data-key="449"></div> 
<div class="se-da2dd35a se-fbaf9845" data-slate-type="paragraph" data-slate-object="block" 
data-key="450"> <span data-slate-object="text" data-key="451"><span data-slate-leaf="true" 
data-offset-key="451:0" data-first-offset="true"><span class="se-c66c344e" data-slate-type="bold" 
data-slate-object="mark"><span data-slate-string="true">样式</span></span></span></span> </div> 
<div class="se-ad0d7167 " data-slate-type="paragraph" data-slate-object="block" data-key="452"> 
<span data-slate-object="text" data-key="453"><span data-slate-leaf="true" data-offset-key="453:0" 
data-first-offset="true"><span data-slate-string="true">导入照片后，</span></span></span><span data-slate-object="text" 
data-key="454"><span data-slate-leaf="true" data-offset-key="454:0" data-first-offset="true"><span 
class="se-7e9abe19" data-slate-type="bold" data-slate-object="mark"><span data-slate-string="true">样式</span></span></span></span><span 
data-slate-object="text" data-key="455"><span data-slate-leaf="true" data-offset-key="455:0" 
data-first-offset="true"><span data-slate-string="true">是第一个呈现的页面，但通常情况下，这里我们直接切换到</span></span></span><span 
data-slate-object="text" data-key="456"><span data-slate-leaf="true" data-offset-key="456:0" 
data-first-offset="true"><span class="se-fca2eca1" data-slate-type="bold" data-slate-object="mark"><span 
data-slate-string="true">工具</span></span></span></span><span data-slate-object="text" data-key="457"><span 
data-slate-leaf="true" data-offset-key="457:0" data-first-offset="true"><span data-slate-string="true">即可。因为 
Snapseed 所提供的这些样式的适用性非常糟糕，而且也没有应用程度的微调选项，搞得这个功能基本用处不大。</span></span></span> </div> <div class="se-039b977b" 
data-slate-type="image" data-slate-object="block" data-key="458"> <img class="se-58b14f09" 
src="https://static001.geekbang.org/resource/image/eb/64/eb0d559a1bfc32b1d785de9e18762764.png"> 
</div> <div class="se-9a589237 " data-slate-type="paragraph" data-slate-object="block" data-key="459"> 
<span data-slate-object="text" data-key="460"><span data-slate-leaf="true" data-offset-key="460:0" 
data-first-offset="true"><span data-slate-string="true">样式栏滑动到最后，你可以将自己的当前调整步骤（如果有）添加至样式里。由于每张照片所需要的调整步骤各不相同，这样的操作仅适合用于批处理同一系列照片，其他情况下不建议使用。</span></span></span> 
</div> <div class="se-f589ffad " data-slate-type="paragraph" data-slate-object="block" data-key="461"> 
<span data-slate-object="text" data-key="462"><span data-slate-leaf="true" data-offset-key="462:0" 
data-first-offset="true"><span class="se-0847723c" data-slate-type="bold" data-slate-object="mark"><span 
data-slate-string="true">所以总结来说，除了使用自己建立的样式来进行批处理外，不建议使用 Snapseed 的样式。</span></span></span></span> 
</div> <div class="se-a60d305c " data-slate-type="paragraph" data-slate-object="block" data-key="463"></div> 
<div class="se-c67a7c65 se-f77fcea5" data-slate-type="paragraph" data-slate-object="block" 
data-key="464"> <span data-slate-object="text" data-key="465"><span data-slate-leaf="true" 
data-offset-key="465:0" data-first-offset="true"><span class="se-6dc53857" data-slate-type="bold" 
data-slate-object="mark"><span data-slate-string="true">工具</span></span></span></span> </div> 
<div class="se-b67f807c " data-slate-type="paragraph" data-slate-object="block" data-key="466"> 
<span data-slate-object="text" data-key="467"><span data-slate-leaf="true" data-offset-key="467:0" 
data-first-offset="true"><span data-slate-string="true">工具页面里总共有 28 个小工具，但这里面有部分小工具实际上是滤镜。这些滤镜是：“HDR 
景观”“魅力光晕”“戏剧效果”“复古”“粗粒胶片”“怀旧”“斑驳”“黑白”“黑白电影”。</span></span></span> </div> <div class="se-62266c20" 
data-slate-type="image" data-slate-object="block" data-key="468"> <img class="se-979c9c4e" 
src="https://static001.geekbang.org/resource/image/6f/0c/6ff3b6041dec2525e92cf326157ae10c.png"> 
</div> <div class="se-89de36ab " data-slate-type="paragraph" data-slate-object="block" data-key="469"> 
<span data-slate-object="text" data-key="470"><span data-slate-leaf="true" data-offset-key="470:0" 
data-first-offset="true"><span data-slate-string="true">除了滤镜外，“美颜”和“头部姿势”这两个小工具是关于美颜的，不是本课的重点，我只在这里简单介绍一下：“美颜”工具相对常规，可以识别面部并提供肤色调整、面部提亮、嫩肤和亮眼功能；“头部姿势”工具则比较有趣，可以调整面部角度、瞳孔大小、笑容和焦距。</span></span></span> 
</div> <div class="se-8564423c " data-slate-type="paragraph" data-slate-object="block" data-key="471"> 
<span data-slate-object="text" data-key="472"><span data-slate-leaf="true" data-offset-key="472:0" 
data-first-offset="true"><span data-slate-string="true">除去上面所提到的内容，还剩下 17 个小工具，我稍后会一一介绍。</span></span></span> 
</div> <div class="se-801fce64 " data-slate-type="paragraph" data-slate-object="block" data-key="473"></div> 
<div class="se-c681579f se-1142dc75" data-slate-type="paragraph" data-slate-object="block" 
data-key="474"> <span data-slate-object="text" data-key="475"><span data-slate-leaf="true" 
data-offset-key="475:0" data-first-offset="true"><span class="se-60e41023" data-slate-type="bold" 
data-slate-object="mark"><span data-slate-string="true">导出</span></span></span></span> </div> 
<div class="se-48da41d8" data-slate-type="image" data-slate-object="block" data-key="476"> 
<img class="se-7dff1e2f" src="https://static001.geekbang.org/resource/image/ea/a5/eab2c05c704fd2be113692a216bc7da5.png"> 
</div> <div class="se-41a4f109 " data-slate-type="paragraph" data-slate-object="block" data-key="477"> 
<span data-slate-object="text" data-key="478"><span data-slate-leaf="true" data-offset-key="478:0" 
data-first-offset="true"><span data-slate-string="true">iOS 和 Android 两个版本的导出功能有所区别，具体实现的功能可以查看小字描述部分。其中 
iOS 可以以三种方式导出，分别是：覆盖原图的保存（图片可再次修改）、副本的保存（图片可再次修改）、直接导出的保存（图片不可再次修改）。</span></span></span> </div> 
<div class="se-004e996d " data-slate-type="paragraph" data-slate-object="block" data-key="479"> 
<span data-slate-object="text" data-key="480"><span data-slate-leaf="true" data-offset-key="480:0" 
data-first-offset="true"><span data-slate-string="true">这里“覆盖原图的保存”以及“副本的保存”，保存后的图片可再次修改，和其他工具有所不同。</span></span></span> 
</div> <div class="se-629da18d " data-slate-type="paragraph" data-slate-object="block" data-key="481"></div> 
<div class="se-50ecf609 se-04b22606" data-slate-type="paragraph" data-slate-object="block" 
data-key="482"> <span data-slate-object="text" data-key="483"><span data-slate-leaf="true" 
data-offset-key="483:0" data-first-offset="true"><span class="se-df6d244b" data-slate-type="bold" 
data-slate-object="mark"><span data-slate-string="true">操作记录</span></span></span></span> </div> 
<div class="se-6892877d" data-slate-type="image" data-slate-object="block" data-key="484"> 
<img class="se-2cd8ebcd" src="https://static001.geekbang.org/resource/image/79/34/796def2ae0b1109ef6f8f1bc1ddaf234.png"> 
</div> <div class="se-a87bbc4c " data-slate-type="paragraph" data-slate-object="block" data-key="485"> 
<span data-slate-object="text" data-key="486"><span data-slate-leaf="true" data-offset-key="486:0" 
data-first-offset="true"><span data-slate-string="true">在操作记录里，我们可以进行撤销、重做以及还原操作。在“查看修改内容”里，还可以重新调整或删除某单个调整项，对于大部分调整项来说，都可以在这里使用画笔来将其调整为局部处理。（画笔是 
Snapseed 里比较重要的一个工具，后面我会详细介绍。）</span></span></span> </div> <div class="se-35259bbf " data-slate-type="paragraph" 
data-slate-object="block" data-key="487"> <span data-slate-object="text" data-key="488"><span 
data-slate-leaf="true" data-offset-key="488:0" data-first-offset="true"><span data-slate-string="true">位于最底部的 
QR 样式是样式分享功能，你可以通过这个功能将自己的调整步骤创建为一个二维码供他人使用，或是使用他人的调整步骤。</span></span></span> </div> <div class="se-4fb42cef 
" data-slate-type="paragraph" data-slate-object="block" data-key="489"></div> <div class="se-af5a9d88 
se-40f4c456" data-slate-type="paragraph" data-slate-object="block" data-key="490"> <span data-slate-object="text" 
data-key="491"><span data-slate-leaf="true" data-offset-key="491:0" data-first-offset="true"><span 
class="se-59137992" data-slate-type="bold" data-slate-object="mark"><span data-slate-string="true">详细信息与设置</span></span></span></span> 
</div> <div class="se-02de5192" data-slate-type="image" data-slate-object="block" data-key="492"> 
<img class="se-3882f532" src="https://static001.geekbang.org/resource/image/2b/73/2ba6e533f7dedd7ec33e01d72a8bce73.png"> 
</div> <div class="se-4c5c05b9 " data-slate-type="paragraph" data-slate-object="block" data-key="493"> 
<span data-slate-object="text" data-key="494"><span data-slate-leaf="true" data-offset-key="494:0" 
data-first-offset="true"><span data-slate-string="true">在详细信息里，我们可以看到这张图片的创建时间、名称、分辨率、大小、拍摄机型、拍摄参数以及位置信息。</span></span></span> 
</div> <div class="se-f882d0da " data-slate-type="paragraph" data-slate-object="block" data-key="495"> 
<span data-slate-object="text" data-key="496"><span data-slate-leaf="true" data-offset-key="496:0" 
data-first-offset="true"><span data-slate-string="true">在设置里，可以对导出画质进行调整，建议设置为</span></span></span><span 
data-slate-object="text" data-key="497"><span data-slate-leaf="true" data-offset-key="497:0" 
data-first-offset="true"><span class="se-90950f54" data-slate-type="bold" data-slate-object="mark"><span 
data-slate-string="true">不要调整大小</span></span></span></span><span data-slate-object="text" data-key="498"><span 
data-slate-leaf="true" data-offset-key="498:0" data-first-offset="true"><span data-slate-string="true">以及 
</span></span></span><span data-slate-object="text" data-key="499"><span data-slate-leaf="true" 
data-offset-key="499:0" data-first-offset="true"><span class="se-58e41b0d" data-slate-type="bold" 
data-slate-object="mark"><span data-slate-string="true">JPG 100%</span></span></span></span><span 
data-slate-object="text" data-key="500"><span data-slate-leaf="true" data-offset-key="500:0" 
data-first-offset="true"><span data-slate-string="true"> 画质。</span></span></span> </div> <div 
class="se-575de1fa " data-slate-type="paragraph" data-slate-object="block" data-key="501"></div> 
<div class="se-55bbcf71 se-e6a066f7" data-slate-type="paragraph" data-slate-object="block" 
data-key="502"> <span data-slate-object="text" data-key="503"><span data-slate-leaf="true" 
data-offset-key="503:0" data-first-offset="true"><span class="se-de4d5e30" data-slate-type="bold" 
data-slate-object="mark"><span data-slate-string="true">叠加性</span></span></span></span> </div> 
<div class="se-ff0d1aac " data-slate-type="paragraph" data-slate-object="block" data-key="504"> 
<span data-slate-object="text" data-key="505"><span data-slate-leaf="true" data-offset-key="505:0" 
data-first-offset="true"><span data-slate-string="true">在 Snapseed 的调整里，我们每完成一个调整步骤，这个步骤就会被单独保存至</span></span></span><span 
data-slate-object="text" data-key="506"><span data-slate-leaf="true" data-offset-key="506:0" 
data-first-offset="true"><span class="se-9369e388" data-slate-type="bold" data-slate-object="mark"><span 
data-slate-string="true">操作记录</span></span></span></span><span data-slate-object="text" data-key="507"><span 
data-slate-leaf="true" data-offset-key="507:0" data-first-offset="true"><span data-slate-string="true">里，当我们在工具页面再次进行同样的调整时，并不是修改之前的调整，而是在这个基础上进行叠加。</span></span></span> 
</div> <div class="se-da76fa47 " data-slate-type="paragraph" data-slate-object="block" data-key="508"> 
<span data-slate-object="text" data-key="509"><span data-slate-leaf="true" data-offset-key="509:0" 
data-first-offset="true"><span data-slate-string="true">举例来说，我们可以在 Snapseed 对一张照片的亮度调整进行 “+100” 
随后再 “+100” 随后再 “+100” 这样的叠加，这样的特性使我们对一张照片有着非常大的调整自由度。而 VSCO 就不是这样，VSCO 对于每个调整项都相对更克制一些。</span></span></span> 
</div> <div class="se-e241a67e " data-slate-type="paragraph" data-slate-object="block" data-key="510"> 
<span data-slate-object="text" data-key="511"><span data-slate-leaf="true" data-offset-key="511:0" 
data-first-offset="true"><span data-slate-string="true">认识完 Snapseed 的整体界面，下面我会详细介绍工具里涉及到的 
17 个小工具。为了便于理解，我将这 17 个小工具分为</span></span></span><span data-slate-object="text" data-key="512"><span 
data-slate-leaf="true" data-offset-key="512:0" data-first-offset="true"><span class="se-b2769a82" 
data-slate-type="bold" data-slate-object="mark"><span data-slate-string="true">基础功能</span></span></span></span><span 
data-slate-object="text" data-key="513"><span data-slate-leaf="true" data-offset-key="513:0" 
data-first-offset="true"><span data-slate-string="true">、</span></span></span><span data-slate-object="text" 
data-key="514"><span data-slate-leaf="true" data-offset-key="514:0" data-first-offset="true"><span 
class="se-dc652895" data-slate-type="bold" data-slate-object="mark"><span data-slate-string="true">局部处理</span></span></span></span><span 
data-slate-object="text" data-key="515"><span data-slate-leaf="true" data-offset-key="515:0" 
data-first-offset="true"><span data-slate-string="true">和</span></span></span><span data-slate-object="text" 
data-key="516"><span data-slate-leaf="true" data-offset-key="516:0" data-first-offset="true"><span 
class="se-b5049f94" data-slate-type="bold" data-slate-object="mark"><span data-slate-string="true">特色功能</span></span></span></span><span 
data-slate-object="text" data-key="517"><span data-slate-leaf="true" data-offset-key="517:0" 
data-first-offset="true"><span data-slate-string="true">三部分，除了简单的功能介绍外，我还会附带一些个人的使用建议。</span></span></span> 
</div> <div class="se-b1e3f492 " data-slate-type="paragraph" data-slate-object="block" data-key="518"> 
<span data-slate-object="text" data-key="519"><span data-slate-leaf="true" data-offset-key="519:0" 
data-first-offset="true"><span class="se-82a13783" data-slate-type="bold" data-slate-object="mark"><span 
data-slate-string="true">　</span></span></span></span> </div> <h2 class="se-bfd8920b" data-slate-type="heading" 
data-slate-object="block" data-key="520"> <div class="se-79b7e966 se-60d0bfd7" data-slate-type="paragraph" 
data-slate-object="block" data-key="521"> <span data-slate-object="text" data-key="522"><span 
data-slate-leaf="true" data-offset-key="522:0" data-first-offset="true"><span data-slate-string="true">基础功能：初步的完善</span></span></span> 
</div></h2> <div class="se-4bea1e9f" data-slate-type="image" data-slate-object="block" data-key="523"> 
<img class="se-4e76becd" src="https://static001.geekbang.org/resource/image/bd/a6/bdfdd1f25a5a2a5df5ef01ceba2e20a6.png"> 
</div> <div class="se-7ad82dcd " data-slate-type="paragraph" data-slate-object="block" data-key="524"> 
<span data-slate-object="text" data-key="525"><span data-slate-leaf="true" data-offset-key="525:0" 
data-first-offset="true"><span data-slate-string="true">在基础功能部分，主要是调整图片、突出细节、曲线、白平衡等常见工具。其中，曲线是一个强大但不太容易理解的工具，带你认识曲线是本节课这部分的一个重点。</span></span></span> 
</div> <div class="se-17781b16 " data-slate-type="paragraph" data-slate-object="block" data-key="526"></div> 
<div class="se-a5bc0182 se-05e15305" data-slate-type="paragraph" data-slate-object="block" 
data-key="527"> <span data-slate-object="text" data-key="528"><span data-slate-leaf="true" 
data-offset-key="528:0" data-first-offset="true"><span class="se-0b59bf14" data-slate-type="bold" 
data-slate-object="mark"><span data-slate-string="true">调整图片</span></span></span></span> </div> 
<div class="se-7e1969ae" data-slate-type="image" data-slate-object="block" data-key="529"> 
<img class="se-317194e7" src="https://static001.geekbang.org/resource/image/c9/22/c943a88213d716afa14b1634be43ce22.png"> 
</div> <div class="se-17347608 " data-slate-type="paragraph" data-slate-object="block" data-key="530"> 
<span data-slate-object="text" data-key="531"><span data-slate-leaf="true" data-offset-key="531:0" 
data-first-offset="true"><span data-slate-string="true">在调整图片工具里，我们可以对亮度、对比度、饱和度、氛围、高光、阴影、暖色调进行调整。此外，Snapseed 
还提供了一个</span></span></span><span data-slate-object="text" data-key="532"><span data-slate-leaf="true" 
data-offset-key="532:0" data-first-offset="true"><span class="se-90522b71" data-slate-type="bold" 
data-slate-object="mark"><span data-slate-string="true">自动调整</span></span></span></span><span 
data-slate-object="text" data-key="533"><span data-slate-leaf="true" data-offset-key="533:0" 
data-first-offset="true"><span data-slate-string="true">功能，这在部分小工具里都可以看到，但</span></span></span><span 
data-slate-object="text" data-key="534"><span data-slate-leaf="true" data-offset-key="534:0" 
data-first-offset="true"><span class="se-03f7c2a0" data-slate-type="bold" data-slate-object="mark"><span 
data-slate-string="true">由于机器对于照片的判断与我们自己的想法大不相同，我个人不推荐使用。</span></span></span></span> </div> 
<div class="se-4679ee4c" data-slate-type="image" data-slate-object="block" data-key="535"> 
<img class="se-731d8562" src="https://static001.geekbang.org/resource/image/18/ba/182890962af2f0c827b5da15494098ba.png"> 
</div> <div class="se-9c17a255 " data-slate-type="paragraph" data-slate-object="block" data-key="536"> 
<span data-slate-object="text" data-key="537"><span data-slate-leaf="true" data-offset-key="537:0" 
data-first-offset="true"><span data-slate-string="true">其中，氛围是 Snapseed 里特有的一个调整项，实际上是一个综合调整，随着氛围的添加与减少，照片风格会随之变化，最大的区别体现在高光和阴影上。</span></span></span> 
</div> <div class="se-e01e6ddc" data-slate-type="image" data-slate-object="block" data-key="538"> 
<img class="se-8f628fc3" src="https://static001.geekbang.org/resource/image/68/aa/68a27f158601c4a081e607aa37f6a5aa.png"> 
</div> <div class="se-7976df21 " data-slate-type="paragraph" data-slate-object="block" data-key="539"> 
<span data-slate-object="text" data-key="540"><span data-slate-leaf="true" data-offset-key="540:0" 
data-first-offset="true"><span data-slate-string="true">除此之外，调整幅度更大也是 Snapseed 与 VSCO 的区别。在这里，高光与阴影均可以双向调整，而不是像 
VSCO 上只能进行高光减弱和阴影补偿。当我们需要去掉高光或阴影的细节时，就需要进行相应的反向调整。</span></span></span> </div> <div class="se-ab8f0673 
" data-slate-type="paragraph" data-slate-object="block" data-key="541"></div> <div class="se-9b29fbe4 
se-2a5a74c8" data-slate-type="paragraph" data-slate-object="block" data-key="542"> <span data-slate-object="text" 
data-key="543"><span data-slate-leaf="true" data-offset-key="543:0" data-first-offset="true"><span 
class="se-24636e7e" data-slate-type="bold" data-slate-object="mark"><span data-slate-string="true">突出细节</span></span></span></span> 
</div> <div class="se-0fbc4412" data-slate-type="image" data-slate-object="block" data-key="544"> 
<img class="se-7b269e1a" src="https://static001.geekbang.org/resource/image/a8/97/a858cb1505055328eba7b724dcc2b097.png"> 
</div> <div class="se-fb3bb2e0 " data-slate-type="paragraph" data-slate-object="block" data-key="545"> 
<span data-slate-object="text" data-key="546"><span data-slate-leaf="true" data-offset-key="546:0" 
data-first-offset="true"><span data-slate-string="true">突出细节里提供了结构和锐化调整，锐化与 VSCO 没有区别，结构则对应着 
VSCO 里的清晰度，但这里的结构是支持双向调整的。</span></span></span> </div> <div class="se-150e6b2f " data-slate-type="paragraph" 
data-slate-object="block" data-key="547"> <span data-slate-object="text" data-key="548"><span 
data-slate-leaf="true" data-offset-key="548:0" data-first-offset="true"><span data-slate-string="true">当照片需要表现得比较柔和或去掉一些细节时，我们可以通过结构减弱来实现。</span></span></span> 
</div> <div class="se-d204c96a " data-slate-type="paragraph" data-slate-object="block" data-key="549"></div> 
<div class="se-78992a47 se-0577b87c" data-slate-type="paragraph" data-slate-object="block" 
data-key="550"> <span data-slate-object="text" data-key="551"><span data-slate-leaf="true" 
data-offset-key="551:0" data-first-offset="true"><span class="se-463f33d7" data-slate-type="bold" 
data-slate-object="mark"><span data-slate-string="true">曲线</span></span></span></span> </div> 
<div class="se-4561deb3 " data-slate-type="paragraph" data-slate-object="block" data-key="552"> 
<span data-slate-object="text" data-key="553"><span data-slate-leaf="true" data-offset-key="553:0" 
data-first-offset="true"><span data-slate-string="true">Snapseed 里提供了曲线工具。通过曲线工具，我们可以对照片进行调色上的任意处理，除了亮度、对比度、高光、阴影等常规调整外，还可以对色彩进行最大化的自由调整。</span></span></span> 
</div> <div class="se-599a04f6" data-slate-type="image" data-slate-object="block" data-key="554"> 
<img class="se-8610418d" src="https://static001.geekbang.org/resource/image/14/6a/14622d25b93acb2754bceb0cfa34be6a.png"> 
</div> <div class="se-8d70dda4 " data-slate-type="paragraph" data-slate-object="block" data-key="555"> 
<span data-slate-object="text" data-key="556"><span data-slate-leaf="true" data-offset-key="556:0" 
data-first-offset="true"><span data-slate-string="true">为了便于理解，我制作了一张黑白渐变图来演示曲线对于我们画面的影响，希望这几张图可以帮助你明白曲线是怎么一回事。</span></span></span> 
</div> <div class="se-ffeec4c8" data-slate-type="image" data-slate-object="block" data-key="557"> 
<img class="se-cd693560" src="https://static001.geekbang.org/resource/image/1b/23/1b159c4ca84c6f263e17dfa8d4f7d523.png"> 
</div> <div class="se-7bbdb897 " data-slate-type="paragraph" data-slate-object="block" data-key="558"> 
<span data-slate-object="text" data-key="559"><span data-slate-leaf="true" data-offset-key="559:0" 
data-first-offset="true"><span data-slate-string="true">在 Snapseed 的曲线工具界面里，分为曲线选择、显示与隐藏、预设曲线三部分。在曲线选择里，我们可以选择当前调整的曲线是 
RGB 还是红色、绿色、蓝色、亮度等，这里的亮度是 Snapseed 里特有的一个调整曲线，其余四个则为常见的曲线。</span></span></span> </div> <div 
class="se-f1548a56 " data-slate-type="paragraph" data-slate-object="block" data-key="560"> 
<span data-slate-object="text" data-key="561"><span data-slate-leaf="true" data-offset-key="561:0" 
data-first-offset="true"><span data-slate-string="true">通过 RGB 曲线，我们可以实现亮度、对比度、高光、阴影等调整，实际上，这些调整就是从曲线里分离出来的小功能，我们使用起来会非常方便。</span></span></span> 
</div> <div class="se-d58a4b48 " data-slate-type="paragraph" data-slate-object="block" data-key="562"> 
<span data-slate-object="text" data-key="563"><span data-slate-leaf="true" data-offset-key="563:0" 
data-first-offset="true"><span data-slate-string="true">通过红色、绿色、蓝色曲线，我们可以实现对应的色彩调整，或是把他们搭配起来使用，调出任意色彩，这里的任意色彩是指：色值可以表达出来的颜色都能够调出。</span></span></span> 
</div> <div class="se-dfe096fd" data-slate-type="image" data-slate-object="block" data-key="564"> 
<img class="se-8d2c79eb" src="https://static001.geekbang.org/resource/image/73/fe/73dfb4c2cccc773c7b18fa737bb292fe.png"> 
</div> <div class="se-85652f41 " data-slate-type="paragraph" data-slate-object="block" data-key="565"> 
<span data-slate-object="text" data-key="566"><span data-slate-leaf="true" data-offset-key="566:0" 
data-first-offset="true"><span data-slate-string="true">在 Snapseed 里，我们点击曲线上的任意一处，可以添加点，如果你想去掉其中某个点，将其拖到曲线的坐标图外即可。</span></span></span> 
</div> <div class="se-bf08ed0c" data-slate-type="image" data-slate-object="block" data-key="567"> 
<img class="se-e7f190e1" src="https://static001.geekbang.org/resource/image/4a/ce/4ad3bf00fc410ac7194b0f4a275903ce.png"> 
</div> <div class="se-f71f7fe8 " data-slate-type="paragraph" data-slate-object="block" data-key="568"> 
<span data-slate-object="text" data-key="569"><span data-slate-leaf="true" data-offset-key="569:0" 
data-first-offset="true"><span data-slate-string="true">在曲线的这个坐标图里，横轴（从左到右）是以亮度来对应当前画面内容的，最左边代表着画面最暗的区域，最右边代表着画面最亮的区域。纵轴（从下到上）对应着当前曲线调整项的应用程度。</span></span></span> 
</div> <div class="se-ed792ea1 " data-slate-type="paragraph" data-slate-object="block" data-key="570"> 
<span data-slate-object="text" data-key="571"><span data-slate-leaf="true" data-offset-key="571:0" 
data-first-offset="true"><span data-slate-string="true">需要注意的是，这个亮度或应用程度并不是通过具体画面来分的，而是事先就预设好的，共有 
256 个分级 (0-255)，画面自己对号入座。比如说，如果我们导入的照片没有纯黑的部分，那么在最右边就没有对应的照片信息。</span></span></span> </div> 
<div class="se-275977fe " data-slate-type="paragraph" data-slate-object="block" data-key="572"> 
<span data-slate-object="text" data-key="573"><span data-slate-leaf="true" data-offset-key="573:0" 
data-first-offset="true"><span data-slate-string="true">在图片演示里，我展示了在 RGB 曲线里三个极端操作的情况：</span></span></span> 
</div> <div class="se-551b0c00" data-slate-type="list" data-slate-object="block" data-key="574"> 
<div class="se-c8ba7639" data-slate-type="list-line" data-slate-object="block" data-key="575"> 
<div class="se-d255f67b se-73a6ef3c" data-code-line-number="1"></div> <div class="se-ea94e985"> 
<span data-slate-object="text" data-key="576"><span data-slate-leaf="true" data-offset-key="576:0" 
data-first-offset="true"><span data-slate-string="true">将左下角的点移动至左上角，整条曲线都在顶部，代表着画面从最暗到最亮的部分都调整为最亮，这使得我们的演示图变为纯白色；</span></span></span> 
</div> </div> <div class="se-a30e2609" data-slate-type="list-line" data-slate-object="block" 
data-key="577"> <div class="se-2c26057a se-2e0589c7" data-code-line-number="2"></div> <div 
class="se-487925ba"> <span data-slate-object="text" data-key="578"><span data-slate-leaf="true" 
data-offset-key="578:0" data-first-offset="true"><span data-slate-string="true">将右上角的点移动至右下角，整条曲线都在底部，代表着画面从最暗到最亮的部分都调整为最暗，这使得我们的演示图变为纯黑色；</span></span></span> 
</div> </div> <div class="se-2692f556" data-slate-type="list-line" data-slate-object="block" 
data-key="579"> <div class="se-b186aecd se-b5e0bea5" data-code-line-number="3"></div> <div 
class="se-803a3b74"> <span data-slate-object="text" data-key="580"><span data-slate-leaf="true" 
data-offset-key="580:0" data-first-offset="true"><span data-slate-string="true">上述两种调整均进行，将画面最亮部分调到最暗，画面最暗部分调到最亮，由于是一条线在控制，最终演示图的渐变方向对换。</span></span></span> 
</div> </div> </div> <div class="se-092f56eb" data-slate-type="image" data-slate-object="block" 
data-key="581"> <img class="se-b6de0014" src="https://static001.geekbang.org/resource/image/0e/42/0e6f8520d8ee64bbf8345f29f7e84742.png"> 
</div> <div class="se-c0038a70 " data-slate-type="paragraph" data-slate-object="block" data-key="582"> 
<span data-slate-object="text" data-key="583"><span data-slate-leaf="true" data-offset-key="583:0" 
data-first-offset="true"><span data-slate-string="true">所以在实际运用时，我们下拉曲线会使照片整体变暗，上拉曲线会使照片整体提亮。</span></span></span> 
</div> <div class="se-9561d5af" data-slate-type="image" data-slate-object="block" data-key="584"> 
<img class="se-0ee4f08c" src="https://static001.geekbang.org/resource/image/5f/82/5f5306e82a0b389a19de23580ca30a82.png"> 
</div> <div class="se-3b78ab33 " data-slate-type="paragraph" data-slate-object="block" data-key="585"> 
<span data-slate-object="text" data-key="586"><span data-slate-leaf="true" data-offset-key="586:0" 
data-first-offset="true"><span data-slate-string="true">再例如这样的曲线，我们可以看到，左边操作是将暗部变暗、将亮度提亮，所以画面整体上暗的部分变得更暗，亮的部分变得更亮，于是整体观感是对比度提高。右边的操作则相反，使得画面整体观感变得柔和，也就是说对比度降低。</span></span></span> 
</div> <div class="se-b2b08dda" data-slate-type="image" data-slate-object="block" data-key="587"> 
<img class="se-25a31a7f" src="https://static001.geekbang.org/resource/image/f4/d7/f4bc5c379ca97156e2d4c6d42ef106d7.png"> 
</div> <div class="se-0998f2c0 " data-slate-type="paragraph" data-slate-object="block" data-key="588"> 
<span data-slate-object="text" data-key="589"><span data-slate-leaf="true" data-offset-key="589:0" 
data-first-offset="true"><span data-slate-string="true">我们有了前面的基础后，色彩部分就比较好理解了。首先我们要知道的是，红绿蓝这三个颜色就是我们常说的 
RGB（Red/Green/Blue），这是生物学角度的</span></span></span><span data-slate-object="text" data-key="590"><span 
data-slate-leaf="true" data-offset-key="590:0" data-first-offset="true"><span class="se-aa663657" 
data-slate-type="bold" data-slate-object="mark"><span data-slate-string="true">光的三原色</span></span></span></span><span 
data-slate-object="text" data-key="591"><span data-slate-leaf="true" data-offset-key="591:0" 
data-first-offset="true"><span data-slate-string="true">，我们可以用这三种光色混合搭配出来除黑色以外的任意颜色，这就是曲线里提供了这三条色彩曲线的原因。</span></span></span> 
</div> <div class="se-a5570aee" data-slate-type="image" data-slate-object="block" data-key="592"> 
<img class="se-3dceac36" src="https://static001.geekbang.org/resource/image/4e/21/4e8dad81568a92e701b764e9a8cff221.png"> 
</div> <div class="se-a4e2ff13 " data-slate-type="paragraph" data-slate-object="block" data-key="593"> 
<span data-slate-object="text" data-key="594"><span data-slate-leaf="true" data-offset-key="594:0" 
data-first-offset="true"><span data-slate-string="true">在调整色彩曲线时，实际上是对照片添加或减去某一种颜色。在图片的操作里，我演示了三种极端情况，都是在最暗处加满当前曲线的颜色，而在最亮处完全删去当前曲线的颜色。</span></span></span> 
</div> <div class="se-c0e888c1 " data-slate-type="paragraph" data-slate-object="block" data-key="595"> 
<span data-slate-object="text" data-key="596"><span data-slate-leaf="true" data-offset-key="596:0" 
data-first-offset="true"><span data-slate-string="true">通过图片我们可以看到，在保持其他颜色不变时，删去当前曲线的颜色会出现对应的补色，红色 
(Red) 的补色是青色 (Cyan)，绿色 (Green) 的补色是品红 (Magenta)，蓝色 (Blue) 的补色是黄色 (Yellow)，所以我们就又知道了一组</span></span></span><span 
data-slate-object="text" data-key="597"><span data-slate-leaf="true" data-offset-key="597:0" 
data-first-offset="true"><span class="se-f8734acf" data-slate-type="bold" data-slate-object="mark"><span 
data-slate-string="true">色彩三原色</span></span></span></span><span data-slate-object="text" data-key="598"><span 
data-slate-leaf="true" data-offset-key="598:0" data-first-offset="true"><span data-slate-string="true">——</span></span></span><span 
data-slate-object="text" data-key="599"><span data-slate-leaf="true" data-offset-key="599:0" 
data-first-offset="true"><span class="se-0385ee3f" data-slate-type="bold" data-slate-object="mark"><span 
data-slate-string="true">CMY</span></span></span></span><span data-slate-object="text" data-key="600"><span 
data-slate-leaf="true" data-offset-key="600:0" data-first-offset="true"><span data-slate-string="true">。</span></span></span> 
</div> <div class="se-41dda047 " data-slate-type="paragraph" data-slate-object="block" data-key="601"> 
<span data-slate-object="text" data-key="602"><span data-slate-leaf="true" data-offset-key="602:0" 
data-first-offset="true"><span data-slate-string="true">在自己本身能发光的屏幕上，我们看到的是 RGB，在自己本身不发光、只能靠反光的物品上（比如印刷品），我们看到的是 
CMY，还有 K（BlacK）。</span></span></span> </div> <div class="se-b2353224" data-slate-type="image" 
data-slate-object="block" data-key="603"> <img class="se-2203cbcc" src="https://static001.geekbang.org/resource/image/74/ae/7482bb6686181c6566c9c770885434ae.png"> 
</div> <div class="se-ec34cd3d " data-slate-type="paragraph" data-slate-object="block" data-key="604"> 
<span data-slate-object="text" data-key="605"><span data-slate-leaf="true" data-offset-key="605:0" 
data-first-offset="true"><span data-slate-string="true">当我们像图中那样操作时，基本可以混合出任意的颜色，或者是在颜色全加满时照片变为纯白，颜色全删去时照片变为纯黑。</span></span></span> 
</div> <div class="se-9caeb6a3" data-slate-type="image" data-slate-object="block" data-key="606"> 
<img class="se-4e106af5" src="https://static001.geekbang.org/resource/image/be/05/be704cbf384c2deedea58f5aef897005.png"> 
</div> <div class="se-13329dfb " data-slate-type="paragraph" data-slate-object="block" data-key="607"> 
<span data-slate-object="text" data-key="608"><span data-slate-leaf="true" data-offset-key="608:0" 
data-first-offset="true"><span data-slate-string="true">在 Snapseed 的预设曲线里，我们可以看到这些滤镜是如何通过曲线来搭建的，这对我们有着一定的参考作用。曲线有着非常大的自由度，这就意味着它很难控制，所以我们讲到这里，仅仅是走出了掌握曲线之路的第一步。</span></span></span> 
</div> <div class="se-a8b446ba " data-slate-type="paragraph" data-slate-object="block" data-key="609"></div> 
<div class="se-e82f12ea se-1d8c83d9" data-slate-type="paragraph" data-slate-object="block" 
data-key="610"> <span data-slate-object="text" data-key="611"><span data-slate-leaf="true" 
data-offset-key="611:0" data-first-offset="true"><span class="se-a2065c21" data-slate-type="bold" 
data-slate-object="mark"><span data-slate-string="true">白平衡</span></span></span></span> </div> 
<div class="se-b03554b6" data-slate-type="image" data-slate-object="block" data-key="612"> 
<img class="se-a9ba0fcf" src="https://static001.geekbang.org/resource/image/db/1d/db1f70f6cbc35a78888bb4c41b9ca61d.png"> 
</div> <div class="se-60ef4494 " data-slate-type="paragraph" data-slate-object="block" data-key="613"> 
<span data-slate-object="text" data-key="614"><span data-slate-leaf="true" data-offset-key="614:0" 
data-first-offset="true"><span data-slate-string="true">白平衡里提供色温和着色，与 VSCO 里的色温和色调相对应，也是冷暖和绿紫两个方向的调整。在底部的三个选项里，分别对应着自动调整、调整工具、取色调整。</span></span></span> 
</div> <div class="se-81d6d7ba " data-slate-type="paragraph" data-slate-object="block" data-key="615"></div> 
<div class="se-ab6e13d6 se-1c6ccf27" data-slate-type="paragraph" data-slate-object="block" 
data-key="616"> <span data-slate-object="text" data-key="617"><span data-slate-leaf="true" 
data-offset-key="617:0" data-first-offset="true"><span class="se-b88e6dc2" data-slate-type="bold" 
data-slate-object="mark"><span data-slate-string="true">剪裁、旋转、透视</span></span></span></span> 
</div> <div class="se-4ccf3198" data-slate-type="image" data-slate-object="block" data-key="618"> 
<img class="se-11e67369" src="https://static001.geekbang.org/resource/image/27/a6/278449c7e97d876deed1d54b9edf18a6.png"> 
</div> <div class="se-b0118f44 " data-slate-type="paragraph" data-slate-object="block" data-key="619"> 
<span data-slate-object="text" data-key="620"><span data-slate-leaf="true" data-offset-key="620:0" 
data-first-offset="true"><span data-slate-string="true">剪裁、旋转、透视这三个工具，Snapseed 里分为了三个小工具，但实际上它们属于一类调整。其中剪裁和旋转不必多说，透视工具比 
VSCO 的更加完善，着重说一下。</span></span></span> </div> <div class="se-add16685" data-slate-type="image" 
data-slate-object="block" data-key="621"> <img class="se-311786de" src="https://static001.geekbang.org/resource/image/7f/78/7f93cfbf627b585a9bdd14d7875a8178.png"> 
</div> <div class="se-aa70e03a " data-slate-type="paragraph" data-slate-object="block" data-key="622"> 
<span data-slate-object="text" data-key="623"><span data-slate-leaf="true" data-offset-key="623:0" 
data-first-offset="true"><span data-slate-string="true">在透视调整栏的底部，也有三个选项，分别对应调整方式、填充色和自动调整。“自动调整”你可以试一试，但由于参考线问题，经常出错。</span></span></span> 
</div> <div class="se-4ef443fe " data-slate-type="paragraph" data-slate-object="block" data-key="624"> 
<span data-slate-object="text" data-key="625"><span data-slate-leaf="true" data-offset-key="625:0" 
data-first-offset="true"><span data-slate-string="true">在正式调整前，建议先根据自己的图片情况调整填充色。在绝大部分情况下，建议选择黑色或白色，因为智能填色是有局限性的，情况一旦很复杂，就会像图片上那样变得不自然。</span></span></span> 
</div> <div class="se-1fe1c137" data-slate-type="image" data-slate-object="block" data-key="626"> 
<img class="se-60e11018" src="https://static001.geekbang.org/resource/image/09/8a/09973b7f9a40d9e1b3cb1015a87c848a.png"> 
</div> <div class="se-86d36fcf " data-slate-type="paragraph" data-slate-object="block" data-key="627"> 
<span data-slate-object="text" data-key="628"><span data-slate-leaf="true" data-offset-key="628:0" 
data-first-offset="true"><span data-slate-string="true">如果照片的边缘比较好处理，例如大海、草原、平面等，就可以尝试用用智能填色。</span></span></span> 
</div> <div class="se-4f96a038" data-slate-type="image" data-slate-object="block" data-key="629"> 
<img class="se-a85aa2cb" src="https://static001.geekbang.org/resource/image/1b/f5/1b6c68929b0f22fd5af1c7f3b8744af5.png"> 
</div> <div class="se-6e7e2e70 " data-slate-type="paragraph" data-slate-object="block" data-key="630"> 
<span data-slate-object="text" data-key="631"><span data-slate-leaf="true" data-offset-key="631:0" 
data-first-offset="true"><span data-slate-string="true">在调整方式里，Snapseed 提供倾斜、旋转、缩放和自由四种方式，调整的用途在上节课里已经讲过，这里说一下缩放的用途。</span></span></span> 
</div> <div class="se-fd397303 " data-slate-type="paragraph" data-slate-object="block" data-key="632"> 
<span data-slate-object="text" data-key="633"><span data-slate-leaf="true" data-offset-key="633:0" 
data-first-offset="true"><span data-slate-string="true">在上图的例子中，我们对建筑进行了大幅度的纠正，这导致建筑的高度被压缩。这时候，我们就可以利用缩放来改变图片的高度比例，以还原到接近真实情况。</span></span></span> 
</div> <div class="se-996492c9 " data-slate-type="paragraph" data-slate-object="block" data-key="634"> 
<span data-slate-object="text" data-key="635"><span data-slate-leaf="true" data-offset-key="635:0" 
data-first-offset="true"><span class="se-03013a22" data-slate-type="bold" data-slate-object="mark"><span 
data-slate-string="true">Snapseed 的透视工具比 VSCO 更加完善，但调整的算法并没有 SKRWT 好，如果你有大幅度调整的需求，使用 SKRWT 
来处理是更好的选择。</span></span></span></span> </div> <div class="se-ab51f64c " data-slate-type="paragraph" 
data-slate-object="block" data-key="636"></div> <div class="se-d500b57a se-c96290b8" data-slate-type="paragraph" 
data-slate-object="block" data-key="637"> <span data-slate-object="text" data-key="638"><span 
data-slate-leaf="true" data-offset-key="638:0" data-first-offset="true"><span class="se-e25c37b6" 
data-slate-type="bold" data-slate-object="mark"><span data-slate-string="true">色调对比度</span></span></span></span> 
</div> <div class="se-f0375d76" data-slate-type="image" data-slate-object="block" data-key="639"> 
<img class="se-0cfe49e9" src="https://static001.geekbang.org/resource/image/5d/f3/5d7eada2314153c74cd4e985bf3324f3.png"> 
</div> <div class="se-5a82b300 " data-slate-type="paragraph" data-slate-object="block" data-key="640"> 
<span data-slate-object="text" data-key="641"><span data-slate-leaf="true" data-offset-key="641:0" 
data-first-offset="true"><span data-slate-string="true">色调对比度，从字面意思理解就可以——调整各个位置色调的对比度。它将画面分为高色调、中色调、低色调三个部分，可以分别调整对应的对比度。</span></span></span> 
</div> <div class="se-a30427e6 " data-slate-type="paragraph" data-slate-object="block" data-key="642"> 
<span data-slate-object="text" data-key="643"><span data-slate-leaf="true" data-offset-key="643:0" 
data-first-offset="true"><span data-slate-string="true">而保护高光和保护阴影在调整过色调对比度后可以起作用，实际上就是一种高光减弱和阴影补偿，以保护高光和阴影的细节。</span></span></span> 
</div> <div class="se-3818b27c " data-slate-type="paragraph" data-slate-object="block" data-key="644"></div> 
<div class="se-888f9f60 se-5c53efc1" data-slate-type="paragraph" data-slate-object="block" 
data-key="645"> <span data-slate-object="text" data-key="646"><span data-slate-leaf="true" 
data-offset-key="646:0" data-first-offset="true"><span class="se-30913e5c" data-slate-type="bold" 
data-slate-object="mark"><span data-slate-string="true">晕影</span></span></span></span> </div> 
<div class="se-dd7c5735" data-slate-type="image" data-slate-object="block" data-key="647"> 
<img class="se-ac05134b" src="https://static001.geekbang.org/resource/image/fe/1d/fe4d6edc4047badcc72b028ef8efce1d.png"> 
</div> <div class="se-d2bd3e20 " data-slate-type="paragraph" data-slate-object="block" data-key="648"> 
<span data-slate-object="text" data-key="649"><span data-slate-leaf="true" data-offset-key="649:0" 
data-first-offset="true"><span data-slate-string="true">晕影，即暗角调整。在这个工具里，我们可以通过双手捏合缩放来调整圆圈大小，以控制调整范围。在这个圆圈的内外，我们可以分别调整亮度，也就是外部亮度和内部亮度。</span></span></span> 
</div> <div class="se-4a5d27a9" data-slate-type="image" data-slate-object="block" data-key="650"> 
<img class="se-18c781fa" src="https://static001.geekbang.org/resource/image/4b/9a/4b74ae793ad88d7823288bff07a9189a.png"> 
</div> <div class="se-5369f0a7 " data-slate-type="paragraph" data-slate-object="block" data-key="651"> 
<span data-slate-object="text" data-key="652"><span data-slate-leaf="true" data-offset-key="652:0" 
data-first-offset="true"><span data-slate-string="true">在实际使用时，由于 Snapseed 的暗角调整范围比较大，比较容易调出不自然的状态，一定注意不要调整过度。</span></span></span> 
</div> <div class="se-b0786ea8 " data-slate-type="paragraph" data-slate-object="block" data-key="653"> 
<span data-slate-object="text" data-key="654"><span data-slate-leaf="true" data-offset-key="654:0" 
data-first-offset="true"><span class="se-adeff3da" data-slate-type="bold" data-slate-object="mark"><span 
data-slate-string="true">　</span></span></span></span> </div> <h2 class="se-bcacfda0" data-slate-type="heading" 
data-slate-object="block" data-key="655"> <div class="se-5c3ab415 se-913e620f" data-slate-type="paragraph" 
data-slate-object="block" data-key="656"> <span data-slate-object="text" data-key="657"><span 
data-slate-leaf="true" data-offset-key="657:0" data-first-offset="true"><span data-slate-string="true">局部处理：精细化处理</span></span></span> 
</div></h2> <div class="se-0fe10092" data-slate-type="image" data-slate-object="block" data-key="658"> 
<img class="se-d39deced" src="https://static001.geekbang.org/resource/image/05/9d/052d5bf96c4a26c37d578856cefbda9d.png"> 
</div> <div class="se-1281a3a6 " data-slate-type="paragraph" data-slate-object="block" data-key="659"> 
<span data-slate-object="text" data-key="660"><span data-slate-leaf="true" data-offset-key="660:0" 
data-first-offset="true"><span data-slate-string="true">Snapseed 的局部处理，是其一大特色，也是我经常用于替代 VSCO 
进行细节修复的原因之一。这节课将工具里的局部、画笔以及修复分到这里来讲解，其中，画笔还包括了在操作记录里的画笔，那是一支神奇的笔。</span></span></span> </div> 
<div class="se-12b9112d " data-slate-type="paragraph" data-slate-object="block" data-key="661"></div> 
<div class="se-7caad2b6 se-f4279c18" data-slate-type="paragraph" data-slate-object="block" 
data-key="662"> <span data-slate-object="text" data-key="663"><span data-slate-leaf="true" 
data-offset-key="663:0" data-first-offset="true"><span class="se-76fb00fb" data-slate-type="bold" 
data-slate-object="mark"><span data-slate-string="true">局部</span></span></span></span> </div> 
<div class="se-40b25f81" data-slate-type="image" data-slate-object="block" data-key="664"> 
<img class="se-ae0224f4" src="https://static001.geekbang.org/resource/image/eb/26/ebae57b169ba9bc88e918e24f113a726.png"> 
</div> <div class="se-53ea8069 " data-slate-type="paragraph" data-slate-object="block" data-key="665"> 
<span data-slate-object="text" data-key="666"><span data-slate-leaf="true" data-offset-key="666:0" 
data-first-offset="true"><span data-slate-string="true">在局部处理里，你可以添加一个个小点来选择自己处理的地方，双指捏合缩放可以调整当前小点的应用范围。为了画面更自然，这个小点还有色彩识别的能力，只会调整应用范围内画面色彩接近的部分。</span></span></span> 
</div> <div class="se-0febf1bd" data-slate-type="image" data-slate-object="block" data-key="667"> 
<img class="se-c8ba071b" src="https://static001.geekbang.org/resource/image/4f/67/4f19d040946214ecef8e2745355b2967.png"> 
</div> <div class="se-b899a6f5 " data-slate-type="paragraph" data-slate-object="block" data-key="668"> 
<span data-slate-object="text" data-key="669"><span data-slate-leaf="true" data-offset-key="669:0" 
data-first-offset="true"><span data-slate-string="true">这些小点提供了亮度、对比度、饱和度、结构四个调整项，我们可以通过上下滑动来进行切换，左右滑动进行调整。单击某个小点，还可以进行剪切、拷贝、删除或重置。</span></span></span> 
</div> <div class="se-c66af837" data-slate-type="image" data-slate-object="block" data-key="670"> 
<img class="se-99b188bb" src="https://static001.geekbang.org/resource/image/1d/c8/1d9c1db47c57da73795fff924b7df0c8.png"> 
</div> <div class="se-27e32f95 " data-slate-type="paragraph" data-slate-object="block" data-key="671"> 
<span data-slate-object="text" data-key="672"><span data-slate-leaf="true" data-offset-key="672:0" 
data-first-offset="true"><span data-slate-string="true">在这张示例图中，我希望将画面前景的建筑处理为完全纯黑的剪影。在实际操作时，利用局部的小点调整建筑的亮度和结构，分别降低亮度和弱化细节，然后在建筑的各个地方复制粘贴小点，最终达到我希望的效果。</span></span></span> 
</div> <div class="se-c62e38f3" data-slate-type="image" data-slate-object="block" data-key="673"> 
<img class="se-1a03b1d6" src="https://static001.geekbang.org/resource/image/a9/49/a9cdff445b9e1dc2c87ebf2316434149.png"> 
</div> <div class="se-edcd84cb " data-slate-type="paragraph" data-slate-object="block" data-key="674"> 
<span data-slate-object="text" data-key="675"><span data-slate-leaf="true" data-offset-key="675:0" 
data-first-offset="true"><span data-slate-string="true">在局部处理时，我们还可以放大图片，以进行更为细致的处理。比如，通过反复的处理，把这样一张照片变为一张极简风格的照片。</span></span></span> 
</div> <div class="se-a26fba5a " data-slate-type="paragraph" data-slate-object="block" data-key="676"></div> 
<div class="se-2cb2c209 se-2bac24cd" data-slate-type="paragraph" data-slate-object="block" 
data-key="677"> <span data-slate-object="text" data-key="678"><span data-slate-leaf="true" 
data-offset-key="678:0" data-first-offset="true"><span class="se-88fb2490" data-slate-type="bold" 
data-slate-object="mark"><span data-slate-string="true">画笔</span></span></span></span> </div> 
<div class="se-28d76d44 " data-slate-type="paragraph" data-slate-object="block" data-key="679"> 
<span data-slate-object="text" data-key="680"><span data-slate-leaf="true" data-offset-key="680:0" 
data-first-offset="true"><span data-slate-string="true">Snapseed 里有两支画笔，分别是“工具内的画笔”和“操作记录里的画笔”。这两支画笔的操作方法都一样，但从效果上来说，在操作记录里的那支画笔有着更大的创造性。</span></span></span> 
</div> <div class="se-9b156bc3" data-slate-type="image" data-slate-object="block" data-key="681"> 
<img class="se-01aab4e1" src="https://static001.geekbang.org/resource/image/85/69/852411d3c3a125c78b1ebfeedc337369.png"> 
</div> <div class="se-d687857c " data-slate-type="paragraph" data-slate-object="block" data-key="682"> 
<span data-slate-object="text" data-key="683"><span data-slate-leaf="true" data-offset-key="683:0" 
data-first-offset="true"><span data-slate-string="true">我们先来看看工具内的画笔。</span></span></span> 
</div> <div class="se-48d42d9d " data-slate-type="paragraph" data-slate-object="block" data-key="684"> 
<span data-slate-object="text" data-key="685"><span data-slate-leaf="true" data-offset-key="685:0" 
data-first-offset="true"><span data-slate-string="true">这里提供加光减光、曝光、色温、饱和度四个调整项，我们可以在照片上进行涂抹以选择调整项应用的范围，点击右下角的小眼睛可以显示或隐藏涂抹的范围。</span></span></span> 
</div> <div class="se-50022f3b" data-slate-type="image" data-slate-object="block" data-key="686"> 
<img class="se-b2730bd3" src="https://static001.geekbang.org/resource/image/1e/24/1e42426f595b9f89721282752dd7d224.png"> 
</div> <div class="se-62ae0278 " data-slate-type="paragraph" data-slate-object="block" data-key="687"> 
<span data-slate-object="text" data-key="688"><span data-slate-leaf="true" data-offset-key="688:0" 
data-first-offset="true"><span data-slate-string="true">在例图中，我对画面顶部的天空部分选择减光 -5 并涂抹，对画面底部的花丛部分选择饱和度 
+10 并涂抹，希望通过这样的操作来使得天空部分亮度降低，前景的花丛饱和度提高。</span></span></span> </div> <div class="se-9d641db9" 
data-slate-type="image" data-slate-object="block" data-key="689"> <img class="se-fb8395fe" 
src="https://static001.geekbang.org/resource/image/72/db/7252d18167e6089550c61bd42b50a1db.png"> 
</div> <div class="se-71023ff8 " data-slate-type="paragraph" data-slate-object="block" data-key="690"> 
<span data-slate-object="text" data-key="691"><span data-slate-leaf="true" data-offset-key="691:0" 
data-first-offset="true"><span data-slate-string="true">最后我们可以看一下处理前后的效果对比：</span></span></span> 
</div> <div class="se-bda103e2" data-slate-type="image" data-slate-object="block" data-key="692"> 
<img class="se-aeea41ab" src="https://static001.geekbang.org/resource/image/ac/1a/ac5e20c4eef03b5707a2fdd3386c771a.png"> 
</div> <div class="se-4e6562aa " data-slate-type="paragraph" data-slate-object="block" data-key="693"> 
<span data-slate-object="text" data-key="694"><span data-slate-leaf="true" data-offset-key="694:0" 
data-first-offset="true"><span data-slate-string="true">除了工具里的画笔，我们还可以在操作记录里启用画笔，通过这样的方式让每个调整项都变成局部调整。比如，我调整了上面这张照片的结构，但最后通过画笔，我让结构的增强只应用在了花丛部分。</span></span></span> 
</div> <div class="se-63e4640f" data-slate-type="image" data-slate-object="block" data-key="695"> 
<img class="se-6cbcf777" src="https://static001.geekbang.org/resource/image/3c/16/3cb7e3ca3c3e39dfe8adc2dca1355316.png"> 
</div> <div class="se-b4104cb2 " data-slate-type="paragraph" data-slate-object="block" data-key="696"> 
<span data-slate-object="text" data-key="697"><span data-slate-leaf="true" data-offset-key="697:0" 
data-first-offset="true"><span data-slate-string="true">这是黑白滤镜再通过画笔处理后的效果，这是一个糟糕的、但对比明显的效果，主要是为了方便你理解画笔的功能。</span></span></span> 
</div> <div class="se-f4adf885 " data-slate-type="paragraph" data-slate-object="block" data-key="698"></div> 
<div class="se-2e607dd7 se-fef6192e" data-slate-type="paragraph" data-slate-object="block" 
data-key="699"> <span data-slate-object="text" data-key="700"><span data-slate-leaf="true" 
data-offset-key="700:0" data-first-offset="true"><span class="se-a84750d1" data-slate-type="bold" 
data-slate-object="mark"><span data-slate-string="true">修复</span></span></span></span> </div> 
<div class="se-17a2ff8c" data-slate-type="image" data-slate-object="block" data-key="701"> 
<img class="se-e790d226" src="https://static001.geekbang.org/resource/image/3a/85/3aae1a8a32eae731073dd17e0f85bc85.png"> 
</div> <div class="se-af7d3ede " data-slate-type="paragraph" data-slate-object="block" data-key="702"> 
<span data-slate-object="text" data-key="703"><span data-slate-leaf="true" data-offset-key="703:0" 
data-first-offset="true"><span data-slate-string="true">修复工具可以帮助我们去掉画面中一些不需要的物体。由于这是一个智能修复工具，原理是利用修复区域周围的内容来填补修复区域，所以对于相对复杂的场景，修复效果并不理想，主要还是用于污点的处理。</span></span></span> 
</div> <div class="se-ca86d7ea" data-slate-type="image" data-slate-object="block" data-key="704"> 
<img class="se-babaf5cd" src="https://static001.geekbang.org/resource/image/4b/cc/4bdb6a26ef3024c0b7484bd7af96aecc.png"> 
</div> <div class="se-a96d618e " data-slate-type="paragraph" data-slate-object="block" data-key="705"> 
<span data-slate-object="text" data-key="706"><span data-slate-leaf="true" data-offset-key="706:0" 
data-first-offset="true"><span class="se-00ea5047" data-slate-type="bold" data-slate-object="mark"><span 
data-slate-string="true">在实际处理时，建议放大照片来进行精细的操作，这样处理后，即便是有小瑕疵，回到正常照片大小时也不易被发现。</span></span></span></span> 
</div> <div class="se-e25d6bdf " data-slate-type="paragraph" data-slate-object="block" data-key="707"> 
<span data-slate-object="text" data-key="708"><span data-slate-leaf="true" data-offset-key="708:0" 
data-first-offset="true"><span class="se-8eec2e5d" data-slate-type="bold" data-slate-object="mark"><span 
data-slate-string="true">　</span></span></span></span> </div> <h2 class="se-6471865c" data-slate-type="heading" 
data-slate-object="block" data-key="709"> <div class="se-722821fb se-a459dd68" data-slate-type="paragraph" 
data-slate-object="block" data-key="710"> <span data-slate-object="text" data-key="711"><span 
data-slate-leaf="true" data-offset-key="711:0" data-first-offset="true"><span data-slate-string="true">特色功能：创造性工作</span></span></span> 
</div></h2> <div class="se-bac92fc8" data-slate-type="image" data-slate-object="block" data-key="712"> 
<img class="se-9a618bd7" src="https://static001.geekbang.org/resource/image/9e/d9/9e422dbd0a0e09b01de123d7826fa0d9.png"> 
</div> <div class="se-908188bf " data-slate-type="paragraph" data-slate-object="block" data-key="713"> 
<span data-slate-object="text" data-key="714"><span data-slate-leaf="true" data-offset-key="714:0" 
data-first-offset="true"><span data-slate-string="true">特色功能包括展开、镜头模糊、双重曝光、文字和相框这样一些相对少见的工具，但这些工具有的非常实用，有的可以帮助我们做一些创造性的工作。</span></span></span> 
</div> <div class="se-72c83231 " data-slate-type="paragraph" data-slate-object="block" data-key="715"></div> 
<div class="se-9267a077 se-2c779d57" data-slate-type="paragraph" data-slate-object="block" 
data-key="716"> <span data-slate-object="text" data-key="717"><span data-slate-leaf="true" 
data-offset-key="717:0" data-first-offset="true"><span class="se-03d48afd" data-slate-type="bold" 
data-slate-object="mark"><span data-slate-string="true">展开</span></span></span></span> </div> 
<div class="se-1d2b5e4f" data-slate-type="image" data-slate-object="block" data-key="718"> 
<img class="se-9b13eb32" src="https://static001.geekbang.org/resource/image/f0/24/f075cc1d8ce7ba30208c0fed44558924.png"> 
</div> <div class="se-1f39c467 " data-slate-type="paragraph" data-slate-object="block" data-key="719"> 
<span data-slate-object="text" data-key="720"><span data-slate-leaf="true" data-offset-key="720:0" 
data-first-offset="true"><span data-slate-string="true">利用展开工具，我们可以将照片四周边缘扩大，以重新调整构图。与透视调整时一样，展开工具同样提供了智能填色、白色、黑色三个选项。</span></span></span> 
</div> <div class="se-6aa02498" data-slate-type="image" data-slate-object="block" data-key="721"> 
<img class="se-c7ba100d" src="https://static001.geekbang.org/resource/image/e3/e4/e3d4714c57c21d654d05e68db8a46ee4.jpg"> 
</div> <div class="se-106d52ca " data-slate-type="paragraph" data-slate-object="block" data-key="722"> 
<span data-slate-object="text" data-key="723"><span data-slate-leaf="true" data-offset-key="723:0" 
data-first-offset="true"><span data-slate-string="true">局部处理中的那张例图，通过展开工具处理后得到这样的效果。</span></span></span> 
</div> <div class="se-7dfe1bf1 " data-slate-type="paragraph" data-slate-object="block" data-key="724"></div> 
<div class="se-55c39e70 se-d98dd47a" data-slate-type="paragraph" data-slate-object="block" 
data-key="725"> <span data-slate-object="text" data-key="726"><span data-slate-leaf="true" 
data-offset-key="726:0" data-first-offset="true"><span class="se-015aba84" data-slate-type="bold" 
data-slate-object="mark"><span data-slate-string="true">镜头模糊</span></span></span></span> </div> 
<div class="se-9803a4f7" data-slate-type="image" data-slate-object="block" data-key="727"> 
<img class="se-dfbc7f8c" src="https://static001.geekbang.org/resource/image/7c/a0/7c8efffd98649c0bf24bfc863b3c9fa0.png"> 
</div> <div class="se-74f1a38b " data-slate-type="paragraph" data-slate-object="block" data-key="728"> 
<span data-slate-object="text" data-key="729"><span data-slate-leaf="true" data-offset-key="729:0" 
data-first-offset="true"><span data-slate-string="true">在镜头模糊工具里，我们可以切换模糊范围的呈现方式（圆形或矩形），调整模糊强度、过渡长度以及晕影强度。利用这个工具，我们可以模拟大光圈的虚化效果，但实际上这很难模拟得自然。所以我的用法是：</span></span></span><span 
data-slate-object="text" data-key="730"><span data-slate-leaf="true" data-offset-key="730:0" 
data-first-offset="true"><span class="se-a7ddc223" data-slate-type="bold" data-slate-object="mark"><span 
data-slate-string="true">简单景深关系的模拟、解决照片的噪点。</span></span></span></span> </div> <div class="se-4fe66cbe" 
data-slate-type="image" data-slate-object="block" data-key="731"> <img class="se-4671d9d5" 
src="https://static001.geekbang.org/resource/image/df/10/df29fe94e6381d34b7c8bcf435002110.png"> 
</div> <div class="se-c60b30c5 " data-slate-type="paragraph" data-slate-object="block" data-key="732"> 
<span data-slate-object="text" data-key="733"><span data-slate-leaf="true" data-offset-key="733:0" 
data-first-offset="true"><span data-slate-string="true">比如图中这个场景，景深关系相对简单，我们可以通过矩形来模拟一个前后关系，让倒影部分虚化。</span></span></span> 
</div> <div class="se-cde69567" data-slate-type="image" data-slate-object="block" data-key="734"> 
<img class="se-a252e408" src="https://static001.geekbang.org/resource/image/bc/6e/bcc145c4e88ea676ccc14f6fd9e9fa6e.png"> 
</div> <div class="se-51c7ab62 " data-slate-type="paragraph" data-slate-object="block" data-key="735"> 
<span data-slate-object="text" data-key="736"><span data-slate-leaf="true" data-offset-key="736:0" 
data-first-offset="true"><span data-slate-string="true">最终调整出来的对比效果如图，整体还是比较自然。</span></span></span><span 
data-slate-object="text" data-key="737"><span data-slate-leaf="true" data-offset-key="737:0" 
data-first-offset="true"><span class="se-8a473eed" data-slate-type="bold" data-slate-object="mark"><span 
data-slate-string="true">但是，这个效果是不符合物理规律的，在物理上是不可能实现的，所以咱们尽量不要随便用它来模拟大光圈效果，保不齐一个不小心就弄错了。</span></span></span></span> 
</div> <div class="se-fc464a8a" data-slate-type="image" data-slate-object="block" data-key="738"> 
<img class="se-72855456" src="https://static001.geekbang.org/resource/image/b3/44/b35f4afe35ebf8411cd4aad6f7cdf144.png"> 
</div> <div class="se-056fca86 " data-slate-type="paragraph" data-slate-object="block" data-key="739"> 
<span data-slate-object="text" data-key="740"><span data-slate-leaf="true" data-offset-key="740:0" 
data-first-offset="true"><span data-slate-string="true">在一些光线较弱的照片里，画面边缘往往存在一些噪点问题，如果恰好这些部分的信息不太重要，那么我们就可以使用镜头模糊来解决一下噪点问题。</span></span></span> 
</div> <div class="se-66413172 " data-slate-type="paragraph" data-slate-object="block" data-key="741"> 
<span data-slate-object="text" data-key="742"><span data-slate-leaf="true" data-offset-key="742:0" 
data-first-offset="true"><span data-slate-string="true">看例图，天空部分有一些相对明显的噪点，我通过镜头模糊工具，使得顶部模糊，最终在不影响画面内容的情况下抹掉了噪点。（第三张为原图）</span></span></span> 
</div> <div class="se-8d5af2e1 " data-slate-type="paragraph" data-slate-object="block" data-key="743"></div> 
<div class="se-aaeca67a se-a71861bf" data-slate-type="paragraph" data-slate-object="block" 
data-key="744"> <span data-slate-object="text" data-key="745"><span data-slate-leaf="true" 
data-offset-key="745:0" data-first-offset="true"><span class="se-0c1abf50" data-slate-type="bold" 
data-slate-object="mark"><span data-slate-string="true">双重曝光</span></span></span></span> </div> 
<div class="se-62d1499d" data-slate-type="image" data-slate-object="block" data-key="746"> 
<img class="se-870d06d1" src="https://static001.geekbang.org/resource/image/8b/bd/8b839e90225ce7c5c97c3612baa772bd.png"> 
</div> <div class="se-a8e01943 " data-slate-type="paragraph" data-slate-object="block" data-key="747"> 
<span data-slate-object="text" data-key="748"><span data-slate-leaf="true" data-offset-key="748:0" 
data-first-offset="true"><span data-slate-string="true">利用双重曝光功能，我们可以制作出一些极具创造性的照片。在 Snapseed 
的双重曝光工具里，底部三个选项分别为添加新照片、混合模式以及叠加照片的不透明度。</span></span></span> </div> <div class="se-015bc7a6 
" data-slate-type="paragraph" data-slate-object="block" data-key="749"> <span data-slate-object="text" 
data-key="750"><span data-slate-leaf="true" data-offset-key="750:0" data-first-offset="true"><span 
data-slate-string="true">双重曝光的表现方式有很多种，同一张照片叠加、同一风格照片叠加或者不同风格照片叠加都可以。</span></span></span> 
</div> <div class="se-c71fd0ca " data-slate-type="paragraph" data-slate-object="block" data-key="751"> 
<span data-slate-object="text" data-key="752"><span data-slate-leaf="true" data-offset-key="752:0" 
data-first-offset="true"><span data-slate-string="true">我们首先演示的是同一张照片叠加。新增照片后，混合模式保持默认，双手捏合缩放照片来调整大小和位置，然后调整不透明度。</span></span></span> 
</div> <div class="se-b78a2e45" data-slate-type="image" data-slate-object="block" data-key="753"> 
<img class="se-00506803" src="https://static001.geekbang.org/resource/image/da/f7/dae90de35e4e0515c613522bcec349f7.png"> 
</div> <div class="se-c1c41e09 " data-slate-type="paragraph" data-slate-object="block" data-key="754"> 
<span data-slate-object="text" data-key="755"><span data-slate-leaf="true" data-offset-key="755:0" 
data-first-offset="true"><span data-slate-string="true">随后我们还可以在操作记录里利用画笔工具进一步调整双重曝光的混合范围。这张图片我只是希望对中间部分的建筑做一些混合。最终完成的效果图如下：</span></span></span> 
</div> <div class="se-1e8d4815" data-slate-type="image" data-slate-object="block" data-key="756"> 
<img class="se-f2d40d80" src="https://static001.geekbang.org/resource/image/9d/07/9dc515442a55e49888823cd750399607.jpg"> 
</div> <div class="se-9b4ece55 " data-slate-type="paragraph" data-slate-object="block" data-key="757"> 
<span data-slate-object="text" data-key="758"><span data-slate-leaf="true" data-offset-key="758:0" 
data-first-offset="true"><span data-slate-string="true">风格接近或情绪接近的照片也可以用于双重曝光制作，我的建议是要色调一致，例如我选择的两张同场景的黑白照片。同样，选择合适的混合模式以及不透明度后，再利用画笔来进行调整。最终完成的效果图如下：</span></span></span> 
</div> <div class="se-dffe4320" data-slate-type="image" data-slate-object="block" data-key="759"> 
<img class="se-41a6a291" src="https://static001.geekbang.org/resource/image/ca/12/ca8f508b400af60ba90a52bfce0a7812.png"> 
</div> <div class="se-e33129ba" data-slate-type="image" data-slate-object="block" data-key="760"> 
<img class="se-566d35c0" src="https://static001.geekbang.org/resource/image/08/aa/08498c961c80d4bac6290f3c94a072aa.jpg"> 
</div> <div class="se-535317f3 " data-slate-type="paragraph" data-slate-object="block" data-key="761"> 
<span data-slate-object="text" data-key="762"><span data-slate-leaf="true" data-offset-key="762:0" 
data-first-offset="true"><span data-slate-string="true">在网上搜“双重曝光”时，我们可以看到大量人像与场景混合的照片。这一类照片的重点是：人像照片需要足够干净，就像我下面给出的例图这样。</span></span></span> 
</div> <div class="se-6ed0a0f3 " data-slate-type="paragraph" data-slate-object="block" data-key="763"> 
<span data-slate-object="text" data-key="764"><span data-slate-leaf="true" data-offset-key="764:0" 
data-first-offset="true"><span data-slate-string="true">在选择混合模式时，需要根据实际照片的情况来选择。这张图我选择的是调亮，这样子画面亮部（背景和面部）不会混合，而暗部（头发部分）则混合了照片。</span></span></span> 
</div> <div class="se-4ac870fc" data-slate-type="image" data-slate-object="block" data-key="765"> 
<img class="se-4e48146f" src="https://static001.geekbang.org/resource/image/47/07/479a50394087e43f5134e3c641e4ea07.png"> 
</div> <div class="se-57880f39 " data-slate-type="paragraph" data-slate-object="block" data-key="766"></div> 
<div class="se-8dd8d462 se-9eabb217" data-slate-type="paragraph" data-slate-object="block" 
data-key="767"> <span data-slate-object="text" data-key="768"><span data-slate-leaf="true" 
data-offset-key="768:0" data-first-offset="true"><span class="se-018114cd" data-slate-type="bold" 
data-slate-object="mark"><span data-slate-string="true">文字</span></span></span></span> </div> 
<div class="se-609dd008" data-slate-type="image" data-slate-object="block" data-key="769"> 
<img class="se-d516ffb0" src="https://static001.geekbang.org/resource/image/66/b6/66bf46690a0bda0a24fda241ad70a9b6.png"> 
</div> <div class="se-26d70113 " data-slate-type="paragraph" data-slate-object="block" data-key="770"> 
<span data-slate-object="text" data-key="771"><span data-slate-leaf="true" data-offset-key="771:0" 
data-first-offset="true"><span data-slate-string="true">文字工具的功能其实比较简单，常规的是文字颜色、字体、不透明度调整，此外还有一个相对特殊的倒置功能，但重点是我们可以配合画笔来做一些有趣的事情。</span></span></span> 
</div> <div class="se-f00f92dd" data-slate-type="image" data-slate-object="block" data-key="772"> 
<img class="se-7ae37a6c" src="https://static001.geekbang.org/resource/image/b7/d5/b71497173febf6b3b938b3ed24e0c9d5.png"> 
</div> <div class="se-b731d122 " data-slate-type="paragraph" data-slate-object="block" data-key="773"> 
<span data-slate-object="text" data-key="774"><span data-slate-leaf="true" data-offset-key="774:0" 
data-first-offset="true"><span data-slate-string="true">例如我输入空白文字，再选择倒置，使得整张画面都被覆盖。此时打开画笔工具，我们就可以在图片上画出自己想画的任意内容了。</span></span></span> 
</div> <div class="se-811fe105" data-slate-type="image" data-slate-object="block" data-key="775"> 
<img class="se-0c525c1f" src="https://static001.geekbang.org/resource/image/2a/0f/2a8a8c7c69b73e31dc0fb25580fbdc0f.png"> 
</div> <div class="se-59c272cc " data-slate-type="paragraph" data-slate-object="block" data-key="776"> 
<span data-slate-object="text" data-key="777"><span data-slate-leaf="true" data-offset-key="777:0" 
data-first-offset="true"><span data-slate-string="true">我们还可以利用画笔功能来创造出立体文字的效果。</span></span></span> 
</div> <div class="se-995708e3 " data-slate-type="paragraph" data-slate-object="block" data-key="778"></div> 
<div class="se-63770ce9 se-1fd9ba5b" data-slate-type="paragraph" data-slate-object="block" 
data-key="779"> <span data-slate-object="text" data-key="780"><span data-slate-leaf="true" 
data-offset-key="780:0" data-first-offset="true"><span class="se-809b6172" data-slate-type="bold" 
data-slate-object="mark"><span data-slate-string="true">相框</span></span></span></span> </div> 
<div class="se-ff36d9ad" data-slate-type="image" data-slate-object="block" data-key="781"> 
<img class="se-42247f9b" src="https://static001.geekbang.org/resource/image/b4/61/b4b94664b28776aa6e0573e891030e61.png"> 
</div> <div class="se-ed6de74b " data-slate-type="paragraph" data-slate-object="block" data-key="782"> 
<span data-slate-object="text" data-key="783"><span data-slate-leaf="true" data-offset-key="783:0" 
data-first-offset="true"><span data-slate-string="true">相框工具提供了多个相框样式，同时可以调整相框宽度。但我认为这个工具与 
Snapseed 的滤镜是在同一档的：不可用。一方面，它会减少画面内容，另一方面，Snapseed 里自带的相框确实不太好看，所以我个人不建议使用。</span></span></span> 
</div> <div class="se-854a50e7 " data-slate-type="paragraph" data-slate-object="block" data-key="784"> 
<span data-slate-object="text" data-key="785"><span data-slate-leaf="true" data-offset-key="785:0" 
data-first-offset="true"><span class="se-0f8600c9" data-slate-type="bold" data-slate-object="mark"><span 
data-slate-string="true">　</span></span></span></span> </div> <h2 class="se-ca7c827d" data-slate-type="heading" 
data-slate-object="block" data-key="786"> <div class="se-78dce38a se-3ee1b169" data-slate-type="paragraph" 
data-slate-object="block" data-key="787"> <span data-slate-object="text" data-key="788"><span 
data-slate-leaf="true" data-offset-key="788:0" data-first-offset="true"><span data-slate-string="true">最后小结一下</span></span></span> 
</div></h2> <div class="se-0131ada5" data-slate-type="image" data-slate-object="block" data-key="789"> 
<img class="se-084c8ede" src="https://static001.geekbang.org/resource/image/ef/55/ef167888256e216a9cfe97025a9d1d55.png"> 
</div> <div class="se-3e52308b " data-slate-type="paragraph" data-slate-object="block" data-key="790"> 
<span data-slate-object="text" data-key="791"><span data-slate-leaf="true" data-offset-key="791:0" 
data-first-offset="true"><span data-slate-string="true">Snapseed 对图片有着非常大的调整空间，配合可叠加操作这个特性，调整范围可以说是能被无限放大；局部和画笔工具可以帮助我们进行更加精准的画面处理，而一些特色功能搭配画笔使用，可以帮助我们搞出一些富有创意的图片。</span></span></span> 
</div> <div class="se-dd2b4943 " data-slate-type="paragraph" data-slate-object="block" data-key="792"> 
<span data-slate-object="text" data-key="793"><span data-slate-leaf="true" data-offset-key="793:0" 
data-first-offset="true"><span data-slate-string="true">可以看到，Snapseed 能做的事情很多，但想把它用好，不是短时间能完成的。</span></span></span><span 
data-slate-object="text" data-key="794"><span data-slate-leaf="true" data-offset-key="794:0" 
data-first-offset="true"><span class="se-ec3adb5a" data-slate-type="bold" data-slate-object="mark"><span 
data-slate-string="true">还是那句话：修图这件事，花时间动手尝试远比看更重要。</span></span></span></span> </div> <div 
class="se-c73c39e5 " data-slate-type="paragraph" data-slate-object="block" data-key="795"> 
<span data-slate-object="text" data-key="796"><span data-slate-leaf="true" data-offset-key="796:0" 
data-first-offset="true"><span class="se-e92e8ea8" data-slate-type="bold" data-slate-object="mark"><span 
data-slate-string="true">　</span></span></span></span> </div> <h2 class="se-421461cc" data-slate-type="heading" 
data-slate-object="block" data-key="797"> <div class="se-13656cf0 se-386b3dab" data-slate-type="paragraph" 
data-slate-object="block" data-key="798"> <span data-slate-object="text" data-key="799"><span 
data-slate-leaf="true" data-offset-key="799:0" data-first-offset="true"><span data-slate-string="true">课后小练习</span></span></span> 
</div></h2> <div class="se-1317ddc2 " data-slate-type="paragraph" data-slate-object="block" 
data-key="800"> <span data-slate-object="text" data-key="801"><span data-slate-leaf="true" 
data-offset-key="801:0" data-first-offset="true"><span data-slate-string="true">上节课的最后，你用 VSCO 
修好了一张照片，那这次，你把这张已经修好颜色了的照片再导进 Snapseed 试一试，看看还有哪些细节可以做优化。</span></span></span> </div> <div 
class="se-04fb4820 " data-slate-type="paragraph" data-slate-object="block" data-key="802"> 
<span data-slate-object="text" data-key="803"><span data-slate-leaf="true" data-offset-key="803:0" 
data-first-offset="true"><span data-slate-string="true">我们下节课就不见了，下节课是这整期课的最后一节，会由 Lufus 来讲，之后结束语的时候麥爷会归位。希望算上开篇词和结束语，这 
22 讲全看下来，你能真的有收获。那我们山高水远，江湖再见。</span></span></span> </div> </div>', body_summary='', bundle='book', 
delta=0, body_format='full_html', langcode='zh-hans', revision_id=725 where entity_id=725 
 {executed in 10 msec}
2020-11-23 19:32:06.367 INFO  jdbc.sqltiming Line:373 - update node_revision__body set body_value='<div data-slate-editor="true" data-key="407" autocorrect="off" 
spellcheck="false" data-gramm="false" style="outline: none; white-space: pre-wrap; overflow-wrap: 
break-word;"> <div class="se-c67c33ec " data-slate-type="paragraph" data-slate-object="block" 
data-key="408"> <span data-slate-object="text" data-key="409"><span data-slate-leaf="true" 
data-offset-key="409:0" data-first-offset="true"><span data-slate-string="true">你好，我是 @随你们去，这次还是我代课，今天咱们聊一聊 
Snapseed 这个软件的用法。</span></span></span> </div> <div class="se-4ddfdcef" data-slate-type="image" 
data-slate-object="block" data-key="410"> <img class="se-89a07431" src="https://static001.geekbang.org/resource/image/0e/f3/0e302dd77d13fd0a77c6b1e3cbfec6f3.png"> 
</div> <div class="se-4ea0884c " data-slate-type="paragraph" data-slate-object="block" data-key="411"> 
<span data-slate-object="text" data-key="412"><span data-slate-leaf="true" data-offset-key="412:0" 
data-first-offset="true"><span data-slate-string="true">与 VSCO 一样，Snapseed 也是一款历史悠久的移动端图片后期工具。在 
2012 年，Google 收购了 Snapseed 的开发商 Nik Software，得益于此次收购，这款曾经的 iOS 付费应用现在可以在 iOS 以及 Android 平台上完全免费使用。</span></span></span> 
</div> <div class="se-3a3dc67a " data-slate-type="paragraph" data-slate-object="block" data-key="413"> 
<span data-slate-object="text" data-key="414"><span data-slate-leaf="true" data-offset-key="414:0" 
data-first-offset="true"><span data-slate-string="true">跟 VSCO 不同的是，Snapseed 是一款全能的后期工具，对照片有着更加自由的调整空间，但因为它默认提供的滤镜相对鸡肋，所以最好让它和 
VSCO 形成互补来搭配使用。我自己习惯用 VSCO 调色，用 Snapseed 处理一些特殊需求。</span></span></span> </div> <div class="se-0f4f2704 
" data-slate-type="paragraph" data-slate-object="block" data-key="415"> <span data-slate-object="text" 
data-key="416"><span data-slate-leaf="true" data-offset-key="416:0" data-first-offset="true"><span 
class="se-67224522" data-slate-type="bold" data-slate-object="mark"><span data-slate-string="true">注：</span></span></span></span> 
</div> <div class="se-8b8c4dec" data-slate-type="list" data-slate-object="block" data-key="417"> 
<div class="se-5c6ee8c4" data-slate-type="list-line" data-slate-object="block" data-key="418"> 
<div class="se-fd18feb0 se-5e6fe520" data-code-line-number="1"></div> <div class="se-ea1b84d3"> 
<span data-slate-object="text" data-key="419"><span data-slate-leaf="true" data-offset-key="419:0" 
data-first-offset="true"><span data-slate-string="true">为了避免重复，有关 Snapseed 与 VSCO 重复功能的部分本节课会略过；</span></span></span> 
</div> </div> <div class="se-c5d276a8" data-slate-type="list-line" data-slate-object="block" 
data-key="420"> <div class="se-93cc7588 se-cc6a285a" data-code-line-number="2"></div> <div 
class="se-ffcefba1"> <span data-slate-object="text" data-key="421"><span data-slate-leaf="true" 
data-offset-key="421:0" data-first-offset="true"><span data-slate-string="true">考虑到实用性，滤镜部分本节课也不涉及；</span></span></span> 
</div> </div> <div class="se-7bb9e792" data-slate-type="list-line" data-slate-object="block" 
data-key="422"> <div class="se-90ec913f se-12a7dd85" data-code-line-number="3"></div> <div 
class="se-bab62029"> <span data-slate-object="text" data-key="423"><span data-slate-leaf="true" 
data-offset-key="423:0" data-first-offset="true"><span data-slate-string="true">上这节课前，建议你再翻回上一节课看一看里面的“调整工具”部分。</span></span></span> 
</div> </div> </div> <div class="se-1be79a35 " data-slate-type="paragraph" data-slate-object="block" 
data-key="424"></div> <div class="se-fb4f4857 se-757602ca" data-slate-type="paragraph" data-slate-object="block" 
data-key="425"> <span data-slate-object="text" data-key="426"><span data-slate-leaf="true" 
data-offset-key="426:0" data-first-offset="true"><span class="se-5ad61768" data-slate-type="bold" 
data-slate-object="mark"><span data-slate-string="true">目录一览</span></span></span></span> </div> 
<div class="se-3a8bbc83" data-slate-type="image" data-slate-object="block" data-key="427"> 
<img class="se-f3afd9bb" src="https://static001.geekbang.org/resource/image/d6/07/d681b90d99374fa56f0ade11203c7d07.jpeg"> 
</div> <div class="se-89faf0c4 " data-slate-type="paragraph" data-slate-object="block" data-key="428"></div> 
<div class="se-db9220ea se-80b01c6b" data-slate-type="paragraph" data-slate-object="block" 
data-key="429"> <span data-slate-object="text" data-key="430"><span data-slate-leaf="true" 
data-offset-key="430:0" data-first-offset="true"><span class="se-c2260962" data-slate-type="bold" 
data-slate-object="mark"><span data-slate-string="true">框架熟悉：认识 Snapseed</span></span></span></span> 
</div> <div class="se-81f38668" data-slate-type="image" data-slate-object="block" data-key="431"> 
<img class="se-66e2200c" src="https://static001.geekbang.org/resource/image/b1/4c/b1235334f04b0bfebcca5c5a999d7f4c.png"> 
</div> <div class="se-d6cca09a " data-slate-type="paragraph" data-slate-object="block" data-key="432"> 
<span data-slate-object="text" data-key="433"><span data-slate-leaf="true" data-offset-key="433:0" 
data-first-offset="true"><span data-slate-string="true">用 Snapseed 打开一张照片后，我们可以看到它整体的界面布局：底部栏分别为</span></span></span><span 
data-slate-object="text" data-key="434"><span data-slate-leaf="true" data-offset-key="434:0" 
data-first-offset="true"><span class="se-cf137bc1" data-slate-type="bold" data-slate-object="mark"><span 
data-slate-string="true">样式</span></span></span></span><span data-slate-object="text" data-key="435"><span 
data-slate-leaf="true" data-offset-key="435:0" data-first-offset="true"><span data-slate-string="true">、</span></span></span><span 
data-slate-object="text" data-key="436"><span data-slate-leaf="true" data-offset-key="436:0" 
data-first-offset="true"><span class="se-1f6c870b" data-slate-type="bold" data-slate-object="mark"><span 
data-slate-string="true">工具</span></span></span></span><span data-slate-object="text" data-key="437"><span 
data-slate-leaf="true" data-offset-key="437:0" data-first-offset="true"><span data-slate-string="true">和</span></span></span><span 
data-slate-object="text" data-key="438"><span data-slate-leaf="true" data-offset-key="438:0" 
data-first-offset="true"><span class="se-e21466d8" data-slate-type="bold" data-slate-object="mark"><span 
data-slate-string="true">导出</span></span></span></span><span data-slate-object="text" data-key="439"><span 
data-slate-leaf="true" data-offset-key="439:0" data-first-offset="true"><span data-slate-string="true">功能，顶部栏分别为</span></span></span><span 
data-slate-object="text" data-key="440"><span data-slate-leaf="true" data-offset-key="440:0" 
data-first-offset="true"><span class="se-8fba82a7" data-slate-type="bold" data-slate-object="mark"><span 
data-slate-string="true">打开新照片</span></span></span></span><span data-slate-object="text" data-key="441"><span 
data-slate-leaf="true" data-offset-key="441:0" data-first-offset="true"><span data-slate-string="true">、</span></span></span><span 
data-slate-object="text" data-key="442"><span data-slate-leaf="true" data-offset-key="442:0" 
data-first-offset="true"><span class="se-99c8f554" data-slate-type="bold" data-slate-object="mark"><span 
data-slate-string="true">操作记录</span></span></span></span><span data-slate-object="text" data-key="443"><span 
data-slate-leaf="true" data-offset-key="443:0" data-first-offset="true"><span data-slate-string="true">、</span></span></span><span 
data-slate-object="text" data-key="444"><span data-slate-leaf="true" data-offset-key="444:0" 
data-first-offset="true"><span class="se-e3769a9b" data-slate-type="bold" data-slate-object="mark"><span 
data-slate-string="true">图片信息</span></span></span></span><span data-slate-object="text" data-key="445"><span 
data-slate-leaf="true" data-offset-key="445:0" data-first-offset="true"><span data-slate-string="true">以及</span></span></span><span 
data-slate-object="text" data-key="446"><span data-slate-leaf="true" data-offset-key="446:0" 
data-first-offset="true"><span class="se-c28943ed" data-slate-type="bold" data-slate-object="mark"><span 
data-slate-string="true">更多</span></span></span></span><span data-slate-object="text" data-key="447"><span 
data-slate-leaf="true" data-offset-key="447:0" data-first-offset="true"><span data-slate-string="true">（设置、教程、帮助和反馈）功能。</span></span></span> 
</div> <div class="se-00a4453b" data-slate-type="image" data-slate-object="block" data-key="448"> 
<img class="se-9602f4a4" src="https://static001.geekbang.org/resource/image/d3/b5/d32872a9a84a15f2ae80a52a8c0227b5.png"> 
</div> <div class="se-8b5a08f0 " data-slate-type="paragraph" data-slate-object="block" data-key="449"></div> 
<div class="se-da2dd35a se-fbaf9845" data-slate-type="paragraph" data-slate-object="block" 
data-key="450"> <span data-slate-object="text" data-key="451"><span data-slate-leaf="true" 
data-offset-key="451:0" data-first-offset="true"><span class="se-c66c344e" data-slate-type="bold" 
data-slate-object="mark"><span data-slate-string="true">样式</span></span></span></span> </div> 
<div class="se-ad0d7167 " data-slate-type="paragraph" data-slate-object="block" data-key="452"> 
<span data-slate-object="text" data-key="453"><span data-slate-leaf="true" data-offset-key="453:0" 
data-first-offset="true"><span data-slate-string="true">导入照片后，</span></span></span><span data-slate-object="text" 
data-key="454"><span data-slate-leaf="true" data-offset-key="454:0" data-first-offset="true"><span 
class="se-7e9abe19" data-slate-type="bold" data-slate-object="mark"><span data-slate-string="true">样式</span></span></span></span><span 
data-slate-object="text" data-key="455"><span data-slate-leaf="true" data-offset-key="455:0" 
data-first-offset="true"><span data-slate-string="true">是第一个呈现的页面，但通常情况下，这里我们直接切换到</span></span></span><span 
data-slate-object="text" data-key="456"><span data-slate-leaf="true" data-offset-key="456:0" 
data-first-offset="true"><span class="se-fca2eca1" data-slate-type="bold" data-slate-object="mark"><span 
data-slate-string="true">工具</span></span></span></span><span data-slate-object="text" data-key="457"><span 
data-slate-leaf="true" data-offset-key="457:0" data-first-offset="true"><span data-slate-string="true">即可。因为 
Snapseed 所提供的这些样式的适用性非常糟糕，而且也没有应用程度的微调选项，搞得这个功能基本用处不大。</span></span></span> </div> <div class="se-039b977b" 
data-slate-type="image" data-slate-object="block" data-key="458"> <img class="se-58b14f09" 
src="https://static001.geekbang.org/resource/image/eb/64/eb0d559a1bfc32b1d785de9e18762764.png"> 
</div> <div class="se-9a589237 " data-slate-type="paragraph" data-slate-object="block" data-key="459"> 
<span data-slate-object="text" data-key="460"><span data-slate-leaf="true" data-offset-key="460:0" 
data-first-offset="true"><span data-slate-string="true">样式栏滑动到最后，你可以将自己的当前调整步骤（如果有）添加至样式里。由于每张照片所需要的调整步骤各不相同，这样的操作仅适合用于批处理同一系列照片，其他情况下不建议使用。</span></span></span> 
</div> <div class="se-f589ffad " data-slate-type="paragraph" data-slate-object="block" data-key="461"> 
<span data-slate-object="text" data-key="462"><span data-slate-leaf="true" data-offset-key="462:0" 
data-first-offset="true"><span class="se-0847723c" data-slate-type="bold" data-slate-object="mark"><span 
data-slate-string="true">所以总结来说，除了使用自己建立的样式来进行批处理外，不建议使用 Snapseed 的样式。</span></span></span></span> 
</div> <div class="se-a60d305c " data-slate-type="paragraph" data-slate-object="block" data-key="463"></div> 
<div class="se-c67a7c65 se-f77fcea5" data-slate-type="paragraph" data-slate-object="block" 
data-key="464"> <span data-slate-object="text" data-key="465"><span data-slate-leaf="true" 
data-offset-key="465:0" data-first-offset="true"><span class="se-6dc53857" data-slate-type="bold" 
data-slate-object="mark"><span data-slate-string="true">工具</span></span></span></span> </div> 
<div class="se-b67f807c " data-slate-type="paragraph" data-slate-object="block" data-key="466"> 
<span data-slate-object="text" data-key="467"><span data-slate-leaf="true" data-offset-key="467:0" 
data-first-offset="true"><span data-slate-string="true">工具页面里总共有 28 个小工具，但这里面有部分小工具实际上是滤镜。这些滤镜是：“HDR 
景观”“魅力光晕”“戏剧效果”“复古”“粗粒胶片”“怀旧”“斑驳”“黑白”“黑白电影”。</span></span></span> </div> <div class="se-62266c20" 
data-slate-type="image" data-slate-object="block" data-key="468"> <img class="se-979c9c4e" 
src="https://static001.geekbang.org/resource/image/6f/0c/6ff3b6041dec2525e92cf326157ae10c.png"> 
</div> <div class="se-89de36ab " data-slate-type="paragraph" data-slate-object="block" data-key="469"> 
<span data-slate-object="text" data-key="470"><span data-slate-leaf="true" data-offset-key="470:0" 
data-first-offset="true"><span data-slate-string="true">除了滤镜外，“美颜”和“头部姿势”这两个小工具是关于美颜的，不是本课的重点，我只在这里简单介绍一下：“美颜”工具相对常规，可以识别面部并提供肤色调整、面部提亮、嫩肤和亮眼功能；“头部姿势”工具则比较有趣，可以调整面部角度、瞳孔大小、笑容和焦距。</span></span></span> 
</div> <div class="se-8564423c " data-slate-type="paragraph" data-slate-object="block" data-key="471"> 
<span data-slate-object="text" data-key="472"><span data-slate-leaf="true" data-offset-key="472:0" 
data-first-offset="true"><span data-slate-string="true">除去上面所提到的内容，还剩下 17 个小工具，我稍后会一一介绍。</span></span></span> 
</div> <div class="se-801fce64 " data-slate-type="paragraph" data-slate-object="block" data-key="473"></div> 
<div class="se-c681579f se-1142dc75" data-slate-type="paragraph" data-slate-object="block" 
data-key="474"> <span data-slate-object="text" data-key="475"><span data-slate-leaf="true" 
data-offset-key="475:0" data-first-offset="true"><span class="se-60e41023" data-slate-type="bold" 
data-slate-object="mark"><span data-slate-string="true">导出</span></span></span></span> </div> 
<div class="se-48da41d8" data-slate-type="image" data-slate-object="block" data-key="476"> 
<img class="se-7dff1e2f" src="https://static001.geekbang.org/resource/image/ea/a5/eab2c05c704fd2be113692a216bc7da5.png"> 
</div> <div class="se-41a4f109 " data-slate-type="paragraph" data-slate-object="block" data-key="477"> 
<span data-slate-object="text" data-key="478"><span data-slate-leaf="true" data-offset-key="478:0" 
data-first-offset="true"><span data-slate-string="true">iOS 和 Android 两个版本的导出功能有所区别，具体实现的功能可以查看小字描述部分。其中 
iOS 可以以三种方式导出，分别是：覆盖原图的保存（图片可再次修改）、副本的保存（图片可再次修改）、直接导出的保存（图片不可再次修改）。</span></span></span> </div> 
<div class="se-004e996d " data-slate-type="paragraph" data-slate-object="block" data-key="479"> 
<span data-slate-object="text" data-key="480"><span data-slate-leaf="true" data-offset-key="480:0" 
data-first-offset="true"><span data-slate-string="true">这里“覆盖原图的保存”以及“副本的保存”，保存后的图片可再次修改，和其他工具有所不同。</span></span></span> 
</div> <div class="se-629da18d " data-slate-type="paragraph" data-slate-object="block" data-key="481"></div> 
<div class="se-50ecf609 se-04b22606" data-slate-type="paragraph" data-slate-object="block" 
data-key="482"> <span data-slate-object="text" data-key="483"><span data-slate-leaf="true" 
data-offset-key="483:0" data-first-offset="true"><span class="se-df6d244b" data-slate-type="bold" 
data-slate-object="mark"><span data-slate-string="true">操作记录</span></span></span></span> </div> 
<div class="se-6892877d" data-slate-type="image" data-slate-object="block" data-key="484"> 
<img class="se-2cd8ebcd" src="https://static001.geekbang.org/resource/image/79/34/796def2ae0b1109ef6f8f1bc1ddaf234.png"> 
</div> <div class="se-a87bbc4c " data-slate-type="paragraph" data-slate-object="block" data-key="485"> 
<span data-slate-object="text" data-key="486"><span data-slate-leaf="true" data-offset-key="486:0" 
data-first-offset="true"><span data-slate-string="true">在操作记录里，我们可以进行撤销、重做以及还原操作。在“查看修改内容”里，还可以重新调整或删除某单个调整项，对于大部分调整项来说，都可以在这里使用画笔来将其调整为局部处理。（画笔是 
Snapseed 里比较重要的一个工具，后面我会详细介绍。）</span></span></span> </div> <div class="se-35259bbf " data-slate-type="paragraph" 
data-slate-object="block" data-key="487"> <span data-slate-object="text" data-key="488"><span 
data-slate-leaf="true" data-offset-key="488:0" data-first-offset="true"><span data-slate-string="true">位于最底部的 
QR 样式是样式分享功能，你可以通过这个功能将自己的调整步骤创建为一个二维码供他人使用，或是使用他人的调整步骤。</span></span></span> </div> <div class="se-4fb42cef 
" data-slate-type="paragraph" data-slate-object="block" data-key="489"></div> <div class="se-af5a9d88 
se-40f4c456" data-slate-type="paragraph" data-slate-object="block" data-key="490"> <span data-slate-object="text" 
data-key="491"><span data-slate-leaf="true" data-offset-key="491:0" data-first-offset="true"><span 
class="se-59137992" data-slate-type="bold" data-slate-object="mark"><span data-slate-string="true">详细信息与设置</span></span></span></span> 
</div> <div class="se-02de5192" data-slate-type="image" data-slate-object="block" data-key="492"> 
<img class="se-3882f532" src="https://static001.geekbang.org/resource/image/2b/73/2ba6e533f7dedd7ec33e01d72a8bce73.png"> 
</div> <div class="se-4c5c05b9 " data-slate-type="paragraph" data-slate-object="block" data-key="493"> 
<span data-slate-object="text" data-key="494"><span data-slate-leaf="true" data-offset-key="494:0" 
data-first-offset="true"><span data-slate-string="true">在详细信息里，我们可以看到这张图片的创建时间、名称、分辨率、大小、拍摄机型、拍摄参数以及位置信息。</span></span></span> 
</div> <div class="se-f882d0da " data-slate-type="paragraph" data-slate-object="block" data-key="495"> 
<span data-slate-object="text" data-key="496"><span data-slate-leaf="true" data-offset-key="496:0" 
data-first-offset="true"><span data-slate-string="true">在设置里，可以对导出画质进行调整，建议设置为</span></span></span><span 
data-slate-object="text" data-key="497"><span data-slate-leaf="true" data-offset-key="497:0" 
data-first-offset="true"><span class="se-90950f54" data-slate-type="bold" data-slate-object="mark"><span 
data-slate-string="true">不要调整大小</span></span></span></span><span data-slate-object="text" data-key="498"><span 
data-slate-leaf="true" data-offset-key="498:0" data-first-offset="true"><span data-slate-string="true">以及 
</span></span></span><span data-slate-object="text" data-key="499"><span data-slate-leaf="true" 
data-offset-key="499:0" data-first-offset="true"><span class="se-58e41b0d" data-slate-type="bold" 
data-slate-object="mark"><span data-slate-string="true">JPG 100%</span></span></span></span><span 
data-slate-object="text" data-key="500"><span data-slate-leaf="true" data-offset-key="500:0" 
data-first-offset="true"><span data-slate-string="true"> 画质。</span></span></span> </div> <div 
class="se-575de1fa " data-slate-type="paragraph" data-slate-object="block" data-key="501"></div> 
<div class="se-55bbcf71 se-e6a066f7" data-slate-type="paragraph" data-slate-object="block" 
data-key="502"> <span data-slate-object="text" data-key="503"><span data-slate-leaf="true" 
data-offset-key="503:0" data-first-offset="true"><span class="se-de4d5e30" data-slate-type="bold" 
data-slate-object="mark"><span data-slate-string="true">叠加性</span></span></span></span> </div> 
<div class="se-ff0d1aac " data-slate-type="paragraph" data-slate-object="block" data-key="504"> 
<span data-slate-object="text" data-key="505"><span data-slate-leaf="true" data-offset-key="505:0" 
data-first-offset="true"><span data-slate-string="true">在 Snapseed 的调整里，我们每完成一个调整步骤，这个步骤就会被单独保存至</span></span></span><span 
data-slate-object="text" data-key="506"><span data-slate-leaf="true" data-offset-key="506:0" 
data-first-offset="true"><span class="se-9369e388" data-slate-type="bold" data-slate-object="mark"><span 
data-slate-string="true">操作记录</span></span></span></span><span data-slate-object="text" data-key="507"><span 
data-slate-leaf="true" data-offset-key="507:0" data-first-offset="true"><span data-slate-string="true">里，当我们在工具页面再次进行同样的调整时，并不是修改之前的调整，而是在这个基础上进行叠加。</span></span></span> 
</div> <div class="se-da76fa47 " data-slate-type="paragraph" data-slate-object="block" data-key="508"> 
<span data-slate-object="text" data-key="509"><span data-slate-leaf="true" data-offset-key="509:0" 
data-first-offset="true"><span data-slate-string="true">举例来说，我们可以在 Snapseed 对一张照片的亮度调整进行 “+100” 
随后再 “+100” 随后再 “+100” 这样的叠加，这样的特性使我们对一张照片有着非常大的调整自由度。而 VSCO 就不是这样，VSCO 对于每个调整项都相对更克制一些。</span></span></span> 
</div> <div class="se-e241a67e " data-slate-type="paragraph" data-slate-object="block" data-key="510"> 
<span data-slate-object="text" data-key="511"><span data-slate-leaf="true" data-offset-key="511:0" 
data-first-offset="true"><span data-slate-string="true">认识完 Snapseed 的整体界面，下面我会详细介绍工具里涉及到的 
17 个小工具。为了便于理解，我将这 17 个小工具分为</span></span></span><span data-slate-object="text" data-key="512"><span 
data-slate-leaf="true" data-offset-key="512:0" data-first-offset="true"><span class="se-b2769a82" 
data-slate-type="bold" data-slate-object="mark"><span data-slate-string="true">基础功能</span></span></span></span><span 
data-slate-object="text" data-key="513"><span data-slate-leaf="true" data-offset-key="513:0" 
data-first-offset="true"><span data-slate-string="true">、</span></span></span><span data-slate-object="text" 
data-key="514"><span data-slate-leaf="true" data-offset-key="514:0" data-first-offset="true"><span 
class="se-dc652895" data-slate-type="bold" data-slate-object="mark"><span data-slate-string="true">局部处理</span></span></span></span><span 
data-slate-object="text" data-key="515"><span data-slate-leaf="true" data-offset-key="515:0" 
data-first-offset="true"><span data-slate-string="true">和</span></span></span><span data-slate-object="text" 
data-key="516"><span data-slate-leaf="true" data-offset-key="516:0" data-first-offset="true"><span 
class="se-b5049f94" data-slate-type="bold" data-slate-object="mark"><span data-slate-string="true">特色功能</span></span></span></span><span 
data-slate-object="text" data-key="517"><span data-slate-leaf="true" data-offset-key="517:0" 
data-first-offset="true"><span data-slate-string="true">三部分，除了简单的功能介绍外，我还会附带一些个人的使用建议。</span></span></span> 
</div> <div class="se-b1e3f492 " data-slate-type="paragraph" data-slate-object="block" data-key="518"> 
<span data-slate-object="text" data-key="519"><span data-slate-leaf="true" data-offset-key="519:0" 
data-first-offset="true"><span class="se-82a13783" data-slate-type="bold" data-slate-object="mark"><span 
data-slate-string="true">　</span></span></span></span> </div> <h2 class="se-bfd8920b" data-slate-type="heading" 
data-slate-object="block" data-key="520"> <div class="se-79b7e966 se-60d0bfd7" data-slate-type="paragraph" 
data-slate-object="block" data-key="521"> <span data-slate-object="text" data-key="522"><span 
data-slate-leaf="true" data-offset-key="522:0" data-first-offset="true"><span data-slate-string="true">基础功能：初步的完善</span></span></span> 
</div></h2> <div class="se-4bea1e9f" data-slate-type="image" data-slate-object="block" data-key="523"> 
<img class="se-4e76becd" src="https://static001.geekbang.org/resource/image/bd/a6/bdfdd1f25a5a2a5df5ef01ceba2e20a6.png"> 
</div> <div class="se-7ad82dcd " data-slate-type="paragraph" data-slate-object="block" data-key="524"> 
<span data-slate-object="text" data-key="525"><span data-slate-leaf="true" data-offset-key="525:0" 
data-first-offset="true"><span data-slate-string="true">在基础功能部分，主要是调整图片、突出细节、曲线、白平衡等常见工具。其中，曲线是一个强大但不太容易理解的工具，带你认识曲线是本节课这部分的一个重点。</span></span></span> 
</div> <div class="se-17781b16 " data-slate-type="paragraph" data-slate-object="block" data-key="526"></div> 
<div class="se-a5bc0182 se-05e15305" data-slate-type="paragraph" data-slate-object="block" 
data-key="527"> <span data-slate-object="text" data-key="528"><span data-slate-leaf="true" 
data-offset-key="528:0" data-first-offset="true"><span class="se-0b59bf14" data-slate-type="bold" 
data-slate-object="mark"><span data-slate-string="true">调整图片</span></span></span></span> </div> 
<div class="se-7e1969ae" data-slate-type="image" data-slate-object="block" data-key="529"> 
<img class="se-317194e7" src="https://static001.geekbang.org/resource/image/c9/22/c943a88213d716afa14b1634be43ce22.png"> 
</div> <div class="se-17347608 " data-slate-type="paragraph" data-slate-object="block" data-key="530"> 
<span data-slate-object="text" data-key="531"><span data-slate-leaf="true" data-offset-key="531:0" 
data-first-offset="true"><span data-slate-string="true">在调整图片工具里，我们可以对亮度、对比度、饱和度、氛围、高光、阴影、暖色调进行调整。此外，Snapseed 
还提供了一个</span></span></span><span data-slate-object="text" data-key="532"><span data-slate-leaf="true" 
data-offset-key="532:0" data-first-offset="true"><span class="se-90522b71" data-slate-type="bold" 
data-slate-object="mark"><span data-slate-string="true">自动调整</span></span></span></span><span 
data-slate-object="text" data-key="533"><span data-slate-leaf="true" data-offset-key="533:0" 
data-first-offset="true"><span data-slate-string="true">功能，这在部分小工具里都可以看到，但</span></span></span><span 
data-slate-object="text" data-key="534"><span data-slate-leaf="true" data-offset-key="534:0" 
data-first-offset="true"><span class="se-03f7c2a0" data-slate-type="bold" data-slate-object="mark"><span 
data-slate-string="true">由于机器对于照片的判断与我们自己的想法大不相同，我个人不推荐使用。</span></span></span></span> </div> 
<div class="se-4679ee4c" data-slate-type="image" data-slate-object="block" data-key="535"> 
<img class="se-731d8562" src="https://static001.geekbang.org/resource/image/18/ba/182890962af2f0c827b5da15494098ba.png"> 
</div> <div class="se-9c17a255 " data-slate-type="paragraph" data-slate-object="block" data-key="536"> 
<span data-slate-object="text" data-key="537"><span data-slate-leaf="true" data-offset-key="537:0" 
data-first-offset="true"><span data-slate-string="true">其中，氛围是 Snapseed 里特有的一个调整项，实际上是一个综合调整，随着氛围的添加与减少，照片风格会随之变化，最大的区别体现在高光和阴影上。</span></span></span> 
</div> <div class="se-e01e6ddc" data-slate-type="image" data-slate-object="block" data-key="538"> 
<img class="se-8f628fc3" src="https://static001.geekbang.org/resource/image/68/aa/68a27f158601c4a081e607aa37f6a5aa.png"> 
</div> <div class="se-7976df21 " data-slate-type="paragraph" data-slate-object="block" data-key="539"> 
<span data-slate-object="text" data-key="540"><span data-slate-leaf="true" data-offset-key="540:0" 
data-first-offset="true"><span data-slate-string="true">除此之外，调整幅度更大也是 Snapseed 与 VSCO 的区别。在这里，高光与阴影均可以双向调整，而不是像 
VSCO 上只能进行高光减弱和阴影补偿。当我们需要去掉高光或阴影的细节时，就需要进行相应的反向调整。</span></span></span> </div> <div class="se-ab8f0673 
" data-slate-type="paragraph" data-slate-object="block" data-key="541"></div> <div class="se-9b29fbe4 
se-2a5a74c8" data-slate-type="paragraph" data-slate-object="block" data-key="542"> <span data-slate-object="text" 
data-key="543"><span data-slate-leaf="true" data-offset-key="543:0" data-first-offset="true"><span 
class="se-24636e7e" data-slate-type="bold" data-slate-object="mark"><span data-slate-string="true">突出细节</span></span></span></span> 
</div> <div class="se-0fbc4412" data-slate-type="image" data-slate-object="block" data-key="544"> 
<img class="se-7b269e1a" src="https://static001.geekbang.org/resource/image/a8/97/a858cb1505055328eba7b724dcc2b097.png"> 
</div> <div class="se-fb3bb2e0 " data-slate-type="paragraph" data-slate-object="block" data-key="545"> 
<span data-slate-object="text" data-key="546"><span data-slate-leaf="true" data-offset-key="546:0" 
data-first-offset="true"><span data-slate-string="true">突出细节里提供了结构和锐化调整，锐化与 VSCO 没有区别，结构则对应着 
VSCO 里的清晰度，但这里的结构是支持双向调整的。</span></span></span> </div> <div class="se-150e6b2f " data-slate-type="paragraph" 
data-slate-object="block" data-key="547"> <span data-slate-object="text" data-key="548"><span 
data-slate-leaf="true" data-offset-key="548:0" data-first-offset="true"><span data-slate-string="true">当照片需要表现得比较柔和或去掉一些细节时，我们可以通过结构减弱来实现。</span></span></span> 
</div> <div class="se-d204c96a " data-slate-type="paragraph" data-slate-object="block" data-key="549"></div> 
<div class="se-78992a47 se-0577b87c" data-slate-type="paragraph" data-slate-object="block" 
data-key="550"> <span data-slate-object="text" data-key="551"><span data-slate-leaf="true" 
data-offset-key="551:0" data-first-offset="true"><span class="se-463f33d7" data-slate-type="bold" 
data-slate-object="mark"><span data-slate-string="true">曲线</span></span></span></span> </div> 
<div class="se-4561deb3 " data-slate-type="paragraph" data-slate-object="block" data-key="552"> 
<span data-slate-object="text" data-key="553"><span data-slate-leaf="true" data-offset-key="553:0" 
data-first-offset="true"><span data-slate-string="true">Snapseed 里提供了曲线工具。通过曲线工具，我们可以对照片进行调色上的任意处理，除了亮度、对比度、高光、阴影等常规调整外，还可以对色彩进行最大化的自由调整。</span></span></span> 
</div> <div class="se-599a04f6" data-slate-type="image" data-slate-object="block" data-key="554"> 
<img class="se-8610418d" src="https://static001.geekbang.org/resource/image/14/6a/14622d25b93acb2754bceb0cfa34be6a.png"> 
</div> <div class="se-8d70dda4 " data-slate-type="paragraph" data-slate-object="block" data-key="555"> 
<span data-slate-object="text" data-key="556"><span data-slate-leaf="true" data-offset-key="556:0" 
data-first-offset="true"><span data-slate-string="true">为了便于理解，我制作了一张黑白渐变图来演示曲线对于我们画面的影响，希望这几张图可以帮助你明白曲线是怎么一回事。</span></span></span> 
</div> <div class="se-ffeec4c8" data-slate-type="image" data-slate-object="block" data-key="557"> 
<img class="se-cd693560" src="https://static001.geekbang.org/resource/image/1b/23/1b159c4ca84c6f263e17dfa8d4f7d523.png"> 
</div> <div class="se-7bbdb897 " data-slate-type="paragraph" data-slate-object="block" data-key="558"> 
<span data-slate-object="text" data-key="559"><span data-slate-leaf="true" data-offset-key="559:0" 
data-first-offset="true"><span data-slate-string="true">在 Snapseed 的曲线工具界面里，分为曲线选择、显示与隐藏、预设曲线三部分。在曲线选择里，我们可以选择当前调整的曲线是 
RGB 还是红色、绿色、蓝色、亮度等，这里的亮度是 Snapseed 里特有的一个调整曲线，其余四个则为常见的曲线。</span></span></span> </div> <div 
class="se-f1548a56 " data-slate-type="paragraph" data-slate-object="block" data-key="560"> 
<span data-slate-object="text" data-key="561"><span data-slate-leaf="true" data-offset-key="561:0" 
data-first-offset="true"><span data-slate-string="true">通过 RGB 曲线，我们可以实现亮度、对比度、高光、阴影等调整，实际上，这些调整就是从曲线里分离出来的小功能，我们使用起来会非常方便。</span></span></span> 
</div> <div class="se-d58a4b48 " data-slate-type="paragraph" data-slate-object="block" data-key="562"> 
<span data-slate-object="text" data-key="563"><span data-slate-leaf="true" data-offset-key="563:0" 
data-first-offset="true"><span data-slate-string="true">通过红色、绿色、蓝色曲线，我们可以实现对应的色彩调整，或是把他们搭配起来使用，调出任意色彩，这里的任意色彩是指：色值可以表达出来的颜色都能够调出。</span></span></span> 
</div> <div class="se-dfe096fd" data-slate-type="image" data-slate-object="block" data-key="564"> 
<img class="se-8d2c79eb" src="https://static001.geekbang.org/resource/image/73/fe/73dfb4c2cccc773c7b18fa737bb292fe.png"> 
</div> <div class="se-85652f41 " data-slate-type="paragraph" data-slate-object="block" data-key="565"> 
<span data-slate-object="text" data-key="566"><span data-slate-leaf="true" data-offset-key="566:0" 
data-first-offset="true"><span data-slate-string="true">在 Snapseed 里，我们点击曲线上的任意一处，可以添加点，如果你想去掉其中某个点，将其拖到曲线的坐标图外即可。</span></span></span> 
</div> <div class="se-bf08ed0c" data-slate-type="image" data-slate-object="block" data-key="567"> 
<img class="se-e7f190e1" src="https://static001.geekbang.org/resource/image/4a/ce/4ad3bf00fc410ac7194b0f4a275903ce.png"> 
</div> <div class="se-f71f7fe8 " data-slate-type="paragraph" data-slate-object="block" data-key="568"> 
<span data-slate-object="text" data-key="569"><span data-slate-leaf="true" data-offset-key="569:0" 
data-first-offset="true"><span data-slate-string="true">在曲线的这个坐标图里，横轴（从左到右）是以亮度来对应当前画面内容的，最左边代表着画面最暗的区域，最右边代表着画面最亮的区域。纵轴（从下到上）对应着当前曲线调整项的应用程度。</span></span></span> 
</div> <div class="se-ed792ea1 " data-slate-type="paragraph" data-slate-object="block" data-key="570"> 
<span data-slate-object="text" data-key="571"><span data-slate-leaf="true" data-offset-key="571:0" 
data-first-offset="true"><span data-slate-string="true">需要注意的是，这个亮度或应用程度并不是通过具体画面来分的，而是事先就预设好的，共有 
256 个分级 (0-255)，画面自己对号入座。比如说，如果我们导入的照片没有纯黑的部分，那么在最右边就没有对应的照片信息。</span></span></span> </div> 
<div class="se-275977fe " data-slate-type="paragraph" data-slate-object="block" data-key="572"> 
<span data-slate-object="text" data-key="573"><span data-slate-leaf="true" data-offset-key="573:0" 
data-first-offset="true"><span data-slate-string="true">在图片演示里，我展示了在 RGB 曲线里三个极端操作的情况：</span></span></span> 
</div> <div class="se-551b0c00" data-slate-type="list" data-slate-object="block" data-key="574"> 
<div class="se-c8ba7639" data-slate-type="list-line" data-slate-object="block" data-key="575"> 
<div class="se-d255f67b se-73a6ef3c" data-code-line-number="1"></div> <div class="se-ea94e985"> 
<span data-slate-object="text" data-key="576"><span data-slate-leaf="true" data-offset-key="576:0" 
data-first-offset="true"><span data-slate-string="true">将左下角的点移动至左上角，整条曲线都在顶部，代表着画面从最暗到最亮的部分都调整为最亮，这使得我们的演示图变为纯白色；</span></span></span> 
</div> </div> <div class="se-a30e2609" data-slate-type="list-line" data-slate-object="block" 
data-key="577"> <div class="se-2c26057a se-2e0589c7" data-code-line-number="2"></div> <div 
class="se-487925ba"> <span data-slate-object="text" data-key="578"><span data-slate-leaf="true" 
data-offset-key="578:0" data-first-offset="true"><span data-slate-string="true">将右上角的点移动至右下角，整条曲线都在底部，代表着画面从最暗到最亮的部分都调整为最暗，这使得我们的演示图变为纯黑色；</span></span></span> 
</div> </div> <div class="se-2692f556" data-slate-type="list-line" data-slate-object="block" 
data-key="579"> <div class="se-b186aecd se-b5e0bea5" data-code-line-number="3"></div> <div 
class="se-803a3b74"> <span data-slate-object="text" data-key="580"><span data-slate-leaf="true" 
data-offset-key="580:0" data-first-offset="true"><span data-slate-string="true">上述两种调整均进行，将画面最亮部分调到最暗，画面最暗部分调到最亮，由于是一条线在控制，最终演示图的渐变方向对换。</span></span></span> 
</div> </div> </div> <div class="se-092f56eb" data-slate-type="image" data-slate-object="block" 
data-key="581"> <img class="se-b6de0014" src="https://static001.geekbang.org/resource/image/0e/42/0e6f8520d8ee64bbf8345f29f7e84742.png"> 
</div> <div class="se-c0038a70 " data-slate-type="paragraph" data-slate-object="block" data-key="582"> 
<span data-slate-object="text" data-key="583"><span data-slate-leaf="true" data-offset-key="583:0" 
data-first-offset="true"><span data-slate-string="true">所以在实际运用时，我们下拉曲线会使照片整体变暗，上拉曲线会使照片整体提亮。</span></span></span> 
</div> <div class="se-9561d5af" data-slate-type="image" data-slate-object="block" data-key="584"> 
<img class="se-0ee4f08c" src="https://static001.geekbang.org/resource/image/5f/82/5f5306e82a0b389a19de23580ca30a82.png"> 
</div> <div class="se-3b78ab33 " data-slate-type="paragraph" data-slate-object="block" data-key="585"> 
<span data-slate-object="text" data-key="586"><span data-slate-leaf="true" data-offset-key="586:0" 
data-first-offset="true"><span data-slate-string="true">再例如这样的曲线，我们可以看到，左边操作是将暗部变暗、将亮度提亮，所以画面整体上暗的部分变得更暗，亮的部分变得更亮，于是整体观感是对比度提高。右边的操作则相反，使得画面整体观感变得柔和，也就是说对比度降低。</span></span></span> 
</div> <div class="se-b2b08dda" data-slate-type="image" data-slate-object="block" data-key="587"> 
<img class="se-25a31a7f" src="https://static001.geekbang.org/resource/image/f4/d7/f4bc5c379ca97156e2d4c6d42ef106d7.png"> 
</div> <div class="se-0998f2c0 " data-slate-type="paragraph" data-slate-object="block" data-key="588"> 
<span data-slate-object="text" data-key="589"><span data-slate-leaf="true" data-offset-key="589:0" 
data-first-offset="true"><span data-slate-string="true">我们有了前面的基础后，色彩部分就比较好理解了。首先我们要知道的是，红绿蓝这三个颜色就是我们常说的 
RGB（Red/Green/Blue），这是生物学角度的</span></span></span><span data-slate-object="text" data-key="590"><span 
data-slate-leaf="true" data-offset-key="590:0" data-first-offset="true"><span class="se-aa663657" 
data-slate-type="bold" data-slate-object="mark"><span data-slate-string="true">光的三原色</span></span></span></span><span 
data-slate-object="text" data-key="591"><span data-slate-leaf="true" data-offset-key="591:0" 
data-first-offset="true"><span data-slate-string="true">，我们可以用这三种光色混合搭配出来除黑色以外的任意颜色，这就是曲线里提供了这三条色彩曲线的原因。</span></span></span> 
</div> <div class="se-a5570aee" data-slate-type="image" data-slate-object="block" data-key="592"> 
<img class="se-3dceac36" src="https://static001.geekbang.org/resource/image/4e/21/4e8dad81568a92e701b764e9a8cff221.png"> 
</div> <div class="se-a4e2ff13 " data-slate-type="paragraph" data-slate-object="block" data-key="593"> 
<span data-slate-object="text" data-key="594"><span data-slate-leaf="true" data-offset-key="594:0" 
data-first-offset="true"><span data-slate-string="true">在调整色彩曲线时，实际上是对照片添加或减去某一种颜色。在图片的操作里，我演示了三种极端情况，都是在最暗处加满当前曲线的颜色，而在最亮处完全删去当前曲线的颜色。</span></span></span> 
</div> <div class="se-c0e888c1 " data-slate-type="paragraph" data-slate-object="block" data-key="595"> 
<span data-slate-object="text" data-key="596"><span data-slate-leaf="true" data-offset-key="596:0" 
data-first-offset="true"><span data-slate-string="true">通过图片我们可以看到，在保持其他颜色不变时，删去当前曲线的颜色会出现对应的补色，红色 
(Red) 的补色是青色 (Cyan)，绿色 (Green) 的补色是品红 (Magenta)，蓝色 (Blue) 的补色是黄色 (Yellow)，所以我们就又知道了一组</span></span></span><span 
data-slate-object="text" data-key="597"><span data-slate-leaf="true" data-offset-key="597:0" 
data-first-offset="true"><span class="se-f8734acf" data-slate-type="bold" data-slate-object="mark"><span 
data-slate-string="true">色彩三原色</span></span></span></span><span data-slate-object="text" data-key="598"><span 
data-slate-leaf="true" data-offset-key="598:0" data-first-offset="true"><span data-slate-string="true">——</span></span></span><span 
data-slate-object="text" data-key="599"><span data-slate-leaf="true" data-offset-key="599:0" 
data-first-offset="true"><span class="se-0385ee3f" data-slate-type="bold" data-slate-object="mark"><span 
data-slate-string="true">CMY</span></span></span></span><span data-slate-object="text" data-key="600"><span 
data-slate-leaf="true" data-offset-key="600:0" data-first-offset="true"><span data-slate-string="true">。</span></span></span> 
</div> <div class="se-41dda047 " data-slate-type="paragraph" data-slate-object="block" data-key="601"> 
<span data-slate-object="text" data-key="602"><span data-slate-leaf="true" data-offset-key="602:0" 
data-first-offset="true"><span data-slate-string="true">在自己本身能发光的屏幕上，我们看到的是 RGB，在自己本身不发光、只能靠反光的物品上（比如印刷品），我们看到的是 
CMY，还有 K（BlacK）。</span></span></span> </div> <div class="se-b2353224" data-slate-type="image" 
data-slate-object="block" data-key="603"> <img class="se-2203cbcc" src="https://static001.geekbang.org/resource/image/74/ae/7482bb6686181c6566c9c770885434ae.png"> 
</div> <div class="se-ec34cd3d " data-slate-type="paragraph" data-slate-object="block" data-key="604"> 
<span data-slate-object="text" data-key="605"><span data-slate-leaf="true" data-offset-key="605:0" 
data-first-offset="true"><span data-slate-string="true">当我们像图中那样操作时，基本可以混合出任意的颜色，或者是在颜色全加满时照片变为纯白，颜色全删去时照片变为纯黑。</span></span></span> 
</div> <div class="se-9caeb6a3" data-slate-type="image" data-slate-object="block" data-key="606"> 
<img class="se-4e106af5" src="https://static001.geekbang.org/resource/image/be/05/be704cbf384c2deedea58f5aef897005.png"> 
</div> <div class="se-13329dfb " data-slate-type="paragraph" data-slate-object="block" data-key="607"> 
<span data-slate-object="text" data-key="608"><span data-slate-leaf="true" data-offset-key="608:0" 
data-first-offset="true"><span data-slate-string="true">在 Snapseed 的预设曲线里，我们可以看到这些滤镜是如何通过曲线来搭建的，这对我们有着一定的参考作用。曲线有着非常大的自由度，这就意味着它很难控制，所以我们讲到这里，仅仅是走出了掌握曲线之路的第一步。</span></span></span> 
</div> <div class="se-a8b446ba " data-slate-type="paragraph" data-slate-object="block" data-key="609"></div> 
<div class="se-e82f12ea se-1d8c83d9" data-slate-type="paragraph" data-slate-object="block" 
data-key="610"> <span data-slate-object="text" data-key="611"><span data-slate-leaf="true" 
data-offset-key="611:0" data-first-offset="true"><span class="se-a2065c21" data-slate-type="bold" 
data-slate-object="mark"><span data-slate-string="true">白平衡</span></span></span></span> </div> 
<div class="se-b03554b6" data-slate-type="image" data-slate-object="block" data-key="612"> 
<img class="se-a9ba0fcf" src="https://static001.geekbang.org/resource/image/db/1d/db1f70f6cbc35a78888bb4c41b9ca61d.png"> 
</div> <div class="se-60ef4494 " data-slate-type="paragraph" data-slate-object="block" data-key="613"> 
<span data-slate-object="text" data-key="614"><span data-slate-leaf="true" data-offset-key="614:0" 
data-first-offset="true"><span data-slate-string="true">白平衡里提供色温和着色，与 VSCO 里的色温和色调相对应，也是冷暖和绿紫两个方向的调整。在底部的三个选项里，分别对应着自动调整、调整工具、取色调整。</span></span></span> 
</div> <div class="se-81d6d7ba " data-slate-type="paragraph" data-slate-object="block" data-key="615"></div> 
<div class="se-ab6e13d6 se-1c6ccf27" data-slate-type="paragraph" data-slate-object="block" 
data-key="616"> <span data-slate-object="text" data-key="617"><span data-slate-leaf="true" 
data-offset-key="617:0" data-first-offset="true"><span class="se-b88e6dc2" data-slate-type="bold" 
data-slate-object="mark"><span data-slate-string="true">剪裁、旋转、透视</span></span></span></span> 
</div> <div class="se-4ccf3198" data-slate-type="image" data-slate-object="block" data-key="618"> 
<img class="se-11e67369" src="https://static001.geekbang.org/resource/image/27/a6/278449c7e97d876deed1d54b9edf18a6.png"> 
</div> <div class="se-b0118f44 " data-slate-type="paragraph" data-slate-object="block" data-key="619"> 
<span data-slate-object="text" data-key="620"><span data-slate-leaf="true" data-offset-key="620:0" 
data-first-offset="true"><span data-slate-string="true">剪裁、旋转、透视这三个工具，Snapseed 里分为了三个小工具，但实际上它们属于一类调整。其中剪裁和旋转不必多说，透视工具比 
VSCO 的更加完善，着重说一下。</span></span></span> </div> <div class="se-add16685" data-slate-type="image" 
data-slate-object="block" data-key="621"> <img class="se-311786de" src="https://static001.geekbang.org/resource/image/7f/78/7f93cfbf627b585a9bdd14d7875a8178.png"> 
</div> <div class="se-aa70e03a " data-slate-type="paragraph" data-slate-object="block" data-key="622"> 
<span data-slate-object="text" data-key="623"><span data-slate-leaf="true" data-offset-key="623:0" 
data-first-offset="true"><span data-slate-string="true">在透视调整栏的底部，也有三个选项，分别对应调整方式、填充色和自动调整。“自动调整”你可以试一试，但由于参考线问题，经常出错。</span></span></span> 
</div> <div class="se-4ef443fe " data-slate-type="paragraph" data-slate-object="block" data-key="624"> 
<span data-slate-object="text" data-key="625"><span data-slate-leaf="true" data-offset-key="625:0" 
data-first-offset="true"><span data-slate-string="true">在正式调整前，建议先根据自己的图片情况调整填充色。在绝大部分情况下，建议选择黑色或白色，因为智能填色是有局限性的，情况一旦很复杂，就会像图片上那样变得不自然。</span></span></span> 
</div> <div class="se-1fe1c137" data-slate-type="image" data-slate-object="block" data-key="626"> 
<img class="se-60e11018" src="https://static001.geekbang.org/resource/image/09/8a/09973b7f9a40d9e1b3cb1015a87c848a.png"> 
</div> <div class="se-86d36fcf " data-slate-type="paragraph" data-slate-object="block" data-key="627"> 
<span data-slate-object="text" data-key="628"><span data-slate-leaf="true" data-offset-key="628:0" 
data-first-offset="true"><span data-slate-string="true">如果照片的边缘比较好处理，例如大海、草原、平面等，就可以尝试用用智能填色。</span></span></span> 
</div> <div class="se-4f96a038" data-slate-type="image" data-slate-object="block" data-key="629"> 
<img class="se-a85aa2cb" src="https://static001.geekbang.org/resource/image/1b/f5/1b6c68929b0f22fd5af1c7f3b8744af5.png"> 
</div> <div class="se-6e7e2e70 " data-slate-type="paragraph" data-slate-object="block" data-key="630"> 
<span data-slate-object="text" data-key="631"><span data-slate-leaf="true" data-offset-key="631:0" 
data-first-offset="true"><span data-slate-string="true">在调整方式里，Snapseed 提供倾斜、旋转、缩放和自由四种方式，调整的用途在上节课里已经讲过，这里说一下缩放的用途。</span></span></span> 
</div> <div class="se-fd397303 " data-slate-type="paragraph" data-slate-object="block" data-key="632"> 
<span data-slate-object="text" data-key="633"><span data-slate-leaf="true" data-offset-key="633:0" 
data-first-offset="true"><span data-slate-string="true">在上图的例子中，我们对建筑进行了大幅度的纠正，这导致建筑的高度被压缩。这时候，我们就可以利用缩放来改变图片的高度比例，以还原到接近真实情况。</span></span></span> 
</div> <div class="se-996492c9 " data-slate-type="paragraph" data-slate-object="block" data-key="634"> 
<span data-slate-object="text" data-key="635"><span data-slate-leaf="true" data-offset-key="635:0" 
data-first-offset="true"><span class="se-03013a22" data-slate-type="bold" data-slate-object="mark"><span 
data-slate-string="true">Snapseed 的透视工具比 VSCO 更加完善，但调整的算法并没有 SKRWT 好，如果你有大幅度调整的需求，使用 SKRWT 
来处理是更好的选择。</span></span></span></span> </div> <div class="se-ab51f64c " data-slate-type="paragraph" 
data-slate-object="block" data-key="636"></div> <div class="se-d500b57a se-c96290b8" data-slate-type="paragraph" 
data-slate-object="block" data-key="637"> <span data-slate-object="text" data-key="638"><span 
data-slate-leaf="true" data-offset-key="638:0" data-first-offset="true"><span class="se-e25c37b6" 
data-slate-type="bold" data-slate-object="mark"><span data-slate-string="true">色调对比度</span></span></span></span> 
</div> <div class="se-f0375d76" data-slate-type="image" data-slate-object="block" data-key="639"> 
<img class="se-0cfe49e9" src="https://static001.geekbang.org/resource/image/5d/f3/5d7eada2314153c74cd4e985bf3324f3.png"> 
</div> <div class="se-5a82b300 " data-slate-type="paragraph" data-slate-object="block" data-key="640"> 
<span data-slate-object="text" data-key="641"><span data-slate-leaf="true" data-offset-key="641:0" 
data-first-offset="true"><span data-slate-string="true">色调对比度，从字面意思理解就可以——调整各个位置色调的对比度。它将画面分为高色调、中色调、低色调三个部分，可以分别调整对应的对比度。</span></span></span> 
</div> <div class="se-a30427e6 " data-slate-type="paragraph" data-slate-object="block" data-key="642"> 
<span data-slate-object="text" data-key="643"><span data-slate-leaf="true" data-offset-key="643:0" 
data-first-offset="true"><span data-slate-string="true">而保护高光和保护阴影在调整过色调对比度后可以起作用，实际上就是一种高光减弱和阴影补偿，以保护高光和阴影的细节。</span></span></span> 
</div> <div class="se-3818b27c " data-slate-type="paragraph" data-slate-object="block" data-key="644"></div> 
<div class="se-888f9f60 se-5c53efc1" data-slate-type="paragraph" data-slate-object="block" 
data-key="645"> <span data-slate-object="text" data-key="646"><span data-slate-leaf="true" 
data-offset-key="646:0" data-first-offset="true"><span class="se-30913e5c" data-slate-type="bold" 
data-slate-object="mark"><span data-slate-string="true">晕影</span></span></span></span> </div> 
<div class="se-dd7c5735" data-slate-type="image" data-slate-object="block" data-key="647"> 
<img class="se-ac05134b" src="https://static001.geekbang.org/resource/image/fe/1d/fe4d6edc4047badcc72b028ef8efce1d.png"> 
</div> <div class="se-d2bd3e20 " data-slate-type="paragraph" data-slate-object="block" data-key="648"> 
<span data-slate-object="text" data-key="649"><span data-slate-leaf="true" data-offset-key="649:0" 
data-first-offset="true"><span data-slate-string="true">晕影，即暗角调整。在这个工具里，我们可以通过双手捏合缩放来调整圆圈大小，以控制调整范围。在这个圆圈的内外，我们可以分别调整亮度，也就是外部亮度和内部亮度。</span></span></span> 
</div> <div class="se-4a5d27a9" data-slate-type="image" data-slate-object="block" data-key="650"> 
<img class="se-18c781fa" src="https://static001.geekbang.org/resource/image/4b/9a/4b74ae793ad88d7823288bff07a9189a.png"> 
</div> <div class="se-5369f0a7 " data-slate-type="paragraph" data-slate-object="block" data-key="651"> 
<span data-slate-object="text" data-key="652"><span data-slate-leaf="true" data-offset-key="652:0" 
data-first-offset="true"><span data-slate-string="true">在实际使用时，由于 Snapseed 的暗角调整范围比较大，比较容易调出不自然的状态，一定注意不要调整过度。</span></span></span> 
</div> <div class="se-b0786ea8 " data-slate-type="paragraph" data-slate-object="block" data-key="653"> 
<span data-slate-object="text" data-key="654"><span data-slate-leaf="true" data-offset-key="654:0" 
data-first-offset="true"><span class="se-adeff3da" data-slate-type="bold" data-slate-object="mark"><span 
data-slate-string="true">　</span></span></span></span> </div> <h2 class="se-bcacfda0" data-slate-type="heading" 
data-slate-object="block" data-key="655"> <div class="se-5c3ab415 se-913e620f" data-slate-type="paragraph" 
data-slate-object="block" data-key="656"> <span data-slate-object="text" data-key="657"><span 
data-slate-leaf="true" data-offset-key="657:0" data-first-offset="true"><span data-slate-string="true">局部处理：精细化处理</span></span></span> 
</div></h2> <div class="se-0fe10092" data-slate-type="image" data-slate-object="block" data-key="658"> 
<img class="se-d39deced" src="https://static001.geekbang.org/resource/image/05/9d/052d5bf96c4a26c37d578856cefbda9d.png"> 
</div> <div class="se-1281a3a6 " data-slate-type="paragraph" data-slate-object="block" data-key="659"> 
<span data-slate-object="text" data-key="660"><span data-slate-leaf="true" data-offset-key="660:0" 
data-first-offset="true"><span data-slate-string="true">Snapseed 的局部处理，是其一大特色，也是我经常用于替代 VSCO 
进行细节修复的原因之一。这节课将工具里的局部、画笔以及修复分到这里来讲解，其中，画笔还包括了在操作记录里的画笔，那是一支神奇的笔。</span></span></span> </div> 
<div class="se-12b9112d " data-slate-type="paragraph" data-slate-object="block" data-key="661"></div> 
<div class="se-7caad2b6 se-f4279c18" data-slate-type="paragraph" data-slate-object="block" 
data-key="662"> <span data-slate-object="text" data-key="663"><span data-slate-leaf="true" 
data-offset-key="663:0" data-first-offset="true"><span class="se-76fb00fb" data-slate-type="bold" 
data-slate-object="mark"><span data-slate-string="true">局部</span></span></span></span> </div> 
<div class="se-40b25f81" data-slate-type="image" data-slate-object="block" data-key="664"> 
<img class="se-ae0224f4" src="https://static001.geekbang.org/resource/image/eb/26/ebae57b169ba9bc88e918e24f113a726.png"> 
</div> <div class="se-53ea8069 " data-slate-type="paragraph" data-slate-object="block" data-key="665"> 
<span data-slate-object="text" data-key="666"><span data-slate-leaf="true" data-offset-key="666:0" 
data-first-offset="true"><span data-slate-string="true">在局部处理里，你可以添加一个个小点来选择自己处理的地方，双指捏合缩放可以调整当前小点的应用范围。为了画面更自然，这个小点还有色彩识别的能力，只会调整应用范围内画面色彩接近的部分。</span></span></span> 
</div> <div class="se-0febf1bd" data-slate-type="image" data-slate-object="block" data-key="667"> 
<img class="se-c8ba071b" src="https://static001.geekbang.org/resource/image/4f/67/4f19d040946214ecef8e2745355b2967.png"> 
</div> <div class="se-b899a6f5 " data-slate-type="paragraph" data-slate-object="block" data-key="668"> 
<span data-slate-object="text" data-key="669"><span data-slate-leaf="true" data-offset-key="669:0" 
data-first-offset="true"><span data-slate-string="true">这些小点提供了亮度、对比度、饱和度、结构四个调整项，我们可以通过上下滑动来进行切换，左右滑动进行调整。单击某个小点，还可以进行剪切、拷贝、删除或重置。</span></span></span> 
</div> <div class="se-c66af837" data-slate-type="image" data-slate-object="block" data-key="670"> 
<img class="se-99b188bb" src="https://static001.geekbang.org/resource/image/1d/c8/1d9c1db47c57da73795fff924b7df0c8.png"> 
</div> <div class="se-27e32f95 " data-slate-type="paragraph" data-slate-object="block" data-key="671"> 
<span data-slate-object="text" data-key="672"><span data-slate-leaf="true" data-offset-key="672:0" 
data-first-offset="true"><span data-slate-string="true">在这张示例图中，我希望将画面前景的建筑处理为完全纯黑的剪影。在实际操作时，利用局部的小点调整建筑的亮度和结构，分别降低亮度和弱化细节，然后在建筑的各个地方复制粘贴小点，最终达到我希望的效果。</span></span></span> 
</div> <div class="se-c62e38f3" data-slate-type="image" data-slate-object="block" data-key="673"> 
<img class="se-1a03b1d6" src="https://static001.geekbang.org/resource/image/a9/49/a9cdff445b9e1dc2c87ebf2316434149.png"> 
</div> <div class="se-edcd84cb " data-slate-type="paragraph" data-slate-object="block" data-key="674"> 
<span data-slate-object="text" data-key="675"><span data-slate-leaf="true" data-offset-key="675:0" 
data-first-offset="true"><span data-slate-string="true">在局部处理时，我们还可以放大图片，以进行更为细致的处理。比如，通过反复的处理，把这样一张照片变为一张极简风格的照片。</span></span></span> 
</div> <div class="se-a26fba5a " data-slate-type="paragraph" data-slate-object="block" data-key="676"></div> 
<div class="se-2cb2c209 se-2bac24cd" data-slate-type="paragraph" data-slate-object="block" 
data-key="677"> <span data-slate-object="text" data-key="678"><span data-slate-leaf="true" 
data-offset-key="678:0" data-first-offset="true"><span class="se-88fb2490" data-slate-type="bold" 
data-slate-object="mark"><span data-slate-string="true">画笔</span></span></span></span> </div> 
<div class="se-28d76d44 " data-slate-type="paragraph" data-slate-object="block" data-key="679"> 
<span data-slate-object="text" data-key="680"><span data-slate-leaf="true" data-offset-key="680:0" 
data-first-offset="true"><span data-slate-string="true">Snapseed 里有两支画笔，分别是“工具内的画笔”和“操作记录里的画笔”。这两支画笔的操作方法都一样，但从效果上来说，在操作记录里的那支画笔有着更大的创造性。</span></span></span> 
</div> <div class="se-9b156bc3" data-slate-type="image" data-slate-object="block" data-key="681"> 
<img class="se-01aab4e1" src="https://static001.geekbang.org/resource/image/85/69/852411d3c3a125c78b1ebfeedc337369.png"> 
</div> <div class="se-d687857c " data-slate-type="paragraph" data-slate-object="block" data-key="682"> 
<span data-slate-object="text" data-key="683"><span data-slate-leaf="true" data-offset-key="683:0" 
data-first-offset="true"><span data-slate-string="true">我们先来看看工具内的画笔。</span></span></span> 
</div> <div class="se-48d42d9d " data-slate-type="paragraph" data-slate-object="block" data-key="684"> 
<span data-slate-object="text" data-key="685"><span data-slate-leaf="true" data-offset-key="685:0" 
data-first-offset="true"><span data-slate-string="true">这里提供加光减光、曝光、色温、饱和度四个调整项，我们可以在照片上进行涂抹以选择调整项应用的范围，点击右下角的小眼睛可以显示或隐藏涂抹的范围。</span></span></span> 
</div> <div class="se-50022f3b" data-slate-type="image" data-slate-object="block" data-key="686"> 
<img class="se-b2730bd3" src="https://static001.geekbang.org/resource/image/1e/24/1e42426f595b9f89721282752dd7d224.png"> 
</div> <div class="se-62ae0278 " data-slate-type="paragraph" data-slate-object="block" data-key="687"> 
<span data-slate-object="text" data-key="688"><span data-slate-leaf="true" data-offset-key="688:0" 
data-first-offset="true"><span data-slate-string="true">在例图中，我对画面顶部的天空部分选择减光 -5 并涂抹，对画面底部的花丛部分选择饱和度 
+10 并涂抹，希望通过这样的操作来使得天空部分亮度降低，前景的花丛饱和度提高。</span></span></span> </div> <div class="se-9d641db9" 
data-slate-type="image" data-slate-object="block" data-key="689"> <img class="se-fb8395fe" 
src="https://static001.geekbang.org/resource/image/72/db/7252d18167e6089550c61bd42b50a1db.png"> 
</div> <div class="se-71023ff8 " data-slate-type="paragraph" data-slate-object="block" data-key="690"> 
<span data-slate-object="text" data-key="691"><span data-slate-leaf="true" data-offset-key="691:0" 
data-first-offset="true"><span data-slate-string="true">最后我们可以看一下处理前后的效果对比：</span></span></span> 
</div> <div class="se-bda103e2" data-slate-type="image" data-slate-object="block" data-key="692"> 
<img class="se-aeea41ab" src="https://static001.geekbang.org/resource/image/ac/1a/ac5e20c4eef03b5707a2fdd3386c771a.png"> 
</div> <div class="se-4e6562aa " data-slate-type="paragraph" data-slate-object="block" data-key="693"> 
<span data-slate-object="text" data-key="694"><span data-slate-leaf="true" data-offset-key="694:0" 
data-first-offset="true"><span data-slate-string="true">除了工具里的画笔，我们还可以在操作记录里启用画笔，通过这样的方式让每个调整项都变成局部调整。比如，我调整了上面这张照片的结构，但最后通过画笔，我让结构的增强只应用在了花丛部分。</span></span></span> 
</div> <div class="se-63e4640f" data-slate-type="image" data-slate-object="block" data-key="695"> 
<img class="se-6cbcf777" src="https://static001.geekbang.org/resource/image/3c/16/3cb7e3ca3c3e39dfe8adc2dca1355316.png"> 
</div> <div class="se-b4104cb2 " data-slate-type="paragraph" data-slate-object="block" data-key="696"> 
<span data-slate-object="text" data-key="697"><span data-slate-leaf="true" data-offset-key="697:0" 
data-first-offset="true"><span data-slate-string="true">这是黑白滤镜再通过画笔处理后的效果，这是一个糟糕的、但对比明显的效果，主要是为了方便你理解画笔的功能。</span></span></span> 
</div> <div class="se-f4adf885 " data-slate-type="paragraph" data-slate-object="block" data-key="698"></div> 
<div class="se-2e607dd7 se-fef6192e" data-slate-type="paragraph" data-slate-object="block" 
data-key="699"> <span data-slate-object="text" data-key="700"><span data-slate-leaf="true" 
data-offset-key="700:0" data-first-offset="true"><span class="se-a84750d1" data-slate-type="bold" 
data-slate-object="mark"><span data-slate-string="true">修复</span></span></span></span> </div> 
<div class="se-17a2ff8c" data-slate-type="image" data-slate-object="block" data-key="701"> 
<img class="se-e790d226" src="https://static001.geekbang.org/resource/image/3a/85/3aae1a8a32eae731073dd17e0f85bc85.png"> 
</div> <div class="se-af7d3ede " data-slate-type="paragraph" data-slate-object="block" data-key="702"> 
<span data-slate-object="text" data-key="703"><span data-slate-leaf="true" data-offset-key="703:0" 
data-first-offset="true"><span data-slate-string="true">修复工具可以帮助我们去掉画面中一些不需要的物体。由于这是一个智能修复工具，原理是利用修复区域周围的内容来填补修复区域，所以对于相对复杂的场景，修复效果并不理想，主要还是用于污点的处理。</span></span></span> 
</div> <div class="se-ca86d7ea" data-slate-type="image" data-slate-object="block" data-key="704"> 
<img class="se-babaf5cd" src="https://static001.geekbang.org/resource/image/4b/cc/4bdb6a26ef3024c0b7484bd7af96aecc.png"> 
</div> <div class="se-a96d618e " data-slate-type="paragraph" data-slate-object="block" data-key="705"> 
<span data-slate-object="text" data-key="706"><span data-slate-leaf="true" data-offset-key="706:0" 
data-first-offset="true"><span class="se-00ea5047" data-slate-type="bold" data-slate-object="mark"><span 
data-slate-string="true">在实际处理时，建议放大照片来进行精细的操作，这样处理后，即便是有小瑕疵，回到正常照片大小时也不易被发现。</span></span></span></span> 
</div> <div class="se-e25d6bdf " data-slate-type="paragraph" data-slate-object="block" data-key="707"> 
<span data-slate-object="text" data-key="708"><span data-slate-leaf="true" data-offset-key="708:0" 
data-first-offset="true"><span class="se-8eec2e5d" data-slate-type="bold" data-slate-object="mark"><span 
data-slate-string="true">　</span></span></span></span> </div> <h2 class="se-6471865c" data-slate-type="heading" 
data-slate-object="block" data-key="709"> <div class="se-722821fb se-a459dd68" data-slate-type="paragraph" 
data-slate-object="block" data-key="710"> <span data-slate-object="text" data-key="711"><span 
data-slate-leaf="true" data-offset-key="711:0" data-first-offset="true"><span data-slate-string="true">特色功能：创造性工作</span></span></span> 
</div></h2> <div class="se-bac92fc8" data-slate-type="image" data-slate-object="block" data-key="712"> 
<img class="se-9a618bd7" src="https://static001.geekbang.org/resource/image/9e/d9/9e422dbd0a0e09b01de123d7826fa0d9.png"> 
</div> <div class="se-908188bf " data-slate-type="paragraph" data-slate-object="block" data-key="713"> 
<span data-slate-object="text" data-key="714"><span data-slate-leaf="true" data-offset-key="714:0" 
data-first-offset="true"><span data-slate-string="true">特色功能包括展开、镜头模糊、双重曝光、文字和相框这样一些相对少见的工具，但这些工具有的非常实用，有的可以帮助我们做一些创造性的工作。</span></span></span> 
</div> <div class="se-72c83231 " data-slate-type="paragraph" data-slate-object="block" data-key="715"></div> 
<div class="se-9267a077 se-2c779d57" data-slate-type="paragraph" data-slate-object="block" 
data-key="716"> <span data-slate-object="text" data-key="717"><span data-slate-leaf="true" 
data-offset-key="717:0" data-first-offset="true"><span class="se-03d48afd" data-slate-type="bold" 
data-slate-object="mark"><span data-slate-string="true">展开</span></span></span></span> </div> 
<div class="se-1d2b5e4f" data-slate-type="image" data-slate-object="block" data-key="718"> 
<img class="se-9b13eb32" src="https://static001.geekbang.org/resource/image/f0/24/f075cc1d8ce7ba30208c0fed44558924.png"> 
</div> <div class="se-1f39c467 " data-slate-type="paragraph" data-slate-object="block" data-key="719"> 
<span data-slate-object="text" data-key="720"><span data-slate-leaf="true" data-offset-key="720:0" 
data-first-offset="true"><span data-slate-string="true">利用展开工具，我们可以将照片四周边缘扩大，以重新调整构图。与透视调整时一样，展开工具同样提供了智能填色、白色、黑色三个选项。</span></span></span> 
</div> <div class="se-6aa02498" data-slate-type="image" data-slate-object="block" data-key="721"> 
<img class="se-c7ba100d" src="https://static001.geekbang.org/resource/image/e3/e4/e3d4714c57c21d654d05e68db8a46ee4.jpg"> 
</div> <div class="se-106d52ca " data-slate-type="paragraph" data-slate-object="block" data-key="722"> 
<span data-slate-object="text" data-key="723"><span data-slate-leaf="true" data-offset-key="723:0" 
data-first-offset="true"><span data-slate-string="true">局部处理中的那张例图，通过展开工具处理后得到这样的效果。</span></span></span> 
</div> <div class="se-7dfe1bf1 " data-slate-type="paragraph" data-slate-object="block" data-key="724"></div> 
<div class="se-55c39e70 se-d98dd47a" data-slate-type="paragraph" data-slate-object="block" 
data-key="725"> <span data-slate-object="text" data-key="726"><span data-slate-leaf="true" 
data-offset-key="726:0" data-first-offset="true"><span class="se-015aba84" data-slate-type="bold" 
data-slate-object="mark"><span data-slate-string="true">镜头模糊</span></span></span></span> </div> 
<div class="se-9803a4f7" data-slate-type="image" data-slate-object="block" data-key="727"> 
<img class="se-dfbc7f8c" src="https://static001.geekbang.org/resource/image/7c/a0/7c8efffd98649c0bf24bfc863b3c9fa0.png"> 
</div> <div class="se-74f1a38b " data-slate-type="paragraph" data-slate-object="block" data-key="728"> 
<span data-slate-object="text" data-key="729"><span data-slate-leaf="true" data-offset-key="729:0" 
data-first-offset="true"><span data-slate-string="true">在镜头模糊工具里，我们可以切换模糊范围的呈现方式（圆形或矩形），调整模糊强度、过渡长度以及晕影强度。利用这个工具，我们可以模拟大光圈的虚化效果，但实际上这很难模拟得自然。所以我的用法是：</span></span></span><span 
data-slate-object="text" data-key="730"><span data-slate-leaf="true" data-offset-key="730:0" 
data-first-offset="true"><span class="se-a7ddc223" data-slate-type="bold" data-slate-object="mark"><span 
data-slate-string="true">简单景深关系的模拟、解决照片的噪点。</span></span></span></span> </div> <div class="se-4fe66cbe" 
data-slate-type="image" data-slate-object="block" data-key="731"> <img class="se-4671d9d5" 
src="https://static001.geekbang.org/resource/image/df/10/df29fe94e6381d34b7c8bcf435002110.png"> 
</div> <div class="se-c60b30c5 " data-slate-type="paragraph" data-slate-object="block" data-key="732"> 
<span data-slate-object="text" data-key="733"><span data-slate-leaf="true" data-offset-key="733:0" 
data-first-offset="true"><span data-slate-string="true">比如图中这个场景，景深关系相对简单，我们可以通过矩形来模拟一个前后关系，让倒影部分虚化。</span></span></span> 
</div> <div class="se-cde69567" data-slate-type="image" data-slate-object="block" data-key="734"> 
<img class="se-a252e408" src="https://static001.geekbang.org/resource/image/bc/6e/bcc145c4e88ea676ccc14f6fd9e9fa6e.png"> 
</div> <div class="se-51c7ab62 " data-slate-type="paragraph" data-slate-object="block" data-key="735"> 
<span data-slate-object="text" data-key="736"><span data-slate-leaf="true" data-offset-key="736:0" 
data-first-offset="true"><span data-slate-string="true">最终调整出来的对比效果如图，整体还是比较自然。</span></span></span><span 
data-slate-object="text" data-key="737"><span data-slate-leaf="true" data-offset-key="737:0" 
data-first-offset="true"><span class="se-8a473eed" data-slate-type="bold" data-slate-object="mark"><span 
data-slate-string="true">但是，这个效果是不符合物理规律的，在物理上是不可能实现的，所以咱们尽量不要随便用它来模拟大光圈效果，保不齐一个不小心就弄错了。</span></span></span></span> 
</div> <div class="se-fc464a8a" data-slate-type="image" data-slate-object="block" data-key="738"> 
<img class="se-72855456" src="https://static001.geekbang.org/resource/image/b3/44/b35f4afe35ebf8411cd4aad6f7cdf144.png"> 
</div> <div class="se-056fca86 " data-slate-type="paragraph" data-slate-object="block" data-key="739"> 
<span data-slate-object="text" data-key="740"><span data-slate-leaf="true" data-offset-key="740:0" 
data-first-offset="true"><span data-slate-string="true">在一些光线较弱的照片里，画面边缘往往存在一些噪点问题，如果恰好这些部分的信息不太重要，那么我们就可以使用镜头模糊来解决一下噪点问题。</span></span></span> 
</div> <div class="se-66413172 " data-slate-type="paragraph" data-slate-object="block" data-key="741"> 
<span data-slate-object="text" data-key="742"><span data-slate-leaf="true" data-offset-key="742:0" 
data-first-offset="true"><span data-slate-string="true">看例图，天空部分有一些相对明显的噪点，我通过镜头模糊工具，使得顶部模糊，最终在不影响画面内容的情况下抹掉了噪点。（第三张为原图）</span></span></span> 
</div> <div class="se-8d5af2e1 " data-slate-type="paragraph" data-slate-object="block" data-key="743"></div> 
<div class="se-aaeca67a se-a71861bf" data-slate-type="paragraph" data-slate-object="block" 
data-key="744"> <span data-slate-object="text" data-key="745"><span data-slate-leaf="true" 
data-offset-key="745:0" data-first-offset="true"><span class="se-0c1abf50" data-slate-type="bold" 
data-slate-object="mark"><span data-slate-string="true">双重曝光</span></span></span></span> </div> 
<div class="se-62d1499d" data-slate-type="image" data-slate-object="block" data-key="746"> 
<img class="se-870d06d1" src="https://static001.geekbang.org/resource/image/8b/bd/8b839e90225ce7c5c97c3612baa772bd.png"> 
</div> <div class="se-a8e01943 " data-slate-type="paragraph" data-slate-object="block" data-key="747"> 
<span data-slate-object="text" data-key="748"><span data-slate-leaf="true" data-offset-key="748:0" 
data-first-offset="true"><span data-slate-string="true">利用双重曝光功能，我们可以制作出一些极具创造性的照片。在 Snapseed 
的双重曝光工具里，底部三个选项分别为添加新照片、混合模式以及叠加照片的不透明度。</span></span></span> </div> <div class="se-015bc7a6 
" data-slate-type="paragraph" data-slate-object="block" data-key="749"> <span data-slate-object="text" 
data-key="750"><span data-slate-leaf="true" data-offset-key="750:0" data-first-offset="true"><span 
data-slate-string="true">双重曝光的表现方式有很多种，同一张照片叠加、同一风格照片叠加或者不同风格照片叠加都可以。</span></span></span> 
</div> <div class="se-c71fd0ca " data-slate-type="paragraph" data-slate-object="block" data-key="751"> 
<span data-slate-object="text" data-key="752"><span data-slate-leaf="true" data-offset-key="752:0" 
data-first-offset="true"><span data-slate-string="true">我们首先演示的是同一张照片叠加。新增照片后，混合模式保持默认，双手捏合缩放照片来调整大小和位置，然后调整不透明度。</span></span></span> 
</div> <div class="se-b78a2e45" data-slate-type="image" data-slate-object="block" data-key="753"> 
<img class="se-00506803" src="https://static001.geekbang.org/resource/image/da/f7/dae90de35e4e0515c613522bcec349f7.png"> 
</div> <div class="se-c1c41e09 " data-slate-type="paragraph" data-slate-object="block" data-key="754"> 
<span data-slate-object="text" data-key="755"><span data-slate-leaf="true" data-offset-key="755:0" 
data-first-offset="true"><span data-slate-string="true">随后我们还可以在操作记录里利用画笔工具进一步调整双重曝光的混合范围。这张图片我只是希望对中间部分的建筑做一些混合。最终完成的效果图如下：</span></span></span> 
</div> <div class="se-1e8d4815" data-slate-type="image" data-slate-object="block" data-key="756"> 
<img class="se-f2d40d80" src="https://static001.geekbang.org/resource/image/9d/07/9dc515442a55e49888823cd750399607.jpg"> 
</div> <div class="se-9b4ece55 " data-slate-type="paragraph" data-slate-object="block" data-key="757"> 
<span data-slate-object="text" data-key="758"><span data-slate-leaf="true" data-offset-key="758:0" 
data-first-offset="true"><span data-slate-string="true">风格接近或情绪接近的照片也可以用于双重曝光制作，我的建议是要色调一致，例如我选择的两张同场景的黑白照片。同样，选择合适的混合模式以及不透明度后，再利用画笔来进行调整。最终完成的效果图如下：</span></span></span> 
</div> <div class="se-dffe4320" data-slate-type="image" data-slate-object="block" data-key="759"> 
<img class="se-41a6a291" src="https://static001.geekbang.org/resource/image/ca/12/ca8f508b400af60ba90a52bfce0a7812.png"> 
</div> <div class="se-e33129ba" data-slate-type="image" data-slate-object="block" data-key="760"> 
<img class="se-566d35c0" src="https://static001.geekbang.org/resource/image/08/aa/08498c961c80d4bac6290f3c94a072aa.jpg"> 
</div> <div class="se-535317f3 " data-slate-type="paragraph" data-slate-object="block" data-key="761"> 
<span data-slate-object="text" data-key="762"><span data-slate-leaf="true" data-offset-key="762:0" 
data-first-offset="true"><span data-slate-string="true">在网上搜“双重曝光”时，我们可以看到大量人像与场景混合的照片。这一类照片的重点是：人像照片需要足够干净，就像我下面给出的例图这样。</span></span></span> 
</div> <div class="se-6ed0a0f3 " data-slate-type="paragraph" data-slate-object="block" data-key="763"> 
<span data-slate-object="text" data-key="764"><span data-slate-leaf="true" data-offset-key="764:0" 
data-first-offset="true"><span data-slate-string="true">在选择混合模式时，需要根据实际照片的情况来选择。这张图我选择的是调亮，这样子画面亮部（背景和面部）不会混合，而暗部（头发部分）则混合了照片。</span></span></span> 
</div> <div class="se-4ac870fc" data-slate-type="image" data-slate-object="block" data-key="765"> 
<img class="se-4e48146f" src="https://static001.geekbang.org/resource/image/47/07/479a50394087e43f5134e3c641e4ea07.png"> 
</div> <div class="se-57880f39 " data-slate-type="paragraph" data-slate-object="block" data-key="766"></div> 
<div class="se-8dd8d462 se-9eabb217" data-slate-type="paragraph" data-slate-object="block" 
data-key="767"> <span data-slate-object="text" data-key="768"><span data-slate-leaf="true" 
data-offset-key="768:0" data-first-offset="true"><span class="se-018114cd" data-slate-type="bold" 
data-slate-object="mark"><span data-slate-string="true">文字</span></span></span></span> </div> 
<div class="se-609dd008" data-slate-type="image" data-slate-object="block" data-key="769"> 
<img class="se-d516ffb0" src="https://static001.geekbang.org/resource/image/66/b6/66bf46690a0bda0a24fda241ad70a9b6.png"> 
</div> <div class="se-26d70113 " data-slate-type="paragraph" data-slate-object="block" data-key="770"> 
<span data-slate-object="text" data-key="771"><span data-slate-leaf="true" data-offset-key="771:0" 
data-first-offset="true"><span data-slate-string="true">文字工具的功能其实比较简单，常规的是文字颜色、字体、不透明度调整，此外还有一个相对特殊的倒置功能，但重点是我们可以配合画笔来做一些有趣的事情。</span></span></span> 
</div> <div class="se-f00f92dd" data-slate-type="image" data-slate-object="block" data-key="772"> 
<img class="se-7ae37a6c" src="https://static001.geekbang.org/resource/image/b7/d5/b71497173febf6b3b938b3ed24e0c9d5.png"> 
</div> <div class="se-b731d122 " data-slate-type="paragraph" data-slate-object="block" data-key="773"> 
<span data-slate-object="text" data-key="774"><span data-slate-leaf="true" data-offset-key="774:0" 
data-first-offset="true"><span data-slate-string="true">例如我输入空白文字，再选择倒置，使得整张画面都被覆盖。此时打开画笔工具，我们就可以在图片上画出自己想画的任意内容了。</span></span></span> 
</div> <div class="se-811fe105" data-slate-type="image" data-slate-object="block" data-key="775"> 
<img class="se-0c525c1f" src="https://static001.geekbang.org/resource/image/2a/0f/2a8a8c7c69b73e31dc0fb25580fbdc0f.png"> 
</div> <div class="se-59c272cc " data-slate-type="paragraph" data-slate-object="block" data-key="776"> 
<span data-slate-object="text" data-key="777"><span data-slate-leaf="true" data-offset-key="777:0" 
data-first-offset="true"><span data-slate-string="true">我们还可以利用画笔功能来创造出立体文字的效果。</span></span></span> 
</div> <div class="se-995708e3 " data-slate-type="paragraph" data-slate-object="block" data-key="778"></div> 
<div class="se-63770ce9 se-1fd9ba5b" data-slate-type="paragraph" data-slate-object="block" 
data-key="779"> <span data-slate-object="text" data-key="780"><span data-slate-leaf="true" 
data-offset-key="780:0" data-first-offset="true"><span class="se-809b6172" data-slate-type="bold" 
data-slate-object="mark"><span data-slate-string="true">相框</span></span></span></span> </div> 
<div class="se-ff36d9ad" data-slate-type="image" data-slate-object="block" data-key="781"> 
<img class="se-42247f9b" src="https://static001.geekbang.org/resource/image/b4/61/b4b94664b28776aa6e0573e891030e61.png"> 
</div> <div class="se-ed6de74b " data-slate-type="paragraph" data-slate-object="block" data-key="782"> 
<span data-slate-object="text" data-key="783"><span data-slate-leaf="true" data-offset-key="783:0" 
data-first-offset="true"><span data-slate-string="true">相框工具提供了多个相框样式，同时可以调整相框宽度。但我认为这个工具与 
Snapseed 的滤镜是在同一档的：不可用。一方面，它会减少画面内容，另一方面，Snapseed 里自带的相框确实不太好看，所以我个人不建议使用。</span></span></span> 
</div> <div class="se-854a50e7 " data-slate-type="paragraph" data-slate-object="block" data-key="784"> 
<span data-slate-object="text" data-key="785"><span data-slate-leaf="true" data-offset-key="785:0" 
data-first-offset="true"><span class="se-0f8600c9" data-slate-type="bold" data-slate-object="mark"><span 
data-slate-string="true">　</span></span></span></span> </div> <h2 class="se-ca7c827d" data-slate-type="heading" 
data-slate-object="block" data-key="786"> <div class="se-78dce38a se-3ee1b169" data-slate-type="paragraph" 
data-slate-object="block" data-key="787"> <span data-slate-object="text" data-key="788"><span 
data-slate-leaf="true" data-offset-key="788:0" data-first-offset="true"><span data-slate-string="true">最后小结一下</span></span></span> 
</div></h2> <div class="se-0131ada5" data-slate-type="image" data-slate-object="block" data-key="789"> 
<img class="se-084c8ede" src="https://static001.geekbang.org/resource/image/ef/55/ef167888256e216a9cfe97025a9d1d55.png"> 
</div> <div class="se-3e52308b " data-slate-type="paragraph" data-slate-object="block" data-key="790"> 
<span data-slate-object="text" data-key="791"><span data-slate-leaf="true" data-offset-key="791:0" 
data-first-offset="true"><span data-slate-string="true">Snapseed 对图片有着非常大的调整空间，配合可叠加操作这个特性，调整范围可以说是能被无限放大；局部和画笔工具可以帮助我们进行更加精准的画面处理，而一些特色功能搭配画笔使用，可以帮助我们搞出一些富有创意的图片。</span></span></span> 
</div> <div class="se-dd2b4943 " data-slate-type="paragraph" data-slate-object="block" data-key="792"> 
<span data-slate-object="text" data-key="793"><span data-slate-leaf="true" data-offset-key="793:0" 
data-first-offset="true"><span data-slate-string="true">可以看到，Snapseed 能做的事情很多，但想把它用好，不是短时间能完成的。</span></span></span><span 
data-slate-object="text" data-key="794"><span data-slate-leaf="true" data-offset-key="794:0" 
data-first-offset="true"><span class="se-ec3adb5a" data-slate-type="bold" data-slate-object="mark"><span 
data-slate-string="true">还是那句话：修图这件事，花时间动手尝试远比看更重要。</span></span></span></span> </div> <div 
class="se-c73c39e5 " data-slate-type="paragraph" data-slate-object="block" data-key="795"> 
<span data-slate-object="text" data-key="796"><span data-slate-leaf="true" data-offset-key="796:0" 
data-first-offset="true"><span class="se-e92e8ea8" data-slate-type="bold" data-slate-object="mark"><span 
data-slate-string="true">　</span></span></span></span> </div> <h2 class="se-421461cc" data-slate-type="heading" 
data-slate-object="block" data-key="797"> <div class="se-13656cf0 se-386b3dab" data-slate-type="paragraph" 
data-slate-object="block" data-key="798"> <span data-slate-object="text" data-key="799"><span 
data-slate-leaf="true" data-offset-key="799:0" data-first-offset="true"><span data-slate-string="true">课后小练习</span></span></span> 
</div></h2> <div class="se-1317ddc2 " data-slate-type="paragraph" data-slate-object="block" 
data-key="800"> <span data-slate-object="text" data-key="801"><span data-slate-leaf="true" 
data-offset-key="801:0" data-first-offset="true"><span data-slate-string="true">上节课的最后，你用 VSCO 
修好了一张照片，那这次，你把这张已经修好颜色了的照片再导进 Snapseed 试一试，看看还有哪些细节可以做优化。</span></span></span> </div> <div 
class="se-04fb4820 " data-slate-type="paragraph" data-slate-object="block" data-key="802"> 
<span data-slate-object="text" data-key="803"><span data-slate-leaf="true" data-offset-key="803:0" 
data-first-offset="true"><span data-slate-string="true">我们下节课就不见了，下节课是这整期课的最后一节，会由 Lufus 来讲，之后结束语的时候麥爷会归位。希望算上开篇词和结束语，这 
22 讲全看下来，你能真的有收获。那我们山高水远，江湖再见。</span></span></span> </div> </div>', body_summary='', bundle='book', 
delta=0, body_format='full_html', langcode='zh-hans', revision_id=725 where entity_id=725 
 {executed in 9 msec}
2020-11-23 19:32:06.412 INFO  jdbc.sqltiming Line:373 - select nodefiledd0_.nid as nid1_10_, nodefiledd0_.changed as changed2_10_, nodefiledd0_.created 
as created3_10_, nodefiledd0_.default_langcode as default_4_10_, nodefiledd0_.langcode as langcode5_10_, 
nodefiledd0_.promote as promote6_10_, nodefiledd0_.revision_translation_affected as revision7_10_, 
nodefiledd0_.status as status8_10_, nodefiledd0_.sticky as sticky9_10_, nodefiledd0_.title 
as title10_10_, nodefiledd0_.type as type11_10_, nodefiledd0_.uid as uid12_10_, nodefiledd0_.vid 
as vid13_10_ from node_field_data nodefiledd0_ where nodefiledd0_.nid=725 
 {executed in 2 msec}
2020-11-23 19:32:06.414 INFO  jdbc.resultsettable Line:610 - 
|----|-----------|-----------|-----------------|---------|--------|------------------------------|-------|-------|---------------------------------|-----|----|----|
|nid |changed    |created    |default_langcode |langcode |promote |revision_translation_affected |status |sticky |title                            |type |uid |vid |
|----|-----------|-----------|-----------------|---------|--------|------------------------------|-------|-------|---------------------------------|-----|----|----|
|725 |1606117090 |1606117090 |1                |zh-hans  |0       |1                             |1      |0      |19丨基础手机后期（下）：Snapseed使用攻略（@随你们去） |book |1   |725 |
|----|-----------|-----------|-----------------|---------|--------|------------------------------|-------|-------|---------------------------------|-----|----|----|

2020-11-23 19:32:06.418 INFO  jdbc.sqltiming Line:373 - select nodefieldr0_.nid as nid1_11_0_, nodefieldr0_.changed as changed2_11_0_, nodefieldr0_.created 
as created3_11_0_, nodefieldr0_.default_langcode as default_4_11_0_, nodefieldr0_.langcode 
as langcode5_11_0_, nodefieldr0_.promote as promote6_11_0_, nodefieldr0_.revision_translation_affected 
as revision7_11_0_, nodefieldr0_.status as status8_11_0_, nodefieldr0_.sticky as sticky9_11_0_, 
nodefieldr0_.title as title10_11_0_, nodefieldr0_.uid as uid11_11_0_, nodefieldr0_.vid as vid12_11_0_ 
from node_field_revision nodefieldr0_ where nodefieldr0_.nid=725 
 {executed in 1 msec}
2020-11-23 19:32:06.421 INFO  jdbc.resultsettable Line:610 - 
|---------|-----------|-----------|-----------------|---------|--------|------------------------------|-------|-------|---------------------------------|----|----|
|nid      |changed    |created    |default_langcode |langcode |promote |revision_translation_affected |status |sticky |title                            |uid |vid |
|---------|-----------|-----------|-----------------|---------|--------|------------------------------|-------|-------|---------------------------------|----|----|
|[unread] |1606117090 |1606117090 |1                |zh-hans  |0       |1                             |1      |0      |19丨基础手机后期（下）：Snapseed使用攻略（@随你们去） |1   |725 |
|---------|-----------|-----------|-----------------|---------|--------|------------------------------|-------|-------|---------------------------------|----|----|

2020-11-23 19:32:06.443 INFO  jdbc.sqltiming Line:373 - update node_field_data set changed=1606131126, created=1606131126, default_langcode=1, langcode='zh-hans', 
promote=0, revision_translation_affected=1, status=1, sticky=0, title='19丨基础手机后期（下）：Snapseed使用攻略（@随你们去）', 
type='book', uid=1, vid=725 where nid=725 
 {executed in 7 msec}
2020-11-23 19:32:06.445 INFO  jdbc.sqltiming Line:373 - update node_field_revision set changed=1606131126, created=1606131126, default_langcode=1, 
langcode='zh-hans', promote=0, revision_translation_affected=1, status=1, sticky=0, title='19丨基础手机后期（下）：Snapseed使用攻略（@随你们去）', 
uid=1, vid=725 where nid=725 
 {executed in 1 msec}
2020-11-23 19:32:06.469 INFO  jdbc.sqltiming Line:373 - select bookfieldm0_.entity_id as entity_i1_8_, bookfieldm0_.bundle as bundle2_8_, bookfieldm0_.delta 
as delta3_8_, bookfieldm0_.langcode as langcode4_8_, bookfieldm0_.field_media_value as field_me5_8_, 
bookfieldm0_.revision_id as revision6_8_ from node__field_media bookfieldm0_ where bookfieldm0_.entity_id=725 
 {executed in 1 msec}
2020-11-23 19:32:06.470 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------------|------------|
|entity_id |bundle |delta |langcode |field_media_value |revision_id |
|----------|-------|------|---------|------------------|------------|
|725       |book   |0     |zh-hans  |                  |725         |
|----------|-------|------|---------|------------------|------------|

2020-11-23 19:32:06.489 INFO  jdbc.sqltiming Line:373 - select nodefieldm0_.entity_id as entity_i1_17_0_, nodefieldm0_.bundle as bundle2_17_0_, nodefieldm0_.delta 
as delta3_17_0_, nodefieldm0_.langcode as langcode4_17_0_, nodefieldm0_.field_media_value as 
field_me5_17_0_, nodefieldm0_.revision_id as revision6_17_0_ from node_revision__field_media 
nodefieldm0_ where nodefieldm0_.entity_id=725 
 {executed in 1 msec}
2020-11-23 19:32:06.491 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------------|------------|
|entity_id |bundle |delta |langcode |field_media_value |revision_id |
|----------|-------|------|---------|------------------|------------|
|[unread]  |book   |0     |zh-hans  |                  |725         |
|----------|-------|------|---------|------------------|------------|

2020-11-23 19:32:06.508 INFO  jdbc.sqltiming Line:373 - select bookfieldc0_.entity_id as entity_i1_5_, bookfieldc0_.bundle as bundle2_5_, bookfieldc0_.field_comment_value 
as field_co3_5_, bookfieldc0_.delta as delta4_5_, bookfieldc0_.field_comment_format as field_co5_5_, 
bookfieldc0_.langcode as langcode6_5_, bookfieldc0_.revision_id as revision7_5_ from node__field_comment 
bookfieldc0_ where bookfieldc0_.entity_id=725 
 {executed in 1 msec}
2020-11-23 19:32:06.509 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|--------------------|------|---------------------|---------|------------|
|entity_id |bundle |field_comment_value |delta |field_comment_format |langcode |revision_id |
|----------|-------|--------------------|------|---------------------|---------|------------|
|725       |book   |                    |0     |full_html            |zh-hans  |725         |
|----------|-------|--------------------|------|---------------------|---------|------------|

2020-11-23 19:32:06.525 INFO  jdbc.sqltiming Line:373 - update node__field_comment set bundle='book', field_comment_value='<li class="reJj6Thl_0"><img 
src="https://static001.geekbang.org/account/avatar/00/11/5f/d5/2fec2911.jpg" class="_2273kGdT_0"> 
<div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> <a>yu</a> 
<!----> </div> <div class="_1H1Z49Dr_0"> 2020-02-06 </div> </div> <!----> </div> <div> <div 
class="_3M6kV3zb_0 _3D2NkqD6_0"> 这两个软件躺在手机里很久，一直没时间深究，用不好，趁着这个机会拿下 </div> <!----> <!----> <div 
class="_1w8H0ktn_0 _2A421P4G_0"> <div class="_2jsFl-X0_0"> <i class="iconfont"></i> <span></span> 
</div> <div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class=""></span> </div> <!----> 
</div> </div> </div></li> <li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/1b/6e/e7/e78f64ce.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<a>武缺</a> <!----> </div> <div class="_1H1Z49Dr_0"> 2020-02-05 </div> </div> <!----> </div> 
<div> <div class="_3M6kV3zb_0 _3D2NkqD6_0"> 这两个软件用很久了，在课程中发现好多新功能啊！感谢各位老师！疫情当前宅在家把所有课程又看一遍，课程已经超过摄影技术层面。各位老师注意安全祝平安健康 
<br> </div> <!----> <div class="_2xNIY4NG_0"> <p class="_33BLbmw4_0">作者回复: 感谢，但不是老师，哈哈哈，你也注意安全~</p> 
</div> <div class="_1w8H0ktn_0 _2A421P4G_0"> <div class="_2jsFl-X0_0"> <i class="iconfont"></i> 
<span></span> </div> <div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class=""></span> 
</div> <!----> </div> </div> </div></li>', delta=0, field_comment_format='full_html', langcode='zh-hans', 
revision_id=725 where entity_id=725 
 {executed in 1 msec}
2020-11-23 19:32:06.530 INFO  jdbc.sqltiming Line:373 - select nodefieldc0_.entity_id as entity_i1_14_0_, nodefieldc0_.bundle as bundle2_14_0_, nodefieldc0_.field_comment_value 
as field_co3_14_0_, nodefieldc0_.delta as delta4_14_0_, nodefieldc0_.field_comment_format as 
field_co5_14_0_, nodefieldc0_.langcode as langcode6_14_0_, nodefieldc0_.revision_id as revision7_14_0_ 
from node_revision__field_comment nodefieldc0_ where nodefieldc0_.entity_id=725 
 {executed in 1 msec}
2020-11-23 19:32:06.532 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|--------------------|------|---------------------|---------|------------|
|entity_id |bundle |field_comment_value |delta |field_comment_format |langcode |revision_id |
|----------|-------|--------------------|------|---------------------|---------|------------|
|[unread]  |book   |                    |0     |full_html            |zh-hans  |725         |
|----------|-------|--------------------|------|---------------------|---------|------------|

2020-11-23 19:32:06.548 INFO  jdbc.sqltiming Line:373 - update node_revision__field_comment set bundle='book', field_comment_value='<li class="reJj6Thl_0"><img 
src="https://static001.geekbang.org/account/avatar/00/11/5f/d5/2fec2911.jpg" class="_2273kGdT_0"> 
<div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> <a>yu</a> 
<!----> </div> <div class="_1H1Z49Dr_0"> 2020-02-06 </div> </div> <!----> </div> <div> <div 
class="_3M6kV3zb_0 _3D2NkqD6_0"> 这两个软件躺在手机里很久，一直没时间深究，用不好，趁着这个机会拿下 </div> <!----> <!----> <div 
class="_1w8H0ktn_0 _2A421P4G_0"> <div class="_2jsFl-X0_0"> <i class="iconfont"></i> <span></span> 
</div> <div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class=""></span> </div> <!----> 
</div> </div> </div></li> <li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/1b/6e/e7/e78f64ce.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<a>武缺</a> <!----> </div> <div class="_1H1Z49Dr_0"> 2020-02-05 </div> </div> <!----> </div> 
<div> <div class="_3M6kV3zb_0 _3D2NkqD6_0"> 这两个软件用很久了，在课程中发现好多新功能啊！感谢各位老师！疫情当前宅在家把所有课程又看一遍，课程已经超过摄影技术层面。各位老师注意安全祝平安健康 
<br> </div> <!----> <div class="_2xNIY4NG_0"> <p class="_33BLbmw4_0">作者回复: 感谢，但不是老师，哈哈哈，你也注意安全~</p> 
</div> <div class="_1w8H0ktn_0 _2A421P4G_0"> <div class="_2jsFl-X0_0"> <i class="iconfont"></i> 
<span></span> </div> <div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class=""></span> 
</div> <!----> </div> </div> </div></li>', delta=0, field_comment_format='full_html', langcode='zh-hans', 
revision_id=725 where entity_id=725 
 {executed in 2 msec}
2020-11-23 19:32:06.555 INFO  jdbc.sqltiming Line:373 - select bookfieldt0_.entity_id as entity_i1_9_, bookfieldt0_.bundle as bundle2_9_, bookfieldt0_.delta 
as delta3_9_, bookfieldt0_.langcode as langcode4_9_, bookfieldt0_.revision_id as revision5_9_, 
bookfieldt0_.field_thumb_value as field_th6_9_ from node__field_thumb bookfieldt0_ where bookfieldt0_.entity_id=725 
 {executed in 2 msec}
2020-11-23 19:32:06.556 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------|------------------|
|entity_id |bundle |delta |langcode |revision_id |field_thumb_value |
|----------|-------|------|---------|------------|------------------|
|725       |book   |0     |zh-hans  |725         |                  |
|----------|-------|------|---------|------------|------------------|

2020-11-23 19:32:06.572 INFO  jdbc.sqltiming Line:373 - update node__field_thumb set bundle='book', delta=0, langcode='zh-hans', revision_id=725, field_thumb_value='https://static001.geekbang.org/resource/image/34/52/342c75ad6c007b36a7f411bf3fbee652.jpeg' 
where entity_id=725 
 {executed in 1 msec}
2020-11-23 19:32:06.578 INFO  jdbc.sqltiming Line:373 - select nodefieldt0_.entity_id as entity_i1_18_0_, nodefieldt0_.bundle as bundle2_18_0_, nodefieldt0_.delta 
as delta3_18_0_, nodefieldt0_.langcode as langcode4_18_0_, nodefieldt0_.revision_id as revision5_18_0_, 
nodefieldt0_.field_thumb_value as field_th6_18_0_ from node_revision__field_thumb nodefieldt0_ 
where nodefieldt0_.entity_id=725 
 {executed in 1 msec}
2020-11-23 19:32:06.580 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------|------------------|
|entity_id |bundle |delta |langcode |revision_id |field_thumb_value |
|----------|-------|------|---------|------------|------------------|
|[unread]  |book   |0     |zh-hans  |725         |                  |
|----------|-------|------|---------|------------|------------------|

2020-11-23 19:32:06.595 INFO  jdbc.sqltiming Line:373 - update node_revision__field_thumb set bundle='book', delta=0, langcode='zh-hans', revision_id=725, 
field_thumb_value='https://static001.geekbang.org/resource/image/34/52/342c75ad6c007b36a7f411bf3fbee652.jpeg' 
where entity_id=725 
 {executed in 1 msec}
2020-11-23 19:32:06.601 INFO  jdbc.sqltiming Line:373 - select bookfieldf0_.entity_id as entity_i1_6_0_, bookfieldf0_.bundle as bundle2_6_0_, bookfieldf0_.delta 
as delta3_6_0_, bookfieldf0_.field_fenlei_target_id as field_fe4_6_0_, bookfieldf0_.langcode 
as langcode5_6_0_, bookfieldf0_.revision_id as revision6_6_0_ from node__field_fenlei bookfieldf0_ 
where bookfieldf0_.entity_id=725 
 {executed in 1 msec}
2020-11-23 19:32:06.603 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------------|---------|------------|
|entity_id |bundle |delta |field_fenlei_target_id |langcode |revision_id |
|----------|-------|------|-----------------------|---------|------------|
|[unread]  |book   |0     |1                      |zh-hans  |725         |
|----------|-------|------|-----------------------|---------|------------|

2020-11-23 19:32:06.620 INFO  jdbc.sqltiming Line:373 - select nodefieldf0_.entity_id as entity_i1_15_0_, nodefieldf0_.bundle as bundle2_15_0_, nodefieldf0_.delta 
as delta3_15_0_, nodefieldf0_.field_fenlei_target_id as field_fe4_15_0_, nodefieldf0_.langcode 
as langcode5_15_0_, nodefieldf0_.revision_id as revision6_15_0_ from node_revision__field_fenlei 
nodefieldf0_ where nodefieldf0_.entity_id=725 
 {executed in 1 msec}
2020-11-23 19:32:06.622 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------------|---------|------------|
|entity_id |bundle |delta |field_fenlei_target_id |langcode |revision_id |
|----------|-------|------|-----------------------|---------|------------|
|[unread]  |book   |0     |1                      |zh-hans  |725         |
|----------|-------|------|-----------------------|---------|------------|

2020-11-23 19:32:06.639 INFO  jdbc.sqltiming Line:373 - select bookchecke0_.item_id as item_id1_2_, bookchecke0_.fsid as fsid2_2_, bookchecke0_.got 
as got3_2_, bookchecke0_.name as name4_2_, bookchecke0_.parse_fail as parse_fa5_2_, bookchecke0_.parsed 
as parsed6_2_, bookchecke0_.path as path7_2_, bookchecke0_.title as title8_2_, bookchecke0_.vid 
as vid9_2_ from book_check bookchecke0_ where bookchecke0_.fsid='396057437011250' and bookchecke0_.name='net_content' 
 {executed in 2 msec}
2020-11-23 19:32:06.641 INFO  jdbc.resultsettable Line:610 - 
|--------|---------|---------|---------|-----------|---------|---------|---------|---------|
|item_id |fsid     |got      |name     |parse_fail |parsed   |path     |title    |vid      |
|--------|---------|---------|---------|-----------|---------|---------|---------|---------|
|726     |[unread] |[unread] |[unread] |[unread]   |[unread] |[unread] |[unread] |[unread] |
|--------|---------|---------|---------|-----------|---------|---------|---------|---------|

2020-11-23 19:32:58.584 INFO  jdbc.sqltiming Line:373 - update book_check set fsid='396057437011250', got=1, name='net_content', parse_fail='', parsed=1, 
path='108-摄影入门课/03丨实战篇 (10讲)/20丨摄影的更多可能：摄影到底是不是艺术？.html', title='20丨摄影的更多可能：摄影到底是不是艺术？', vid=726 
where item_id=726 
 {executed in 1 msec}
2020-11-23 19:32:58.604 INFO  jdbc.sqltiming Line:373 - select nodebodyen0_.entity_id as entity_i1_4_, nodebodyen0_.body_value as body_val2_4_, nodebodyen0_.body_summary 
as body_sum3_4_, nodebodyen0_.bundle as bundle4_4_, nodebodyen0_.delta as delta5_4_, nodebodyen0_.body_format 
as body_for6_4_, nodebodyen0_.langcode as langcode7_4_, nodebodyen0_.revision_id as revision8_4_ 
from node__body nodebodyen0_ where nodebodyen0_.entity_id=726 
 {executed in 1 msec}
2020-11-23 19:32:58.606 INFO  jdbc.resultsettable Line:610 - 
|----------|-----------|-------------|-------|------|------------|---------|------------|
|entity_id |body_value |body_summary |bundle |delta |body_format |langcode |revision_id |
|----------|-----------|-------------|-------|------|------------|---------|------------|
|726       |           |             |book   |0     |full_html   |zh-hans  |726         |
|----------|-----------|-------------|-------|------|------------|---------|------------|

2020-11-23 19:32:58.609 INFO  jdbc.sqltiming Line:373 - select nodebodyre0_.entity_id as entity_i1_13_0_, nodebodyre0_.body_value as body_val2_13_0_, 
nodebodyre0_.body_summary as body_sum3_13_0_, nodebodyre0_.bundle as bundle4_13_0_, nodebodyre0_.delta 
as delta5_13_0_, nodebodyre0_.body_format as body_for6_13_0_, nodebodyre0_.langcode as langcode7_13_0_, 
nodebodyre0_.revision_id as revision8_13_0_ from node_revision__body nodebodyre0_ where nodebodyre0_.entity_id=726 
 {executed in 1 msec}
2020-11-23 19:32:58.611 INFO  jdbc.resultsettable Line:610 - 
|----------|-----------|-------------|-------|------|------------|---------|------------|
|entity_id |body_value |body_summary |bundle |delta |body_format |langcode |revision_id |
|----------|-----------|-------------|-------|------|------------|---------|------------|
|[unread]  |           |             |book   |0     |full_html   |zh-hans  |726         |
|----------|-----------|-------------|-------|------|------------|---------|------------|

2020-11-23 19:32:58.633 INFO  jdbc.sqltiming Line:373 - update node__body set body_value='<div data-slate-editor="true" data-key="111" autocorrect="off" 
spellcheck="false" data-gramm="false" style="outline: none; white-space: pre-wrap; overflow-wrap: 
break-word;"> <div class="se-caafcf74 " data-slate-type="paragraph" data-slate-object="block" 
data-key="112"> <span data-slate-object="text" data-key="113"><span data-slate-leaf="true" 
data-offset-key="113:0" data-first-offset="true"><span data-slate-string="true">你好，我叫孙晟钧 Lufus，是小麥在开篇词里就提到过的神秘合作伙伴。</span></span></span> 
</div> <div class="se-ffb972e1 " data-slate-type="paragraph" data-slate-object="block" data-key="114"> 
<span data-slate-object="text" data-key="115"><span data-slate-leaf="true" data-offset-key="115:0" 
data-first-offset="true"><span data-slate-string="true">这套课一开始的时候，我们挖了很多坑，留了很多思考问题，比如在讲摄影史的时候提到过摄影是否就代表着忠实记录，客观还原；比如提到了摄影跟绘画之间的异同，举了 
Rodger Ballen 的例子来说明现在的摄影师们是如何用画画的方式拍照片；比如带你看了许多“莫名其妙”的照片。这些照片里有看似平淡无奇的建筑跟城市景观，像是 Mark Power 
跟贝歇夫妇，也有门槛极低、有相机就能拍的家庭快照，像是荒木经惟拍他的老婆阳子；也有操作复杂、技术含量极高，用普通人可能一辈子也接触不到的拍摄方式拍成的“技术流”照片，像是杉本博司的剧院、海景、闪电系列等等。</span></span></span> 
</div> <div class="se-a736f8a2 " data-slate-type="paragraph" data-slate-object="block" data-key="116"> 
<span data-slate-object="text" data-key="117"><span data-slate-leaf="true" data-offset-key="117:0" 
data-first-offset="true"><span data-slate-string="true">提了这么多外国人名，你可能依然会觉得他们离自己的日常生活非常遥远。“我不想当什么艺术家，也不想在大庭广众之下展览自己拍的照片。你让我看的那些照片我也没觉得它们有多好，什么艺术不艺术呀，把我家人孩子拍好最重要，你老跟我提他们干什么？”</span></span></span> 
</div> <div class="se-582d2f48 " data-slate-type="paragraph" data-slate-object="block" data-key="118"> 
<span data-slate-object="text" data-key="119"><span data-slate-leaf="true" data-offset-key="119:0" 
data-first-offset="true"><span data-slate-string="true">这最后一节课的目的，一是为了填坑跟查缺补漏，带你了解更多当今活跃的摄影师跟他们的创作技法，第二就是为了解答你心里可能会有的这些疑惑。我们的课程进行到这里，你应该多少也明白了摄影绝不仅仅是“拍到”那么简单。而在这套课程结束以后，你应该也不想再和其他爱好者们一样，在一段时间的拍摄后就“泯然众人矣”了，没有再拿起相机的动力和欲望。不光能拍到，还能拍好看，还能在长年累月的持续拍摄中找到快感，这是我跟小麥当初设计这套课时最主要的想法。没错，“艺术”这词是挺大的，也都快被用滥了，但学完这节课后你就会明白，艺术，其实也没多高大上，它原原本本就扎根在你我的日常生活里，也只有它，才是让你能一直持续拍下去的动力。</span></span></span> 
</div> <div class="se-415bf4a3 " data-slate-type="paragraph" data-slate-object="block" data-key="120"> 
<span data-slate-object="text" data-key="121"><span data-slate-leaf="true" data-offset-key="121:0" 
data-first-offset="true"><span data-slate-string="true">话不多说，咱们还是先来看几张图，它们都来自于我喜欢的几位中国摄影师。</span></span></span> 
</div> <div class="se-b01e240a" data-slate-type="image" data-slate-object="block" data-key="122"> 
<img class="se-6961ec48" src="https://static001.geekbang.org/resource/image/b3/96/b342ef1dc76842a60858fa23a5467f96.jpg"> 
<div class="se-0a4ca9e9"> 黄京 <br>微博：@吃土豆的人啊 <br>网站：http://huangjingfoto.com/ </div> </div> 
<div class="se-bf33ae1b" data-slate-type="image" data-slate-object="block" data-key="123"> 
<img class="se-e978984f" src="https://static001.geekbang.org/resource/image/81/bd/8174c139be40b138c165369b4db153bd.jpg"> 
<div class="se-203bdc7f"> 尤达任 <br>网站：https://darenyouphoto.com/ </div> </div> <div class="se-a8d30f12" 
data-slate-type="image" data-slate-object="block" data-key="124"> <img class="se-7771fabb" 
src="https://static001.geekbang.org/resource/image/41/1c/41b6e5a29293be1906c1c5770170e41c.jpg"> 
<div class="se-612aa94a"> 张内贤 <br>微博：@_张内咸 </div> </div> <div class="se-23afdc72" data-slate-type="image" 
data-slate-object="block" data-key="125"> <img class="se-2d2a0feb" src="https://static001.geekbang.org/resource/image/e0/9b/e0d9a0b9bc6cd62d887fd7c99537249b.jpg"> 
<div class="se-8de76ecc"> 宋朝 <br>网站介绍：http://photographyofchina.com/blog/song-chao--3 </div> 
</div> <div class="se-644acab2 " data-slate-type="paragraph" data-slate-object="block" data-key="126"> 
<span data-slate-object="text" data-key="127"><span data-slate-leaf="true" data-offset-key="127:0" 
data-first-offset="true"><span data-slate-string="true">上面这些照片应该是你在平时浏览摄影相关内容时，比较难见到的图片类型。这些摄影师的个人风格鲜明，每个人都有一套自己非常固定的拍摄技法，拍摄主题也相对不变。</span></span></span><span 
data-slate-object="text" data-key="128"><span data-slate-leaf="true" data-offset-key="128:0" 
data-first-offset="true"><span class="se-2df329c7" data-slate-type="bold" data-slate-object="mark"><span 
data-slate-string="true">长年累月保持一机一镜拍摄同一主题</span></span></span></span><span data-slate-object="text" 
data-key="129"><span data-slate-leaf="true" data-offset-key="129:0" data-first-offset="true"><span 
data-slate-string="true">，这是职业摄影师与业余爱好者间最大的区别。</span></span></span> </div> <div class="se-66480ec2 
" data-slate-type="paragraph" data-slate-object="block" data-key="130"> <span data-slate-object="text" 
data-key="131"><span data-slate-leaf="true" data-offset-key="131:0" data-first-offset="true"><span 
data-slate-string="true">再仔细观察就会发现，这些图片全部取材于摄影师自己的日常生活，也没有什么战地苦难、旅游美景，或是突发事件这些刺激人的外在因素。当然，最重要的是这些照片模仿起来都有一定难度，无论是从技术角度还是摄影师这个人本身。</span></span></span> 
</div> <div class="se-eb5616c3 " data-slate-type="paragraph" data-slate-object="block" data-key="132"> 
<span data-slate-object="text" data-key="133"><span data-slate-leaf="true" data-offset-key="133:0" 
data-first-offset="true"><span data-slate-string="true">简单分析下几位摄影师的图片。</span></span></span> 
</div> <div class="se-3663283d " data-slate-type="paragraph" data-slate-object="block" data-key="134"> 
<span data-slate-object="text" data-key="135"><span data-slate-leaf="true" data-offset-key="135:0" 
data-first-offset="true"><span data-slate-string="true">首先是黄京。关于他的介绍我就不在这儿多说了，网上有很多访谈，感兴趣可以去搜一搜，简而言之就是一个每天都挂着一台全手动的胶片旁轴相机，只要出门就拍两张，曾因为“喜欢观察单位食堂的鱼缸，而为了表达这种特殊的喜欢，前后拍了 
4000 多张照片”的人。他的拍法本身没有什么难度，就是靠纯粹观察日常生活里的琐碎细节，完全利用自然光，估焦估曝光，将这些细节直接、忠实地拍摄出来。虽然拍法没有难度，但恰恰是他这个对日常事物的</span></span></span><span 
data-slate-object="text" data-key="136"><span data-slate-leaf="true" data-offset-key="136:0" 
data-first-offset="true"><span class="se-fa55d325" data-slate-type="bold" data-slate-object="mark"><span 
data-slate-string="true">观察角度</span></span></span></span><span data-slate-object="text" data-key="137"><span 
data-slate-leaf="true" data-offset-key="137:0" data-first-offset="true"><span data-slate-string="true">无法被人模仿。优秀摄影师区别于爱好者的一大表现就是能将平常人觉得“这有什么可拍”的东西给拍出来。他能看见的你看不见，说的就是这个道理。</span></span></span> 
</div> <div class="se-421d9b5b " data-slate-type="paragraph" data-slate-object="block" data-key="138"> 
<span data-slate-object="text" data-key="139"><span data-slate-leaf="true" data-offset-key="139:0" 
data-first-offset="true"><span data-slate-string="true">即便是处理同一个场景，面对日常生活里相同的素材，不同的摄影师也可以对它们采取不同的视觉观察角度，使得这些相同的场景变成不同的照片。听上去挺玄的，但其实“观察角度”分解成参数无外乎就是</span></span></span><span 
data-slate-object="text" data-key="140"><span data-slate-leaf="true" data-offset-key="140:0" 
data-first-offset="true"><span class="se-4b123900" data-slate-type="bold" data-slate-object="mark"><span 
data-slate-string="true">距离、景别（近景、中景、远景）、取景框线（焦段）、拍摄角度（俯视、仰视、平视）和快门时机</span></span></span></span><span 
data-slate-object="text" data-key="141"><span data-slate-leaf="true" data-offset-key="141:0" 
data-first-offset="true"><span data-slate-string="true">，改变其中的任何一个变量，都能获得不一样的照片。长年大量用一机一镜拍摄同一主题的摄影师，基本上都形成了一套视觉的肌肉记忆，在面对一个场景时，能如同直觉一般在脑袋里将这些参数瞬间组合好。而想形成这样的直觉，就需要你在日常练习时，面对同一个场景，尽可能地多拍，不要拍完一张就草草收场，学会等待、预判快门时机，尝试用同样的镜头站在不同的距离下拍摄，远中近、上中下都观察好了再按快门。</span></span></span> 
</div> <div class="se-804420dc " data-slate-type="paragraph" data-slate-object="block" data-key="142"> 
<span data-slate-object="text" data-key="143"><span data-slate-leaf="true" data-offset-key="143:0" 
data-first-offset="true"><span data-slate-string="true">说回到这些例图本身。如果摄影师仅仅将他直接拍好的照片不加编辑，不加处理地原封不动给放出来，你大概率也不会觉得它是一张好照片。摄影师的工作绝不仅仅止步于按快门，后期编辑是每个想拍好照片的人都必须要做的一件事。许多摄影爱好者都会有一个错误观念，认为后期了的照片就不是好照片，好像只有“原片直出”才是正统。而我想纠正的是，首先，“原片直出”也是后期，是相机算法给出的后期，这在咱们之前的课程里已经说过了。其次，后期并不仅仅指涂抹、抠脸、加噪点、加暗角、更改画面内容、磨皮、拉腿等这些技巧；像是裁剪画面、调整画面明暗反差、调整色调、更改饱和度、点亮阴影、压暗高光等均属于后期的范畴。我们这套课里给出过的所有例图，每张都是摄影师后期调整的结果。</span></span></span><span 
data-slate-object="text" data-key="144"><span data-slate-leaf="true" data-offset-key="144:0" 
data-first-offset="true"><span class="se-f8a77711" data-slate-type="bold" data-slate-object="mark"><span 
data-slate-string="true">建立完整的后期意识，是拍好照片的必要条件。</span></span></span></span> </div> <div class="se-e0b7310e 
" data-slate-type="paragraph" data-slate-object="block" data-key="145"> <span data-slate-object="text" 
data-key="146"><span data-slate-leaf="true" data-offset-key="146:0" data-first-offset="true"><span 
data-slate-string="true">后期技术，其实早在胶片时代就已经诞生了，数码 Photoshop 只是沿用了胶片时代摄影师们的处理方法。而在胶片时代，每张从暗房放大出来的照片其实都是后期处理的结果，它就没有不后期的照片。摄影师用暗房放大机里的滤色片来改变对比度，用手遮光挡影来改变照片局部的明暗程度，像我们第七节课提到过的 
Ansel Adams，就是通过前期冲洗 + 后期暗房调整才能制造出下面例图里这样的视觉效果。</span></span></span> </div> <div class="se-fafa708d" 
data-slate-type="image" data-slate-object="block" data-key="147"> <img class="se-f71d2442" 
src="https://static001.geekbang.org/resource/image/ce/4f/ce70b7ba00e934e2585f4ae84113aa4f.jpg"> 
<div class="se-5cb5e8f4"> Ansel Adams 于 1941年在新墨西哥州拍摄的月升，后期制造了异常丰富的黑白影调 </div> </div> <div 
class="se-a4590241" data-slate-type="image" data-slate-object="block" data-key="148"> <img 
class="se-3b98bbbb" src="https://static001.geekbang.org/resource/image/e9/aa/e94feb87b60304e8b90f88351e72bbaa.jpg"> 
<div class="se-71de9db4"> Dennis Stock 于 1955 年拍摄的男明星 James Dean，左边是暗房放大的原片，上面标记着摄影师想要对画面效果做哪些更改的笔记；右边是经过暗房后期后的最终成片。 
</div> </div> <div class="se-bd126244 " data-slate-type="paragraph" data-slate-object="block" 
data-key="149"> <span data-slate-object="text" data-key="150"><span data-slate-leaf="true" 
data-offset-key="150:0" data-first-offset="true"><span data-slate-string="true">所以不要一味地认为拍照不需要 
P 图，掌握基本的明暗调节技巧，学会调色，是拍好照片必不可少的一步。</span></span></span> </div> <div class="se-a31eba81 " data-slate-type="paragraph" 
data-slate-object="block" data-key="151"> <span data-slate-object="text" data-key="152"><span 
data-slate-leaf="true" data-offset-key="152:0" data-first-offset="true"><span data-slate-string="true">虽然暗房、胶片听上去离我们很远，但如今它依然被广泛应用在艺术摄影领域，柯达、伊尔福、富士这些公司也依然在生产着胶片。当今的摄影师们之所以仍执着于使用胶片，除了情怀和好玩，也是因为银盐底片跟光学放大后的质感效果，对影调与色彩的完整还原，是现在的电子微喷尚无法完全模仿企及的。比如黄京老师的照片之所以会有那么强烈的明暗反差和大颗粒感，就是胶片与银盐相纸本身的材料特性所决定的。</span></span></span> 
</div> <div class="se-a7afc3ae " data-slate-type="paragraph" data-slate-object="block" data-key="153"> 
<span data-slate-object="text" data-key="154"><span data-slate-leaf="true" data-offset-key="154:0" 
data-first-offset="true"><span data-slate-string="true">黄京使用胶片拍摄，拍摄后再对胶片进行迫冲（延长冲洗时间 + 提高冲洗用的药水温度），好提高底片本身的对比度和颗粒感，制造出视觉效果很“硬”的底片原片，然后拿到暗房进行放大，再把放大后的银盐照片重新扫描回电脑里进行最后的修改编辑。所以，即便你选择了去模仿拍摄和他一样的照片，以同样的角度去拍居民楼的楼道（例图里的图七），你也不会得到观感相同的图片，原因就在于这里还涉及到了工艺问题。</span></span></span> 
</div> <div class="se-7afc2ea4 " data-slate-type="paragraph" data-slate-object="block" data-key="155"> 
<span data-slate-object="text" data-key="156"><span data-slate-leaf="true" data-offset-key="156:0" 
data-first-offset="true"><span data-slate-string="true">再比如，第二位摄影师尤达任，用到了凹版印刷（Photogravure）这一古老工艺。它的操作过程非常复杂，需要将曝光放大好的明胶照片转印到铜板上，利用化学反应将铜板腐蚀后，再涂抹油墨于铜板上进行印刷。由于油墨本身的质感，使得印制出的照片影调柔和，颗粒感细腻，看似平淡的画面经由工艺处理后会呈现完全不同的效果，</span></span></span><span 
data-slate-object="text" data-key="157"><span data-slate-leaf="true" data-offset-key="157:0" 
data-first-offset="true"><span class="se-8f6c9c91" data-slate-type="bold" data-slate-object="mark"><span 
data-slate-string="true">工艺本身就是组成照片的一部分。职业摄影师会主动选择用后期工艺打破视觉惯性，不避讳让照片变成纯粹人造的工艺品</span></span></span></span><span 
data-slate-object="text" data-key="158"><span data-slate-leaf="true" data-offset-key="158:0" 
data-first-offset="true"><span data-slate-string="true">，对他们而言，什么都没有“好看”重要，这也是他们与摄影爱好者的一大不同。而理解这类照片，往往就需要从摄影师的创作过程本身入手，明白工艺到底在作品里起到了什么样的作用。你可以再体会体会我们上节课提到的一句话，什么叫作“</span></span></span><span 
data-slate-object="text" data-key="159"><span data-slate-leaf="true" data-offset-key="159:0" 
data-first-offset="true"><span class="se-66c91a08" data-slate-type="bold" data-slate-object="mark"><span 
data-slate-string="true">画面就是事件本身</span></span></span></span><span data-slate-object="text" 
data-key="160"><span data-slate-leaf="true" data-offset-key="160:0" data-first-offset="true"><span 
data-slate-string="true">”。</span></span></span> </div> <div class="se-0266ab2e" data-slate-type="image" 
data-slate-object="block" data-key="161"> <img class="se-2b636cc1" src="https://static001.geekbang.org/resource/image/d5/42/d527c9a0c5aa0450f417d8cf4676f542.jpg"> 
<div class="se-8851a5e5"> 这四张照片是我使用锡版照相法拍摄的人物肖像。 <br>锡版摄影也是湿版摄影的一种，药水需由摄影师自行配置。 <br>它的制作过程复杂，一次只能拍摄一张， 
<br>最终成片都是曝光在金属版上无法被批量复制的实体照片。 </div> </div> <div class="se-5f043205 " data-slate-type="paragraph" 
data-slate-object="block" data-key="162"> <span data-slate-object="text" data-key="163"><span 
data-slate-leaf="true" data-offset-key="163:0" data-first-offset="true"><span data-slate-string="true">许多职业摄影师并不纠结于前期拍到了什么，对他们来说，来自现实的照片只是素材，如何利用后期恰当地处理运用这些素材，使它们呈现新的含义和新的视觉效果，要远比这些素材在前期拍得好不好更加重要——乍一听起来这很像平面设计的思维，没错，这就是摄影术发展到今天，人们打破“摄影只能基于现实”这一思维定式的方式。</span></span></span> 
</div> <div class="se-72607c17 " data-slate-type="paragraph" data-slate-object="block" data-key="164"> 
<span data-slate-object="text" data-key="165"><span data-slate-leaf="true" data-offset-key="165:0" 
data-first-offset="true"><span data-slate-string="true">除了我们提到过的这些技法，摄影工艺还有湿版、蓝晒、转印、铂金印相、电子负片、halo-chrome 
等等，对于这些技法的运用也使得摄影能够更加脱离于现实。当然，这么做并不就一定代表着高级，做不好反而有投机取巧的嫌疑。过程再复杂，运用到的技巧再花哨，不好看不好玩，观众体会不到也还是白扯。摄影毕竟是要用眼睛看的，再复杂的制作过程，最终的结果还是要回归到“好看”这件事上。</span></span></span> 
</div> <div class="se-0dcb8aa9 " data-slate-type="paragraph" data-slate-object="block" data-key="166"> 
<span data-slate-object="text" data-key="167"><span data-slate-leaf="true" data-offset-key="167:0" 
data-first-offset="true"><span data-slate-string="true">类似把照片当素材，大量借助后期工艺的摄影师不胜枚举，像是山本昌南、深濑昌久、托马斯·苏文，甚至包括森山大道在内的一众日本街头摄影师，都是借助了后期处理与暗房工艺才能创作出他们的那些名作。贴几张例图，我就不再多说了。</span></span></span> 
</div> <div class="se-65ca8430" data-slate-type="image" data-slate-object="block" data-key="168"> 
<img class="se-7213158a" src="https://static001.geekbang.org/resource/image/d3/92/d362d0e5d88f018672e5e9f88ea76392.jpg"> 
<div class="se-d09fb78f"> 山本昌南 </div> </div> <div class="se-4874e99f" data-slate-type="image" 
data-slate-object="block" data-key="169"> <img class="se-30722a66" src="https://static001.geekbang.org/resource/image/c7/13/c7244cfa577358f37ff71339a28f8813.jpg"> 
<div class="se-db729c19"> 深濑昌久 <br>《鸦》的许多照片并不是一开始就拍到的，而是后期从原片里裁剪放大得到的 </div> </div> <div class="se-b0ed5534" 
data-slate-type="image" data-slate-object="block" data-key="170"> <img class="se-0a44f634" 
src="https://static001.geekbang.org/resource/image/29/c3/2995b376f835846247b64377742ee5c3.jpg"> 
<div class="se-8db11414"> 托马斯·苏文，《线》 <br>网站：http://www.beijingsilvermine.com/ <br>苏文本人并不拍照片，而是从旧货市场大量收集废弃底片，将其修复、编辑，集结制作成工艺品画册。虽然是一本画册，但照片本身的作用被淡化。照片与画册本身的设计一起，共同被用作传达理念的工具。 
</div> </div> <div class="se-3c601a05 " data-slate-type="paragraph" data-slate-object="block" 
data-key="171"> <span data-slate-object="text" data-key="172"><span data-slate-leaf="true" 
data-offset-key="172:0" data-first-offset="true"><span data-slate-string="true">讲到这儿，你应该也明白了为什么我们总说，</span></span></span><span 
data-slate-object="text" data-key="173"><span data-slate-leaf="true" data-offset-key="173:0" 
data-first-offset="true"><span class="se-81768eb3" data-slate-type="bold" data-slate-object="mark"><span 
data-slate-string="true">摄影并不单纯局限于一张照片本身</span></span></span></span><span data-slate-object="text" 
data-key="174"><span data-slate-leaf="true" data-offset-key="174:0" data-first-offset="true"><span 
data-slate-string="true">。照片只是一座桥梁，摄影师想利用照片传达的观念，我们通过照片感受到的情绪，照片的审美属性、社会价值，都是我们在回答一张照片“为什么好”时应该考量的因素。</span></span></span> 
</div> <div class="se-457fdeff " data-slate-type="paragraph" data-slate-object="block" data-key="175"> 
<span data-slate-object="text" data-key="176"><span data-slate-leaf="true" data-offset-key="176:0" 
data-first-offset="true"><span data-slate-string="true">回到开篇的问题，我们为什么说贝歇夫妇好？因为他们的照片完整记录了二战后德国的工业建筑特征，那些照片本身所具有的文献价值，给后世理解德国工业发展留下了丰富的研究材料。我们为什么说杉本博司好？因为他透过照片，对“时间”和“空间”这两个概念进行了探讨，我们能从他的海景中感受到平静，从废弃的剧院里体验到永恒。他通过拍摄自然历史博物馆里的远古动物模型，带我们进行了一次时光穿梭，让我们看见了陆地上还没有人时的景观。我们为什么说荒木经惟好？因为他有勇气将自己的私人生活完整暴露在众目睽睽之下，有勇气用照片来挑战当时社会的诸多禁忌。你可以想想看，如果是你，生活在上世纪七十年代，敢不敢把自己跟老婆的私房照片放到市面上给大家品头论足。荒木的名作《感伤之旅》，不仅仅是一场蜜月旅行的完整记录，更是一份私人日记，其中包含更多的是在他老婆阳子去世后，用照片展开的对生死的探讨。</span></span></span> 
</div> <div class="se-47f9fd51" data-slate-type="image" data-slate-object="block" data-key="177"> 
<img class="se-487a9e84" src="https://static001.geekbang.org/resource/image/24/1a/2426816c36f79f4fca846dd2e9ba0e1a.png"> 
<div class="se-1c6271be"> 贝歇夫妇，《水塔》系列 </div> </div> <div class="se-eaa57eb9" data-slate-type="image" 
data-slate-object="block" data-key="178"> <img class="se-6c0a1acb" src="https://static001.geekbang.org/resource/image/b3/c5/b3d856b13ae81a709723a61f2c4b10c5.jpg"> 
<div class="se-1f8e2e57"> 杉本博司，《西洋镜》系列 </div> </div> <div class="se-d8a15019" data-slate-type="image" 
data-slate-object="block" data-key="179"> <img class="se-dfb665f6" src="https://static001.geekbang.org/resource/image/ea/54/eab8928b493b2fbf4cad7c2876cdb254.jpg"> 
<div class="se-b543f6c3"> 荒木经惟，《感伤之旅》 </div> </div> <div class="se-5e62a947 " data-slate-type="paragraph" 
data-slate-object="block" data-key="180"> <span data-slate-object="text" data-key="181"><span 
data-slate-leaf="true" data-offset-key="181:0" data-first-offset="true"><span data-slate-string="true">摄影是一门包罗万象的学科。什么可以做，什么不能做，什么可以拍，什么不能拍，并没有任何限制。每当我们苦恼于不知道该拍什么的时候，都应该问问自己，是不是我们先入为主的偏见，限制了我们的视野跟想象力。摄影在两百多年的发展历程中，想到了借助各种工艺来达到让自己区别于绘画，脱离于现实的目的。初学者可能会认为这偏离了摄影的本质，但我想说的是，恰恰是因为对各种工艺的运用，才拓宽了摄影的可能。我们之所以会固执地认为没后期的照片要比后期过的高级，抓拍就比摆拍难度更高，是不是因为看过的照片太少，对摄影的认识还依然停留在“拍到”“记录”“还原生活”这一层面呢？</span></span></span> 
</div> <div class="se-c5e7e99c " data-slate-type="paragraph" data-slate-object="block" data-key="182"> 
<span data-slate-object="text" data-key="183"><span data-slate-leaf="true" data-offset-key="183:0" 
data-first-offset="true"><span data-slate-string="true">职业摄影师会运用到那些工艺，将拍摄过程复杂化，很大原因是职业性质决定了他们必须要和别人不一样。也只有不一样，人为拔高拍摄门槛，才能让自己在激烈的竞争里脱颖而出。我们不是他们，日常生活里一般也不会和其他人“斗片”，暗中较劲，但我们为什么依然会执着于拍到一张好照片，依然想要和别人不一样？这又回到了往期课程里问过无数次的那个问题：你到底是因为什么而拍照。</span></span></span> 
</div> <div class="se-e0961f2b " data-slate-type="paragraph" data-slate-object="block" data-key="184"> 
<span data-slate-object="text" data-key="185"><span data-slate-leaf="true" data-offset-key="185:0" 
data-first-offset="true"><span data-slate-string="true">摄影由客观观察转向主观呈现是必然发生的事情。拍摄时间越长，越会对外界刺激脱敏，如果这时不转向拍摄自己的内心世界，用照片表达倾诉自己的内心感受，你必然会失去拍摄的动力。与大多数人的认知相反，摄影其实是个内观的过程。在利用复杂形式吸引到足够多的眼球和赞扬后，你的摄影之旅才刚刚开始。我这几年的一个感受是，一开始我也会被门槛高、形式感强、拍摄过程复杂的作品所吸引，而随着学习的不断深入，曾经许多我认为“这有什么好”的照片竟然变成了如今的心头好；曾经我理解不了，认为“是个人都能拍出来”的照片，恰恰成了现在我百看不厌的作品。导致这个变化的原因有很多，但最重要的是随着自己拍得、看得越来越多，我的差别心正在逐渐消失。</span></span></span> 
</div> <div class="se-45073f5a " data-slate-type="paragraph" data-slate-object="block" data-key="186"> 
<span data-slate-object="text" data-key="187"><span data-slate-leaf="true" data-offset-key="187:0" 
data-first-offset="true"><span data-slate-string="true">照片是一扇门，一张照片背后承载的是摄影师的内心世界，我们能通过这张照片，看见他的世界的样子。一个人过着什么样的生活就会拍出什么样的照片，这也是为什么我会被张内咸、宋朝的照片所吸引。他们照片的好，不是因为使用的技巧有多华丽，拍摄门槛有多高，而是因为那些照片就来自于他们自己的生活，来自于他们这个人本身。</span></span></span> 
</div> <div class="se-8261ca37 " data-slate-type="paragraph" data-slate-object="block" data-key="188"> 
<span data-slate-object="text" data-key="189"><span data-slate-leaf="true" data-offset-key="189:0" 
data-first-offset="true"><span data-slate-string="true">张内咸是一名体育老师，他的日常就是和孩子们打交道。只有他才能跟孩子们玩儿到一起，成为孩子里的一员，看见那些别人看不见的天真笑脸，而他的这个视角我永远学不会。</span></span></span> 
</div> <div class="se-4a2a515e " data-slate-type="paragraph" data-slate-object="block" data-key="190"> 
<span data-slate-object="text" data-key="191"><span data-slate-leaf="true" data-offset-key="191:0" 
data-first-offset="true"><span data-slate-string="true">摄影师宋朝本身就是矿工，作为一名矿民的生活经历，给了他看待留守老人和矿工同事们不一样的角度。他照片里的矿工并不是黑色、痛苦、单调的。相反，因为他深刻理解矿工的生活，明白真实情况并非如此，所以他选择呈现了矿工们最“正常”的一面，不去放大苦难。我们能从他的照片里感受到乐观幽默，体会到每个人的个性，看得见普通人对美好生活的向往。</span></span></span> 
</div> <div class="se-d3241a28 " data-slate-type="paragraph" data-slate-object="block" data-key="192"> 
<span data-slate-object="text" data-key="193"><span data-slate-leaf="true" data-offset-key="193:0" 
data-first-offset="true"><span data-slate-string="true">类似这样的照片，不是靠单纯的学术思辨和专业技能培训就可以学会的，想拍到它们，你首先得成为这样的人，将视角放回到平凡人的普通生活。</span></span></span> 
</div> <div class="se-5dddfdc0 " data-slate-type="paragraph" data-slate-object="block" data-key="194"> 
<span data-slate-object="text" data-key="195"><span data-slate-leaf="true" data-offset-key="195:0" 
data-first-offset="true"><span data-slate-string="true">看照片有的时候就跟看小说一样，是体验另一个世界，感受另一种人生的方式。</span></span></span> 
</div> <div class="se-d614ca4d " data-slate-type="paragraph" data-slate-object="block" data-key="196"> 
<span data-slate-object="text" data-key="197"><span data-slate-leaf="true" data-offset-key="197:0" 
data-first-offset="true"><span data-slate-string="true">最后，我想说一个问题。</span></span></span> </div> 
<div class="se-d0282e92 " data-slate-type="paragraph" data-slate-object="block" data-key="198"> 
<span data-slate-object="text" data-key="199"><span data-slate-leaf="true" data-offset-key="199:0" 
data-first-offset="true"><span data-slate-string="true">我们以前说过，审美是主观的，但美是有客观标准的。这句话并没错，但随着个人经历的丰富，我也开始问自己一个问题：当我建立起了自己对于“美”的标准后，我是不是该用同样的标准来衡量其他人？</span></span></span> 
</div> <div class="se-c985e3b3 " data-slate-type="paragraph" data-slate-object="block" data-key="200"> 
<span data-slate-object="text" data-key="201"><span data-slate-leaf="true" data-offset-key="201:0" 
data-first-offset="true"><span data-slate-string="true">很多人总喜欢问“能评价 XX 摄影师的摄影作品吗”这样的问题，其实困惑无外乎就是为什么他拍出那样的作品就可以成名，而那些成名的作品究竟又好在哪儿。会问这类问题就意味着提问的人其实并不喜欢这些作品，但总想尝试去理解它，觉得人家出名肯定是有道理的，说白了还是被名气和权威所裹挟，怀疑是不是自己的理解力不够，所以才看不懂这些照片。</span></span></span> 
</div> <div class="se-bc502cd4 " data-slate-type="paragraph" data-slate-object="block" data-key="202"> 
<span data-slate-object="text" data-key="203"><span data-slate-leaf="true" data-offset-key="203:0" 
data-first-offset="true"><span data-slate-string="true">作品的名气只取决于它被谈论的次数。人文艺术与自然科学最大的区别就在于，所谓的“价值”，是人赋予的，跟它本身的好坏无关。既然如此，那为什么别人赋予的价值就要比我的个人感受更有价值，更重要？</span></span></span> 
</div> <div class="se-10a5e828 " data-slate-type="paragraph" data-slate-object="block" data-key="204"> 
<span data-slate-object="text" data-key="205"><span data-slate-leaf="true" data-offset-key="205:0" 
data-first-offset="true"><span data-slate-string="true">蒙娜丽莎只是张证件照，鸡缸杯就是个黄酒杯，甭管它们被谁用、卖多贵、如何被无数人大书特书，吹得神乎其神，于我而言，它们都没有我爸妈二十几年前结婚生我时的照片更宝贵。我们要学会区分作为谈资的“艺术”和自己真心喜欢的“艺术”。艺术只可能是私人感受而无法与任何人共享，这也是我为什么总说放在博物馆里的艺术都不是艺术，因为真正的艺术你看不见。所以，对于那些看不懂的照片，我们完全可以忽略，没必要困惑。</span></span></span><span 
data-slate-object="text" data-key="206"><span data-slate-leaf="true" data-offset-key="206:0" 
data-first-offset="true"><span class="se-0aa17cbb" data-slate-type="bold" data-slate-object="mark"><span 
data-slate-string="true">照片是用来感受而不是用来研究的</span></span></span></span><span data-slate-object="text" 
data-key="207"><span data-slate-leaf="true" data-offset-key="207:0" data-first-offset="true"><span 
data-slate-string="true">，尝试去跟任何人争论一张照片的好坏都是没有意义的，你说服不了别人喜欢上一个他感受不到的东西。</span></span></span> 
</div> <div class="se-c579c17b " data-slate-type="paragraph" data-slate-object="block" data-key="208"> 
<span data-slate-object="text" data-key="209"><span data-slate-leaf="true" data-offset-key="209:0" 
data-first-offset="true"><span data-slate-string="true">应该说，“美”这个词本身就具有阶级属性。对它的认知，取决于我们的生活环境、教育背景、消费能力、收入水平，取决于我们每天暴露在什么样的信息环境里，周围都是些什么样的人。设计师的美肯定跟工程师的美不一样，与其说“美”有客观标准，不如说“美”是一个话语体系。</span></span></span> 
</div> <div class="se-da7050c6 " data-slate-type="paragraph" data-slate-object="block" data-key="210"> 
<span data-slate-object="text" data-key="211"><span data-slate-leaf="true" data-offset-key="211:0" 
data-first-offset="true"><span data-slate-string="true">社会是由一个个圈子组成的，每个圈子都有自己的话语体系。艺术圈有艺术圈的说法，新闻圈有新闻圈的模式，新锐圈有新锐圈的套路，拍商拍的也有拍商拍的标准。分歧产生的原因往往是对同一个概念的定义不同，出发点不一样，自然谁也都说服不了谁。这就好比即使我说了这么多，你可能也依然不觉得我在这节课里给出来的例图有多好。但这根本不重要，喜欢的都看不过来呢，何必逼着自己去理解不感兴趣的东西。</span></span></span> 
</div> <div class="se-85fb24e1 " data-slate-type="paragraph" data-slate-object="block" data-key="212"> 
<span data-slate-object="text" data-key="213"><span data-slate-leaf="true" data-offset-key="213:0" 
data-first-offset="true"><span data-slate-string="true">我们为什么要关注其他人眼里“客观的美”？为什么又非得被别人的标准牵着鼻子走？如果一个东西能让你自得其乐，你又何苦纠结于它符不符合其他人眼里的“客观标准”。连价值都是人赋予的，那什么美不美、艺不艺术的，难道不是一个大骗局么？这就像总有人说要“跳出盒子思考问题（think 
outside the box）”，但其实他们不知道的是，他们只是跳到了一个更大的盒子里而已。</span></span></span> </div> <div class="se-6f193f59 
" data-slate-type="paragraph" data-slate-object="block" data-key="214"> <span data-slate-object="text" 
data-key="215"><span data-slate-leaf="true" data-offset-key="215:0" data-first-offset="true"><span 
data-slate-string="true">好不好不重要，真心喜欢才重要。</span></span></span> </div> <div class="se-b0c79d7f 
" data-slate-type="paragraph" data-slate-object="block" data-key="216"> <span data-slate-object="text" 
data-key="217"><span data-slate-leaf="true" data-offset-key="217:0" data-first-offset="true"><span 
data-slate-string="true">这节课就结束在这里吧，我们有缘再见。</span></span></span> </div> </div>', body_summary='', 
bundle='book', delta=0, body_format='full_html', langcode='zh-hans', revision_id=726 where 
entity_id=726 
 {executed in 5 msec}
2020-11-23 19:32:58.646 INFO  jdbc.sqltiming Line:373 - update node_revision__body set body_value='<div data-slate-editor="true" data-key="111" autocorrect="off" 
spellcheck="false" data-gramm="false" style="outline: none; white-space: pre-wrap; overflow-wrap: 
break-word;"> <div class="se-caafcf74 " data-slate-type="paragraph" data-slate-object="block" 
data-key="112"> <span data-slate-object="text" data-key="113"><span data-slate-leaf="true" 
data-offset-key="113:0" data-first-offset="true"><span data-slate-string="true">你好，我叫孙晟钧 Lufus，是小麥在开篇词里就提到过的神秘合作伙伴。</span></span></span> 
</div> <div class="se-ffb972e1 " data-slate-type="paragraph" data-slate-object="block" data-key="114"> 
<span data-slate-object="text" data-key="115"><span data-slate-leaf="true" data-offset-key="115:0" 
data-first-offset="true"><span data-slate-string="true">这套课一开始的时候，我们挖了很多坑，留了很多思考问题，比如在讲摄影史的时候提到过摄影是否就代表着忠实记录，客观还原；比如提到了摄影跟绘画之间的异同，举了 
Rodger Ballen 的例子来说明现在的摄影师们是如何用画画的方式拍照片；比如带你看了许多“莫名其妙”的照片。这些照片里有看似平淡无奇的建筑跟城市景观，像是 Mark Power 
跟贝歇夫妇，也有门槛极低、有相机就能拍的家庭快照，像是荒木经惟拍他的老婆阳子；也有操作复杂、技术含量极高，用普通人可能一辈子也接触不到的拍摄方式拍成的“技术流”照片，像是杉本博司的剧院、海景、闪电系列等等。</span></span></span> 
</div> <div class="se-a736f8a2 " data-slate-type="paragraph" data-slate-object="block" data-key="116"> 
<span data-slate-object="text" data-key="117"><span data-slate-leaf="true" data-offset-key="117:0" 
data-first-offset="true"><span data-slate-string="true">提了这么多外国人名，你可能依然会觉得他们离自己的日常生活非常遥远。“我不想当什么艺术家，也不想在大庭广众之下展览自己拍的照片。你让我看的那些照片我也没觉得它们有多好，什么艺术不艺术呀，把我家人孩子拍好最重要，你老跟我提他们干什么？”</span></span></span> 
</div> <div class="se-582d2f48 " data-slate-type="paragraph" data-slate-object="block" data-key="118"> 
<span data-slate-object="text" data-key="119"><span data-slate-leaf="true" data-offset-key="119:0" 
data-first-offset="true"><span data-slate-string="true">这最后一节课的目的，一是为了填坑跟查缺补漏，带你了解更多当今活跃的摄影师跟他们的创作技法，第二就是为了解答你心里可能会有的这些疑惑。我们的课程进行到这里，你应该多少也明白了摄影绝不仅仅是“拍到”那么简单。而在这套课程结束以后，你应该也不想再和其他爱好者们一样，在一段时间的拍摄后就“泯然众人矣”了，没有再拿起相机的动力和欲望。不光能拍到，还能拍好看，还能在长年累月的持续拍摄中找到快感，这是我跟小麥当初设计这套课时最主要的想法。没错，“艺术”这词是挺大的，也都快被用滥了，但学完这节课后你就会明白，艺术，其实也没多高大上，它原原本本就扎根在你我的日常生活里，也只有它，才是让你能一直持续拍下去的动力。</span></span></span> 
</div> <div class="se-415bf4a3 " data-slate-type="paragraph" data-slate-object="block" data-key="120"> 
<span data-slate-object="text" data-key="121"><span data-slate-leaf="true" data-offset-key="121:0" 
data-first-offset="true"><span data-slate-string="true">话不多说，咱们还是先来看几张图，它们都来自于我喜欢的几位中国摄影师。</span></span></span> 
</div> <div class="se-b01e240a" data-slate-type="image" data-slate-object="block" data-key="122"> 
<img class="se-6961ec48" src="https://static001.geekbang.org/resource/image/b3/96/b342ef1dc76842a60858fa23a5467f96.jpg"> 
<div class="se-0a4ca9e9"> 黄京 <br>微博：@吃土豆的人啊 <br>网站：http://huangjingfoto.com/ </div> </div> 
<div class="se-bf33ae1b" data-slate-type="image" data-slate-object="block" data-key="123"> 
<img class="se-e978984f" src="https://static001.geekbang.org/resource/image/81/bd/8174c139be40b138c165369b4db153bd.jpg"> 
<div class="se-203bdc7f"> 尤达任 <br>网站：https://darenyouphoto.com/ </div> </div> <div class="se-a8d30f12" 
data-slate-type="image" data-slate-object="block" data-key="124"> <img class="se-7771fabb" 
src="https://static001.geekbang.org/resource/image/41/1c/41b6e5a29293be1906c1c5770170e41c.jpg"> 
<div class="se-612aa94a"> 张内贤 <br>微博：@_张内咸 </div> </div> <div class="se-23afdc72" data-slate-type="image" 
data-slate-object="block" data-key="125"> <img class="se-2d2a0feb" src="https://static001.geekbang.org/resource/image/e0/9b/e0d9a0b9bc6cd62d887fd7c99537249b.jpg"> 
<div class="se-8de76ecc"> 宋朝 <br>网站介绍：http://photographyofchina.com/blog/song-chao--3 </div> 
</div> <div class="se-644acab2 " data-slate-type="paragraph" data-slate-object="block" data-key="126"> 
<span data-slate-object="text" data-key="127"><span data-slate-leaf="true" data-offset-key="127:0" 
data-first-offset="true"><span data-slate-string="true">上面这些照片应该是你在平时浏览摄影相关内容时，比较难见到的图片类型。这些摄影师的个人风格鲜明，每个人都有一套自己非常固定的拍摄技法，拍摄主题也相对不变。</span></span></span><span 
data-slate-object="text" data-key="128"><span data-slate-leaf="true" data-offset-key="128:0" 
data-first-offset="true"><span class="se-2df329c7" data-slate-type="bold" data-slate-object="mark"><span 
data-slate-string="true">长年累月保持一机一镜拍摄同一主题</span></span></span></span><span data-slate-object="text" 
data-key="129"><span data-slate-leaf="true" data-offset-key="129:0" data-first-offset="true"><span 
data-slate-string="true">，这是职业摄影师与业余爱好者间最大的区别。</span></span></span> </div> <div class="se-66480ec2 
" data-slate-type="paragraph" data-slate-object="block" data-key="130"> <span data-slate-object="text" 
data-key="131"><span data-slate-leaf="true" data-offset-key="131:0" data-first-offset="true"><span 
data-slate-string="true">再仔细观察就会发现，这些图片全部取材于摄影师自己的日常生活，也没有什么战地苦难、旅游美景，或是突发事件这些刺激人的外在因素。当然，最重要的是这些照片模仿起来都有一定难度，无论是从技术角度还是摄影师这个人本身。</span></span></span> 
</div> <div class="se-eb5616c3 " data-slate-type="paragraph" data-slate-object="block" data-key="132"> 
<span data-slate-object="text" data-key="133"><span data-slate-leaf="true" data-offset-key="133:0" 
data-first-offset="true"><span data-slate-string="true">简单分析下几位摄影师的图片。</span></span></span> 
</div> <div class="se-3663283d " data-slate-type="paragraph" data-slate-object="block" data-key="134"> 
<span data-slate-object="text" data-key="135"><span data-slate-leaf="true" data-offset-key="135:0" 
data-first-offset="true"><span data-slate-string="true">首先是黄京。关于他的介绍我就不在这儿多说了，网上有很多访谈，感兴趣可以去搜一搜，简而言之就是一个每天都挂着一台全手动的胶片旁轴相机，只要出门就拍两张，曾因为“喜欢观察单位食堂的鱼缸，而为了表达这种特殊的喜欢，前后拍了 
4000 多张照片”的人。他的拍法本身没有什么难度，就是靠纯粹观察日常生活里的琐碎细节，完全利用自然光，估焦估曝光，将这些细节直接、忠实地拍摄出来。虽然拍法没有难度，但恰恰是他这个对日常事物的</span></span></span><span 
data-slate-object="text" data-key="136"><span data-slate-leaf="true" data-offset-key="136:0" 
data-first-offset="true"><span class="se-fa55d325" data-slate-type="bold" data-slate-object="mark"><span 
data-slate-string="true">观察角度</span></span></span></span><span data-slate-object="text" data-key="137"><span 
data-slate-leaf="true" data-offset-key="137:0" data-first-offset="true"><span data-slate-string="true">无法被人模仿。优秀摄影师区别于爱好者的一大表现就是能将平常人觉得“这有什么可拍”的东西给拍出来。他能看见的你看不见，说的就是这个道理。</span></span></span> 
</div> <div class="se-421d9b5b " data-slate-type="paragraph" data-slate-object="block" data-key="138"> 
<span data-slate-object="text" data-key="139"><span data-slate-leaf="true" data-offset-key="139:0" 
data-first-offset="true"><span data-slate-string="true">即便是处理同一个场景，面对日常生活里相同的素材，不同的摄影师也可以对它们采取不同的视觉观察角度，使得这些相同的场景变成不同的照片。听上去挺玄的，但其实“观察角度”分解成参数无外乎就是</span></span></span><span 
data-slate-object="text" data-key="140"><span data-slate-leaf="true" data-offset-key="140:0" 
data-first-offset="true"><span class="se-4b123900" data-slate-type="bold" data-slate-object="mark"><span 
data-slate-string="true">距离、景别（近景、中景、远景）、取景框线（焦段）、拍摄角度（俯视、仰视、平视）和快门时机</span></span></span></span><span 
data-slate-object="text" data-key="141"><span data-slate-leaf="true" data-offset-key="141:0" 
data-first-offset="true"><span data-slate-string="true">，改变其中的任何一个变量，都能获得不一样的照片。长年大量用一机一镜拍摄同一主题的摄影师，基本上都形成了一套视觉的肌肉记忆，在面对一个场景时，能如同直觉一般在脑袋里将这些参数瞬间组合好。而想形成这样的直觉，就需要你在日常练习时，面对同一个场景，尽可能地多拍，不要拍完一张就草草收场，学会等待、预判快门时机，尝试用同样的镜头站在不同的距离下拍摄，远中近、上中下都观察好了再按快门。</span></span></span> 
</div> <div class="se-804420dc " data-slate-type="paragraph" data-slate-object="block" data-key="142"> 
<span data-slate-object="text" data-key="143"><span data-slate-leaf="true" data-offset-key="143:0" 
data-first-offset="true"><span data-slate-string="true">说回到这些例图本身。如果摄影师仅仅将他直接拍好的照片不加编辑，不加处理地原封不动给放出来，你大概率也不会觉得它是一张好照片。摄影师的工作绝不仅仅止步于按快门，后期编辑是每个想拍好照片的人都必须要做的一件事。许多摄影爱好者都会有一个错误观念，认为后期了的照片就不是好照片，好像只有“原片直出”才是正统。而我想纠正的是，首先，“原片直出”也是后期，是相机算法给出的后期，这在咱们之前的课程里已经说过了。其次，后期并不仅仅指涂抹、抠脸、加噪点、加暗角、更改画面内容、磨皮、拉腿等这些技巧；像是裁剪画面、调整画面明暗反差、调整色调、更改饱和度、点亮阴影、压暗高光等均属于后期的范畴。我们这套课里给出过的所有例图，每张都是摄影师后期调整的结果。</span></span></span><span 
data-slate-object="text" data-key="144"><span data-slate-leaf="true" data-offset-key="144:0" 
data-first-offset="true"><span class="se-f8a77711" data-slate-type="bold" data-slate-object="mark"><span 
data-slate-string="true">建立完整的后期意识，是拍好照片的必要条件。</span></span></span></span> </div> <div class="se-e0b7310e 
" data-slate-type="paragraph" data-slate-object="block" data-key="145"> <span data-slate-object="text" 
data-key="146"><span data-slate-leaf="true" data-offset-key="146:0" data-first-offset="true"><span 
data-slate-string="true">后期技术，其实早在胶片时代就已经诞生了，数码 Photoshop 只是沿用了胶片时代摄影师们的处理方法。而在胶片时代，每张从暗房放大出来的照片其实都是后期处理的结果，它就没有不后期的照片。摄影师用暗房放大机里的滤色片来改变对比度，用手遮光挡影来改变照片局部的明暗程度，像我们第七节课提到过的 
Ansel Adams，就是通过前期冲洗 + 后期暗房调整才能制造出下面例图里这样的视觉效果。</span></span></span> </div> <div class="se-fafa708d" 
data-slate-type="image" data-slate-object="block" data-key="147"> <img class="se-f71d2442" 
src="https://static001.geekbang.org/resource/image/ce/4f/ce70b7ba00e934e2585f4ae84113aa4f.jpg"> 
<div class="se-5cb5e8f4"> Ansel Adams 于 1941年在新墨西哥州拍摄的月升，后期制造了异常丰富的黑白影调 </div> </div> <div 
class="se-a4590241" data-slate-type="image" data-slate-object="block" data-key="148"> <img 
class="se-3b98bbbb" src="https://static001.geekbang.org/resource/image/e9/aa/e94feb87b60304e8b90f88351e72bbaa.jpg"> 
<div class="se-71de9db4"> Dennis Stock 于 1955 年拍摄的男明星 James Dean，左边是暗房放大的原片，上面标记着摄影师想要对画面效果做哪些更改的笔记；右边是经过暗房后期后的最终成片。 
</div> </div> <div class="se-bd126244 " data-slate-type="paragraph" data-slate-object="block" 
data-key="149"> <span data-slate-object="text" data-key="150"><span data-slate-leaf="true" 
data-offset-key="150:0" data-first-offset="true"><span data-slate-string="true">所以不要一味地认为拍照不需要 
P 图，掌握基本的明暗调节技巧，学会调色，是拍好照片必不可少的一步。</span></span></span> </div> <div class="se-a31eba81 " data-slate-type="paragraph" 
data-slate-object="block" data-key="151"> <span data-slate-object="text" data-key="152"><span 
data-slate-leaf="true" data-offset-key="152:0" data-first-offset="true"><span data-slate-string="true">虽然暗房、胶片听上去离我们很远，但如今它依然被广泛应用在艺术摄影领域，柯达、伊尔福、富士这些公司也依然在生产着胶片。当今的摄影师们之所以仍执着于使用胶片，除了情怀和好玩，也是因为银盐底片跟光学放大后的质感效果，对影调与色彩的完整还原，是现在的电子微喷尚无法完全模仿企及的。比如黄京老师的照片之所以会有那么强烈的明暗反差和大颗粒感，就是胶片与银盐相纸本身的材料特性所决定的。</span></span></span> 
</div> <div class="se-a7afc3ae " data-slate-type="paragraph" data-slate-object="block" data-key="153"> 
<span data-slate-object="text" data-key="154"><span data-slate-leaf="true" data-offset-key="154:0" 
data-first-offset="true"><span data-slate-string="true">黄京使用胶片拍摄，拍摄后再对胶片进行迫冲（延长冲洗时间 + 提高冲洗用的药水温度），好提高底片本身的对比度和颗粒感，制造出视觉效果很“硬”的底片原片，然后拿到暗房进行放大，再把放大后的银盐照片重新扫描回电脑里进行最后的修改编辑。所以，即便你选择了去模仿拍摄和他一样的照片，以同样的角度去拍居民楼的楼道（例图里的图七），你也不会得到观感相同的图片，原因就在于这里还涉及到了工艺问题。</span></span></span> 
</div> <div class="se-7afc2ea4 " data-slate-type="paragraph" data-slate-object="block" data-key="155"> 
<span data-slate-object="text" data-key="156"><span data-slate-leaf="true" data-offset-key="156:0" 
data-first-offset="true"><span data-slate-string="true">再比如，第二位摄影师尤达任，用到了凹版印刷（Photogravure）这一古老工艺。它的操作过程非常复杂，需要将曝光放大好的明胶照片转印到铜板上，利用化学反应将铜板腐蚀后，再涂抹油墨于铜板上进行印刷。由于油墨本身的质感，使得印制出的照片影调柔和，颗粒感细腻，看似平淡的画面经由工艺处理后会呈现完全不同的效果，</span></span></span><span 
data-slate-object="text" data-key="157"><span data-slate-leaf="true" data-offset-key="157:0" 
data-first-offset="true"><span class="se-8f6c9c91" data-slate-type="bold" data-slate-object="mark"><span 
data-slate-string="true">工艺本身就是组成照片的一部分。职业摄影师会主动选择用后期工艺打破视觉惯性，不避讳让照片变成纯粹人造的工艺品</span></span></span></span><span 
data-slate-object="text" data-key="158"><span data-slate-leaf="true" data-offset-key="158:0" 
data-first-offset="true"><span data-slate-string="true">，对他们而言，什么都没有“好看”重要，这也是他们与摄影爱好者的一大不同。而理解这类照片，往往就需要从摄影师的创作过程本身入手，明白工艺到底在作品里起到了什么样的作用。你可以再体会体会我们上节课提到的一句话，什么叫作“</span></span></span><span 
data-slate-object="text" data-key="159"><span data-slate-leaf="true" data-offset-key="159:0" 
data-first-offset="true"><span class="se-66c91a08" data-slate-type="bold" data-slate-object="mark"><span 
data-slate-string="true">画面就是事件本身</span></span></span></span><span data-slate-object="text" 
data-key="160"><span data-slate-leaf="true" data-offset-key="160:0" data-first-offset="true"><span 
data-slate-string="true">”。</span></span></span> </div> <div class="se-0266ab2e" data-slate-type="image" 
data-slate-object="block" data-key="161"> <img class="se-2b636cc1" src="https://static001.geekbang.org/resource/image/d5/42/d527c9a0c5aa0450f417d8cf4676f542.jpg"> 
<div class="se-8851a5e5"> 这四张照片是我使用锡版照相法拍摄的人物肖像。 <br>锡版摄影也是湿版摄影的一种，药水需由摄影师自行配置。 <br>它的制作过程复杂，一次只能拍摄一张， 
<br>最终成片都是曝光在金属版上无法被批量复制的实体照片。 </div> </div> <div class="se-5f043205 " data-slate-type="paragraph" 
data-slate-object="block" data-key="162"> <span data-slate-object="text" data-key="163"><span 
data-slate-leaf="true" data-offset-key="163:0" data-first-offset="true"><span data-slate-string="true">许多职业摄影师并不纠结于前期拍到了什么，对他们来说，来自现实的照片只是素材，如何利用后期恰当地处理运用这些素材，使它们呈现新的含义和新的视觉效果，要远比这些素材在前期拍得好不好更加重要——乍一听起来这很像平面设计的思维，没错，这就是摄影术发展到今天，人们打破“摄影只能基于现实”这一思维定式的方式。</span></span></span> 
</div> <div class="se-72607c17 " data-slate-type="paragraph" data-slate-object="block" data-key="164"> 
<span data-slate-object="text" data-key="165"><span data-slate-leaf="true" data-offset-key="165:0" 
data-first-offset="true"><span data-slate-string="true">除了我们提到过的这些技法，摄影工艺还有湿版、蓝晒、转印、铂金印相、电子负片、halo-chrome 
等等，对于这些技法的运用也使得摄影能够更加脱离于现实。当然，这么做并不就一定代表着高级，做不好反而有投机取巧的嫌疑。过程再复杂，运用到的技巧再花哨，不好看不好玩，观众体会不到也还是白扯。摄影毕竟是要用眼睛看的，再复杂的制作过程，最终的结果还是要回归到“好看”这件事上。</span></span></span> 
</div> <div class="se-0dcb8aa9 " data-slate-type="paragraph" data-slate-object="block" data-key="166"> 
<span data-slate-object="text" data-key="167"><span data-slate-leaf="true" data-offset-key="167:0" 
data-first-offset="true"><span data-slate-string="true">类似把照片当素材，大量借助后期工艺的摄影师不胜枚举，像是山本昌南、深濑昌久、托马斯·苏文，甚至包括森山大道在内的一众日本街头摄影师，都是借助了后期处理与暗房工艺才能创作出他们的那些名作。贴几张例图，我就不再多说了。</span></span></span> 
</div> <div class="se-65ca8430" data-slate-type="image" data-slate-object="block" data-key="168"> 
<img class="se-7213158a" src="https://static001.geekbang.org/resource/image/d3/92/d362d0e5d88f018672e5e9f88ea76392.jpg"> 
<div class="se-d09fb78f"> 山本昌南 </div> </div> <div class="se-4874e99f" data-slate-type="image" 
data-slate-object="block" data-key="169"> <img class="se-30722a66" src="https://static001.geekbang.org/resource/image/c7/13/c7244cfa577358f37ff71339a28f8813.jpg"> 
<div class="se-db729c19"> 深濑昌久 <br>《鸦》的许多照片并不是一开始就拍到的，而是后期从原片里裁剪放大得到的 </div> </div> <div class="se-b0ed5534" 
data-slate-type="image" data-slate-object="block" data-key="170"> <img class="se-0a44f634" 
src="https://static001.geekbang.org/resource/image/29/c3/2995b376f835846247b64377742ee5c3.jpg"> 
<div class="se-8db11414"> 托马斯·苏文，《线》 <br>网站：http://www.beijingsilvermine.com/ <br>苏文本人并不拍照片，而是从旧货市场大量收集废弃底片，将其修复、编辑，集结制作成工艺品画册。虽然是一本画册，但照片本身的作用被淡化。照片与画册本身的设计一起，共同被用作传达理念的工具。 
</div> </div> <div class="se-3c601a05 " data-slate-type="paragraph" data-slate-object="block" 
data-key="171"> <span data-slate-object="text" data-key="172"><span data-slate-leaf="true" 
data-offset-key="172:0" data-first-offset="true"><span data-slate-string="true">讲到这儿，你应该也明白了为什么我们总说，</span></span></span><span 
data-slate-object="text" data-key="173"><span data-slate-leaf="true" data-offset-key="173:0" 
data-first-offset="true"><span class="se-81768eb3" data-slate-type="bold" data-slate-object="mark"><span 
data-slate-string="true">摄影并不单纯局限于一张照片本身</span></span></span></span><span data-slate-object="text" 
data-key="174"><span data-slate-leaf="true" data-offset-key="174:0" data-first-offset="true"><span 
data-slate-string="true">。照片只是一座桥梁，摄影师想利用照片传达的观念，我们通过照片感受到的情绪，照片的审美属性、社会价值，都是我们在回答一张照片“为什么好”时应该考量的因素。</span></span></span> 
</div> <div class="se-457fdeff " data-slate-type="paragraph" data-slate-object="block" data-key="175"> 
<span data-slate-object="text" data-key="176"><span data-slate-leaf="true" data-offset-key="176:0" 
data-first-offset="true"><span data-slate-string="true">回到开篇的问题，我们为什么说贝歇夫妇好？因为他们的照片完整记录了二战后德国的工业建筑特征，那些照片本身所具有的文献价值，给后世理解德国工业发展留下了丰富的研究材料。我们为什么说杉本博司好？因为他透过照片，对“时间”和“空间”这两个概念进行了探讨，我们能从他的海景中感受到平静，从废弃的剧院里体验到永恒。他通过拍摄自然历史博物馆里的远古动物模型，带我们进行了一次时光穿梭，让我们看见了陆地上还没有人时的景观。我们为什么说荒木经惟好？因为他有勇气将自己的私人生活完整暴露在众目睽睽之下，有勇气用照片来挑战当时社会的诸多禁忌。你可以想想看，如果是你，生活在上世纪七十年代，敢不敢把自己跟老婆的私房照片放到市面上给大家品头论足。荒木的名作《感伤之旅》，不仅仅是一场蜜月旅行的完整记录，更是一份私人日记，其中包含更多的是在他老婆阳子去世后，用照片展开的对生死的探讨。</span></span></span> 
</div> <div class="se-47f9fd51" data-slate-type="image" data-slate-object="block" data-key="177"> 
<img class="se-487a9e84" src="https://static001.geekbang.org/resource/image/24/1a/2426816c36f79f4fca846dd2e9ba0e1a.png"> 
<div class="se-1c6271be"> 贝歇夫妇，《水塔》系列 </div> </div> <div class="se-eaa57eb9" data-slate-type="image" 
data-slate-object="block" data-key="178"> <img class="se-6c0a1acb" src="https://static001.geekbang.org/resource/image/b3/c5/b3d856b13ae81a709723a61f2c4b10c5.jpg"> 
<div class="se-1f8e2e57"> 杉本博司，《西洋镜》系列 </div> </div> <div class="se-d8a15019" data-slate-type="image" 
data-slate-object="block" data-key="179"> <img class="se-dfb665f6" src="https://static001.geekbang.org/resource/image/ea/54/eab8928b493b2fbf4cad7c2876cdb254.jpg"> 
<div class="se-b543f6c3"> 荒木经惟，《感伤之旅》 </div> </div> <div class="se-5e62a947 " data-slate-type="paragraph" 
data-slate-object="block" data-key="180"> <span data-slate-object="text" data-key="181"><span 
data-slate-leaf="true" data-offset-key="181:0" data-first-offset="true"><span data-slate-string="true">摄影是一门包罗万象的学科。什么可以做，什么不能做，什么可以拍，什么不能拍，并没有任何限制。每当我们苦恼于不知道该拍什么的时候，都应该问问自己，是不是我们先入为主的偏见，限制了我们的视野跟想象力。摄影在两百多年的发展历程中，想到了借助各种工艺来达到让自己区别于绘画，脱离于现实的目的。初学者可能会认为这偏离了摄影的本质，但我想说的是，恰恰是因为对各种工艺的运用，才拓宽了摄影的可能。我们之所以会固执地认为没后期的照片要比后期过的高级，抓拍就比摆拍难度更高，是不是因为看过的照片太少，对摄影的认识还依然停留在“拍到”“记录”“还原生活”这一层面呢？</span></span></span> 
</div> <div class="se-c5e7e99c " data-slate-type="paragraph" data-slate-object="block" data-key="182"> 
<span data-slate-object="text" data-key="183"><span data-slate-leaf="true" data-offset-key="183:0" 
data-first-offset="true"><span data-slate-string="true">职业摄影师会运用到那些工艺，将拍摄过程复杂化，很大原因是职业性质决定了他们必须要和别人不一样。也只有不一样，人为拔高拍摄门槛，才能让自己在激烈的竞争里脱颖而出。我们不是他们，日常生活里一般也不会和其他人“斗片”，暗中较劲，但我们为什么依然会执着于拍到一张好照片，依然想要和别人不一样？这又回到了往期课程里问过无数次的那个问题：你到底是因为什么而拍照。</span></span></span> 
</div> <div class="se-e0961f2b " data-slate-type="paragraph" data-slate-object="block" data-key="184"> 
<span data-slate-object="text" data-key="185"><span data-slate-leaf="true" data-offset-key="185:0" 
data-first-offset="true"><span data-slate-string="true">摄影由客观观察转向主观呈现是必然发生的事情。拍摄时间越长，越会对外界刺激脱敏，如果这时不转向拍摄自己的内心世界，用照片表达倾诉自己的内心感受，你必然会失去拍摄的动力。与大多数人的认知相反，摄影其实是个内观的过程。在利用复杂形式吸引到足够多的眼球和赞扬后，你的摄影之旅才刚刚开始。我这几年的一个感受是，一开始我也会被门槛高、形式感强、拍摄过程复杂的作品所吸引，而随着学习的不断深入，曾经许多我认为“这有什么好”的照片竟然变成了如今的心头好；曾经我理解不了，认为“是个人都能拍出来”的照片，恰恰成了现在我百看不厌的作品。导致这个变化的原因有很多，但最重要的是随着自己拍得、看得越来越多，我的差别心正在逐渐消失。</span></span></span> 
</div> <div class="se-45073f5a " data-slate-type="paragraph" data-slate-object="block" data-key="186"> 
<span data-slate-object="text" data-key="187"><span data-slate-leaf="true" data-offset-key="187:0" 
data-first-offset="true"><span data-slate-string="true">照片是一扇门，一张照片背后承载的是摄影师的内心世界，我们能通过这张照片，看见他的世界的样子。一个人过着什么样的生活就会拍出什么样的照片，这也是为什么我会被张内咸、宋朝的照片所吸引。他们照片的好，不是因为使用的技巧有多华丽，拍摄门槛有多高，而是因为那些照片就来自于他们自己的生活，来自于他们这个人本身。</span></span></span> 
</div> <div class="se-8261ca37 " data-slate-type="paragraph" data-slate-object="block" data-key="188"> 
<span data-slate-object="text" data-key="189"><span data-slate-leaf="true" data-offset-key="189:0" 
data-first-offset="true"><span data-slate-string="true">张内咸是一名体育老师，他的日常就是和孩子们打交道。只有他才能跟孩子们玩儿到一起，成为孩子里的一员，看见那些别人看不见的天真笑脸，而他的这个视角我永远学不会。</span></span></span> 
</div> <div class="se-4a2a515e " data-slate-type="paragraph" data-slate-object="block" data-key="190"> 
<span data-slate-object="text" data-key="191"><span data-slate-leaf="true" data-offset-key="191:0" 
data-first-offset="true"><span data-slate-string="true">摄影师宋朝本身就是矿工，作为一名矿民的生活经历，给了他看待留守老人和矿工同事们不一样的角度。他照片里的矿工并不是黑色、痛苦、单调的。相反，因为他深刻理解矿工的生活，明白真实情况并非如此，所以他选择呈现了矿工们最“正常”的一面，不去放大苦难。我们能从他的照片里感受到乐观幽默，体会到每个人的个性，看得见普通人对美好生活的向往。</span></span></span> 
</div> <div class="se-d3241a28 " data-slate-type="paragraph" data-slate-object="block" data-key="192"> 
<span data-slate-object="text" data-key="193"><span data-slate-leaf="true" data-offset-key="193:0" 
data-first-offset="true"><span data-slate-string="true">类似这样的照片，不是靠单纯的学术思辨和专业技能培训就可以学会的，想拍到它们，你首先得成为这样的人，将视角放回到平凡人的普通生活。</span></span></span> 
</div> <div class="se-5dddfdc0 " data-slate-type="paragraph" data-slate-object="block" data-key="194"> 
<span data-slate-object="text" data-key="195"><span data-slate-leaf="true" data-offset-key="195:0" 
data-first-offset="true"><span data-slate-string="true">看照片有的时候就跟看小说一样，是体验另一个世界，感受另一种人生的方式。</span></span></span> 
</div> <div class="se-d614ca4d " data-slate-type="paragraph" data-slate-object="block" data-key="196"> 
<span data-slate-object="text" data-key="197"><span data-slate-leaf="true" data-offset-key="197:0" 
data-first-offset="true"><span data-slate-string="true">最后，我想说一个问题。</span></span></span> </div> 
<div class="se-d0282e92 " data-slate-type="paragraph" data-slate-object="block" data-key="198"> 
<span data-slate-object="text" data-key="199"><span data-slate-leaf="true" data-offset-key="199:0" 
data-first-offset="true"><span data-slate-string="true">我们以前说过，审美是主观的，但美是有客观标准的。这句话并没错，但随着个人经历的丰富，我也开始问自己一个问题：当我建立起了自己对于“美”的标准后，我是不是该用同样的标准来衡量其他人？</span></span></span> 
</div> <div class="se-c985e3b3 " data-slate-type="paragraph" data-slate-object="block" data-key="200"> 
<span data-slate-object="text" data-key="201"><span data-slate-leaf="true" data-offset-key="201:0" 
data-first-offset="true"><span data-slate-string="true">很多人总喜欢问“能评价 XX 摄影师的摄影作品吗”这样的问题，其实困惑无外乎就是为什么他拍出那样的作品就可以成名，而那些成名的作品究竟又好在哪儿。会问这类问题就意味着提问的人其实并不喜欢这些作品，但总想尝试去理解它，觉得人家出名肯定是有道理的，说白了还是被名气和权威所裹挟，怀疑是不是自己的理解力不够，所以才看不懂这些照片。</span></span></span> 
</div> <div class="se-bc502cd4 " data-slate-type="paragraph" data-slate-object="block" data-key="202"> 
<span data-slate-object="text" data-key="203"><span data-slate-leaf="true" data-offset-key="203:0" 
data-first-offset="true"><span data-slate-string="true">作品的名气只取决于它被谈论的次数。人文艺术与自然科学最大的区别就在于，所谓的“价值”，是人赋予的，跟它本身的好坏无关。既然如此，那为什么别人赋予的价值就要比我的个人感受更有价值，更重要？</span></span></span> 
</div> <div class="se-10a5e828 " data-slate-type="paragraph" data-slate-object="block" data-key="204"> 
<span data-slate-object="text" data-key="205"><span data-slate-leaf="true" data-offset-key="205:0" 
data-first-offset="true"><span data-slate-string="true">蒙娜丽莎只是张证件照，鸡缸杯就是个黄酒杯，甭管它们被谁用、卖多贵、如何被无数人大书特书，吹得神乎其神，于我而言，它们都没有我爸妈二十几年前结婚生我时的照片更宝贵。我们要学会区分作为谈资的“艺术”和自己真心喜欢的“艺术”。艺术只可能是私人感受而无法与任何人共享，这也是我为什么总说放在博物馆里的艺术都不是艺术，因为真正的艺术你看不见。所以，对于那些看不懂的照片，我们完全可以忽略，没必要困惑。</span></span></span><span 
data-slate-object="text" data-key="206"><span data-slate-leaf="true" data-offset-key="206:0" 
data-first-offset="true"><span class="se-0aa17cbb" data-slate-type="bold" data-slate-object="mark"><span 
data-slate-string="true">照片是用来感受而不是用来研究的</span></span></span></span><span data-slate-object="text" 
data-key="207"><span data-slate-leaf="true" data-offset-key="207:0" data-first-offset="true"><span 
data-slate-string="true">，尝试去跟任何人争论一张照片的好坏都是没有意义的，你说服不了别人喜欢上一个他感受不到的东西。</span></span></span> 
</div> <div class="se-c579c17b " data-slate-type="paragraph" data-slate-object="block" data-key="208"> 
<span data-slate-object="text" data-key="209"><span data-slate-leaf="true" data-offset-key="209:0" 
data-first-offset="true"><span data-slate-string="true">应该说，“美”这个词本身就具有阶级属性。对它的认知，取决于我们的生活环境、教育背景、消费能力、收入水平，取决于我们每天暴露在什么样的信息环境里，周围都是些什么样的人。设计师的美肯定跟工程师的美不一样，与其说“美”有客观标准，不如说“美”是一个话语体系。</span></span></span> 
</div> <div class="se-da7050c6 " data-slate-type="paragraph" data-slate-object="block" data-key="210"> 
<span data-slate-object="text" data-key="211"><span data-slate-leaf="true" data-offset-key="211:0" 
data-first-offset="true"><span data-slate-string="true">社会是由一个个圈子组成的，每个圈子都有自己的话语体系。艺术圈有艺术圈的说法，新闻圈有新闻圈的模式，新锐圈有新锐圈的套路，拍商拍的也有拍商拍的标准。分歧产生的原因往往是对同一个概念的定义不同，出发点不一样，自然谁也都说服不了谁。这就好比即使我说了这么多，你可能也依然不觉得我在这节课里给出来的例图有多好。但这根本不重要，喜欢的都看不过来呢，何必逼着自己去理解不感兴趣的东西。</span></span></span> 
</div> <div class="se-85fb24e1 " data-slate-type="paragraph" data-slate-object="block" data-key="212"> 
<span data-slate-object="text" data-key="213"><span data-slate-leaf="true" data-offset-key="213:0" 
data-first-offset="true"><span data-slate-string="true">我们为什么要关注其他人眼里“客观的美”？为什么又非得被别人的标准牵着鼻子走？如果一个东西能让你自得其乐，你又何苦纠结于它符不符合其他人眼里的“客观标准”。连价值都是人赋予的，那什么美不美、艺不艺术的，难道不是一个大骗局么？这就像总有人说要“跳出盒子思考问题（think 
outside the box）”，但其实他们不知道的是，他们只是跳到了一个更大的盒子里而已。</span></span></span> </div> <div class="se-6f193f59 
" data-slate-type="paragraph" data-slate-object="block" data-key="214"> <span data-slate-object="text" 
data-key="215"><span data-slate-leaf="true" data-offset-key="215:0" data-first-offset="true"><span 
data-slate-string="true">好不好不重要，真心喜欢才重要。</span></span></span> </div> <div class="se-b0c79d7f 
" data-slate-type="paragraph" data-slate-object="block" data-key="216"> <span data-slate-object="text" 
data-key="217"><span data-slate-leaf="true" data-offset-key="217:0" data-first-offset="true"><span 
data-slate-string="true">这节课就结束在这里吧，我们有缘再见。</span></span></span> </div> </div>', body_summary='', 
bundle='book', delta=0, body_format='full_html', langcode='zh-hans', revision_id=726 where 
entity_id=726 
 {executed in 6 msec}
2020-11-23 19:32:58.676 INFO  jdbc.sqltiming Line:373 - select nodefiledd0_.nid as nid1_10_, nodefiledd0_.changed as changed2_10_, nodefiledd0_.created 
as created3_10_, nodefiledd0_.default_langcode as default_4_10_, nodefiledd0_.langcode as langcode5_10_, 
nodefiledd0_.promote as promote6_10_, nodefiledd0_.revision_translation_affected as revision7_10_, 
nodefiledd0_.status as status8_10_, nodefiledd0_.sticky as sticky9_10_, nodefiledd0_.title 
as title10_10_, nodefiledd0_.type as type11_10_, nodefiledd0_.uid as uid12_10_, nodefiledd0_.vid 
as vid13_10_ from node_field_data nodefiledd0_ where nodefiledd0_.nid=726 
 {executed in 2 msec}
2020-11-23 19:32:58.678 INFO  jdbc.resultsettable Line:610 - 
|----|-----------|-----------|-----------------|---------|--------|------------------------------|-------|-------|----------------------|-----|----|----|
|nid |changed    |created    |default_langcode |langcode |promote |revision_translation_affected |status |sticky |title                 |type |uid |vid |
|----|-----------|-----------|-----------------|---------|--------|------------------------------|-------|-------|----------------------|-----|----|----|
|726 |1606117090 |1606117090 |1                |zh-hans  |0       |1                             |1      |0      |20丨摄影的更多可能：摄影到底是不是艺术？ |book |1   |726 |
|----|-----------|-----------|-----------------|---------|--------|------------------------------|-------|-------|----------------------|-----|----|----|

2020-11-23 19:32:58.682 INFO  jdbc.sqltiming Line:373 - select nodefieldr0_.nid as nid1_11_0_, nodefieldr0_.changed as changed2_11_0_, nodefieldr0_.created 
as created3_11_0_, nodefieldr0_.default_langcode as default_4_11_0_, nodefieldr0_.langcode 
as langcode5_11_0_, nodefieldr0_.promote as promote6_11_0_, nodefieldr0_.revision_translation_affected 
as revision7_11_0_, nodefieldr0_.status as status8_11_0_, nodefieldr0_.sticky as sticky9_11_0_, 
nodefieldr0_.title as title10_11_0_, nodefieldr0_.uid as uid11_11_0_, nodefieldr0_.vid as vid12_11_0_ 
from node_field_revision nodefieldr0_ where nodefieldr0_.nid=726 
 {executed in 1 msec}
2020-11-23 19:32:58.685 INFO  jdbc.resultsettable Line:610 - 
|---------|-----------|-----------|-----------------|---------|--------|------------------------------|-------|-------|----------------------|----|----|
|nid      |changed    |created    |default_langcode |langcode |promote |revision_translation_affected |status |sticky |title                 |uid |vid |
|---------|-----------|-----------|-----------------|---------|--------|------------------------------|-------|-------|----------------------|----|----|
|[unread] |1606117090 |1606117090 |1                |zh-hans  |0       |1                             |1      |0      |20丨摄影的更多可能：摄影到底是不是艺术？ |1   |726 |
|---------|-----------|-----------|-----------------|---------|--------|------------------------------|-------|-------|----------------------|----|----|

2020-11-23 19:32:58.702 INFO  jdbc.sqltiming Line:373 - update node_field_data set changed=1606131178, created=1606131178, default_langcode=1, langcode='zh-hans', 
promote=0, revision_translation_affected=1, status=1, sticky=0, title='20丨摄影的更多可能：摄影到底是不是艺术？', 
type='book', uid=1, vid=726 where nid=726 
 {executed in 3 msec}
2020-11-23 19:32:58.704 INFO  jdbc.sqltiming Line:373 - update node_field_revision set changed=1606131178, created=1606131178, default_langcode=1, 
langcode='zh-hans', promote=0, revision_translation_affected=1, status=1, sticky=0, title='20丨摄影的更多可能：摄影到底是不是艺术？', 
uid=1, vid=726 where nid=726 
 {executed in 1 msec}
2020-11-23 19:32:58.725 INFO  jdbc.sqltiming Line:373 - select bookfieldm0_.entity_id as entity_i1_8_, bookfieldm0_.bundle as bundle2_8_, bookfieldm0_.delta 
as delta3_8_, bookfieldm0_.langcode as langcode4_8_, bookfieldm0_.field_media_value as field_me5_8_, 
bookfieldm0_.revision_id as revision6_8_ from node__field_media bookfieldm0_ where bookfieldm0_.entity_id=726 
 {executed in 1 msec}
2020-11-23 19:32:58.726 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------------|------------|
|entity_id |bundle |delta |langcode |field_media_value |revision_id |
|----------|-------|------|---------|------------------|------------|
|726       |book   |0     |zh-hans  |                  |726         |
|----------|-------|------|---------|------------------|------------|

2020-11-23 19:32:58.744 INFO  jdbc.sqltiming Line:373 - select nodefieldm0_.entity_id as entity_i1_17_0_, nodefieldm0_.bundle as bundle2_17_0_, nodefieldm0_.delta 
as delta3_17_0_, nodefieldm0_.langcode as langcode4_17_0_, nodefieldm0_.field_media_value as 
field_me5_17_0_, nodefieldm0_.revision_id as revision6_17_0_ from node_revision__field_media 
nodefieldm0_ where nodefieldm0_.entity_id=726 
 {executed in 1 msec}
2020-11-23 19:32:58.746 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------------|------------|
|entity_id |bundle |delta |langcode |field_media_value |revision_id |
|----------|-------|------|---------|------------------|------------|
|[unread]  |book   |0     |zh-hans  |                  |726         |
|----------|-------|------|---------|------------------|------------|

2020-11-23 19:32:58.763 INFO  jdbc.sqltiming Line:373 - select bookfieldc0_.entity_id as entity_i1_5_, bookfieldc0_.bundle as bundle2_5_, bookfieldc0_.field_comment_value 
as field_co3_5_, bookfieldc0_.delta as delta4_5_, bookfieldc0_.field_comment_format as field_co5_5_, 
bookfieldc0_.langcode as langcode6_5_, bookfieldc0_.revision_id as revision7_5_ from node__field_comment 
bookfieldc0_ where bookfieldc0_.entity_id=726 
 {executed in 1 msec}
2020-11-23 19:32:58.765 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|--------------------|------|---------------------|---------|------------|
|entity_id |bundle |field_comment_value |delta |field_comment_format |langcode |revision_id |
|----------|-------|--------------------|------|---------------------|---------|------------|
|726       |book   |                    |0     |full_html            |zh-hans  |726         |
|----------|-------|--------------------|------|---------------------|---------|------------|

2020-11-23 19:32:58.780 INFO  jdbc.sqltiming Line:373 - update node__field_comment set bundle='book', field_comment_value='<li class="reJj6Thl_0"><img 
src="https://static001.geekbang.org/account/avatar/00/18/ea/05/b164dc15.jpg" class="_2273kGdT_0"> 
<div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> <a>westfall</a> 
<!----> </div> <div class="_1H1Z49Dr_0"> 2020-02-06 </div> </div> <!----> </div> <div> <div 
class="_3M6kV3zb_0 _3D2NkqD6_0"> 我们的日常生活就是艺术的来源，摄影是一座桥梁，不仅仅是生活的记录，更是我们内心世界的表达。艺术的价值不在于别人怎么定义，而在于自己喜不喜欢。好干的一节课，信息量好大，我要多看几遍。 
</div> <!----> <!----> <div class="_1w8H0ktn_0 _2A421P4G_0"> <div class="_2jsFl-X0_0"> <i class="iconfont"></i> 
<span></span> </div> <div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class="">2</span> 
</div> <!----> </div> </div> </div></li> <li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/11/5f/d5/2fec2911.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<a>yu</a> <!----> </div> <div class="_1H1Z49Dr_0"> 2020-02-09 </div> </div> <!----> </div> 
<div> <div class="_3M6kV3zb_0 _3D2NkqD6_0"> 自己喜不喜欢才重要，没有必要逼着自己去欣赏别人认为的好照片，但是随着个人认知的提升，对美的标准是会改变的，比如之前欣赏不来的现在就喜欢了，之前喜欢的现在觉得不好看了。 
</div> <!----> <!----> <div class="_1w8H0ktn_0 _2A421P4G_0"> <div class="_2jsFl-X0_0"> <i class="iconfont"></i> 
<span></span> </div> <div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class="">1</span> 
</div> <!----> </div> </div> </div></li> <li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/0f/92/6d/becd841a.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<a>escray</a> <!----> </div> <div class="_1H1Z49Dr_0"> 2020-02-08 </div> </div> <!----> </div> 
<div> <div class="_3M6kV3zb_0"> 摄影入门课 <br>20 | 摄影的更多可能：摄影到底是不是艺术？ <br> <br>对于一个手机拍照党，我其实更喜欢今天这类的专栏文章，感觉上是拓宽了视野。不喜欢技术上相对复杂的照片，喜欢看张内咸拍的小学生和宋朝拍的矿工，感觉更真实。 
<br> <br>对于照片后期处理的复杂度知道了一点皮毛，估计有生之年是不会主动去做类似的事情。高中同学里面有一位喜欢胶片相机拍摄的，拍的照片确实好看，崇敬之情如滔滔江水…… <br> 
<br>贝歇夫妇的照片我看不出来技术上的门道，但是也觉得挺有意思的，“完整的记录了二战后德国的工业建筑特征”。不知道有没有中国摄影师做类似的事情。 <br> <br>面对没有限制的摄影，我到底是为什么而拍照？我觉的在某种程度上是害怕遗忘，我希望用照片记录自己和他人之间的关系，记录自己看到的世界。不过即使是每天用手机拍照，然后发朋友圈，我也没做到“每日一拍”，有时候会忘记，有时候会觉得没的拍。 
<br> <br>在《读库》上看到过马宏杰拍的“最后的耍猴人”和“西部招妻”，还有任曙林的“中学生”，喜欢类似的比较纪实的照片。 <br> <br>照片是用来感受的而不是用来研究的，大赞。 
</div> <div class="_2r3UB1GX_0"> <span>展开</span><i class="iconfont"></i> </div> <!----> <div 
class="_1w8H0ktn_0 _2A421P4G_0"> <div class="_2jsFl-X0_0"> <i class="iconfont"></i> <span></span> 
</div> <div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class="">1</span> </div> <!----> 
</div> </div> </div></li> <li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/10/de/24/1d3d026f.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<a>zchq88</a> <!----> </div> <div class="_1H1Z49Dr_0"> 2020-02-08 </div> </div> <!----> </div> 
<div> <div class="_3M6kV3zb_0 _3D2NkqD6_0"> 感觉最后一课直接上升到了哲学了，一下子解开了我自己对拍照的疑惑，也给了我自己思考为何想拍好照片答案，记录下我认为美得东西就是我拍照的最大意义。谢谢 
</div> <!----> <!----> <div class="_1w8H0ktn_0 _2A421P4G_0"> <div class="_2jsFl-X0_0"> <i class="iconfont"></i> 
<span></span> </div> <div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class="">1</span> 
</div> <!----> </div> </div> </div></li> <li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/0f/96/9f/85eefe85.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<a>木叶</a> <!----> </div> <div class="_1H1Z49Dr_0"> 2020-02-07 </div> </div> <!----> </div> 
<div> <div class="_3M6kV3zb_0 _3D2NkqD6_0"> “喜欢的都看不过来呢，何必逼着自己去理解不感兴趣的东西”大赞 </div> <!----> <!----> 
<div class="_1w8H0ktn_0 _2A421P4G_0"> <div class="_2jsFl-X0_0"> <i class="iconfont"></i> <span></span> 
</div> <div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class="">1</span> </div> <!----> 
</div> </div> </div></li> <li class="reJj6Thl_0"><img src="http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKUciczbJlHFFm0NObqpURficUGaEDSkMfCe3o4fic89CUsVyibg4CvicvoSMZIibxMZBSAjicJ6icZbTlUibA/132" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<a>琪琪</a> <!----> </div> <div class="_1H1Z49Dr_0"> 2020-02-07 </div> </div> <!----> </div> 
<div> <div class="_3M6kV3zb_0"> 反手就是一个赞！ </div> <div class="_2r3UB1GX_0"> <span>展开</span><i 
class="iconfont"></i> </div> <!----> <div class="_1w8H0ktn_0 _2A421P4G_0"> <div class="_2jsFl-X0_0"> 
<i class="iconfont"></i> <span></span> </div> <div class="_2P4B1Hdm_0"> <i class="iconfont"></i> 
<span class="">1</span> </div> <!----> </div> </div> </div></li> <li class="reJj6Thl_0"><img 
src="https://static001.geekbang.org/account/avatar/00/0f/c0/e5/22165121.jpg" class="_2273kGdT_0"> 
<div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> <a>teaopener</a> 
<!----> </div> <div class="_1H1Z49Dr_0"> 2020-02-10 </div> </div> <!----> </div> <div> <div 
class="_3M6kV3zb_0"> 跟着老师走下来，准备二刷 </div> <div class="_2r3UB1GX_0"> <span>展开</span><i class="iconfont"></i> 
</div> <!----> <div class="_1w8H0ktn_0 _2A421P4G_0"> <div class="_2jsFl-X0_0"> <i class="iconfont"></i> 
<span></span> </div> <div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class=""></span> 
</div> <!----> </div> </div> </div></li> <li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/1b/61/69/6bcc5e63.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<a>lz</a> <!----> </div> <div class="_1H1Z49Dr_0"> 2020-02-09 </div> </div> <!----> </div> 
<div> <div class="_3M6kV3zb_0"> 这个声音太亲切了😂 </div> <div class="_2r3UB1GX_0"> <span>展开</span><i 
class="iconfont"></i> </div> <!----> <div class="_1w8H0ktn_0 _2A421P4G_0"> <div class="_2jsFl-X0_0"> 
<i class="iconfont"></i> <span>1</span> </div> <div class="_2P4B1Hdm_0"> <i class="iconfont"></i> 
<span class=""></span> </div> <!----> </div> </div> </div></li>', delta=0, field_comment_format='full_html', 
langcode='zh-hans', revision_id=726 where entity_id=726 
 {executed in 2 msec}
2020-11-23 19:32:58.792 INFO  jdbc.sqltiming Line:373 - select nodefieldc0_.entity_id as entity_i1_14_0_, nodefieldc0_.bundle as bundle2_14_0_, nodefieldc0_.field_comment_value 
as field_co3_14_0_, nodefieldc0_.delta as delta4_14_0_, nodefieldc0_.field_comment_format as 
field_co5_14_0_, nodefieldc0_.langcode as langcode6_14_0_, nodefieldc0_.revision_id as revision7_14_0_ 
from node_revision__field_comment nodefieldc0_ where nodefieldc0_.entity_id=726 
 {executed in 1 msec}
2020-11-23 19:32:58.794 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|--------------------|------|---------------------|---------|------------|
|entity_id |bundle |field_comment_value |delta |field_comment_format |langcode |revision_id |
|----------|-------|--------------------|------|---------------------|---------|------------|
|[unread]  |book   |                    |0     |full_html            |zh-hans  |726         |
|----------|-------|--------------------|------|---------------------|---------|------------|

2020-11-23 19:32:58.812 INFO  jdbc.sqltiming Line:373 - update node_revision__field_comment set bundle='book', field_comment_value='<li class="reJj6Thl_0"><img 
src="https://static001.geekbang.org/account/avatar/00/18/ea/05/b164dc15.jpg" class="_2273kGdT_0"> 
<div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> <a>westfall</a> 
<!----> </div> <div class="_1H1Z49Dr_0"> 2020-02-06 </div> </div> <!----> </div> <div> <div 
class="_3M6kV3zb_0 _3D2NkqD6_0"> 我们的日常生活就是艺术的来源，摄影是一座桥梁，不仅仅是生活的记录，更是我们内心世界的表达。艺术的价值不在于别人怎么定义，而在于自己喜不喜欢。好干的一节课，信息量好大，我要多看几遍。 
</div> <!----> <!----> <div class="_1w8H0ktn_0 _2A421P4G_0"> <div class="_2jsFl-X0_0"> <i class="iconfont"></i> 
<span></span> </div> <div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class="">2</span> 
</div> <!----> </div> </div> </div></li> <li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/11/5f/d5/2fec2911.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<a>yu</a> <!----> </div> <div class="_1H1Z49Dr_0"> 2020-02-09 </div> </div> <!----> </div> 
<div> <div class="_3M6kV3zb_0 _3D2NkqD6_0"> 自己喜不喜欢才重要，没有必要逼着自己去欣赏别人认为的好照片，但是随着个人认知的提升，对美的标准是会改变的，比如之前欣赏不来的现在就喜欢了，之前喜欢的现在觉得不好看了。 
</div> <!----> <!----> <div class="_1w8H0ktn_0 _2A421P4G_0"> <div class="_2jsFl-X0_0"> <i class="iconfont"></i> 
<span></span> </div> <div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class="">1</span> 
</div> <!----> </div> </div> </div></li> <li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/0f/92/6d/becd841a.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<a>escray</a> <!----> </div> <div class="_1H1Z49Dr_0"> 2020-02-08 </div> </div> <!----> </div> 
<div> <div class="_3M6kV3zb_0"> 摄影入门课 <br>20 | 摄影的更多可能：摄影到底是不是艺术？ <br> <br>对于一个手机拍照党，我其实更喜欢今天这类的专栏文章，感觉上是拓宽了视野。不喜欢技术上相对复杂的照片，喜欢看张内咸拍的小学生和宋朝拍的矿工，感觉更真实。 
<br> <br>对于照片后期处理的复杂度知道了一点皮毛，估计有生之年是不会主动去做类似的事情。高中同学里面有一位喜欢胶片相机拍摄的，拍的照片确实好看，崇敬之情如滔滔江水…… <br> 
<br>贝歇夫妇的照片我看不出来技术上的门道，但是也觉得挺有意思的，“完整的记录了二战后德国的工业建筑特征”。不知道有没有中国摄影师做类似的事情。 <br> <br>面对没有限制的摄影，我到底是为什么而拍照？我觉的在某种程度上是害怕遗忘，我希望用照片记录自己和他人之间的关系，记录自己看到的世界。不过即使是每天用手机拍照，然后发朋友圈，我也没做到“每日一拍”，有时候会忘记，有时候会觉得没的拍。 
<br> <br>在《读库》上看到过马宏杰拍的“最后的耍猴人”和“西部招妻”，还有任曙林的“中学生”，喜欢类似的比较纪实的照片。 <br> <br>照片是用来感受的而不是用来研究的，大赞。 
</div> <div class="_2r3UB1GX_0"> <span>展开</span><i class="iconfont"></i> </div> <!----> <div 
class="_1w8H0ktn_0 _2A421P4G_0"> <div class="_2jsFl-X0_0"> <i class="iconfont"></i> <span></span> 
</div> <div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class="">1</span> </div> <!----> 
</div> </div> </div></li> <li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/10/de/24/1d3d026f.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<a>zchq88</a> <!----> </div> <div class="_1H1Z49Dr_0"> 2020-02-08 </div> </div> <!----> </div> 
<div> <div class="_3M6kV3zb_0 _3D2NkqD6_0"> 感觉最后一课直接上升到了哲学了，一下子解开了我自己对拍照的疑惑，也给了我自己思考为何想拍好照片答案，记录下我认为美得东西就是我拍照的最大意义。谢谢 
</div> <!----> <!----> <div class="_1w8H0ktn_0 _2A421P4G_0"> <div class="_2jsFl-X0_0"> <i class="iconfont"></i> 
<span></span> </div> <div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class="">1</span> 
</div> <!----> </div> </div> </div></li> <li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/0f/96/9f/85eefe85.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<a>木叶</a> <!----> </div> <div class="_1H1Z49Dr_0"> 2020-02-07 </div> </div> <!----> </div> 
<div> <div class="_3M6kV3zb_0 _3D2NkqD6_0"> “喜欢的都看不过来呢，何必逼着自己去理解不感兴趣的东西”大赞 </div> <!----> <!----> 
<div class="_1w8H0ktn_0 _2A421P4G_0"> <div class="_2jsFl-X0_0"> <i class="iconfont"></i> <span></span> 
</div> <div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class="">1</span> </div> <!----> 
</div> </div> </div></li> <li class="reJj6Thl_0"><img src="http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKUciczbJlHFFm0NObqpURficUGaEDSkMfCe3o4fic89CUsVyibg4CvicvoSMZIibxMZBSAjicJ6icZbTlUibA/132" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<a>琪琪</a> <!----> </div> <div class="_1H1Z49Dr_0"> 2020-02-07 </div> </div> <!----> </div> 
<div> <div class="_3M6kV3zb_0"> 反手就是一个赞！ </div> <div class="_2r3UB1GX_0"> <span>展开</span><i 
class="iconfont"></i> </div> <!----> <div class="_1w8H0ktn_0 _2A421P4G_0"> <div class="_2jsFl-X0_0"> 
<i class="iconfont"></i> <span></span> </div> <div class="_2P4B1Hdm_0"> <i class="iconfont"></i> 
<span class="">1</span> </div> <!----> </div> </div> </div></li> <li class="reJj6Thl_0"><img 
src="https://static001.geekbang.org/account/avatar/00/0f/c0/e5/22165121.jpg" class="_2273kGdT_0"> 
<div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> <a>teaopener</a> 
<!----> </div> <div class="_1H1Z49Dr_0"> 2020-02-10 </div> </div> <!----> </div> <div> <div 
class="_3M6kV3zb_0"> 跟着老师走下来，准备二刷 </div> <div class="_2r3UB1GX_0"> <span>展开</span><i class="iconfont"></i> 
</div> <!----> <div class="_1w8H0ktn_0 _2A421P4G_0"> <div class="_2jsFl-X0_0"> <i class="iconfont"></i> 
<span></span> </div> <div class="_2P4B1Hdm_0"> <i class="iconfont"></i> <span class=""></span> 
</div> <!----> </div> </div> </div></li> <li class="reJj6Thl_0"><img src="https://static001.geekbang.org/account/avatar/00/1b/61/69/6bcc5e63.jpg" 
class="_2273kGdT_0"> <div class="_2CG0SquK_0"> <div class="_304R4gla_0"> <div> <div class="_18Dng5rT_0"> 
<a>lz</a> <!----> </div> <div class="_1H1Z49Dr_0"> 2020-02-09 </div> </div> <!----> </div> 
<div> <div class="_3M6kV3zb_0"> 这个声音太亲切了😂 </div> <div class="_2r3UB1GX_0"> <span>展开</span><i 
class="iconfont"></i> </div> <!----> <div class="_1w8H0ktn_0 _2A421P4G_0"> <div class="_2jsFl-X0_0"> 
<i class="iconfont"></i> <span>1</span> </div> <div class="_2P4B1Hdm_0"> <i class="iconfont"></i> 
<span class=""></span> </div> <!----> </div> </div> </div></li>', delta=0, field_comment_format='full_html', 
langcode='zh-hans', revision_id=726 where entity_id=726 
 {executed in 2 msec}
2020-11-23 19:32:58.821 INFO  jdbc.sqltiming Line:373 - select bookfieldt0_.entity_id as entity_i1_9_, bookfieldt0_.bundle as bundle2_9_, bookfieldt0_.delta 
as delta3_9_, bookfieldt0_.langcode as langcode4_9_, bookfieldt0_.revision_id as revision5_9_, 
bookfieldt0_.field_thumb_value as field_th6_9_ from node__field_thumb bookfieldt0_ where bookfieldt0_.entity_id=726 
 {executed in 1 msec}
2020-11-23 19:32:58.823 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------|------------------|
|entity_id |bundle |delta |langcode |revision_id |field_thumb_value |
|----------|-------|------|---------|------------|------------------|
|726       |book   |0     |zh-hans  |726         |                  |
|----------|-------|------|---------|------------|------------------|

2020-11-23 19:32:58.839 INFO  jdbc.sqltiming Line:373 - update node__field_thumb set bundle='book', delta=0, langcode='zh-hans', revision_id=726, field_thumb_value='https://static001.geekbang.org/resource/image/1f/0b/1fac7080ea172224f75d142672e8bc0b.jpg' 
where entity_id=726 
 {executed in 2 msec}
2020-11-23 19:32:58.845 INFO  jdbc.sqltiming Line:373 - select nodefieldt0_.entity_id as entity_i1_18_0_, nodefieldt0_.bundle as bundle2_18_0_, nodefieldt0_.delta 
as delta3_18_0_, nodefieldt0_.langcode as langcode4_18_0_, nodefieldt0_.revision_id as revision5_18_0_, 
nodefieldt0_.field_thumb_value as field_th6_18_0_ from node_revision__field_thumb nodefieldt0_ 
where nodefieldt0_.entity_id=726 
 {executed in 1 msec}
2020-11-23 19:32:58.847 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|---------|------------|------------------|
|entity_id |bundle |delta |langcode |revision_id |field_thumb_value |
|----------|-------|------|---------|------------|------------------|
|[unread]  |book   |0     |zh-hans  |726         |                  |
|----------|-------|------|---------|------------|------------------|

2020-11-23 19:32:58.863 INFO  jdbc.sqltiming Line:373 - update node_revision__field_thumb set bundle='book', delta=0, langcode='zh-hans', revision_id=726, 
field_thumb_value='https://static001.geekbang.org/resource/image/1f/0b/1fac7080ea172224f75d142672e8bc0b.jpg' 
where entity_id=726 
 {executed in 2 msec}
2020-11-23 19:32:58.870 INFO  jdbc.sqltiming Line:373 - select bookfieldf0_.entity_id as entity_i1_6_0_, bookfieldf0_.bundle as bundle2_6_0_, bookfieldf0_.delta 
as delta3_6_0_, bookfieldf0_.field_fenlei_target_id as field_fe4_6_0_, bookfieldf0_.langcode 
as langcode5_6_0_, bookfieldf0_.revision_id as revision6_6_0_ from node__field_fenlei bookfieldf0_ 
where bookfieldf0_.entity_id=726 
 {executed in 1 msec}
2020-11-23 19:32:58.872 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------------|---------|------------|
|entity_id |bundle |delta |field_fenlei_target_id |langcode |revision_id |
|----------|-------|------|-----------------------|---------|------------|
|[unread]  |book   |0     |1                      |zh-hans  |726         |
|----------|-------|------|-----------------------|---------|------------|

2020-11-23 19:32:58.889 INFO  jdbc.sqltiming Line:373 - select nodefieldf0_.entity_id as entity_i1_15_0_, nodefieldf0_.bundle as bundle2_15_0_, nodefieldf0_.delta 
as delta3_15_0_, nodefieldf0_.field_fenlei_target_id as field_fe4_15_0_, nodefieldf0_.langcode 
as langcode5_15_0_, nodefieldf0_.revision_id as revision6_15_0_ from node_revision__field_fenlei 
nodefieldf0_ where nodefieldf0_.entity_id=726 
 {executed in 1 msec}
2020-11-23 19:32:58.891 INFO  jdbc.resultsettable Line:610 - 
|----------|-------|------|-----------------------|---------|------------|
|entity_id |bundle |delta |field_fenlei_target_id |langcode |revision_id |
|----------|-------|------|-----------------------|---------|------------|
|[unread]  |book   |0     |1                      |zh-hans  |726         |
|----------|-------|------|-----------------------|---------|------------|

2020-11-23 19:32:58.908 INFO  jdbc.sqltiming Line:373 - select bookchecke0_.item_id as item_id1_2_, bookchecke0_.fsid as fsid2_2_, bookchecke0_.got 
as got3_2_, bookchecke0_.name as name4_2_, bookchecke0_.parse_fail as parse_fa5_2_, bookchecke0_.parsed 
as parsed6_2_, bookchecke0_.path as path7_2_, bookchecke0_.title as title8_2_, bookchecke0_.vid 
as vid9_2_ from book_check bookchecke0_ where bookchecke0_.fsid='679112188977125' and bookchecke0_.name='net_content' 
 {executed in 1 msec}
2020-11-23 19:32:58.910 INFO  jdbc.resultsettable Line:610 - 
|--------|---------|---------|---------|-----------|---------|---------|---------|---------|
|item_id |fsid     |got      |name     |parse_fail |parsed   |path     |title    |vid      |
|--------|---------|---------|---------|-----------|---------|---------|---------|---------|
|727     |[unread] |[unread] |[unread] |[unread]   |[unread] |[unread] |[unread] |[unread] |
|--------|---------|---------|---------|-----------|---------|---------|---------|---------|

2020-11-23 19:33:46.353 INFO  geek.me.javaapi.JavaApiApplication Line:651 - No active profile set, falling back to default profiles: default
2020-11-23 19:33:48.496 INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate Line:127 - Bootstrapping Spring Data JPA repositories in DEFERRED mode.
2020-11-23 19:33:49.049 INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate Line:187 - Finished Spring Data repository scanning in 507ms. Found 20 JPA repository interfaces.
2020-11-23 19:33:49.765 INFO  org.springframework.cloud.context.scope.GenericScope Line:295 - BeanFactory id=a57235e8-b792-3882-8d3a-8bc20defb1fe
2020-11-23 19:33:51.276 INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer Line:108 - Tomcat initialized with port(s): 8080 (http)
2020-11-23 19:33:51.316 INFO  org.apache.coyote.http11.Http11NioProtocol Line:173 - Initializing ProtocolHandler ["http-nio-8080"]
2020-11-23 19:33:51.318 INFO  org.apache.catalina.core.StandardService Line:173 - Starting service [Tomcat]
2020-11-23 19:33:51.320 INFO  org.apache.catalina.core.StandardEngine Line:173 - Starting Servlet engine: [Apache Tomcat/9.0.37]
2020-11-23 19:33:51.793 INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Line:173 - Initializing Spring embedded WebApplicationContext
2020-11-23 19:33:51.794 INFO  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext Line:285 - Root WebApplicationContext: initialization completed in 5364 ms
2020-11-23 19:33:52.538 INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Line:181 - Initializing ExecutorService 'applicationTaskExecutor'
2020-11-23 19:33:52.586 INFO  com.zaxxer.hikari.HikariDataSource Line:110 - HikariPool-1 - Starting...
2020-11-23 19:33:53.087 INFO  com.zaxxer.hikari.HikariDataSource Line:123 - HikariPool-1 - Start completed.
2020-11-23 19:33:53.546 INFO  org.hibernate.jpa.internal.util.LogHelper Line:31  - HHH000204: Processing PersistenceUnitInfo [name: default]
2020-11-23 19:33:53.799 INFO  org.hibernate.Version Line:44  - HHH000412: Hibernate ORM core version 5.4.20.Final
2020-11-23 19:33:54.562 INFO  org.hibernate.annotations.common.Version Line:49  - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-11-23 19:33:54.993 INFO  com.netflix.config.sources.URLConfigurationSource Line:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-11-23 19:33:55.015 INFO  com.netflix.config.sources.URLConfigurationSource Line:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-11-23 19:33:55.160 INFO  org.hibernate.dialect.Dialect Line:170 - HHH000400: Using dialect: org.hibernate.dialect.MySQL55Dialect
2020-11-23 19:33:57.535 INFO  org.apache.coyote.http11.Http11NioProtocol Line:173 - Starting ProtocolHandler ["http-nio-8080"]
2020-11-23 19:33:57.653 INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer Line:220 - Tomcat started on port(s): 8080 (http) with context path ''
2020-11-23 19:33:58.442 INFO  org.springframework.data.repository.config.DeferredRepositoryInitializationListener Line:49  - Triggering deferred initialization of Spring Data repositories…
2020-11-23 19:33:58.620 INFO  org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator Line:52  - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-11-23 19:33:58.665 INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean Line:416 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-11-23 19:34:01.460 INFO  org.springframework.data.repository.config.DeferredRepositoryInitializationListener Line:53  - Spring Data repositories initialized!
2020-11-23 19:34:01.484 INFO  geek.me.javaapi.JavaApiApplication Line:61  - Started JavaApiApplication in 19.577 seconds (JVM running for 23.777)
2020-11-23 19:36:30.866 INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Line:173 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-11-23 19:36:30.867 INFO  org.springframework.web.servlet.DispatcherServlet Line:525 - Initializing Servlet 'dispatcherServlet'
2020-11-23 19:36:30.898 INFO  org.springframework.web.servlet.DispatcherServlet Line:547 - Completed initialization in 30 ms
2020-11-23 19:36:32.060 INFO  jdbc.sqltiming Line:373 - select bookchecke0_.item_id as item_id1_2_, bookchecke0_.fsid as fsid2_2_, bookchecke0_.got 
as got3_2_, bookchecke0_.name as name4_2_, bookchecke0_.parse_fail as parse_fa5_2_, bookchecke0_.parsed 
as parsed6_2_, bookchecke0_.path as path7_2_, bookchecke0_.title as title8_2_, bookchecke0_.vid 
as vid9_2_ from book_check bookchecke0_ where bookchecke0_.got=0 limit 20 
 {executed in 5 msec}
2020-11-23 19:36:32.160 INFO  jdbc.resultsettable Line:610 - 
|--------|-----------------|----|------------|-----------|-------|-----------------------------------------------------------------|--------------------------------|----|
|item_id |fsid             |got |name        |parse_fail |parsed |path                                                             |title                           |vid |
|--------|-----------------|----|------------|-----------|-------|-----------------------------------------------------------------|--------------------------------|----|
|553     |776264130211843  |0   |net_content |           |0      |102-现代C++实战30讲/05丨未来篇 (3讲)/29丨Ranges：无迭代器的迭代和更方便的组合.html         |29丨Ranges：无迭代器的迭代和更方便的组合        |553 |
|554     |901563966624350  |0   |net_content |           |0      |102-现代C++实战30讲/05丨未来篇 (3讲)/30丨Coroutines：协作式的交叉调度执行.html         |30丨Coroutines：协作式的交叉调度执行        |554 |
|555     |503687233870410  |0   |net_content |           |0      |102-现代C++实战30讲/06丨加餐 (1讲)/加餐丨部分课后思考题答案合集.html                    |加餐丨部分课后思考题答案合集                  |555 |
|556     |719662679018295  |0   |net_content |           |0      |102-现代C++实战30讲/07丨结束语 (1讲)/结束语丨终点已达，行程还要继续.html                  |结束语丨终点已达，行程还要继续                 |556 |
|568     |706717272250670  |0   |net_content |           |0      |104-性能工程高手课/00丨开篇词 (1讲)/00丨开篇词丨代码不要眼前的苟且，而要效率的提升和性能的优化.html      |00丨开篇词丨代码不要眼前的苟且，而要效率的提升和性能的优化  |568 |
|569     |674616496192560  |0   |net_content |           |0      |104-性能工程高手课/01丨开篇：认识代码性能和系统容量效率 (3讲)/01丨程序员为什么要关心代码性能？.html      |01丨程序员为什么要关心代码性能？               |569 |
|570     |163185365427098  |0   |net_content |           |0      |104-性能工程高手课/01丨开篇：认识代码性能和系统容量效率 (3讲)/02丨程序员也要关心整个系统和公司成本吗？.html  |02丨程序员也要关心整个系统和公司成本吗？           |570 |
|571     |745874331355291  |0   |net_content |           |0      |104-性能工程高手课/01丨开篇：认识代码性能和系统容量效率 (3讲)/03丨导读：专栏是怎么设计的？需要哪些知识？.html |03丨导读：专栏是怎么设计的？需要哪些知识？          |571 |
|572     |1061896570537305 |0   |net_content |           |0      |104-性能工程高手课/02丨性能定律和数理基础 (5讲)/04丨性能工程三定律：IT业和性能优化工作的“法律法规”.html  |04丨性能工程三定律：IT业和性能优化工作的“法律法规”    |572 |
|573     |953781898957230  |0   |net_content |           |0      |104-性能工程高手课/02丨性能定律和数理基础 (5讲)/05丨概率统计和排队论：做性能工作必须懂的数理基础.html     |05丨概率统计和排队论：做性能工作必须懂的数理基础       |573 |
|574     |10238948519444   |0   |net_content |           |0      |104-性能工程高手课/02丨性能定律和数理基础 (5讲)/06丨性能数据的分析：如何从大量数据中看出想要的信号？.html   |06丨性能数据的分析：如何从大量数据中看出想要的信号？     |574 |
|575     |1125077492768631 |0   |net_content |           |0      |104-性能工程高手课/02丨性能定律和数理基础 (5讲)/07丨性能数据的展示：一图胜千言，说出你的数据故事.html     |07丨性能数据的展示：一图胜千言，说出你的数据故事       |575 |
|576     |977438879222316  |0   |net_content |           |0      |104-性能工程高手课/02丨性能定律和数理基础 (5讲)/08丨经验总结：必须熟记的一组常用性能数字.html         |08丨经验总结：必须熟记的一组常用性能数字           |576 |
|577     |1032851353153498 |0   |net_content |           |0      |104-性能工程高手课/03丨性能测试 (5讲)/09丨性能测试的种类：如何快准狠地抓住一个测试的本质？.html        |09丨性能测试的种类：如何快准狠地抓住一个测试的本质？     |577 |
|578     |336224727929298  |0   |net_content |           |0      |104-性能工程高手课/03丨性能测试 (5讲)/10丨性能测试的规划和步骤：为什么性能测试不容易一蹴而就呢？.html     |10丨性能测试的规划和步骤：为什么性能测试不容易一蹴而就呢？  |578 |
|579     |387444308294595  |0   |net_content |           |0      |104-性能工程高手课/03丨性能测试 (5讲)/11丨性能测试的工具：七大测试场景如何选择高质量的测试工具？.html     |11丨性能测试的工具：七大测试场景如何选择高质量的测试工具？  |579 |
|580     |209458553731100  |0   |net_content |           |0      |104-性能工程高手课/03丨性能测试 (5讲)/12丨九条性能测试的经验和教训：如何保证测试结果可靠且可重复？.html    |12丨九条性能测试的经验和教训：如何保证测试结果可靠且可重复？ |580 |
|581     |250386143805634  |0   |net_content |           |0      |104-性能工程高手课/03丨性能测试 (5讲)/13丨性能测试的工程集成：如何与产品开发和运维业务有机集成？.html     |13丨性能测试的工程集成：如何与产品开发和运维业务有机集成？  |581 |
|582     |966001401118047  |0   |net_content |           |0      |104-性能工程高手课/04丨性能分析 (5讲)/14丨性能分析概述：性能问题归根结底是什么原因？.html           |14丨性能分析概述：性能问题归根结底是什么原因？        |582 |
|583     |773100394316869  |0   |net_content |           |0      |104-性能工程高手课/04丨性能分析 (5讲)/15丨常见的性能问题之CPU篇：如何让CPU的运行不受阻碍？.html     |15丨常见的性能问题之CPU篇：如何让CPU的运行不受阻碍？  |583 |
|--------|-----------------|----|------------|-----------|-------|-----------------------------------------------------------------|--------------------------------|----|

2020-11-23 19:36:32.202 INFO  jdbc.sqltiming Line:373 - select count(bookchecke0_.item_id) as col_0_0_ from book_check bookchecke0_ where bookchecke0_.got=0 
 {executed in 2 msec}
2020-11-23 19:36:32.205 INFO  jdbc.resultsettable Line:610 - 
|---------|
|col_0_0_ |
|---------|
|442      |
|---------|

2020-11-23 19:36:52.559 INFO  jdbc.sqltiming Line:373 - select bookchecke0_.item_id as item_id1_2_, bookchecke0_.fsid as fsid2_2_, bookchecke0_.got 
as got3_2_, bookchecke0_.name as name4_2_, bookchecke0_.parse_fail as parse_fa5_2_, bookchecke0_.parsed 
as parsed6_2_, bookchecke0_.path as path7_2_, bookchecke0_.title as title8_2_, bookchecke0_.vid 
as vid9_2_ from book_check bookchecke0_ where bookchecke0_.fsid='776264130211843' and bookchecke0_.name='net_content' 
 {executed in 7 msec}
2020-11-23 19:36:52.613 INFO  jdbc.resultsettable Line:610 - 
|--------|---------|---------|---------|-----------|---------|---------|---------|---------|
|item_id |fsid     |got      |name     |parse_fail |parsed   |path     |title    |vid      |
|--------|---------|---------|---------|-----------|---------|---------|---------|---------|
|553     |[unread] |[unread] |[unread] |[unread]   |[unread] |[unread] |[unread] |[unread] |
|--------|---------|---------|---------|-----------|---------|---------|---------|---------|

2020-11-23 19:47:30.183 INFO  geek.me.javaapi.JavaApiApplication Line:651 - No active profile set, falling back to default profiles: default
2020-11-23 19:47:32.305 INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate Line:127 - Bootstrapping Spring Data JPA repositories in DEFERRED mode.
2020-11-23 19:47:32.848 INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate Line:187 - Finished Spring Data repository scanning in 505ms. Found 20 JPA repository interfaces.
2020-11-23 19:47:33.565 INFO  org.springframework.cloud.context.scope.GenericScope Line:295 - BeanFactory id=a57235e8-b792-3882-8d3a-8bc20defb1fe
2020-11-23 19:47:35.068 INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer Line:108 - Tomcat initialized with port(s): 8080 (http)
2020-11-23 19:47:35.109 INFO  org.apache.coyote.http11.Http11NioProtocol Line:173 - Initializing ProtocolHandler ["http-nio-8080"]
2020-11-23 19:47:35.112 INFO  org.apache.catalina.core.StandardService Line:173 - Starting service [Tomcat]
2020-11-23 19:47:35.113 INFO  org.apache.catalina.core.StandardEngine Line:173 - Starting Servlet engine: [Apache Tomcat/9.0.37]
2020-11-23 19:47:35.596 INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Line:173 - Initializing Spring embedded WebApplicationContext
2020-11-23 19:47:35.597 INFO  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext Line:285 - Root WebApplicationContext: initialization completed in 5337 ms
2020-11-23 19:47:36.346 INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Line:181 - Initializing ExecutorService 'applicationTaskExecutor'
2020-11-23 19:47:36.389 INFO  com.zaxxer.hikari.HikariDataSource Line:110 - HikariPool-1 - Starting...
2020-11-23 19:47:36.885 INFO  com.zaxxer.hikari.HikariDataSource Line:123 - HikariPool-1 - Start completed.
2020-11-23 19:47:37.323 INFO  org.hibernate.jpa.internal.util.LogHelper Line:31  - HHH000204: Processing PersistenceUnitInfo [name: default]
2020-11-23 19:47:37.587 INFO  org.hibernate.Version Line:44  - HHH000412: Hibernate ORM core version 5.4.20.Final
2020-11-23 19:47:38.310 INFO  org.hibernate.annotations.common.Version Line:49  - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-11-23 19:47:38.676 INFO  com.netflix.config.sources.URLConfigurationSource Line:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-11-23 19:47:38.695 INFO  com.netflix.config.sources.URLConfigurationSource Line:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-11-23 19:47:38.907 INFO  org.hibernate.dialect.Dialect Line:170 - HHH000400: Using dialect: org.hibernate.dialect.MySQL55Dialect
2020-11-23 19:47:41.286 INFO  org.apache.coyote.http11.Http11NioProtocol Line:173 - Starting ProtocolHandler ["http-nio-8080"]
2020-11-23 19:47:41.389 INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer Line:220 - Tomcat started on port(s): 8080 (http) with context path ''
2020-11-23 19:47:42.186 INFO  org.springframework.data.repository.config.DeferredRepositoryInitializationListener Line:49  - Triggering deferred initialization of Spring Data repositories…
2020-11-23 19:47:42.478 INFO  org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator Line:52  - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-11-23 19:47:42.522 INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean Line:416 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-11-23 19:47:45.181 INFO  org.springframework.data.repository.config.DeferredRepositoryInitializationListener Line:53  - Spring Data repositories initialized!
2020-11-23 19:47:45.205 INFO  geek.me.javaapi.JavaApiApplication Line:61  - Started JavaApiApplication in 19.896 seconds (JVM running for 24.05)
2020-11-23 19:47:50.555 INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Line:173 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-11-23 19:47:50.556 INFO  org.springframework.web.servlet.DispatcherServlet Line:525 - Initializing Servlet 'dispatcherServlet'
2020-11-23 19:47:50.592 INFO  org.springframework.web.servlet.DispatcherServlet Line:547 - Completed initialization in 34 ms
2020-11-23 19:47:51.693 INFO  jdbc.sqltiming Line:373 - select bookchecke0_.item_id as item_id1_2_, bookchecke0_.fsid as fsid2_2_, bookchecke0_.got 
as got3_2_, bookchecke0_.name as name4_2_, bookchecke0_.parse_fail as parse_fa5_2_, bookchecke0_.parsed 
as parsed6_2_, bookchecke0_.path as path7_2_, bookchecke0_.title as title8_2_, bookchecke0_.vid 
as vid9_2_ from book_check bookchecke0_ where bookchecke0_.got=0 limit 20 
 {executed in 6 msec}
2020-11-23 19:47:51.788 INFO  jdbc.resultsettable Line:610 - 
|--------|-----------------|----|------------|-----------|-------|-----------------------------------------------------------------|--------------------------------|----|
|item_id |fsid             |got |name        |parse_fail |parsed |path                                                             |title                           |vid |
|--------|-----------------|----|------------|-----------|-------|-----------------------------------------------------------------|--------------------------------|----|
|553     |776264130211843  |0   |net_content |           |0      |102-现代C++实战30讲/05丨未来篇 (3讲)/29丨Ranges：无迭代器的迭代和更方便的组合.html         |29丨Ranges：无迭代器的迭代和更方便的组合        |553 |
|554     |901563966624350  |0   |net_content |           |0      |102-现代C++实战30讲/05丨未来篇 (3讲)/30丨Coroutines：协作式的交叉调度执行.html         |30丨Coroutines：协作式的交叉调度执行        |554 |
|555     |503687233870410  |0   |net_content |           |0      |102-现代C++实战30讲/06丨加餐 (1讲)/加餐丨部分课后思考题答案合集.html                    |加餐丨部分课后思考题答案合集                  |555 |
|556     |719662679018295  |0   |net_content |           |0      |102-现代C++实战30讲/07丨结束语 (1讲)/结束语丨终点已达，行程还要继续.html                  |结束语丨终点已达，行程还要继续                 |556 |
|568     |706717272250670  |0   |net_content |           |0      |104-性能工程高手课/00丨开篇词 (1讲)/00丨开篇词丨代码不要眼前的苟且，而要效率的提升和性能的优化.html      |00丨开篇词丨代码不要眼前的苟且，而要效率的提升和性能的优化  |568 |
|569     |674616496192560  |0   |net_content |           |0      |104-性能工程高手课/01丨开篇：认识代码性能和系统容量效率 (3讲)/01丨程序员为什么要关心代码性能？.html      |01丨程序员为什么要关心代码性能？               |569 |
|570     |163185365427098  |0   |net_content |           |0      |104-性能工程高手课/01丨开篇：认识代码性能和系统容量效率 (3讲)/02丨程序员也要关心整个系统和公司成本吗？.html  |02丨程序员也要关心整个系统和公司成本吗？           |570 |
|571     |745874331355291  |0   |net_content |           |0      |104-性能工程高手课/01丨开篇：认识代码性能和系统容量效率 (3讲)/03丨导读：专栏是怎么设计的？需要哪些知识？.html |03丨导读：专栏是怎么设计的？需要哪些知识？          |571 |
|572     |1061896570537305 |0   |net_content |           |0      |104-性能工程高手课/02丨性能定律和数理基础 (5讲)/04丨性能工程三定律：IT业和性能优化工作的“法律法规”.html  |04丨性能工程三定律：IT业和性能优化工作的“法律法规”    |572 |
|573     |953781898957230  |0   |net_content |           |0      |104-性能工程高手课/02丨性能定律和数理基础 (5讲)/05丨概率统计和排队论：做性能工作必须懂的数理基础.html     |05丨概率统计和排队论：做性能工作必须懂的数理基础       |573 |
|574     |10238948519444   |0   |net_content |           |0      |104-性能工程高手课/02丨性能定律和数理基础 (5讲)/06丨性能数据的分析：如何从大量数据中看出想要的信号？.html   |06丨性能数据的分析：如何从大量数据中看出想要的信号？     |574 |
|575     |1125077492768631 |0   |net_content |           |0      |104-性能工程高手课/02丨性能定律和数理基础 (5讲)/07丨性能数据的展示：一图胜千言，说出你的数据故事.html     |07丨性能数据的展示：一图胜千言，说出你的数据故事       |575 |
|576     |977438879222316  |0   |net_content |           |0      |104-性能工程高手课/02丨性能定律和数理基础 (5讲)/08丨经验总结：必须熟记的一组常用性能数字.html         |08丨经验总结：必须熟记的一组常用性能数字           |576 |
|577     |1032851353153498 |0   |net_content |           |0      |104-性能工程高手课/03丨性能测试 (5讲)/09丨性能测试的种类：如何快准狠地抓住一个测试的本质？.html        |09丨性能测试的种类：如何快准狠地抓住一个测试的本质？     |577 |
|578     |336224727929298  |0   |net_content |           |0      |104-性能工程高手课/03丨性能测试 (5讲)/10丨性能测试的规划和步骤：为什么性能测试不容易一蹴而就呢？.html     |10丨性能测试的规划和步骤：为什么性能测试不容易一蹴而就呢？  |578 |
|579     |387444308294595  |0   |net_content |           |0      |104-性能工程高手课/03丨性能测试 (5讲)/11丨性能测试的工具：七大测试场景如何选择高质量的测试工具？.html     |11丨性能测试的工具：七大测试场景如何选择高质量的测试工具？  |579 |
|580     |209458553731100  |0   |net_content |           |0      |104-性能工程高手课/03丨性能测试 (5讲)/12丨九条性能测试的经验和教训：如何保证测试结果可靠且可重复？.html    |12丨九条性能测试的经验和教训：如何保证测试结果可靠且可重复？ |580 |
|581     |250386143805634  |0   |net_content |           |0      |104-性能工程高手课/03丨性能测试 (5讲)/13丨性能测试的工程集成：如何与产品开发和运维业务有机集成？.html     |13丨性能测试的工程集成：如何与产品开发和运维业务有机集成？  |581 |
|582     |966001401118047  |0   |net_content |           |0      |104-性能工程高手课/04丨性能分析 (5讲)/14丨性能分析概述：性能问题归根结底是什么原因？.html           |14丨性能分析概述：性能问题归根结底是什么原因？        |582 |
|583     |773100394316869  |0   |net_content |           |0      |104-性能工程高手课/04丨性能分析 (5讲)/15丨常见的性能问题之CPU篇：如何让CPU的运行不受阻碍？.html     |15丨常见的性能问题之CPU篇：如何让CPU的运行不受阻碍？  |583 |
|--------|-----------------|----|------------|-----------|-------|-----------------------------------------------------------------|--------------------------------|----|

2020-11-23 19:47:51.827 INFO  jdbc.sqltiming Line:373 - select count(bookchecke0_.item_id) as col_0_0_ from book_check bookchecke0_ where bookchecke0_.got=0 
 {executed in 2 msec}
2020-11-23 19:47:51.830 INFO  jdbc.resultsettable Line:610 - 
|---------|
|col_0_0_ |
|---------|
|442      |
|---------|

2020-11-23 19:47:55.902 INFO  jdbc.sqltiming Line:373 - select bookchecke0_.item_id as item_id1_2_, bookchecke0_.fsid as fsid2_2_, bookchecke0_.got 
as got3_2_, bookchecke0_.name as name4_2_, bookchecke0_.parse_fail as parse_fa5_2_, bookchecke0_.parsed 
as parsed6_2_, bookchecke0_.path as path7_2_, bookchecke0_.title as title8_2_, bookchecke0_.vid 
as vid9_2_ from book_check bookchecke0_ where bookchecke0_.fsid='776264130211843' and bookchecke0_.name='net_content' 
 {executed in 11 msec}
2020-11-23 19:47:55.967 INFO  jdbc.resultsettable Line:610 - 
|--------|---------|---------|---------|-----------|---------|---------|---------|---------|
|item_id |fsid     |got      |name     |parse_fail |parsed   |path     |title    |vid      |
|--------|---------|---------|---------|-----------|---------|---------|---------|---------|
|553     |[unread] |[unread] |[unread] |[unread]   |[unread] |[unread] |[unread] |[unread] |
|--------|---------|---------|---------|-----------|---------|---------|---------|---------|

2020-11-23 20:22:27.921 INFO  geek.me.javaapi.JavaApiApplication Line:651 - No active profile set, falling back to default profiles: default
2020-11-23 20:22:29.973 INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate Line:127 - Bootstrapping Spring Data JPA repositories in DEFERRED mode.
2020-11-23 20:22:30.522 INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate Line:187 - Finished Spring Data repository scanning in 507ms. Found 20 JPA repository interfaces.
2020-11-23 20:22:31.237 INFO  org.springframework.cloud.context.scope.GenericScope Line:295 - BeanFactory id=a57235e8-b792-3882-8d3a-8bc20defb1fe
2020-11-23 20:22:32.717 INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer Line:108 - Tomcat initialized with port(s): 8080 (http)
2020-11-23 20:22:32.754 INFO  org.apache.coyote.http11.Http11NioProtocol Line:173 - Initializing ProtocolHandler ["http-nio-8080"]
2020-11-23 20:22:32.757 INFO  org.apache.catalina.core.StandardService Line:173 - Starting service [Tomcat]
2020-11-23 20:22:32.758 INFO  org.apache.catalina.core.StandardEngine Line:173 - Starting Servlet engine: [Apache Tomcat/9.0.37]
2020-11-23 20:22:33.234 INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Line:173 - Initializing Spring embedded WebApplicationContext
2020-11-23 20:22:33.235 INFO  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext Line:285 - Root WebApplicationContext: initialization completed in 5238 ms
2020-11-23 20:22:33.978 INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Line:181 - Initializing ExecutorService 'applicationTaskExecutor'
2020-11-23 20:22:34.020 INFO  com.zaxxer.hikari.HikariDataSource Line:110 - HikariPool-1 - Starting...
2020-11-23 20:22:34.501 INFO  com.zaxxer.hikari.HikariDataSource Line:123 - HikariPool-1 - Start completed.
2020-11-23 20:22:34.901 INFO  org.hibernate.jpa.internal.util.LogHelper Line:31  - HHH000204: Processing PersistenceUnitInfo [name: default]
2020-11-23 20:22:35.123 INFO  org.hibernate.Version Line:44  - HHH000412: Hibernate ORM core version 5.4.20.Final
2020-11-23 20:22:35.768 INFO  org.hibernate.annotations.common.Version Line:49  - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-11-23 20:22:36.238 INFO  com.netflix.config.sources.URLConfigurationSource Line:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-11-23 20:22:36.257 INFO  com.netflix.config.sources.URLConfigurationSource Line:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-11-23 20:22:36.339 INFO  org.hibernate.dialect.Dialect Line:170 - HHH000400: Using dialect: org.hibernate.dialect.MySQL55Dialect
2020-11-23 20:22:38.800 INFO  org.apache.coyote.http11.Http11NioProtocol Line:173 - Starting ProtocolHandler ["http-nio-8080"]
2020-11-23 20:22:38.922 INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer Line:220 - Tomcat started on port(s): 8080 (http) with context path ''
2020-11-23 20:22:39.690 INFO  org.springframework.data.repository.config.DeferredRepositoryInitializationListener Line:49  - Triggering deferred initialization of Spring Data repositories…
2020-11-23 20:22:39.823 INFO  org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator Line:52  - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-11-23 20:22:39.862 INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean Line:416 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-11-23 20:22:42.595 INFO  org.springframework.data.repository.config.DeferredRepositoryInitializationListener Line:53  - Spring Data repositories initialized!
2020-11-23 20:22:42.619 INFO  geek.me.javaapi.JavaApiApplication Line:61  - Started JavaApiApplication in 19.278 seconds (JVM running for 23.371)
2020-11-23 20:23:19.388 INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Line:173 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-11-23 20:23:19.389 INFO  org.springframework.web.servlet.DispatcherServlet Line:525 - Initializing Servlet 'dispatcherServlet'
2020-11-23 20:23:19.431 INFO  org.springframework.web.servlet.DispatcherServlet Line:547 - Completed initialization in 41 ms
2020-11-23 20:23:20.641 INFO  jdbc.sqltiming Line:373 - select bookchecke0_.item_id as item_id1_2_, bookchecke0_.fsid as fsid2_2_, bookchecke0_.got 
as got3_2_, bookchecke0_.name as name4_2_, bookchecke0_.parse_fail as parse_fa5_2_, bookchecke0_.parsed 
as parsed6_2_, bookchecke0_.path as path7_2_, bookchecke0_.title as title8_2_, bookchecke0_.vid 
as vid9_2_ from book_check bookchecke0_ where bookchecke0_.got=0 limit 20 
 {executed in 7 msec}
2020-11-23 20:23:20.743 INFO  jdbc.resultsettable Line:610 - 
|--------|-----------------|----|------------|-----------|-------|-----------------------------------------------------------------|--------------------------------|----|
|item_id |fsid             |got |name        |parse_fail |parsed |path                                                             |title                           |vid |
|--------|-----------------|----|------------|-----------|-------|-----------------------------------------------------------------|--------------------------------|----|
|553     |776264130211843  |0   |net_content |           |0      |102-现代C++实战30讲/05丨未来篇 (3讲)/29丨Ranges：无迭代器的迭代和更方便的组合.html         |29丨Ranges：无迭代器的迭代和更方便的组合        |553 |
|554     |901563966624350  |0   |net_content |           |0      |102-现代C++实战30讲/05丨未来篇 (3讲)/30丨Coroutines：协作式的交叉调度执行.html         |30丨Coroutines：协作式的交叉调度执行        |554 |
|555     |503687233870410  |0   |net_content |           |0      |102-现代C++实战30讲/06丨加餐 (1讲)/加餐丨部分课后思考题答案合集.html                    |加餐丨部分课后思考题答案合集                  |555 |
|556     |719662679018295  |0   |net_content |           |0      |102-现代C++实战30讲/07丨结束语 (1讲)/结束语丨终点已达，行程还要继续.html                  |结束语丨终点已达，行程还要继续                 |556 |
|568     |706717272250670  |0   |net_content |           |0      |104-性能工程高手课/00丨开篇词 (1讲)/00丨开篇词丨代码不要眼前的苟且，而要效率的提升和性能的优化.html      |00丨开篇词丨代码不要眼前的苟且，而要效率的提升和性能的优化  |568 |
|569     |674616496192560  |0   |net_content |           |0      |104-性能工程高手课/01丨开篇：认识代码性能和系统容量效率 (3讲)/01丨程序员为什么要关心代码性能？.html      |01丨程序员为什么要关心代码性能？               |569 |
|570     |163185365427098  |0   |net_content |           |0      |104-性能工程高手课/01丨开篇：认识代码性能和系统容量效率 (3讲)/02丨程序员也要关心整个系统和公司成本吗？.html  |02丨程序员也要关心整个系统和公司成本吗？           |570 |
|571     |745874331355291  |0   |net_content |           |0      |104-性能工程高手课/01丨开篇：认识代码性能和系统容量效率 (3讲)/03丨导读：专栏是怎么设计的？需要哪些知识？.html |03丨导读：专栏是怎么设计的？需要哪些知识？          |571 |
|572     |1061896570537305 |0   |net_content |           |0      |104-性能工程高手课/02丨性能定律和数理基础 (5讲)/04丨性能工程三定律：IT业和性能优化工作的“法律法规”.html  |04丨性能工程三定律：IT业和性能优化工作的“法律法规”    |572 |
|573     |953781898957230  |0   |net_content |           |0      |104-性能工程高手课/02丨性能定律和数理基础 (5讲)/05丨概率统计和排队论：做性能工作必须懂的数理基础.html     |05丨概率统计和排队论：做性能工作必须懂的数理基础       |573 |
|574     |10238948519444   |0   |net_content |           |0      |104-性能工程高手课/02丨性能定律和数理基础 (5讲)/06丨性能数据的分析：如何从大量数据中看出想要的信号？.html   |06丨性能数据的分析：如何从大量数据中看出想要的信号？     |574 |
|575     |1125077492768631 |0   |net_content |           |0      |104-性能工程高手课/02丨性能定律和数理基础 (5讲)/07丨性能数据的展示：一图胜千言，说出你的数据故事.html     |07丨性能数据的展示：一图胜千言，说出你的数据故事       |575 |
|576     |977438879222316  |0   |net_content |           |0      |104-性能工程高手课/02丨性能定律和数理基础 (5讲)/08丨经验总结：必须熟记的一组常用性能数字.html         |08丨经验总结：必须熟记的一组常用性能数字           |576 |
|577     |1032851353153498 |0   |net_content |           |0      |104-性能工程高手课/03丨性能测试 (5讲)/09丨性能测试的种类：如何快准狠地抓住一个测试的本质？.html        |09丨性能测试的种类：如何快准狠地抓住一个测试的本质？     |577 |
|578     |336224727929298  |0   |net_content |           |0      |104-性能工程高手课/03丨性能测试 (5讲)/10丨性能测试的规划和步骤：为什么性能测试不容易一蹴而就呢？.html     |10丨性能测试的规划和步骤：为什么性能测试不容易一蹴而就呢？  |578 |
|579     |387444308294595  |0   |net_content |           |0      |104-性能工程高手课/03丨性能测试 (5讲)/11丨性能测试的工具：七大测试场景如何选择高质量的测试工具？.html     |11丨性能测试的工具：七大测试场景如何选择高质量的测试工具？  |579 |
|580     |209458553731100  |0   |net_content |           |0      |104-性能工程高手课/03丨性能测试 (5讲)/12丨九条性能测试的经验和教训：如何保证测试结果可靠且可重复？.html    |12丨九条性能测试的经验和教训：如何保证测试结果可靠且可重复？ |580 |
|581     |250386143805634  |0   |net_content |           |0      |104-性能工程高手课/03丨性能测试 (5讲)/13丨性能测试的工程集成：如何与产品开发和运维业务有机集成？.html     |13丨性能测试的工程集成：如何与产品开发和运维业务有机集成？  |581 |
|582     |966001401118047  |0   |net_content |           |0      |104-性能工程高手课/04丨性能分析 (5讲)/14丨性能分析概述：性能问题归根结底是什么原因？.html           |14丨性能分析概述：性能问题归根结底是什么原因？        |582 |
|583     |773100394316869  |0   |net_content |           |0      |104-性能工程高手课/04丨性能分析 (5讲)/15丨常见的性能问题之CPU篇：如何让CPU的运行不受阻碍？.html     |15丨常见的性能问题之CPU篇：如何让CPU的运行不受阻碍？  |583 |
|--------|-----------------|----|------------|-----------|-------|-----------------------------------------------------------------|--------------------------------|----|

2020-11-23 20:23:20.781 INFO  jdbc.sqltiming Line:373 - select count(bookchecke0_.item_id) as col_0_0_ from book_check bookchecke0_ where bookchecke0_.got=0 
 {executed in 3 msec}
2020-11-23 20:23:20.784 INFO  jdbc.resultsettable Line:610 - 
|---------|
|col_0_0_ |
|---------|
|442      |
|---------|

2020-11-23 20:23:29.441 INFO  jdbc.sqltiming Line:373 - select bookchecke0_.item_id as item_id1_2_, bookchecke0_.fsid as fsid2_2_, bookchecke0_.got 
as got3_2_, bookchecke0_.name as name4_2_, bookchecke0_.parse_fail as parse_fa5_2_, bookchecke0_.parsed 
as parsed6_2_, bookchecke0_.path as path7_2_, bookchecke0_.title as title8_2_, bookchecke0_.vid 
as vid9_2_ from book_check bookchecke0_ where bookchecke0_.fsid='776264130211843' and bookchecke0_.name='net_content' 
 {executed in 2 msec}
2020-11-23 20:23:29.446 INFO  jdbc.resultsettable Line:610 - 
|--------|---------|---------|---------|-----------|---------|---------|---------|---------|
|item_id |fsid     |got      |name     |parse_fail |parsed   |path     |title    |vid      |
|--------|---------|---------|---------|-----------|---------|---------|---------|---------|
|553     |[unread] |[unread] |[unread] |[unread]   |[unread] |[unread] |[unread] |[unread] |
|--------|---------|---------|---------|-----------|---------|---------|---------|---------|

2020-11-23 20:27:51.709 INFO  geek.me.javaapi.JavaApiApplication Line:651 - No active profile set, falling back to default profiles: default
2020-11-23 20:27:53.801 INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate Line:127 - Bootstrapping Spring Data JPA repositories in DEFERRED mode.
2020-11-23 20:27:54.339 INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate Line:187 - Finished Spring Data repository scanning in 503ms. Found 20 JPA repository interfaces.
2020-11-23 20:27:55.048 INFO  org.springframework.cloud.context.scope.GenericScope Line:295 - BeanFactory id=a57235e8-b792-3882-8d3a-8bc20defb1fe
2020-11-23 20:27:56.547 INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer Line:108 - Tomcat initialized with port(s): 8080 (http)
2020-11-23 20:27:56.584 INFO  org.apache.coyote.http11.Http11NioProtocol Line:173 - Initializing ProtocolHandler ["http-nio-8080"]
2020-11-23 20:27:56.587 INFO  org.apache.catalina.core.StandardService Line:173 - Starting service [Tomcat]
2020-11-23 20:27:56.589 INFO  org.apache.catalina.core.StandardEngine Line:173 - Starting Servlet engine: [Apache Tomcat/9.0.37]
2020-11-23 20:27:57.072 INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Line:173 - Initializing Spring embedded WebApplicationContext
2020-11-23 20:27:57.074 INFO  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext Line:285 - Root WebApplicationContext: initialization completed in 5290 ms
2020-11-23 20:27:57.823 INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Line:181 - Initializing ExecutorService 'applicationTaskExecutor'
2020-11-23 20:27:57.868 INFO  com.zaxxer.hikari.HikariDataSource Line:110 - HikariPool-1 - Starting...
2020-11-23 20:27:58.354 INFO  com.zaxxer.hikari.HikariDataSource Line:123 - HikariPool-1 - Start completed.
2020-11-23 20:27:58.791 INFO  org.hibernate.jpa.internal.util.LogHelper Line:31  - HHH000204: Processing PersistenceUnitInfo [name: default]
2020-11-23 20:27:59.018 INFO  org.hibernate.Version Line:44  - HHH000412: Hibernate ORM core version 5.4.20.Final
2020-11-23 20:27:59.642 INFO  org.hibernate.annotations.common.Version Line:49  - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-11-23 20:28:00.117 INFO  com.netflix.config.sources.URLConfigurationSource Line:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-11-23 20:28:00.136 INFO  com.netflix.config.sources.URLConfigurationSource Line:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-11-23 20:28:00.186 INFO  org.hibernate.dialect.Dialect Line:170 - HHH000400: Using dialect: org.hibernate.dialect.MySQL55Dialect
2020-11-23 20:28:02.673 INFO  org.apache.coyote.http11.Http11NioProtocol Line:173 - Starting ProtocolHandler ["http-nio-8080"]
2020-11-23 20:28:02.785 INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer Line:220 - Tomcat started on port(s): 8080 (http) with context path ''
2020-11-23 20:28:03.552 INFO  org.springframework.data.repository.config.DeferredRepositoryInitializationListener Line:49  - Triggering deferred initialization of Spring Data repositories…
2020-11-23 20:28:03.616 INFO  org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator Line:52  - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-11-23 20:28:03.661 INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean Line:416 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-11-23 20:28:06.468 INFO  org.springframework.data.repository.config.DeferredRepositoryInitializationListener Line:53  - Spring Data repositories initialized!
2020-11-23 20:28:06.490 INFO  geek.me.javaapi.JavaApiApplication Line:61  - Started JavaApiApplication in 19.432 seconds (JVM running for 23.604)
2020-11-23 20:28:37.159 INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Line:173 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-11-23 20:28:37.161 INFO  org.springframework.web.servlet.DispatcherServlet Line:525 - Initializing Servlet 'dispatcherServlet'
2020-11-23 20:28:37.196 INFO  org.springframework.web.servlet.DispatcherServlet Line:547 - Completed initialization in 34 ms
2020-11-23 20:28:38.320 INFO  jdbc.sqltiming Line:373 - select bookchecke0_.item_id as item_id1_2_, bookchecke0_.fsid as fsid2_2_, bookchecke0_.got 
as got3_2_, bookchecke0_.name as name4_2_, bookchecke0_.parse_fail as parse_fa5_2_, bookchecke0_.parsed 
as parsed6_2_, bookchecke0_.path as path7_2_, bookchecke0_.title as title8_2_, bookchecke0_.vid 
as vid9_2_ from book_check bookchecke0_ where bookchecke0_.got=0 limit 20 
 {executed in 6 msec}
2020-11-23 20:28:38.422 INFO  jdbc.resultsettable Line:610 - 
|--------|-----------------|----|------------|-----------|-------|-----------------------------------------------------------------|--------------------------------|----|
|item_id |fsid             |got |name        |parse_fail |parsed |path                                                             |title                           |vid |
|--------|-----------------|----|------------|-----------|-------|-----------------------------------------------------------------|--------------------------------|----|
|553     |776264130211843  |0   |net_content |           |0      |102-现代C++实战30讲/05丨未来篇 (3讲)/29丨Ranges：无迭代器的迭代和更方便的组合.html         |29丨Ranges：无迭代器的迭代和更方便的组合        |553 |
|554     |901563966624350  |0   |net_content |           |0      |102-现代C++实战30讲/05丨未来篇 (3讲)/30丨Coroutines：协作式的交叉调度执行.html         |30丨Coroutines：协作式的交叉调度执行        |554 |
|555     |503687233870410  |0   |net_content |           |0      |102-现代C++实战30讲/06丨加餐 (1讲)/加餐丨部分课后思考题答案合集.html                    |加餐丨部分课后思考题答案合集                  |555 |
|556     |719662679018295  |0   |net_content |           |0      |102-现代C++实战30讲/07丨结束语 (1讲)/结束语丨终点已达，行程还要继续.html                  |结束语丨终点已达，行程还要继续                 |556 |
|568     |706717272250670  |0   |net_content |           |0      |104-性能工程高手课/00丨开篇词 (1讲)/00丨开篇词丨代码不要眼前的苟且，而要效率的提升和性能的优化.html      |00丨开篇词丨代码不要眼前的苟且，而要效率的提升和性能的优化  |568 |
|569     |674616496192560  |0   |net_content |           |0      |104-性能工程高手课/01丨开篇：认识代码性能和系统容量效率 (3讲)/01丨程序员为什么要关心代码性能？.html      |01丨程序员为什么要关心代码性能？               |569 |
|570     |163185365427098  |0   |net_content |           |0      |104-性能工程高手课/01丨开篇：认识代码性能和系统容量效率 (3讲)/02丨程序员也要关心整个系统和公司成本吗？.html  |02丨程序员也要关心整个系统和公司成本吗？           |570 |
|571     |745874331355291  |0   |net_content |           |0      |104-性能工程高手课/01丨开篇：认识代码性能和系统容量效率 (3讲)/03丨导读：专栏是怎么设计的？需要哪些知识？.html |03丨导读：专栏是怎么设计的？需要哪些知识？          |571 |
|572     |1061896570537305 |0   |net_content |           |0      |104-性能工程高手课/02丨性能定律和数理基础 (5讲)/04丨性能工程三定律：IT业和性能优化工作的“法律法规”.html  |04丨性能工程三定律：IT业和性能优化工作的“法律法规”    |572 |
|573     |953781898957230  |0   |net_content |           |0      |104-性能工程高手课/02丨性能定律和数理基础 (5讲)/05丨概率统计和排队论：做性能工作必须懂的数理基础.html     |05丨概率统计和排队论：做性能工作必须懂的数理基础       |573 |
|574     |10238948519444   |0   |net_content |           |0      |104-性能工程高手课/02丨性能定律和数理基础 (5讲)/06丨性能数据的分析：如何从大量数据中看出想要的信号？.html   |06丨性能数据的分析：如何从大量数据中看出想要的信号？     |574 |
|575     |1125077492768631 |0   |net_content |           |0      |104-性能工程高手课/02丨性能定律和数理基础 (5讲)/07丨性能数据的展示：一图胜千言，说出你的数据故事.html     |07丨性能数据的展示：一图胜千言，说出你的数据故事       |575 |
|576     |977438879222316  |0   |net_content |           |0      |104-性能工程高手课/02丨性能定律和数理基础 (5讲)/08丨经验总结：必须熟记的一组常用性能数字.html         |08丨经验总结：必须熟记的一组常用性能数字           |576 |
|577     |1032851353153498 |0   |net_content |           |0      |104-性能工程高手课/03丨性能测试 (5讲)/09丨性能测试的种类：如何快准狠地抓住一个测试的本质？.html        |09丨性能测试的种类：如何快准狠地抓住一个测试的本质？     |577 |
|578     |336224727929298  |0   |net_content |           |0      |104-性能工程高手课/03丨性能测试 (5讲)/10丨性能测试的规划和步骤：为什么性能测试不容易一蹴而就呢？.html     |10丨性能测试的规划和步骤：为什么性能测试不容易一蹴而就呢？  |578 |
|579     |387444308294595  |0   |net_content |           |0      |104-性能工程高手课/03丨性能测试 (5讲)/11丨性能测试的工具：七大测试场景如何选择高质量的测试工具？.html     |11丨性能测试的工具：七大测试场景如何选择高质量的测试工具？  |579 |
|580     |209458553731100  |0   |net_content |           |0      |104-性能工程高手课/03丨性能测试 (5讲)/12丨九条性能测试的经验和教训：如何保证测试结果可靠且可重复？.html    |12丨九条性能测试的经验和教训：如何保证测试结果可靠且可重复？ |580 |
|581     |250386143805634  |0   |net_content |           |0      |104-性能工程高手课/03丨性能测试 (5讲)/13丨性能测试的工程集成：如何与产品开发和运维业务有机集成？.html     |13丨性能测试的工程集成：如何与产品开发和运维业务有机集成？  |581 |
|582     |966001401118047  |0   |net_content |           |0      |104-性能工程高手课/04丨性能分析 (5讲)/14丨性能分析概述：性能问题归根结底是什么原因？.html           |14丨性能分析概述：性能问题归根结底是什么原因？        |582 |
|583     |773100394316869  |0   |net_content |           |0      |104-性能工程高手课/04丨性能分析 (5讲)/15丨常见的性能问题之CPU篇：如何让CPU的运行不受阻碍？.html     |15丨常见的性能问题之CPU篇：如何让CPU的运行不受阻碍？  |583 |
|--------|-----------------|----|------------|-----------|-------|-----------------------------------------------------------------|--------------------------------|----|

2020-11-23 20:28:38.458 INFO  jdbc.sqltiming Line:373 - select count(bookchecke0_.item_id) as col_0_0_ from book_check bookchecke0_ where bookchecke0_.got=0 
 {executed in 2 msec}
2020-11-23 20:28:38.460 INFO  jdbc.resultsettable Line:610 - 
|---------|
|col_0_0_ |
|---------|
|442      |
|---------|

2020-11-23 20:28:38.489 INFO  jdbc.sqltiming Line:373 - select bookchecke0_.item_id as item_id1_2_, bookchecke0_.fsid as fsid2_2_, bookchecke0_.got 
as got3_2_, bookchecke0_.name as name4_2_, bookchecke0_.parse_fail as parse_fa5_2_, bookchecke0_.parsed 
as parsed6_2_, bookchecke0_.path as path7_2_, bookchecke0_.title as title8_2_, bookchecke0_.vid 
as vid9_2_ from book_check bookchecke0_ where bookchecke0_.fsid='776264130211843' and bookchecke0_.name='net_content' 
 {executed in 2 msec}
2020-11-23 20:28:38.492 INFO  jdbc.resultsettable Line:610 - 
|--------|---------|---------|---------|-----------|---------|---------|---------|---------|
|item_id |fsid     |got      |name     |parse_fail |parsed   |path     |title    |vid      |
|--------|---------|---------|---------|-----------|---------|---------|---------|---------|
|553     |[unread] |[unread] |[unread] |[unread]   |[unread] |[unread] |[unread] |[unread] |
|--------|---------|---------|---------|-----------|---------|---------|---------|---------|

2020-11-23 20:29:44.120 INFO  geek.me.javaapi.JavaApiApplication Line:651 - No active profile set, falling back to default profiles: default
2020-11-23 20:29:46.171 INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate Line:127 - Bootstrapping Spring Data JPA repositories in DEFERRED mode.
2020-11-23 20:29:46.690 INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate Line:187 - Finished Spring Data repository scanning in 485ms. Found 20 JPA repository interfaces.
2020-11-23 20:29:47.435 INFO  org.springframework.cloud.context.scope.GenericScope Line:295 - BeanFactory id=a57235e8-b792-3882-8d3a-8bc20defb1fe
2020-11-23 20:29:48.882 INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer Line:108 - Tomcat initialized with port(s): 8080 (http)
2020-11-23 20:29:48.918 INFO  org.apache.coyote.http11.Http11NioProtocol Line:173 - Initializing ProtocolHandler ["http-nio-8080"]
2020-11-23 20:29:48.921 INFO  org.apache.catalina.core.StandardService Line:173 - Starting service [Tomcat]
2020-11-23 20:29:48.923 INFO  org.apache.catalina.core.StandardEngine Line:173 - Starting Servlet engine: [Apache Tomcat/9.0.37]
2020-11-23 20:29:49.374 INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Line:173 - Initializing Spring embedded WebApplicationContext
2020-11-23 20:29:49.375 INFO  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext Line:285 - Root WebApplicationContext: initialization completed in 5180 ms
2020-11-23 20:29:50.135 INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Line:181 - Initializing ExecutorService 'applicationTaskExecutor'
2020-11-23 20:29:50.175 INFO  com.zaxxer.hikari.HikariDataSource Line:110 - HikariPool-1 - Starting...
2020-11-23 20:29:50.654 INFO  com.zaxxer.hikari.HikariDataSource Line:123 - HikariPool-1 - Start completed.
2020-11-23 20:29:51.053 INFO  org.hibernate.jpa.internal.util.LogHelper Line:31  - HHH000204: Processing PersistenceUnitInfo [name: default]
2020-11-23 20:29:51.277 INFO  org.hibernate.Version Line:44  - HHH000412: Hibernate ORM core version 5.4.20.Final
2020-11-23 20:29:51.905 INFO  org.hibernate.annotations.common.Version Line:49  - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-11-23 20:29:52.362 INFO  com.netflix.config.sources.URLConfigurationSource Line:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-11-23 20:29:52.385 INFO  com.netflix.config.sources.URLConfigurationSource Line:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-11-23 20:29:52.459 INFO  org.hibernate.dialect.Dialect Line:170 - HHH000400: Using dialect: org.hibernate.dialect.MySQL55Dialect
2020-11-23 20:29:54.914 INFO  org.apache.coyote.http11.Http11NioProtocol Line:173 - Starting ProtocolHandler ["http-nio-8080"]
2020-11-23 20:29:55.021 INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer Line:220 - Tomcat started on port(s): 8080 (http) with context path ''
2020-11-23 20:29:55.776 INFO  org.springframework.data.repository.config.DeferredRepositoryInitializationListener Line:49  - Triggering deferred initialization of Spring Data repositories…
2020-11-23 20:29:55.906 INFO  org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator Line:52  - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-11-23 20:29:55.945 INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean Line:416 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-11-23 20:29:58.660 INFO  org.springframework.data.repository.config.DeferredRepositoryInitializationListener Line:53  - Spring Data repositories initialized!
2020-11-23 20:29:58.684 INFO  geek.me.javaapi.JavaApiApplication Line:61  - Started JavaApiApplication in 19.148 seconds (JVM running for 23.381)
2020-11-23 20:30:24.259 INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Line:173 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-11-23 20:30:24.261 INFO  org.springframework.web.servlet.DispatcherServlet Line:525 - Initializing Servlet 'dispatcherServlet'
2020-11-23 20:30:24.295 INFO  org.springframework.web.servlet.DispatcherServlet Line:547 - Completed initialization in 32 ms
2020-11-23 20:30:25.490 INFO  jdbc.sqltiming Line:373 - select bookchecke0_.item_id as item_id1_2_, bookchecke0_.fsid as fsid2_2_, bookchecke0_.got 
as got3_2_, bookchecke0_.name as name4_2_, bookchecke0_.parse_fail as parse_fa5_2_, bookchecke0_.parsed 
as parsed6_2_, bookchecke0_.path as path7_2_, bookchecke0_.title as title8_2_, bookchecke0_.vid 
as vid9_2_ from book_check bookchecke0_ where bookchecke0_.got=0 limit 20 
 {executed in 5 msec}
2020-11-23 20:30:25.611 INFO  jdbc.resultsettable Line:610 - 
|--------|-----------------|----|------------|-----------|-------|-----------------------------------------------------------------|--------------------------------|----|
|item_id |fsid             |got |name        |parse_fail |parsed |path                                                             |title                           |vid |
|--------|-----------------|----|------------|-----------|-------|-----------------------------------------------------------------|--------------------------------|----|
|553     |776264130211843  |0   |net_content |           |0      |102-现代C++实战30讲/05丨未来篇 (3讲)/29丨Ranges：无迭代器的迭代和更方便的组合.html         |29丨Ranges：无迭代器的迭代和更方便的组合        |553 |
|554     |901563966624350  |0   |net_content |           |0      |102-现代C++实战30讲/05丨未来篇 (3讲)/30丨Coroutines：协作式的交叉调度执行.html         |30丨Coroutines：协作式的交叉调度执行        |554 |
|555     |503687233870410  |0   |net_content |           |0      |102-现代C++实战30讲/06丨加餐 (1讲)/加餐丨部分课后思考题答案合集.html                    |加餐丨部分课后思考题答案合集                  |555 |
|556     |719662679018295  |0   |net_content |           |0      |102-现代C++实战30讲/07丨结束语 (1讲)/结束语丨终点已达，行程还要继续.html                  |结束语丨终点已达，行程还要继续                 |556 |
|568     |706717272250670  |0   |net_content |           |0      |104-性能工程高手课/00丨开篇词 (1讲)/00丨开篇词丨代码不要眼前的苟且，而要效率的提升和性能的优化.html      |00丨开篇词丨代码不要眼前的苟且，而要效率的提升和性能的优化  |568 |
|569     |674616496192560  |0   |net_content |           |0      |104-性能工程高手课/01丨开篇：认识代码性能和系统容量效率 (3讲)/01丨程序员为什么要关心代码性能？.html      |01丨程序员为什么要关心代码性能？               |569 |
|570     |163185365427098  |0   |net_content |           |0      |104-性能工程高手课/01丨开篇：认识代码性能和系统容量效率 (3讲)/02丨程序员也要关心整个系统和公司成本吗？.html  |02丨程序员也要关心整个系统和公司成本吗？           |570 |
|571     |745874331355291  |0   |net_content |           |0      |104-性能工程高手课/01丨开篇：认识代码性能和系统容量效率 (3讲)/03丨导读：专栏是怎么设计的？需要哪些知识？.html |03丨导读：专栏是怎么设计的？需要哪些知识？          |571 |
|572     |1061896570537305 |0   |net_content |           |0      |104-性能工程高手课/02丨性能定律和数理基础 (5讲)/04丨性能工程三定律：IT业和性能优化工作的“法律法规”.html  |04丨性能工程三定律：IT业和性能优化工作的“法律法规”    |572 |
|573     |953781898957230  |0   |net_content |           |0      |104-性能工程高手课/02丨性能定律和数理基础 (5讲)/05丨概率统计和排队论：做性能工作必须懂的数理基础.html     |05丨概率统计和排队论：做性能工作必须懂的数理基础       |573 |
|574     |10238948519444   |0   |net_content |           |0      |104-性能工程高手课/02丨性能定律和数理基础 (5讲)/06丨性能数据的分析：如何从大量数据中看出想要的信号？.html   |06丨性能数据的分析：如何从大量数据中看出想要的信号？     |574 |
|575     |1125077492768631 |0   |net_content |           |0      |104-性能工程高手课/02丨性能定律和数理基础 (5讲)/07丨性能数据的展示：一图胜千言，说出你的数据故事.html     |07丨性能数据的展示：一图胜千言，说出你的数据故事       |575 |
|576     |977438879222316  |0   |net_content |           |0      |104-性能工程高手课/02丨性能定律和数理基础 (5讲)/08丨经验总结：必须熟记的一组常用性能数字.html         |08丨经验总结：必须熟记的一组常用性能数字           |576 |
|577     |1032851353153498 |0   |net_content |           |0      |104-性能工程高手课/03丨性能测试 (5讲)/09丨性能测试的种类：如何快准狠地抓住一个测试的本质？.html        |09丨性能测试的种类：如何快准狠地抓住一个测试的本质？     |577 |
|578     |336224727929298  |0   |net_content |           |0      |104-性能工程高手课/03丨性能测试 (5讲)/10丨性能测试的规划和步骤：为什么性能测试不容易一蹴而就呢？.html     |10丨性能测试的规划和步骤：为什么性能测试不容易一蹴而就呢？  |578 |
|579     |387444308294595  |0   |net_content |           |0      |104-性能工程高手课/03丨性能测试 (5讲)/11丨性能测试的工具：七大测试场景如何选择高质量的测试工具？.html     |11丨性能测试的工具：七大测试场景如何选择高质量的测试工具？  |579 |
|580     |209458553731100  |0   |net_content |           |0      |104-性能工程高手课/03丨性能测试 (5讲)/12丨九条性能测试的经验和教训：如何保证测试结果可靠且可重复？.html    |12丨九条性能测试的经验和教训：如何保证测试结果可靠且可重复？ |580 |
|581     |250386143805634  |0   |net_content |           |0      |104-性能工程高手课/03丨性能测试 (5讲)/13丨性能测试的工程集成：如何与产品开发和运维业务有机集成？.html     |13丨性能测试的工程集成：如何与产品开发和运维业务有机集成？  |581 |
|582     |966001401118047  |0   |net_content |           |0      |104-性能工程高手课/04丨性能分析 (5讲)/14丨性能分析概述：性能问题归根结底是什么原因？.html           |14丨性能分析概述：性能问题归根结底是什么原因？        |582 |
|583     |773100394316869  |0   |net_content |           |0      |104-性能工程高手课/04丨性能分析 (5讲)/15丨常见的性能问题之CPU篇：如何让CPU的运行不受阻碍？.html     |15丨常见的性能问题之CPU篇：如何让CPU的运行不受阻碍？  |583 |
|--------|-----------------|----|------------|-----------|-------|-----------------------------------------------------------------|--------------------------------|----|

2020-11-23 20:30:25.649 INFO  jdbc.sqltiming Line:373 - select count(bookchecke0_.item_id) as col_0_0_ from book_check bookchecke0_ where bookchecke0_.got=0 
 {executed in 2 msec}
2020-11-23 20:30:25.653 INFO  jdbc.resultsettable Line:610 - 
|---------|
|col_0_0_ |
|---------|
|442      |
|---------|

2020-11-23 20:30:25.681 INFO  jdbc.sqltiming Line:373 - select bookchecke0_.item_id as item_id1_2_, bookchecke0_.fsid as fsid2_2_, bookchecke0_.got 
as got3_2_, bookchecke0_.name as name4_2_, bookchecke0_.parse_fail as parse_fa5_2_, bookchecke0_.parsed 
as parsed6_2_, bookchecke0_.path as path7_2_, bookchecke0_.title as title8_2_, bookchecke0_.vid 
as vid9_2_ from book_check bookchecke0_ where bookchecke0_.fsid='776264130211843' and bookchecke0_.name='net_content' 
 {executed in 2 msec}
2020-11-23 20:30:25.685 INFO  jdbc.resultsettable Line:610 - 
|--------|---------|---------|---------|-----------|---------|---------|---------|---------|
|item_id |fsid     |got      |name     |parse_fail |parsed   |path     |title    |vid      |
|--------|---------|---------|---------|-----------|---------|---------|---------|---------|
|553     |[unread] |[unread] |[unread] |[unread]   |[unread] |[unread] |[unread] |[unread] |
|--------|---------|---------|---------|-----------|---------|---------|---------|---------|

2020-11-23 20:39:19.472 INFO  geek.me.javaapi.JavaApiApplication Line:651 - No active profile set, falling back to default profiles: default
2020-11-23 20:39:21.546 INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate Line:127 - Bootstrapping Spring Data JPA repositories in DEFERRED mode.
2020-11-23 20:39:22.086 INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate Line:187 - Finished Spring Data repository scanning in 501ms. Found 20 JPA repository interfaces.
2020-11-23 20:39:22.801 INFO  org.springframework.cloud.context.scope.GenericScope Line:295 - BeanFactory id=a57235e8-b792-3882-8d3a-8bc20defb1fe
2020-11-23 20:39:24.268 INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer Line:108 - Tomcat initialized with port(s): 8080 (http)
2020-11-23 20:39:24.305 INFO  org.apache.coyote.http11.Http11NioProtocol Line:173 - Initializing ProtocolHandler ["http-nio-8080"]
2020-11-23 20:39:24.308 INFO  org.apache.catalina.core.StandardService Line:173 - Starting service [Tomcat]
2020-11-23 20:39:24.309 INFO  org.apache.catalina.core.StandardEngine Line:173 - Starting Servlet engine: [Apache Tomcat/9.0.37]
2020-11-23 20:39:24.785 INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Line:173 - Initializing Spring embedded WebApplicationContext
2020-11-23 20:39:24.786 INFO  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext Line:285 - Root WebApplicationContext: initialization completed in 5225 ms
2020-11-23 20:39:25.528 INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Line:181 - Initializing ExecutorService 'applicationTaskExecutor'
2020-11-23 20:39:25.568 INFO  com.zaxxer.hikari.HikariDataSource Line:110 - HikariPool-1 - Starting...
2020-11-23 20:39:26.038 INFO  com.zaxxer.hikari.HikariDataSource Line:123 - HikariPool-1 - Start completed.
2020-11-23 20:39:26.469 INFO  org.hibernate.jpa.internal.util.LogHelper Line:31  - HHH000204: Processing PersistenceUnitInfo [name: default]
2020-11-23 20:39:26.700 INFO  org.hibernate.Version Line:44  - HHH000412: Hibernate ORM core version 5.4.20.Final
2020-11-23 20:39:27.320 INFO  org.hibernate.annotations.common.Version Line:49  - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-11-23 20:39:27.790 INFO  com.netflix.config.sources.URLConfigurationSource Line:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-11-23 20:39:27.813 INFO  com.netflix.config.sources.URLConfigurationSource Line:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-11-23 20:39:27.881 INFO  org.hibernate.dialect.Dialect Line:170 - HHH000400: Using dialect: org.hibernate.dialect.MySQL55Dialect
2020-11-23 20:39:30.326 INFO  org.apache.coyote.http11.Http11NioProtocol Line:173 - Starting ProtocolHandler ["http-nio-8080"]
2020-11-23 20:39:30.435 INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer Line:220 - Tomcat started on port(s): 8080 (http) with context path ''
2020-11-23 20:39:31.204 INFO  org.springframework.data.repository.config.DeferredRepositoryInitializationListener Line:49  - Triggering deferred initialization of Spring Data repositories…
2020-11-23 20:39:31.272 INFO  org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator Line:52  - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-11-23 20:39:31.320 INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean Line:416 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-11-23 20:39:34.092 INFO  org.springframework.data.repository.config.DeferredRepositoryInitializationListener Line:53  - Spring Data repositories initialized!
2020-11-23 20:39:34.115 INFO  geek.me.javaapi.JavaApiApplication Line:61  - Started JavaApiApplication in 19.672 seconds (JVM running for 23.827)
2020-11-23 20:39:46.764 INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Line:173 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-11-23 20:39:46.766 INFO  org.springframework.web.servlet.DispatcherServlet Line:525 - Initializing Servlet 'dispatcherServlet'
2020-11-23 20:39:46.800 INFO  org.springframework.web.servlet.DispatcherServlet Line:547 - Completed initialization in 34 ms
2020-11-23 20:39:47.945 INFO  jdbc.sqltiming Line:373 - select bookchecke0_.item_id as item_id1_2_, bookchecke0_.fsid as fsid2_2_, bookchecke0_.got 
as got3_2_, bookchecke0_.name as name4_2_, bookchecke0_.parse_fail as parse_fa5_2_, bookchecke0_.parsed 
as parsed6_2_, bookchecke0_.path as path7_2_, bookchecke0_.title as title8_2_, bookchecke0_.vid 
as vid9_2_ from book_check bookchecke0_ where bookchecke0_.got=0 limit 20 
 {executed in 6 msec}
2020-11-23 20:39:48.042 INFO  jdbc.resultsettable Line:610 - 
|--------|-----------------|----|------------|-----------|-------|-----------------------------------------------------------------|--------------------------------|----|
|item_id |fsid             |got |name        |parse_fail |parsed |path                                                             |title                           |vid |
|--------|-----------------|----|------------|-----------|-------|-----------------------------------------------------------------|--------------------------------|----|
|553     |776264130211843  |0   |net_content |           |0      |102-现代C++实战30讲/05丨未来篇 (3讲)/29丨Ranges：无迭代器的迭代和更方便的组合.html         |29丨Ranges：无迭代器的迭代和更方便的组合        |553 |
|554     |901563966624350  |0   |net_content |           |0      |102-现代C++实战30讲/05丨未来篇 (3讲)/30丨Coroutines：协作式的交叉调度执行.html         |30丨Coroutines：协作式的交叉调度执行        |554 |
|555     |503687233870410  |0   |net_content |           |0      |102-现代C++实战30讲/06丨加餐 (1讲)/加餐丨部分课后思考题答案合集.html                    |加餐丨部分课后思考题答案合集                  |555 |
|556     |719662679018295  |0   |net_content |           |0      |102-现代C++实战30讲/07丨结束语 (1讲)/结束语丨终点已达，行程还要继续.html                  |结束语丨终点已达，行程还要继续                 |556 |
|568     |706717272250670  |0   |net_content |           |0      |104-性能工程高手课/00丨开篇词 (1讲)/00丨开篇词丨代码不要眼前的苟且，而要效率的提升和性能的优化.html      |00丨开篇词丨代码不要眼前的苟且，而要效率的提升和性能的优化  |568 |
|569     |674616496192560  |0   |net_content |           |0      |104-性能工程高手课/01丨开篇：认识代码性能和系统容量效率 (3讲)/01丨程序员为什么要关心代码性能？.html      |01丨程序员为什么要关心代码性能？               |569 |
|570     |163185365427098  |0   |net_content |           |0      |104-性能工程高手课/01丨开篇：认识代码性能和系统容量效率 (3讲)/02丨程序员也要关心整个系统和公司成本吗？.html  |02丨程序员也要关心整个系统和公司成本吗？           |570 |
|571     |745874331355291  |0   |net_content |           |0      |104-性能工程高手课/01丨开篇：认识代码性能和系统容量效率 (3讲)/03丨导读：专栏是怎么设计的？需要哪些知识？.html |03丨导读：专栏是怎么设计的？需要哪些知识？          |571 |
|572     |1061896570537305 |0   |net_content |           |0      |104-性能工程高手课/02丨性能定律和数理基础 (5讲)/04丨性能工程三定律：IT业和性能优化工作的“法律法规”.html  |04丨性能工程三定律：IT业和性能优化工作的“法律法规”    |572 |
|573     |953781898957230  |0   |net_content |           |0      |104-性能工程高手课/02丨性能定律和数理基础 (5讲)/05丨概率统计和排队论：做性能工作必须懂的数理基础.html     |05丨概率统计和排队论：做性能工作必须懂的数理基础       |573 |
|574     |10238948519444   |0   |net_content |           |0      |104-性能工程高手课/02丨性能定律和数理基础 (5讲)/06丨性能数据的分析：如何从大量数据中看出想要的信号？.html   |06丨性能数据的分析：如何从大量数据中看出想要的信号？     |574 |
|575     |1125077492768631 |0   |net_content |           |0      |104-性能工程高手课/02丨性能定律和数理基础 (5讲)/07丨性能数据的展示：一图胜千言，说出你的数据故事.html     |07丨性能数据的展示：一图胜千言，说出你的数据故事       |575 |
|576     |977438879222316  |0   |net_content |           |0      |104-性能工程高手课/02丨性能定律和数理基础 (5讲)/08丨经验总结：必须熟记的一组常用性能数字.html         |08丨经验总结：必须熟记的一组常用性能数字           |576 |
|577     |1032851353153498 |0   |net_content |           |0      |104-性能工程高手课/03丨性能测试 (5讲)/09丨性能测试的种类：如何快准狠地抓住一个测试的本质？.html        |09丨性能测试的种类：如何快准狠地抓住一个测试的本质？     |577 |
|578     |336224727929298  |0   |net_content |           |0      |104-性能工程高手课/03丨性能测试 (5讲)/10丨性能测试的规划和步骤：为什么性能测试不容易一蹴而就呢？.html     |10丨性能测试的规划和步骤：为什么性能测试不容易一蹴而就呢？  |578 |
|579     |387444308294595  |0   |net_content |           |0      |104-性能工程高手课/03丨性能测试 (5讲)/11丨性能测试的工具：七大测试场景如何选择高质量的测试工具？.html     |11丨性能测试的工具：七大测试场景如何选择高质量的测试工具？  |579 |
|580     |209458553731100  |0   |net_content |           |0      |104-性能工程高手课/03丨性能测试 (5讲)/12丨九条性能测试的经验和教训：如何保证测试结果可靠且可重复？.html    |12丨九条性能测试的经验和教训：如何保证测试结果可靠且可重复？ |580 |
|581     |250386143805634  |0   |net_content |           |0      |104-性能工程高手课/03丨性能测试 (5讲)/13丨性能测试的工程集成：如何与产品开发和运维业务有机集成？.html     |13丨性能测试的工程集成：如何与产品开发和运维业务有机集成？  |581 |
|582     |966001401118047  |0   |net_content |           |0      |104-性能工程高手课/04丨性能分析 (5讲)/14丨性能分析概述：性能问题归根结底是什么原因？.html           |14丨性能分析概述：性能问题归根结底是什么原因？        |582 |
|583     |773100394316869  |0   |net_content |           |0      |104-性能工程高手课/04丨性能分析 (5讲)/15丨常见的性能问题之CPU篇：如何让CPU的运行不受阻碍？.html     |15丨常见的性能问题之CPU篇：如何让CPU的运行不受阻碍？  |583 |
|--------|-----------------|----|------------|-----------|-------|-----------------------------------------------------------------|--------------------------------|----|

2020-11-23 20:39:48.074 INFO  jdbc.sqltiming Line:373 - select count(bookchecke0_.item_id) as col_0_0_ from book_check bookchecke0_ where bookchecke0_.got=0 
 {executed in 2 msec}
2020-11-23 20:39:48.076 INFO  jdbc.resultsettable Line:610 - 
|---------|
|col_0_0_ |
|---------|
|442      |
|---------|

2020-11-23 20:39:48.108 INFO  jdbc.sqltiming Line:373 - select bookchecke0_.item_id as item_id1_2_, bookchecke0_.fsid as fsid2_2_, bookchecke0_.got 
as got3_2_, bookchecke0_.name as name4_2_, bookchecke0_.parse_fail as parse_fa5_2_, bookchecke0_.parsed 
as parsed6_2_, bookchecke0_.path as path7_2_, bookchecke0_.title as title8_2_, bookchecke0_.vid 
as vid9_2_ from book_check bookchecke0_ where bookchecke0_.fsid='776264130211843' and bookchecke0_.name='net_content' 
 {executed in 2 msec}
2020-11-23 20:39:48.112 INFO  jdbc.resultsettable Line:610 - 
|--------|---------|---------|---------|-----------|---------|---------|---------|---------|
|item_id |fsid     |got      |name     |parse_fail |parsed   |path     |title    |vid      |
|--------|---------|---------|---------|-----------|---------|---------|---------|---------|
|553     |[unread] |[unread] |[unread] |[unread]   |[unread] |[unread] |[unread] |[unread] |
|--------|---------|---------|---------|-----------|---------|---------|---------|---------|

2020-11-23 20:59:25.321 INFO  geek.me.javaapi.JavaApiApplication Line:651 - No active profile set, falling back to default profiles: default
2020-11-23 20:59:27.365 INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate Line:127 - Bootstrapping Spring Data JPA repositories in DEFERRED mode.
2020-11-23 20:59:27.912 INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate Line:187 - Finished Spring Data repository scanning in 512ms. Found 20 JPA repository interfaces.
2020-11-23 20:59:28.633 INFO  org.springframework.cloud.context.scope.GenericScope Line:295 - BeanFactory id=a57235e8-b792-3882-8d3a-8bc20defb1fe
2020-11-23 20:59:30.111 INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer Line:108 - Tomcat initialized with port(s): 8080 (http)
2020-11-23 20:59:30.149 INFO  org.apache.coyote.http11.Http11NioProtocol Line:173 - Initializing ProtocolHandler ["http-nio-8080"]
2020-11-23 20:59:30.152 INFO  org.apache.catalina.core.StandardService Line:173 - Starting service [Tomcat]
2020-11-23 20:59:30.153 INFO  org.apache.catalina.core.StandardEngine Line:173 - Starting Servlet engine: [Apache Tomcat/9.0.37]
2020-11-23 20:59:30.643 INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Line:173 - Initializing Spring embedded WebApplicationContext
2020-11-23 20:59:30.644 INFO  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext Line:285 - Root WebApplicationContext: initialization completed in 5251 ms
2020-11-23 20:59:31.380 INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Line:181 - Initializing ExecutorService 'applicationTaskExecutor'
2020-11-23 20:59:31.423 INFO  com.zaxxer.hikari.HikariDataSource Line:110 - HikariPool-1 - Starting...
2020-11-23 20:59:31.901 INFO  com.zaxxer.hikari.HikariDataSource Line:123 - HikariPool-1 - Start completed.
2020-11-23 20:59:32.344 INFO  org.hibernate.jpa.internal.util.LogHelper Line:31  - HHH000204: Processing PersistenceUnitInfo [name: default]
2020-11-23 20:59:32.573 INFO  org.hibernate.Version Line:44  - HHH000412: Hibernate ORM core version 5.4.20.Final
2020-11-23 20:59:33.195 INFO  org.hibernate.annotations.common.Version Line:49  - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-11-23 20:59:33.676 INFO  com.netflix.config.sources.URLConfigurationSource Line:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-11-23 20:59:33.696 INFO  com.netflix.config.sources.URLConfigurationSource Line:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-11-23 20:59:33.740 INFO  org.hibernate.dialect.Dialect Line:170 - HHH000400: Using dialect: org.hibernate.dialect.MySQL55Dialect
2020-11-23 20:59:36.229 INFO  org.apache.coyote.http11.Http11NioProtocol Line:173 - Starting ProtocolHandler ["http-nio-8080"]
2020-11-23 20:59:36.344 INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer Line:220 - Tomcat started on port(s): 8080 (http) with context path ''
2020-11-23 20:59:37.108 INFO  org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator Line:52  - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-11-23 20:59:37.126 INFO  org.springframework.data.repository.config.DeferredRepositoryInitializationListener Line:49  - Triggering deferred initialization of Spring Data repositories…
2020-11-23 20:59:37.150 INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean Line:416 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-11-23 20:59:40.082 INFO  org.springframework.data.repository.config.DeferredRepositoryInitializationListener Line:53  - Spring Data repositories initialized!
2020-11-23 20:59:40.106 INFO  geek.me.javaapi.JavaApiApplication Line:61  - Started JavaApiApplication in 19.258 seconds (JVM running for 23.288)
2020-11-23 20:59:48.679 INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Line:173 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-11-23 20:59:48.680 INFO  org.springframework.web.servlet.DispatcherServlet Line:525 - Initializing Servlet 'dispatcherServlet'
2020-11-23 20:59:48.709 INFO  org.springframework.web.servlet.DispatcherServlet Line:547 - Completed initialization in 28 ms
2020-11-23 20:59:49.774 INFO  jdbc.sqltiming Line:373 - select bookchecke0_.item_id as item_id1_2_, bookchecke0_.fsid as fsid2_2_, bookchecke0_.got 
as got3_2_, bookchecke0_.name as name4_2_, bookchecke0_.parse_fail as parse_fa5_2_, bookchecke0_.parsed 
as parsed6_2_, bookchecke0_.path as path7_2_, bookchecke0_.title as title8_2_, bookchecke0_.vid 
as vid9_2_ from book_check bookchecke0_ where bookchecke0_.got=0 limit 20 
 {executed in 5 msec}
2020-11-23 20:59:49.868 INFO  jdbc.resultsettable Line:610 - 
|--------|-----------------|----|------------|-----------|-------|-----------------------------------------------------------------|--------------------------------|----|
|item_id |fsid             |got |name        |parse_fail |parsed |path                                                             |title                           |vid |
|--------|-----------------|----|------------|-----------|-------|-----------------------------------------------------------------|--------------------------------|----|
|553     |776264130211843  |0   |net_content |           |0      |102-现代C++实战30讲/05丨未来篇 (3讲)/29丨Ranges：无迭代器的迭代和更方便的组合.html         |29丨Ranges：无迭代器的迭代和更方便的组合        |553 |
|554     |901563966624350  |0   |net_content |           |0      |102-现代C++实战30讲/05丨未来篇 (3讲)/30丨Coroutines：协作式的交叉调度执行.html         |30丨Coroutines：协作式的交叉调度执行        |554 |
|555     |503687233870410  |0   |net_content |           |0      |102-现代C++实战30讲/06丨加餐 (1讲)/加餐丨部分课后思考题答案合集.html                    |加餐丨部分课后思考题答案合集                  |555 |
|556     |719662679018295  |0   |net_content |           |0      |102-现代C++实战30讲/07丨结束语 (1讲)/结束语丨终点已达，行程还要继续.html                  |结束语丨终点已达，行程还要继续                 |556 |
|568     |706717272250670  |0   |net_content |           |0      |104-性能工程高手课/00丨开篇词 (1讲)/00丨开篇词丨代码不要眼前的苟且，而要效率的提升和性能的优化.html      |00丨开篇词丨代码不要眼前的苟且，而要效率的提升和性能的优化  |568 |
|569     |674616496192560  |0   |net_content |           |0      |104-性能工程高手课/01丨开篇：认识代码性能和系统容量效率 (3讲)/01丨程序员为什么要关心代码性能？.html      |01丨程序员为什么要关心代码性能？               |569 |
|570     |163185365427098  |0   |net_content |           |0      |104-性能工程高手课/01丨开篇：认识代码性能和系统容量效率 (3讲)/02丨程序员也要关心整个系统和公司成本吗？.html  |02丨程序员也要关心整个系统和公司成本吗？           |570 |
|571     |745874331355291  |0   |net_content |           |0      |104-性能工程高手课/01丨开篇：认识代码性能和系统容量效率 (3讲)/03丨导读：专栏是怎么设计的？需要哪些知识？.html |03丨导读：专栏是怎么设计的？需要哪些知识？          |571 |
|572     |1061896570537305 |0   |net_content |           |0      |104-性能工程高手课/02丨性能定律和数理基础 (5讲)/04丨性能工程三定律：IT业和性能优化工作的“法律法规”.html  |04丨性能工程三定律：IT业和性能优化工作的“法律法规”    |572 |
|573     |953781898957230  |0   |net_content |           |0      |104-性能工程高手课/02丨性能定律和数理基础 (5讲)/05丨概率统计和排队论：做性能工作必须懂的数理基础.html     |05丨概率统计和排队论：做性能工作必须懂的数理基础       |573 |
|574     |10238948519444   |0   |net_content |           |0      |104-性能工程高手课/02丨性能定律和数理基础 (5讲)/06丨性能数据的分析：如何从大量数据中看出想要的信号？.html   |06丨性能数据的分析：如何从大量数据中看出想要的信号？     |574 |
|575     |1125077492768631 |0   |net_content |           |0      |104-性能工程高手课/02丨性能定律和数理基础 (5讲)/07丨性能数据的展示：一图胜千言，说出你的数据故事.html     |07丨性能数据的展示：一图胜千言，说出你的数据故事       |575 |
|576     |977438879222316  |0   |net_content |           |0      |104-性能工程高手课/02丨性能定律和数理基础 (5讲)/08丨经验总结：必须熟记的一组常用性能数字.html         |08丨经验总结：必须熟记的一组常用性能数字           |576 |
|577     |1032851353153498 |0   |net_content |           |0      |104-性能工程高手课/03丨性能测试 (5讲)/09丨性能测试的种类：如何快准狠地抓住一个测试的本质？.html        |09丨性能测试的种类：如何快准狠地抓住一个测试的本质？     |577 |
|578     |336224727929298  |0   |net_content |           |0      |104-性能工程高手课/03丨性能测试 (5讲)/10丨性能测试的规划和步骤：为什么性能测试不容易一蹴而就呢？.html     |10丨性能测试的规划和步骤：为什么性能测试不容易一蹴而就呢？  |578 |
|579     |387444308294595  |0   |net_content |           |0      |104-性能工程高手课/03丨性能测试 (5讲)/11丨性能测试的工具：七大测试场景如何选择高质量的测试工具？.html     |11丨性能测试的工具：七大测试场景如何选择高质量的测试工具？  |579 |
|580     |209458553731100  |0   |net_content |           |0      |104-性能工程高手课/03丨性能测试 (5讲)/12丨九条性能测试的经验和教训：如何保证测试结果可靠且可重复？.html    |12丨九条性能测试的经验和教训：如何保证测试结果可靠且可重复？ |580 |
|581     |250386143805634  |0   |net_content |           |0      |104-性能工程高手课/03丨性能测试 (5讲)/13丨性能测试的工程集成：如何与产品开发和运维业务有机集成？.html     |13丨性能测试的工程集成：如何与产品开发和运维业务有机集成？  |581 |
|582     |966001401118047  |0   |net_content |           |0      |104-性能工程高手课/04丨性能分析 (5讲)/14丨性能分析概述：性能问题归根结底是什么原因？.html           |14丨性能分析概述：性能问题归根结底是什么原因？        |582 |
|583     |773100394316869  |0   |net_content |           |0      |104-性能工程高手课/04丨性能分析 (5讲)/15丨常见的性能问题之CPU篇：如何让CPU的运行不受阻碍？.html     |15丨常见的性能问题之CPU篇：如何让CPU的运行不受阻碍？  |583 |
|--------|-----------------|----|------------|-----------|-------|-----------------------------------------------------------------|--------------------------------|----|

2020-11-23 20:59:49.906 INFO  jdbc.sqltiming Line:373 - select count(bookchecke0_.item_id) as col_0_0_ from book_check bookchecke0_ where bookchecke0_.got=0 
 {executed in 3 msec}
2020-11-23 20:59:49.908 INFO  jdbc.resultsettable Line:610 - 
|---------|
|col_0_0_ |
|---------|
|442      |
|---------|

2020-11-23 20:59:49.934 INFO  jdbc.sqltiming Line:373 - select bookchecke0_.item_id as item_id1_2_, bookchecke0_.fsid as fsid2_2_, bookchecke0_.got 
as got3_2_, bookchecke0_.name as name4_2_, bookchecke0_.parse_fail as parse_fa5_2_, bookchecke0_.parsed 
as parsed6_2_, bookchecke0_.path as path7_2_, bookchecke0_.title as title8_2_, bookchecke0_.vid 
as vid9_2_ from book_check bookchecke0_ where bookchecke0_.fsid='776264130211843' and bookchecke0_.name='net_content' 
 {executed in 1 msec}
2020-11-23 20:59:49.938 INFO  jdbc.resultsettable Line:610 - 
|--------|---------|---------|---------|-----------|---------|---------|---------|---------|
|item_id |fsid     |got      |name     |parse_fail |parsed   |path     |title    |vid      |
|--------|---------|---------|---------|-----------|---------|---------|---------|---------|
|553     |[unread] |[unread] |[unread] |[unread]   |[unread] |[unread] |[unread] |[unread] |
|--------|---------|---------|---------|-----------|---------|---------|---------|---------|

2020-11-23 21:10:47.479 INFO  geek.me.javaapi.JavaApiApplication Line:651 - No active profile set, falling back to default profiles: default
2020-11-23 21:10:49.582 INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate Line:127 - Bootstrapping Spring Data JPA repositories in DEFERRED mode.
2020-11-23 21:10:50.103 INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate Line:187 - Finished Spring Data repository scanning in 486ms. Found 20 JPA repository interfaces.
2020-11-23 21:10:50.818 INFO  org.springframework.cloud.context.scope.GenericScope Line:295 - BeanFactory id=a57235e8-b792-3882-8d3a-8bc20defb1fe
2020-11-23 21:10:52.344 INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer Line:108 - Tomcat initialized with port(s): 8080 (http)
2020-11-23 21:10:52.378 INFO  org.apache.coyote.http11.Http11NioProtocol Line:173 - Initializing ProtocolHandler ["http-nio-8080"]
2020-11-23 21:10:52.381 INFO  org.apache.catalina.core.StandardService Line:173 - Starting service [Tomcat]
2020-11-23 21:10:52.382 INFO  org.apache.catalina.core.StandardEngine Line:173 - Starting Servlet engine: [Apache Tomcat/9.0.37]
2020-11-23 21:10:52.798 INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Line:173 - Initializing Spring embedded WebApplicationContext
2020-11-23 21:10:52.799 INFO  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext Line:285 - Root WebApplicationContext: initialization completed in 5241 ms
2020-11-23 21:10:53.534 INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Line:181 - Initializing ExecutorService 'applicationTaskExecutor'
2020-11-23 21:10:53.582 INFO  com.zaxxer.hikari.HikariDataSource Line:110 - HikariPool-1 - Starting...
2020-11-23 21:10:54.323 INFO  com.zaxxer.hikari.HikariDataSource Line:123 - HikariPool-1 - Start completed.
2020-11-23 21:10:54.524 INFO  org.hibernate.jpa.internal.util.LogHelper Line:31  - HHH000204: Processing PersistenceUnitInfo [name: default]
2020-11-23 21:10:54.749 INFO  org.hibernate.Version Line:44  - HHH000412: Hibernate ORM core version 5.4.20.Final
2020-11-23 21:10:55.396 INFO  org.hibernate.annotations.common.Version Line:49  - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-11-23 21:10:55.592 INFO  com.netflix.config.sources.URLConfigurationSource Line:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-11-23 21:10:55.615 INFO  com.netflix.config.sources.URLConfigurationSource Line:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-11-23 21:10:55.970 INFO  org.hibernate.dialect.Dialect Line:170 - HHH000400: Using dialect: org.hibernate.dialect.MySQL55Dialect
2020-11-23 21:10:58.097 INFO  org.apache.coyote.http11.Http11NioProtocol Line:173 - Starting ProtocolHandler ["http-nio-8080"]
2020-11-23 21:10:58.204 INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer Line:220 - Tomcat started on port(s): 8080 (http) with context path ''
2020-11-23 21:10:59.008 INFO  org.springframework.data.repository.config.DeferredRepositoryInitializationListener Line:49  - Triggering deferred initialization of Spring Data repositories…
2020-11-23 21:10:59.360 INFO  org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator Line:52  - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-11-23 21:10:59.403 INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean Line:416 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-11-23 21:11:02.143 INFO  org.springframework.data.repository.config.DeferredRepositoryInitializationListener Line:53  - Spring Data repositories initialized!
2020-11-23 21:11:02.166 INFO  geek.me.javaapi.JavaApiApplication Line:61  - Started JavaApiApplication in 19.203 seconds (JVM running for 24.162)
2020-11-23 21:11:51.579 INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Line:173 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-11-23 21:11:51.581 INFO  org.springframework.web.servlet.DispatcherServlet Line:525 - Initializing Servlet 'dispatcherServlet'
2020-11-23 21:11:51.628 INFO  org.springframework.web.servlet.DispatcherServlet Line:547 - Completed initialization in 44 ms
2020-11-23 21:11:52.758 INFO  jdbc.sqltiming Line:373 - select bookchecke0_.item_id as item_id1_2_, bookchecke0_.fsid as fsid2_2_, bookchecke0_.got 
as got3_2_, bookchecke0_.name as name4_2_, bookchecke0_.parse_fail as parse_fa5_2_, bookchecke0_.parsed 
as parsed6_2_, bookchecke0_.path as path7_2_, bookchecke0_.title as title8_2_, bookchecke0_.vid 
as vid9_2_ from book_check bookchecke0_ where bookchecke0_.got=0 limit 20 
 {executed in 4 msec}
2020-11-23 21:11:52.855 INFO  jdbc.resultsettable Line:610 - 
|--------|-----------------|----|------------|-----------|-------|-----------------------------------------------------------------|--------------------------------|----|
|item_id |fsid             |got |name        |parse_fail |parsed |path                                                             |title                           |vid |
|--------|-----------------|----|------------|-----------|-------|-----------------------------------------------------------------|--------------------------------|----|
|553     |776264130211843  |0   |net_content |           |0      |102-现代C++实战30讲/05丨未来篇 (3讲)/29丨Ranges：无迭代器的迭代和更方便的组合.html         |29丨Ranges：无迭代器的迭代和更方便的组合        |553 |
|554     |901563966624350  |0   |net_content |           |0      |102-现代C++实战30讲/05丨未来篇 (3讲)/30丨Coroutines：协作式的交叉调度执行.html         |30丨Coroutines：协作式的交叉调度执行        |554 |
|555     |503687233870410  |0   |net_content |           |0      |102-现代C++实战30讲/06丨加餐 (1讲)/加餐丨部分课后思考题答案合集.html                    |加餐丨部分课后思考题答案合集                  |555 |
|556     |719662679018295  |0   |net_content |           |0      |102-现代C++实战30讲/07丨结束语 (1讲)/结束语丨终点已达，行程还要继续.html                  |结束语丨终点已达，行程还要继续                 |556 |
|568     |706717272250670  |0   |net_content |           |0      |104-性能工程高手课/00丨开篇词 (1讲)/00丨开篇词丨代码不要眼前的苟且，而要效率的提升和性能的优化.html      |00丨开篇词丨代码不要眼前的苟且，而要效率的提升和性能的优化  |568 |
|569     |674616496192560  |0   |net_content |           |0      |104-性能工程高手课/01丨开篇：认识代码性能和系统容量效率 (3讲)/01丨程序员为什么要关心代码性能？.html      |01丨程序员为什么要关心代码性能？               |569 |
|570     |163185365427098  |0   |net_content |           |0      |104-性能工程高手课/01丨开篇：认识代码性能和系统容量效率 (3讲)/02丨程序员也要关心整个系统和公司成本吗？.html  |02丨程序员也要关心整个系统和公司成本吗？           |570 |
|571     |745874331355291  |0   |net_content |           |0      |104-性能工程高手课/01丨开篇：认识代码性能和系统容量效率 (3讲)/03丨导读：专栏是怎么设计的？需要哪些知识？.html |03丨导读：专栏是怎么设计的？需要哪些知识？          |571 |
|572     |1061896570537305 |0   |net_content |           |0      |104-性能工程高手课/02丨性能定律和数理基础 (5讲)/04丨性能工程三定律：IT业和性能优化工作的“法律法规”.html  |04丨性能工程三定律：IT业和性能优化工作的“法律法规”    |572 |
|573     |953781898957230  |0   |net_content |           |0      |104-性能工程高手课/02丨性能定律和数理基础 (5讲)/05丨概率统计和排队论：做性能工作必须懂的数理基础.html     |05丨概率统计和排队论：做性能工作必须懂的数理基础       |573 |
|574     |10238948519444   |0   |net_content |           |0      |104-性能工程高手课/02丨性能定律和数理基础 (5讲)/06丨性能数据的分析：如何从大量数据中看出想要的信号？.html   |06丨性能数据的分析：如何从大量数据中看出想要的信号？     |574 |
|575     |1125077492768631 |0   |net_content |           |0      |104-性能工程高手课/02丨性能定律和数理基础 (5讲)/07丨性能数据的展示：一图胜千言，说出你的数据故事.html     |07丨性能数据的展示：一图胜千言，说出你的数据故事       |575 |
|576     |977438879222316  |0   |net_content |           |0      |104-性能工程高手课/02丨性能定律和数理基础 (5讲)/08丨经验总结：必须熟记的一组常用性能数字.html         |08丨经验总结：必须熟记的一组常用性能数字           |576 |
|577     |1032851353153498 |0   |net_content |           |0      |104-性能工程高手课/03丨性能测试 (5讲)/09丨性能测试的种类：如何快准狠地抓住一个测试的本质？.html        |09丨性能测试的种类：如何快准狠地抓住一个测试的本质？     |577 |
|578     |336224727929298  |0   |net_content |           |0      |104-性能工程高手课/03丨性能测试 (5讲)/10丨性能测试的规划和步骤：为什么性能测试不容易一蹴而就呢？.html     |10丨性能测试的规划和步骤：为什么性能测试不容易一蹴而就呢？  |578 |
|579     |387444308294595  |0   |net_content |           |0      |104-性能工程高手课/03丨性能测试 (5讲)/11丨性能测试的工具：七大测试场景如何选择高质量的测试工具？.html     |11丨性能测试的工具：七大测试场景如何选择高质量的测试工具？  |579 |
|580     |209458553731100  |0   |net_content |           |0      |104-性能工程高手课/03丨性能测试 (5讲)/12丨九条性能测试的经验和教训：如何保证测试结果可靠且可重复？.html    |12丨九条性能测试的经验和教训：如何保证测试结果可靠且可重复？ |580 |
|581     |250386143805634  |0   |net_content |           |0      |104-性能工程高手课/03丨性能测试 (5讲)/13丨性能测试的工程集成：如何与产品开发和运维业务有机集成？.html     |13丨性能测试的工程集成：如何与产品开发和运维业务有机集成？  |581 |
|582     |966001401118047  |0   |net_content |           |0      |104-性能工程高手课/04丨性能分析 (5讲)/14丨性能分析概述：性能问题归根结底是什么原因？.html           |14丨性能分析概述：性能问题归根结底是什么原因？        |582 |
|583     |773100394316869  |0   |net_content |           |0      |104-性能工程高手课/04丨性能分析 (5讲)/15丨常见的性能问题之CPU篇：如何让CPU的运行不受阻碍？.html     |15丨常见的性能问题之CPU篇：如何让CPU的运行不受阻碍？  |583 |
|--------|-----------------|----|------------|-----------|-------|-----------------------------------------------------------------|--------------------------------|----|

2020-11-23 21:11:52.893 INFO  jdbc.sqltiming Line:373 - select count(bookchecke0_.item_id) as col_0_0_ from book_check bookchecke0_ where bookchecke0_.got=0 
 {executed in 2 msec}
2020-11-23 21:11:52.895 INFO  jdbc.resultsettable Line:610 - 
|---------|
|col_0_0_ |
|---------|
|442      |
|---------|

2020-11-23 21:11:52.923 INFO  jdbc.sqltiming Line:373 - select bookchecke0_.item_id as item_id1_2_, bookchecke0_.fsid as fsid2_2_, bookchecke0_.got 
as got3_2_, bookchecke0_.name as name4_2_, bookchecke0_.parse_fail as parse_fa5_2_, bookchecke0_.parsed 
as parsed6_2_, bookchecke0_.path as path7_2_, bookchecke0_.title as title8_2_, bookchecke0_.vid 
as vid9_2_ from book_check bookchecke0_ where bookchecke0_.fsid='776264130211843' and bookchecke0_.name='net_content' 
 {executed in 2 msec}
2020-11-23 21:11:52.928 INFO  jdbc.resultsettable Line:610 - 
|--------|---------|---------|---------|-----------|---------|---------|---------|---------|
|item_id |fsid     |got      |name     |parse_fail |parsed   |path     |title    |vid      |
|--------|---------|---------|---------|-----------|---------|---------|---------|---------|
|553     |[unread] |[unread] |[unread] |[unread]   |[unread] |[unread] |[unread] |[unread] |
|--------|---------|---------|---------|-----------|---------|---------|---------|---------|

2020-11-23 21:18:50.711 INFO  geek.me.javaapi.JavaApiApplication Line:651 - No active profile set, falling back to default profiles: default
2020-11-23 21:18:52.747 INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate Line:127 - Bootstrapping Spring Data JPA repositories in DEFERRED mode.
2020-11-23 21:18:53.292 INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate Line:187 - Finished Spring Data repository scanning in 508ms. Found 20 JPA repository interfaces.
2020-11-23 21:18:54.017 INFO  org.springframework.cloud.context.scope.GenericScope Line:295 - BeanFactory id=a57235e8-b792-3882-8d3a-8bc20defb1fe
2020-11-23 21:18:55.504 INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer Line:108 - Tomcat initialized with port(s): 8080 (http)
2020-11-23 21:18:55.545 INFO  org.apache.coyote.http11.Http11NioProtocol Line:173 - Initializing ProtocolHandler ["http-nio-8080"]
2020-11-23 21:18:55.549 INFO  org.apache.catalina.core.StandardService Line:173 - Starting service [Tomcat]
2020-11-23 21:18:55.551 INFO  org.apache.catalina.core.StandardEngine Line:173 - Starting Servlet engine: [Apache Tomcat/9.0.37]
2020-11-23 21:18:56.026 INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Line:173 - Initializing Spring embedded WebApplicationContext
2020-11-23 21:18:56.027 INFO  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext Line:285 - Root WebApplicationContext: initialization completed in 5238 ms
2020-11-23 21:18:56.763 INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Line:181 - Initializing ExecutorService 'applicationTaskExecutor'
2020-11-23 21:18:56.805 INFO  com.zaxxer.hikari.HikariDataSource Line:110 - HikariPool-1 - Starting...
2020-11-23 21:18:57.286 INFO  com.zaxxer.hikari.HikariDataSource Line:123 - HikariPool-1 - Start completed.
2020-11-23 21:18:57.717 INFO  org.hibernate.jpa.internal.util.LogHelper Line:31  - HHH000204: Processing PersistenceUnitInfo [name: default]
2020-11-23 21:18:57.947 INFO  org.hibernate.Version Line:44  - HHH000412: Hibernate ORM core version 5.4.20.Final
2020-11-23 21:18:58.567 INFO  org.hibernate.annotations.common.Version Line:49  - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-11-23 21:18:59.045 INFO  com.netflix.config.sources.URLConfigurationSource Line:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-11-23 21:18:59.065 INFO  com.netflix.config.sources.URLConfigurationSource Line:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-11-23 21:18:59.127 INFO  org.hibernate.dialect.Dialect Line:170 - HHH000400: Using dialect: org.hibernate.dialect.MySQL55Dialect
2020-11-23 21:19:01.619 INFO  org.apache.coyote.http11.Http11NioProtocol Line:173 - Starting ProtocolHandler ["http-nio-8080"]
2020-11-23 21:19:01.735 INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer Line:220 - Tomcat started on port(s): 8080 (http) with context path ''
2020-11-23 21:19:02.500 INFO  org.springframework.data.repository.config.DeferredRepositoryInitializationListener Line:49  - Triggering deferred initialization of Spring Data repositories…
2020-11-23 21:19:02.597 INFO  org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator Line:52  - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-11-23 21:19:02.640 INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean Line:416 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-11-23 21:19:05.355 INFO  org.springframework.data.repository.config.DeferredRepositoryInitializationListener Line:53  - Spring Data repositories initialized!
2020-11-23 21:19:05.378 INFO  geek.me.javaapi.JavaApiApplication Line:61  - Started JavaApiApplication in 19.245 seconds (JVM running for 23.337)
2020-11-23 21:19:47.742 INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Line:173 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-11-23 21:19:47.743 INFO  org.springframework.web.servlet.DispatcherServlet Line:525 - Initializing Servlet 'dispatcherServlet'
2020-11-23 21:19:47.788 INFO  org.springframework.web.servlet.DispatcherServlet Line:547 - Completed initialization in 44 ms
2020-11-23 21:19:48.949 INFO  jdbc.sqltiming Line:373 - select bookchecke0_.item_id as item_id1_2_, bookchecke0_.fsid as fsid2_2_, bookchecke0_.got 
as got3_2_, bookchecke0_.name as name4_2_, bookchecke0_.parse_fail as parse_fa5_2_, bookchecke0_.parsed 
as parsed6_2_, bookchecke0_.path as path7_2_, bookchecke0_.title as title8_2_, bookchecke0_.vid 
as vid9_2_ from book_check bookchecke0_ where bookchecke0_.got=0 limit 20 
 {executed in 4 msec}
2020-11-23 21:19:49.046 INFO  jdbc.resultsettable Line:610 - 
|--------|-----------------|----|------------|-----------|-------|-----------------------------------------------------------------|--------------------------------|----|
|item_id |fsid             |got |name        |parse_fail |parsed |path                                                             |title                           |vid |
|--------|-----------------|----|------------|-----------|-------|-----------------------------------------------------------------|--------------------------------|----|
|553     |776264130211843  |0   |net_content |           |0      |102-现代C++实战30讲/05丨未来篇 (3讲)/29丨Ranges：无迭代器的迭代和更方便的组合.html         |29丨Ranges：无迭代器的迭代和更方便的组合        |553 |
|554     |901563966624350  |0   |net_content |           |0      |102-现代C++实战30讲/05丨未来篇 (3讲)/30丨Coroutines：协作式的交叉调度执行.html         |30丨Coroutines：协作式的交叉调度执行        |554 |
|555     |503687233870410  |0   |net_content |           |0      |102-现代C++实战30讲/06丨加餐 (1讲)/加餐丨部分课后思考题答案合集.html                    |加餐丨部分课后思考题答案合集                  |555 |
|556     |719662679018295  |0   |net_content |           |0      |102-现代C++实战30讲/07丨结束语 (1讲)/结束语丨终点已达，行程还要继续.html                  |结束语丨终点已达，行程还要继续                 |556 |
|568     |706717272250670  |0   |net_content |           |0      |104-性能工程高手课/00丨开篇词 (1讲)/00丨开篇词丨代码不要眼前的苟且，而要效率的提升和性能的优化.html      |00丨开篇词丨代码不要眼前的苟且，而要效率的提升和性能的优化  |568 |
|569     |674616496192560  |0   |net_content |           |0      |104-性能工程高手课/01丨开篇：认识代码性能和系统容量效率 (3讲)/01丨程序员为什么要关心代码性能？.html      |01丨程序员为什么要关心代码性能？               |569 |
|570     |163185365427098  |0   |net_content |           |0      |104-性能工程高手课/01丨开篇：认识代码性能和系统容量效率 (3讲)/02丨程序员也要关心整个系统和公司成本吗？.html  |02丨程序员也要关心整个系统和公司成本吗？           |570 |
|571     |745874331355291  |0   |net_content |           |0      |104-性能工程高手课/01丨开篇：认识代码性能和系统容量效率 (3讲)/03丨导读：专栏是怎么设计的？需要哪些知识？.html |03丨导读：专栏是怎么设计的？需要哪些知识？          |571 |
|572     |1061896570537305 |0   |net_content |           |0      |104-性能工程高手课/02丨性能定律和数理基础 (5讲)/04丨性能工程三定律：IT业和性能优化工作的“法律法规”.html  |04丨性能工程三定律：IT业和性能优化工作的“法律法规”    |572 |
|573     |953781898957230  |0   |net_content |           |0      |104-性能工程高手课/02丨性能定律和数理基础 (5讲)/05丨概率统计和排队论：做性能工作必须懂的数理基础.html     |05丨概率统计和排队论：做性能工作必须懂的数理基础       |573 |
|574     |10238948519444   |0   |net_content |           |0      |104-性能工程高手课/02丨性能定律和数理基础 (5讲)/06丨性能数据的分析：如何从大量数据中看出想要的信号？.html   |06丨性能数据的分析：如何从大量数据中看出想要的信号？     |574 |
|575     |1125077492768631 |0   |net_content |           |0      |104-性能工程高手课/02丨性能定律和数理基础 (5讲)/07丨性能数据的展示：一图胜千言，说出你的数据故事.html     |07丨性能数据的展示：一图胜千言，说出你的数据故事       |575 |
|576     |977438879222316  |0   |net_content |           |0      |104-性能工程高手课/02丨性能定律和数理基础 (5讲)/08丨经验总结：必须熟记的一组常用性能数字.html         |08丨经验总结：必须熟记的一组常用性能数字           |576 |
|577     |1032851353153498 |0   |net_content |           |0      |104-性能工程高手课/03丨性能测试 (5讲)/09丨性能测试的种类：如何快准狠地抓住一个测试的本质？.html        |09丨性能测试的种类：如何快准狠地抓住一个测试的本质？     |577 |
|578     |336224727929298  |0   |net_content |           |0      |104-性能工程高手课/03丨性能测试 (5讲)/10丨性能测试的规划和步骤：为什么性能测试不容易一蹴而就呢？.html     |10丨性能测试的规划和步骤：为什么性能测试不容易一蹴而就呢？  |578 |
|579     |387444308294595  |0   |net_content |           |0      |104-性能工程高手课/03丨性能测试 (5讲)/11丨性能测试的工具：七大测试场景如何选择高质量的测试工具？.html     |11丨性能测试的工具：七大测试场景如何选择高质量的测试工具？  |579 |
|580     |209458553731100  |0   |net_content |           |0      |104-性能工程高手课/03丨性能测试 (5讲)/12丨九条性能测试的经验和教训：如何保证测试结果可靠且可重复？.html    |12丨九条性能测试的经验和教训：如何保证测试结果可靠且可重复？ |580 |
|581     |250386143805634  |0   |net_content |           |0      |104-性能工程高手课/03丨性能测试 (5讲)/13丨性能测试的工程集成：如何与产品开发和运维业务有机集成？.html     |13丨性能测试的工程集成：如何与产品开发和运维业务有机集成？  |581 |
|582     |966001401118047  |0   |net_content |           |0      |104-性能工程高手课/04丨性能分析 (5讲)/14丨性能分析概述：性能问题归根结底是什么原因？.html           |14丨性能分析概述：性能问题归根结底是什么原因？        |582 |
|583     |773100394316869  |0   |net_content |           |0      |104-性能工程高手课/04丨性能分析 (5讲)/15丨常见的性能问题之CPU篇：如何让CPU的运行不受阻碍？.html     |15丨常见的性能问题之CPU篇：如何让CPU的运行不受阻碍？  |583 |
|--------|-----------------|----|------------|-----------|-------|-----------------------------------------------------------------|--------------------------------|----|

2020-11-23 21:19:49.082 INFO  jdbc.sqltiming Line:373 - select count(bookchecke0_.item_id) as col_0_0_ from book_check bookchecke0_ where bookchecke0_.got=0 
 {executed in 2 msec}
2020-11-23 21:19:49.085 INFO  jdbc.resultsettable Line:610 - 
|---------|
|col_0_0_ |
|---------|
|442      |
|---------|

2020-11-23 21:19:49.110 INFO  jdbc.sqltiming Line:373 - select bookchecke0_.item_id as item_id1_2_, bookchecke0_.fsid as fsid2_2_, bookchecke0_.got 
as got3_2_, bookchecke0_.name as name4_2_, bookchecke0_.parse_fail as parse_fa5_2_, bookchecke0_.parsed 
as parsed6_2_, bookchecke0_.path as path7_2_, bookchecke0_.title as title8_2_, bookchecke0_.vid 
as vid9_2_ from book_check bookchecke0_ where bookchecke0_.fsid='776264130211843' and bookchecke0_.name='net_content' 
 {executed in 1 msec}
2020-11-23 21:19:49.114 INFO  jdbc.resultsettable Line:610 - 
|--------|---------|---------|---------|-----------|---------|---------|---------|---------|
|item_id |fsid     |got      |name     |parse_fail |parsed   |path     |title    |vid      |
|--------|---------|---------|---------|-----------|---------|---------|---------|---------|
|553     |[unread] |[unread] |[unread] |[unread]   |[unread] |[unread] |[unread] |[unread] |
|--------|---------|---------|---------|-----------|---------|---------|---------|---------|

2020-11-23 21:24:56.326 INFO  geek.me.javaapi.JavaApiApplication Line:651 - No active profile set, falling back to default profiles: default
2020-11-23 21:24:58.410 INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate Line:127 - Bootstrapping Spring Data JPA repositories in DEFERRED mode.
2020-11-23 21:24:58.933 INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate Line:187 - Finished Spring Data repository scanning in 489ms. Found 20 JPA repository interfaces.
2020-11-23 21:24:59.666 INFO  org.springframework.cloud.context.scope.GenericScope Line:295 - BeanFactory id=a57235e8-b792-3882-8d3a-8bc20defb1fe
2020-11-23 21:25:01.115 INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer Line:108 - Tomcat initialized with port(s): 8080 (http)
2020-11-23 21:25:01.151 INFO  org.apache.coyote.http11.Http11NioProtocol Line:173 - Initializing ProtocolHandler ["http-nio-8080"]
2020-11-23 21:25:01.154 INFO  org.apache.catalina.core.StandardService Line:173 - Starting service [Tomcat]
2020-11-23 21:25:01.155 INFO  org.apache.catalina.core.StandardEngine Line:173 - Starting Servlet engine: [Apache Tomcat/9.0.37]
2020-11-23 21:25:01.629 INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Line:173 - Initializing Spring embedded WebApplicationContext
2020-11-23 21:25:01.630 INFO  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext Line:285 - Root WebApplicationContext: initialization completed in 5229 ms
2020-11-23 21:25:02.399 INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Line:181 - Initializing ExecutorService 'applicationTaskExecutor'
2020-11-23 21:25:02.440 INFO  com.zaxxer.hikari.HikariDataSource Line:110 - HikariPool-1 - Starting...
2020-11-23 21:25:02.920 INFO  com.zaxxer.hikari.HikariDataSource Line:123 - HikariPool-1 - Start completed.
2020-11-23 21:25:03.324 INFO  org.hibernate.jpa.internal.util.LogHelper Line:31  - HHH000204: Processing PersistenceUnitInfo [name: default]
2020-11-23 21:25:03.546 INFO  org.hibernate.Version Line:44  - HHH000412: Hibernate ORM core version 5.4.20.Final
2020-11-23 21:25:04.169 INFO  org.hibernate.annotations.common.Version Line:49  - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-11-23 21:25:04.649 INFO  com.netflix.config.sources.URLConfigurationSource Line:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-11-23 21:25:04.671 INFO  com.netflix.config.sources.URLConfigurationSource Line:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-11-23 21:25:04.742 INFO  org.hibernate.dialect.Dialect Line:170 - HHH000400: Using dialect: org.hibernate.dialect.MySQL55Dialect
2020-11-23 21:25:07.185 INFO  org.apache.coyote.http11.Http11NioProtocol Line:173 - Starting ProtocolHandler ["http-nio-8080"]
2020-11-23 21:25:07.368 INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer Line:220 - Tomcat started on port(s): 8080 (http) with context path ''
2020-11-23 21:25:08.130 INFO  org.springframework.data.repository.config.DeferredRepositoryInitializationListener Line:49  - Triggering deferred initialization of Spring Data repositories…
2020-11-23 21:25:08.170 INFO  org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator Line:52  - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-11-23 21:25:08.212 INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean Line:416 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-11-23 21:25:10.989 INFO  org.springframework.data.repository.config.DeferredRepositoryInitializationListener Line:53  - Spring Data repositories initialized!
2020-11-23 21:25:11.015 INFO  geek.me.javaapi.JavaApiApplication Line:61  - Started JavaApiApplication in 19.212 seconds (JVM running for 23.625)
2020-11-23 21:25:27.279 INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Line:173 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-11-23 21:25:27.280 INFO  org.springframework.web.servlet.DispatcherServlet Line:525 - Initializing Servlet 'dispatcherServlet'
2020-11-23 21:25:27.320 INFO  org.springframework.web.servlet.DispatcherServlet Line:547 - Completed initialization in 39 ms
2020-11-23 21:25:28.461 INFO  jdbc.sqltiming Line:373 - select bookchecke0_.item_id as item_id1_2_, bookchecke0_.fsid as fsid2_2_, bookchecke0_.got 
as got3_2_, bookchecke0_.name as name4_2_, bookchecke0_.parse_fail as parse_fa5_2_, bookchecke0_.parsed 
as parsed6_2_, bookchecke0_.path as path7_2_, bookchecke0_.title as title8_2_, bookchecke0_.vid 
as vid9_2_ from book_check bookchecke0_ where bookchecke0_.got=0 limit 20 
 {executed in 4 msec}
2020-11-23 21:25:28.554 INFO  jdbc.resultsettable Line:610 - 
|--------|-----------------|----|------------|-----------|-------|-----------------------------------------------------------------|--------------------------------|----|
|item_id |fsid             |got |name        |parse_fail |parsed |path                                                             |title                           |vid |
|--------|-----------------|----|------------|-----------|-------|-----------------------------------------------------------------|--------------------------------|----|
|553     |776264130211843  |0   |net_content |           |0      |102-现代C++实战30讲/05丨未来篇 (3讲)/29丨Ranges：无迭代器的迭代和更方便的组合.html         |29丨Ranges：无迭代器的迭代和更方便的组合        |553 |
|554     |901563966624350  |0   |net_content |           |0      |102-现代C++实战30讲/05丨未来篇 (3讲)/30丨Coroutines：协作式的交叉调度执行.html         |30丨Coroutines：协作式的交叉调度执行        |554 |
|555     |503687233870410  |0   |net_content |           |0      |102-现代C++实战30讲/06丨加餐 (1讲)/加餐丨部分课后思考题答案合集.html                    |加餐丨部分课后思考题答案合集                  |555 |
|556     |719662679018295  |0   |net_content |           |0      |102-现代C++实战30讲/07丨结束语 (1讲)/结束语丨终点已达，行程还要继续.html                  |结束语丨终点已达，行程还要继续                 |556 |
|568     |706717272250670  |0   |net_content |           |0      |104-性能工程高手课/00丨开篇词 (1讲)/00丨开篇词丨代码不要眼前的苟且，而要效率的提升和性能的优化.html      |00丨开篇词丨代码不要眼前的苟且，而要效率的提升和性能的优化  |568 |
|569     |674616496192560  |0   |net_content |           |0      |104-性能工程高手课/01丨开篇：认识代码性能和系统容量效率 (3讲)/01丨程序员为什么要关心代码性能？.html      |01丨程序员为什么要关心代码性能？               |569 |
|570     |163185365427098  |0   |net_content |           |0      |104-性能工程高手课/01丨开篇：认识代码性能和系统容量效率 (3讲)/02丨程序员也要关心整个系统和公司成本吗？.html  |02丨程序员也要关心整个系统和公司成本吗？           |570 |
|571     |745874331355291  |0   |net_content |           |0      |104-性能工程高手课/01丨开篇：认识代码性能和系统容量效率 (3讲)/03丨导读：专栏是怎么设计的？需要哪些知识？.html |03丨导读：专栏是怎么设计的？需要哪些知识？          |571 |
|572     |1061896570537305 |0   |net_content |           |0      |104-性能工程高手课/02丨性能定律和数理基础 (5讲)/04丨性能工程三定律：IT业和性能优化工作的“法律法规”.html  |04丨性能工程三定律：IT业和性能优化工作的“法律法规”    |572 |
|573     |953781898957230  |0   |net_content |           |0      |104-性能工程高手课/02丨性能定律和数理基础 (5讲)/05丨概率统计和排队论：做性能工作必须懂的数理基础.html     |05丨概率统计和排队论：做性能工作必须懂的数理基础       |573 |
|574     |10238948519444   |0   |net_content |           |0      |104-性能工程高手课/02丨性能定律和数理基础 (5讲)/06丨性能数据的分析：如何从大量数据中看出想要的信号？.html   |06丨性能数据的分析：如何从大量数据中看出想要的信号？     |574 |
|575     |1125077492768631 |0   |net_content |           |0      |104-性能工程高手课/02丨性能定律和数理基础 (5讲)/07丨性能数据的展示：一图胜千言，说出你的数据故事.html     |07丨性能数据的展示：一图胜千言，说出你的数据故事       |575 |
|576     |977438879222316  |0   |net_content |           |0      |104-性能工程高手课/02丨性能定律和数理基础 (5讲)/08丨经验总结：必须熟记的一组常用性能数字.html         |08丨经验总结：必须熟记的一组常用性能数字           |576 |
|577     |1032851353153498 |0   |net_content |           |0      |104-性能工程高手课/03丨性能测试 (5讲)/09丨性能测试的种类：如何快准狠地抓住一个测试的本质？.html        |09丨性能测试的种类：如何快准狠地抓住一个测试的本质？     |577 |
|578     |336224727929298  |0   |net_content |           |0      |104-性能工程高手课/03丨性能测试 (5讲)/10丨性能测试的规划和步骤：为什么性能测试不容易一蹴而就呢？.html     |10丨性能测试的规划和步骤：为什么性能测试不容易一蹴而就呢？  |578 |
|579     |387444308294595  |0   |net_content |           |0      |104-性能工程高手课/03丨性能测试 (5讲)/11丨性能测试的工具：七大测试场景如何选择高质量的测试工具？.html     |11丨性能测试的工具：七大测试场景如何选择高质量的测试工具？  |579 |
|580     |209458553731100  |0   |net_content |           |0      |104-性能工程高手课/03丨性能测试 (5讲)/12丨九条性能测试的经验和教训：如何保证测试结果可靠且可重复？.html    |12丨九条性能测试的经验和教训：如何保证测试结果可靠且可重复？ |580 |
|581     |250386143805634  |0   |net_content |           |0      |104-性能工程高手课/03丨性能测试 (5讲)/13丨性能测试的工程集成：如何与产品开发和运维业务有机集成？.html     |13丨性能测试的工程集成：如何与产品开发和运维业务有机集成？  |581 |
|582     |966001401118047  |0   |net_content |           |0      |104-性能工程高手课/04丨性能分析 (5讲)/14丨性能分析概述：性能问题归根结底是什么原因？.html           |14丨性能分析概述：性能问题归根结底是什么原因？        |582 |
|583     |773100394316869  |0   |net_content |           |0      |104-性能工程高手课/04丨性能分析 (5讲)/15丨常见的性能问题之CPU篇：如何让CPU的运行不受阻碍？.html     |15丨常见的性能问题之CPU篇：如何让CPU的运行不受阻碍？  |583 |
|--------|-----------------|----|------------|-----------|-------|-----------------------------------------------------------------|--------------------------------|----|

2020-11-23 21:25:28.590 INFO  jdbc.sqltiming Line:373 - select count(bookchecke0_.item_id) as col_0_0_ from book_check bookchecke0_ where bookchecke0_.got=0 
 {executed in 2 msec}
2020-11-23 21:25:28.593 INFO  jdbc.resultsettable Line:610 - 
|---------|
|col_0_0_ |
|---------|
|442      |
|---------|

2020-11-23 21:25:28.619 INFO  jdbc.sqltiming Line:373 - select bookchecke0_.item_id as item_id1_2_, bookchecke0_.fsid as fsid2_2_, bookchecke0_.got 
as got3_2_, bookchecke0_.name as name4_2_, bookchecke0_.parse_fail as parse_fa5_2_, bookchecke0_.parsed 
as parsed6_2_, bookchecke0_.path as path7_2_, bookchecke0_.title as title8_2_, bookchecke0_.vid 
as vid9_2_ from book_check bookchecke0_ where bookchecke0_.fsid='776264130211843' and bookchecke0_.name='net_content' 
 {executed in 2 msec}
2020-11-23 21:25:28.623 INFO  jdbc.resultsettable Line:610 - 
|--------|---------|---------|---------|-----------|---------|---------|---------|---------|
|item_id |fsid     |got      |name     |parse_fail |parsed   |path     |title    |vid      |
|--------|---------|---------|---------|-----------|---------|---------|---------|---------|
|553     |[unread] |[unread] |[unread] |[unread]   |[unread] |[unread] |[unread] |[unread] |
|--------|---------|---------|---------|-----------|---------|---------|---------|---------|

2020-11-23 21:45:45.918 INFO  geek.me.javaapi.JavaApiApplication Line:651 - No active profile set, falling back to default profiles: default
2020-11-23 21:45:48.043 INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate Line:127 - Bootstrapping Spring Data JPA repositories in DEFERRED mode.
2020-11-23 21:45:48.585 INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate Line:187 - Finished Spring Data repository scanning in 506ms. Found 20 JPA repository interfaces.
2020-11-23 21:45:49.300 INFO  org.springframework.cloud.context.scope.GenericScope Line:295 - BeanFactory id=a57235e8-b792-3882-8d3a-8bc20defb1fe
2020-11-23 21:45:50.877 INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer Line:108 - Tomcat initialized with port(s): 8080 (http)
2020-11-23 21:45:50.919 INFO  org.apache.coyote.http11.Http11NioProtocol Line:173 - Initializing ProtocolHandler ["http-nio-8080"]
2020-11-23 21:45:50.922 INFO  org.apache.catalina.core.StandardService Line:173 - Starting service [Tomcat]
2020-11-23 21:45:50.923 INFO  org.apache.catalina.core.StandardEngine Line:173 - Starting Servlet engine: [Apache Tomcat/9.0.37]
2020-11-23 21:45:51.432 INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Line:173 - Initializing Spring embedded WebApplicationContext
2020-11-23 21:45:51.433 INFO  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext Line:285 - Root WebApplicationContext: initialization completed in 5441 ms
2020-11-23 21:45:52.237 INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Line:181 - Initializing ExecutorService 'applicationTaskExecutor'
2020-11-23 21:45:52.281 INFO  com.zaxxer.hikari.HikariDataSource Line:110 - HikariPool-1 - Starting...
2020-11-23 21:45:52.802 INFO  com.zaxxer.hikari.HikariDataSource Line:123 - HikariPool-1 - Start completed.
2020-11-23 21:45:53.263 INFO  org.hibernate.jpa.internal.util.LogHelper Line:31  - HHH000204: Processing PersistenceUnitInfo [name: default]
2020-11-23 21:45:53.532 INFO  org.hibernate.Version Line:44  - HHH000412: Hibernate ORM core version 5.4.20.Final
2020-11-23 21:45:54.312 INFO  org.hibernate.annotations.common.Version Line:49  - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-11-23 21:45:54.714 INFO  com.netflix.config.sources.URLConfigurationSource Line:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-11-23 21:45:54.734 INFO  com.netflix.config.sources.URLConfigurationSource Line:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-11-23 21:45:54.924 INFO  org.hibernate.dialect.Dialect Line:170 - HHH000400: Using dialect: org.hibernate.dialect.MySQL55Dialect
2020-11-23 21:45:57.464 INFO  org.apache.coyote.http11.Http11NioProtocol Line:173 - Starting ProtocolHandler ["http-nio-8080"]
2020-11-23 21:45:57.583 INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer Line:220 - Tomcat started on port(s): 8080 (http) with context path ''
2020-11-23 21:45:58.435 INFO  org.springframework.data.repository.config.DeferredRepositoryInitializationListener Line:49  - Triggering deferred initialization of Spring Data repositories…
2020-11-23 21:45:58.708 INFO  org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator Line:52  - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-11-23 21:45:58.751 INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean Line:416 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-11-23 21:46:01.653 INFO  org.springframework.data.repository.config.DeferredRepositoryInitializationListener Line:53  - Spring Data repositories initialized!
2020-11-23 21:46:01.681 INFO  geek.me.javaapi.JavaApiApplication Line:61  - Started JavaApiApplication in 20.408 seconds (JVM running for 24.512)
2020-11-23 21:46:08.635 INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Line:173 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-11-23 21:46:08.636 INFO  org.springframework.web.servlet.DispatcherServlet Line:525 - Initializing Servlet 'dispatcherServlet'
2020-11-23 21:46:08.674 INFO  org.springframework.web.servlet.DispatcherServlet Line:547 - Completed initialization in 37 ms
2020-11-23 21:46:09.819 INFO  jdbc.sqltiming Line:373 - select bookchecke0_.item_id as item_id1_2_, bookchecke0_.fsid as fsid2_2_, bookchecke0_.got 
as got3_2_, bookchecke0_.name as name4_2_, bookchecke0_.parse_fail as parse_fa5_2_, bookchecke0_.parsed 
as parsed6_2_, bookchecke0_.path as path7_2_, bookchecke0_.title as title8_2_, bookchecke0_.vid 
as vid9_2_ from book_check bookchecke0_ where bookchecke0_.got=0 limit 20 
 {executed in 7 msec}
2020-11-23 21:46:09.927 INFO  jdbc.resultsettable Line:610 - 
|--------|-----------------|----|------------|-----------|-------|-----------------------------------------------------------------|--------------------------------|----|
|item_id |fsid             |got |name        |parse_fail |parsed |path                                                             |title                           |vid |
|--------|-----------------|----|------------|-----------|-------|-----------------------------------------------------------------|--------------------------------|----|
|553     |776264130211843  |0   |net_content |           |0      |102-现代C++实战30讲/05丨未来篇 (3讲)/29丨Ranges：无迭代器的迭代和更方便的组合.html         |29丨Ranges：无迭代器的迭代和更方便的组合        |553 |
|554     |901563966624350  |0   |net_content |           |0      |102-现代C++实战30讲/05丨未来篇 (3讲)/30丨Coroutines：协作式的交叉调度执行.html         |30丨Coroutines：协作式的交叉调度执行        |554 |
|555     |503687233870410  |0   |net_content |           |0      |102-现代C++实战30讲/06丨加餐 (1讲)/加餐丨部分课后思考题答案合集.html                    |加餐丨部分课后思考题答案合集                  |555 |
|556     |719662679018295  |0   |net_content |           |0      |102-现代C++实战30讲/07丨结束语 (1讲)/结束语丨终点已达，行程还要继续.html                  |结束语丨终点已达，行程还要继续                 |556 |
|568     |706717272250670  |0   |net_content |           |0      |104-性能工程高手课/00丨开篇词 (1讲)/00丨开篇词丨代码不要眼前的苟且，而要效率的提升和性能的优化.html      |00丨开篇词丨代码不要眼前的苟且，而要效率的提升和性能的优化  |568 |
|569     |674616496192560  |0   |net_content |           |0      |104-性能工程高手课/01丨开篇：认识代码性能和系统容量效率 (3讲)/01丨程序员为什么要关心代码性能？.html      |01丨程序员为什么要关心代码性能？               |569 |
|570     |163185365427098  |0   |net_content |           |0      |104-性能工程高手课/01丨开篇：认识代码性能和系统容量效率 (3讲)/02丨程序员也要关心整个系统和公司成本吗？.html  |02丨程序员也要关心整个系统和公司成本吗？           |570 |
|571     |745874331355291  |0   |net_content |           |0      |104-性能工程高手课/01丨开篇：认识代码性能和系统容量效率 (3讲)/03丨导读：专栏是怎么设计的？需要哪些知识？.html |03丨导读：专栏是怎么设计的？需要哪些知识？          |571 |
|572     |1061896570537305 |0   |net_content |           |0      |104-性能工程高手课/02丨性能定律和数理基础 (5讲)/04丨性能工程三定律：IT业和性能优化工作的“法律法规”.html  |04丨性能工程三定律：IT业和性能优化工作的“法律法规”    |572 |
|573     |953781898957230  |0   |net_content |           |0      |104-性能工程高手课/02丨性能定律和数理基础 (5讲)/05丨概率统计和排队论：做性能工作必须懂的数理基础.html     |05丨概率统计和排队论：做性能工作必须懂的数理基础       |573 |
|574     |10238948519444   |0   |net_content |           |0      |104-性能工程高手课/02丨性能定律和数理基础 (5讲)/06丨性能数据的分析：如何从大量数据中看出想要的信号？.html   |06丨性能数据的分析：如何从大量数据中看出想要的信号？     |574 |
|575     |1125077492768631 |0   |net_content |           |0      |104-性能工程高手课/02丨性能定律和数理基础 (5讲)/07丨性能数据的展示：一图胜千言，说出你的数据故事.html     |07丨性能数据的展示：一图胜千言，说出你的数据故事       |575 |
|576     |977438879222316  |0   |net_content |           |0      |104-性能工程高手课/02丨性能定律和数理基础 (5讲)/08丨经验总结：必须熟记的一组常用性能数字.html         |08丨经验总结：必须熟记的一组常用性能数字           |576 |
|577     |1032851353153498 |0   |net_content |           |0      |104-性能工程高手课/03丨性能测试 (5讲)/09丨性能测试的种类：如何快准狠地抓住一个测试的本质？.html        |09丨性能测试的种类：如何快准狠地抓住一个测试的本质？     |577 |
|578     |336224727929298  |0   |net_content |           |0      |104-性能工程高手课/03丨性能测试 (5讲)/10丨性能测试的规划和步骤：为什么性能测试不容易一蹴而就呢？.html     |10丨性能测试的规划和步骤：为什么性能测试不容易一蹴而就呢？  |578 |
|579     |387444308294595  |0   |net_content |           |0      |104-性能工程高手课/03丨性能测试 (5讲)/11丨性能测试的工具：七大测试场景如何选择高质量的测试工具？.html     |11丨性能测试的工具：七大测试场景如何选择高质量的测试工具？  |579 |
|580     |209458553731100  |0   |net_content |           |0      |104-性能工程高手课/03丨性能测试 (5讲)/12丨九条性能测试的经验和教训：如何保证测试结果可靠且可重复？.html    |12丨九条性能测试的经验和教训：如何保证测试结果可靠且可重复？ |580 |
|581     |250386143805634  |0   |net_content |           |0      |104-性能工程高手课/03丨性能测试 (5讲)/13丨性能测试的工程集成：如何与产品开发和运维业务有机集成？.html     |13丨性能测试的工程集成：如何与产品开发和运维业务有机集成？  |581 |
|582     |966001401118047  |0   |net_content |           |0      |104-性能工程高手课/04丨性能分析 (5讲)/14丨性能分析概述：性能问题归根结底是什么原因？.html           |14丨性能分析概述：性能问题归根结底是什么原因？        |582 |
|583     |773100394316869  |0   |net_content |           |0      |104-性能工程高手课/04丨性能分析 (5讲)/15丨常见的性能问题之CPU篇：如何让CPU的运行不受阻碍？.html     |15丨常见的性能问题之CPU篇：如何让CPU的运行不受阻碍？  |583 |
|--------|-----------------|----|------------|-----------|-------|-----------------------------------------------------------------|--------------------------------|----|

2020-11-23 21:46:09.966 INFO  jdbc.sqltiming Line:373 - select count(bookchecke0_.item_id) as col_0_0_ from book_check bookchecke0_ where bookchecke0_.got=0 
 {executed in 5 msec}
2020-11-23 21:46:09.968 INFO  jdbc.resultsettable Line:610 - 
|---------|
|col_0_0_ |
|---------|
|442      |
|---------|

2020-11-23 21:46:09.995 INFO  jdbc.sqltiming Line:373 - select bookchecke0_.item_id as item_id1_2_, bookchecke0_.fsid as fsid2_2_, bookchecke0_.got 
as got3_2_, bookchecke0_.name as name4_2_, bookchecke0_.parse_fail as parse_fa5_2_, bookchecke0_.parsed 
as parsed6_2_, bookchecke0_.path as path7_2_, bookchecke0_.title as title8_2_, bookchecke0_.vid 
as vid9_2_ from book_check bookchecke0_ where bookchecke0_.fsid='776264130211843' and bookchecke0_.name='net_content' 
 {executed in 2 msec}
2020-11-23 21:46:09.999 INFO  jdbc.resultsettable Line:610 - 
|--------|---------|---------|---------|-----------|---------|---------|---------|---------|
|item_id |fsid     |got      |name     |parse_fail |parsed   |path     |title    |vid      |
|--------|---------|---------|---------|-----------|---------|---------|---------|---------|
|553     |[unread] |[unread] |[unread] |[unread]   |[unread] |[unread] |[unread] |[unread] |
|--------|---------|---------|---------|-----------|---------|---------|---------|---------|

2020-11-23 21:47:53.608 INFO  geek.me.javaapi.JavaApiApplication Line:651 - No active profile set, falling back to default profiles: default
2020-11-23 21:47:55.694 INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate Line:127 - Bootstrapping Spring Data JPA repositories in DEFERRED mode.
2020-11-23 21:47:56.229 INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate Line:187 - Finished Spring Data repository scanning in 498ms. Found 20 JPA repository interfaces.
2020-11-23 21:47:56.976 INFO  org.springframework.cloud.context.scope.GenericScope Line:295 - BeanFactory id=a57235e8-b792-3882-8d3a-8bc20defb1fe
2020-11-23 21:47:58.456 INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer Line:108 - Tomcat initialized with port(s): 8080 (http)
2020-11-23 21:47:58.493 INFO  org.apache.coyote.http11.Http11NioProtocol Line:173 - Initializing ProtocolHandler ["http-nio-8080"]
2020-11-23 21:47:58.496 INFO  org.apache.catalina.core.StandardService Line:173 - Starting service [Tomcat]
2020-11-23 21:47:58.497 INFO  org.apache.catalina.core.StandardEngine Line:173 - Starting Servlet engine: [Apache Tomcat/9.0.37]
2020-11-23 21:47:58.964 INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Line:173 - Initializing Spring embedded WebApplicationContext
2020-11-23 21:47:58.965 INFO  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext Line:285 - Root WebApplicationContext: initialization completed in 5279 ms
2020-11-23 21:47:59.740 INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Line:181 - Initializing ExecutorService 'applicationTaskExecutor'
2020-11-23 21:47:59.785 INFO  com.zaxxer.hikari.HikariDataSource Line:110 - HikariPool-1 - Starting...
2020-11-23 21:48:00.261 INFO  com.zaxxer.hikari.HikariDataSource Line:123 - HikariPool-1 - Start completed.
2020-11-23 21:48:00.669 INFO  org.hibernate.jpa.internal.util.LogHelper Line:31  - HHH000204: Processing PersistenceUnitInfo [name: default]
2020-11-23 21:48:00.894 INFO  org.hibernate.Version Line:44  - HHH000412: Hibernate ORM core version 5.4.20.Final
2020-11-23 21:48:01.521 INFO  org.hibernate.annotations.common.Version Line:49  - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-11-23 21:48:02.037 INFO  com.netflix.config.sources.URLConfigurationSource Line:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-11-23 21:48:02.056 INFO  com.netflix.config.sources.URLConfigurationSource Line:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-11-23 21:48:02.102 INFO  org.hibernate.dialect.Dialect Line:170 - HHH000400: Using dialect: org.hibernate.dialect.MySQL55Dialect
2020-11-23 21:48:04.611 INFO  org.apache.coyote.http11.Http11NioProtocol Line:173 - Starting ProtocolHandler ["http-nio-8080"]
2020-11-23 21:48:04.732 INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer Line:220 - Tomcat started on port(s): 8080 (http) with context path ''
2020-11-23 21:48:05.518 INFO  org.springframework.data.repository.config.DeferredRepositoryInitializationListener Line:49  - Triggering deferred initialization of Spring Data repositories…
2020-11-23 21:48:05.572 INFO  org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator Line:52  - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-11-23 21:48:05.621 INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean Line:416 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-11-23 21:48:08.428 INFO  org.springframework.data.repository.config.DeferredRepositoryInitializationListener Line:53  - Spring Data repositories initialized!
2020-11-23 21:48:08.451 INFO  geek.me.javaapi.JavaApiApplication Line:61  - Started JavaApiApplication in 19.395 seconds (JVM running for 25.074)
2020-11-23 21:48:57.889 INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Line:173 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-11-23 21:48:57.891 INFO  org.springframework.web.servlet.DispatcherServlet Line:525 - Initializing Servlet 'dispatcherServlet'
2020-11-23 21:48:57.926 INFO  org.springframework.web.servlet.DispatcherServlet Line:547 - Completed initialization in 34 ms
2020-11-23 21:48:58.994 INFO  jdbc.sqltiming Line:373 - select bookchecke0_.item_id as item_id1_2_, bookchecke0_.fsid as fsid2_2_, bookchecke0_.got 
as got3_2_, bookchecke0_.name as name4_2_, bookchecke0_.parse_fail as parse_fa5_2_, bookchecke0_.parsed 
as parsed6_2_, bookchecke0_.path as path7_2_, bookchecke0_.title as title8_2_, bookchecke0_.vid 
as vid9_2_ from book_check bookchecke0_ where bookchecke0_.got=0 limit 20 
 {executed in 4 msec}
2020-11-23 21:48:59.088 INFO  jdbc.resultsettable Line:610 - 
|--------|-----------------|----|------------|-----------|-------|-----------------------------------------------------------------|--------------------------------|----|
|item_id |fsid             |got |name        |parse_fail |parsed |path                                                             |title                           |vid |
|--------|-----------------|----|------------|-----------|-------|-----------------------------------------------------------------|--------------------------------|----|
|553     |776264130211843  |0   |net_content |           |0      |102-现代C++实战30讲/05丨未来篇 (3讲)/29丨Ranges：无迭代器的迭代和更方便的组合.html         |29丨Ranges：无迭代器的迭代和更方便的组合        |553 |
|554     |901563966624350  |0   |net_content |           |0      |102-现代C++实战30讲/05丨未来篇 (3讲)/30丨Coroutines：协作式的交叉调度执行.html         |30丨Coroutines：协作式的交叉调度执行        |554 |
|555     |503687233870410  |0   |net_content |           |0      |102-现代C++实战30讲/06丨加餐 (1讲)/加餐丨部分课后思考题答案合集.html                    |加餐丨部分课后思考题答案合集                  |555 |
|556     |719662679018295  |0   |net_content |           |0      |102-现代C++实战30讲/07丨结束语 (1讲)/结束语丨终点已达，行程还要继续.html                  |结束语丨终点已达，行程还要继续                 |556 |
|568     |706717272250670  |0   |net_content |           |0      |104-性能工程高手课/00丨开篇词 (1讲)/00丨开篇词丨代码不要眼前的苟且，而要效率的提升和性能的优化.html      |00丨开篇词丨代码不要眼前的苟且，而要效率的提升和性能的优化  |568 |
|569     |674616496192560  |0   |net_content |           |0      |104-性能工程高手课/01丨开篇：认识代码性能和系统容量效率 (3讲)/01丨程序员为什么要关心代码性能？.html      |01丨程序员为什么要关心代码性能？               |569 |
|570     |163185365427098  |0   |net_content |           |0      |104-性能工程高手课/01丨开篇：认识代码性能和系统容量效率 (3讲)/02丨程序员也要关心整个系统和公司成本吗？.html  |02丨程序员也要关心整个系统和公司成本吗？           |570 |
|571     |745874331355291  |0   |net_content |           |0      |104-性能工程高手课/01丨开篇：认识代码性能和系统容量效率 (3讲)/03丨导读：专栏是怎么设计的？需要哪些知识？.html |03丨导读：专栏是怎么设计的？需要哪些知识？          |571 |
|572     |1061896570537305 |0   |net_content |           |0      |104-性能工程高手课/02丨性能定律和数理基础 (5讲)/04丨性能工程三定律：IT业和性能优化工作的“法律法规”.html  |04丨性能工程三定律：IT业和性能优化工作的“法律法规”    |572 |
|573     |953781898957230  |0   |net_content |           |0      |104-性能工程高手课/02丨性能定律和数理基础 (5讲)/05丨概率统计和排队论：做性能工作必须懂的数理基础.html     |05丨概率统计和排队论：做性能工作必须懂的数理基础       |573 |
|574     |10238948519444   |0   |net_content |           |0      |104-性能工程高手课/02丨性能定律和数理基础 (5讲)/06丨性能数据的分析：如何从大量数据中看出想要的信号？.html   |06丨性能数据的分析：如何从大量数据中看出想要的信号？     |574 |
|575     |1125077492768631 |0   |net_content |           |0      |104-性能工程高手课/02丨性能定律和数理基础 (5讲)/07丨性能数据的展示：一图胜千言，说出你的数据故事.html     |07丨性能数据的展示：一图胜千言，说出你的数据故事       |575 |
|576     |977438879222316  |0   |net_content |           |0      |104-性能工程高手课/02丨性能定律和数理基础 (5讲)/08丨经验总结：必须熟记的一组常用性能数字.html         |08丨经验总结：必须熟记的一组常用性能数字           |576 |
|577     |1032851353153498 |0   |net_content |           |0      |104-性能工程高手课/03丨性能测试 (5讲)/09丨性能测试的种类：如何快准狠地抓住一个测试的本质？.html        |09丨性能测试的种类：如何快准狠地抓住一个测试的本质？     |577 |
|578     |336224727929298  |0   |net_content |           |0      |104-性能工程高手课/03丨性能测试 (5讲)/10丨性能测试的规划和步骤：为什么性能测试不容易一蹴而就呢？.html     |10丨性能测试的规划和步骤：为什么性能测试不容易一蹴而就呢？  |578 |
|579     |387444308294595  |0   |net_content |           |0      |104-性能工程高手课/03丨性能测试 (5讲)/11丨性能测试的工具：七大测试场景如何选择高质量的测试工具？.html     |11丨性能测试的工具：七大测试场景如何选择高质量的测试工具？  |579 |
|580     |209458553731100  |0   |net_content |           |0      |104-性能工程高手课/03丨性能测试 (5讲)/12丨九条性能测试的经验和教训：如何保证测试结果可靠且可重复？.html    |12丨九条性能测试的经验和教训：如何保证测试结果可靠且可重复？ |580 |
|581     |250386143805634  |0   |net_content |           |0      |104-性能工程高手课/03丨性能测试 (5讲)/13丨性能测试的工程集成：如何与产品开发和运维业务有机集成？.html     |13丨性能测试的工程集成：如何与产品开发和运维业务有机集成？  |581 |
|582     |966001401118047  |0   |net_content |           |0      |104-性能工程高手课/04丨性能分析 (5讲)/14丨性能分析概述：性能问题归根结底是什么原因？.html           |14丨性能分析概述：性能问题归根结底是什么原因？        |582 |
|583     |773100394316869  |0   |net_content |           |0      |104-性能工程高手课/04丨性能分析 (5讲)/15丨常见的性能问题之CPU篇：如何让CPU的运行不受阻碍？.html     |15丨常见的性能问题之CPU篇：如何让CPU的运行不受阻碍？  |583 |
|--------|-----------------|----|------------|-----------|-------|-----------------------------------------------------------------|--------------------------------|----|

2020-11-23 21:48:59.125 INFO  jdbc.sqltiming Line:373 - select count(bookchecke0_.item_id) as col_0_0_ from book_check bookchecke0_ where bookchecke0_.got=0 
 {executed in 2 msec}
2020-11-23 21:48:59.128 INFO  jdbc.resultsettable Line:610 - 
|---------|
|col_0_0_ |
|---------|
|442      |
|---------|

2020-11-23 21:48:59.154 INFO  jdbc.sqltiming Line:373 - select bookchecke0_.item_id as item_id1_2_, bookchecke0_.fsid as fsid2_2_, bookchecke0_.got 
as got3_2_, bookchecke0_.name as name4_2_, bookchecke0_.parse_fail as parse_fa5_2_, bookchecke0_.parsed 
as parsed6_2_, bookchecke0_.path as path7_2_, bookchecke0_.title as title8_2_, bookchecke0_.vid 
as vid9_2_ from book_check bookchecke0_ where bookchecke0_.fsid='776264130211843' and bookchecke0_.name='net_content' 
 {executed in 2 msec}
2020-11-23 21:48:59.159 INFO  jdbc.resultsettable Line:610 - 
|--------|---------|---------|---------|-----------|---------|---------|---------|---------|
|item_id |fsid     |got      |name     |parse_fail |parsed   |path     |title    |vid      |
|--------|---------|---------|---------|-----------|---------|---------|---------|---------|
|553     |[unread] |[unread] |[unread] |[unread]   |[unread] |[unread] |[unread] |[unread] |
|--------|---------|---------|---------|-----------|---------|---------|---------|---------|

2020-11-23 21:49:37.597 INFO  geek.me.javaapi.JavaApiApplication Line:651 - No active profile set, falling back to default profiles: default
2020-11-23 21:49:39.680 INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate Line:127 - Bootstrapping Spring Data JPA repositories in DEFERRED mode.
2020-11-23 21:49:40.203 INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate Line:187 - Finished Spring Data repository scanning in 488ms. Found 20 JPA repository interfaces.
2020-11-23 21:49:40.961 INFO  org.springframework.cloud.context.scope.GenericScope Line:295 - BeanFactory id=a57235e8-b792-3882-8d3a-8bc20defb1fe
2020-11-23 21:49:42.424 INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer Line:108 - Tomcat initialized with port(s): 8080 (http)
2020-11-23 21:49:42.459 INFO  org.apache.coyote.http11.Http11NioProtocol Line:173 - Initializing ProtocolHandler ["http-nio-8080"]
2020-11-23 21:49:42.462 INFO  org.apache.catalina.core.StandardService Line:173 - Starting service [Tomcat]
2020-11-23 21:49:42.463 INFO  org.apache.catalina.core.StandardEngine Line:173 - Starting Servlet engine: [Apache Tomcat/9.0.37]
2020-11-23 21:49:42.937 INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Line:173 - Initializing Spring embedded WebApplicationContext
2020-11-23 21:49:42.939 INFO  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext Line:285 - Root WebApplicationContext: initialization completed in 5255 ms
2020-11-23 21:49:43.708 INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Line:181 - Initializing ExecutorService 'applicationTaskExecutor'
2020-11-23 21:49:43.749 INFO  com.zaxxer.hikari.HikariDataSource Line:110 - HikariPool-1 - Starting...
2020-11-23 21:49:44.233 INFO  com.zaxxer.hikari.HikariDataSource Line:123 - HikariPool-1 - Start completed.
2020-11-23 21:49:44.694 INFO  org.hibernate.jpa.internal.util.LogHelper Line:31  - HHH000204: Processing PersistenceUnitInfo [name: default]
2020-11-23 21:49:44.916 INFO  org.hibernate.Version Line:44  - HHH000412: Hibernate ORM core version 5.4.20.Final
2020-11-23 21:49:45.548 INFO  org.hibernate.annotations.common.Version Line:49  - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-11-23 21:49:46.019 INFO  com.netflix.config.sources.URLConfigurationSource Line:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-11-23 21:49:46.041 INFO  com.netflix.config.sources.URLConfigurationSource Line:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-11-23 21:49:46.115 INFO  org.hibernate.dialect.Dialect Line:170 - HHH000400: Using dialect: org.hibernate.dialect.MySQL55Dialect
2020-11-23 21:49:48.560 INFO  org.apache.coyote.http11.Http11NioProtocol Line:173 - Starting ProtocolHandler ["http-nio-8080"]
2020-11-23 21:49:48.693 INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer Line:220 - Tomcat started on port(s): 8080 (http) with context path ''
2020-11-23 21:49:49.469 INFO  org.springframework.data.repository.config.DeferredRepositoryInitializationListener Line:49  - Triggering deferred initialization of Spring Data repositories…
2020-11-23 21:49:49.588 INFO  org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator Line:52  - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-11-23 21:49:49.634 INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean Line:416 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-11-23 21:49:52.362 INFO  org.springframework.data.repository.config.DeferredRepositoryInitializationListener Line:53  - Spring Data repositories initialized!
2020-11-23 21:49:52.386 INFO  geek.me.javaapi.JavaApiApplication Line:61  - Started JavaApiApplication in 19.815 seconds (JVM running for 24.09)
2020-11-23 21:49:56.805 INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Line:173 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-11-23 21:49:56.807 INFO  org.springframework.web.servlet.DispatcherServlet Line:525 - Initializing Servlet 'dispatcherServlet'
2020-11-23 21:49:56.849 INFO  org.springframework.web.servlet.DispatcherServlet Line:547 - Completed initialization in 41 ms
2020-11-23 21:49:57.961 INFO  jdbc.sqltiming Line:373 - select bookchecke0_.item_id as item_id1_2_, bookchecke0_.fsid as fsid2_2_, bookchecke0_.got 
as got3_2_, bookchecke0_.name as name4_2_, bookchecke0_.parse_fail as parse_fa5_2_, bookchecke0_.parsed 
as parsed6_2_, bookchecke0_.path as path7_2_, bookchecke0_.title as title8_2_, bookchecke0_.vid 
as vid9_2_ from book_check bookchecke0_ where bookchecke0_.got=0 limit 20 
 {executed in 4 msec}
2020-11-23 21:49:58.053 INFO  jdbc.resultsettable Line:610 - 
|--------|-----------------|----|------------|-----------|-------|-----------------------------------------------------------------|--------------------------------|----|
|item_id |fsid             |got |name        |parse_fail |parsed |path                                                             |title                           |vid |
|--------|-----------------|----|------------|-----------|-------|-----------------------------------------------------------------|--------------------------------|----|
|553     |776264130211843  |0   |net_content |           |0      |102-现代C++实战30讲/05丨未来篇 (3讲)/29丨Ranges：无迭代器的迭代和更方便的组合.html         |29丨Ranges：无迭代器的迭代和更方便的组合        |553 |
|554     |901563966624350  |0   |net_content |           |0      |102-现代C++实战30讲/05丨未来篇 (3讲)/30丨Coroutines：协作式的交叉调度执行.html         |30丨Coroutines：协作式的交叉调度执行        |554 |
|555     |503687233870410  |0   |net_content |           |0      |102-现代C++实战30讲/06丨加餐 (1讲)/加餐丨部分课后思考题答案合集.html                    |加餐丨部分课后思考题答案合集                  |555 |
|556     |719662679018295  |0   |net_content |           |0      |102-现代C++实战30讲/07丨结束语 (1讲)/结束语丨终点已达，行程还要继续.html                  |结束语丨终点已达，行程还要继续                 |556 |
|568     |706717272250670  |0   |net_content |           |0      |104-性能工程高手课/00丨开篇词 (1讲)/00丨开篇词丨代码不要眼前的苟且，而要效率的提升和性能的优化.html      |00丨开篇词丨代码不要眼前的苟且，而要效率的提升和性能的优化  |568 |
|569     |674616496192560  |0   |net_content |           |0      |104-性能工程高手课/01丨开篇：认识代码性能和系统容量效率 (3讲)/01丨程序员为什么要关心代码性能？.html      |01丨程序员为什么要关心代码性能？               |569 |
|570     |163185365427098  |0   |net_content |           |0      |104-性能工程高手课/01丨开篇：认识代码性能和系统容量效率 (3讲)/02丨程序员也要关心整个系统和公司成本吗？.html  |02丨程序员也要关心整个系统和公司成本吗？           |570 |
|571     |745874331355291  |0   |net_content |           |0      |104-性能工程高手课/01丨开篇：认识代码性能和系统容量效率 (3讲)/03丨导读：专栏是怎么设计的？需要哪些知识？.html |03丨导读：专栏是怎么设计的？需要哪些知识？          |571 |
|572     |1061896570537305 |0   |net_content |           |0      |104-性能工程高手课/02丨性能定律和数理基础 (5讲)/04丨性能工程三定律：IT业和性能优化工作的“法律法规”.html  |04丨性能工程三定律：IT业和性能优化工作的“法律法规”    |572 |
|573     |953781898957230  |0   |net_content |           |0      |104-性能工程高手课/02丨性能定律和数理基础 (5讲)/05丨概率统计和排队论：做性能工作必须懂的数理基础.html     |05丨概率统计和排队论：做性能工作必须懂的数理基础       |573 |
|574     |10238948519444   |0   |net_content |           |0      |104-性能工程高手课/02丨性能定律和数理基础 (5讲)/06丨性能数据的分析：如何从大量数据中看出想要的信号？.html   |06丨性能数据的分析：如何从大量数据中看出想要的信号？     |574 |
|575     |1125077492768631 |0   |net_content |           |0      |104-性能工程高手课/02丨性能定律和数理基础 (5讲)/07丨性能数据的展示：一图胜千言，说出你的数据故事.html     |07丨性能数据的展示：一图胜千言，说出你的数据故事       |575 |
|576     |977438879222316  |0   |net_content |           |0      |104-性能工程高手课/02丨性能定律和数理基础 (5讲)/08丨经验总结：必须熟记的一组常用性能数字.html         |08丨经验总结：必须熟记的一组常用性能数字           |576 |
|577     |1032851353153498 |0   |net_content |           |0      |104-性能工程高手课/03丨性能测试 (5讲)/09丨性能测试的种类：如何快准狠地抓住一个测试的本质？.html        |09丨性能测试的种类：如何快准狠地抓住一个测试的本质？     |577 |
|578     |336224727929298  |0   |net_content |           |0      |104-性能工程高手课/03丨性能测试 (5讲)/10丨性能测试的规划和步骤：为什么性能测试不容易一蹴而就呢？.html     |10丨性能测试的规划和步骤：为什么性能测试不容易一蹴而就呢？  |578 |
|579     |387444308294595  |0   |net_content |           |0      |104-性能工程高手课/03丨性能测试 (5讲)/11丨性能测试的工具：七大测试场景如何选择高质量的测试工具？.html     |11丨性能测试的工具：七大测试场景如何选择高质量的测试工具？  |579 |
|580     |209458553731100  |0   |net_content |           |0      |104-性能工程高手课/03丨性能测试 (5讲)/12丨九条性能测试的经验和教训：如何保证测试结果可靠且可重复？.html    |12丨九条性能测试的经验和教训：如何保证测试结果可靠且可重复？ |580 |
|581     |250386143805634  |0   |net_content |           |0      |104-性能工程高手课/03丨性能测试 (5讲)/13丨性能测试的工程集成：如何与产品开发和运维业务有机集成？.html     |13丨性能测试的工程集成：如何与产品开发和运维业务有机集成？  |581 |
|582     |966001401118047  |0   |net_content |           |0      |104-性能工程高手课/04丨性能分析 (5讲)/14丨性能分析概述：性能问题归根结底是什么原因？.html           |14丨性能分析概述：性能问题归根结底是什么原因？        |582 |
|583     |773100394316869  |0   |net_content |           |0      |104-性能工程高手课/04丨性能分析 (5讲)/15丨常见的性能问题之CPU篇：如何让CPU的运行不受阻碍？.html     |15丨常见的性能问题之CPU篇：如何让CPU的运行不受阻碍？  |583 |
|--------|-----------------|----|------------|-----------|-------|-----------------------------------------------------------------|--------------------------------|----|

2020-11-23 21:49:58.088 INFO  jdbc.sqltiming Line:373 - select count(bookchecke0_.item_id) as col_0_0_ from book_check bookchecke0_ where bookchecke0_.got=0 
 {executed in 3 msec}
2020-11-23 21:49:58.091 INFO  jdbc.resultsettable Line:610 - 
|---------|
|col_0_0_ |
|---------|
|442      |
|---------|

2020-11-23 21:49:58.117 INFO  jdbc.sqltiming Line:373 - select bookchecke0_.item_id as item_id1_2_, bookchecke0_.fsid as fsid2_2_, bookchecke0_.got 
as got3_2_, bookchecke0_.name as name4_2_, bookchecke0_.parse_fail as parse_fa5_2_, bookchecke0_.parsed 
as parsed6_2_, bookchecke0_.path as path7_2_, bookchecke0_.title as title8_2_, bookchecke0_.vid 
as vid9_2_ from book_check bookchecke0_ where bookchecke0_.fsid='776264130211843' and bookchecke0_.name='net_content' 
 {executed in 2 msec}
2020-11-23 21:49:58.120 INFO  jdbc.resultsettable Line:610 - 
|--------|---------|---------|---------|-----------|---------|---------|---------|---------|
|item_id |fsid     |got      |name     |parse_fail |parsed   |path     |title    |vid      |
|--------|---------|---------|---------|-----------|---------|---------|---------|---------|
|553     |[unread] |[unread] |[unread] |[unread]   |[unread] |[unread] |[unread] |[unread] |
|--------|---------|---------|---------|-----------|---------|---------|---------|---------|

2020-11-23 21:51:23.624 INFO  geek.me.javaapi.JavaApiApplication Line:651 - No active profile set, falling back to default profiles: default
2020-11-23 21:51:25.776 INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate Line:127 - Bootstrapping Spring Data JPA repositories in DEFERRED mode.
2020-11-23 21:51:26.293 INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate Line:187 - Finished Spring Data repository scanning in 478ms. Found 20 JPA repository interfaces.
2020-11-23 21:51:27.052 INFO  org.springframework.cloud.context.scope.GenericScope Line:295 - BeanFactory id=a57235e8-b792-3882-8d3a-8bc20defb1fe
2020-11-23 21:51:28.560 INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer Line:108 - Tomcat initialized with port(s): 8080 (http)
2020-11-23 21:51:28.597 INFO  org.apache.coyote.http11.Http11NioProtocol Line:173 - Initializing ProtocolHandler ["http-nio-8080"]
2020-11-23 21:51:28.600 INFO  org.apache.catalina.core.StandardService Line:173 - Starting service [Tomcat]
2020-11-23 21:51:28.601 INFO  org.apache.catalina.core.StandardEngine Line:173 - Starting Servlet engine: [Apache Tomcat/9.0.37]
2020-11-23 21:51:29.072 INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Line:173 - Initializing Spring embedded WebApplicationContext
2020-11-23 21:51:29.073 INFO  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext Line:285 - Root WebApplicationContext: initialization completed in 5349 ms
2020-11-23 21:51:29.922 INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Line:181 - Initializing ExecutorService 'applicationTaskExecutor'
2020-11-23 21:51:29.963 INFO  com.zaxxer.hikari.HikariDataSource Line:110 - HikariPool-1 - Starting...
2020-11-23 21:51:30.444 INFO  com.zaxxer.hikari.HikariDataSource Line:123 - HikariPool-1 - Start completed.
2020-11-23 21:51:30.871 INFO  org.hibernate.jpa.internal.util.LogHelper Line:31  - HHH000204: Processing PersistenceUnitInfo [name: default]
2020-11-23 21:51:31.088 INFO  org.hibernate.Version Line:44  - HHH000412: Hibernate ORM core version 5.4.20.Final
2020-11-23 21:51:31.834 INFO  org.hibernate.annotations.common.Version Line:49  - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-11-23 21:51:32.280 INFO  com.netflix.config.sources.URLConfigurationSource Line:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-11-23 21:51:32.301 INFO  com.netflix.config.sources.URLConfigurationSource Line:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-11-23 21:51:32.389 INFO  org.hibernate.dialect.Dialect Line:170 - HHH000400: Using dialect: org.hibernate.dialect.MySQL55Dialect
2020-11-23 21:51:34.884 INFO  org.apache.coyote.http11.Http11NioProtocol Line:173 - Starting ProtocolHandler ["http-nio-8080"]
2020-11-23 21:51:35.001 INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer Line:220 - Tomcat started on port(s): 8080 (http) with context path ''
2020-11-23 21:51:35.649 INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Line:173 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-11-23 21:51:35.650 INFO  org.springframework.web.servlet.DispatcherServlet Line:525 - Initializing Servlet 'dispatcherServlet'
2020-11-23 21:51:35.687 INFO  org.springframework.web.servlet.DispatcherServlet Line:547 - Completed initialization in 36 ms
2020-11-23 21:51:35.929 INFO  org.springframework.data.repository.config.DeferredRepositoryInitializationListener Line:49  - Triggering deferred initialization of Spring Data repositories…
2020-11-23 21:51:36.091 INFO  org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator Line:52  - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-11-23 21:51:36.132 INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean Line:416 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-11-23 21:51:38.814 INFO  org.springframework.data.repository.config.DeferredRepositoryInitializationListener Line:53  - Spring Data repositories initialized!
2020-11-23 21:51:38.839 INFO  geek.me.javaapi.JavaApiApplication Line:61  - Started JavaApiApplication in 20.791 seconds (JVM running for 25.584)
2020-11-23 21:51:48.068 INFO  jdbc.sqltiming Line:373 - select bookchecke0_.item_id as item_id1_2_, bookchecke0_.fsid as fsid2_2_, bookchecke0_.got 
as got3_2_, bookchecke0_.name as name4_2_, bookchecke0_.parse_fail as parse_fa5_2_, bookchecke0_.parsed 
as parsed6_2_, bookchecke0_.path as path7_2_, bookchecke0_.title as title8_2_, bookchecke0_.vid 
as vid9_2_ from book_check bookchecke0_ where bookchecke0_.got=0 limit 20 
 {executed in 7 msec}
2020-11-23 21:51:48.174 INFO  jdbc.resultsettable Line:610 - 
|--------|-----------------|----|------------|-----------|-------|-----------------------------------------------------------------|--------------------------------|----|
|item_id |fsid             |got |name        |parse_fail |parsed |path                                                             |title                           |vid |
|--------|-----------------|----|------------|-----------|-------|-----------------------------------------------------------------|--------------------------------|----|
|553     |776264130211843  |0   |net_content |           |0      |102-现代C++实战30讲/05丨未来篇 (3讲)/29丨Ranges：无迭代器的迭代和更方便的组合.html         |29丨Ranges：无迭代器的迭代和更方便的组合        |553 |
|554     |901563966624350  |0   |net_content |           |0      |102-现代C++实战30讲/05丨未来篇 (3讲)/30丨Coroutines：协作式的交叉调度执行.html         |30丨Coroutines：协作式的交叉调度执行        |554 |
|555     |503687233870410  |0   |net_content |           |0      |102-现代C++实战30讲/06丨加餐 (1讲)/加餐丨部分课后思考题答案合集.html                    |加餐丨部分课后思考题答案合集                  |555 |
|556     |719662679018295  |0   |net_content |           |0      |102-现代C++实战30讲/07丨结束语 (1讲)/结束语丨终点已达，行程还要继续.html                  |结束语丨终点已达，行程还要继续                 |556 |
|568     |706717272250670  |0   |net_content |           |0      |104-性能工程高手课/00丨开篇词 (1讲)/00丨开篇词丨代码不要眼前的苟且，而要效率的提升和性能的优化.html      |00丨开篇词丨代码不要眼前的苟且，而要效率的提升和性能的优化  |568 |
|569     |674616496192560  |0   |net_content |           |0      |104-性能工程高手课/01丨开篇：认识代码性能和系统容量效率 (3讲)/01丨程序员为什么要关心代码性能？.html      |01丨程序员为什么要关心代码性能？               |569 |
|570     |163185365427098  |0   |net_content |           |0      |104-性能工程高手课/01丨开篇：认识代码性能和系统容量效率 (3讲)/02丨程序员也要关心整个系统和公司成本吗？.html  |02丨程序员也要关心整个系统和公司成本吗？           |570 |
|571     |745874331355291  |0   |net_content |           |0      |104-性能工程高手课/01丨开篇：认识代码性能和系统容量效率 (3讲)/03丨导读：专栏是怎么设计的？需要哪些知识？.html |03丨导读：专栏是怎么设计的？需要哪些知识？          |571 |
|572     |1061896570537305 |0   |net_content |           |0      |104-性能工程高手课/02丨性能定律和数理基础 (5讲)/04丨性能工程三定律：IT业和性能优化工作的“法律法规”.html  |04丨性能工程三定律：IT业和性能优化工作的“法律法规”    |572 |
|573     |953781898957230  |0   |net_content |           |0      |104-性能工程高手课/02丨性能定律和数理基础 (5讲)/05丨概率统计和排队论：做性能工作必须懂的数理基础.html     |05丨概率统计和排队论：做性能工作必须懂的数理基础       |573 |
|574     |10238948519444   |0   |net_content |           |0      |104-性能工程高手课/02丨性能定律和数理基础 (5讲)/06丨性能数据的分析：如何从大量数据中看出想要的信号？.html   |06丨性能数据的分析：如何从大量数据中看出想要的信号？     |574 |
|575     |1125077492768631 |0   |net_content |           |0      |104-性能工程高手课/02丨性能定律和数理基础 (5讲)/07丨性能数据的展示：一图胜千言，说出你的数据故事.html     |07丨性能数据的展示：一图胜千言，说出你的数据故事       |575 |
|576     |977438879222316  |0   |net_content |           |0      |104-性能工程高手课/02丨性能定律和数理基础 (5讲)/08丨经验总结：必须熟记的一组常用性能数字.html         |08丨经验总结：必须熟记的一组常用性能数字           |576 |
|577     |1032851353153498 |0   |net_content |           |0      |104-性能工程高手课/03丨性能测试 (5讲)/09丨性能测试的种类：如何快准狠地抓住一个测试的本质？.html        |09丨性能测试的种类：如何快准狠地抓住一个测试的本质？     |577 |
|578     |336224727929298  |0   |net_content |           |0      |104-性能工程高手课/03丨性能测试 (5讲)/10丨性能测试的规划和步骤：为什么性能测试不容易一蹴而就呢？.html     |10丨性能测试的规划和步骤：为什么性能测试不容易一蹴而就呢？  |578 |
|579     |387444308294595  |0   |net_content |           |0      |104-性能工程高手课/03丨性能测试 (5讲)/11丨性能测试的工具：七大测试场景如何选择高质量的测试工具？.html     |11丨性能测试的工具：七大测试场景如何选择高质量的测试工具？  |579 |
|580     |209458553731100  |0   |net_content |           |0      |104-性能工程高手课/03丨性能测试 (5讲)/12丨九条性能测试的经验和教训：如何保证测试结果可靠且可重复？.html    |12丨九条性能测试的经验和教训：如何保证测试结果可靠且可重复？ |580 |
|581     |250386143805634  |0   |net_content |           |0      |104-性能工程高手课/03丨性能测试 (5讲)/13丨性能测试的工程集成：如何与产品开发和运维业务有机集成？.html     |13丨性能测试的工程集成：如何与产品开发和运维业务有机集成？  |581 |
|582     |966001401118047  |0   |net_content |           |0      |104-性能工程高手课/04丨性能分析 (5讲)/14丨性能分析概述：性能问题归根结底是什么原因？.html           |14丨性能分析概述：性能问题归根结底是什么原因？        |582 |
|583     |773100394316869  |0   |net_content |           |0      |104-性能工程高手课/04丨性能分析 (5讲)/15丨常见的性能问题之CPU篇：如何让CPU的运行不受阻碍？.html     |15丨常见的性能问题之CPU篇：如何让CPU的运行不受阻碍？  |583 |
|--------|-----------------|----|------------|-----------|-------|-----------------------------------------------------------------|--------------------------------|----|

2020-11-23 21:51:48.213 INFO  jdbc.sqltiming Line:373 - select count(bookchecke0_.item_id) as col_0_0_ from book_check bookchecke0_ where bookchecke0_.got=0 
 {executed in 3 msec}
2020-11-23 21:51:48.216 INFO  jdbc.resultsettable Line:610 - 
|---------|
|col_0_0_ |
|---------|
|442      |
|---------|

2020-11-23 21:51:48.245 INFO  jdbc.sqltiming Line:373 - select bookchecke0_.item_id as item_id1_2_, bookchecke0_.fsid as fsid2_2_, bookchecke0_.got 
as got3_2_, bookchecke0_.name as name4_2_, bookchecke0_.parse_fail as parse_fa5_2_, bookchecke0_.parsed 
as parsed6_2_, bookchecke0_.path as path7_2_, bookchecke0_.title as title8_2_, bookchecke0_.vid 
as vid9_2_ from book_check bookchecke0_ where bookchecke0_.fsid='776264130211843' and bookchecke0_.name='net_content' 
 {executed in 3 msec}
2020-11-23 21:51:48.250 INFO  jdbc.resultsettable Line:610 - 
|--------|---------|---------|---------|-----------|---------|---------|---------|---------|
|item_id |fsid     |got      |name     |parse_fail |parsed   |path     |title    |vid      |
|--------|---------|---------|---------|-----------|---------|---------|---------|---------|
|553     |[unread] |[unread] |[unread] |[unread]   |[unread] |[unread] |[unread] |[unread] |
|--------|---------|---------|---------|-----------|---------|---------|---------|---------|

2020-11-23 21:54:31.623 INFO  geek.me.javaapi.JavaApiApplication Line:651 - No active profile set, falling back to default profiles: default
2020-11-23 21:54:33.766 INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate Line:127 - Bootstrapping Spring Data JPA repositories in DEFERRED mode.
2020-11-23 21:54:34.286 INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate Line:187 - Finished Spring Data repository scanning in 481ms. Found 20 JPA repository interfaces.
2020-11-23 21:54:35.052 INFO  org.springframework.cloud.context.scope.GenericScope Line:295 - BeanFactory id=a57235e8-b792-3882-8d3a-8bc20defb1fe
2020-11-23 21:54:36.570 INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer Line:108 - Tomcat initialized with port(s): 8080 (http)
2020-11-23 21:54:36.609 INFO  org.apache.coyote.http11.Http11NioProtocol Line:173 - Initializing ProtocolHandler ["http-nio-8080"]
2020-11-23 21:54:36.614 INFO  org.apache.catalina.core.StandardService Line:173 - Starting service [Tomcat]
2020-11-23 21:54:36.616 INFO  org.apache.catalina.core.StandardEngine Line:173 - Starting Servlet engine: [Apache Tomcat/9.0.37]
2020-11-23 21:54:37.084 INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Line:173 - Initializing Spring embedded WebApplicationContext
2020-11-23 21:54:37.085 INFO  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext Line:285 - Root WebApplicationContext: initialization completed in 5371 ms
2020-11-23 21:54:37.897 INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Line:181 - Initializing ExecutorService 'applicationTaskExecutor'
2020-11-23 21:54:37.936 INFO  com.zaxxer.hikari.HikariDataSource Line:110 - HikariPool-1 - Starting...
2020-11-23 21:54:38.416 INFO  com.zaxxer.hikari.HikariDataSource Line:123 - HikariPool-1 - Start completed.
2020-11-23 21:54:38.823 INFO  org.hibernate.jpa.internal.util.LogHelper Line:31  - HHH000204: Processing PersistenceUnitInfo [name: default]
2020-11-23 21:54:39.040 INFO  org.hibernate.Version Line:44  - HHH000412: Hibernate ORM core version 5.4.20.Final
2020-11-23 21:54:39.751 INFO  org.hibernate.annotations.common.Version Line:49  - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-11-23 21:54:40.235 INFO  com.netflix.config.sources.URLConfigurationSource Line:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-11-23 21:54:40.254 INFO  com.netflix.config.sources.URLConfigurationSource Line:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-11-23 21:54:40.308 INFO  org.hibernate.dialect.Dialect Line:170 - HHH000400: Using dialect: org.hibernate.dialect.MySQL55Dialect
2020-11-23 21:54:43.182 INFO  org.apache.coyote.http11.Http11NioProtocol Line:173 - Starting ProtocolHandler ["http-nio-8080"]
2020-11-23 21:54:43.306 INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer Line:220 - Tomcat started on port(s): 8080 (http) with context path ''
2020-11-23 21:54:43.780 INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Line:173 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-11-23 21:54:43.782 INFO  org.springframework.web.servlet.DispatcherServlet Line:525 - Initializing Servlet 'dispatcherServlet'
2020-11-23 21:54:43.855 INFO  org.springframework.web.servlet.DispatcherServlet Line:547 - Completed initialization in 72 ms
2020-11-23 21:54:44.488 INFO  org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator Line:52  - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-11-23 21:54:44.551 INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean Line:416 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-11-23 21:54:44.834 INFO  org.springframework.data.repository.config.DeferredRepositoryInitializationListener Line:49  - Triggering deferred initialization of Spring Data repositories…
2020-11-23 21:54:47.964 INFO  jdbc.sqltiming Line:373 - select bookchecke0_.item_id as item_id1_2_, bookchecke0_.fsid as fsid2_2_, bookchecke0_.got 
as got3_2_, bookchecke0_.name as name4_2_, bookchecke0_.parse_fail as parse_fa5_2_, bookchecke0_.parsed 
as parsed6_2_, bookchecke0_.path as path7_2_, bookchecke0_.title as title8_2_, bookchecke0_.vid 
as vid9_2_ from book_check bookchecke0_ where bookchecke0_.got=0 limit 20 
 {executed in 12 msec}
2020-11-23 21:54:48.072 INFO  jdbc.resultsettable Line:610 - 
|--------|-----------------|----|------------|-----------|-------|-----------------------------------------------------------------|--------------------------------|----|
|item_id |fsid             |got |name        |parse_fail |parsed |path                                                             |title                           |vid |
|--------|-----------------|----|------------|-----------|-------|-----------------------------------------------------------------|--------------------------------|----|
|553     |776264130211843  |0   |net_content |           |0      |102-现代C++实战30讲/05丨未来篇 (3讲)/29丨Ranges：无迭代器的迭代和更方便的组合.html         |29丨Ranges：无迭代器的迭代和更方便的组合        |553 |
|554     |901563966624350  |0   |net_content |           |0      |102-现代C++实战30讲/05丨未来篇 (3讲)/30丨Coroutines：协作式的交叉调度执行.html         |30丨Coroutines：协作式的交叉调度执行        |554 |
|555     |503687233870410  |0   |net_content |           |0      |102-现代C++实战30讲/06丨加餐 (1讲)/加餐丨部分课后思考题答案合集.html                    |加餐丨部分课后思考题答案合集                  |555 |
|556     |719662679018295  |0   |net_content |           |0      |102-现代C++实战30讲/07丨结束语 (1讲)/结束语丨终点已达，行程还要继续.html                  |结束语丨终点已达，行程还要继续                 |556 |
|568     |706717272250670  |0   |net_content |           |0      |104-性能工程高手课/00丨开篇词 (1讲)/00丨开篇词丨代码不要眼前的苟且，而要效率的提升和性能的优化.html      |00丨开篇词丨代码不要眼前的苟且，而要效率的提升和性能的优化  |568 |
|569     |674616496192560  |0   |net_content |           |0      |104-性能工程高手课/01丨开篇：认识代码性能和系统容量效率 (3讲)/01丨程序员为什么要关心代码性能？.html      |01丨程序员为什么要关心代码性能？               |569 |
|570     |163185365427098  |0   |net_content |           |0      |104-性能工程高手课/01丨开篇：认识代码性能和系统容量效率 (3讲)/02丨程序员也要关心整个系统和公司成本吗？.html  |02丨程序员也要关心整个系统和公司成本吗？           |570 |
|571     |745874331355291  |0   |net_content |           |0      |104-性能工程高手课/01丨开篇：认识代码性能和系统容量效率 (3讲)/03丨导读：专栏是怎么设计的？需要哪些知识？.html |03丨导读：专栏是怎么设计的？需要哪些知识？          |571 |
|572     |1061896570537305 |0   |net_content |           |0      |104-性能工程高手课/02丨性能定律和数理基础 (5讲)/04丨性能工程三定律：IT业和性能优化工作的“法律法规”.html  |04丨性能工程三定律：IT业和性能优化工作的“法律法规”    |572 |
|573     |953781898957230  |0   |net_content |           |0      |104-性能工程高手课/02丨性能定律和数理基础 (5讲)/05丨概率统计和排队论：做性能工作必须懂的数理基础.html     |05丨概率统计和排队论：做性能工作必须懂的数理基础       |573 |
|574     |10238948519444   |0   |net_content |           |0      |104-性能工程高手课/02丨性能定律和数理基础 (5讲)/06丨性能数据的分析：如何从大量数据中看出想要的信号？.html   |06丨性能数据的分析：如何从大量数据中看出想要的信号？     |574 |
|575     |1125077492768631 |0   |net_content |           |0      |104-性能工程高手课/02丨性能定律和数理基础 (5讲)/07丨性能数据的展示：一图胜千言，说出你的数据故事.html     |07丨性能数据的展示：一图胜千言，说出你的数据故事       |575 |
|576     |977438879222316  |0   |net_content |           |0      |104-性能工程高手课/02丨性能定律和数理基础 (5讲)/08丨经验总结：必须熟记的一组常用性能数字.html         |08丨经验总结：必须熟记的一组常用性能数字           |576 |
|577     |1032851353153498 |0   |net_content |           |0      |104-性能工程高手课/03丨性能测试 (5讲)/09丨性能测试的种类：如何快准狠地抓住一个测试的本质？.html        |09丨性能测试的种类：如何快准狠地抓住一个测试的本质？     |577 |
|578     |336224727929298  |0   |net_content |           |0      |104-性能工程高手课/03丨性能测试 (5讲)/10丨性能测试的规划和步骤：为什么性能测试不容易一蹴而就呢？.html     |10丨性能测试的规划和步骤：为什么性能测试不容易一蹴而就呢？  |578 |
|579     |387444308294595  |0   |net_content |           |0      |104-性能工程高手课/03丨性能测试 (5讲)/11丨性能测试的工具：七大测试场景如何选择高质量的测试工具？.html     |11丨性能测试的工具：七大测试场景如何选择高质量的测试工具？  |579 |
|580     |209458553731100  |0   |net_content |           |0      |104-性能工程高手课/03丨性能测试 (5讲)/12丨九条性能测试的经验和教训：如何保证测试结果可靠且可重复？.html    |12丨九条性能测试的经验和教训：如何保证测试结果可靠且可重复？ |580 |
|581     |250386143805634  |0   |net_content |           |0      |104-性能工程高手课/03丨性能测试 (5讲)/13丨性能测试的工程集成：如何与产品开发和运维业务有机集成？.html     |13丨性能测试的工程集成：如何与产品开发和运维业务有机集成？  |581 |
|582     |966001401118047  |0   |net_content |           |0      |104-性能工程高手课/04丨性能分析 (5讲)/14丨性能分析概述：性能问题归根结底是什么原因？.html           |14丨性能分析概述：性能问题归根结底是什么原因？        |582 |
|583     |773100394316869  |0   |net_content |           |0      |104-性能工程高手课/04丨性能分析 (5讲)/15丨常见的性能问题之CPU篇：如何让CPU的运行不受阻碍？.html     |15丨常见的性能问题之CPU篇：如何让CPU的运行不受阻碍？  |583 |
|--------|-----------------|----|------------|-----------|-------|-----------------------------------------------------------------|--------------------------------|----|

2020-11-23 21:54:48.109 INFO  jdbc.sqltiming Line:373 - select count(bookchecke0_.item_id) as col_0_0_ from book_check bookchecke0_ where bookchecke0_.got=0 
 {executed in 2 msec}
2020-11-23 21:54:48.112 INFO  jdbc.resultsettable Line:610 - 
|---------|
|col_0_0_ |
|---------|
|442      |
|---------|

2020-11-23 21:54:48.140 INFO  jdbc.sqltiming Line:373 - select bookchecke0_.item_id as item_id1_2_, bookchecke0_.fsid as fsid2_2_, bookchecke0_.got 
as got3_2_, bookchecke0_.name as name4_2_, bookchecke0_.parse_fail as parse_fa5_2_, bookchecke0_.parsed 
as parsed6_2_, bookchecke0_.path as path7_2_, bookchecke0_.title as title8_2_, bookchecke0_.vid 
as vid9_2_ from book_check bookchecke0_ where bookchecke0_.fsid='776264130211843' and bookchecke0_.name='net_content' 
 {executed in 2 msec}
2020-11-23 21:54:48.145 INFO  jdbc.resultsettable Line:610 - 
|--------|---------|---------|---------|-----------|---------|---------|---------|---------|
|item_id |fsid     |got      |name     |parse_fail |parsed   |path     |title    |vid      |
|--------|---------|---------|---------|-----------|---------|---------|---------|---------|
|553     |[unread] |[unread] |[unread] |[unread]   |[unread] |[unread] |[unread] |[unread] |
|--------|---------|---------|---------|-----------|---------|---------|---------|---------|

2020-11-23 21:54:48.980 INFO  org.springframework.data.repository.config.DeferredRepositoryInitializationListener Line:53  - Spring Data repositories initialized!
2020-11-23 21:54:49.007 INFO  geek.me.javaapi.JavaApiApplication Line:61  - Started JavaApiApplication in 22.283 seconds (JVM running for 26.683)
2020-11-23 21:55:36.809 INFO  geek.me.javaapi.JavaApiApplication Line:651 - No active profile set, falling back to default profiles: default
2020-11-23 21:55:39.495 INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate Line:127 - Bootstrapping Spring Data JPA repositories in DEFERRED mode.
2020-11-23 21:55:40.094 INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate Line:187 - Finished Spring Data repository scanning in 560ms. Found 20 JPA repository interfaces.
2020-11-23 21:55:40.892 INFO  org.springframework.cloud.context.scope.GenericScope Line:295 - BeanFactory id=a57235e8-b792-3882-8d3a-8bc20defb1fe
2020-11-23 21:55:42.474 INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer Line:108 - Tomcat initialized with port(s): 8080 (http)
2020-11-23 21:55:42.511 INFO  org.apache.coyote.http11.Http11NioProtocol Line:173 - Initializing ProtocolHandler ["http-nio-8080"]
2020-11-23 21:55:42.514 INFO  org.apache.catalina.core.StandardService Line:173 - Starting service [Tomcat]
2020-11-23 21:55:42.516 INFO  org.apache.catalina.core.StandardEngine Line:173 - Starting Servlet engine: [Apache Tomcat/9.0.37]
2020-11-23 21:55:43.015 INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Line:173 - Initializing Spring embedded WebApplicationContext
2020-11-23 21:55:43.016 INFO  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext Line:285 - Root WebApplicationContext: initialization completed in 6068 ms
2020-11-23 21:55:43.765 INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Line:181 - Initializing ExecutorService 'applicationTaskExecutor'
2020-11-23 21:55:43.806 INFO  com.zaxxer.hikari.HikariDataSource Line:110 - HikariPool-1 - Starting...
2020-11-23 21:55:44.304 INFO  com.zaxxer.hikari.HikariDataSource Line:123 - HikariPool-1 - Start completed.
2020-11-23 21:55:44.825 INFO  org.hibernate.jpa.internal.util.LogHelper Line:31  - HHH000204: Processing PersistenceUnitInfo [name: default]
2020-11-23 21:55:45.050 INFO  org.hibernate.Version Line:44  - HHH000412: Hibernate ORM core version 5.4.20.Final
2020-11-23 21:55:45.690 INFO  org.hibernate.annotations.common.Version Line:49  - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-11-23 21:55:46.221 INFO  com.netflix.config.sources.URLConfigurationSource Line:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-11-23 21:55:46.242 INFO  com.netflix.config.sources.URLConfigurationSource Line:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-11-23 21:55:46.272 INFO  org.hibernate.dialect.Dialect Line:170 - HHH000400: Using dialect: org.hibernate.dialect.MySQL55Dialect
2020-11-23 21:55:48.951 INFO  org.apache.coyote.http11.Http11NioProtocol Line:173 - Starting ProtocolHandler ["http-nio-8080"]
2020-11-23 21:55:49.066 INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer Line:220 - Tomcat started on port(s): 8080 (http) with context path ''
2020-11-23 21:55:49.873 INFO  org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator Line:52  - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-11-23 21:55:49.875 INFO  org.springframework.data.repository.config.DeferredRepositoryInitializationListener Line:49  - Triggering deferred initialization of Spring Data repositories…
2020-11-23 21:55:49.922 INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean Line:416 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-11-23 21:55:50.164 INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Line:173 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-11-23 21:55:50.165 INFO  org.springframework.web.servlet.DispatcherServlet Line:525 - Initializing Servlet 'dispatcherServlet'
2020-11-23 21:55:50.589 INFO  org.springframework.web.servlet.DispatcherServlet Line:547 - Completed initialization in 423 ms
2020-11-23 21:55:52.933 INFO  org.springframework.data.repository.config.DeferredRepositoryInitializationListener Line:53  - Spring Data repositories initialized!
2020-11-23 21:55:52.957 INFO  geek.me.javaapi.JavaApiApplication Line:61  - Started JavaApiApplication in 20.869 seconds (JVM running for 25.527)
2020-11-23 21:56:00.042 INFO  jdbc.sqltiming Line:373 - select bookchecke0_.item_id as item_id1_2_, bookchecke0_.fsid as fsid2_2_, bookchecke0_.got 
as got3_2_, bookchecke0_.name as name4_2_, bookchecke0_.parse_fail as parse_fa5_2_, bookchecke0_.parsed 
as parsed6_2_, bookchecke0_.path as path7_2_, bookchecke0_.title as title8_2_, bookchecke0_.vid 
as vid9_2_ from book_check bookchecke0_ where bookchecke0_.got=0 limit 20 
 {executed in 4 msec}
2020-11-23 21:56:00.214 INFO  jdbc.resultsettable Line:610 - 
|--------|-----------------|----|------------|-----------|-------|-----------------------------------------------------------------|--------------------------------|----|
|item_id |fsid             |got |name        |parse_fail |parsed |path                                                             |title                           |vid |
|--------|-----------------|----|------------|-----------|-------|-----------------------------------------------------------------|--------------------------------|----|
|553     |776264130211843  |0   |net_content |           |0      |102-现代C++实战30讲/05丨未来篇 (3讲)/29丨Ranges：无迭代器的迭代和更方便的组合.html         |29丨Ranges：无迭代器的迭代和更方便的组合        |553 |
|554     |901563966624350  |0   |net_content |           |0      |102-现代C++实战30讲/05丨未来篇 (3讲)/30丨Coroutines：协作式的交叉调度执行.html         |30丨Coroutines：协作式的交叉调度执行        |554 |
|555     |503687233870410  |0   |net_content |           |0      |102-现代C++实战30讲/06丨加餐 (1讲)/加餐丨部分课后思考题答案合集.html                    |加餐丨部分课后思考题答案合集                  |555 |
|556     |719662679018295  |0   |net_content |           |0      |102-现代C++实战30讲/07丨结束语 (1讲)/结束语丨终点已达，行程还要继续.html                  |结束语丨终点已达，行程还要继续                 |556 |
|568     |706717272250670  |0   |net_content |           |0      |104-性能工程高手课/00丨开篇词 (1讲)/00丨开篇词丨代码不要眼前的苟且，而要效率的提升和性能的优化.html      |00丨开篇词丨代码不要眼前的苟且，而要效率的提升和性能的优化  |568 |
|569     |674616496192560  |0   |net_content |           |0      |104-性能工程高手课/01丨开篇：认识代码性能和系统容量效率 (3讲)/01丨程序员为什么要关心代码性能？.html      |01丨程序员为什么要关心代码性能？               |569 |
|570     |163185365427098  |0   |net_content |           |0      |104-性能工程高手课/01丨开篇：认识代码性能和系统容量效率 (3讲)/02丨程序员也要关心整个系统和公司成本吗？.html  |02丨程序员也要关心整个系统和公司成本吗？           |570 |
|571     |745874331355291  |0   |net_content |           |0      |104-性能工程高手课/01丨开篇：认识代码性能和系统容量效率 (3讲)/03丨导读：专栏是怎么设计的？需要哪些知识？.html |03丨导读：专栏是怎么设计的？需要哪些知识？          |571 |
|572     |1061896570537305 |0   |net_content |           |0      |104-性能工程高手课/02丨性能定律和数理基础 (5讲)/04丨性能工程三定律：IT业和性能优化工作的“法律法规”.html  |04丨性能工程三定律：IT业和性能优化工作的“法律法规”    |572 |
|573     |953781898957230  |0   |net_content |           |0      |104-性能工程高手课/02丨性能定律和数理基础 (5讲)/05丨概率统计和排队论：做性能工作必须懂的数理基础.html     |05丨概率统计和排队论：做性能工作必须懂的数理基础       |573 |
|574     |10238948519444   |0   |net_content |           |0      |104-性能工程高手课/02丨性能定律和数理基础 (5讲)/06丨性能数据的分析：如何从大量数据中看出想要的信号？.html   |06丨性能数据的分析：如何从大量数据中看出想要的信号？     |574 |
|575     |1125077492768631 |0   |net_content |           |0      |104-性能工程高手课/02丨性能定律和数理基础 (5讲)/07丨性能数据的展示：一图胜千言，说出你的数据故事.html     |07丨性能数据的展示：一图胜千言，说出你的数据故事       |575 |
|576     |977438879222316  |0   |net_content |           |0      |104-性能工程高手课/02丨性能定律和数理基础 (5讲)/08丨经验总结：必须熟记的一组常用性能数字.html         |08丨经验总结：必须熟记的一组常用性能数字           |576 |
|577     |1032851353153498 |0   |net_content |           |0      |104-性能工程高手课/03丨性能测试 (5讲)/09丨性能测试的种类：如何快准狠地抓住一个测试的本质？.html        |09丨性能测试的种类：如何快准狠地抓住一个测试的本质？     |577 |
|578     |336224727929298  |0   |net_content |           |0      |104-性能工程高手课/03丨性能测试 (5讲)/10丨性能测试的规划和步骤：为什么性能测试不容易一蹴而就呢？.html     |10丨性能测试的规划和步骤：为什么性能测试不容易一蹴而就呢？  |578 |
|579     |387444308294595  |0   |net_content |           |0      |104-性能工程高手课/03丨性能测试 (5讲)/11丨性能测试的工具：七大测试场景如何选择高质量的测试工具？.html     |11丨性能测试的工具：七大测试场景如何选择高质量的测试工具？  |579 |
|580     |209458553731100  |0   |net_content |           |0      |104-性能工程高手课/03丨性能测试 (5讲)/12丨九条性能测试的经验和教训：如何保证测试结果可靠且可重复？.html    |12丨九条性能测试的经验和教训：如何保证测试结果可靠且可重复？ |580 |
|581     |250386143805634  |0   |net_content |           |0      |104-性能工程高手课/03丨性能测试 (5讲)/13丨性能测试的工程集成：如何与产品开发和运维业务有机集成？.html     |13丨性能测试的工程集成：如何与产品开发和运维业务有机集成？  |581 |
|582     |966001401118047  |0   |net_content |           |0      |104-性能工程高手课/04丨性能分析 (5讲)/14丨性能分析概述：性能问题归根结底是什么原因？.html           |14丨性能分析概述：性能问题归根结底是什么原因？        |582 |
|583     |773100394316869  |0   |net_content |           |0      |104-性能工程高手课/04丨性能分析 (5讲)/15丨常见的性能问题之CPU篇：如何让CPU的运行不受阻碍？.html     |15丨常见的性能问题之CPU篇：如何让CPU的运行不受阻碍？  |583 |
|--------|-----------------|----|------------|-----------|-------|-----------------------------------------------------------------|--------------------------------|----|

2020-11-23 21:56:00.258 INFO  jdbc.sqltiming Line:373 - select count(bookchecke0_.item_id) as col_0_0_ from book_check bookchecke0_ where bookchecke0_.got=0 
 {executed in 3 msec}
2020-11-23 21:56:00.260 INFO  jdbc.resultsettable Line:610 - 
|---------|
|col_0_0_ |
|---------|
|442      |
|---------|

2020-11-23 21:56:00.290 INFO  jdbc.sqltiming Line:373 - select bookchecke0_.item_id as item_id1_2_, bookchecke0_.fsid as fsid2_2_, bookchecke0_.got 
as got3_2_, bookchecke0_.name as name4_2_, bookchecke0_.parse_fail as parse_fa5_2_, bookchecke0_.parsed 
as parsed6_2_, bookchecke0_.path as path7_2_, bookchecke0_.title as title8_2_, bookchecke0_.vid 
as vid9_2_ from book_check bookchecke0_ where bookchecke0_.fsid='776264130211843' and bookchecke0_.name='net_content' 
 {executed in 1 msec}
2020-11-23 21:56:00.294 INFO  jdbc.resultsettable Line:610 - 
|--------|---------|---------|---------|-----------|---------|---------|---------|---------|
|item_id |fsid     |got      |name     |parse_fail |parsed   |path     |title    |vid      |
|--------|---------|---------|---------|-----------|---------|---------|---------|---------|
|553     |[unread] |[unread] |[unread] |[unread]   |[unread] |[unread] |[unread] |[unread] |
|--------|---------|---------|---------|-----------|---------|---------|---------|---------|

2020-11-23 21:56:44.111 INFO  geek.me.javaapi.JavaApiApplication Line:651 - No active profile set, falling back to default profiles: default
2020-11-23 21:56:46.201 INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate Line:127 - Bootstrapping Spring Data JPA repositories in DEFERRED mode.
2020-11-23 21:56:46.790 INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate Line:187 - Finished Spring Data repository scanning in 549ms. Found 20 JPA repository interfaces.
2020-11-23 21:56:47.633 INFO  org.springframework.cloud.context.scope.GenericScope Line:295 - BeanFactory id=a57235e8-b792-3882-8d3a-8bc20defb1fe
2020-11-23 21:56:49.138 INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer Line:108 - Tomcat initialized with port(s): 8080 (http)
2020-11-23 21:56:49.177 INFO  org.apache.coyote.http11.Http11NioProtocol Line:173 - Initializing ProtocolHandler ["http-nio-8080"]
2020-11-23 21:56:49.180 INFO  org.apache.catalina.core.StandardService Line:173 - Starting service [Tomcat]
2020-11-23 21:56:49.181 INFO  org.apache.catalina.core.StandardEngine Line:173 - Starting Servlet engine: [Apache Tomcat/9.0.37]
2020-11-23 21:56:49.691 INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Line:173 - Initializing Spring embedded WebApplicationContext
2020-11-23 21:56:49.692 INFO  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext Line:285 - Root WebApplicationContext: initialization completed in 5507 ms
2020-11-23 21:56:50.513 INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Line:181 - Initializing ExecutorService 'applicationTaskExecutor'
2020-11-23 21:56:50.552 INFO  com.zaxxer.hikari.HikariDataSource Line:110 - HikariPool-1 - Starting...
2020-11-23 21:56:51.058 INFO  com.zaxxer.hikari.HikariDataSource Line:123 - HikariPool-1 - Start completed.
2020-11-23 21:56:51.501 INFO  org.hibernate.jpa.internal.util.LogHelper Line:31  - HHH000204: Processing PersistenceUnitInfo [name: default]
2020-11-23 21:56:51.736 INFO  org.hibernate.Version Line:44  - HHH000412: Hibernate ORM core version 5.4.20.Final
2020-11-23 21:56:52.375 INFO  org.hibernate.annotations.common.Version Line:49  - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-11-23 21:56:52.907 INFO  com.netflix.config.sources.URLConfigurationSource Line:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-11-23 21:56:52.925 INFO  com.netflix.config.sources.URLConfigurationSource Line:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-11-23 21:56:52.981 INFO  org.hibernate.dialect.Dialect Line:170 - HHH000400: Using dialect: org.hibernate.dialect.MySQL55Dialect
2020-11-23 21:56:55.663 INFO  org.apache.coyote.http11.Http11NioProtocol Line:173 - Starting ProtocolHandler ["http-nio-8080"]
2020-11-23 21:56:55.768 INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer Line:220 - Tomcat started on port(s): 8080 (http) with context path ''
2020-11-23 21:56:56.553 INFO  org.springframework.data.repository.config.DeferredRepositoryInitializationListener Line:49  - Triggering deferred initialization of Spring Data repositories…
2020-11-23 21:56:56.580 INFO  org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator Line:52  - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-11-23 21:56:56.623 INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean Line:416 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-11-23 21:56:57.544 INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Line:173 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-11-23 21:56:57.546 INFO  org.springframework.web.servlet.DispatcherServlet Line:525 - Initializing Servlet 'dispatcherServlet'
2020-11-23 21:56:57.582 INFO  org.springframework.web.servlet.DispatcherServlet Line:547 - Completed initialization in 35 ms
2020-11-23 21:56:59.660 INFO  org.springframework.data.repository.config.DeferredRepositoryInitializationListener Line:53  - Spring Data repositories initialized!
2020-11-23 21:56:59.686 INFO  geek.me.javaapi.JavaApiApplication Line:61  - Started JavaApiApplication in 21.509 seconds (JVM running for 27.479)
2020-11-23 21:57:21.764 INFO  jdbc.sqltiming Line:373 - select bookchecke0_.item_id as item_id1_2_, bookchecke0_.fsid as fsid2_2_, bookchecke0_.got 
as got3_2_, bookchecke0_.name as name4_2_, bookchecke0_.parse_fail as parse_fa5_2_, bookchecke0_.parsed 
as parsed6_2_, bookchecke0_.path as path7_2_, bookchecke0_.title as title8_2_, bookchecke0_.vid 
as vid9_2_ from book_check bookchecke0_ where bookchecke0_.got=0 limit 20 
 {executed in 6 msec}
2020-11-23 21:57:21.870 INFO  jdbc.resultsettable Line:610 - 
|--------|-----------------|----|------------|-----------|-------|-----------------------------------------------------------------|--------------------------------|----|
|item_id |fsid             |got |name        |parse_fail |parsed |path                                                             |title                           |vid |
|--------|-----------------|----|------------|-----------|-------|-----------------------------------------------------------------|--------------------------------|----|
|553     |776264130211843  |0   |net_content |           |0      |102-现代C++实战30讲/05丨未来篇 (3讲)/29丨Ranges：无迭代器的迭代和更方便的组合.html         |29丨Ranges：无迭代器的迭代和更方便的组合        |553 |
|554     |901563966624350  |0   |net_content |           |0      |102-现代C++实战30讲/05丨未来篇 (3讲)/30丨Coroutines：协作式的交叉调度执行.html         |30丨Coroutines：协作式的交叉调度执行        |554 |
|555     |503687233870410  |0   |net_content |           |0      |102-现代C++实战30讲/06丨加餐 (1讲)/加餐丨部分课后思考题答案合集.html                    |加餐丨部分课后思考题答案合集                  |555 |
|556     |719662679018295  |0   |net_content |           |0      |102-现代C++实战30讲/07丨结束语 (1讲)/结束语丨终点已达，行程还要继续.html                  |结束语丨终点已达，行程还要继续                 |556 |
|568     |706717272250670  |0   |net_content |           |0      |104-性能工程高手课/00丨开篇词 (1讲)/00丨开篇词丨代码不要眼前的苟且，而要效率的提升和性能的优化.html      |00丨开篇词丨代码不要眼前的苟且，而要效率的提升和性能的优化  |568 |
|569     |674616496192560  |0   |net_content |           |0      |104-性能工程高手课/01丨开篇：认识代码性能和系统容量效率 (3讲)/01丨程序员为什么要关心代码性能？.html      |01丨程序员为什么要关心代码性能？               |569 |
|570     |163185365427098  |0   |net_content |           |0      |104-性能工程高手课/01丨开篇：认识代码性能和系统容量效率 (3讲)/02丨程序员也要关心整个系统和公司成本吗？.html  |02丨程序员也要关心整个系统和公司成本吗？           |570 |
|571     |745874331355291  |0   |net_content |           |0      |104-性能工程高手课/01丨开篇：认识代码性能和系统容量效率 (3讲)/03丨导读：专栏是怎么设计的？需要哪些知识？.html |03丨导读：专栏是怎么设计的？需要哪些知识？          |571 |
|572     |1061896570537305 |0   |net_content |           |0      |104-性能工程高手课/02丨性能定律和数理基础 (5讲)/04丨性能工程三定律：IT业和性能优化工作的“法律法规”.html  |04丨性能工程三定律：IT业和性能优化工作的“法律法规”    |572 |
|573     |953781898957230  |0   |net_content |           |0      |104-性能工程高手课/02丨性能定律和数理基础 (5讲)/05丨概率统计和排队论：做性能工作必须懂的数理基础.html     |05丨概率统计和排队论：做性能工作必须懂的数理基础       |573 |
|574     |10238948519444   |0   |net_content |           |0      |104-性能工程高手课/02丨性能定律和数理基础 (5讲)/06丨性能数据的分析：如何从大量数据中看出想要的信号？.html   |06丨性能数据的分析：如何从大量数据中看出想要的信号？     |574 |
|575     |1125077492768631 |0   |net_content |           |0      |104-性能工程高手课/02丨性能定律和数理基础 (5讲)/07丨性能数据的展示：一图胜千言，说出你的数据故事.html     |07丨性能数据的展示：一图胜千言，说出你的数据故事       |575 |
|576     |977438879222316  |0   |net_content |           |0      |104-性能工程高手课/02丨性能定律和数理基础 (5讲)/08丨经验总结：必须熟记的一组常用性能数字.html         |08丨经验总结：必须熟记的一组常用性能数字           |576 |
|577     |1032851353153498 |0   |net_content |           |0      |104-性能工程高手课/03丨性能测试 (5讲)/09丨性能测试的种类：如何快准狠地抓住一个测试的本质？.html        |09丨性能测试的种类：如何快准狠地抓住一个测试的本质？     |577 |
|578     |336224727929298  |0   |net_content |           |0      |104-性能工程高手课/03丨性能测试 (5讲)/10丨性能测试的规划和步骤：为什么性能测试不容易一蹴而就呢？.html     |10丨性能测试的规划和步骤：为什么性能测试不容易一蹴而就呢？  |578 |
|579     |387444308294595  |0   |net_content |           |0      |104-性能工程高手课/03丨性能测试 (5讲)/11丨性能测试的工具：七大测试场景如何选择高质量的测试工具？.html     |11丨性能测试的工具：七大测试场景如何选择高质量的测试工具？  |579 |
|580     |209458553731100  |0   |net_content |           |0      |104-性能工程高手课/03丨性能测试 (5讲)/12丨九条性能测试的经验和教训：如何保证测试结果可靠且可重复？.html    |12丨九条性能测试的经验和教训：如何保证测试结果可靠且可重复？ |580 |
|581     |250386143805634  |0   |net_content |           |0      |104-性能工程高手课/03丨性能测试 (5讲)/13丨性能测试的工程集成：如何与产品开发和运维业务有机集成？.html     |13丨性能测试的工程集成：如何与产品开发和运维业务有机集成？  |581 |
|582     |966001401118047  |0   |net_content |           |0      |104-性能工程高手课/04丨性能分析 (5讲)/14丨性能分析概述：性能问题归根结底是什么原因？.html           |14丨性能分析概述：性能问题归根结底是什么原因？        |582 |
|583     |773100394316869  |0   |net_content |           |0      |104-性能工程高手课/04丨性能分析 (5讲)/15丨常见的性能问题之CPU篇：如何让CPU的运行不受阻碍？.html     |15丨常见的性能问题之CPU篇：如何让CPU的运行不受阻碍？  |583 |
|--------|-----------------|----|------------|-----------|-------|-----------------------------------------------------------------|--------------------------------|----|

2020-11-23 21:57:21.907 INFO  jdbc.sqltiming Line:373 - select count(bookchecke0_.item_id) as col_0_0_ from book_check bookchecke0_ where bookchecke0_.got=0 
 {executed in 3 msec}
2020-11-23 21:57:21.910 INFO  jdbc.resultsettable Line:610 - 
|---------|
|col_0_0_ |
|---------|
|442      |
|---------|

2020-11-23 21:57:21.949 INFO  jdbc.sqltiming Line:373 - select bookchecke0_.item_id as item_id1_2_, bookchecke0_.fsid as fsid2_2_, bookchecke0_.got 
as got3_2_, bookchecke0_.name as name4_2_, bookchecke0_.parse_fail as parse_fa5_2_, bookchecke0_.parsed 
as parsed6_2_, bookchecke0_.path as path7_2_, bookchecke0_.title as title8_2_, bookchecke0_.vid 
as vid9_2_ from book_check bookchecke0_ where bookchecke0_.fsid='776264130211843' and bookchecke0_.name='net_content' 
 {executed in 3 msec}
2020-11-23 21:57:21.954 INFO  jdbc.resultsettable Line:610 - 
|--------|---------|---------|---------|-----------|---------|---------|---------|---------|
|item_id |fsid     |got      |name     |parse_fail |parsed   |path     |title    |vid      |
|--------|---------|---------|---------|-----------|---------|---------|---------|---------|
|553     |[unread] |[unread] |[unread] |[unread]   |[unread] |[unread] |[unread] |[unread] |
|--------|---------|---------|---------|-----------|---------|---------|---------|---------|

2020-11-23 21:59:57.344 INFO  geek.me.javaapi.JavaApiApplication Line:651 - No active profile set, falling back to default profiles: default
2020-11-23 21:59:59.569 INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate Line:127 - Bootstrapping Spring Data JPA repositories in DEFERRED mode.
2020-11-23 22:00:00.143 INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate Line:187 - Finished Spring Data repository scanning in 514ms. Found 20 JPA repository interfaces.
2020-11-23 22:00:00.910 INFO  org.springframework.cloud.context.scope.GenericScope Line:295 - BeanFactory id=a57235e8-b792-3882-8d3a-8bc20defb1fe
2020-11-23 22:00:02.498 INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer Line:108 - Tomcat initialized with port(s): 8080 (http)
2020-11-23 22:00:02.537 INFO  org.apache.coyote.http11.Http11NioProtocol Line:173 - Initializing ProtocolHandler ["http-nio-8080"]
2020-11-23 22:00:02.541 INFO  org.apache.catalina.core.StandardService Line:173 - Starting service [Tomcat]
2020-11-23 22:00:02.542 INFO  org.apache.catalina.core.StandardEngine Line:173 - Starting Servlet engine: [Apache Tomcat/9.0.37]
2020-11-23 22:00:03.031 INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Line:173 - Initializing Spring embedded WebApplicationContext
2020-11-23 22:00:03.033 INFO  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext Line:285 - Root WebApplicationContext: initialization completed in 5614 ms
2020-11-23 22:00:03.861 INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Line:181 - Initializing ExecutorService 'applicationTaskExecutor'
2020-11-23 22:00:03.902 INFO  com.zaxxer.hikari.HikariDataSource Line:110 - HikariPool-1 - Starting...
2020-11-23 22:00:04.396 INFO  com.zaxxer.hikari.HikariDataSource Line:123 - HikariPool-1 - Start completed.
2020-11-23 22:00:04.875 INFO  org.hibernate.jpa.internal.util.LogHelper Line:31  - HHH000204: Processing PersistenceUnitInfo [name: default]
2020-11-23 22:00:05.103 INFO  org.hibernate.Version Line:44  - HHH000412: Hibernate ORM core version 5.4.20.Final
2020-11-23 22:00:05.810 INFO  org.hibernate.annotations.common.Version Line:49  - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-11-23 22:00:06.305 INFO  com.netflix.config.sources.URLConfigurationSource Line:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-11-23 22:00:06.324 INFO  com.netflix.config.sources.URLConfigurationSource Line:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-11-23 22:00:06.379 INFO  org.hibernate.dialect.Dialect Line:170 - HHH000400: Using dialect: org.hibernate.dialect.MySQL55Dialect
2020-11-23 22:00:08.987 INFO  org.apache.coyote.http11.Http11NioProtocol Line:173 - Starting ProtocolHandler ["http-nio-8080"]
2020-11-23 22:00:09.108 INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer Line:220 - Tomcat started on port(s): 8080 (http) with context path ''
2020-11-23 22:00:09.594 INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Line:173 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-11-23 22:00:09.595 INFO  org.springframework.web.servlet.DispatcherServlet Line:525 - Initializing Servlet 'dispatcherServlet'
2020-11-23 22:00:09.651 INFO  org.springframework.web.servlet.DispatcherServlet Line:547 - Completed initialization in 55 ms
2020-11-23 22:00:10.095 INFO  org.springframework.data.repository.config.DeferredRepositoryInitializationListener Line:49  - Triggering deferred initialization of Spring Data repositories…
2020-11-23 22:00:10.129 INFO  org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator Line:52  - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-11-23 22:00:10.172 INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean Line:416 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-11-23 22:00:13.509 INFO  org.springframework.data.repository.config.DeferredRepositoryInitializationListener Line:53  - Spring Data repositories initialized!
2020-11-23 22:00:13.545 INFO  geek.me.javaapi.JavaApiApplication Line:61  - Started JavaApiApplication in 21.117 seconds (JVM running for 26.012)
2020-11-23 22:00:35.047 INFO  jdbc.sqltiming Line:373 - select bookchecke0_.item_id as item_id1_2_, bookchecke0_.fsid as fsid2_2_, bookchecke0_.got 
as got3_2_, bookchecke0_.name as name4_2_, bookchecke0_.parse_fail as parse_fa5_2_, bookchecke0_.parsed 
as parsed6_2_, bookchecke0_.path as path7_2_, bookchecke0_.title as title8_2_, bookchecke0_.vid 
as vid9_2_ from book_check bookchecke0_ where bookchecke0_.got=0 limit 20 
 {executed in 5 msec}
2020-11-23 22:00:35.142 INFO  jdbc.resultsettable Line:610 - 
|--------|-----------------|----|------------|-----------|-------|-----------------------------------------------------------------|--------------------------------|----|
|item_id |fsid             |got |name        |parse_fail |parsed |path                                                             |title                           |vid |
|--------|-----------------|----|------------|-----------|-------|-----------------------------------------------------------------|--------------------------------|----|
|553     |776264130211843  |0   |net_content |           |0      |102-现代C++实战30讲/05丨未来篇 (3讲)/29丨Ranges：无迭代器的迭代和更方便的组合.html         |29丨Ranges：无迭代器的迭代和更方便的组合        |553 |
|554     |901563966624350  |0   |net_content |           |0      |102-现代C++实战30讲/05丨未来篇 (3讲)/30丨Coroutines：协作式的交叉调度执行.html         |30丨Coroutines：协作式的交叉调度执行        |554 |
|555     |503687233870410  |0   |net_content |           |0      |102-现代C++实战30讲/06丨加餐 (1讲)/加餐丨部分课后思考题答案合集.html                    |加餐丨部分课后思考题答案合集                  |555 |
|556     |719662679018295  |0   |net_content |           |0      |102-现代C++实战30讲/07丨结束语 (1讲)/结束语丨终点已达，行程还要继续.html                  |结束语丨终点已达，行程还要继续                 |556 |
|568     |706717272250670  |0   |net_content |           |0      |104-性能工程高手课/00丨开篇词 (1讲)/00丨开篇词丨代码不要眼前的苟且，而要效率的提升和性能的优化.html      |00丨开篇词丨代码不要眼前的苟且，而要效率的提升和性能的优化  |568 |
|569     |674616496192560  |0   |net_content |           |0      |104-性能工程高手课/01丨开篇：认识代码性能和系统容量效率 (3讲)/01丨程序员为什么要关心代码性能？.html      |01丨程序员为什么要关心代码性能？               |569 |
|570     |163185365427098  |0   |net_content |           |0      |104-性能工程高手课/01丨开篇：认识代码性能和系统容量效率 (3讲)/02丨程序员也要关心整个系统和公司成本吗？.html  |02丨程序员也要关心整个系统和公司成本吗？           |570 |
|571     |745874331355291  |0   |net_content |           |0      |104-性能工程高手课/01丨开篇：认识代码性能和系统容量效率 (3讲)/03丨导读：专栏是怎么设计的？需要哪些知识？.html |03丨导读：专栏是怎么设计的？需要哪些知识？          |571 |
|572     |1061896570537305 |0   |net_content |           |0      |104-性能工程高手课/02丨性能定律和数理基础 (5讲)/04丨性能工程三定律：IT业和性能优化工作的“法律法规”.html  |04丨性能工程三定律：IT业和性能优化工作的“法律法规”    |572 |
|573     |953781898957230  |0   |net_content |           |0      |104-性能工程高手课/02丨性能定律和数理基础 (5讲)/05丨概率统计和排队论：做性能工作必须懂的数理基础.html     |05丨概率统计和排队论：做性能工作必须懂的数理基础       |573 |
|574     |10238948519444   |0   |net_content |           |0      |104-性能工程高手课/02丨性能定律和数理基础 (5讲)/06丨性能数据的分析：如何从大量数据中看出想要的信号？.html   |06丨性能数据的分析：如何从大量数据中看出想要的信号？     |574 |
|575     |1125077492768631 |0   |net_content |           |0      |104-性能工程高手课/02丨性能定律和数理基础 (5讲)/07丨性能数据的展示：一图胜千言，说出你的数据故事.html     |07丨性能数据的展示：一图胜千言，说出你的数据故事       |575 |
|576     |977438879222316  |0   |net_content |           |0      |104-性能工程高手课/02丨性能定律和数理基础 (5讲)/08丨经验总结：必须熟记的一组常用性能数字.html         |08丨经验总结：必须熟记的一组常用性能数字           |576 |
|577     |1032851353153498 |0   |net_content |           |0      |104-性能工程高手课/03丨性能测试 (5讲)/09丨性能测试的种类：如何快准狠地抓住一个测试的本质？.html        |09丨性能测试的种类：如何快准狠地抓住一个测试的本质？     |577 |
|578     |336224727929298  |0   |net_content |           |0      |104-性能工程高手课/03丨性能测试 (5讲)/10丨性能测试的规划和步骤：为什么性能测试不容易一蹴而就呢？.html     |10丨性能测试的规划和步骤：为什么性能测试不容易一蹴而就呢？  |578 |
|579     |387444308294595  |0   |net_content |           |0      |104-性能工程高手课/03丨性能测试 (5讲)/11丨性能测试的工具：七大测试场景如何选择高质量的测试工具？.html     |11丨性能测试的工具：七大测试场景如何选择高质量的测试工具？  |579 |
|580     |209458553731100  |0   |net_content |           |0      |104-性能工程高手课/03丨性能测试 (5讲)/12丨九条性能测试的经验和教训：如何保证测试结果可靠且可重复？.html    |12丨九条性能测试的经验和教训：如何保证测试结果可靠且可重复？ |580 |
|581     |250386143805634  |0   |net_content |           |0      |104-性能工程高手课/03丨性能测试 (5讲)/13丨性能测试的工程集成：如何与产品开发和运维业务有机集成？.html     |13丨性能测试的工程集成：如何与产品开发和运维业务有机集成？  |581 |
|582     |966001401118047  |0   |net_content |           |0      |104-性能工程高手课/04丨性能分析 (5讲)/14丨性能分析概述：性能问题归根结底是什么原因？.html           |14丨性能分析概述：性能问题归根结底是什么原因？        |582 |
|583     |773100394316869  |0   |net_content |           |0      |104-性能工程高手课/04丨性能分析 (5讲)/15丨常见的性能问题之CPU篇：如何让CPU的运行不受阻碍？.html     |15丨常见的性能问题之CPU篇：如何让CPU的运行不受阻碍？  |583 |
|--------|-----------------|----|------------|-----------|-------|-----------------------------------------------------------------|--------------------------------|----|

2020-11-23 22:00:35.178 INFO  jdbc.sqltiming Line:373 - select count(bookchecke0_.item_id) as col_0_0_ from book_check bookchecke0_ where bookchecke0_.got=0 
 {executed in 2 msec}
2020-11-23 22:00:35.180 INFO  jdbc.resultsettable Line:610 - 
|---------|
|col_0_0_ |
|---------|
|442      |
|---------|

2020-11-23 22:00:35.205 INFO  jdbc.sqltiming Line:373 - select bookchecke0_.item_id as item_id1_2_, bookchecke0_.fsid as fsid2_2_, bookchecke0_.got 
as got3_2_, bookchecke0_.name as name4_2_, bookchecke0_.parse_fail as parse_fa5_2_, bookchecke0_.parsed 
as parsed6_2_, bookchecke0_.path as path7_2_, bookchecke0_.title as title8_2_, bookchecke0_.vid 
as vid9_2_ from book_check bookchecke0_ where bookchecke0_.fsid='776264130211843' and bookchecke0_.name='net_content' 
 {executed in 1 msec}
2020-11-23 22:00:35.208 INFO  jdbc.resultsettable Line:610 - 
|--------|---------|---------|---------|-----------|---------|---------|---------|---------|
|item_id |fsid     |got      |name     |parse_fail |parsed   |path     |title    |vid      |
|--------|---------|---------|---------|-----------|---------|---------|---------|---------|
|553     |[unread] |[unread] |[unread] |[unread]   |[unread] |[unread] |[unread] |[unread] |
|--------|---------|---------|---------|-----------|---------|---------|---------|---------|

